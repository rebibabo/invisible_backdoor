<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4626.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:37">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:33"><name pos:start="1:19" pos:end="1:31">CPUSPARCState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:30">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">abi_ulong</name></type> <name pos:start="5:15" pos:end="5:21">sf_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:30">target_signal_frame</name></name> <modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:34">sf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:19">up_psr</name></decl>, <decl pos:start="9:22" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:22" pos:end="9:23">pc</name></decl>, <decl pos:start="9:26" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:26" pos:end="9:28">npc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">target_sigset_t</name></type> <name pos:start="11:21" pos:end="11:23">set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">sigset_t</name></type> <name pos:start="13:14" pos:end="13:21">host_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name><init pos:start="15:12" pos:end="15:13">=<expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr></init></decl>, <decl pos:start="15:16" pos:end="15:16"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:16">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:11">sf_addr</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:35"><name pos:start="19:15" pos:end="19:17">env</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">regwptr</name><index pos:start="19:27" pos:end="19:35">[<expr pos:start="19:28" pos:end="19:34"><name pos:start="19:28" pos:end="19:34">UREG_FP</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:27">trace_user_do_sigreturn</name><argument_list pos:start="21:28" pos:end="21:41">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><name pos:start="21:29" pos:end="21:31">env</name></expr></argument>, <argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">sf_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:55">(<expr pos:start="23:9" pos:end="23:54"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:54"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:54">(<argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><name pos:start="23:27" pos:end="23:37">VERIFY_READ</name></expr></argument>, <argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><name pos:start="23:40" pos:end="23:41">sf</name></expr></argument>, <argument pos:start="23:44" pos:end="23:50"><expr pos:start="23:44" pos:end="23:50"><name pos:start="23:44" pos:end="23:50">sf_addr</name></expr></argument>, <argument pos:start="23:53" pos:end="23:53"><expr pos:start="23:53" pos:end="23:53"><literal type="number" pos:start="23:53" pos:end="23:53">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:57" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:27">

        <goto pos:start="25:9" pos:end="25:27">goto <name pos:start="25:14" pos:end="25:26">segv_and_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:63">/* 1. Make sure we are not getting garbage from the user */</comment>



    <if_stmt pos:start="35:5" pos:end="37:27"><if pos:start="35:5" pos:end="37:27">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:15">sf_addr</name> <operator pos:start="35:17" pos:end="35:17">&amp;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">3</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:27"><block_content pos:start="37:9" pos:end="37:27">

        <goto pos:start="37:9" pos:end="37:27">goto <name pos:start="37:14" pos:end="37:26">segv_and_exit</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:14">__get_user</name><argument_list pos:start="41:15" pos:end="41:41">(<argument pos:start="41:16" pos:end="41:17"><expr pos:start="41:16" pos:end="41:17"><name pos:start="41:16" pos:end="41:17">pc</name></expr></argument>,  <argument pos:start="41:21" pos:end="41:40"><expr pos:start="41:21" pos:end="41:40"><operator pos:start="41:21" pos:end="41:21">&amp;</operator><name pos:start="41:22" pos:end="41:40"><name pos:start="41:22" pos:end="41:23">sf</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:29">info</name><operator pos:start="41:30" pos:end="41:30">.</operator><name pos:start="41:31" pos:end="41:37">si_regs</name><operator pos:start="41:38" pos:end="41:38">.</operator><name pos:start="41:39" pos:end="41:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><call pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:14">__get_user</name><argument_list pos:start="43:15" pos:end="43:42">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">npc</name></expr></argument>, <argument pos:start="43:21" pos:end="43:41"><expr pos:start="43:21" pos:end="43:41"><operator pos:start="43:21" pos:end="43:21">&amp;</operator><name pos:start="43:22" pos:end="43:41"><name pos:start="43:22" pos:end="43:23">sf</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:29">info</name><operator pos:start="43:30" pos:end="43:30">.</operator><name pos:start="43:31" pos:end="43:37">si_regs</name><operator pos:start="43:38" pos:end="43:38">.</operator><name pos:start="43:39" pos:end="43:41">npc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:11">pc</name> <operator pos:start="47:13" pos:end="47:13">|</operator> <name pos:start="47:15" pos:end="47:17">npc</name><operator pos:start="47:18" pos:end="47:18">)</operator> <operator pos:start="47:20" pos:end="47:20">&amp;</operator> <literal type="number" pos:start="47:22" pos:end="47:22">3</literal></expr>)</condition> <block pos:start="47:25" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:27">

        <goto pos:start="49:9" pos:end="49:27">goto <name pos:start="49:14" pos:end="49:26">segv_and_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:30">/* 2. Restore the state */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><call pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:14">__get_user</name><argument_list pos:start="57:15" pos:end="57:45">(<argument pos:start="57:16" pos:end="57:21"><expr pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:21">up_psr</name></expr></argument>, <argument pos:start="57:24" pos:end="57:44"><expr pos:start="57:24" pos:end="57:44"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:44"><name pos:start="57:25" pos:end="57:26">sf</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:32">info</name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:40">si_regs</name><operator pos:start="57:41" pos:end="57:41">.</operator><name pos:start="57:42" pos:end="57:44">psr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:72">/* User can only change condition codes and FPU enabling in %psr. */</comment>

    <expr_stmt pos:start="63:5" pos:end="65:53"><expr pos:start="63:5" pos:end="65:52"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:12">psr</name></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <operator pos:start="63:16" pos:end="63:16">(</operator><name pos:start="63:17" pos:end="63:22">up_psr</name> <operator pos:start="63:24" pos:end="63:24">&amp;</operator> <operator pos:start="63:26" pos:end="63:26">(</operator><name pos:start="63:27" pos:end="63:33">PSR_ICC</name> <comment type="block" pos:start="63:35" pos:end="63:48">/* | PSR_EF */</comment><operator pos:start="63:49" pos:end="63:49">)</operator><operator pos:start="63:50" pos:end="63:50">)</operator>

            <operator pos:start="65:13" pos:end="65:13">|</operator> <operator pos:start="65:15" pos:end="65:15">(</operator><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:18">env</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:23">psr</name></name> <operator pos:start="65:25" pos:end="65:25">&amp;</operator> <operator pos:start="65:27" pos:end="65:27">~</operator><operator pos:start="65:28" pos:end="65:28">(</operator><name pos:start="65:29" pos:end="65:35">PSR_ICC</name> <comment type="block" pos:start="65:37" pos:end="65:50">/* | PSR_EF */</comment><operator pos:start="65:51" pos:end="65:51">)</operator><operator pos:start="65:52" pos:end="65:52">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:17"><expr pos:start="69:5" pos:end="69:16"><name pos:start="69:5" pos:end="69:11"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:11">pc</name></name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:16">pc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:12"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:12">npc</name></name> <operator pos:start="71:14" pos:end="71:14">=</operator> <name pos:start="71:16" pos:end="71:18">npc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:44"><expr pos:start="73:5" pos:end="73:43"><call pos:start="73:5" pos:end="73:43"><name pos:start="73:5" pos:end="73:14">__get_user</name><argument_list pos:start="73:15" pos:end="73:43">(<argument pos:start="73:16" pos:end="73:21"><expr pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:18">env</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:21">y</name></name></expr></argument>, <argument pos:start="73:24" pos:end="73:42"><expr pos:start="73:24" pos:end="73:42"><operator pos:start="73:24" pos:end="73:24">&amp;</operator><name pos:start="73:25" pos:end="73:42"><name pos:start="73:25" pos:end="73:26">sf</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:32">info</name><operator pos:start="73:33" pos:end="73:33">.</operator><name pos:start="73:34" pos:end="73:40">si_regs</name><operator pos:start="73:41" pos:end="73:41">.</operator><name pos:start="73:42" pos:end="73:42">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="79:5">for <control pos:start="75:9" pos:end="75:25">(<init pos:start="75:10" pos:end="75:13"><expr pos:start="75:10" pos:end="75:12"><name pos:start="75:10" pos:end="75:10">i</name><operator pos:start="75:11" pos:end="75:11">=</operator><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</init> <condition pos:start="75:15" pos:end="75:20"><expr pos:start="75:15" pos:end="75:19"><name pos:start="75:15" pos:end="75:15">i</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">8</literal></expr>;</condition> <incr pos:start="75:22" pos:end="75:24"><expr pos:start="75:22" pos:end="75:24"><name pos:start="75:22" pos:end="75:22">i</name><operator pos:start="75:23" pos:end="75:24">++</operator></expr></incr>)</control> <block pos:start="75:27" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:63">

        <expr_stmt pos:start="77:9" pos:end="77:63"><expr pos:start="77:9" pos:end="77:62"><call pos:start="77:9" pos:end="77:62"><name pos:start="77:9" pos:end="77:18">__get_user</name><argument_list pos:start="77:19" pos:end="77:62">(<argument pos:start="77:20" pos:end="77:32"><expr pos:start="77:20" pos:end="77:32"><name pos:start="77:20" pos:end="77:32"><name pos:start="77:20" pos:end="77:22">env</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:29">gregs</name><index pos:start="77:30" pos:end="77:32">[<expr pos:start="77:31" pos:end="77:31"><name pos:start="77:31" pos:end="77:31">i</name></expr>]</index></name></expr></argument>, <argument pos:start="77:35" pos:end="77:61"><expr pos:start="77:35" pos:end="77:61"><operator pos:start="77:35" pos:end="77:35">&amp;</operator><name pos:start="77:36" pos:end="77:61"><name pos:start="77:36" pos:end="77:37">sf</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:43">info</name><operator pos:start="77:44" pos:end="77:44">.</operator><name pos:start="77:45" pos:end="77:51">si_regs</name><operator pos:start="77:52" pos:end="77:52">.</operator><name pos:start="77:53" pos:end="77:58">u_regs</name><index pos:start="77:59" pos:end="77:61">[<expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="81:5" pos:end="85:5">for <control pos:start="81:9" pos:end="81:25">(<init pos:start="81:10" pos:end="81:13"><expr pos:start="81:10" pos:end="81:12"><name pos:start="81:10" pos:end="81:10">i</name><operator pos:start="81:11" pos:end="81:11">=</operator><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</init> <condition pos:start="81:15" pos:end="81:20"><expr pos:start="81:15" pos:end="81:19"><name pos:start="81:15" pos:end="81:15">i</name> <operator pos:start="81:17" pos:end="81:17">&lt;</operator> <literal type="number" pos:start="81:19" pos:end="81:19">8</literal></expr>;</condition> <incr pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:22">i</name><operator pos:start="81:23" pos:end="81:24">++</operator></expr></incr>)</control> <block pos:start="81:27" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:77">

        <expr_stmt pos:start="83:9" pos:end="83:77"><expr pos:start="83:9" pos:end="83:76"><call pos:start="83:9" pos:end="83:76"><name pos:start="83:9" pos:end="83:18">__get_user</name><argument_list pos:start="83:19" pos:end="83:76">(<argument pos:start="83:20" pos:end="83:44"><expr pos:start="83:20" pos:end="83:44"><name pos:start="83:20" pos:end="83:44"><name pos:start="83:20" pos:end="83:22">env</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:31">regwptr</name><index pos:start="83:32" pos:end="83:44">[<expr pos:start="83:33" pos:end="83:43"><name pos:start="83:33" pos:end="83:33">i</name> <operator pos:start="83:35" pos:end="83:35">+</operator> <name pos:start="83:37" pos:end="83:43">UREG_I0</name></expr>]</index></name></expr></argument>, <argument pos:start="83:47" pos:end="83:75"><expr pos:start="83:47" pos:end="83:75"><operator pos:start="83:47" pos:end="83:47">&amp;</operator><name pos:start="83:48" pos:end="83:75"><name pos:start="83:48" pos:end="83:49">sf</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:55">info</name><operator pos:start="83:56" pos:end="83:56">.</operator><name pos:start="83:57" pos:end="83:63">si_regs</name><operator pos:start="83:64" pos:end="83:64">.</operator><name pos:start="83:65" pos:end="83:70">u_regs</name><index pos:start="83:71" pos:end="83:75">[<expr pos:start="83:72" pos:end="83:74"><name pos:start="83:72" pos:end="83:72">i</name><operator pos:start="83:73" pos:end="83:73">+</operator><literal type="number" pos:start="83:74" pos:end="83:74">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="89:5" pos:end="97:11">/* FIXME: implement FPU save/restore:

         * __get_user(fpu_save, &amp;sf-&gt;fpu_save);

         * if (fpu_save)

         *        err |= restore_fpu_state(env, fpu_save);

         */</comment>



    <comment type="block" pos:start="101:5" pos:end="105:11">/* This is pretty much atomic, no amount locking would prevent

         * the races which exist anyways.

         */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:46"><expr pos:start="107:5" pos:end="107:45"><call pos:start="107:5" pos:end="107:45"><name pos:start="107:5" pos:end="107:14">__get_user</name><argument_list pos:start="107:15" pos:end="107:45">(<argument pos:start="107:16" pos:end="107:25"><expr pos:start="107:16" pos:end="107:25"><name pos:start="107:16" pos:end="107:25"><name pos:start="107:16" pos:end="107:18">set</name><operator pos:start="107:19" pos:end="107:19">.</operator><name pos:start="107:20" pos:end="107:22">sig</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><literal type="number" pos:start="107:24" pos:end="107:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="107:28" pos:end="107:44"><expr pos:start="107:28" pos:end="107:44"><operator pos:start="107:28" pos:end="107:28">&amp;</operator><name pos:start="107:29" pos:end="107:44"><name pos:start="107:29" pos:end="107:30">sf</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:36">info</name><operator pos:start="107:37" pos:end="107:37">.</operator><name pos:start="107:38" pos:end="107:44">si_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="109:5" pos:end="113:5">for<control pos:start="109:8" pos:end="109:42">(<init pos:start="109:9" pos:end="109:14"><expr pos:start="109:9" pos:end="109:13"><name pos:start="109:9" pos:end="109:9">i</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <literal type="number" pos:start="109:13" pos:end="109:13">1</literal></expr>;</init> <condition pos:start="109:16" pos:end="109:37"><expr pos:start="109:16" pos:end="109:36"><name pos:start="109:16" pos:end="109:16">i</name> <operator pos:start="109:18" pos:end="109:18">&lt;</operator> <name pos:start="109:20" pos:end="109:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="109:39" pos:end="109:41"><expr pos:start="109:39" pos:end="109:41"><name pos:start="109:39" pos:end="109:39">i</name><operator pos:start="109:40" pos:end="109:41">++</operator></expr></incr>)</control> <block pos:start="109:44" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:54">

        <expr_stmt pos:start="111:9" pos:end="111:54"><expr pos:start="111:9" pos:end="111:53"><call pos:start="111:9" pos:end="111:53"><name pos:start="111:9" pos:end="111:18">__get_user</name><argument_list pos:start="111:19" pos:end="111:53">(<argument pos:start="111:20" pos:end="111:29"><expr pos:start="111:20" pos:end="111:29"><name pos:start="111:20" pos:end="111:29"><name pos:start="111:20" pos:end="111:22">set</name><operator pos:start="111:23" pos:end="111:23">.</operator><name pos:start="111:24" pos:end="111:26">sig</name><index pos:start="111:27" pos:end="111:29">[<expr pos:start="111:28" pos:end="111:28"><name pos:start="111:28" pos:end="111:28">i</name></expr>]</index></name></expr></argument>, <argument pos:start="111:32" pos:end="111:52"><expr pos:start="111:32" pos:end="111:52"><operator pos:start="111:32" pos:end="111:32">&amp;</operator><name pos:start="111:33" pos:end="111:52"><name pos:start="111:33" pos:end="111:34">sf</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:45">extramask</name><index pos:start="111:46" pos:end="111:52">[<expr pos:start="111:47" pos:end="111:51"><name pos:start="111:47" pos:end="111:47">i</name> <operator pos:start="111:49" pos:end="111:49">-</operator> <literal type="number" pos:start="111:51" pos:end="111:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="117:5" pos:end="117:52"><expr pos:start="117:5" pos:end="117:51"><call pos:start="117:5" pos:end="117:51"><name pos:start="117:5" pos:end="117:34">target_to_host_sigset_internal</name><argument_list pos:start="117:35" pos:end="117:51">(<argument pos:start="117:36" pos:end="117:44"><expr pos:start="117:36" pos:end="117:44"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:44">host_set</name></expr></argument>, <argument pos:start="117:47" pos:end="117:50"><expr pos:start="117:47" pos:end="117:50"><operator pos:start="117:47" pos:end="117:47">&amp;</operator><name pos:start="117:48" pos:end="117:50">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:49"><expr pos:start="119:5" pos:end="119:48"><call pos:start="119:5" pos:end="119:48"><name pos:start="119:5" pos:end="119:18">do_sigprocmask</name><argument_list pos:start="119:19" pos:end="119:48">(<argument pos:start="119:20" pos:end="119:30"><expr pos:start="119:20" pos:end="119:30"><name pos:start="119:20" pos:end="119:30">SIG_SETMASK</name></expr></argument>, <argument pos:start="119:33" pos:end="119:41"><expr pos:start="119:33" pos:end="119:41"><operator pos:start="119:33" pos:end="119:33">&amp;</operator><name pos:start="119:34" pos:end="119:41">host_set</name></expr></argument>, <argument pos:start="119:44" pos:end="119:47"><expr pos:start="119:44" pos:end="119:47"><name pos:start="119:44" pos:end="119:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="123:5" pos:end="127:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:12">(<expr pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">err</name></expr>)</condition> <block pos:start="123:14" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:27">

        <goto pos:start="125:9" pos:end="125:27">goto <name pos:start="125:14" pos:end="125:26">segv_and_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:39"><expr pos:start="129:5" pos:end="129:38"><call pos:start="129:5" pos:end="129:38"><name pos:start="129:5" pos:end="129:22">unlock_user_struct</name><argument_list pos:start="129:23" pos:end="129:38">(<argument pos:start="129:24" pos:end="129:25"><expr pos:start="129:24" pos:end="129:25"><name pos:start="129:24" pos:end="129:25">sf</name></expr></argument>, <argument pos:start="129:28" pos:end="129:34"><expr pos:start="129:28" pos:end="129:34"><name pos:start="129:28" pos:end="129:34">sf_addr</name></expr></argument>, <argument pos:start="129:37" pos:end="129:37"><expr pos:start="129:37" pos:end="129:37"><literal type="number" pos:start="129:37" pos:end="129:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:27">return <expr pos:start="131:12" pos:end="131:26"><name pos:start="131:12" pos:end="131:26"><name pos:start="131:12" pos:end="131:14">env</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:23">regwptr</name><index pos:start="131:24" pos:end="131:26">[<expr pos:start="131:25" pos:end="131:25"><literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>]</index></name></expr>;</return>



<label pos:start="135:1" pos:end="135:14"><name pos:start="135:1" pos:end="135:13">segv_and_exit</name>:</label>

    <expr_stmt pos:start="137:5" pos:end="137:39"><expr pos:start="137:5" pos:end="137:38"><call pos:start="137:5" pos:end="137:38"><name pos:start="137:5" pos:end="137:22">unlock_user_struct</name><argument_list pos:start="137:23" pos:end="137:38">(<argument pos:start="137:24" pos:end="137:25"><expr pos:start="137:24" pos:end="137:25"><name pos:start="137:24" pos:end="137:25">sf</name></expr></argument>, <argument pos:start="137:28" pos:end="137:34"><expr pos:start="137:28" pos:end="137:34"><name pos:start="137:28" pos:end="137:34">sf_addr</name></expr></argument>, <argument pos:start="137:37" pos:end="137:37"><expr pos:start="137:37" pos:end="137:37"><literal type="number" pos:start="137:37" pos:end="137:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:30"><expr pos:start="139:5" pos:end="139:29"><call pos:start="139:5" pos:end="139:29"><name pos:start="139:5" pos:end="139:13">force_sig</name><argument_list pos:start="139:14" pos:end="139:29">(<argument pos:start="139:15" pos:end="139:28"><expr pos:start="139:15" pos:end="139:28"><name pos:start="139:15" pos:end="139:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
