<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22320.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">decode_splitmvs</name><parameter_list pos:start="1:20" pos:end="1:84">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">VP8Context</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">s</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:49">VP56RangeCoder</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">c</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><name pos:start="1:55" pos:end="1:67">VP8Macroblock</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">mb</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:83"><decl pos:start="1:74" pos:end="1:83"><type pos:start="1:74" pos:end="1:83"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:83">layout</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">part_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">VP8Macroblock</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">top_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">VP8Macroblock</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">left_mb</name> <init pos:start="11:28" pos:end="11:36">= <expr pos:start="11:30" pos:end="11:36"><operator pos:start="11:30" pos:end="11:30">&amp;</operator><name pos:start="11:31" pos:end="11:36"><name pos:start="11:31" pos:end="11:32">mb</name><index pos:start="11:33" pos:end="11:36">[<expr pos:start="11:34" pos:end="11:35"><operator pos:start="11:34" pos:end="11:34">-</operator><literal type="number" pos:start="11:35" pos:end="11:35">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:71"><decl pos:start="13:5" pos:end="13:70"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:32">mbsplits_left</name> <init pos:start="13:34" pos:end="13:70">= <expr pos:start="13:36" pos:end="13:70"><name pos:start="13:36" pos:end="13:70"><name pos:start="13:36" pos:end="13:47">vp8_mbsplits</name><index pos:start="13:48" pos:end="13:70">[<expr pos:start="13:49" pos:end="13:69"><name pos:start="13:49" pos:end="13:69"><name pos:start="13:49" pos:end="13:55">left_mb</name><operator pos:start="13:56" pos:end="13:57">-&gt;</operator><name pos:start="13:58" pos:end="13:69">partitioning</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:31">mbsplits_top</name></decl>, <decl pos:start="15:34" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:34" pos:end="15:34">*</modifier></type><name pos:start="15:35" pos:end="15:46">mbsplits_cur</name></decl>, <decl pos:start="15:49" pos:end="15:57"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:49" pos:end="15:49">*</modifier></type><name pos:start="15:50" pos:end="15:57">firstidx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:10">VP56mv</name> <modifier pos:start="17:12" pos:end="17:12">*</modifier></type><name pos:start="17:13" pos:end="17:18">top_mv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:10">VP56mv</name> <modifier pos:start="19:12" pos:end="19:12">*</modifier></type><name pos:start="19:13" pos:end="19:19">left_mv</name> <init pos:start="19:21" pos:end="19:34">= <expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:29">left_mb</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:34">bmv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:30"><decl pos:start="21:5" pos:end="21:29"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:10">VP56mv</name> <modifier pos:start="21:12" pos:end="21:12">*</modifier></type><name pos:start="21:13" pos:end="21:18">cur_mv</name>  <init pos:start="21:21" pos:end="21:29">= <expr pos:start="21:23" pos:end="21:29"><name pos:start="21:23" pos:end="21:29"><name pos:start="21:23" pos:end="21:24">mb</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:29">bmv</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:39"><if pos:start="25:5" pos:end="27:24">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">layout</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:24"><block_content pos:start="27:9" pos:end="27:24"> <comment type="line" pos:start="25:18" pos:end="25:58">// layout is inlined, s-&gt;mb_layout is not</comment>

        <expr_stmt pos:start="27:9" pos:end="27:24"><expr pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:14">top_mb</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">&amp;</operator><name pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:20">mb</name><index pos:start="27:21" pos:end="27:23">[<expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:39">else<block type="pseudo" pos:start="31:9" pos:end="31:39"><block_content pos:start="31:9" pos:end="31:39">

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:14">top_mb</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:38"><name pos:start="31:19" pos:end="31:20">mb</name><index pos:start="31:21" pos:end="31:38">[<expr pos:start="31:22" pos:end="31:37"><operator pos:start="31:22" pos:end="31:22">-</operator><name pos:start="31:23" pos:end="31:33"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:33">mb_width</name></name> <operator pos:start="31:35" pos:end="31:35">-</operator> <literal type="number" pos:start="31:37" pos:end="31:37">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:54"><expr pos:start="33:5" pos:end="33:53"><name pos:start="33:5" pos:end="33:16">mbsplits_top</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:53"><name pos:start="33:20" pos:end="33:31">vp8_mbsplits</name><index pos:start="33:32" pos:end="33:53">[<expr pos:start="33:33" pos:end="33:52"><name pos:start="33:33" pos:end="33:52"><name pos:start="33:33" pos:end="33:38">top_mb</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:52">partitioning</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:31"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:10">top_mv</name>       <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:30"><name pos:start="35:20" pos:end="35:25">top_mb</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:30">bmv</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="53:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:58">(<expr pos:start="39:9" pos:end="39:57"><call pos:start="39:9" pos:end="39:57"><name pos:start="39:9" pos:end="39:33">vp56_rac_get_prob_branchy</name><argument_list pos:start="39:34" pos:end="39:57">(<argument pos:start="39:35" pos:end="39:35"><expr pos:start="39:35" pos:end="39:35"><name pos:start="39:35" pos:end="39:35">c</name></expr></argument>, <argument pos:start="39:38" pos:end="39:56"><expr pos:start="39:38" pos:end="39:56"><name pos:start="39:38" pos:end="39:56"><name pos:start="39:38" pos:end="39:53">vp8_mbsplit_prob</name><index pos:start="39:54" pos:end="39:56">[<expr pos:start="39:55" pos:end="39:55"><literal type="number" pos:start="39:55" pos:end="39:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:60" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:43">

        <if_stmt pos:start="41:9" pos:end="47:43"><if pos:start="41:9" pos:end="43:88">if <condition pos:start="41:12" pos:end="41:62">(<expr pos:start="41:13" pos:end="41:61"><call pos:start="41:13" pos:end="41:61"><name pos:start="41:13" pos:end="41:37">vp56_rac_get_prob_branchy</name><argument_list pos:start="41:38" pos:end="41:61">(<argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">c</name></expr></argument>, <argument pos:start="41:42" pos:end="41:60"><expr pos:start="41:42" pos:end="41:60"><name pos:start="41:42" pos:end="41:60"><name pos:start="41:42" pos:end="41:57">vp8_mbsplit_prob</name><index pos:start="41:58" pos:end="41:60">[<expr pos:start="41:59" pos:end="41:59"><literal type="number" pos:start="41:59" pos:end="41:59">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:88"><block_content pos:start="43:13" pos:end="43:88">

            <expr_stmt pos:start="43:13" pos:end="43:88"><expr pos:start="43:13" pos:end="43:87"><name pos:start="43:13" pos:end="43:20">part_idx</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:43">VP8_SPLITMVMODE_16x8</name> <operator pos:start="43:45" pos:end="43:45">+</operator> <call pos:start="43:47" pos:end="43:87"><name pos:start="43:47" pos:end="43:63">vp56_rac_get_prob</name><argument_list pos:start="43:64" pos:end="43:87">(<argument pos:start="43:65" pos:end="43:65"><expr pos:start="43:65" pos:end="43:65"><name pos:start="43:65" pos:end="43:65">c</name></expr></argument>, <argument pos:start="43:68" pos:end="43:86"><expr pos:start="43:68" pos:end="43:86"><name pos:start="43:68" pos:end="43:86"><name pos:start="43:68" pos:end="43:83">vp8_mbsplit_prob</name><index pos:start="43:84" pos:end="43:86">[<expr pos:start="43:85" pos:end="43:85"><literal type="number" pos:start="43:85" pos:end="43:85">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="45:9" pos:end="47:43">else<block type="pseudo" pos:start="47:13" pos:end="47:43"><block_content pos:start="47:13" pos:end="47:43">

            <expr_stmt pos:start="47:13" pos:end="47:43"><expr pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:20">part_idx</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:42">VP8_SPLITMVMODE_8x8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:39">

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:16">part_idx</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:38">VP8_SPLITMVMODE_4x4</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:51"><expr pos:start="57:5" pos:end="57:50"><name pos:start="57:5" pos:end="57:7">num</name>              <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:50"><name pos:start="57:24" pos:end="57:40">vp8_mbsplit_count</name><index pos:start="57:41" pos:end="57:50">[<expr pos:start="57:42" pos:end="57:49"><name pos:start="57:42" pos:end="57:49">part_idx</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:48"><expr pos:start="59:5" pos:end="59:45"><name pos:start="59:5" pos:end="59:16">mbsplits_cur</name>     <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:45"><name pos:start="59:24" pos:end="59:35">vp8_mbsplits</name><index pos:start="59:36" pos:end="59:45">[<expr pos:start="59:37" pos:end="59:44"><name pos:start="59:37" pos:end="59:44">part_idx</name></expr>]</index></name></expr><operator pos:start="59:46" pos:end="59:46">,</operator>

    <expr pos:start="61:5" pos:end="61:47"><name pos:start="61:5" pos:end="61:12">firstidx</name>         <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:47"><name pos:start="61:24" pos:end="61:37">vp8_mbfirstidx</name><index pos:start="61:38" pos:end="61:47">[<expr pos:start="61:39" pos:end="61:46"><name pos:start="61:39" pos:end="61:46">part_idx</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:6">mb</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:20">partitioning</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:31">part_idx</name></expr>;</expr_stmt>



    <for pos:start="67:5" pos:end="127:5">for <control pos:start="67:9" pos:end="67:29">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">n</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:24"><expr pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:17">n</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:23">num</name></expr>;</condition> <incr pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:26">n</name><operator pos:start="67:27" pos:end="67:28">++</operator></expr></incr>)</control> <block pos:start="67:31" pos:end="127:5">{<block_content pos:start="69:9" pos:end="125:9">

        <decl_stmt pos:start="69:9" pos:end="69:28"><decl pos:start="69:9" pos:end="69:27"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:13">k</name> <init pos:start="69:15" pos:end="69:27">= <expr pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:24">firstidx</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:29"><decl pos:start="71:9" pos:end="71:21"><type pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:16">uint32_t</name></type> <name pos:start="71:18" pos:end="71:21">left</name></decl>, <decl pos:start="71:24" pos:end="71:28"><type ref="prev" pos:start="71:9" pos:end="71:16"/><name pos:start="71:24" pos:end="71:28">above</name></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:34"><decl pos:start="73:9" pos:end="73:33"><type pos:start="73:9" pos:end="73:23"><specifier pos:start="73:9" pos:end="73:13">const</specifier> <name pos:start="73:15" pos:end="73:21">uint8_t</name> <modifier pos:start="73:23" pos:end="73:23">*</modifier></type><name pos:start="73:24" pos:end="73:33">submv_prob</name></decl>;</decl_stmt>



        <if_stmt pos:start="77:9" pos:end="83:58"><if pos:start="77:9" pos:end="79:60">if <condition pos:start="77:12" pos:end="77:21">(<expr pos:start="77:13" pos:end="77:20"><operator pos:start="77:13" pos:end="77:13">!</operator><operator pos:start="77:14" pos:end="77:14">(</operator><name pos:start="77:15" pos:end="77:15">k</name> <operator pos:start="77:17" pos:end="77:17">&amp;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">3</literal><operator pos:start="77:20" pos:end="77:20">)</operator></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:60"><block_content pos:start="79:13" pos:end="79:60">

            <expr_stmt pos:start="79:13" pos:end="79:60"><expr pos:start="79:13" pos:end="79:59"><name pos:start="79:13" pos:end="79:16">left</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:59"><name pos:start="79:20" pos:end="79:27">AV_RN32A</name><argument_list pos:start="79:28" pos:end="79:59">(<argument pos:start="79:29" pos:end="79:58"><expr pos:start="79:29" pos:end="79:58"><operator pos:start="79:29" pos:end="79:29">&amp;</operator><name pos:start="79:30" pos:end="79:58"><name pos:start="79:30" pos:end="79:36">left_mv</name><index pos:start="79:37" pos:end="79:58">[<expr pos:start="79:38" pos:end="79:57"><name pos:start="79:38" pos:end="79:57"><name pos:start="79:38" pos:end="79:50">mbsplits_left</name><index pos:start="79:51" pos:end="79:57">[<expr pos:start="79:52" pos:end="79:56"><name pos:start="79:52" pos:end="79:52">k</name> <operator pos:start="79:54" pos:end="79:54">+</operator> <literal type="number" pos:start="79:56" pos:end="79:56">3</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="81:9" pos:end="83:58">else<block type="pseudo" pos:start="83:13" pos:end="83:58"><block_content pos:start="83:13" pos:end="83:58">

            <expr_stmt pos:start="83:13" pos:end="83:58"><expr pos:start="83:13" pos:end="83:57"><name pos:start="83:13" pos:end="83:16">left</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:57"><name pos:start="83:20" pos:end="83:27">AV_RN32A</name><argument_list pos:start="83:28" pos:end="83:57">(<argument pos:start="83:29" pos:end="83:56"><expr pos:start="83:29" pos:end="83:56"><operator pos:start="83:29" pos:end="83:29">&amp;</operator><name pos:start="83:30" pos:end="83:56"><name pos:start="83:30" pos:end="83:35">cur_mv</name><index pos:start="83:36" pos:end="83:56">[<expr pos:start="83:37" pos:end="83:55"><name pos:start="83:37" pos:end="83:55"><name pos:start="83:37" pos:end="83:48">mbsplits_cur</name><index pos:start="83:49" pos:end="83:55">[<expr pos:start="83:50" pos:end="83:54"><name pos:start="83:50" pos:end="83:50">k</name> <operator pos:start="83:52" pos:end="83:52">-</operator> <literal type="number" pos:start="83:54" pos:end="83:54">1</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="85:9" pos:end="91:59"><if pos:start="85:9" pos:end="87:60">if <condition pos:start="85:12" pos:end="85:19">(<expr pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:13">k</name> <operator pos:start="85:15" pos:end="85:16">&lt;=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">3</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:60"><block_content pos:start="87:13" pos:end="87:60">

            <expr_stmt pos:start="87:13" pos:end="87:60"><expr pos:start="87:13" pos:end="87:59"><name pos:start="87:13" pos:end="87:17">above</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <call pos:start="87:21" pos:end="87:59"><name pos:start="87:21" pos:end="87:28">AV_RN32A</name><argument_list pos:start="87:29" pos:end="87:59">(<argument pos:start="87:30" pos:end="87:58"><expr pos:start="87:30" pos:end="87:58"><operator pos:start="87:30" pos:end="87:30">&amp;</operator><name pos:start="87:31" pos:end="87:58"><name pos:start="87:31" pos:end="87:36">top_mv</name><index pos:start="87:37" pos:end="87:58">[<expr pos:start="87:38" pos:end="87:57"><name pos:start="87:38" pos:end="87:57"><name pos:start="87:38" pos:end="87:49">mbsplits_top</name><index pos:start="87:50" pos:end="87:57">[<expr pos:start="87:51" pos:end="87:56"><name pos:start="87:51" pos:end="87:51">k</name> <operator pos:start="87:53" pos:end="87:53">+</operator> <literal type="number" pos:start="87:55" pos:end="87:56">12</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="89:9" pos:end="91:59">else<block type="pseudo" pos:start="91:13" pos:end="91:59"><block_content pos:start="91:13" pos:end="91:59">

            <expr_stmt pos:start="91:13" pos:end="91:59"><expr pos:start="91:13" pos:end="91:58"><name pos:start="91:13" pos:end="91:17">above</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:58"><name pos:start="91:21" pos:end="91:28">AV_RN32A</name><argument_list pos:start="91:29" pos:end="91:58">(<argument pos:start="91:30" pos:end="91:57"><expr pos:start="91:30" pos:end="91:57"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:57"><name pos:start="91:31" pos:end="91:36">cur_mv</name><index pos:start="91:37" pos:end="91:57">[<expr pos:start="91:38" pos:end="91:56"><name pos:start="91:38" pos:end="91:56"><name pos:start="91:38" pos:end="91:49">mbsplits_cur</name><index pos:start="91:50" pos:end="91:56">[<expr pos:start="91:51" pos:end="91:55"><name pos:start="91:51" pos:end="91:51">k</name> <operator pos:start="91:53" pos:end="91:53">-</operator> <literal type="number" pos:start="91:55" pos:end="91:55">4</literal></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:18">submv_prob</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <call pos:start="95:22" pos:end="95:48"><name pos:start="95:22" pos:end="95:35">get_submv_prob</name><argument_list pos:start="95:36" pos:end="95:48">(<argument pos:start="95:37" pos:end="95:40"><expr pos:start="95:37" pos:end="95:40"><name pos:start="95:37" pos:end="95:40">left</name></expr></argument>, <argument pos:start="95:43" pos:end="95:47"><expr pos:start="95:43" pos:end="95:47"><name pos:start="95:43" pos:end="95:47">above</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="125:9"><if pos:start="99:9" pos:end="121:9">if <condition pos:start="99:12" pos:end="99:56">(<expr pos:start="99:13" pos:end="99:55"><call pos:start="99:13" pos:end="99:55"><name pos:start="99:13" pos:end="99:37">vp56_rac_get_prob_branchy</name><argument_list pos:start="99:38" pos:end="99:55">(<argument pos:start="99:39" pos:end="99:39"><expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">c</name></expr></argument>, <argument pos:start="99:42" pos:end="99:54"><expr pos:start="99:42" pos:end="99:54"><name pos:start="99:42" pos:end="99:54"><name pos:start="99:42" pos:end="99:51">submv_prob</name><index pos:start="99:52" pos:end="99:54">[<expr pos:start="99:53" pos:end="99:53"><literal type="number" pos:start="99:53" pos:end="99:53">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:58" pos:end="121:9">{<block_content pos:start="101:13" pos:end="119:13">

            <if_stmt pos:start="101:13" pos:end="119:13"><if pos:start="101:13" pos:end="115:13">if <condition pos:start="101:16" pos:end="101:60">(<expr pos:start="101:17" pos:end="101:59"><call pos:start="101:17" pos:end="101:59"><name pos:start="101:17" pos:end="101:41">vp56_rac_get_prob_branchy</name><argument_list pos:start="101:42" pos:end="101:59">(<argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><name pos:start="101:43" pos:end="101:43">c</name></expr></argument>, <argument pos:start="101:46" pos:end="101:58"><expr pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:58"><name pos:start="101:46" pos:end="101:55">submv_prob</name><index pos:start="101:56" pos:end="101:58">[<expr pos:start="101:57" pos:end="101:57"><literal type="number" pos:start="101:57" pos:end="101:57">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:62" pos:end="115:13">{<block_content pos:start="103:17" pos:end="113:17">

                <if_stmt pos:start="103:17" pos:end="113:17"><if pos:start="103:17" pos:end="109:17">if <condition pos:start="103:20" pos:end="103:64">(<expr pos:start="103:21" pos:end="103:63"><call pos:start="103:21" pos:end="103:63"><name pos:start="103:21" pos:end="103:45">vp56_rac_get_prob_branchy</name><argument_list pos:start="103:46" pos:end="103:63">(<argument pos:start="103:47" pos:end="103:47"><expr pos:start="103:47" pos:end="103:47"><name pos:start="103:47" pos:end="103:47">c</name></expr></argument>, <argument pos:start="103:50" pos:end="103:62"><expr pos:start="103:50" pos:end="103:62"><name pos:start="103:50" pos:end="103:62"><name pos:start="103:50" pos:end="103:59">submv_prob</name><index pos:start="103:60" pos:end="103:62">[<expr pos:start="103:61" pos:end="103:61"><literal type="number" pos:start="103:61" pos:end="103:61">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:66" pos:end="109:17">{<block_content pos:start="105:21" pos:end="107:84">

                    <expr_stmt pos:start="105:21" pos:end="105:84"><expr pos:start="105:21" pos:end="105:83"><name pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:22">mb</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:27">bmv</name><index pos:start="105:28" pos:end="105:30">[<expr pos:start="105:29" pos:end="105:29"><name pos:start="105:29" pos:end="105:29">n</name></expr>]</index></name><operator pos:start="105:31" pos:end="105:31">.</operator><name pos:start="105:32" pos:end="105:32">y</name> <operator pos:start="105:34" pos:end="105:34">=</operator> <name pos:start="105:36" pos:end="105:43"><name pos:start="105:36" pos:end="105:37">mb</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:41">mv</name><operator pos:start="105:42" pos:end="105:42">.</operator><name pos:start="105:43" pos:end="105:43">y</name></name> <operator pos:start="105:45" pos:end="105:45">+</operator> <call pos:start="105:47" pos:end="105:83"><name pos:start="105:47" pos:end="105:63">read_mv_component</name><argument_list pos:start="105:64" pos:end="105:83">(<argument pos:start="105:65" pos:end="105:65"><expr pos:start="105:65" pos:end="105:65"><name pos:start="105:65" pos:end="105:65">c</name></expr></argument>, <argument pos:start="105:68" pos:end="105:82"><expr pos:start="105:68" pos:end="105:82"><name pos:start="105:68" pos:end="105:82"><name pos:start="105:68" pos:end="105:68">s</name><operator pos:start="105:69" pos:end="105:70">-&gt;</operator><name pos:start="105:71" pos:end="105:74">prob</name><operator pos:start="105:75" pos:end="105:76">-&gt;</operator><name pos:start="105:77" pos:end="105:79">mvc</name><index pos:start="105:80" pos:end="105:82">[<expr pos:start="105:81" pos:end="105:81"><literal type="number" pos:start="105:81" pos:end="105:81">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:84"><expr pos:start="107:21" pos:end="107:83"><name pos:start="107:21" pos:end="107:30"><name pos:start="107:21" pos:end="107:22">mb</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:27">bmv</name><index pos:start="107:28" pos:end="107:30">[<expr pos:start="107:29" pos:end="107:29"><name pos:start="107:29" pos:end="107:29">n</name></expr>]</index></name><operator pos:start="107:31" pos:end="107:31">.</operator><name pos:start="107:32" pos:end="107:32">x</name> <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:43"><name pos:start="107:36" pos:end="107:37">mb</name><operator pos:start="107:38" pos:end="107:39">-&gt;</operator><name pos:start="107:40" pos:end="107:41">mv</name><operator pos:start="107:42" pos:end="107:42">.</operator><name pos:start="107:43" pos:end="107:43">x</name></name> <operator pos:start="107:45" pos:end="107:45">+</operator> <call pos:start="107:47" pos:end="107:83"><name pos:start="107:47" pos:end="107:63">read_mv_component</name><argument_list pos:start="107:64" pos:end="107:83">(<argument pos:start="107:65" pos:end="107:65"><expr pos:start="107:65" pos:end="107:65"><name pos:start="107:65" pos:end="107:65">c</name></expr></argument>, <argument pos:start="107:68" pos:end="107:82"><expr pos:start="107:68" pos:end="107:82"><name pos:start="107:68" pos:end="107:82"><name pos:start="107:68" pos:end="107:68">s</name><operator pos:start="107:69" pos:end="107:70">-&gt;</operator><name pos:start="107:71" pos:end="107:74">prob</name><operator pos:start="107:75" pos:end="107:76">-&gt;</operator><name pos:start="107:77" pos:end="107:79">mvc</name><index pos:start="107:80" pos:end="107:82">[<expr pos:start="107:81" pos:end="107:81"><literal type="number" pos:start="107:81" pos:end="107:81">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="109:19" pos:end="113:17">else <block pos:start="109:24" pos:end="113:17">{<block_content pos:start="111:21" pos:end="111:43">

                    <expr_stmt pos:start="111:21" pos:end="111:43"><expr pos:start="111:21" pos:end="111:42"><call pos:start="111:21" pos:end="111:42"><name pos:start="111:21" pos:end="111:29">AV_ZERO32</name><argument_list pos:start="111:30" pos:end="111:42">(<argument pos:start="111:31" pos:end="111:41"><expr pos:start="111:31" pos:end="111:41"><operator pos:start="111:31" pos:end="111:31">&amp;</operator><name pos:start="111:32" pos:end="111:41"><name pos:start="111:32" pos:end="111:33">mb</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:38">bmv</name><index pos:start="111:39" pos:end="111:41">[<expr pos:start="111:40" pos:end="111:40"><name pos:start="111:40" pos:end="111:40">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="119:13">else <block pos:start="115:20" pos:end="119:13">{<block_content pos:start="117:17" pos:end="117:45">

                <expr_stmt pos:start="117:17" pos:end="117:45"><expr pos:start="117:17" pos:end="117:44"><call pos:start="117:17" pos:end="117:44"><name pos:start="117:17" pos:end="117:24">AV_WN32A</name><argument_list pos:start="117:25" pos:end="117:44">(<argument pos:start="117:26" pos:end="117:36"><expr pos:start="117:26" pos:end="117:36"><operator pos:start="117:26" pos:end="117:26">&amp;</operator><name pos:start="117:27" pos:end="117:36"><name pos:start="117:27" pos:end="117:28">mb</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:33">bmv</name><index pos:start="117:34" pos:end="117:36">[<expr pos:start="117:35" pos:end="117:35"><name pos:start="117:35" pos:end="117:35">n</name></expr>]</index></name></expr></argument>, <argument pos:start="117:39" pos:end="117:43"><expr pos:start="117:39" pos:end="117:43"><name pos:start="117:39" pos:end="117:43">above</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="125:9">else <block pos:start="121:16" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:40">

            <expr_stmt pos:start="123:13" pos:end="123:40"><expr pos:start="123:13" pos:end="123:39"><call pos:start="123:13" pos:end="123:39"><name pos:start="123:13" pos:end="123:20">AV_WN32A</name><argument_list pos:start="123:21" pos:end="123:39">(<argument pos:start="123:22" pos:end="123:32"><expr pos:start="123:22" pos:end="123:32"><operator pos:start="123:22" pos:end="123:22">&amp;</operator><name pos:start="123:23" pos:end="123:32"><name pos:start="123:23" pos:end="123:24">mb</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:29">bmv</name><index pos:start="123:30" pos:end="123:32">[<expr pos:start="123:31" pos:end="123:31"><name pos:start="123:31" pos:end="123:31">n</name></expr>]</index></name></expr></argument>, <argument pos:start="123:35" pos:end="123:38"><expr pos:start="123:35" pos:end="123:38"><name pos:start="123:35" pos:end="123:38">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="131:5" pos:end="131:15">return <expr pos:start="131:12" pos:end="131:14"><name pos:start="131:12" pos:end="131:14">num</name></expr>;</return>

</block_content>}</block></function>
</unit>
