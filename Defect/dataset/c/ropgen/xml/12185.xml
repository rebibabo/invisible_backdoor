<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12185.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">lag_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:72">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:71"><decl pos:start="3:57" pos:end="3:71"><type pos:start="3:57" pos:end="3:71"><name pos:start="3:57" pos:end="3:64">AVPacket</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="257:1">{<block_content pos:start="7:5" pos:end="255:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">LagarithContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">l</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier><specifier pos:start="13:14" pos:end="13:18">const</specifier></type> <name pos:start="13:20" pos:end="13:20">p</name> <init pos:start="13:22" pos:end="13:34">= <expr pos:start="13:24" pos:end="13:34"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:25">l</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:21">frametype</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:57"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:22">offset_gu</name> <init pos:start="17:24" pos:end="17:26">= <expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></init></decl>, <decl pos:start="17:29" pos:end="17:41"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:29" pos:end="17:37">offset_bv</name> <init pos:start="17:39" pos:end="17:41">= <expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr></init></decl>, <decl pos:start="17:44" pos:end="17:56"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:44" pos:end="17:52">offset_ry</name> <init pos:start="17:54" pos:end="17:56">= <expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">9</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:12">offs</name><index pos:start="19:13" pos:end="19:15">[<expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:20"><name pos:start="21:14" pos:end="21:17">srcs</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>]</index></name></decl>, <decl pos:start="21:23" pos:end="21:26"><type ref="prev" pos:start="21:5" pos:end="21:13"><modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:26">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">j</name></decl>, <decl pos:start="23:15" pos:end="23:24"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:20">planes</name> <init pos:start="23:22" pos:end="23:24">= <expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">3</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:27"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">AVFrame</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:20">picture</name> <init pos:start="27:22" pos:end="27:27">= <expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="33:40"><if pos:start="31:5" pos:end="33:40">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">p</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">data</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:40"><block_content pos:start="33:9" pos:end="33:40">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:29">release_buffer</name></name><argument_list pos:start="33:30" pos:end="33:39">(<argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:35">avctx</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">p</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">reference</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">p</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">key_frame</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:13">frametype</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:19">buf</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:13">offset_gu</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:23">AV_RL32</name><argument_list pos:start="47:24" pos:end="47:32">(<argument pos:start="47:25" pos:end="47:31"><expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:27">buf</name> <operator pos:start="47:29" pos:end="47:29">+</operator> <literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:13">offset_bv</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:23">AV_RL32</name><argument_list pos:start="49:24" pos:end="49:32">(<argument pos:start="49:25" pos:end="49:31"><expr pos:start="49:25" pos:end="49:31"><name pos:start="49:25" pos:end="49:27">buf</name> <operator pos:start="49:29" pos:end="49:29">+</operator> <literal type="number" pos:start="49:31" pos:end="49:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="53:5" pos:end="245:5">switch <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:21">frametype</name></expr>)</condition> <block pos:start="53:24" pos:end="245:5">{<block_content pos:start="55:5" pos:end="243:18">

    <case pos:start="55:5" pos:end="55:26">case <expr pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:25">FRAME_SOLID_RGBA</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:13">avctx</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">pix_fmt</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:38">PIX_FMT_RGB32</name></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:44">(<expr pos:start="61:13" pos:end="61:43"><call pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:17">avctx</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">get_buffer</name></name><argument_list pos:start="61:30" pos:end="61:39">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">avctx</name></expr></argument>, <argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="61:41" pos:end="61:41">&lt;</operator> <literal type="number" pos:start="61:43" pos:end="61:43">0</literal></expr>)</condition> <block pos:start="61:46" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:65"><expr pos:start="63:13" pos:end="63:64"><call pos:start="63:13" pos:end="63:64"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:64">(<argument pos:start="63:20" pos:end="63:24"><expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:24">avctx</name></expr></argument>, <argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:41" pos:end="63:63"><expr pos:start="63:41" pos:end="63:63"><literal type="string" pos:start="63:41" pos:end="63:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:11">dst</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:24"><name pos:start="71:15" pos:end="71:15">p</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:21">data</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="73:9" pos:end="81:9">for <control pos:start="73:13" pos:end="73:43">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">j</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:38"><expr pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:21">j</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:29">avctx</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:37">height</name></name></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">j</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control> <block pos:start="73:45" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:34">

            <for pos:start="75:13" pos:end="77:48">for <control pos:start="75:17" pos:end="75:46">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">i</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:41"><expr pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:25">i</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <name pos:start="75:29" pos:end="75:40"><name pos:start="75:29" pos:end="75:33">avctx</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:40">width</name></name></expr>;</condition> <incr pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><name pos:start="75:43" pos:end="75:43">i</name><operator pos:start="75:44" pos:end="75:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:17" pos:end="77:48"><block_content pos:start="77:17" pos:end="77:48">

                <expr_stmt pos:start="77:17" pos:end="77:48"><expr pos:start="77:17" pos:end="77:47"><call pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:23">AV_WN32</name><argument_list pos:start="77:24" pos:end="77:47">(<argument pos:start="77:25" pos:end="77:35"><expr pos:start="77:25" pos:end="77:35"><name pos:start="77:25" pos:end="77:27">dst</name> <operator pos:start="77:29" pos:end="77:29">+</operator> <name pos:start="77:31" pos:end="77:31">i</name> <operator pos:start="77:33" pos:end="77:33">*</operator> <literal type="number" pos:start="77:35" pos:end="77:35">4</literal></expr></argument>, <argument pos:start="77:38" pos:end="77:46"><expr pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:46">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="79:13" pos:end="79:34"><expr pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:15">dst</name> <operator pos:start="79:17" pos:end="79:18">+=</operator> <name pos:start="79:20" pos:end="79:33"><name pos:start="79:20" pos:end="79:20">p</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">linesize</name><index pos:start="79:31" pos:end="79:33">[<expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:26">case <expr pos:start="85:10" pos:end="85:25"><name pos:start="85:10" pos:end="85:25">FRAME_ARITH_RGBA</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:13">avctx</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:22">pix_fmt</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:38">PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:19"><expr pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:14">planes</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:17">offset_ry</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:12">offs</name><index pos:start="93:13" pos:end="93:15">[<expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">3</literal></expr>]</index></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:34"><name pos:start="93:19" pos:end="93:25">AV_RL32</name><argument_list pos:start="93:26" pos:end="93:34">(<argument pos:start="93:27" pos:end="93:33"><expr pos:start="93:27" pos:end="93:33"><name pos:start="93:27" pos:end="93:29">buf</name> <operator pos:start="93:31" pos:end="93:31">+</operator> <literal type="number" pos:start="93:33" pos:end="93:33">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="95:5" pos:end="95:27">case <expr pos:start="95:10" pos:end="95:26"><name pos:start="95:10" pos:end="95:26">FRAME_ARITH_RGB24</name></expr>:</case>

        <if_stmt pos:start="97:9" pos:end="99:43"><if pos:start="97:9" pos:end="99:43">if <condition pos:start="97:12" pos:end="97:43">(<expr pos:start="97:13" pos:end="97:42"><name pos:start="97:13" pos:end="97:21">frametype</name> <operator pos:start="97:23" pos:end="97:24">==</operator> <name pos:start="97:26" pos:end="97:42">FRAME_ARITH_RGB24</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:43"><block_content pos:start="99:13" pos:end="99:43">

            <expr_stmt pos:start="99:13" pos:end="99:43"><expr pos:start="99:13" pos:end="99:42"><name pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:17">avctx</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:26">pix_fmt</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:42">PIX_FMT_RGB24</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:44">(<expr pos:start="103:13" pos:end="103:43"><call pos:start="103:13" pos:end="103:39"><name pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:17">avctx</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:29">get_buffer</name></name><argument_list pos:start="103:30" pos:end="103:39">(<argument pos:start="103:31" pos:end="103:35"><expr pos:start="103:31" pos:end="103:35"><name pos:start="103:31" pos:end="103:35">avctx</name></expr></argument>, <argument pos:start="103:38" pos:end="103:38"><expr pos:start="103:38" pos:end="103:38"><name pos:start="103:38" pos:end="103:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="103:41" pos:end="103:41">&lt;</operator> <literal type="number" pos:start="103:43" pos:end="103:43">0</literal></expr>)</condition> <block pos:start="103:46" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:22">

            <expr_stmt pos:start="105:13" pos:end="105:65"><expr pos:start="105:13" pos:end="105:64"><call pos:start="105:13" pos:end="105:64"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="105:64">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:41" pos:end="105:63"><expr pos:start="105:41" pos:end="105:63"><literal type="string" pos:start="105:41" pos:end="105:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:22">return <expr pos:start="107:20" pos:end="107:21"><operator pos:start="107:20" pos:end="107:20">-</operator><literal type="number" pos:start="107:21" pos:end="107:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:12">offs</name><index pos:start="113:13" pos:end="113:15">[<expr pos:start="113:14" pos:end="113:14"><literal type="number" pos:start="113:14" pos:end="113:14">0</literal></expr>]</index></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:27">offset_bv</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:28"><expr pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:12">offs</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">1</literal></expr>]</index></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:27">offset_gu</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:12">offs</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">2</literal></expr>]</index></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:27">offset_ry</name></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="135:9"><if pos:start="121:9" pos:end="135:9">if <condition pos:start="121:12" pos:end="121:27">(<expr pos:start="121:13" pos:end="121:26"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:26"><name pos:start="121:14" pos:end="121:14">l</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:26">rgb_planes</name></name></expr>)</condition> <block pos:start="121:29" pos:end="135:9">{<block_content pos:start="123:13" pos:end="133:13">

            <expr_stmt pos:start="123:13" pos:end="123:54"><expr pos:start="123:13" pos:end="123:53"><name pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:13">l</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:25">rgb_stride</name></name> <operator pos:start="123:27" pos:end="123:27">=</operator> <call pos:start="123:29" pos:end="123:53"><name pos:start="123:29" pos:end="123:35">FFALIGN</name><argument_list pos:start="123:36" pos:end="123:53">(<argument pos:start="123:37" pos:end="123:48"><expr pos:start="123:37" pos:end="123:48"><name pos:start="123:37" pos:end="123:48"><name pos:start="123:37" pos:end="123:41">avctx</name><operator pos:start="123:42" pos:end="123:43">-&gt;</operator><name pos:start="123:44" pos:end="123:48">width</name></name></expr></argument>, <argument pos:start="123:51" pos:end="123:52"><expr pos:start="123:51" pos:end="123:52"><literal type="number" pos:start="123:51" pos:end="123:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:83"><expr pos:start="125:13" pos:end="125:82"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:13">l</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:25">rgb_planes</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <call pos:start="125:29" pos:end="125:82"><name pos:start="125:29" pos:end="125:37">av_malloc</name><argument_list pos:start="125:38" pos:end="125:82">(<argument pos:start="125:39" pos:end="125:81"><expr pos:start="125:39" pos:end="125:81"><name pos:start="125:39" pos:end="125:51"><name pos:start="125:39" pos:end="125:39">l</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:51">rgb_stride</name></name> <operator pos:start="125:53" pos:end="125:53">*</operator> <name pos:start="125:55" pos:end="125:67"><name pos:start="125:55" pos:end="125:59">avctx</name><operator pos:start="125:60" pos:end="125:61">-&gt;</operator><name pos:start="125:62" pos:end="125:67">height</name></name> <operator pos:start="125:69" pos:end="125:69">*</operator> <name pos:start="125:71" pos:end="125:76">planes</name> <operator pos:start="125:78" pos:end="125:78">+</operator> <literal type="number" pos:start="125:80" pos:end="125:81">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:31">(<expr pos:start="127:17" pos:end="127:30"><operator pos:start="127:17" pos:end="127:17">!</operator><name pos:start="127:18" pos:end="127:30"><name pos:start="127:18" pos:end="127:18">l</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:30">rgb_planes</name></name></expr>)</condition> <block pos:start="127:33" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:39">

                <expr_stmt pos:start="129:17" pos:end="129:82"><expr pos:start="129:17" pos:end="129:81"><call pos:start="129:17" pos:end="129:81"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="129:81">(<argument pos:start="129:24" pos:end="129:28"><expr pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:28">avctx</name></expr></argument>, <argument pos:start="129:31" pos:end="129:42"><expr pos:start="129:31" pos:end="129:42"><name pos:start="129:31" pos:end="129:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:45" pos:end="129:80"><expr pos:start="129:45" pos:end="129:80"><literal type="string" pos:start="129:45" pos:end="129:80">"cannot allocate temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="131:17" pos:end="131:39">return <expr pos:start="131:24" pos:end="131:38"><call pos:start="131:24" pos:end="131:38"><name pos:start="131:24" pos:end="131:30">AVERROR</name><argument_list pos:start="131:31" pos:end="131:38">(<argument pos:start="131:32" pos:end="131:37"><expr pos:start="131:32" pos:end="131:37"><name pos:start="131:32" pos:end="131:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="137:9" pos:end="139:94">for <control pos:start="137:13" pos:end="137:36">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:31"><expr pos:start="137:21" pos:end="137:30"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <name pos:start="137:25" pos:end="137:30">planes</name></expr>;</condition> <incr pos:start="137:33" pos:end="137:35"><expr pos:start="137:33" pos:end="137:35"><name pos:start="137:33" pos:end="137:33">i</name><operator pos:start="137:34" pos:end="137:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="139:13" pos:end="139:94"><block_content pos:start="139:13" pos:end="139:94">

            <expr_stmt pos:start="139:13" pos:end="139:94"><expr pos:start="139:13" pos:end="139:93"><name pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:16">srcs</name><index pos:start="139:17" pos:end="139:19">[<expr pos:start="139:18" pos:end="139:18"><name pos:start="139:18" pos:end="139:18">i</name></expr>]</index></name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:35"><name pos:start="139:23" pos:end="139:23">l</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:35">rgb_planes</name></name> <operator pos:start="139:37" pos:end="139:37">+</operator> <operator pos:start="139:39" pos:end="139:39">(</operator><name pos:start="139:40" pos:end="139:40">i</name> <operator pos:start="139:42" pos:end="139:42">+</operator> <literal type="number" pos:start="139:44" pos:end="139:44">1</literal><operator pos:start="139:45" pos:end="139:45">)</operator> <operator pos:start="139:47" pos:end="139:47">*</operator> <name pos:start="139:49" pos:end="139:61"><name pos:start="139:49" pos:end="139:49">l</name><operator pos:start="139:50" pos:end="139:51">-&gt;</operator><name pos:start="139:52" pos:end="139:61">rgb_stride</name></name> <operator pos:start="139:63" pos:end="139:63">*</operator> <name pos:start="139:65" pos:end="139:77"><name pos:start="139:65" pos:end="139:69">avctx</name><operator pos:start="139:70" pos:end="139:71">-&gt;</operator><name pos:start="139:72" pos:end="139:77">height</name></name> <operator pos:start="139:79" pos:end="139:79">-</operator> <name pos:start="139:81" pos:end="139:93"><name pos:start="139:81" pos:end="139:81">l</name><operator pos:start="139:82" pos:end="139:83">-&gt;</operator><name pos:start="139:84" pos:end="139:93">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="141:9" pos:end="149:45">for <control pos:start="141:13" pos:end="141:36">(<init pos:start="141:14" pos:end="141:19"><expr pos:start="141:14" pos:end="141:18"><name pos:start="141:14" pos:end="141:14">i</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="number" pos:start="141:18" pos:end="141:18">0</literal></expr>;</init> <condition pos:start="141:21" pos:end="141:31"><expr pos:start="141:21" pos:end="141:30"><name pos:start="141:21" pos:end="141:21">i</name> <operator pos:start="141:23" pos:end="141:23">&lt;</operator> <name pos:start="141:25" pos:end="141:30">planes</name></expr>;</condition> <incr pos:start="141:33" pos:end="141:35"><expr pos:start="141:33" pos:end="141:35"><name pos:start="141:33" pos:end="141:33">i</name><operator pos:start="141:34" pos:end="141:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="143:13" pos:end="149:45"><block_content pos:start="143:13" pos:end="149:45">

            <expr_stmt pos:start="143:13" pos:end="149:45"><expr pos:start="143:13" pos:end="149:44"><call pos:start="143:13" pos:end="149:44"><name pos:start="143:13" pos:end="143:34">lag_decode_arith_plane</name><argument_list pos:start="143:35" pos:end="149:44">(<argument pos:start="143:36" pos:end="143:36"><expr pos:start="143:36" pos:end="143:36"><name pos:start="143:36" pos:end="143:36">l</name></expr></argument>, <argument pos:start="143:39" pos:end="143:45"><expr pos:start="143:39" pos:end="143:45"><name pos:start="143:39" pos:end="143:45"><name pos:start="143:39" pos:end="143:42">srcs</name><index pos:start="143:43" pos:end="143:45">[<expr pos:start="143:44" pos:end="143:44"><name pos:start="143:44" pos:end="143:44">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="145:36" pos:end="145:47"><expr pos:start="145:36" pos:end="145:47"><name pos:start="145:36" pos:end="145:47"><name pos:start="145:36" pos:end="145:40">avctx</name><operator pos:start="145:41" pos:end="145:42">-&gt;</operator><name pos:start="145:43" pos:end="145:47">width</name></name></expr></argument>, <argument pos:start="145:50" pos:end="145:62"><expr pos:start="145:50" pos:end="145:62"><name pos:start="145:50" pos:end="145:62"><name pos:start="145:50" pos:end="145:54">avctx</name><operator pos:start="145:55" pos:end="145:56">-&gt;</operator><name pos:start="145:57" pos:end="145:62">height</name></name></expr></argument>,

                                   <argument pos:start="147:36" pos:end="147:49"><expr pos:start="147:36" pos:end="147:49"><operator pos:start="147:36" pos:end="147:36">-</operator><name pos:start="147:37" pos:end="147:49"><name pos:start="147:37" pos:end="147:37">l</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:49">rgb_stride</name></name></expr></argument>, <argument pos:start="147:52" pos:end="147:64"><expr pos:start="147:52" pos:end="147:64"><name pos:start="147:52" pos:end="147:54">buf</name> <operator pos:start="147:56" pos:end="147:56">+</operator> <name pos:start="147:58" pos:end="147:64"><name pos:start="147:58" pos:end="147:61">offs</name><index pos:start="147:62" pos:end="147:64">[<expr pos:start="147:63" pos:end="147:63"><name pos:start="147:63" pos:end="147:63">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="149:36" pos:end="149:43"><expr pos:start="149:36" pos:end="149:43"><name pos:start="149:36" pos:end="149:43">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="151:9" pos:end="151:25"><expr pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:11">dst</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <name pos:start="151:15" pos:end="151:24"><name pos:start="151:15" pos:end="151:15">p</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:21">data</name><index pos:start="151:22" pos:end="151:24">[<expr pos:start="151:23" pos:end="151:23"><literal type="number" pos:start="151:23" pos:end="151:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="153:9" pos:end="155:72">for <control pos:start="153:13" pos:end="153:36">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:31"><expr pos:start="153:21" pos:end="153:30"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:30">planes</name></expr>;</condition> <incr pos:start="153:33" pos:end="153:35"><expr pos:start="153:33" pos:end="153:35"><name pos:start="153:33" pos:end="153:33">i</name><operator pos:start="153:34" pos:end="153:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="155:13" pos:end="155:72"><block_content pos:start="155:13" pos:end="155:72">

            <expr_stmt pos:start="155:13" pos:end="155:72"><expr pos:start="155:13" pos:end="155:71"><name pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:16">srcs</name><index pos:start="155:17" pos:end="155:19">[<expr pos:start="155:18" pos:end="155:18"><name pos:start="155:18" pos:end="155:18">i</name></expr>]</index></name> <operator pos:start="155:21" pos:end="155:21">=</operator> <name pos:start="155:23" pos:end="155:35"><name pos:start="155:23" pos:end="155:23">l</name><operator pos:start="155:24" pos:end="155:25">-&gt;</operator><name pos:start="155:26" pos:end="155:35">rgb_planes</name></name> <operator pos:start="155:37" pos:end="155:37">+</operator> <name pos:start="155:39" pos:end="155:39">i</name> <operator pos:start="155:41" pos:end="155:41">*</operator> <name pos:start="155:43" pos:end="155:55"><name pos:start="155:43" pos:end="155:43">l</name><operator pos:start="155:44" pos:end="155:45">-&gt;</operator><name pos:start="155:46" pos:end="155:55">rgb_stride</name></name> <operator pos:start="155:57" pos:end="155:57">*</operator> <name pos:start="155:59" pos:end="155:71"><name pos:start="155:59" pos:end="155:63">avctx</name><operator pos:start="155:64" pos:end="155:65">-&gt;</operator><name pos:start="155:66" pos:end="155:71">height</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="157:9" pos:end="197:9">for <control pos:start="157:13" pos:end="157:43">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">j</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:38"><expr pos:start="157:21" pos:end="157:37"><name pos:start="157:21" pos:end="157:21">j</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:37"><name pos:start="157:25" pos:end="157:29">avctx</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:37">height</name></name></expr>;</condition> <incr pos:start="157:40" pos:end="157:42"><expr pos:start="157:40" pos:end="157:42"><name pos:start="157:40" pos:end="157:40">j</name><operator pos:start="157:41" pos:end="157:42">++</operator></expr></incr>)</control> <block pos:start="157:45" pos:end="197:9">{<block_content pos:start="159:13" pos:end="195:41">

            <for pos:start="159:13" pos:end="189:13">for <control pos:start="159:17" pos:end="159:46">(<init pos:start="159:18" pos:end="159:23"><expr pos:start="159:18" pos:end="159:22"><name pos:start="159:18" pos:end="159:18">i</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <literal type="number" pos:start="159:22" pos:end="159:22">0</literal></expr>;</init> <condition pos:start="159:25" pos:end="159:41"><expr pos:start="159:25" pos:end="159:40"><name pos:start="159:25" pos:end="159:25">i</name> <operator pos:start="159:27" pos:end="159:27">&lt;</operator> <name pos:start="159:29" pos:end="159:40"><name pos:start="159:29" pos:end="159:33">avctx</name><operator pos:start="159:34" pos:end="159:35">-&gt;</operator><name pos:start="159:36" pos:end="159:40">width</name></name></expr>;</condition> <incr pos:start="159:43" pos:end="159:45"><expr pos:start="159:43" pos:end="159:45"><name pos:start="159:43" pos:end="159:43">i</name><operator pos:start="159:44" pos:end="159:45">++</operator></expr></incr>)</control> <block pos:start="159:48" pos:end="189:13">{<block_content pos:start="161:17" pos:end="187:17">

                <decl_stmt pos:start="161:17" pos:end="161:35"><decl pos:start="161:17" pos:end="161:25"><type pos:start="161:17" pos:end="161:23"><name pos:start="161:17" pos:end="161:23">uint8_t</name></type> <name pos:start="161:25" pos:end="161:25">r</name></decl>, <decl pos:start="161:28" pos:end="161:28"><type ref="prev" pos:start="161:17" pos:end="161:23"/><name pos:start="161:28" pos:end="161:28">g</name></decl>, <decl pos:start="161:31" pos:end="161:31"><type ref="prev" pos:start="161:17" pos:end="161:23"/><name pos:start="161:31" pos:end="161:31">b</name></decl>, <decl pos:start="161:34" pos:end="161:34"><type ref="prev" pos:start="161:17" pos:end="161:23"/><name pos:start="161:34" pos:end="161:34">a</name></decl>;</decl_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:31"><expr pos:start="163:17" pos:end="163:30"><name pos:start="163:17" pos:end="163:17">r</name> <operator pos:start="163:19" pos:end="163:19">=</operator> <name pos:start="163:21" pos:end="163:30"><name pos:start="163:21" pos:end="163:24">srcs</name><index pos:start="163:25" pos:end="163:27">[<expr pos:start="163:26" pos:end="163:26"><literal type="number" pos:start="163:26" pos:end="163:26">0</literal></expr>]</index><index pos:start="163:28" pos:end="163:30">[<expr pos:start="163:29" pos:end="163:29"><name pos:start="163:29" pos:end="163:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:31"><expr pos:start="165:17" pos:end="165:30"><name pos:start="165:17" pos:end="165:17">g</name> <operator pos:start="165:19" pos:end="165:19">=</operator> <name pos:start="165:21" pos:end="165:30"><name pos:start="165:21" pos:end="165:24">srcs</name><index pos:start="165:25" pos:end="165:27">[<expr pos:start="165:26" pos:end="165:26"><literal type="number" pos:start="165:26" pos:end="165:26">1</literal></expr>]</index><index pos:start="165:28" pos:end="165:30">[<expr pos:start="165:29" pos:end="165:29"><name pos:start="165:29" pos:end="165:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:31"><expr pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:17">b</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <name pos:start="167:21" pos:end="167:30"><name pos:start="167:21" pos:end="167:24">srcs</name><index pos:start="167:25" pos:end="167:27">[<expr pos:start="167:26" pos:end="167:26"><literal type="number" pos:start="167:26" pos:end="167:26">2</literal></expr>]</index><index pos:start="167:28" pos:end="167:30">[<expr pos:start="167:29" pos:end="167:29"><name pos:start="167:29" pos:end="167:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:23"><expr pos:start="169:17" pos:end="169:22"><name pos:start="169:17" pos:end="169:17">r</name> <operator pos:start="169:19" pos:end="169:20">+=</operator> <name pos:start="169:22" pos:end="169:22">g</name></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:23"><expr pos:start="171:17" pos:end="171:22"><name pos:start="171:17" pos:end="171:17">b</name> <operator pos:start="171:19" pos:end="171:20">+=</operator> <name pos:start="171:22" pos:end="171:22">g</name></expr>;</expr_stmt>

                <if_stmt pos:start="173:17" pos:end="187:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:50">(<expr pos:start="173:21" pos:end="173:49"><name pos:start="173:21" pos:end="173:29">frametype</name> <operator pos:start="173:31" pos:end="173:32">==</operator> <name pos:start="173:34" pos:end="173:49">FRAME_ARITH_RGBA</name></expr>)</condition> <block pos:start="173:52" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:62">

                    <expr_stmt pos:start="175:21" pos:end="175:35"><expr pos:start="175:21" pos:end="175:34"><name pos:start="175:21" pos:end="175:21">a</name> <operator pos:start="175:23" pos:end="175:23">=</operator> <name pos:start="175:25" pos:end="175:34"><name pos:start="175:25" pos:end="175:28">srcs</name><index pos:start="175:29" pos:end="175:31">[<expr pos:start="175:30" pos:end="175:30"><literal type="number" pos:start="175:30" pos:end="175:30">3</literal></expr>]</index><index pos:start="175:32" pos:end="175:34">[<expr pos:start="175:33" pos:end="175:33"><name pos:start="175:33" pos:end="175:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="177:21" pos:end="177:62"><expr pos:start="177:21" pos:end="177:61"><call pos:start="177:21" pos:end="177:61"><name pos:start="177:21" pos:end="177:27">AV_WN32</name><argument_list pos:start="177:28" pos:end="177:61">(<argument pos:start="177:29" pos:end="177:39"><expr pos:start="177:29" pos:end="177:39"><name pos:start="177:29" pos:end="177:31">dst</name> <operator pos:start="177:33" pos:end="177:33">+</operator> <name pos:start="177:35" pos:end="177:35">i</name> <operator pos:start="177:37" pos:end="177:37">*</operator> <literal type="number" pos:start="177:39" pos:end="177:39">4</literal></expr></argument>, <argument pos:start="177:42" pos:end="177:60"><expr pos:start="177:42" pos:end="177:60"><call pos:start="177:42" pos:end="177:60"><name pos:start="177:42" pos:end="177:48">MKBETAG</name><argument_list pos:start="177:49" pos:end="177:60">(<argument pos:start="177:50" pos:end="177:50"><expr pos:start="177:50" pos:end="177:50"><name pos:start="177:50" pos:end="177:50">a</name></expr></argument>, <argument pos:start="177:53" pos:end="177:53"><expr pos:start="177:53" pos:end="177:53"><name pos:start="177:53" pos:end="177:53">r</name></expr></argument>, <argument pos:start="177:56" pos:end="177:56"><expr pos:start="177:56" pos:end="177:56"><name pos:start="177:56" pos:end="177:56">g</name></expr></argument>, <argument pos:start="177:59" pos:end="177:59"><expr pos:start="177:59" pos:end="177:59"><name pos:start="177:59" pos:end="177:59">b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="179:19" pos:end="187:17">else <block pos:start="179:24" pos:end="187:17">{<block_content pos:start="181:21" pos:end="185:39">

                    <expr_stmt pos:start="181:21" pos:end="181:39"><expr pos:start="181:21" pos:end="181:38"><name pos:start="181:21" pos:end="181:34"><name pos:start="181:21" pos:end="181:23">dst</name><index pos:start="181:24" pos:end="181:34">[<expr pos:start="181:25" pos:end="181:33"><name pos:start="181:25" pos:end="181:25">i</name> <operator pos:start="181:27" pos:end="181:27">*</operator> <literal type="number" pos:start="181:29" pos:end="181:29">3</literal> <operator pos:start="181:31" pos:end="181:31">+</operator> <literal type="number" pos:start="181:33" pos:end="181:33">0</literal></expr>]</index></name> <operator pos:start="181:36" pos:end="181:36">=</operator> <name pos:start="181:38" pos:end="181:38">r</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:39"><expr pos:start="183:21" pos:end="183:38"><name pos:start="183:21" pos:end="183:34"><name pos:start="183:21" pos:end="183:23">dst</name><index pos:start="183:24" pos:end="183:34">[<expr pos:start="183:25" pos:end="183:33"><name pos:start="183:25" pos:end="183:25">i</name> <operator pos:start="183:27" pos:end="183:27">*</operator> <literal type="number" pos:start="183:29" pos:end="183:29">3</literal> <operator pos:start="183:31" pos:end="183:31">+</operator> <literal type="number" pos:start="183:33" pos:end="183:33">1</literal></expr>]</index></name> <operator pos:start="183:36" pos:end="183:36">=</operator> <name pos:start="183:38" pos:end="183:38">g</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:39"><expr pos:start="185:21" pos:end="185:38"><name pos:start="185:21" pos:end="185:34"><name pos:start="185:21" pos:end="185:23">dst</name><index pos:start="185:24" pos:end="185:34">[<expr pos:start="185:25" pos:end="185:33"><name pos:start="185:25" pos:end="185:25">i</name> <operator pos:start="185:27" pos:end="185:27">*</operator> <literal type="number" pos:start="185:29" pos:end="185:29">3</literal> <operator pos:start="185:31" pos:end="185:31">+</operator> <literal type="number" pos:start="185:33" pos:end="185:33">2</literal></expr>]</index></name> <operator pos:start="185:36" pos:end="185:36">=</operator> <name pos:start="185:38" pos:end="185:38">b</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="191:13" pos:end="191:34"><expr pos:start="191:13" pos:end="191:33"><name pos:start="191:13" pos:end="191:15">dst</name> <operator pos:start="191:17" pos:end="191:18">+=</operator> <name pos:start="191:20" pos:end="191:33"><name pos:start="191:20" pos:end="191:20">p</name><operator pos:start="191:21" pos:end="191:22">-&gt;</operator><name pos:start="191:23" pos:end="191:30">linesize</name><index pos:start="191:31" pos:end="191:33">[<expr pos:start="191:32" pos:end="191:32"><literal type="number" pos:start="191:32" pos:end="191:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="193:13" pos:end="195:41">for <control pos:start="193:17" pos:end="193:40">(<init pos:start="193:18" pos:end="193:23"><expr pos:start="193:18" pos:end="193:22"><name pos:start="193:18" pos:end="193:18">i</name> <operator pos:start="193:20" pos:end="193:20">=</operator> <literal type="number" pos:start="193:22" pos:end="193:22">0</literal></expr>;</init> <condition pos:start="193:25" pos:end="193:35"><expr pos:start="193:25" pos:end="193:34"><name pos:start="193:25" pos:end="193:25">i</name> <operator pos:start="193:27" pos:end="193:27">&lt;</operator> <name pos:start="193:29" pos:end="193:34">planes</name></expr>;</condition> <incr pos:start="193:37" pos:end="193:39"><expr pos:start="193:37" pos:end="193:39"><name pos:start="193:37" pos:end="193:37">i</name><operator pos:start="193:38" pos:end="193:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:17" pos:end="195:41"><block_content pos:start="195:17" pos:end="195:41">

                <expr_stmt pos:start="195:17" pos:end="195:41"><expr pos:start="195:17" pos:end="195:40"><name pos:start="195:17" pos:end="195:23"><name pos:start="195:17" pos:end="195:20">srcs</name><index pos:start="195:21" pos:end="195:23">[<expr pos:start="195:22" pos:end="195:22"><name pos:start="195:22" pos:end="195:22">i</name></expr>]</index></name> <operator pos:start="195:25" pos:end="195:26">+=</operator> <name pos:start="195:28" pos:end="195:40"><name pos:start="195:28" pos:end="195:28">l</name><operator pos:start="195:29" pos:end="195:30">-&gt;</operator><name pos:start="195:31" pos:end="195:40">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:26">case <expr pos:start="201:10" pos:end="201:25"><name pos:start="201:10" pos:end="201:25">FRAME_ARITH_YV12</name></expr>:</case>

        <expr_stmt pos:start="203:9" pos:end="203:41"><expr pos:start="203:9" pos:end="203:40"><name pos:start="203:9" pos:end="203:22"><name pos:start="203:9" pos:end="203:13">avctx</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:22">pix_fmt</name></name> <operator pos:start="203:24" pos:end="203:24">=</operator> <name pos:start="203:26" pos:end="203:40">PIX_FMT_YUV420P</name></expr>;</expr_stmt>



        <if_stmt pos:start="207:9" pos:end="213:9"><if pos:start="207:9" pos:end="213:9">if <condition pos:start="207:12" pos:end="207:44">(<expr pos:start="207:13" pos:end="207:43"><call pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:17">avctx</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:29">get_buffer</name></name><argument_list pos:start="207:30" pos:end="207:39">(<argument pos:start="207:31" pos:end="207:35"><expr pos:start="207:31" pos:end="207:35"><name pos:start="207:31" pos:end="207:35">avctx</name></expr></argument>, <argument pos:start="207:38" pos:end="207:38"><expr pos:start="207:38" pos:end="207:38"><name pos:start="207:38" pos:end="207:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="207:41" pos:end="207:41">&lt;</operator> <literal type="number" pos:start="207:43" pos:end="207:43">0</literal></expr>)</condition> <block pos:start="207:46" pos:end="213:9">{<block_content pos:start="209:13" pos:end="211:22">

            <expr_stmt pos:start="209:13" pos:end="209:65"><expr pos:start="209:13" pos:end="209:64"><call pos:start="209:13" pos:end="209:64"><name pos:start="209:13" pos:end="209:18">av_log</name><argument_list pos:start="209:19" pos:end="209:64">(<argument pos:start="209:20" pos:end="209:24"><expr pos:start="209:20" pos:end="209:24"><name pos:start="209:20" pos:end="209:24">avctx</name></expr></argument>, <argument pos:start="209:27" pos:end="209:38"><expr pos:start="209:27" pos:end="209:38"><name pos:start="209:27" pos:end="209:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:41" pos:end="209:63"><expr pos:start="209:41" pos:end="209:63"><literal type="string" pos:start="209:41" pos:end="209:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:22">return <expr pos:start="211:20" pos:end="211:21"><operator pos:start="211:20" pos:end="211:20">-</operator><literal type="number" pos:start="211:21" pos:end="211:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="217:9" pos:end="221:41"><expr pos:start="217:9" pos:end="221:40"><call pos:start="217:9" pos:end="221:40"><name pos:start="217:9" pos:end="217:30">lag_decode_arith_plane</name><argument_list pos:start="217:31" pos:end="221:40">(<argument pos:start="217:32" pos:end="217:32"><expr pos:start="217:32" pos:end="217:32"><name pos:start="217:32" pos:end="217:32">l</name></expr></argument>, <argument pos:start="217:35" pos:end="217:44"><expr pos:start="217:35" pos:end="217:44"><name pos:start="217:35" pos:end="217:44"><name pos:start="217:35" pos:end="217:35">p</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:41">data</name><index pos:start="217:42" pos:end="217:44">[<expr pos:start="217:43" pos:end="217:43"><literal type="number" pos:start="217:43" pos:end="217:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:47" pos:end="217:58"><expr pos:start="217:47" pos:end="217:58"><name pos:start="217:47" pos:end="217:58"><name pos:start="217:47" pos:end="217:51">avctx</name><operator pos:start="217:52" pos:end="217:53">-&gt;</operator><name pos:start="217:54" pos:end="217:58">width</name></name></expr></argument>, <argument pos:start="217:61" pos:end="217:73"><expr pos:start="217:61" pos:end="217:73"><name pos:start="217:61" pos:end="217:73"><name pos:start="217:61" pos:end="217:65">avctx</name><operator pos:start="217:66" pos:end="217:67">-&gt;</operator><name pos:start="217:68" pos:end="217:73">height</name></name></expr></argument>,

                               <argument pos:start="219:32" pos:end="219:45"><expr pos:start="219:32" pos:end="219:45"><name pos:start="219:32" pos:end="219:45"><name pos:start="219:32" pos:end="219:32">p</name><operator pos:start="219:33" pos:end="219:34">-&gt;</operator><name pos:start="219:35" pos:end="219:42">linesize</name><index pos:start="219:43" pos:end="219:45">[<expr pos:start="219:44" pos:end="219:44"><literal type="number" pos:start="219:44" pos:end="219:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:48" pos:end="219:62"><expr pos:start="219:48" pos:end="219:62"><name pos:start="219:48" pos:end="219:50">buf</name> <operator pos:start="219:52" pos:end="219:52">+</operator> <name pos:start="219:54" pos:end="219:62">offset_ry</name></expr></argument>,

                               <argument pos:start="221:32" pos:end="221:39"><expr pos:start="221:32" pos:end="221:39"><name pos:start="221:32" pos:end="221:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="227:58"><expr pos:start="223:9" pos:end="227:57"><call pos:start="223:9" pos:end="227:57"><name pos:start="223:9" pos:end="223:30">lag_decode_arith_plane</name><argument_list pos:start="223:31" pos:end="227:57">(<argument pos:start="223:32" pos:end="223:32"><expr pos:start="223:32" pos:end="223:32"><name pos:start="223:32" pos:end="223:32">l</name></expr></argument>, <argument pos:start="223:35" pos:end="223:44"><expr pos:start="223:35" pos:end="223:44"><name pos:start="223:35" pos:end="223:44"><name pos:start="223:35" pos:end="223:35">p</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:41">data</name><index pos:start="223:42" pos:end="223:44">[<expr pos:start="223:43" pos:end="223:43"><literal type="number" pos:start="223:43" pos:end="223:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="223:47" pos:end="223:62"><expr pos:start="223:47" pos:end="223:62"><name pos:start="223:47" pos:end="223:58"><name pos:start="223:47" pos:end="223:51">avctx</name><operator pos:start="223:52" pos:end="223:53">-&gt;</operator><name pos:start="223:54" pos:end="223:58">width</name></name> <operator pos:start="223:60" pos:end="223:60">/</operator> <literal type="number" pos:start="223:62" pos:end="223:62">2</literal></expr></argument>,

                               <argument pos:start="225:32" pos:end="225:48"><expr pos:start="225:32" pos:end="225:48"><name pos:start="225:32" pos:end="225:44"><name pos:start="225:32" pos:end="225:36">avctx</name><operator pos:start="225:37" pos:end="225:38">-&gt;</operator><name pos:start="225:39" pos:end="225:44">height</name></name> <operator pos:start="225:46" pos:end="225:46">/</operator> <literal type="number" pos:start="225:48" pos:end="225:48">2</literal></expr></argument>, <argument pos:start="225:51" pos:end="225:64"><expr pos:start="225:51" pos:end="225:64"><name pos:start="225:51" pos:end="225:64"><name pos:start="225:51" pos:end="225:51">p</name><operator pos:start="225:52" pos:end="225:53">-&gt;</operator><name pos:start="225:54" pos:end="225:61">linesize</name><index pos:start="225:62" pos:end="225:64">[<expr pos:start="225:63" pos:end="225:63"><literal type="number" pos:start="225:63" pos:end="225:63">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="227:32" pos:end="227:46"><expr pos:start="227:32" pos:end="227:46"><name pos:start="227:32" pos:end="227:34">buf</name> <operator pos:start="227:36" pos:end="227:36">+</operator> <name pos:start="227:38" pos:end="227:46">offset_gu</name></expr></argument>, <argument pos:start="227:49" pos:end="227:56"><expr pos:start="227:49" pos:end="227:56"><name pos:start="227:49" pos:end="227:56">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="233:58"><expr pos:start="229:9" pos:end="233:57"><call pos:start="229:9" pos:end="233:57"><name pos:start="229:9" pos:end="229:30">lag_decode_arith_plane</name><argument_list pos:start="229:31" pos:end="233:57">(<argument pos:start="229:32" pos:end="229:32"><expr pos:start="229:32" pos:end="229:32"><name pos:start="229:32" pos:end="229:32">l</name></expr></argument>, <argument pos:start="229:35" pos:end="229:44"><expr pos:start="229:35" pos:end="229:44"><name pos:start="229:35" pos:end="229:44"><name pos:start="229:35" pos:end="229:35">p</name><operator pos:start="229:36" pos:end="229:37">-&gt;</operator><name pos:start="229:38" pos:end="229:41">data</name><index pos:start="229:42" pos:end="229:44">[<expr pos:start="229:43" pos:end="229:43"><literal type="number" pos:start="229:43" pos:end="229:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="229:47" pos:end="229:62"><expr pos:start="229:47" pos:end="229:62"><name pos:start="229:47" pos:end="229:58"><name pos:start="229:47" pos:end="229:51">avctx</name><operator pos:start="229:52" pos:end="229:53">-&gt;</operator><name pos:start="229:54" pos:end="229:58">width</name></name> <operator pos:start="229:60" pos:end="229:60">/</operator> <literal type="number" pos:start="229:62" pos:end="229:62">2</literal></expr></argument>,

                               <argument pos:start="231:32" pos:end="231:48"><expr pos:start="231:32" pos:end="231:48"><name pos:start="231:32" pos:end="231:44"><name pos:start="231:32" pos:end="231:36">avctx</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:44">height</name></name> <operator pos:start="231:46" pos:end="231:46">/</operator> <literal type="number" pos:start="231:48" pos:end="231:48">2</literal></expr></argument>, <argument pos:start="231:51" pos:end="231:64"><expr pos:start="231:51" pos:end="231:64"><name pos:start="231:51" pos:end="231:64"><name pos:start="231:51" pos:end="231:51">p</name><operator pos:start="231:52" pos:end="231:53">-&gt;</operator><name pos:start="231:54" pos:end="231:61">linesize</name><index pos:start="231:62" pos:end="231:64">[<expr pos:start="231:63" pos:end="231:63"><literal type="number" pos:start="231:63" pos:end="231:63">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="233:32" pos:end="233:46"><expr pos:start="233:32" pos:end="233:46"><name pos:start="233:32" pos:end="233:34">buf</name> <operator pos:start="233:36" pos:end="233:36">+</operator> <name pos:start="233:38" pos:end="233:46">offset_bv</name></expr></argument>, <argument pos:start="233:49" pos:end="233:56"><expr pos:start="233:49" pos:end="233:56"><name pos:start="233:49" pos:end="233:56">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="235:9" pos:end="235:14">break;</break>

    <default pos:start="237:5" pos:end="237:12">default:</default>

        <expr_stmt pos:start="239:9" pos:end="241:68"><expr pos:start="239:9" pos:end="241:67"><call pos:start="239:9" pos:end="241:67"><name pos:start="239:9" pos:end="239:14">av_log</name><argument_list pos:start="239:15" pos:end="241:67">(<argument pos:start="239:16" pos:end="239:20"><expr pos:start="239:16" pos:end="239:20"><name pos:start="239:16" pos:end="239:20">avctx</name></expr></argument>, <argument pos:start="239:23" pos:end="239:34"><expr pos:start="239:23" pos:end="239:34"><name pos:start="239:23" pos:end="239:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="241:16" pos:end="241:55"><expr pos:start="241:16" pos:end="241:55"><literal type="string" pos:start="241:16" pos:end="241:55">"Unsupported Lagarith frame type: %#x\n"</literal></expr></argument>, <argument pos:start="241:58" pos:end="241:66"><expr pos:start="241:58" pos:end="241:66"><name pos:start="241:58" pos:end="241:66">frametype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="243:9" pos:end="243:18">return <expr pos:start="243:16" pos:end="243:17"><operator pos:start="243:16" pos:end="243:16">-</operator><literal type="number" pos:start="243:17" pos:end="243:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="249:5" pos:end="249:18"><expr pos:start="249:5" pos:end="249:17"><operator pos:start="249:5" pos:end="249:5">*</operator><name pos:start="249:6" pos:end="249:12">picture</name> <operator pos:start="249:14" pos:end="249:14">=</operator> <operator pos:start="249:16" pos:end="249:16">*</operator><name pos:start="249:17" pos:end="249:17">p</name></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:33"><expr pos:start="251:5" pos:end="251:32"><operator pos:start="251:5" pos:end="251:5">*</operator><name pos:start="251:6" pos:end="251:14">data_size</name> <operator pos:start="251:16" pos:end="251:16">=</operator> <sizeof pos:start="251:18" pos:end="251:32">sizeof<argument_list pos:start="251:24" pos:end="251:32">(<argument pos:start="251:25" pos:end="251:31"><expr pos:start="251:25" pos:end="251:31"><name pos:start="251:25" pos:end="251:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="255:5" pos:end="255:20">return <expr pos:start="255:12" pos:end="255:19"><name pos:start="255:12" pos:end="255:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
