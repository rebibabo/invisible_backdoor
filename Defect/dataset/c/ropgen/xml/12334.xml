<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12334.c" pos:tabs="8"><macro pos:start="1:1" pos:end="4:0"><name pos:start="1:1" pos:end="1:17">DECL_IMDCT_BLOCKS</name><argument_list pos:start="1:18" pos:end="4:0">(<argument pos:start="1:19" pos:end="1:21">sse</argument>,<argument pos:start="1:23" pos:end="1:25">sse</argument>)</argument_list></macro>

<cpp:endif pos:start="3:1" pos:end="3:6">#<cpp:directive pos:start="3:2" pos:end="3:6">endif</cpp:directive></cpp:endif>

<macro pos:start="5:1" pos:end="5:27"><name pos:start="5:1" pos:end="5:17">DECL_IMDCT_BLOCKS</name><argument_list pos:start="5:18" pos:end="5:27">(<argument pos:start="5:19" pos:end="5:22">sse2</argument>,<argument pos:start="5:24" pos:end="5:26">sse</argument>)</argument_list></macro>

<macro pos:start="7:1" pos:end="7:27"><name pos:start="7:1" pos:end="7:17">DECL_IMDCT_BLOCKS</name><argument_list pos:start="7:18" pos:end="7:27">(<argument pos:start="7:19" pos:end="7:22">sse3</argument>,<argument pos:start="7:24" pos:end="7:26">sse</argument>)</argument_list></macro>

<macro pos:start="9:1" pos:end="14:0"><name pos:start="9:1" pos:end="9:17">DECL_IMDCT_BLOCKS</name><argument_list pos:start="9:18" pos:end="14:0">(<argument pos:start="9:19" pos:end="9:23">ssse3</argument>,<argument pos:start="9:25" pos:end="9:27">sse</argument>)</argument_list></macro>

<cpp:endif pos:start="11:1" pos:end="11:6">#<cpp:directive pos:start="11:2" pos:end="11:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="13:1" pos:end="13:21">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:21">HAVE_AVX_EXTERNAL</name></expr></cpp:if>

<macro pos:start="15:1" pos:end="20:0"><name pos:start="15:1" pos:end="15:17">DECL_IMDCT_BLOCKS</name><argument_list pos:start="15:18" pos:end="20:0">(<argument pos:start="15:19" pos:end="15:21">avx</argument>,<argument pos:start="15:23" pos:end="15:25">avx</argument>)</argument_list></macro>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="19:8" pos:end="19:22">/* HAVE_YASM */</comment>



<function pos:start="23:1" pos:end="117:1"><type pos:start="23:1" pos:end="23:12"><name pos:start="23:1" pos:end="23:7">av_cold</name> <name pos:start="23:9" pos:end="23:12">void</name></type> <name pos:start="23:14" pos:end="23:31">ff_mpadsp_init_x86</name><parameter_list pos:start="23:32" pos:end="23:49">(<parameter pos:start="23:33" pos:end="23:48"><decl pos:start="23:33" pos:end="23:48"><type pos:start="23:33" pos:end="23:47"><name pos:start="23:33" pos:end="23:45">MPADSPContext</name> <modifier pos:start="23:47" pos:end="23:47">*</modifier></type><name pos:start="23:48" pos:end="23:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="25:1" pos:end="117:1">{<block_content pos:start="27:5" pos:end="116:0">

    <decl_stmt pos:start="27:5" pos:end="27:39"><decl pos:start="27:5" pos:end="27:38"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:17">cpu_flags</name> <init pos:start="27:19" pos:end="27:38">= <expr pos:start="27:21" pos:end="27:38"><call pos:start="27:21" pos:end="27:38"><name pos:start="27:21" pos:end="27:36">av_get_cpu_flags</name><argument_list pos:start="27:37" pos:end="27:38">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="31:5" pos:end="31:13"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">i</name></decl>, <decl pos:start="31:12" pos:end="31:12"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:12" pos:end="31:12">j</name></decl>;</decl_stmt>

    <for pos:start="33:5" pos:end="60:0">for <control pos:start="33:9" pos:end="33:27">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">j</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:17">j</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:21">4</literal></expr>;</condition> <incr pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:24">j</name><operator pos:start="33:25" pos:end="33:26">++</operator></expr></incr>)</control> <block pos:start="33:29" pos:end="60:0">{<block_content pos:start="35:9" pos:end="53:9">

        <for pos:start="35:9" pos:end="53:9">for <control pos:start="35:13" pos:end="35:33">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <literal type="number" pos:start="35:25" pos:end="35:26">40</literal></expr>;</condition> <incr pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:29">i</name> <operator pos:start="35:31" pos:end="35:32">++</operator></expr></incr>)</control> <block pos:start="35:35" pos:end="53:9">{<block_content pos:start="37:13" pos:end="51:70">

            <expr_stmt pos:start="37:13" pos:end="37:70"><expr pos:start="37:13" pos:end="37:69"><name pos:start="37:13" pos:end="37:39"><name pos:start="37:13" pos:end="37:24">mdct_win_sse</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>]</index><index pos:start="37:28" pos:end="37:30">[<expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">j</name></expr>]</index><index pos:start="37:31" pos:end="37:39">[<expr pos:start="37:32" pos:end="37:34"><literal type="number" pos:start="37:32" pos:end="37:32">4</literal><operator pos:start="37:33" pos:end="37:33">*</operator><name pos:start="37:34" pos:end="37:34">i</name></expr>    ]</index></name> <operator pos:start="37:41" pos:end="37:41">=</operator> <name pos:start="37:43" pos:end="37:69"><name pos:start="37:43" pos:end="37:59">ff_mdct_win_float</name><index pos:start="37:60" pos:end="37:66">[<expr pos:start="37:61" pos:end="37:61"><name pos:start="37:61" pos:end="37:61">j</name></expr>    ]</index><index pos:start="37:67" pos:end="37:69">[<expr pos:start="37:68" pos:end="37:68"><name pos:start="37:68" pos:end="37:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:70"><expr pos:start="39:13" pos:end="39:69"><name pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:24">mdct_win_sse</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>]</index><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">j</name></expr>]</index><index pos:start="39:31" pos:end="39:39">[<expr pos:start="39:32" pos:end="39:38"><literal type="number" pos:start="39:32" pos:end="39:32">4</literal><operator pos:start="39:33" pos:end="39:33">*</operator><name pos:start="39:34" pos:end="39:34">i</name> <operator pos:start="39:36" pos:end="39:36">+</operator> <literal type="number" pos:start="39:38" pos:end="39:38">1</literal></expr>]</index></name> <operator pos:start="39:41" pos:end="39:41">=</operator> <name pos:start="39:43" pos:end="39:69"><name pos:start="39:43" pos:end="39:59">ff_mdct_win_float</name><index pos:start="39:60" pos:end="39:66">[<expr pos:start="39:61" pos:end="39:65"><name pos:start="39:61" pos:end="39:61">j</name> <operator pos:start="39:63" pos:end="39:63">+</operator> <literal type="number" pos:start="39:65" pos:end="39:65">4</literal></expr>]</index><index pos:start="39:67" pos:end="39:69">[<expr pos:start="39:68" pos:end="39:68"><name pos:start="39:68" pos:end="39:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:70"><expr pos:start="41:13" pos:end="41:69"><name pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:24">mdct_win_sse</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>]</index><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">j</name></expr>]</index><index pos:start="41:31" pos:end="41:39">[<expr pos:start="41:32" pos:end="41:38"><literal type="number" pos:start="41:32" pos:end="41:32">4</literal><operator pos:start="41:33" pos:end="41:33">*</operator><name pos:start="41:34" pos:end="41:34">i</name> <operator pos:start="41:36" pos:end="41:36">+</operator> <literal type="number" pos:start="41:38" pos:end="41:38">2</literal></expr>]</index></name> <operator pos:start="41:41" pos:end="41:41">=</operator> <name pos:start="41:43" pos:end="41:69"><name pos:start="41:43" pos:end="41:59">ff_mdct_win_float</name><index pos:start="41:60" pos:end="41:66">[<expr pos:start="41:61" pos:end="41:61"><name pos:start="41:61" pos:end="41:61">j</name></expr>    ]</index><index pos:start="41:67" pos:end="41:69">[<expr pos:start="41:68" pos:end="41:68"><name pos:start="41:68" pos:end="41:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:70"><expr pos:start="43:13" pos:end="43:69"><name pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:24">mdct_win_sse</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>]</index><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">j</name></expr>]</index><index pos:start="43:31" pos:end="43:39">[<expr pos:start="43:32" pos:end="43:38"><literal type="number" pos:start="43:32" pos:end="43:32">4</literal><operator pos:start="43:33" pos:end="43:33">*</operator><name pos:start="43:34" pos:end="43:34">i</name> <operator pos:start="43:36" pos:end="43:36">+</operator> <literal type="number" pos:start="43:38" pos:end="43:38">3</literal></expr>]</index></name> <operator pos:start="43:41" pos:end="43:41">=</operator> <name pos:start="43:43" pos:end="43:69"><name pos:start="43:43" pos:end="43:59">ff_mdct_win_float</name><index pos:start="43:60" pos:end="43:66">[<expr pos:start="43:61" pos:end="43:65"><name pos:start="43:61" pos:end="43:61">j</name> <operator pos:start="43:63" pos:end="43:63">+</operator> <literal type="number" pos:start="43:65" pos:end="43:65">4</literal></expr>]</index><index pos:start="43:67" pos:end="43:69">[<expr pos:start="43:68" pos:end="43:68"><name pos:start="43:68" pos:end="43:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:70"><expr pos:start="45:13" pos:end="45:69"><name pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:24">mdct_win_sse</name><index pos:start="45:25" pos:end="45:27">[<expr pos:start="45:26" pos:end="45:26"><literal type="number" pos:start="45:26" pos:end="45:26">1</literal></expr>]</index><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">j</name></expr>]</index><index pos:start="45:31" pos:end="45:39">[<expr pos:start="45:32" pos:end="45:34"><literal type="number" pos:start="45:32" pos:end="45:32">4</literal><operator pos:start="45:33" pos:end="45:33">*</operator><name pos:start="45:34" pos:end="45:34">i</name></expr>    ]</index></name> <operator pos:start="45:41" pos:end="45:41">=</operator> <name pos:start="45:43" pos:end="45:69"><name pos:start="45:43" pos:end="45:59">ff_mdct_win_float</name><index pos:start="45:60" pos:end="45:66">[<expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">0</literal></expr>    ]</index><index pos:start="45:67" pos:end="45:69">[<expr pos:start="45:68" pos:end="45:68"><name pos:start="45:68" pos:end="45:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:70"><expr pos:start="47:13" pos:end="47:69"><name pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:24">mdct_win_sse</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>]</index><index pos:start="47:28" pos:end="47:30">[<expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">j</name></expr>]</index><index pos:start="47:31" pos:end="47:39">[<expr pos:start="47:32" pos:end="47:38"><literal type="number" pos:start="47:32" pos:end="47:32">4</literal><operator pos:start="47:33" pos:end="47:33">*</operator><name pos:start="47:34" pos:end="47:34">i</name> <operator pos:start="47:36" pos:end="47:36">+</operator> <literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>]</index></name> <operator pos:start="47:41" pos:end="47:41">=</operator> <name pos:start="47:43" pos:end="47:69"><name pos:start="47:43" pos:end="47:59">ff_mdct_win_float</name><index pos:start="47:60" pos:end="47:66">[<expr pos:start="47:61" pos:end="47:61"><literal type="number" pos:start="47:61" pos:end="47:61">4</literal></expr>    ]</index><index pos:start="47:67" pos:end="47:69">[<expr pos:start="47:68" pos:end="47:68"><name pos:start="47:68" pos:end="47:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:70"><expr pos:start="49:13" pos:end="49:69"><name pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:24">mdct_win_sse</name><index pos:start="49:25" pos:end="49:27">[<expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">1</literal></expr>]</index><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">j</name></expr>]</index><index pos:start="49:31" pos:end="49:39">[<expr pos:start="49:32" pos:end="49:38"><literal type="number" pos:start="49:32" pos:end="49:32">4</literal><operator pos:start="49:33" pos:end="49:33">*</operator><name pos:start="49:34" pos:end="49:34">i</name> <operator pos:start="49:36" pos:end="49:36">+</operator> <literal type="number" pos:start="49:38" pos:end="49:38">2</literal></expr>]</index></name> <operator pos:start="49:41" pos:end="49:41">=</operator> <name pos:start="49:43" pos:end="49:69"><name pos:start="49:43" pos:end="49:59">ff_mdct_win_float</name><index pos:start="49:60" pos:end="49:66">[<expr pos:start="49:61" pos:end="49:61"><name pos:start="49:61" pos:end="49:61">j</name></expr>    ]</index><index pos:start="49:67" pos:end="49:69">[<expr pos:start="49:68" pos:end="49:68"><name pos:start="49:68" pos:end="49:68">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:70"><expr pos:start="51:13" pos:end="51:69"><name pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:24">mdct_win_sse</name><index pos:start="51:25" pos:end="51:27">[<expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr>]</index><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><name pos:start="51:29" pos:end="51:29">j</name></expr>]</index><index pos:start="51:31" pos:end="51:39">[<expr pos:start="51:32" pos:end="51:38"><literal type="number" pos:start="51:32" pos:end="51:32">4</literal><operator pos:start="51:33" pos:end="51:33">*</operator><name pos:start="51:34" pos:end="51:34">i</name> <operator pos:start="51:36" pos:end="51:36">+</operator> <literal type="number" pos:start="51:38" pos:end="51:38">3</literal></expr>]</index></name> <operator pos:start="51:41" pos:end="51:41">=</operator> <name pos:start="51:43" pos:end="51:69"><name pos:start="51:43" pos:end="51:59">ff_mdct_win_float</name><index pos:start="51:60" pos:end="51:66">[<expr pos:start="51:61" pos:end="51:65"><name pos:start="51:61" pos:end="51:61">j</name> <operator pos:start="51:63" pos:end="51:63">+</operator> <literal type="number" pos:start="51:65" pos:end="51:65">4</literal></expr>]</index><index pos:start="51:67" pos:end="51:69">[<expr pos:start="51:68" pos:end="51:68"><name pos:start="51:68" pos:end="51:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



<cpp:if pos:start="59:1" pos:end="59:33">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:33"><name pos:start="59:5" pos:end="59:14">HAVE_6REGS</name> <operator pos:start="59:16" pos:end="59:17">&amp;&amp;</operator> <name pos:start="59:19" pos:end="59:33">HAVE_SSE_INLINE</name></expr></cpp:if>

    <if_stmt pos:start="61:5" pos:end="76:0"><if pos:start="61:5" pos:end="76:0">if <condition pos:start="61:8" pos:end="61:30">(<expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:18">INLINE_SSE</name><argument_list pos:start="61:19" pos:end="61:29">(<argument pos:start="61:20" pos:end="61:28"><expr pos:start="61:20" pos:end="61:28"><name pos:start="61:20" pos:end="61:28">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:32" pos:end="76:0">{<block_content pos:start="63:9" pos:end="63:49">

        <expr_stmt pos:start="63:9" pos:end="63:49"><expr pos:start="63:9" pos:end="63:48"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:29">apply_window_float</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:48">apply_window_mp3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="67:8" pos:end="67:28">/* HAVE_SSE_INLINE */</comment>



<cpp:if pos:start="71:1" pos:end="71:13">#<cpp:directive pos:start="71:2" pos:end="71:3">if</cpp:directive> <expr pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:13">HAVE_YASM</name></expr></cpp:if>

<cpp:if pos:start="73:1" pos:end="73:12">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:12"><name pos:start="73:5" pos:end="73:12">HAVE_SSE</name></expr></cpp:if>

<cpp:if pos:start="75:1" pos:end="75:15">#<cpp:directive pos:start="75:2" pos:end="75:3">if</cpp:directive> <expr pos:start="75:5" pos:end="75:15"><name pos:start="75:5" pos:end="75:15">ARCH_X86_32</name></expr></cpp:if>

    <if_stmt pos:start="77:5" pos:end="84:0"><if pos:start="77:5" pos:end="84:0">if <condition pos:start="77:8" pos:end="77:32">(<expr pos:start="77:9" pos:end="77:31"><call pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:20">EXTERNAL_SSE</name><argument_list pos:start="77:21" pos:end="77:31">(<argument pos:start="77:22" pos:end="77:30"><expr pos:start="77:22" pos:end="77:30"><name pos:start="77:22" pos:end="77:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:34" pos:end="84:0">{<block_content pos:start="79:9" pos:end="79:53">

        <expr_stmt pos:start="79:9" pos:end="79:53"><expr pos:start="79:9" pos:end="79:52"><name pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:31">imdct36_blocks_float</name></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <name pos:start="79:35" pos:end="79:52">imdct36_blocks_sse</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:33">(<expr pos:start="85:9" pos:end="85:32"><call pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:21">EXTERNAL_SSE2</name><argument_list pos:start="85:22" pos:end="85:32">(<argument pos:start="85:23" pos:end="85:31"><expr pos:start="85:23" pos:end="85:31"><name pos:start="85:23" pos:end="85:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:35" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:54">

        <expr_stmt pos:start="87:9" pos:end="87:54"><expr pos:start="87:9" pos:end="87:53"><name pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:31">imdct36_blocks_float</name></name> <operator pos:start="87:33" pos:end="87:33">=</operator> <name pos:start="87:35" pos:end="87:53">imdct36_blocks_sse2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:33">(<expr pos:start="91:9" pos:end="91:32"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:21">EXTERNAL_SSE3</name><argument_list pos:start="91:22" pos:end="91:32">(<argument pos:start="91:23" pos:end="91:31"><expr pos:start="91:23" pos:end="91:31"><name pos:start="91:23" pos:end="91:31">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:35" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:54">

        <expr_stmt pos:start="93:9" pos:end="93:54"><expr pos:start="93:9" pos:end="93:53"><name pos:start="93:9" pos:end="93:31"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:31">imdct36_blocks_float</name></name> <operator pos:start="93:33" pos:end="93:33">=</operator> <name pos:start="93:35" pos:end="93:53">imdct36_blocks_sse3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="106:0"><if pos:start="97:5" pos:end="106:0">if <condition pos:start="97:8" pos:end="97:34">(<expr pos:start="97:9" pos:end="97:33"><call pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:22">EXTERNAL_SSSE3</name><argument_list pos:start="97:23" pos:end="97:33">(<argument pos:start="97:24" pos:end="97:32"><expr pos:start="97:24" pos:end="97:32"><name pos:start="97:24" pos:end="97:32">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:36" pos:end="106:0">{<block_content pos:start="99:9" pos:end="99:55">

        <expr_stmt pos:start="99:9" pos:end="99:55"><expr pos:start="99:9" pos:end="99:54"><name pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:31">imdct36_blocks_float</name></name> <operator pos:start="99:33" pos:end="99:33">=</operator> <name pos:start="99:35" pos:end="99:54">imdct36_blocks_ssse3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="105:1" pos:end="105:21">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:21">HAVE_AVX_EXTERNAL</name></expr></cpp:if>

    <if_stmt pos:start="107:5" pos:end="116:0"><if pos:start="107:5" pos:end="116:0">if <condition pos:start="107:8" pos:end="107:32">(<expr pos:start="107:9" pos:end="107:31"><call pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:20">EXTERNAL_AVX</name><argument_list pos:start="107:21" pos:end="107:31">(<argument pos:start="107:22" pos:end="107:30"><expr pos:start="107:22" pos:end="107:30"><name pos:start="107:22" pos:end="107:30">cpu_flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:34" pos:end="116:0">{<block_content pos:start="109:9" pos:end="109:53">

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:31"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:31">imdct36_blocks_float</name></name> <operator pos:start="109:33" pos:end="109:33">=</operator> <name pos:start="109:35" pos:end="109:52">imdct36_blocks_avx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="115:8" pos:end="115:22">/* HAVE_YASM */</comment>

</block_content>}</block></function>
</unit>
