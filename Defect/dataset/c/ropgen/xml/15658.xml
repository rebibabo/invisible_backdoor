<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15658.c" pos:tabs="8"><function pos:start="1:1" pos:end="379:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:42">dv_decode_video_segment</name><parameter_list pos:start="1:43" pos:end="5:68">(<parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:63">DVVideoDecodeContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">s</name></decl></parameter>, 

                                           <parameter pos:start="3:44" pos:end="3:58"><decl pos:start="3:44" pos:end="3:58"><type pos:start="3:44" pos:end="3:58"><name pos:start="3:44" pos:end="3:48">UINT8</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:58">buf_ptr1</name></decl></parameter>, 

                                           <parameter pos:start="5:44" pos:end="5:67"><decl pos:start="5:44" pos:end="5:67"><type pos:start="5:44" pos:end="5:67"><specifier pos:start="5:44" pos:end="5:48">const</specifier> <name pos:start="5:50" pos:end="5:55">UINT16</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:67">mb_pos_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="379:1">{<block_content pos:start="9:5" pos:end="377:5">

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">quant</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">dc</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:27">dct_mode</name></decl>, <decl pos:start="9:30" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:35">class1</name></decl>, <decl pos:start="9:38" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:38">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">mb_index</name></decl>, <decl pos:start="11:19" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:22">mb_x</name></decl>, <decl pos:start="11:25" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:28">mb_y</name></decl>, <decl pos:start="11:31" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:31" pos:end="11:31">v</name></decl>, <decl pos:start="11:34" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:43">last_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">DCTELEM</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">block</name></decl>, <decl pos:start="13:21" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:27">block1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">c_offset</name></decl>, <decl pos:start="15:19" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:27">bits_left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">UINT8</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:16">y_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:13">BlockInfo</name></type> <name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:21">mb_data</name><index pos:start="19:22" pos:end="19:28">[<expr pos:start="19:23" pos:end="19:27"><literal type="number" pos:start="19:23" pos:end="19:23">5</literal> <operator pos:start="19:25" pos:end="19:25">*</operator> <literal type="number" pos:start="19:27" pos:end="19:27">6</literal></expr>]</index></name></decl>, <decl pos:start="19:31" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:13"><modifier pos:start="19:31" pos:end="19:31">*</modifier></type><name pos:start="19:32" pos:end="19:33">mb</name></decl>, <decl pos:start="19:36" pos:end="19:39"><type ref="prev" pos:start="19:5" pos:end="19:13"><modifier pos:start="19:36" pos:end="19:36">*</modifier></type><name pos:start="19:37" pos:end="19:39">mb1</name></decl>;</decl_stmt>

    <function_decl pos:start="21:5" pos:end="21:65"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">void</name></type> (<modifier pos:start="21:11" pos:end="21:11">*</modifier><name pos:start="21:12" pos:end="21:19">idct_put</name>)<parameter_list pos:start="21:21" pos:end="21:64">(<parameter pos:start="21:22" pos:end="21:32"><decl pos:start="21:22" pos:end="21:32"><type pos:start="21:22" pos:end="21:32"><name pos:start="21:22" pos:end="21:26">UINT8</name> <modifier pos:start="21:28" pos:end="21:28">*</modifier></type><name pos:start="21:29" pos:end="21:32">dest</name></decl></parameter>, <parameter pos:start="21:35" pos:end="21:47"><decl pos:start="21:35" pos:end="21:47"><type pos:start="21:35" pos:end="21:47"><name pos:start="21:35" pos:end="21:37">int</name></type> <name pos:start="21:39" pos:end="21:47">line_size</name></decl></parameter>, <parameter pos:start="21:50" pos:end="21:63"><decl pos:start="21:50" pos:end="21:63"><type pos:start="21:50" pos:end="21:63"><name pos:start="21:50" pos:end="21:56">DCTELEM</name> <modifier pos:start="21:58" pos:end="21:58">*</modifier></type><name pos:start="21:59" pos:end="21:63">block</name></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">UINT8</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:18">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:17">PutBitContext</name></type> <name pos:start="25:19" pos:end="25:20">pb</name></decl>, <decl pos:start="25:23" pos:end="25:27"><type ref="prev" pos:start="25:5" pos:end="25:17"/><name pos:start="25:23" pos:end="25:27">vs_pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:31"><type pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:9">UINT8</name></type> <name pos:start="27:11" pos:end="27:31"><name pos:start="27:11" pos:end="27:23">mb_bit_buffer</name><index pos:start="27:24" pos:end="27:31">[<expr pos:start="27:25" pos:end="27:30"><literal type="number" pos:start="27:25" pos:end="27:26">80</literal> <operator pos:start="27:28" pos:end="27:28">+</operator> <literal type="number" pos:start="27:30" pos:end="27:30">4</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="27:34" pos:end="27:55">/* allow some slack */</comment>

    <decl_stmt pos:start="29:5" pos:end="29:21"><decl pos:start="29:5" pos:end="29:20"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:20">mb_bit_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:36"><decl pos:start="31:5" pos:end="31:35"><type pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:9">UINT8</name></type> <name pos:start="31:11" pos:end="31:35"><name pos:start="31:11" pos:end="31:23">vs_bit_buffer</name><index pos:start="31:24" pos:end="31:35">[<expr pos:start="31:25" pos:end="31:34"><literal type="number" pos:start="31:25" pos:end="31:25">5</literal> <operator pos:start="31:27" pos:end="31:27">*</operator> <literal type="number" pos:start="31:29" pos:end="31:30">80</literal> <operator pos:start="31:32" pos:end="31:32">+</operator> <literal type="number" pos:start="31:34" pos:end="31:34">4</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="block" pos:start="31:38" pos:end="31:59">/* allow some slack */</comment>

    <decl_stmt pos:start="33:5" pos:end="33:21"><decl pos:start="33:5" pos:end="33:20"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:20">vs_bit_count</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><call pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:41">(<argument pos:start="37:12" pos:end="37:19"><expr pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:12">s</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:19">block</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr></argument>, <argument pos:start="37:25" pos:end="37:40"><expr pos:start="37:25" pos:end="37:40"><sizeof pos:start="37:25" pos:end="37:40">sizeof<argument_list pos:start="37:31" pos:end="37:40">(<argument pos:start="37:32" pos:end="37:39"><expr pos:start="37:32" pos:end="37:39"><name pos:start="37:32" pos:end="37:39"><name pos:start="37:32" pos:end="37:32">s</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:39">block</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:56">/* pass 1 : read DC and AC coefficients in blocks */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:11">buf_ptr</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:22">buf_ptr1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:10">block1</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">&amp;</operator><name pos:start="45:15" pos:end="45:28"><name pos:start="45:15" pos:end="45:15">s</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:22">block</name><index pos:start="45:23" pos:end="45:25">[<expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr>]</index><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:7">mb1</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <name pos:start="47:11" pos:end="47:17">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:61"><expr pos:start="49:5" pos:end="49:60"><call pos:start="49:5" pos:end="49:60"><name pos:start="49:5" pos:end="49:17">init_put_bits</name><argument_list pos:start="49:18" pos:end="49:60">(<argument pos:start="49:19" pos:end="49:24"><expr pos:start="49:19" pos:end="49:24"><operator pos:start="49:19" pos:end="49:19">&amp;</operator><name pos:start="49:20" pos:end="49:24">vs_pb</name></expr></argument>, <argument pos:start="49:27" pos:end="49:39"><expr pos:start="49:27" pos:end="49:39"><name pos:start="49:27" pos:end="49:39">vs_bit_buffer</name></expr></argument>, <argument pos:start="49:42" pos:end="49:47"><expr pos:start="49:42" pos:end="49:47"><literal type="number" pos:start="49:42" pos:end="49:42">5</literal> <operator pos:start="49:44" pos:end="49:44">*</operator> <literal type="number" pos:start="49:46" pos:end="49:47">80</literal></expr></argument>, <argument pos:start="49:50" pos:end="49:53"><expr pos:start="49:50" pos:end="49:53"><name pos:start="49:50" pos:end="49:53">NULL</name></expr></argument>, <argument pos:start="49:56" pos:end="49:59"><expr pos:start="49:56" pos:end="49:59"><name pos:start="49:56" pos:end="49:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:16">vs_bit_count</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="229:5">for<control pos:start="53:8" pos:end="53:47">(<init pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:16">mb_index</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</init> <condition pos:start="53:23" pos:end="53:35"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:30">mb_index</name> <operator pos:start="53:32" pos:end="53:32">&lt;</operator> <literal type="number" pos:start="53:34" pos:end="53:34">5</literal></expr>;</condition> <incr pos:start="53:37" pos:end="53:46"><expr pos:start="53:37" pos:end="53:46"><name pos:start="53:37" pos:end="53:44">mb_index</name><operator pos:start="53:45" pos:end="53:46">++</operator></expr></incr>)</control> <block pos:start="53:49" pos:end="229:5">{<block_content pos:start="57:9" pos:end="227:25">

        <comment type="block" pos:start="55:9" pos:end="55:25">/* skip header */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:13">quant</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:23">buf_ptr</name><index pos:start="57:24" pos:end="57:26">[<expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">3</literal></expr>]</index></name> <operator pos:start="57:28" pos:end="57:28">&amp;</operator> <literal type="number" pos:start="57:30" pos:end="57:33">0x0f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:15">buf_ptr</name> <operator pos:start="59:17" pos:end="59:18">+=</operator> <literal type="number" pos:start="59:20" pos:end="59:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:58"><expr pos:start="61:9" pos:end="61:57"><call pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:21">init_put_bits</name><argument_list pos:start="61:22" pos:end="61:57">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:25">pb</name></expr></argument>, <argument pos:start="61:28" pos:end="61:40"><expr pos:start="61:28" pos:end="61:40"><name pos:start="61:28" pos:end="61:40">mb_bit_buffer</name></expr></argument>, <argument pos:start="61:43" pos:end="61:44"><expr pos:start="61:43" pos:end="61:44"><literal type="number" pos:start="61:43" pos:end="61:44">80</literal></expr></argument>, <argument pos:start="61:47" pos:end="61:50"><expr pos:start="61:47" pos:end="61:50"><name pos:start="61:47" pos:end="61:50">NULL</name></expr></argument>, <argument pos:start="61:53" pos:end="61:56"><expr pos:start="61:53" pos:end="61:56"><name pos:start="61:53" pos:end="61:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:20">mb_bit_count</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <literal type="number" pos:start="63:24" pos:end="63:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:17"><expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:10">mb</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <name pos:start="65:14" pos:end="65:16">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:23"><expr pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:13">block</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:22">block1</name></expr>;</expr_stmt>

        <for pos:start="69:9" pos:end="151:9">for<control pos:start="69:12" pos:end="69:29">(<init pos:start="69:13" pos:end="69:18"><expr pos:start="69:13" pos:end="69:17"><name pos:start="69:13" pos:end="69:13">j</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <literal type="number" pos:start="69:17" pos:end="69:17">0</literal></expr>;</init><condition pos:start="69:19" pos:end="69:24"><expr pos:start="69:19" pos:end="69:23"><name pos:start="69:19" pos:end="69:19">j</name> <operator pos:start="69:21" pos:end="69:21">&lt;</operator> <literal type="number" pos:start="69:23" pos:end="69:23">6</literal></expr>;</condition> <incr pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:26">j</name><operator pos:start="69:27" pos:end="69:28">++</operator></expr></incr>)</control> <block pos:start="69:31" pos:end="151:9">{<block_content pos:start="73:13" pos:end="149:17">

            <comment type="block" pos:start="71:13" pos:end="71:50">/* NOTE: size is not important here */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><call pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:25">init_get_bits</name><argument_list pos:start="73:26" pos:end="73:46">(<argument pos:start="73:27" pos:end="73:32"><expr pos:start="73:27" pos:end="73:32"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:32"><name pos:start="73:28" pos:end="73:28">s</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:32">gb</name></name></expr></argument>, <argument pos:start="73:35" pos:end="73:41"><expr pos:start="73:35" pos:end="73:41"><name pos:start="73:35" pos:end="73:41">buf_ptr</name></expr></argument>, <argument pos:start="73:44" pos:end="73:45"><expr pos:start="73:44" pos:end="73:45"><literal type="number" pos:start="73:44" pos:end="73:45">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            

            <comment type="block" pos:start="77:13" pos:end="77:28">/* get the dc */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:37"><expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:14">dc</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:36"><name pos:start="79:18" pos:end="79:25">get_bits</name><argument_list pos:start="79:26" pos:end="79:36">(<argument pos:start="79:27" pos:end="79:32"><expr pos:start="79:27" pos:end="79:32"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:32">gb</name></name></expr></argument>, <argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><literal type="number" pos:start="79:35" pos:end="79:35">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:14">dc</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <operator pos:start="81:18" pos:end="81:18">(</operator><name pos:start="81:19" pos:end="81:20">dc</name> <operator pos:start="81:22" pos:end="81:23">&lt;&lt;</operator> <operator pos:start="81:25" pos:end="81:25">(</operator><literal type="number" pos:start="81:26" pos:end="81:29">32</literal> <operator pos:start="81:29" pos:end="81:29">-</operator> <literal type="number" pos:start="81:31" pos:end="81:31">9</literal><operator pos:start="81:32" pos:end="81:32">)</operator><operator pos:start="81:33" pos:end="81:33">)</operator> <operator pos:start="81:35" pos:end="81:36">&gt;&gt;</operator> <operator pos:start="81:38" pos:end="81:38">(</operator><literal type="number" pos:start="81:39" pos:end="81:42">32</literal> <operator pos:start="81:42" pos:end="81:42">-</operator> <literal type="number" pos:start="81:44" pos:end="81:44">9</literal><operator pos:start="81:45" pos:end="81:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:41"><expr pos:start="83:13" pos:end="83:40"><name pos:start="83:13" pos:end="83:20">dct_mode</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:40"><name pos:start="83:24" pos:end="83:32">get_bits1</name><argument_list pos:start="83:33" pos:end="83:40">(<argument pos:start="83:34" pos:end="83:39"><expr pos:start="83:34" pos:end="83:39"><operator pos:start="83:34" pos:end="83:34">&amp;</operator><name pos:start="83:35" pos:end="83:39"><name pos:start="83:35" pos:end="83:35">s</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:36"><expr pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:14">mb</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:24">dct_mode</name></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:35">dct_mode</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:14">mb</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:26">scan_table</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:51"><name pos:start="87:30" pos:end="87:30">s</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:41">dv_zigzag</name><index pos:start="87:42" pos:end="87:51">[<expr pos:start="87:43" pos:end="87:50"><name pos:start="87:43" pos:end="87:50">dct_mode</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:41"><expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:18">class1</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:40"><name pos:start="89:22" pos:end="89:29">get_bits</name><argument_list pos:start="89:30" pos:end="89:40">(<argument pos:start="89:31" pos:end="89:36"><expr pos:start="89:31" pos:end="89:36"><operator pos:start="89:31" pos:end="89:31">&amp;</operator><name pos:start="89:32" pos:end="89:36"><name pos:start="89:32" pos:end="89:32">s</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:36">gb</name></name></expr></argument>, <argument pos:start="89:39" pos:end="89:39"><expr pos:start="89:39" pos:end="89:39"><literal type="number" pos:start="89:39" pos:end="89:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:45"><expr pos:start="91:13" pos:end="91:44"><name pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:14">mb</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:28">shift_offset</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <operator pos:start="91:32" pos:end="91:32">(</operator><name pos:start="91:33" pos:end="91:38">class1</name> <operator pos:start="91:40" pos:end="91:41">==</operator> <literal type="number" pos:start="91:43" pos:end="91:43">3</literal><operator pos:start="91:44" pos:end="91:44">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="95:50"><expr pos:start="93:13" pos:end="95:49"><name pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:14">mb</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:27">shift_table</name></name> <operator pos:start="93:29" pos:end="93:29">=</operator> <name pos:start="93:31" pos:end="95:49"><name pos:start="93:31" pos:end="93:31">s</name><operator pos:start="93:32" pos:end="93:33">-&gt;</operator><name pos:start="93:34" pos:end="93:41">dv_shift</name><index pos:start="93:42" pos:end="93:51">[<expr pos:start="93:43" pos:end="93:50"><name pos:start="93:43" pos:end="93:50">dct_mode</name></expr>]</index>

                <index pos:start="95:17" pos:end="95:49">[<expr pos:start="95:18" pos:end="95:48"><name pos:start="95:18" pos:end="95:22">quant</name> <operator pos:start="95:24" pos:end="95:24">+</operator> <name pos:start="95:26" pos:end="95:48"><name pos:start="95:26" pos:end="95:40">dv_quant_offset</name><index pos:start="95:41" pos:end="95:48">[<expr pos:start="95:42" pos:end="95:47"><name pos:start="95:42" pos:end="95:47">class1</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:25"><expr pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:14">dc</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:19">dc</name> <operator pos:start="97:21" pos:end="97:22">&lt;&lt;</operator> <literal type="number" pos:start="97:24" pos:end="97:24">2</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="99:13" pos:end="101:31">/* convert to unsigned because 128 is not added in the

               standard IDCT */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:23"><expr pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:14">dc</name> <operator pos:start="103:16" pos:end="103:17">+=</operator> <literal type="number" pos:start="103:19" pos:end="103:22">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:26"><expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:17">block</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>]</index></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:25">dc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:40"><expr pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:22">last_index</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:39"><name pos:start="107:26" pos:end="107:36">block_sizes</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><name pos:start="107:38" pos:end="107:38">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:39"><expr pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:19">buf_ptr</name> <operator pos:start="109:21" pos:end="109:22">+=</operator> <name pos:start="109:24" pos:end="109:33">last_index</name> <operator pos:start="109:35" pos:end="109:36">&gt;&gt;</operator> <literal type="number" pos:start="109:38" pos:end="109:38">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:24"><expr pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:19"><name pos:start="111:13" pos:end="111:14">mb</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:19">pos</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:38"><expr pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:33"><name pos:start="113:13" pos:end="113:14">mb</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:33">partial_bit_count</name></name> <operator pos:start="113:35" pos:end="113:35">=</operator> <literal type="number" pos:start="113:37" pos:end="113:37">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:51"><expr pos:start="117:13" pos:end="117:50"><call pos:start="117:13" pos:end="117:50"><name pos:start="117:13" pos:end="117:24">dv_decode_ac</name><argument_list pos:start="117:25" pos:end="117:50">(<argument pos:start="117:26" pos:end="117:26"><expr pos:start="117:26" pos:end="117:26"><name pos:start="117:26" pos:end="117:26">s</name></expr></argument>, <argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><name pos:start="117:29" pos:end="117:30">mb</name></expr></argument>, <argument pos:start="117:33" pos:end="117:37"><expr pos:start="117:33" pos:end="117:37"><name pos:start="117:33" pos:end="117:37">block</name></expr></argument>, <argument pos:start="117:40" pos:end="117:49"><expr pos:start="117:40" pos:end="117:49"><name pos:start="117:40" pos:end="117:49">last_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="121:13" pos:end="123:35">/* write the remaining bits  in a new buffer only if the

               block is finished */</comment>

            <expr_stmt pos:start="125:13" pos:end="125:49"><expr pos:start="125:13" pos:end="125:48"><name pos:start="125:13" pos:end="125:21">bits_left</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:34">last_index</name> <operator pos:start="125:36" pos:end="125:36">-</operator> <name pos:start="125:38" pos:end="125:48"><name pos:start="125:38" pos:end="125:38">s</name><operator pos:start="125:39" pos:end="125:40">-&gt;</operator><name pos:start="125:41" pos:end="125:42">gb</name><operator pos:start="125:43" pos:end="125:43">.</operator><name pos:start="125:44" pos:end="125:48">index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="145:13"><if pos:start="127:13" pos:end="135:13">if <condition pos:start="127:16" pos:end="127:32">(<expr pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:18">mb</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:31">eob_reached</name></name></expr>)</condition> <block pos:start="127:34" pos:end="135:13">{<block_content pos:start="129:17" pos:end="133:49">

                <expr_stmt pos:start="129:17" pos:end="129:42"><expr pos:start="129:17" pos:end="129:41"><name pos:start="129:17" pos:end="129:37"><name pos:start="129:17" pos:end="129:18">mb</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:37">partial_bit_count</name></name> <operator pos:start="129:39" pos:end="129:39">=</operator> <literal type="number" pos:start="129:41" pos:end="129:41">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:42"><expr pos:start="131:17" pos:end="131:41"><name pos:start="131:17" pos:end="131:28">mb_bit_count</name> <operator pos:start="131:30" pos:end="131:31">+=</operator> <name pos:start="131:33" pos:end="131:41">bits_left</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:49"><expr pos:start="133:17" pos:end="133:48"><call pos:start="133:17" pos:end="133:48"><name pos:start="133:17" pos:end="133:24">bit_copy</name><argument_list pos:start="133:25" pos:end="133:48">(<argument pos:start="133:26" pos:end="133:28"><expr pos:start="133:26" pos:end="133:28"><operator pos:start="133:26" pos:end="133:26">&amp;</operator><name pos:start="133:27" pos:end="133:28">pb</name></expr></argument>, <argument pos:start="133:31" pos:end="133:36"><expr pos:start="133:31" pos:end="133:36"><operator pos:start="133:31" pos:end="133:31">&amp;</operator><name pos:start="133:32" pos:end="133:36"><name pos:start="133:32" pos:end="133:32">s</name><operator pos:start="133:33" pos:end="133:34">-&gt;</operator><name pos:start="133:35" pos:end="133:36">gb</name></name></expr></argument>, <argument pos:start="133:39" pos:end="133:47"><expr pos:start="133:39" pos:end="133:47"><name pos:start="133:39" pos:end="133:47">bits_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="135:15" pos:end="145:13">else <block pos:start="135:20" pos:end="145:13">{<block_content pos:start="141:17" pos:end="143:69">

                <comment type="block" pos:start="137:17" pos:end="139:33">/* should be &lt; 16 bits otherwise a codeword could have

                   been parsed */</comment>

                <expr_stmt pos:start="141:17" pos:end="141:50"><expr pos:start="141:17" pos:end="141:49"><name pos:start="141:17" pos:end="141:37"><name pos:start="141:17" pos:end="141:18">mb</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:37">partial_bit_count</name></name> <operator pos:start="141:39" pos:end="141:39">=</operator> <name pos:start="141:41" pos:end="141:49">bits_left</name></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:69"><expr pos:start="143:17" pos:end="143:68"><name pos:start="143:17" pos:end="143:38"><name pos:start="143:17" pos:end="143:18">mb</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:38">partial_bit_buffer</name></name> <operator pos:start="143:40" pos:end="143:40">=</operator> <call pos:start="143:42" pos:end="143:68"><name pos:start="143:42" pos:end="143:49">get_bits</name><argument_list pos:start="143:50" pos:end="143:68">(<argument pos:start="143:51" pos:end="143:56"><expr pos:start="143:51" pos:end="143:56"><operator pos:start="143:51" pos:end="143:51">&amp;</operator><name pos:start="143:52" pos:end="143:56"><name pos:start="143:52" pos:end="143:52">s</name><operator pos:start="143:53" pos:end="143:54">-&gt;</operator><name pos:start="143:55" pos:end="143:56">gb</name></name></expr></argument>, <argument pos:start="143:59" pos:end="143:67"><expr pos:start="143:59" pos:end="143:67"><name pos:start="143:59" pos:end="143:67">bits_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:24"><expr pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:17">block</name> <operator pos:start="147:19" pos:end="147:20">+=</operator> <literal type="number" pos:start="147:22" pos:end="147:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:17"><expr pos:start="149:13" pos:end="149:16"><name pos:start="149:13" pos:end="149:14">mb</name><operator pos:start="149:15" pos:end="149:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        

        <expr_stmt pos:start="155:9" pos:end="162:0"><expr pos:start="155:9" pos:end="155:27"><call pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:22">flush_put_bits</name><argument_list pos:start="155:23" pos:end="155:27">(<argument pos:start="155:24" pos:end="155:26"><expr pos:start="155:24" pos:end="155:26"><operator pos:start="155:24" pos:end="155:24">&amp;</operator><name pos:start="155:25" pos:end="155:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="159:9" pos:end="159:46">/* pass 2 : we can do it just after */</comment>

<cpp:ifdef pos:start="161:1" pos:end="161:16">#<cpp:directive pos:start="161:2" pos:end="161:6">ifdef</cpp:directive> <name pos:start="161:8" pos:end="161:16">VLC_DEBUG</name></cpp:ifdef>

        <expr_stmt pos:start="163:9" pos:end="166:0"><expr pos:start="163:9" pos:end="163:51"><call pos:start="163:9" pos:end="163:51"><name pos:start="163:9" pos:end="163:14">printf</name><argument_list pos:start="163:15" pos:end="163:51">(<argument pos:start="163:16" pos:end="163:36"><expr pos:start="163:16" pos:end="163:36"><literal type="string" pos:start="163:16" pos:end="163:36">"***pass 2 size=%d\n"</literal></expr></argument>, <argument pos:start="163:39" pos:end="163:50"><expr pos:start="163:39" pos:end="163:50"><name pos:start="163:39" pos:end="163:50">mb_bit_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="167:9" pos:end="167:23"><expr pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:13">block</name> <operator pos:start="167:15" pos:end="167:15">=</operator> <name pos:start="167:17" pos:end="167:22">block1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:17"><expr pos:start="169:9" pos:end="169:16"><name pos:start="169:9" pos:end="169:10">mb</name> <operator pos:start="169:12" pos:end="169:12">=</operator> <name pos:start="169:14" pos:end="169:16">mb1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:49"><expr pos:start="171:9" pos:end="171:48"><call pos:start="171:9" pos:end="171:48"><name pos:start="171:9" pos:end="171:21">init_get_bits</name><argument_list pos:start="171:22" pos:end="171:48">(<argument pos:start="171:23" pos:end="171:28"><expr pos:start="171:23" pos:end="171:28"><operator pos:start="171:23" pos:end="171:23">&amp;</operator><name pos:start="171:24" pos:end="171:28"><name pos:start="171:24" pos:end="171:24">s</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:28">gb</name></name></expr></argument>, <argument pos:start="171:31" pos:end="171:43"><expr pos:start="171:31" pos:end="171:43"><name pos:start="171:31" pos:end="171:43">mb_bit_buffer</name></expr></argument>, <argument pos:start="171:46" pos:end="171:47"><expr pos:start="171:46" pos:end="171:47"><literal type="number" pos:start="171:46" pos:end="171:47">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="173:9" pos:end="211:9">for<control pos:start="173:12" pos:end="173:29">(<init pos:start="173:13" pos:end="173:18"><expr pos:start="173:13" pos:end="173:17"><name pos:start="173:13" pos:end="173:13">j</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <literal type="number" pos:start="173:17" pos:end="173:17">0</literal></expr>;</init><condition pos:start="173:19" pos:end="173:24"><expr pos:start="173:19" pos:end="173:23"><name pos:start="173:19" pos:end="173:19">j</name> <operator pos:start="173:21" pos:end="173:21">&lt;</operator> <literal type="number" pos:start="173:23" pos:end="173:23">6</literal></expr>;</condition> <incr pos:start="173:26" pos:end="173:28"><expr pos:start="173:26" pos:end="173:28"><name pos:start="173:26" pos:end="173:26">j</name><operator pos:start="173:27" pos:end="173:28">++</operator></expr></incr>)</control> <block pos:start="173:31" pos:end="211:9">{<block_content pos:start="175:13" pos:end="209:17">

            <if_stmt pos:start="175:13" pos:end="205:13"><if pos:start="175:13" pos:end="205:13">if <condition pos:start="175:16" pos:end="175:63">(<expr pos:start="175:17" pos:end="175:62"><operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:32"><name pos:start="175:18" pos:end="175:19">mb</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:32">eob_reached</name></name> <operator pos:start="175:34" pos:end="175:35">&amp;&amp;</operator> <name pos:start="175:37" pos:end="175:47"><name pos:start="175:37" pos:end="175:37">s</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:41">gb</name><operator pos:start="175:42" pos:end="175:42">.</operator><name pos:start="175:43" pos:end="175:47">index</name></name> <operator pos:start="175:49" pos:end="175:49">&lt;</operator> <name pos:start="175:51" pos:end="175:62">mb_bit_count</name></expr>)</condition> <block pos:start="175:65" pos:end="205:13">{<block_content pos:start="177:17" pos:end="203:17">

                <expr_stmt pos:start="177:17" pos:end="177:57"><expr pos:start="177:17" pos:end="177:56"><call pos:start="177:17" pos:end="177:56"><name pos:start="177:17" pos:end="177:28">dv_decode_ac</name><argument_list pos:start="177:29" pos:end="177:56">(<argument pos:start="177:30" pos:end="177:30"><expr pos:start="177:30" pos:end="177:30"><name pos:start="177:30" pos:end="177:30">s</name></expr></argument>, <argument pos:start="177:33" pos:end="177:34"><expr pos:start="177:33" pos:end="177:34"><name pos:start="177:33" pos:end="177:34">mb</name></expr></argument>, <argument pos:start="177:37" pos:end="177:41"><expr pos:start="177:37" pos:end="177:41"><name pos:start="177:37" pos:end="177:41">block</name></expr></argument>, <argument pos:start="177:44" pos:end="177:55"><expr pos:start="177:44" pos:end="177:55"><name pos:start="177:44" pos:end="177:55">mb_bit_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="179:17" pos:end="179:74">/* if still not finished, no need to parse other blocks */</comment>

                <if_stmt pos:start="181:17" pos:end="203:17"><if pos:start="181:17" pos:end="203:17">if <condition pos:start="181:20" pos:end="181:37">(<expr pos:start="181:21" pos:end="181:36"><operator pos:start="181:21" pos:end="181:21">!</operator><name pos:start="181:22" pos:end="181:36"><name pos:start="181:22" pos:end="181:23">mb</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:36">eob_reached</name></name></expr>)</condition> <block pos:start="181:39" pos:end="203:17">{<block_content pos:start="187:21" pos:end="201:33">

                    <comment type="block" pos:start="183:21" pos:end="185:55">/* we could not parse the current AC coefficient,

                       so we add the remaining bytes */</comment>

                    <expr_stmt pos:start="187:21" pos:end="187:59"><expr pos:start="187:21" pos:end="187:58"><name pos:start="187:21" pos:end="187:29">bits_left</name> <operator pos:start="187:31" pos:end="187:31">=</operator> <name pos:start="187:33" pos:end="187:44">mb_bit_count</name> <operator pos:start="187:46" pos:end="187:46">-</operator> <name pos:start="187:48" pos:end="187:58"><name pos:start="187:48" pos:end="187:48">s</name><operator pos:start="187:49" pos:end="187:50">-&gt;</operator><name pos:start="187:51" pos:end="187:52">gb</name><operator pos:start="187:53" pos:end="187:53">.</operator><name pos:start="187:54" pos:end="187:58">index</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="189:21" pos:end="199:21"><if pos:start="189:21" pos:end="199:21">if <condition pos:start="189:24" pos:end="189:38">(<expr pos:start="189:25" pos:end="189:37"><name pos:start="189:25" pos:end="189:33">bits_left</name> <operator pos:start="189:35" pos:end="189:35">&gt;</operator> <literal type="number" pos:start="189:37" pos:end="189:37">0</literal></expr>)</condition> <block pos:start="189:40" pos:end="199:21">{<block_content pos:start="191:25" pos:end="197:56">

                        <expr_stmt pos:start="191:25" pos:end="191:59"><expr pos:start="191:25" pos:end="191:58"><name pos:start="191:25" pos:end="191:45"><name pos:start="191:25" pos:end="191:26">mb</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:45">partial_bit_count</name></name> <operator pos:start="191:47" pos:end="191:48">+=</operator> <name pos:start="191:50" pos:end="191:58">bits_left</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="197:56"><expr pos:start="193:25" pos:end="197:55"><name pos:start="193:25" pos:end="193:46"><name pos:start="193:25" pos:end="193:26">mb</name><operator pos:start="193:27" pos:end="193:28">-&gt;</operator><name pos:start="193:29" pos:end="193:46">partial_bit_buffer</name></name> <operator pos:start="193:48" pos:end="193:48">=</operator> 

                            <operator pos:start="195:29" pos:end="195:29">(</operator><name pos:start="195:30" pos:end="195:51"><name pos:start="195:30" pos:end="195:31">mb</name><operator pos:start="195:32" pos:end="195:33">-&gt;</operator><name pos:start="195:34" pos:end="195:51">partial_bit_buffer</name></name> <operator pos:start="195:53" pos:end="195:54">&lt;&lt;</operator> <name pos:start="195:56" pos:end="195:64">bits_left</name><operator pos:start="195:65" pos:end="195:65">)</operator> <operator pos:start="195:67" pos:end="195:67">|</operator> 

                            <call pos:start="197:29" pos:end="197:55"><name pos:start="197:29" pos:end="197:36">get_bits</name><argument_list pos:start="197:37" pos:end="197:55">(<argument pos:start="197:38" pos:end="197:43"><expr pos:start="197:38" pos:end="197:43"><operator pos:start="197:38" pos:end="197:38">&amp;</operator><name pos:start="197:39" pos:end="197:43"><name pos:start="197:39" pos:end="197:39">s</name><operator pos:start="197:40" pos:end="197:41">-&gt;</operator><name pos:start="197:42" pos:end="197:43">gb</name></name></expr></argument>, <argument pos:start="197:46" pos:end="197:54"><expr pos:start="197:46" pos:end="197:54"><name pos:start="197:46" pos:end="197:54">bits_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <goto pos:start="201:21" pos:end="201:33">goto <name pos:start="201:26" pos:end="201:32">next_mb</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:24"><expr pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:17">block</name> <operator pos:start="207:19" pos:end="207:20">+=</operator> <literal type="number" pos:start="207:22" pos:end="207:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:17"><expr pos:start="209:13" pos:end="209:16"><name pos:start="209:13" pos:end="209:14">mb</name><operator pos:start="209:15" pos:end="209:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="213:9" pos:end="215:37">/* all blocks are finished, so the extra bytes can be used at

           the video segment level */</comment>

        <expr_stmt pos:start="217:9" pos:end="217:47"><expr pos:start="217:9" pos:end="217:46"><name pos:start="217:9" pos:end="217:17">bits_left</name> <operator pos:start="217:19" pos:end="217:19">=</operator> <name pos:start="217:21" pos:end="217:32">mb_bit_count</name> <operator pos:start="217:34" pos:end="217:34">-</operator> <name pos:start="217:36" pos:end="217:46"><name pos:start="217:36" pos:end="217:36">s</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:40">gb</name><operator pos:start="217:41" pos:end="217:41">.</operator><name pos:start="217:42" pos:end="217:46">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:34"><expr pos:start="219:9" pos:end="219:33"><name pos:start="219:9" pos:end="219:20">vs_bit_count</name> <operator pos:start="219:22" pos:end="219:23">+=</operator> <name pos:start="219:25" pos:end="219:33">bits_left</name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:44"><expr pos:start="221:9" pos:end="221:43"><call pos:start="221:9" pos:end="221:43"><name pos:start="221:9" pos:end="221:16">bit_copy</name><argument_list pos:start="221:17" pos:end="221:43">(<argument pos:start="221:18" pos:end="221:23"><expr pos:start="221:18" pos:end="221:23"><operator pos:start="221:18" pos:end="221:18">&amp;</operator><name pos:start="221:19" pos:end="221:23">vs_pb</name></expr></argument>, <argument pos:start="221:26" pos:end="221:31"><expr pos:start="221:26" pos:end="221:31"><operator pos:start="221:26" pos:end="221:26">&amp;</operator><name pos:start="221:27" pos:end="221:31"><name pos:start="221:27" pos:end="221:27">s</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:31">gb</name></name></expr></argument>, <argument pos:start="221:34" pos:end="221:42"><expr pos:start="221:34" pos:end="221:42"><name pos:start="221:34" pos:end="221:42">bits_left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="223:5" pos:end="223:12"><name pos:start="223:5" pos:end="223:11">next_mb</name>:</label>

        <expr_stmt pos:start="225:9" pos:end="225:17"><expr pos:start="225:9" pos:end="225:16"><name pos:start="225:9" pos:end="225:11">mb1</name> <operator pos:start="225:13" pos:end="225:14">+=</operator> <literal type="number" pos:start="225:16" pos:end="225:16">6</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:25"><expr pos:start="227:9" pos:end="227:24"><name pos:start="227:9" pos:end="227:14">block1</name> <operator pos:start="227:16" pos:end="227:17">+=</operator> <literal type="number" pos:start="227:19" pos:end="227:19">6</literal> <operator pos:start="227:21" pos:end="227:21">*</operator> <literal type="number" pos:start="227:23" pos:end="227:24">64</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="233:5" pos:end="233:54">/* we need a pass other the whole video segment */</comment>

    <expr_stmt pos:start="235:5" pos:end="240:0"><expr pos:start="235:5" pos:end="235:26"><call pos:start="235:5" pos:end="235:26"><name pos:start="235:5" pos:end="235:18">flush_put_bits</name><argument_list pos:start="235:19" pos:end="235:26">(<argument pos:start="235:20" pos:end="235:25"><expr pos:start="235:20" pos:end="235:25"><operator pos:start="235:20" pos:end="235:20">&amp;</operator><name pos:start="235:21" pos:end="235:25">vs_pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

<cpp:ifdef pos:start="239:1" pos:end="239:16">#<cpp:directive pos:start="239:2" pos:end="239:6">ifdef</cpp:directive> <name pos:start="239:8" pos:end="239:16">VLC_DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="241:5" pos:end="244:0"><expr pos:start="241:5" pos:end="241:47"><call pos:start="241:5" pos:end="241:47"><name pos:start="241:5" pos:end="241:10">printf</name><argument_list pos:start="241:11" pos:end="241:47">(<argument pos:start="241:12" pos:end="241:32"><expr pos:start="241:12" pos:end="241:32"><literal type="string" pos:start="241:12" pos:end="241:32">"***pass 3 size=%d\n"</literal></expr></argument>, <argument pos:start="241:35" pos:end="241:46"><expr pos:start="241:35" pos:end="241:46"><name pos:start="241:35" pos:end="241:46">vs_bit_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="245:5" pos:end="245:28"><expr pos:start="245:5" pos:end="245:27"><name pos:start="245:5" pos:end="245:9">block</name> <operator pos:start="245:11" pos:end="245:11">=</operator> <operator pos:start="245:13" pos:end="245:13">&amp;</operator><name pos:start="245:14" pos:end="245:27"><name pos:start="245:14" pos:end="245:14">s</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:21">block</name><index pos:start="245:22" pos:end="245:24">[<expr pos:start="245:23" pos:end="245:23"><literal type="number" pos:start="245:23" pos:end="245:23">0</literal></expr>]</index><index pos:start="245:25" pos:end="245:27">[<expr pos:start="245:26" pos:end="245:26"><literal type="number" pos:start="245:26" pos:end="245:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:17"><expr pos:start="247:5" pos:end="247:16"><name pos:start="247:5" pos:end="247:6">mb</name> <operator pos:start="247:8" pos:end="247:8">=</operator> <name pos:start="247:10" pos:end="247:16">mb_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:49"><expr pos:start="249:5" pos:end="249:48"><call pos:start="249:5" pos:end="249:48"><name pos:start="249:5" pos:end="249:17">init_get_bits</name><argument_list pos:start="249:18" pos:end="249:48">(<argument pos:start="249:19" pos:end="249:24"><expr pos:start="249:19" pos:end="249:24"><operator pos:start="249:19" pos:end="249:19">&amp;</operator><name pos:start="249:20" pos:end="249:24"><name pos:start="249:20" pos:end="249:20">s</name><operator pos:start="249:21" pos:end="249:22">-&gt;</operator><name pos:start="249:23" pos:end="249:24">gb</name></name></expr></argument>, <argument pos:start="249:27" pos:end="249:39"><expr pos:start="249:27" pos:end="249:39"><name pos:start="249:27" pos:end="249:39">vs_bit_buffer</name></expr></argument>, <argument pos:start="249:42" pos:end="249:47"><expr pos:start="249:42" pos:end="249:47"><literal type="number" pos:start="249:42" pos:end="249:42">5</literal> <operator pos:start="249:44" pos:end="249:44">*</operator> <literal type="number" pos:start="249:46" pos:end="249:47">80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="251:5" pos:end="273:5">for<control pos:start="251:8" pos:end="251:47">(<init pos:start="251:9" pos:end="251:21"><expr pos:start="251:9" pos:end="251:20"><name pos:start="251:9" pos:end="251:16">mb_index</name> <operator pos:start="251:18" pos:end="251:18">=</operator> <literal type="number" pos:start="251:20" pos:end="251:20">0</literal></expr>;</init> <condition pos:start="251:23" pos:end="251:35"><expr pos:start="251:23" pos:end="251:34"><name pos:start="251:23" pos:end="251:30">mb_index</name> <operator pos:start="251:32" pos:end="251:32">&lt;</operator> <literal type="number" pos:start="251:34" pos:end="251:34">5</literal></expr>;</condition> <incr pos:start="251:37" pos:end="251:46"><expr pos:start="251:37" pos:end="251:46"><name pos:start="251:37" pos:end="251:44">mb_index</name><operator pos:start="251:45" pos:end="251:46">++</operator></expr></incr>)</control> <block pos:start="251:49" pos:end="273:5">{<block_content pos:start="253:9" pos:end="271:9">

        <for pos:start="253:9" pos:end="271:9">for<control pos:start="253:12" pos:end="253:29">(<init pos:start="253:13" pos:end="253:18"><expr pos:start="253:13" pos:end="253:17"><name pos:start="253:13" pos:end="253:13">j</name> <operator pos:start="253:15" pos:end="253:15">=</operator> <literal type="number" pos:start="253:17" pos:end="253:17">0</literal></expr>;</init><condition pos:start="253:19" pos:end="253:24"><expr pos:start="253:19" pos:end="253:23"><name pos:start="253:19" pos:end="253:19">j</name> <operator pos:start="253:21" pos:end="253:21">&lt;</operator> <literal type="number" pos:start="253:23" pos:end="253:23">6</literal></expr>;</condition> <incr pos:start="253:26" pos:end="253:28"><expr pos:start="253:26" pos:end="253:28"><name pos:start="253:26" pos:end="253:26">j</name><operator pos:start="253:27" pos:end="253:28">++</operator></expr></incr>)</control> <block pos:start="253:31" pos:end="271:9">{<block_content pos:start="255:13" pos:end="269:17">

            <if_stmt pos:start="255:13" pos:end="265:13"><if pos:start="255:13" pos:end="265:13">if <condition pos:start="255:16" pos:end="255:33">(<expr pos:start="255:17" pos:end="255:32"><operator pos:start="255:17" pos:end="255:17">!</operator><name pos:start="255:18" pos:end="255:32"><name pos:start="255:18" pos:end="255:19">mb</name><operator pos:start="255:20" pos:end="255:21">-&gt;</operator><name pos:start="255:22" pos:end="255:32">eob_reached</name></name></expr>)</condition> <block pos:start="255:35" pos:end="265:13">{<block_content pos:start="259:17" pos:end="263:57">

<cpp:ifdef pos:start="257:1" pos:end="257:16">#<cpp:directive pos:start="257:2" pos:end="257:6">ifdef</cpp:directive> <name pos:start="257:8" pos:end="257:16">VLC_DEBUG</name></cpp:ifdef>

                <expr_stmt pos:start="259:17" pos:end="262:0"><expr pos:start="259:17" pos:end="259:52"><call pos:start="259:17" pos:end="259:52"><name pos:start="259:17" pos:end="259:22">printf</name><argument_list pos:start="259:23" pos:end="259:52">(<argument pos:start="259:24" pos:end="259:38"><expr pos:start="259:24" pos:end="259:38"><literal type="string" pos:start="259:24" pos:end="259:38">"start %d:%d\n"</literal></expr></argument>, <argument pos:start="259:41" pos:end="259:48"><expr pos:start="259:41" pos:end="259:48"><name pos:start="259:41" pos:end="259:48">mb_index</name></expr></argument>, <argument pos:start="259:51" pos:end="259:51"><expr pos:start="259:51" pos:end="259:51"><name pos:start="259:51" pos:end="259:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="261:1" pos:end="261:6">#<cpp:directive pos:start="261:2" pos:end="261:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="263:17" pos:end="263:57"><expr pos:start="263:17" pos:end="263:56"><call pos:start="263:17" pos:end="263:56"><name pos:start="263:17" pos:end="263:28">dv_decode_ac</name><argument_list pos:start="263:29" pos:end="263:56">(<argument pos:start="263:30" pos:end="263:30"><expr pos:start="263:30" pos:end="263:30"><name pos:start="263:30" pos:end="263:30">s</name></expr></argument>, <argument pos:start="263:33" pos:end="263:34"><expr pos:start="263:33" pos:end="263:34"><name pos:start="263:33" pos:end="263:34">mb</name></expr></argument>, <argument pos:start="263:37" pos:end="263:41"><expr pos:start="263:37" pos:end="263:41"><name pos:start="263:37" pos:end="263:41">block</name></expr></argument>, <argument pos:start="263:44" pos:end="263:55"><expr pos:start="263:44" pos:end="263:55"><name pos:start="263:44" pos:end="263:55">vs_bit_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:24"><expr pos:start="267:13" pos:end="267:23"><name pos:start="267:13" pos:end="267:17">block</name> <operator pos:start="267:19" pos:end="267:20">+=</operator> <literal type="number" pos:start="267:22" pos:end="267:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:17"><expr pos:start="269:13" pos:end="269:16"><name pos:start="269:13" pos:end="269:14">mb</name><operator pos:start="269:15" pos:end="269:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    

    <comment type="block" pos:start="277:5" pos:end="277:39">/* compute idct and place blocks */</comment>

    <expr_stmt pos:start="279:5" pos:end="279:28"><expr pos:start="279:5" pos:end="279:27"><name pos:start="279:5" pos:end="279:9">block</name> <operator pos:start="279:11" pos:end="279:11">=</operator> <operator pos:start="279:13" pos:end="279:13">&amp;</operator><name pos:start="279:14" pos:end="279:27"><name pos:start="279:14" pos:end="279:14">s</name><operator pos:start="279:15" pos:end="279:16">-&gt;</operator><name pos:start="279:17" pos:end="279:21">block</name><index pos:start="279:22" pos:end="279:24">[<expr pos:start="279:23" pos:end="279:23"><literal type="number" pos:start="279:23" pos:end="279:23">0</literal></expr>]</index><index pos:start="279:25" pos:end="279:27">[<expr pos:start="279:26" pos:end="279:26"><literal type="number" pos:start="279:26" pos:end="279:26">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:17"><expr pos:start="281:5" pos:end="281:16"><name pos:start="281:5" pos:end="281:6">mb</name> <operator pos:start="281:8" pos:end="281:8">=</operator> <name pos:start="281:10" pos:end="281:16">mb_data</name></expr>;</expr_stmt>

    <for pos:start="283:5" pos:end="377:5">for<control pos:start="283:8" pos:end="283:47">(<init pos:start="283:9" pos:end="283:21"><expr pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:16">mb_index</name> <operator pos:start="283:18" pos:end="283:18">=</operator> <literal type="number" pos:start="283:20" pos:end="283:20">0</literal></expr>;</init> <condition pos:start="283:23" pos:end="283:35"><expr pos:start="283:23" pos:end="283:34"><name pos:start="283:23" pos:end="283:30">mb_index</name> <operator pos:start="283:32" pos:end="283:32">&lt;</operator> <literal type="number" pos:start="283:34" pos:end="283:34">5</literal></expr>;</condition> <incr pos:start="283:37" pos:end="283:46"><expr pos:start="283:37" pos:end="283:46"><name pos:start="283:37" pos:end="283:44">mb_index</name><operator pos:start="283:45" pos:end="283:46">++</operator></expr></incr>)</control> <block pos:start="283:49" pos:end="377:5">{<block_content pos:start="285:9" pos:end="375:9">

        <expr_stmt pos:start="285:9" pos:end="285:26"><expr pos:start="285:9" pos:end="285:25"><name pos:start="285:9" pos:end="285:9">v</name> <operator pos:start="285:11" pos:end="285:11">=</operator> <operator pos:start="285:13" pos:end="285:13">*</operator><name pos:start="285:14" pos:end="285:23">mb_pos_ptr</name><operator pos:start="285:24" pos:end="285:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:24"><expr pos:start="287:9" pos:end="287:23"><name pos:start="287:9" pos:end="287:12">mb_x</name> <operator pos:start="287:14" pos:end="287:14">=</operator> <name pos:start="287:16" pos:end="287:16">v</name> <operator pos:start="287:18" pos:end="287:18">&amp;</operator> <literal type="number" pos:start="287:20" pos:end="287:23">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:22"><expr pos:start="289:9" pos:end="289:21"><name pos:start="289:9" pos:end="289:12">mb_y</name> <operator pos:start="289:14" pos:end="289:14">=</operator> <name pos:start="289:16" pos:end="289:16">v</name> <operator pos:start="289:18" pos:end="289:19">&gt;&gt;</operator> <literal type="number" pos:start="289:21" pos:end="289:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:81"><expr pos:start="291:9" pos:end="291:80"><name pos:start="291:9" pos:end="291:13">y_ptr</name> <operator pos:start="291:15" pos:end="291:15">=</operator> <name pos:start="291:17" pos:end="291:37"><name pos:start="291:17" pos:end="291:17">s</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:34">current_picture</name><index pos:start="291:35" pos:end="291:37">[<expr pos:start="291:36" pos:end="291:36"><literal type="number" pos:start="291:36" pos:end="291:36">0</literal></expr>]</index></name> <operator pos:start="291:39" pos:end="291:39">+</operator> <operator pos:start="291:41" pos:end="291:41">(</operator><name pos:start="291:42" pos:end="291:45">mb_y</name> <operator pos:start="291:47" pos:end="291:47">*</operator> <name pos:start="291:49" pos:end="291:62"><name pos:start="291:49" pos:end="291:49">s</name><operator pos:start="291:50" pos:end="291:51">-&gt;</operator><name pos:start="291:52" pos:end="291:59">linesize</name><index pos:start="291:60" pos:end="291:62">[<expr pos:start="291:61" pos:end="291:61"><literal type="number" pos:start="291:61" pos:end="291:61">0</literal></expr>]</index></name> <operator pos:start="291:64" pos:end="291:64">*</operator> <literal type="number" pos:start="291:66" pos:end="291:66">8</literal><operator pos:start="291:67" pos:end="291:67">)</operator> <operator pos:start="291:69" pos:end="291:69">+</operator> <operator pos:start="291:71" pos:end="291:71">(</operator><name pos:start="291:72" pos:end="291:75">mb_x</name> <operator pos:start="291:77" pos:end="291:77">*</operator> <literal type="number" pos:start="291:79" pos:end="291:79">8</literal><operator pos:start="291:80" pos:end="291:80">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="299:78"><if pos:start="293:9" pos:end="295:71">if <condition pos:start="293:12" pos:end="293:28">(<expr pos:start="293:13" pos:end="293:27"><name pos:start="293:13" pos:end="293:27"><name pos:start="293:13" pos:end="293:13">s</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:27">sampling_411</name></name></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:71"><block_content pos:start="295:13" pos:end="295:71">

            <expr_stmt pos:start="295:13" pos:end="295:71"><expr pos:start="295:13" pos:end="295:70"><name pos:start="295:13" pos:end="295:20">c_offset</name> <operator pos:start="295:22" pos:end="295:22">=</operator> <operator pos:start="295:24" pos:end="295:24">(</operator><name pos:start="295:25" pos:end="295:28">mb_y</name> <operator pos:start="295:30" pos:end="295:30">*</operator> <name pos:start="295:32" pos:end="295:45"><name pos:start="295:32" pos:end="295:32">s</name><operator pos:start="295:33" pos:end="295:34">-&gt;</operator><name pos:start="295:35" pos:end="295:42">linesize</name><index pos:start="295:43" pos:end="295:45">[<expr pos:start="295:44" pos:end="295:44"><literal type="number" pos:start="295:44" pos:end="295:44">1</literal></expr>]</index></name> <operator pos:start="295:47" pos:end="295:47">*</operator> <literal type="number" pos:start="295:49" pos:end="295:49">8</literal><operator pos:start="295:50" pos:end="295:50">)</operator> <operator pos:start="295:52" pos:end="295:52">+</operator> <operator pos:start="295:54" pos:end="295:54">(</operator><operator pos:start="295:55" pos:end="295:55">(</operator><name pos:start="295:56" pos:end="295:59">mb_x</name> <operator pos:start="295:61" pos:end="295:62">&gt;&gt;</operator> <literal type="number" pos:start="295:64" pos:end="295:64">2</literal><operator pos:start="295:65" pos:end="295:65">)</operator> <operator pos:start="295:67" pos:end="295:67">*</operator> <literal type="number" pos:start="295:69" pos:end="295:69">8</literal><operator pos:start="295:70" pos:end="295:70">)</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="297:9" pos:end="299:78">else<block type="pseudo" pos:start="299:13" pos:end="299:78"><block_content pos:start="299:13" pos:end="299:78">

            <expr_stmt pos:start="299:13" pos:end="299:78"><expr pos:start="299:13" pos:end="299:77"><name pos:start="299:13" pos:end="299:20">c_offset</name> <operator pos:start="299:22" pos:end="299:22">=</operator> <operator pos:start="299:24" pos:end="299:24">(</operator><operator pos:start="299:25" pos:end="299:25">(</operator><name pos:start="299:26" pos:end="299:29">mb_y</name> <operator pos:start="299:31" pos:end="299:32">&gt;&gt;</operator> <literal type="number" pos:start="299:34" pos:end="299:34">1</literal><operator pos:start="299:35" pos:end="299:35">)</operator> <operator pos:start="299:37" pos:end="299:37">*</operator> <name pos:start="299:39" pos:end="299:52"><name pos:start="299:39" pos:end="299:39">s</name><operator pos:start="299:40" pos:end="299:41">-&gt;</operator><name pos:start="299:42" pos:end="299:49">linesize</name><index pos:start="299:50" pos:end="299:52">[<expr pos:start="299:51" pos:end="299:51"><literal type="number" pos:start="299:51" pos:end="299:51">1</literal></expr>]</index></name> <operator pos:start="299:54" pos:end="299:54">*</operator> <literal type="number" pos:start="299:56" pos:end="299:56">8</literal><operator pos:start="299:57" pos:end="299:57">)</operator> <operator pos:start="299:59" pos:end="299:59">+</operator> <operator pos:start="299:61" pos:end="299:61">(</operator><operator pos:start="299:62" pos:end="299:62">(</operator><name pos:start="299:63" pos:end="299:66">mb_x</name> <operator pos:start="299:68" pos:end="299:69">&gt;&gt;</operator> <literal type="number" pos:start="299:71" pos:end="299:71">1</literal><operator pos:start="299:72" pos:end="299:72">)</operator> <operator pos:start="299:74" pos:end="299:74">*</operator> <literal type="number" pos:start="299:76" pos:end="299:76">8</literal><operator pos:start="299:77" pos:end="299:77">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <for pos:start="301:9" pos:end="375:9">for<control pos:start="301:12" pos:end="301:29">(<init pos:start="301:13" pos:end="301:18"><expr pos:start="301:13" pos:end="301:17"><name pos:start="301:13" pos:end="301:13">j</name> <operator pos:start="301:15" pos:end="301:15">=</operator> <literal type="number" pos:start="301:17" pos:end="301:17">0</literal></expr>;</init><condition pos:start="301:19" pos:end="301:24"><expr pos:start="301:19" pos:end="301:23"><name pos:start="301:19" pos:end="301:19">j</name> <operator pos:start="301:21" pos:end="301:21">&lt;</operator> <literal type="number" pos:start="301:23" pos:end="301:23">6</literal></expr>;</condition> <incr pos:start="301:26" pos:end="301:28"><expr pos:start="301:26" pos:end="301:28"><name pos:start="301:26" pos:end="301:26">j</name><operator pos:start="301:27" pos:end="301:28">++</operator></expr></incr>)</control> <block pos:start="301:31" pos:end="375:9">{<block_content pos:start="303:13" pos:end="373:17">

            <expr_stmt pos:start="303:13" pos:end="303:49"><expr pos:start="303:13" pos:end="303:48"><name pos:start="303:13" pos:end="303:20">idct_put</name> <operator pos:start="303:22" pos:end="303:22">=</operator> <name pos:start="303:24" pos:end="303:48"><name pos:start="303:24" pos:end="303:24">s</name><operator pos:start="303:25" pos:end="303:26">-&gt;</operator><name pos:start="303:27" pos:end="303:34">idct_put</name><index pos:start="303:35" pos:end="303:48">[<expr pos:start="303:36" pos:end="303:47"><name pos:start="303:36" pos:end="303:47"><name pos:start="303:36" pos:end="303:37">mb</name><operator pos:start="303:38" pos:end="303:39">-&gt;</operator><name pos:start="303:40" pos:end="303:47">dct_mode</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="305:13" pos:end="369:13"><if pos:start="305:13" pos:end="321:13">if <condition pos:start="305:16" pos:end="305:22">(<expr pos:start="305:17" pos:end="305:21"><name pos:start="305:17" pos:end="305:17">j</name> <operator pos:start="305:19" pos:end="305:19">&lt;</operator> <literal type="number" pos:start="305:21" pos:end="305:21">4</literal></expr>)</condition> <block pos:start="305:24" pos:end="321:13">{<block_content pos:start="307:17" pos:end="319:17">

                <if_stmt pos:start="307:17" pos:end="319:17"><if pos:start="307:17" pos:end="313:17">if <condition pos:start="307:20" pos:end="307:56">(<expr pos:start="307:21" pos:end="307:55"><name pos:start="307:21" pos:end="307:35"><name pos:start="307:21" pos:end="307:21">s</name><operator pos:start="307:22" pos:end="307:23">-&gt;</operator><name pos:start="307:24" pos:end="307:35">sampling_411</name></name> <operator pos:start="307:37" pos:end="307:38">&amp;&amp;</operator> <name pos:start="307:40" pos:end="307:43">mb_x</name> <operator pos:start="307:45" pos:end="307:45">&lt;</operator> <operator pos:start="307:47" pos:end="307:47">(</operator><literal type="number" pos:start="307:48" pos:end="307:50">704</literal> <operator pos:start="307:52" pos:end="307:52">/</operator> <literal type="number" pos:start="307:54" pos:end="307:54">8</literal><operator pos:start="307:55" pos:end="307:55">)</operator></expr>)</condition> <block pos:start="307:58" pos:end="313:17">{<block_content pos:start="311:21" pos:end="311:69">

                    <comment type="block" pos:start="309:21" pos:end="309:80">/* NOTE: at end of line, the macroblock is handled as 420 */</comment>

                    <expr_stmt pos:start="311:21" pos:end="311:69"><expr pos:start="311:21" pos:end="311:68"><call pos:start="311:21" pos:end="311:68"><name pos:start="311:21" pos:end="311:28">idct_put</name><argument_list pos:start="311:29" pos:end="311:68">(<argument pos:start="311:30" pos:end="311:44"><expr pos:start="311:30" pos:end="311:44"><name pos:start="311:30" pos:end="311:34">y_ptr</name> <operator pos:start="311:36" pos:end="311:36">+</operator> <operator pos:start="311:38" pos:end="311:38">(</operator><name pos:start="311:39" pos:end="311:39">j</name> <operator pos:start="311:41" pos:end="311:41">*</operator> <literal type="number" pos:start="311:43" pos:end="311:43">8</literal><operator pos:start="311:44" pos:end="311:44">)</operator></expr></argument>, <argument pos:start="311:47" pos:end="311:60"><expr pos:start="311:47" pos:end="311:60"><name pos:start="311:47" pos:end="311:60"><name pos:start="311:47" pos:end="311:47">s</name><operator pos:start="311:48" pos:end="311:49">-&gt;</operator><name pos:start="311:50" pos:end="311:57">linesize</name><index pos:start="311:58" pos:end="311:60">[<expr pos:start="311:59" pos:end="311:59"><literal type="number" pos:start="311:59" pos:end="311:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="311:63" pos:end="311:67"><expr pos:start="311:63" pos:end="311:67"><name pos:start="311:63" pos:end="311:67">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="313:19" pos:end="319:17">else <block pos:start="313:24" pos:end="319:17">{<block_content pos:start="315:21" pos:end="317:52">

                    <expr_stmt pos:start="315:21" pos:end="317:52"><expr pos:start="315:21" pos:end="317:51"><call pos:start="315:21" pos:end="317:51"><name pos:start="315:21" pos:end="315:28">idct_put</name><argument_list pos:start="315:29" pos:end="317:51">(<argument pos:start="315:30" pos:end="315:84"><expr pos:start="315:30" pos:end="315:84"><name pos:start="315:30" pos:end="315:34">y_ptr</name> <operator pos:start="315:36" pos:end="315:36">+</operator> <operator pos:start="315:38" pos:end="315:38">(</operator><operator pos:start="315:39" pos:end="315:39">(</operator><name pos:start="315:40" pos:end="315:40">j</name> <operator pos:start="315:42" pos:end="315:42">&amp;</operator> <literal type="number" pos:start="315:44" pos:end="315:44">1</literal><operator pos:start="315:45" pos:end="315:45">)</operator> <operator pos:start="315:47" pos:end="315:47">*</operator> <literal type="number" pos:start="315:49" pos:end="315:49">8</literal><operator pos:start="315:50" pos:end="315:50">)</operator> <operator pos:start="315:52" pos:end="315:52">+</operator> <operator pos:start="315:54" pos:end="315:54">(</operator><operator pos:start="315:55" pos:end="315:55">(</operator><name pos:start="315:56" pos:end="315:56">j</name> <operator pos:start="315:58" pos:end="315:59">&gt;&gt;</operator> <literal type="number" pos:start="315:61" pos:end="315:61">1</literal><operator pos:start="315:62" pos:end="315:62">)</operator> <operator pos:start="315:64" pos:end="315:64">*</operator> <literal type="number" pos:start="315:66" pos:end="315:66">8</literal> <operator pos:start="315:68" pos:end="315:68">*</operator> <name pos:start="315:70" pos:end="315:83"><name pos:start="315:70" pos:end="315:70">s</name><operator pos:start="315:71" pos:end="315:72">-&gt;</operator><name pos:start="315:73" pos:end="315:80">linesize</name><index pos:start="315:81" pos:end="315:83">[<expr pos:start="315:82" pos:end="315:82"><literal type="number" pos:start="315:82" pos:end="315:82">0</literal></expr>]</index></name><operator pos:start="315:84" pos:end="315:84">)</operator></expr></argument>,

                             <argument pos:start="317:30" pos:end="317:43"><expr pos:start="317:30" pos:end="317:43"><name pos:start="317:30" pos:end="317:43"><name pos:start="317:30" pos:end="317:30">s</name><operator pos:start="317:31" pos:end="317:32">-&gt;</operator><name pos:start="317:33" pos:end="317:40">linesize</name><index pos:start="317:41" pos:end="317:43">[<expr pos:start="317:42" pos:end="317:42"><literal type="number" pos:start="317:42" pos:end="317:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="317:46" pos:end="317:50"><expr pos:start="317:46" pos:end="317:50"><name pos:start="317:46" pos:end="317:50">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="321:15" pos:end="369:13">else <block pos:start="321:20" pos:end="369:13">{<block_content pos:start="323:17" pos:end="367:17">

                <if_stmt pos:start="323:17" pos:end="367:17"><if pos:start="323:17" pos:end="359:17">if <condition pos:start="323:20" pos:end="323:57">(<expr pos:start="323:21" pos:end="323:56"><name pos:start="323:21" pos:end="323:35"><name pos:start="323:21" pos:end="323:21">s</name><operator pos:start="323:22" pos:end="323:23">-&gt;</operator><name pos:start="323:24" pos:end="323:35">sampling_411</name></name> <operator pos:start="323:37" pos:end="323:38">&amp;&amp;</operator> <name pos:start="323:40" pos:end="323:43">mb_x</name> <operator pos:start="323:45" pos:end="323:46">&gt;=</operator> <operator pos:start="323:48" pos:end="323:48">(</operator><literal type="number" pos:start="323:49" pos:end="323:51">704</literal> <operator pos:start="323:53" pos:end="323:53">/</operator> <literal type="number" pos:start="323:55" pos:end="323:55">8</literal><operator pos:start="323:56" pos:end="323:56">)</operator></expr>)</condition> <block pos:start="323:59" pos:end="359:17">{<block_content pos:start="325:21" pos:end="357:21">

                    <decl_stmt pos:start="325:21" pos:end="325:62"><decl pos:start="325:21" pos:end="325:38"><type pos:start="325:21" pos:end="325:27"><name pos:start="325:21" pos:end="325:27">uint8_t</name></type> <name pos:start="325:29" pos:end="325:38"><name pos:start="325:29" pos:end="325:34">pixels</name><index pos:start="325:35" pos:end="325:38">[<expr pos:start="325:36" pos:end="325:37"><literal type="number" pos:start="325:36" pos:end="325:37">64</literal></expr>]</index></name></decl>, <decl pos:start="325:41" pos:end="325:46"><type ref="prev" pos:start="325:21" pos:end="325:27"><modifier pos:start="325:41" pos:end="325:41">*</modifier></type><name pos:start="325:42" pos:end="325:46">c_ptr</name></decl>, <decl pos:start="325:49" pos:end="325:55"><type ref="prev" pos:start="325:21" pos:end="325:27"><modifier pos:start="325:49" pos:end="325:49">*</modifier></type><name pos:start="325:50" pos:end="325:55">c_ptr1</name></decl>, <decl pos:start="325:58" pos:end="325:61"><type ref="prev" pos:start="325:21" pos:end="325:27"><modifier pos:start="325:58" pos:end="325:58">*</modifier></type><name pos:start="325:59" pos:end="325:61">ptr</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="327:21" pos:end="327:36"><decl pos:start="327:21" pos:end="327:25"><type pos:start="327:21" pos:end="327:23"><name pos:start="327:21" pos:end="327:23">int</name></type> <name pos:start="327:25" pos:end="327:25">y</name></decl>, <decl pos:start="327:28" pos:end="327:35"><type ref="prev" pos:start="327:21" pos:end="327:23"/><name pos:start="327:28" pos:end="327:35">linesize</name></decl>;</decl_stmt>

                    <comment type="block" pos:start="329:21" pos:end="329:80">/* NOTE: at end of line, the macroblock is handled as 420 */</comment>

                    <expr_stmt pos:start="331:21" pos:end="331:47"><expr pos:start="331:21" pos:end="331:46"><call pos:start="331:21" pos:end="331:46"><name pos:start="331:21" pos:end="331:28">idct_put</name><argument_list pos:start="331:29" pos:end="331:46">(<argument pos:start="331:30" pos:end="331:35"><expr pos:start="331:30" pos:end="331:35"><name pos:start="331:30" pos:end="331:35">pixels</name></expr></argument>, <argument pos:start="331:38" pos:end="331:38"><expr pos:start="331:38" pos:end="331:38"><literal type="number" pos:start="331:38" pos:end="331:38">8</literal></expr></argument>, <argument pos:start="331:41" pos:end="331:45"><expr pos:start="331:41" pos:end="331:45"><name pos:start="331:41" pos:end="331:45">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:50"><expr pos:start="333:21" pos:end="333:49"><name pos:start="333:21" pos:end="333:28">linesize</name> <operator pos:start="333:30" pos:end="333:30">=</operator> <name pos:start="333:32" pos:end="333:49"><name pos:start="333:32" pos:end="333:32">s</name><operator pos:start="333:33" pos:end="333:34">-&gt;</operator><name pos:start="333:35" pos:end="333:42">linesize</name><index pos:start="333:43" pos:end="333:49">[<expr pos:start="333:44" pos:end="333:48"><literal type="number" pos:start="333:44" pos:end="333:46">6</literal> <operator pos:start="333:46" pos:end="333:46">-</operator> <name pos:start="333:48" pos:end="333:48">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="335:21" pos:end="335:65"><expr pos:start="335:21" pos:end="335:64"><name pos:start="335:21" pos:end="335:25">c_ptr</name> <operator pos:start="335:27" pos:end="335:27">=</operator> <name pos:start="335:29" pos:end="335:53"><name pos:start="335:29" pos:end="335:29">s</name><operator pos:start="335:30" pos:end="335:31">-&gt;</operator><name pos:start="335:32" pos:end="335:46">current_picture</name><index pos:start="335:47" pos:end="335:53">[<expr pos:start="335:48" pos:end="335:52"><literal type="number" pos:start="335:48" pos:end="335:50">6</literal> <operator pos:start="335:50" pos:end="335:50">-</operator> <name pos:start="335:52" pos:end="335:52">j</name></expr>]</index></name> <operator pos:start="335:55" pos:end="335:55">+</operator> <name pos:start="335:57" pos:end="335:64">c_offset</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="337:21" pos:end="337:33"><expr pos:start="337:21" pos:end="337:32"><name pos:start="337:21" pos:end="337:23">ptr</name> <operator pos:start="337:25" pos:end="337:25">=</operator> <name pos:start="337:27" pos:end="337:32">pixels</name></expr>;</expr_stmt>

                    <for pos:start="339:21" pos:end="357:21">for<control pos:start="339:24" pos:end="339:41">(<init pos:start="339:25" pos:end="339:30"><expr pos:start="339:25" pos:end="339:29"><name pos:start="339:25" pos:end="339:25">y</name> <operator pos:start="339:27" pos:end="339:27">=</operator> <literal type="number" pos:start="339:29" pos:end="339:29">0</literal></expr>;</init><condition pos:start="339:31" pos:end="339:36"><expr pos:start="339:31" pos:end="339:35"><name pos:start="339:31" pos:end="339:31">y</name> <operator pos:start="339:33" pos:end="339:33">&lt;</operator> <literal type="number" pos:start="339:35" pos:end="339:35">8</literal></expr>;</condition> <incr pos:start="339:38" pos:end="339:40"><expr pos:start="339:38" pos:end="339:40"><name pos:start="339:38" pos:end="339:38">y</name><operator pos:start="339:39" pos:end="339:40">++</operator></expr></incr>)</control> <block pos:start="339:43" pos:end="357:21">{<block_content pos:start="343:25" pos:end="355:33">

                        <comment type="block" pos:start="341:25" pos:end="341:45">/* convert to 411P */</comment>

                        <expr_stmt pos:start="343:25" pos:end="343:50"><expr pos:start="343:25" pos:end="343:49"><name pos:start="343:25" pos:end="343:30">c_ptr1</name> <operator pos:start="343:32" pos:end="343:32">=</operator> <name pos:start="343:34" pos:end="343:38">c_ptr</name> <operator pos:start="343:40" pos:end="343:40">+</operator> <name pos:start="343:42" pos:end="343:49">linesize</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="345:25" pos:end="345:70"><expr pos:start="345:25" pos:end="345:69"><name pos:start="345:25" pos:end="345:33"><name pos:start="345:25" pos:end="345:30">c_ptr1</name><index pos:start="345:31" pos:end="345:33">[<expr pos:start="345:32" pos:end="345:32"><literal type="number" pos:start="345:32" pos:end="345:32">0</literal></expr>]</index></name> <operator pos:start="345:35" pos:end="345:35">=</operator> <name pos:start="345:37" pos:end="345:44"><name pos:start="345:37" pos:end="345:41">c_ptr</name><index pos:start="345:42" pos:end="345:44">[<expr pos:start="345:43" pos:end="345:43"><literal type="number" pos:start="345:43" pos:end="345:43">0</literal></expr>]</index></name> <operator pos:start="345:46" pos:end="345:46">=</operator> <operator pos:start="345:48" pos:end="345:48">(</operator><name pos:start="345:49" pos:end="345:54"><name pos:start="345:49" pos:end="345:51">ptr</name><index pos:start="345:52" pos:end="345:54">[<expr pos:start="345:53" pos:end="345:53"><literal type="number" pos:start="345:53" pos:end="345:53">0</literal></expr>]</index></name> <operator pos:start="345:56" pos:end="345:56">+</operator> <name pos:start="345:58" pos:end="345:63"><name pos:start="345:58" pos:end="345:60">ptr</name><index pos:start="345:61" pos:end="345:63">[<expr pos:start="345:62" pos:end="345:62"><literal type="number" pos:start="345:62" pos:end="345:62">1</literal></expr>]</index></name><operator pos:start="345:64" pos:end="345:64">)</operator> <operator pos:start="345:66" pos:end="345:67">&gt;&gt;</operator> <literal type="number" pos:start="345:69" pos:end="345:69">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="347:25" pos:end="347:70"><expr pos:start="347:25" pos:end="347:69"><name pos:start="347:25" pos:end="347:33"><name pos:start="347:25" pos:end="347:30">c_ptr1</name><index pos:start="347:31" pos:end="347:33">[<expr pos:start="347:32" pos:end="347:32"><literal type="number" pos:start="347:32" pos:end="347:32">1</literal></expr>]</index></name> <operator pos:start="347:35" pos:end="347:35">=</operator> <name pos:start="347:37" pos:end="347:44"><name pos:start="347:37" pos:end="347:41">c_ptr</name><index pos:start="347:42" pos:end="347:44">[<expr pos:start="347:43" pos:end="347:43"><literal type="number" pos:start="347:43" pos:end="347:43">1</literal></expr>]</index></name> <operator pos:start="347:46" pos:end="347:46">=</operator> <operator pos:start="347:48" pos:end="347:48">(</operator><name pos:start="347:49" pos:end="347:54"><name pos:start="347:49" pos:end="347:51">ptr</name><index pos:start="347:52" pos:end="347:54">[<expr pos:start="347:53" pos:end="347:53"><literal type="number" pos:start="347:53" pos:end="347:53">2</literal></expr>]</index></name> <operator pos:start="347:56" pos:end="347:56">+</operator> <name pos:start="347:58" pos:end="347:63"><name pos:start="347:58" pos:end="347:60">ptr</name><index pos:start="347:61" pos:end="347:63">[<expr pos:start="347:62" pos:end="347:62"><literal type="number" pos:start="347:62" pos:end="347:62">3</literal></expr>]</index></name><operator pos:start="347:64" pos:end="347:64">)</operator> <operator pos:start="347:66" pos:end="347:67">&gt;&gt;</operator> <literal type="number" pos:start="347:69" pos:end="347:69">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="349:25" pos:end="349:70"><expr pos:start="349:25" pos:end="349:69"><name pos:start="349:25" pos:end="349:33"><name pos:start="349:25" pos:end="349:30">c_ptr1</name><index pos:start="349:31" pos:end="349:33">[<expr pos:start="349:32" pos:end="349:32"><literal type="number" pos:start="349:32" pos:end="349:32">2</literal></expr>]</index></name> <operator pos:start="349:35" pos:end="349:35">=</operator> <name pos:start="349:37" pos:end="349:44"><name pos:start="349:37" pos:end="349:41">c_ptr</name><index pos:start="349:42" pos:end="349:44">[<expr pos:start="349:43" pos:end="349:43"><literal type="number" pos:start="349:43" pos:end="349:43">2</literal></expr>]</index></name> <operator pos:start="349:46" pos:end="349:46">=</operator> <operator pos:start="349:48" pos:end="349:48">(</operator><name pos:start="349:49" pos:end="349:54"><name pos:start="349:49" pos:end="349:51">ptr</name><index pos:start="349:52" pos:end="349:54">[<expr pos:start="349:53" pos:end="349:53"><literal type="number" pos:start="349:53" pos:end="349:53">4</literal></expr>]</index></name> <operator pos:start="349:56" pos:end="349:56">+</operator> <name pos:start="349:58" pos:end="349:63"><name pos:start="349:58" pos:end="349:60">ptr</name><index pos:start="349:61" pos:end="349:63">[<expr pos:start="349:62" pos:end="349:62"><literal type="number" pos:start="349:62" pos:end="349:62">5</literal></expr>]</index></name><operator pos:start="349:64" pos:end="349:64">)</operator> <operator pos:start="349:66" pos:end="349:67">&gt;&gt;</operator> <literal type="number" pos:start="349:69" pos:end="349:69">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="351:25" pos:end="351:70"><expr pos:start="351:25" pos:end="351:69"><name pos:start="351:25" pos:end="351:33"><name pos:start="351:25" pos:end="351:30">c_ptr1</name><index pos:start="351:31" pos:end="351:33">[<expr pos:start="351:32" pos:end="351:32"><literal type="number" pos:start="351:32" pos:end="351:32">3</literal></expr>]</index></name> <operator pos:start="351:35" pos:end="351:35">=</operator> <name pos:start="351:37" pos:end="351:44"><name pos:start="351:37" pos:end="351:41">c_ptr</name><index pos:start="351:42" pos:end="351:44">[<expr pos:start="351:43" pos:end="351:43"><literal type="number" pos:start="351:43" pos:end="351:43">3</literal></expr>]</index></name> <operator pos:start="351:46" pos:end="351:46">=</operator> <operator pos:start="351:48" pos:end="351:48">(</operator><name pos:start="351:49" pos:end="351:54"><name pos:start="351:49" pos:end="351:51">ptr</name><index pos:start="351:52" pos:end="351:54">[<expr pos:start="351:53" pos:end="351:53"><literal type="number" pos:start="351:53" pos:end="351:53">6</literal></expr>]</index></name> <operator pos:start="351:56" pos:end="351:56">+</operator> <name pos:start="351:58" pos:end="351:63"><name pos:start="351:58" pos:end="351:60">ptr</name><index pos:start="351:61" pos:end="351:63">[<expr pos:start="351:62" pos:end="351:62"><literal type="number" pos:start="351:62" pos:end="351:62">7</literal></expr>]</index></name><operator pos:start="351:64" pos:end="351:64">)</operator> <operator pos:start="351:66" pos:end="351:67">&gt;&gt;</operator> <literal type="number" pos:start="351:69" pos:end="351:69">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="353:25" pos:end="353:46"><expr pos:start="353:25" pos:end="353:45"><name pos:start="353:25" pos:end="353:29">c_ptr</name> <operator pos:start="353:31" pos:end="353:32">+=</operator> <name pos:start="353:34" pos:end="353:41">linesize</name> <operator pos:start="353:43" pos:end="353:43">*</operator> <literal type="number" pos:start="353:45" pos:end="353:45">2</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="355:25" pos:end="355:33"><expr pos:start="355:25" pos:end="355:32"><name pos:start="355:25" pos:end="355:27">ptr</name> <operator pos:start="355:29" pos:end="355:30">+=</operator> <literal type="number" pos:start="355:32" pos:end="355:32">8</literal></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if> <else pos:start="359:19" pos:end="367:17">else <block pos:start="359:24" pos:end="367:17">{<block_content pos:start="363:21" pos:end="365:56">

                    <comment type="block" pos:start="361:21" pos:end="361:68">/* don't ask me why they inverted Cb and Cr ! */</comment>

                    <expr_stmt pos:start="363:21" pos:end="365:56"><expr pos:start="363:21" pos:end="365:55"><call pos:start="363:21" pos:end="365:55"><name pos:start="363:21" pos:end="363:28">idct_put</name><argument_list pos:start="363:29" pos:end="365:55">(<argument pos:start="363:30" pos:end="363:65"><expr pos:start="363:30" pos:end="363:65"><name pos:start="363:30" pos:end="363:54"><name pos:start="363:30" pos:end="363:30">s</name><operator pos:start="363:31" pos:end="363:32">-&gt;</operator><name pos:start="363:33" pos:end="363:47">current_picture</name><index pos:start="363:48" pos:end="363:54">[<expr pos:start="363:49" pos:end="363:53"><literal type="number" pos:start="363:49" pos:end="363:51">6</literal> <operator pos:start="363:51" pos:end="363:51">-</operator> <name pos:start="363:53" pos:end="363:53">j</name></expr>]</index></name> <operator pos:start="363:56" pos:end="363:56">+</operator> <name pos:start="363:58" pos:end="363:65">c_offset</name></expr></argument>, 

                             <argument pos:start="365:30" pos:end="365:47"><expr pos:start="365:30" pos:end="365:47"><name pos:start="365:30" pos:end="365:47"><name pos:start="365:30" pos:end="365:30">s</name><operator pos:start="365:31" pos:end="365:32">-&gt;</operator><name pos:start="365:33" pos:end="365:40">linesize</name><index pos:start="365:41" pos:end="365:47">[<expr pos:start="365:42" pos:end="365:46"><literal type="number" pos:start="365:42" pos:end="365:44">6</literal> <operator pos:start="365:44" pos:end="365:44">-</operator> <name pos:start="365:46" pos:end="365:46">j</name></expr>]</index></name></expr></argument>, <argument pos:start="365:50" pos:end="365:54"><expr pos:start="365:50" pos:end="365:54"><name pos:start="365:50" pos:end="365:54">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:24"><expr pos:start="371:13" pos:end="371:23"><name pos:start="371:13" pos:end="371:17">block</name> <operator pos:start="371:19" pos:end="371:20">+=</operator> <literal type="number" pos:start="371:22" pos:end="371:23">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:17"><expr pos:start="373:13" pos:end="373:16"><name pos:start="373:13" pos:end="373:14">mb</name><operator pos:start="373:15" pos:end="373:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
