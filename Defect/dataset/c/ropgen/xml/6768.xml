<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6768.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverAIOCB</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:39">curl_aio_readv</name><parameter_list pos:start="1:40" pos:end="5:52">(<parameter pos:start="1:41" pos:end="1:60"><decl pos:start="1:41" pos:end="1:60"><type pos:start="1:41" pos:end="1:60"><name pos:start="1:41" pos:end="1:56">BlockDriverState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:26"><type pos:start="3:9" pos:end="3:26"><name pos:start="3:9" pos:end="3:15">int64_t</name></type> <name pos:start="3:17" pos:end="3:26">sector_num</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:40">QEMUIOVector</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:46">qiov</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:62">nb_sectors</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:37"><decl pos:start="5:9" pos:end="5:37"><type pos:start="5:9" pos:end="5:37"><name pos:start="5:9" pos:end="5:33">BlockDriverCompletionFunc</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:37">cb</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:51"><decl pos:start="5:40" pos:end="5:51"><type pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:43">void</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:51">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="111:1">{<block_content pos:start="9:5" pos:end="109:24">

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">BDRVCURLState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:33">= <expr pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">CURLAIOCB</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:18">acb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">size_t</name></type> <name pos:start="13:12" pos:end="13:16">start</name> <init pos:start="13:18" pos:end="13:43">= <expr pos:start="13:20" pos:end="13:43"><name pos:start="13:20" pos:end="13:29">sector_num</name> <operator pos:start="13:31" pos:end="13:31">*</operator> <name pos:start="13:33" pos:end="13:43">SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:14">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">CURLState</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">state</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:7">acb</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:54"><name pos:start="21:11" pos:end="21:22">qemu_aio_get</name><argument_list pos:start="21:23" pos:end="21:54">(<argument pos:start="21:24" pos:end="21:37"><expr pos:start="21:24" pos:end="21:37"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:37">curl_aio_pool</name></expr></argument>, <argument pos:start="21:40" pos:end="21:41"><expr pos:start="21:40" pos:end="21:41"><name pos:start="21:40" pos:end="21:41">bs</name></expr></argument>, <argument pos:start="21:44" pos:end="21:45"><expr pos:start="21:44" pos:end="21:45"><name pos:start="21:44" pos:end="21:45">cb</name></expr></argument>, <argument pos:start="21:48" pos:end="21:53"><expr pos:start="21:48" pos:end="21:53"><name pos:start="21:48" pos:end="21:53">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">acb</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:7">acb</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">qiov</name></name> <operator pos:start="29:15" pos:end="29:15">=</operator> <name pos:start="29:17" pos:end="29:20">qiov</name></expr>;</expr_stmt>



    <comment type="line" pos:start="33:5" pos:end="33:68">// In case we have the requested data already (e.g. read-ahead),</comment>

    <comment type="line" pos:start="35:5" pos:end="35:49">// we can just call the callback and be done.</comment>



    <switch pos:start="39:5" pos:end="55:5">switch <condition pos:start="39:12" pos:end="39:67">(<expr pos:start="39:13" pos:end="39:66"><call pos:start="39:13" pos:end="39:66"><name pos:start="39:13" pos:end="39:25">curl_find_buf</name><argument_list pos:start="39:26" pos:end="39:66">(<argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">s</name></expr></argument>, <argument pos:start="39:30" pos:end="39:34"><expr pos:start="39:30" pos:end="39:34"><name pos:start="39:30" pos:end="39:34">start</name></expr></argument>, <argument pos:start="39:37" pos:end="39:60"><expr pos:start="39:37" pos:end="39:60"><name pos:start="39:37" pos:end="39:46">nb_sectors</name> <operator pos:start="39:48" pos:end="39:48">*</operator> <name pos:start="39:50" pos:end="39:60">SECTOR_SIZE</name></expr></argument>, <argument pos:start="39:63" pos:end="39:65"><expr pos:start="39:63" pos:end="39:65"><name pos:start="39:63" pos:end="39:65">acb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:69" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:18">

        <case pos:start="41:9" pos:end="41:25">case <expr pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:24">FIND_RET_OK</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:34"><expr pos:start="43:13" pos:end="43:33"><call pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:28">qemu_aio_release</name><argument_list pos:start="43:29" pos:end="43:33">(<argument pos:start="43:30" pos:end="43:32"><expr pos:start="43:30" pos:end="43:32"><name pos:start="43:30" pos:end="43:32">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="45:13" pos:end="45:27">// fall through</comment>

        <case pos:start="47:9" pos:end="47:27">case <expr pos:start="47:14" pos:end="47:26"><name pos:start="47:14" pos:end="47:26">FIND_RET_WAIT</name></expr>:</case>

            <return pos:start="49:13" pos:end="49:32">return <expr pos:start="49:20" pos:end="49:31"><operator pos:start="49:20" pos:end="49:20">&amp;</operator><name pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:23">acb</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:31">common</name></name></expr>;</return>

        <default pos:start="51:9" pos:end="51:16">default:</default>

            <break pos:start="53:13" pos:end="53:18">break;</break>

    </block_content>}</block></switch>



    <comment type="line" pos:start="59:5" pos:end="59:51">// No cache found, so let's start a new request</comment>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:9">state</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:27">curl_init_state</name><argument_list pos:start="63:28" pos:end="63:30">(<argument pos:start="63:29" pos:end="63:29"><expr pos:start="63:29" pos:end="63:29"><name pos:start="63:29" pos:end="63:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:20"><if pos:start="65:5" pos:end="67:20">if <condition pos:start="65:8" pos:end="65:15">(<expr pos:start="65:9" pos:end="65:14"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:14">state</name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:20"><block_content pos:start="67:9" pos:end="67:20">

        <return pos:start="67:9" pos:end="67:20">return <expr pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:7">acb</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:14">start</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:12"><name pos:start="73:5" pos:end="73:7">acb</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:12">end</name></name> <operator pos:start="73:14" pos:end="73:14">=</operator> <operator pos:start="73:16" pos:end="73:16">(</operator><name pos:start="73:17" pos:end="73:26">nb_sectors</name> <operator pos:start="73:28" pos:end="73:28">*</operator> <name pos:start="73:30" pos:end="73:40">SECTOR_SIZE</name><operator pos:start="73:41" pos:end="73:41">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:9">state</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:18">buf_off</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:35"><if pos:start="79:5" pos:end="81:35">if <condition pos:start="79:8" pos:end="79:24">(<expr pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:13">state</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:23">orig_buf</name></name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:35"><block_content pos:start="81:9" pos:end="81:35">

        <expr_stmt pos:start="81:9" pos:end="81:35"><expr pos:start="81:9" pos:end="81:34"><call pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:17">qemu_free</name><argument_list pos:start="81:18" pos:end="81:34">(<argument pos:start="81:19" pos:end="81:33"><expr pos:start="81:19" pos:end="81:33"><name pos:start="81:19" pos:end="81:33"><name pos:start="81:19" pos:end="81:23">state</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:33">orig_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:9">state</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:20">buf_start</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:28">start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:48"><expr pos:start="85:5" pos:end="85:47"><name pos:start="85:5" pos:end="85:18"><name pos:start="85:5" pos:end="85:9">state</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:18">buf_len</name></name> <operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:29"><name pos:start="85:22" pos:end="85:24">acb</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:29">end</name></name> <operator pos:start="85:31" pos:end="85:31">+</operator> <name pos:start="85:33" pos:end="85:47">READ_AHEAD_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:50"><expr pos:start="87:5" pos:end="87:49"><name pos:start="87:5" pos:end="87:7">end</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:45"><name pos:start="87:11" pos:end="87:13">MIN</name><argument_list pos:start="87:14" pos:end="87:45">(<argument pos:start="87:15" pos:end="87:36"><expr pos:start="87:15" pos:end="87:36"><name pos:start="87:15" pos:end="87:19">start</name> <operator pos:start="87:21" pos:end="87:21">+</operator> <name pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:27">state</name><operator pos:start="87:28" pos:end="87:29">-&gt;</operator><name pos:start="87:30" pos:end="87:36">buf_len</name></name></expr></argument>, <argument pos:start="87:39" pos:end="87:44"><expr pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:39">s</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:44">len</name></name></expr></argument>)</argument_list></call> <operator pos:start="87:47" pos:end="87:47">-</operator> <literal type="number" pos:start="87:49" pos:end="87:49">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:50"><expr pos:start="89:5" pos:end="89:49"><name pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:9">state</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:19">orig_buf</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:49"><name pos:start="89:23" pos:end="89:33">qemu_malloc</name><argument_list pos:start="89:34" pos:end="89:49">(<argument pos:start="89:35" pos:end="89:48"><expr pos:start="89:35" pos:end="89:48"><name pos:start="89:35" pos:end="89:48"><name pos:start="89:35" pos:end="89:39">state</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:48">buf_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:24"><expr pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:9">state</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:14">acb</name><index pos:start="91:15" pos:end="91:17">[<expr pos:start="91:16" pos:end="91:16"><literal type="number" pos:start="91:16" pos:end="91:16">0</literal></expr>]</index></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:23">acb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:79"><expr pos:start="95:5" pos:end="95:78"><call pos:start="95:5" pos:end="95:78"><name pos:start="95:5" pos:end="95:12">snprintf</name><argument_list pos:start="95:13" pos:end="95:78">(<argument pos:start="95:14" pos:end="95:25"><expr pos:start="95:14" pos:end="95:25"><name pos:start="95:14" pos:end="95:25"><name pos:start="95:14" pos:end="95:18">state</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:25">range</name></name></expr></argument>, <argument pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><literal type="number" pos:start="95:28" pos:end="95:30">127</literal></expr></argument>, <argument pos:start="95:33" pos:end="95:43"><expr pos:start="95:33" pos:end="95:43"><literal type="string" pos:start="95:33" pos:end="95:43">"%lld-%lld"</literal></expr></argument>, <argument pos:start="95:46" pos:end="95:61"><expr pos:start="95:46" pos:end="95:61"><operator pos:start="95:46" pos:end="95:46">(</operator><name pos:start="95:47" pos:end="95:50">long</name> <name pos:start="95:52" pos:end="95:55">long</name><operator pos:start="95:56" pos:end="95:56">)</operator><name pos:start="95:57" pos:end="95:61">start</name></expr></argument>, <argument pos:start="95:64" pos:end="95:77"><expr pos:start="95:64" pos:end="95:77"><operator pos:start="95:64" pos:end="95:64">(</operator><name pos:start="95:65" pos:end="95:68">long</name> <name pos:start="95:70" pos:end="95:73">long</name><operator pos:start="95:74" pos:end="95:74">)</operator><name pos:start="95:75" pos:end="95:77">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:102"><expr pos:start="97:5" pos:end="97:101"><call pos:start="97:5" pos:end="97:101"><name pos:start="97:5" pos:end="97:11">dprintf</name><argument_list pos:start="97:12" pos:end="97:101">(<argument pos:start="97:13" pos:end="97:51"><expr pos:start="97:13" pos:end="97:51"><literal type="string" pos:start="97:13" pos:end="97:51">"CURL (AIO): Reading %d at %lld (%s)\n"</literal></expr></argument>, <argument pos:start="97:54" pos:end="97:79"><expr pos:start="97:54" pos:end="97:79"><operator pos:start="97:54" pos:end="97:54">(</operator><name pos:start="97:55" pos:end="97:64">nb_sectors</name> <operator pos:start="97:66" pos:end="97:66">*</operator> <name pos:start="97:68" pos:end="97:78">SECTOR_SIZE</name><operator pos:start="97:79" pos:end="97:79">)</operator></expr></argument>, <argument pos:start="97:82" pos:end="97:86"><expr pos:start="97:82" pos:end="97:86"><name pos:start="97:82" pos:end="97:86">start</name></expr></argument>, <argument pos:start="97:89" pos:end="97:100"><expr pos:start="97:89" pos:end="97:100"><name pos:start="97:89" pos:end="97:100"><name pos:start="97:89" pos:end="97:93">state</name><operator pos:start="97:94" pos:end="97:95">-&gt;</operator><name pos:start="97:96" pos:end="97:100">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:63"><expr pos:start="99:5" pos:end="99:62"><call pos:start="99:5" pos:end="99:62"><name pos:start="99:5" pos:end="99:20">curl_easy_setopt</name><argument_list pos:start="99:21" pos:end="99:62">(<argument pos:start="99:22" pos:end="99:32"><expr pos:start="99:22" pos:end="99:32"><name pos:start="99:22" pos:end="99:32"><name pos:start="99:22" pos:end="99:26">state</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:32">curl</name></name></expr></argument>, <argument pos:start="99:35" pos:end="99:47"><expr pos:start="99:35" pos:end="99:47"><name pos:start="99:35" pos:end="99:47">CURLOPT_RANGE</name></expr></argument>, <argument pos:start="99:50" pos:end="99:61"><expr pos:start="99:50" pos:end="99:61"><name pos:start="99:50" pos:end="99:61"><name pos:start="99:50" pos:end="99:54">state</name><operator pos:start="99:55" pos:end="99:56">-&gt;</operator><name pos:start="99:57" pos:end="99:61">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:49"><expr pos:start="103:5" pos:end="103:48"><call pos:start="103:5" pos:end="103:48"><name pos:start="103:5" pos:end="103:25">curl_multi_add_handle</name><argument_list pos:start="103:26" pos:end="103:48">(<argument pos:start="103:27" pos:end="103:34"><expr pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:27">s</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:34">multi</name></name></expr></argument>, <argument pos:start="103:37" pos:end="103:47"><expr pos:start="103:37" pos:end="103:47"><name pos:start="103:37" pos:end="103:47"><name pos:start="103:37" pos:end="103:41">state</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:47">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><call pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:17">curl_multi_do</name><argument_list pos:start="105:18" pos:end="105:20">(<argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><name pos:start="105:19" pos:end="105:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="109:5" pos:end="109:24">return <expr pos:start="109:12" pos:end="109:23"><operator pos:start="109:12" pos:end="109:12">&amp;</operator><name pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:15">acb</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:23">common</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
