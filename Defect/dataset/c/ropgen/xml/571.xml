<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/571.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:68">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:67"><decl pos:start="5:50" pos:end="5:67"><type pos:start="5:50" pos:end="5:67"><name pos:start="5:50" pos:end="5:62">CPUS390XState</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:67">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="123:1">{<block_content pos:start="9:5" pos:end="121:30">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">rt_sigframe</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:22">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">abi_ulong</name></type> <name pos:start="13:15" pos:end="13:24">frame_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:14">frame_addr</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:53"><name pos:start="17:18" pos:end="17:29">get_sigframe</name><argument_list pos:start="17:30" pos:end="17:53">(<argument pos:start="17:31" pos:end="17:32"><expr pos:start="17:31" pos:end="17:32"><name pos:start="17:31" pos:end="17:32">ka</name></expr></argument>, <argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">env</name></expr></argument>, <argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><sizeof pos:start="17:40" pos:end="17:45">sizeof <name/></sizeof>*<name pos:start="17:48" pos:end="17:52">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:45"><expr pos:start="19:5" pos:end="21:44"><call pos:start="19:5" pos:end="21:44"><name pos:start="19:5" pos:end="19:12">qemu_log</name><argument_list pos:start="19:13" pos:end="21:44">(<argument pos:start="19:14" pos:end="19:38"><expr pos:start="19:14" pos:end="19:38"><literal type="string" pos:start="19:14" pos:end="19:38">"%s: frame_addr 0x%llx\n"</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:52"><expr pos:start="19:41" pos:end="19:52"><name pos:start="19:41" pos:end="19:52">__FUNCTION__</name></expr></argument>,

             <argument pos:start="21:14" pos:end="21:43"><expr pos:start="21:14" pos:end="21:43"><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:22">unsigned</name> <name pos:start="21:24" pos:end="21:27">long</name> <name pos:start="21:29" pos:end="21:32">long</name><operator pos:start="21:33" pos:end="21:33">)</operator><name pos:start="21:34" pos:end="21:43">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">frame</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">frame_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:64" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:26">

        <goto pos:start="25:9" pos:end="25:26">goto <name pos:start="25:14" pos:end="25:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><call pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:12">qemu_log</name><argument_list pos:start="31:13" pos:end="31:37">(<argument pos:start="31:14" pos:end="31:22"><expr pos:start="31:14" pos:end="31:22"><literal type="string" pos:start="31:14" pos:end="31:22">"%s: 1\n"</literal></expr></argument>, <argument pos:start="31:25" pos:end="31:36"><expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:36">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><call pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:24">copy_siginfo_to_user</name><argument_list pos:start="33:25" pos:end="33:44">(<argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><operator pos:start="33:26" pos:end="33:26">&amp;</operator><name pos:start="33:27" pos:end="33:37"><name pos:start="33:27" pos:end="33:31">frame</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">info</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><name pos:start="33:40" pos:end="33:43">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:31">/* Create the ucontext.  */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:14">__put_user</name><argument_list pos:start="39:15" pos:end="39:39">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr></argument>, <argument pos:start="39:19" pos:end="39:38"><expr pos:start="39:19" pos:end="39:38"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:38"><name pos:start="39:20" pos:end="39:24">frame</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:28">uc</name><operator pos:start="39:29" pos:end="39:29">.</operator><name pos:start="39:30" pos:end="39:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:63"><expr pos:start="41:5" pos:end="41:62"><call pos:start="41:5" pos:end="41:62"><name pos:start="41:5" pos:end="41:14">__put_user</name><argument_list pos:start="41:15" pos:end="41:62">(<argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:25">abi_ulong</name><operator pos:start="41:26" pos:end="41:26">)</operator><literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr></argument>, <argument pos:start="41:30" pos:end="41:61"><expr pos:start="41:30" pos:end="41:61"><operator pos:start="41:30" pos:end="41:30">(</operator><name pos:start="41:31" pos:end="41:39">abi_ulong</name> <operator pos:start="41:41" pos:end="41:41">*</operator><operator pos:start="41:42" pos:end="41:42">)</operator><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:61"><name pos:start="41:44" pos:end="41:48">frame</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:52">uc</name><operator pos:start="41:53" pos:end="41:53">.</operator><name pos:start="41:54" pos:end="41:61">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:74"><expr pos:start="43:5" pos:end="43:73"><call pos:start="43:5" pos:end="43:73"><name pos:start="43:5" pos:end="43:14">__put_user</name><argument_list pos:start="43:15" pos:end="43:73">(<argument pos:start="43:16" pos:end="43:44"><expr pos:start="43:16" pos:end="43:44"><name pos:start="43:16" pos:end="43:44"><name pos:start="43:16" pos:end="43:38">target_sigaltstack_used</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:44">ss_sp</name></name></expr></argument>, <argument pos:start="43:47" pos:end="43:72"><expr pos:start="43:47" pos:end="43:72"><operator pos:start="43:47" pos:end="43:47">&amp;</operator><name pos:start="43:48" pos:end="43:72"><name pos:start="43:48" pos:end="43:52">frame</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:56">uc</name><operator pos:start="43:57" pos:end="43:57">.</operator><name pos:start="43:58" pos:end="43:66">tuc_stack</name><operator pos:start="43:67" pos:end="43:67">.</operator><name pos:start="43:68" pos:end="43:72">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:53"><expr pos:start="45:5" pos:end="47:52"><call pos:start="45:5" pos:end="47:52"><name pos:start="45:5" pos:end="45:14">__put_user</name><argument_list pos:start="45:15" pos:end="47:52">(<argument pos:start="45:16" pos:end="45:54"><expr pos:start="45:16" pos:end="45:54"><call pos:start="45:16" pos:end="45:54"><name pos:start="45:16" pos:end="45:27">sas_ss_flags</name><argument_list pos:start="45:28" pos:end="45:54">(<argument pos:start="45:29" pos:end="45:53"><expr pos:start="45:29" pos:end="45:53"><call pos:start="45:29" pos:end="45:53"><name pos:start="45:29" pos:end="45:48">get_sp_from_cpustate</name><argument_list pos:start="45:49" pos:end="45:53">(<argument pos:start="45:50" pos:end="45:52"><expr pos:start="45:50" pos:end="45:52"><name pos:start="45:50" pos:end="45:52">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:51"><expr pos:start="47:23" pos:end="47:51"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:51"><name pos:start="47:24" pos:end="47:28">frame</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:32">uc</name><operator pos:start="47:33" pos:end="47:33">.</operator><name pos:start="47:34" pos:end="47:42">tuc_stack</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:51">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:78"><expr pos:start="49:5" pos:end="49:77"><call pos:start="49:5" pos:end="49:77"><name pos:start="49:5" pos:end="49:14">__put_user</name><argument_list pos:start="49:15" pos:end="49:77">(<argument pos:start="49:16" pos:end="49:46"><expr pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:46"><name pos:start="49:16" pos:end="49:38">target_sigaltstack_used</name><operator pos:start="49:39" pos:end="49:39">.</operator><name pos:start="49:40" pos:end="49:46">ss_size</name></name></expr></argument>, <argument pos:start="49:49" pos:end="49:76"><expr pos:start="49:49" pos:end="49:76"><operator pos:start="49:49" pos:end="49:49">&amp;</operator><name pos:start="49:50" pos:end="49:76"><name pos:start="49:50" pos:end="49:54">frame</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:58">uc</name><operator pos:start="49:59" pos:end="49:59">.</operator><name pos:start="49:60" pos:end="49:68">tuc_stack</name><operator pos:start="49:69" pos:end="49:69">.</operator><name pos:start="49:70" pos:end="49:76">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:47"><expr pos:start="51:5" pos:end="51:46"><call pos:start="51:5" pos:end="51:46"><name pos:start="51:5" pos:end="51:16">save_sigregs</name><argument_list pos:start="51:17" pos:end="51:46">(<argument pos:start="51:18" pos:end="51:20"><expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:20">env</name></expr></argument>, <argument pos:start="51:23" pos:end="51:45"><expr pos:start="51:23" pos:end="51:45"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:45"><name pos:start="51:24" pos:end="51:28">frame</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:32">uc</name><operator pos:start="51:33" pos:end="51:33">.</operator><name pos:start="51:34" pos:end="51:45">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="59:5">for <control pos:start="53:9" pos:end="53:43">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:38"><expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:37">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="53:40" pos:end="53:42"><expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:40">i</name><operator pos:start="53:41" pos:end="53:42">++</operator></expr></incr>)</control> <block pos:start="53:45" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:52">

        <expr_stmt pos:start="55:9" pos:end="57:52"><expr pos:start="55:9" pos:end="57:51"><call pos:start="55:9" pos:end="57:51"><name pos:start="55:9" pos:end="55:18">__put_user</name><argument_list pos:start="55:19" pos:end="57:51">(<argument pos:start="55:20" pos:end="55:41"><expr pos:start="55:20" pos:end="55:41"><operator pos:start="55:20" pos:end="55:20">(</operator><name pos:start="55:21" pos:end="55:29">abi_ulong</name><operator pos:start="55:30" pos:end="55:30">)</operator><name pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:33">set</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:38">sig</name><index pos:start="55:39" pos:end="55:41">[<expr pos:start="55:40" pos:end="55:40"><name pos:start="55:40" pos:end="55:40">i</name></expr>]</index></name></expr></argument>,

        <argument pos:start="57:9" pos:end="57:50"><expr pos:start="57:9" pos:end="57:50"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:18">abi_ulong</name> <operator pos:start="57:20" pos:end="57:20">*</operator><operator pos:start="57:21" pos:end="57:21">)</operator><operator pos:start="57:22" pos:end="57:22">&amp;</operator><name pos:start="57:23" pos:end="57:50"><name pos:start="57:23" pos:end="57:27">frame</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:31">uc</name><operator pos:start="57:32" pos:end="57:32">.</operator><name pos:start="57:33" pos:end="57:43">tuc_sigmask</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:47">sig</name><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><name pos:start="57:49" pos:end="57:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="63:5" pos:end="65:32">/* Set up to return from userspace.  If provided, use a stub

       already in userspace.  */</comment>

    <if_stmt pos:start="67:5" pos:end="83:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:42">(<expr pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:10">ka</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:20">sa_flags</name></name> <operator pos:start="67:22" pos:end="67:22">&amp;</operator> <name pos:start="67:24" pos:end="67:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="67:44" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:73">

        <expr_stmt pos:start="69:9" pos:end="69:73"><expr pos:start="69:9" pos:end="69:72"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">env</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:17">regs</name><index pos:start="69:18" pos:end="69:21">[<expr pos:start="69:19" pos:end="69:20"><literal type="number" pos:start="69:19" pos:end="69:20">14</literal></expr>]</index></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:33">unsigned</name> <name pos:start="69:35" pos:end="69:38">long</name><operator pos:start="69:39" pos:end="69:39">)</operator> <name pos:start="69:41" pos:end="69:55"><name pos:start="69:41" pos:end="69:42">ka</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:55">sa_restorer</name></name> <operator pos:start="69:57" pos:end="69:57">|</operator> <name pos:start="69:59" pos:end="69:72">PSW_ADDR_AMODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="83:5">else <block pos:start="71:12" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:9">

        <expr_stmt pos:start="73:9" pos:end="73:72"><expr pos:start="73:9" pos:end="73:71"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">env</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:17">regs</name><index pos:start="73:18" pos:end="73:21">[<expr pos:start="73:19" pos:end="73:20"><literal type="number" pos:start="73:19" pos:end="73:20">14</literal></expr>]</index></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">(</operator><name pos:start="73:26" pos:end="73:33">unsigned</name> <name pos:start="73:35" pos:end="73:38">long</name><operator pos:start="73:39" pos:end="73:39">)</operator> <name pos:start="73:41" pos:end="73:54"><name pos:start="73:41" pos:end="73:45">frame</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:54">retcode</name></name> <operator pos:start="73:56" pos:end="73:56">|</operator> <name pos:start="73:58" pos:end="73:71">PSW_ADDR_AMODE</name></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="77:53">(<expr pos:start="75:13" pos:end="77:52"><call pos:start="75:13" pos:end="77:52"><name pos:start="75:13" pos:end="75:22">__put_user</name><argument_list pos:start="75:23" pos:end="77:52">(<argument pos:start="75:24" pos:end="75:67"><expr pos:start="75:24" pos:end="75:67"><name pos:start="75:24" pos:end="75:42">S390_SYSCALL_OPCODE</name> <operator pos:start="75:44" pos:end="75:44">|</operator> <name pos:start="75:46" pos:end="75:67">TARGET_NR_rt_sigreturn</name></expr></argument>,

                       <argument pos:start="77:24" pos:end="77:51"><expr pos:start="77:24" pos:end="77:51"><operator pos:start="77:24" pos:end="77:24">(</operator><name pos:start="77:25" pos:end="77:32">uint16_t</name> <operator pos:start="77:34" pos:end="77:34">*</operator><operator pos:start="77:35" pos:end="77:35">)</operator><operator pos:start="77:36" pos:end="77:36">(</operator><name pos:start="77:37" pos:end="77:50"><name pos:start="77:37" pos:end="77:41">frame</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:50">retcode</name></name><operator pos:start="77:51" pos:end="77:51">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:55" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:30">

            <goto pos:start="79:13" pos:end="79:30">goto <name pos:start="79:18" pos:end="79:29">give_sigsegv</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:27">/* Set up backchain. */</comment>

    <if_stmt pos:start="89:5" pos:end="93:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:55">(<expr pos:start="89:9" pos:end="89:54"><call pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:18">__put_user</name><argument_list pos:start="89:19" pos:end="89:54">(<argument pos:start="89:20" pos:end="89:32"><expr pos:start="89:20" pos:end="89:32"><name pos:start="89:20" pos:end="89:32"><name pos:start="89:20" pos:end="89:22">env</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:28">regs</name><index pos:start="89:29" pos:end="89:32">[<expr pos:start="89:30" pos:end="89:31"><literal type="number" pos:start="89:30" pos:end="89:31">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="89:35" pos:end="89:53"><expr pos:start="89:35" pos:end="89:53"><operator pos:start="89:35" pos:end="89:35">(</operator><name pos:start="89:36" pos:end="89:44">abi_ulong</name> <operator pos:start="89:46" pos:end="89:46">*</operator><operator pos:start="89:47" pos:end="89:47">)</operator> <name pos:start="89:49" pos:end="89:53">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:57" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:26">

        <goto pos:start="91:9" pos:end="91:26">goto <name pos:start="91:14" pos:end="91:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:31"><expr pos:start="99:5" pos:end="99:30"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:7">env</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:13">regs</name><index pos:start="99:14" pos:end="99:17">[<expr pos:start="99:15" pos:end="99:16"><literal type="number" pos:start="99:15" pos:end="99:16">15</literal></expr>]</index></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:30">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:68"><expr pos:start="101:5" pos:end="101:67"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:12">psw</name><operator pos:start="101:13" pos:end="101:13">.</operator><name pos:start="101:14" pos:end="101:17">addr</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:33">target_ulong</name><operator pos:start="101:34" pos:end="101:34">)</operator> <name pos:start="101:36" pos:end="101:50"><name pos:start="101:36" pos:end="101:37">ka</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:50">_sa_handler</name></name> <operator pos:start="101:52" pos:end="101:52">|</operator> <name pos:start="101:54" pos:end="101:67">PSW_ADDR_AMODE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:23"><expr pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:16"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:13">regs</name><index pos:start="105:14" pos:end="105:16">[<expr pos:start="105:15" pos:end="105:15"><literal type="number" pos:start="105:15" pos:end="105:15">2</literal></expr>]</index></name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:22">sig</name></expr>;</expr_stmt> <comment type="line" pos:start="105:25" pos:end="105:42">//map_signal(sig);</comment>

    <expr_stmt pos:start="107:5" pos:end="107:63"><expr pos:start="107:5" pos:end="107:62"><name pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:7">env</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:13">regs</name><index pos:start="107:14" pos:end="107:16">[<expr pos:start="107:15" pos:end="107:15"><literal type="number" pos:start="107:15" pos:end="107:15">3</literal></expr>]</index></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <name pos:start="107:20" pos:end="107:29">frame_addr</name> <operator pos:start="107:31" pos:end="107:31">+</operator> <call pos:start="107:33" pos:end="107:62"><name pos:start="107:33" pos:end="107:40">offsetof</name><argument_list pos:start="107:41" pos:end="107:62">(<argument pos:start="107:42" pos:end="107:55"><expr pos:start="107:42" pos:end="107:55"><call pos:start="107:42" pos:end="107:55"><name pos:start="107:42" pos:end="107:47">typeof</name><argument_list pos:start="107:48" pos:end="107:55">(<argument pos:start="107:49" pos:end="107:54"><expr pos:start="107:49" pos:end="107:54"><operator pos:start="107:49" pos:end="107:49">*</operator><name pos:start="107:50" pos:end="107:54">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:58" pos:end="107:61"><expr pos:start="107:58" pos:end="107:61"><name pos:start="107:58" pos:end="107:61">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:61"><expr pos:start="109:5" pos:end="109:60"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:7">env</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:13">regs</name><index pos:start="109:14" pos:end="109:16">[<expr pos:start="109:15" pos:end="109:15"><literal type="number" pos:start="109:15" pos:end="109:15">4</literal></expr>]</index></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:29">frame_addr</name> <operator pos:start="109:31" pos:end="109:31">+</operator> <call pos:start="109:33" pos:end="109:60"><name pos:start="109:33" pos:end="109:40">offsetof</name><argument_list pos:start="109:41" pos:end="109:60">(<argument pos:start="109:42" pos:end="109:55"><expr pos:start="109:42" pos:end="109:55"><call pos:start="109:42" pos:end="109:55"><name pos:start="109:42" pos:end="109:47">typeof</name><argument_list pos:start="109:48" pos:end="109:55">(<argument pos:start="109:49" pos:end="109:54"><expr pos:start="109:49" pos:end="109:54"><operator pos:start="109:49" pos:end="109:49">*</operator><name pos:start="109:50" pos:end="109:54">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:58" pos:end="109:59"><expr pos:start="109:58" pos:end="109:59"><name pos:start="109:58" pos:end="109:59">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:11">return;</return>



<label pos:start="115:1" pos:end="115:13"><name pos:start="115:1" pos:end="115:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="117:5" pos:end="117:49"><expr pos:start="117:5" pos:end="117:48"><call pos:start="117:5" pos:end="117:48"><name pos:start="117:5" pos:end="117:12">qemu_log</name><argument_list pos:start="117:13" pos:end="117:48">(<argument pos:start="117:14" pos:end="117:33"><expr pos:start="117:14" pos:end="117:33"><literal type="string" pos:start="117:14" pos:end="117:33">"%s: give_sigsegv\n"</literal></expr></argument>, <argument pos:start="117:36" pos:end="117:47"><expr pos:start="117:36" pos:end="117:47"><name pos:start="117:36" pos:end="117:47">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:45"><expr pos:start="119:5" pos:end="119:44"><call pos:start="119:5" pos:end="119:44"><name pos:start="119:5" pos:end="119:22">unlock_user_struct</name><argument_list pos:start="119:23" pos:end="119:44">(<argument pos:start="119:24" pos:end="119:28"><expr pos:start="119:24" pos:end="119:28"><name pos:start="119:24" pos:end="119:28">frame</name></expr></argument>, <argument pos:start="119:31" pos:end="119:40"><expr pos:start="119:31" pos:end="119:40"><name pos:start="119:31" pos:end="119:40">frame_addr</name></expr></argument>, <argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><call pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:13">force_sig</name><argument_list pos:start="121:14" pos:end="121:29">(<argument pos:start="121:15" pos:end="121:28"><expr pos:start="121:15" pos:end="121:28"><name pos:start="121:15" pos:end="121:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
