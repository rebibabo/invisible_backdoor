<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3406.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:39">ogg_write_vorbiscomment</name><parameter_list pos:start="1:40" pos:end="3:91">(<parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:50">offset</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:64">bitexact</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:55">header_len</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:73"><decl pos:start="3:58" pos:end="3:73"><type pos:start="3:58" pos:end="3:73"><name pos:start="3:58" pos:end="3:69">AVDictionary</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier><modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:73">m</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:90"><decl pos:start="3:76" pos:end="3:90"><type pos:start="3:76" pos:end="3:90"><name pos:start="3:76" pos:end="3:78">int</name></type> <name pos:start="3:80" pos:end="3:90">framing_bit</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:14">

    <decl_stmt pos:start="7:5" pos:end="7:65"><decl pos:start="7:5" pos:end="7:64"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">vendor</name> <init pos:start="7:24" pos:end="7:64">= <expr pos:start="7:26" pos:end="7:64"><ternary pos:start="7:26" pos:end="7:64"><condition pos:start="7:26" pos:end="7:35"><expr pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:33">bitexact</name></expr> ?</condition><then pos:start="7:37" pos:end="7:44"> <expr pos:start="7:37" pos:end="7:44"><literal type="string" pos:start="7:37" pos:end="7:44">"ffmpeg"</literal></expr> </then><else pos:start="7:46" pos:end="7:64">: <expr pos:start="7:48" pos:end="7:64"><name pos:start="7:48" pos:end="7:64">LIBAVFORMAT_IDENT</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">p0</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:62"><expr pos:start="15:5" pos:end="15:61"><call pos:start="15:5" pos:end="15:61"><name pos:start="15:5" pos:end="15:20">ff_metadata_conv</name><argument_list pos:start="15:21" pos:end="15:61">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">m</name></expr></argument>, <argument pos:start="15:25" pos:end="15:54"><expr pos:start="15:25" pos:end="15:54"><name pos:start="15:25" pos:end="15:54">ff_vorbiscomment_metadata_conv</name></expr></argument>, <argument pos:start="15:57" pos:end="15:60"><expr pos:start="15:57" pos:end="15:60"><name pos:start="15:57" pos:end="15:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:8">size</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:17">offset</name> <operator pos:start="19:19" pos:end="19:19">+</operator> <call pos:start="19:21" pos:end="19:55"><name pos:start="19:21" pos:end="19:43">ff_vorbiscomment_length</name><argument_list pos:start="19:44" pos:end="19:55">(<argument pos:start="19:45" pos:end="19:46"><expr pos:start="19:45" pos:end="19:46"><operator pos:start="19:45" pos:end="19:45">*</operator><name pos:start="19:46" pos:end="19:46">m</name></expr></argument>, <argument pos:start="19:49" pos:end="19:54"><expr pos:start="19:49" pos:end="19:54"><name pos:start="19:49" pos:end="19:54">vendor</name></expr></argument>)</argument_list></call> <operator pos:start="19:57" pos:end="19:57">+</operator> <name pos:start="19:59" pos:end="19:69">framing_bit</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:18">av_mallocz</name><argument_list pos:start="21:19" pos:end="21:24">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:20"><if pos:start="23:5" pos:end="25:20">if <condition pos:start="23:8" pos:end="23:11">(<expr pos:start="23:9" pos:end="23:10"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:10">p</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:20"><block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:11"><expr pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:6">p0</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <name pos:start="27:10" pos:end="27:10">p</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">p</name> <operator pos:start="31:7" pos:end="31:8">+=</operator> <name pos:start="31:10" pos:end="31:15">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:26">ff_vorbiscomment_write</name><argument_list pos:start="33:27" pos:end="33:41">(<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><operator pos:start="33:28" pos:end="33:28">&amp;</operator><name pos:start="33:29" pos:end="33:29">p</name></expr></argument>, <argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">m</name></expr></argument>, <argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40">vendor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:35"><if pos:start="35:5" pos:end="37:35">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:19">framing_bit</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:35"><block_content pos:start="37:9" pos:end="37:35">

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:27">bytestream_put_byte</name><argument_list pos:start="37:28" pos:end="37:34">(<argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:30">p</name></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:15">header_len</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:22">size</name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:14">return <expr pos:start="43:12" pos:end="43:13"><name pos:start="43:12" pos:end="43:13">p0</name></expr>;</return>

</block_content>}</block></function>
</unit>
