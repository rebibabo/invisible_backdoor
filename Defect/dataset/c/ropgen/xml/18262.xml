<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18262.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">mpcifc_service_call</name><parameter_list pos:start="1:24" pos:end="1:76">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">S390CPU</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">cpu</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:45">uint8_t</name></type> <name pos:start="1:47" pos:end="1:48">r1</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">uint64_t</name></type> <name pos:start="1:60" pos:end="1:63">fiba</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:75"><decl pos:start="1:66" pos:end="1:75"><type pos:start="1:66" pos:end="1:75"><name pos:start="1:66" pos:end="1:72">uint8_t</name></type> <name pos:start="1:74" pos:end="1:75">ar</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="225:1">{<block_content pos:start="5:5" pos:end="223:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">CPUS390XState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">env</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:34"><name pos:start="5:27" pos:end="5:29">cpu</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:34">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:14">oc</name></decl>, <decl pos:start="7:17" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:17" pos:end="7:21">dmaas</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">fh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">ZpciFib</name></type> <name pos:start="11:13" pos:end="11:15">fib</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:20">S390PCIBusDevice</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:27">pbdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:15">cc</name> <init pos:start="15:17" pos:end="15:32">= <expr pos:start="15:19" pos:end="15:32"><name pos:start="15:19" pos:end="15:32">ZPCI_PCI_LS_OK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:40">(<expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">psw</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:21">mask</name></name> <operator pos:start="19:23" pos:end="19:23">&amp;</operator> <name pos:start="19:25" pos:end="19:39">PSW_MASK_PSTATE</name></expr>)</condition> <block pos:start="19:42" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:25">program_interrupt</name><argument_list pos:start="21:26" pos:end="21:49">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">env</name></expr></argument>, <argument pos:start="21:32" pos:end="21:45"><expr pos:start="21:32" pos:end="21:45"><name pos:start="21:32" pos:end="21:45">PGM_PRIVILEGED</name></expr></argument>, <argument pos:start="21:48" pos:end="21:48"><expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:6">oc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:12">env</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:18">regs</name><index pos:start="29:19" pos:end="29:22">[<expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">r1</name></expr>]</index></name> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <literal type="number" pos:start="29:26" pos:end="29:29">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:41"><expr pos:start="31:5" pos:end="31:40"><name pos:start="31:5" pos:end="31:9">dmaas</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:26"><name pos:start="31:14" pos:end="31:16">env</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:22">regs</name><index pos:start="31:23" pos:end="31:26">[<expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">r1</name></expr>]</index></name> <operator pos:start="31:28" pos:end="31:29">&gt;&gt;</operator> <literal type="number" pos:start="31:31" pos:end="31:32">16</literal><operator pos:start="31:33" pos:end="31:33">)</operator> <operator pos:start="31:35" pos:end="31:35">&amp;</operator> <literal type="number" pos:start="31:37" pos:end="31:40">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:6">fh</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <name pos:start="33:10" pos:end="33:22"><name pos:start="33:10" pos:end="33:12">env</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:18">regs</name><index pos:start="33:19" pos:end="33:22">[<expr pos:start="33:20" pos:end="33:21"><name pos:start="33:20" pos:end="33:21">r1</name></expr>]</index></name> <operator pos:start="33:24" pos:end="33:25">&gt;&gt;</operator> <literal type="number" pos:start="33:27" pos:end="33:28">32</literal></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:19">(<expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:12">fiba</name> <operator pos:start="37:14" pos:end="37:14">&amp;</operator> <literal type="number" pos:start="37:16" pos:end="37:18">0x7</literal></expr>)</condition> <block pos:start="37:21" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:17">

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:25">program_interrupt</name><argument_list pos:start="39:26" pos:end="39:52">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">env</name></expr></argument>, <argument pos:start="39:32" pos:end="39:48"><expr pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:48">PGM_SPECIFICATION</name></expr></argument>, <argument pos:start="39:51" pos:end="39:51"><expr pos:start="39:51" pos:end="39:51"><literal type="number" pos:start="39:51" pos:end="39:51">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:17">return <expr pos:start="41:16" pos:end="41:16"><literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:9">pbdev</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:35">s390_pci_find_dev_by_fh</name><argument_list pos:start="47:36" pos:end="47:39">(<argument pos:start="47:37" pos:end="47:38"><expr pos:start="47:37" pos:end="47:38"><name pos:start="47:37" pos:end="47:38">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:48">(<expr pos:start="49:9" pos:end="49:47"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14">pbdev</name> <operator pos:start="49:16" pos:end="49:17">||</operator> <operator pos:start="49:19" pos:end="49:19">!</operator><operator pos:start="49:20" pos:end="49:20">(</operator><name pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:25">pbdev</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">fh</name></name> <operator pos:start="49:31" pos:end="49:31">&amp;</operator> <name pos:start="49:33" pos:end="49:46">FH_MASK_ENABLE</name><operator pos:start="49:47" pos:end="49:47">)</operator></expr>)</condition> <block pos:start="49:50" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:17">

        <expr_stmt pos:start="51:9" pos:end="51:51"><expr pos:start="51:9" pos:end="51:50"><call pos:start="51:9" pos:end="51:50"><name pos:start="51:9" pos:end="51:15">DPRINTF</name><argument_list pos:start="51:16" pos:end="51:50">(<argument pos:start="51:17" pos:end="51:45"><expr pos:start="51:17" pos:end="51:45"><literal type="string" pos:start="51:17" pos:end="51:45">"mpcifc no pci dev fh 0x%x\n"</literal></expr></argument>, <argument pos:start="51:48" pos:end="51:49"><expr pos:start="51:48" pos:end="51:49"><name pos:start="51:48" pos:end="51:49">fh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><call pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:13">setcc</name><argument_list pos:start="53:14" pos:end="53:44">(<argument pos:start="53:15" pos:end="53:17"><expr pos:start="53:15" pos:end="53:17"><name pos:start="53:15" pos:end="53:17">cpu</name></expr></argument>, <argument pos:start="53:20" pos:end="53:43"><expr pos:start="53:20" pos:end="53:43"><name pos:start="53:20" pos:end="53:43">ZPCI_PCI_LS_INVAL_HANDLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:76">(<expr pos:start="61:9" pos:end="61:75"><call pos:start="61:9" pos:end="61:75"><name pos:start="61:9" pos:end="61:30">s390_cpu_virt_mem_read</name><argument_list pos:start="61:31" pos:end="61:75">(<argument pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:34">cpu</name></expr></argument>, <argument pos:start="61:37" pos:end="61:40"><expr pos:start="61:37" pos:end="61:40"><name pos:start="61:37" pos:end="61:40">fiba</name></expr></argument>, <argument pos:start="61:43" pos:end="61:44"><expr pos:start="61:43" pos:end="61:44"><name pos:start="61:43" pos:end="61:44">ar</name></expr></argument>, <argument pos:start="61:47" pos:end="61:61"><expr pos:start="61:47" pos:end="61:61"><operator pos:start="61:47" pos:end="61:47">(</operator><name pos:start="61:48" pos:end="61:54">uint8_t</name> <operator pos:start="61:56" pos:end="61:56">*</operator><operator pos:start="61:57" pos:end="61:57">)</operator><operator pos:start="61:58" pos:end="61:58">&amp;</operator><name pos:start="61:59" pos:end="61:61">fib</name></expr></argument>, <argument pos:start="61:64" pos:end="61:74"><expr pos:start="61:64" pos:end="61:74"><sizeof pos:start="61:64" pos:end="61:74">sizeof<argument_list pos:start="61:70" pos:end="61:74">(<argument pos:start="61:71" pos:end="61:73"><expr pos:start="61:71" pos:end="61:73"><name pos:start="61:71" pos:end="61:73">fib</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:78" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:17">

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:21">(<expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">fib</name><operator pos:start="69:12" pos:end="69:12">.</operator><name pos:start="69:13" pos:end="69:15">fmt</name></name> <operator pos:start="69:17" pos:end="69:18">!=</operator> <literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>)</condition> <block pos:start="69:23" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><call pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:25">program_interrupt</name><argument_list pos:start="71:26" pos:end="71:46">(<argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">env</name></expr></argument>, <argument pos:start="71:32" pos:end="71:42"><expr pos:start="71:32" pos:end="71:42"><name pos:start="71:32" pos:end="71:42">PGM_OPERAND</name></expr></argument>, <argument pos:start="71:45" pos:end="71:45"><expr pos:start="71:45" pos:end="71:45"><literal type="number" pos:start="71:45" pos:end="71:45">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:17">return <expr pos:start="73:16" pos:end="73:16"><literal type="number" pos:start="73:16" pos:end="73:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="79:5" pos:end="217:5">switch <condition pos:start="79:12" pos:end="79:15">(<expr pos:start="79:13" pos:end="79:14"><name pos:start="79:13" pos:end="79:14">oc</name></expr>)</condition> <block pos:start="79:17" pos:end="217:5">{<block_content pos:start="81:5" pos:end="215:29">

    <case pos:start="81:5" pos:end="81:29">case <expr pos:start="81:10" pos:end="81:28"><name pos:start="81:10" pos:end="81:28">ZPCI_MOD_FC_REG_INT</name></expr>:</case>

        <if_stmt pos:start="83:9" pos:end="95:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:31">(<expr pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:17">pbdev</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:30">summary_ind</name></name></expr>)</condition> <block pos:start="83:33" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:64">

            <expr_stmt pos:start="85:13" pos:end="85:33"><expr pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:14">cc</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:64"><expr pos:start="87:13" pos:end="87:63"><call pos:start="87:13" pos:end="87:63"><name pos:start="87:13" pos:end="87:32">s390_set_status_code</name><argument_list pos:start="87:33" pos:end="87:63">(<argument pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><name pos:start="87:34" pos:end="87:36">env</name></expr></argument>, <argument pos:start="87:39" pos:end="87:40"><expr pos:start="87:39" pos:end="87:40"><name pos:start="87:39" pos:end="87:40">r1</name></expr></argument>, <argument pos:start="87:43" pos:end="87:62"><expr pos:start="87:43" pos:end="87:62"><name pos:start="87:43" pos:end="87:62">ZPCI_MOD_ST_SEQUENCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="89:11" pos:end="95:9">else if <condition pos:start="89:19" pos:end="89:45">(<expr pos:start="89:20" pos:end="89:44"><call pos:start="89:20" pos:end="89:44"><name pos:start="89:20" pos:end="89:27">reg_irqs</name><argument_list pos:start="89:28" pos:end="89:44">(<argument pos:start="89:29" pos:end="89:31"><expr pos:start="89:29" pos:end="89:31"><name pos:start="89:29" pos:end="89:31">env</name></expr></argument>, <argument pos:start="89:34" pos:end="89:38"><expr pos:start="89:34" pos:end="89:38"><name pos:start="89:34" pos:end="89:38">pbdev</name></expr></argument>, <argument pos:start="89:41" pos:end="89:43"><expr pos:start="89:41" pos:end="89:43"><name pos:start="89:41" pos:end="89:43">fib</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:47" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:69">

            <expr_stmt pos:start="91:13" pos:end="91:33"><expr pos:start="91:13" pos:end="91:32"><name pos:start="91:13" pos:end="91:14">cc</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:69"><expr pos:start="93:13" pos:end="93:68"><call pos:start="93:13" pos:end="93:68"><name pos:start="93:13" pos:end="93:32">s390_set_status_code</name><argument_list pos:start="93:33" pos:end="93:68">(<argument pos:start="93:34" pos:end="93:36"><expr pos:start="93:34" pos:end="93:36"><name pos:start="93:34" pos:end="93:36">env</name></expr></argument>, <argument pos:start="93:39" pos:end="93:40"><expr pos:start="93:39" pos:end="93:40"><name pos:start="93:39" pos:end="93:40">r1</name></expr></argument>, <argument pos:start="93:43" pos:end="93:67"><expr pos:start="93:43" pos:end="93:67"><name pos:start="93:43" pos:end="93:67">ZPCI_MOD_ST_RES_NOT_AVAIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:31">case <expr pos:start="99:10" pos:end="99:30"><name pos:start="99:10" pos:end="99:30">ZPCI_MOD_FC_DEREG_INT</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:32">(<expr pos:start="101:13" pos:end="101:31"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:31"><name pos:start="101:14" pos:end="101:18">pbdev</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:31">summary_ind</name></name></expr>)</condition> <block pos:start="101:34" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:64">

            <expr_stmt pos:start="103:13" pos:end="103:33"><expr pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:14">cc</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:64"><expr pos:start="105:13" pos:end="105:63"><call pos:start="105:13" pos:end="105:63"><name pos:start="105:13" pos:end="105:32">s390_set_status_code</name><argument_list pos:start="105:33" pos:end="105:63">(<argument pos:start="105:34" pos:end="105:36"><expr pos:start="105:34" pos:end="105:36"><name pos:start="105:34" pos:end="105:36">env</name></expr></argument>, <argument pos:start="105:39" pos:end="105:40"><expr pos:start="105:39" pos:end="105:40"><name pos:start="105:39" pos:end="105:40">r1</name></expr></argument>, <argument pos:start="105:43" pos:end="105:62"><expr pos:start="105:43" pos:end="105:62"><name pos:start="105:43" pos:end="105:62">ZPCI_MOD_ST_SEQUENCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="107:11" pos:end="111:9">else <block pos:start="107:16" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:34">

            <expr_stmt pos:start="109:13" pos:end="109:34"><expr pos:start="109:13" pos:end="109:33"><call pos:start="109:13" pos:end="109:33"><name pos:start="109:13" pos:end="109:26">pci_dereg_irqs</name><argument_list pos:start="109:27" pos:end="109:33">(<argument pos:start="109:28" pos:end="109:32"><expr pos:start="109:28" pos:end="109:32"><name pos:start="109:28" pos:end="109:32">pbdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:30">case <expr pos:start="115:10" pos:end="115:29"><name pos:start="115:10" pos:end="115:29">ZPCI_MOD_FC_REG_IOAT</name></expr>:</case>

        <if_stmt pos:start="117:9" pos:end="135:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:23">(<expr pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:17">dmaas</name> <operator pos:start="117:19" pos:end="117:20">!=</operator> <literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr>)</condition> <block pos:start="117:25" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:67">

            <expr_stmt pos:start="119:13" pos:end="119:33"><expr pos:start="119:13" pos:end="119:32"><name pos:start="119:13" pos:end="119:14">cc</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <name pos:start="119:18" pos:end="119:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:67"><expr pos:start="121:13" pos:end="121:66"><call pos:start="121:13" pos:end="121:66"><name pos:start="121:13" pos:end="121:32">s390_set_status_code</name><argument_list pos:start="121:33" pos:end="121:66">(<argument pos:start="121:34" pos:end="121:36"><expr pos:start="121:34" pos:end="121:36"><name pos:start="121:34" pos:end="121:36">env</name></expr></argument>, <argument pos:start="121:39" pos:end="121:40"><expr pos:start="121:39" pos:end="121:40"><name pos:start="121:39" pos:end="121:40">r1</name></expr></argument>, <argument pos:start="121:43" pos:end="121:65"><expr pos:start="121:43" pos:end="121:65"><name pos:start="121:43" pos:end="121:65">ZPCI_MOD_ST_DMAAS_INVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="123:11" pos:end="129:9">else if <condition pos:start="123:19" pos:end="123:40">(<expr pos:start="123:20" pos:end="123:39"><name pos:start="123:20" pos:end="123:39"><name pos:start="123:20" pos:end="123:24">pbdev</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:39">iommu_enabled</name></name></expr>)</condition> <block pos:start="123:42" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:64">

            <expr_stmt pos:start="125:13" pos:end="125:33"><expr pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:14">cc</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <name pos:start="125:18" pos:end="125:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:64"><expr pos:start="127:13" pos:end="127:63"><call pos:start="127:13" pos:end="127:63"><name pos:start="127:13" pos:end="127:32">s390_set_status_code</name><argument_list pos:start="127:33" pos:end="127:63">(<argument pos:start="127:34" pos:end="127:36"><expr pos:start="127:34" pos:end="127:36"><name pos:start="127:34" pos:end="127:36">env</name></expr></argument>, <argument pos:start="127:39" pos:end="127:40"><expr pos:start="127:39" pos:end="127:40"><name pos:start="127:39" pos:end="127:40">r1</name></expr></argument>, <argument pos:start="127:43" pos:end="127:62"><expr pos:start="127:43" pos:end="127:62"><name pos:start="127:43" pos:end="127:62">ZPCI_MOD_ST_SEQUENCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="129:11" pos:end="135:9">else if <condition pos:start="129:19" pos:end="129:45">(<expr pos:start="129:20" pos:end="129:44"><call pos:start="129:20" pos:end="129:44"><name pos:start="129:20" pos:end="129:27">reg_ioat</name><argument_list pos:start="129:28" pos:end="129:44">(<argument pos:start="129:29" pos:end="129:31"><expr pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:31">env</name></expr></argument>, <argument pos:start="129:34" pos:end="129:38"><expr pos:start="129:34" pos:end="129:38"><name pos:start="129:34" pos:end="129:38">pbdev</name></expr></argument>, <argument pos:start="129:41" pos:end="129:43"><expr pos:start="129:41" pos:end="129:43"><name pos:start="129:41" pos:end="129:43">fib</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:47" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:65">

            <expr_stmt pos:start="131:13" pos:end="131:33"><expr pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:14">cc</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <name pos:start="131:18" pos:end="131:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:65"><expr pos:start="133:13" pos:end="133:64"><call pos:start="133:13" pos:end="133:64"><name pos:start="133:13" pos:end="133:32">s390_set_status_code</name><argument_list pos:start="133:33" pos:end="133:64">(<argument pos:start="133:34" pos:end="133:36"><expr pos:start="133:34" pos:end="133:36"><name pos:start="133:34" pos:end="133:36">env</name></expr></argument>, <argument pos:start="133:39" pos:end="133:40"><expr pos:start="133:39" pos:end="133:40"><name pos:start="133:39" pos:end="133:40">r1</name></expr></argument>, <argument pos:start="133:43" pos:end="133:63"><expr pos:start="133:43" pos:end="133:63"><name pos:start="133:43" pos:end="133:63">ZPCI_MOD_ST_INSUF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:32">case <expr pos:start="139:10" pos:end="139:31"><name pos:start="139:10" pos:end="139:31">ZPCI_MOD_FC_DEREG_IOAT</name></expr>:</case>

        <if_stmt pos:start="141:9" pos:end="157:9"><if pos:start="141:9" pos:end="147:9">if <condition pos:start="141:12" pos:end="141:23">(<expr pos:start="141:13" pos:end="141:22"><name pos:start="141:13" pos:end="141:17">dmaas</name> <operator pos:start="141:19" pos:end="141:20">!=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>)</condition> <block pos:start="141:25" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:67">

            <expr_stmt pos:start="143:13" pos:end="143:33"><expr pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:14">cc</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <name pos:start="143:18" pos:end="143:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:67"><expr pos:start="145:13" pos:end="145:66"><call pos:start="145:13" pos:end="145:66"><name pos:start="145:13" pos:end="145:32">s390_set_status_code</name><argument_list pos:start="145:33" pos:end="145:66">(<argument pos:start="145:34" pos:end="145:36"><expr pos:start="145:34" pos:end="145:36"><name pos:start="145:34" pos:end="145:36">env</name></expr></argument>, <argument pos:start="145:39" pos:end="145:40"><expr pos:start="145:39" pos:end="145:40"><name pos:start="145:39" pos:end="145:40">r1</name></expr></argument>, <argument pos:start="145:43" pos:end="145:65"><expr pos:start="145:43" pos:end="145:65"><name pos:start="145:43" pos:end="145:65">ZPCI_MOD_ST_DMAAS_INVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="153:9">else if <condition pos:start="147:19" pos:end="147:41">(<expr pos:start="147:20" pos:end="147:40"><operator pos:start="147:20" pos:end="147:20">!</operator><name pos:start="147:21" pos:end="147:40"><name pos:start="147:21" pos:end="147:25">pbdev</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:40">iommu_enabled</name></name></expr>)</condition> <block pos:start="147:43" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:64">

            <expr_stmt pos:start="149:13" pos:end="149:33"><expr pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:14">cc</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:64"><expr pos:start="151:13" pos:end="151:63"><call pos:start="151:13" pos:end="151:63"><name pos:start="151:13" pos:end="151:32">s390_set_status_code</name><argument_list pos:start="151:33" pos:end="151:63">(<argument pos:start="151:34" pos:end="151:36"><expr pos:start="151:34" pos:end="151:36"><name pos:start="151:34" pos:end="151:36">env</name></expr></argument>, <argument pos:start="151:39" pos:end="151:40"><expr pos:start="151:39" pos:end="151:40"><name pos:start="151:39" pos:end="151:40">r1</name></expr></argument>, <argument pos:start="151:43" pos:end="151:62"><expr pos:start="151:43" pos:end="151:62"><name pos:start="151:43" pos:end="151:62">ZPCI_MOD_ST_SEQUENCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="153:11" pos:end="157:9">else <block pos:start="153:16" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:34">

            <expr_stmt pos:start="155:13" pos:end="155:34"><expr pos:start="155:13" pos:end="155:33"><call pos:start="155:13" pos:end="155:33"><name pos:start="155:13" pos:end="155:26">pci_dereg_ioat</name><argument_list pos:start="155:27" pos:end="155:33">(<argument pos:start="155:28" pos:end="155:32"><expr pos:start="155:28" pos:end="155:32"><name pos:start="155:28" pos:end="155:32">pbdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:32">case <expr pos:start="161:10" pos:end="161:31"><name pos:start="161:10" pos:end="161:31">ZPCI_MOD_FC_REREG_IOAT</name></expr>:</case>

        <if_stmt pos:start="163:9" pos:end="187:9"><if pos:start="163:9" pos:end="169:9">if <condition pos:start="163:12" pos:end="163:23">(<expr pos:start="163:13" pos:end="163:22"><name pos:start="163:13" pos:end="163:17">dmaas</name> <operator pos:start="163:19" pos:end="163:20">!=</operator> <literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>)</condition> <block pos:start="163:25" pos:end="169:9">{<block_content pos:start="165:13" pos:end="167:67">

            <expr_stmt pos:start="165:13" pos:end="165:33"><expr pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:14">cc</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <name pos:start="165:18" pos:end="165:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:67"><expr pos:start="167:13" pos:end="167:66"><call pos:start="167:13" pos:end="167:66"><name pos:start="167:13" pos:end="167:32">s390_set_status_code</name><argument_list pos:start="167:33" pos:end="167:66">(<argument pos:start="167:34" pos:end="167:36"><expr pos:start="167:34" pos:end="167:36"><name pos:start="167:34" pos:end="167:36">env</name></expr></argument>, <argument pos:start="167:39" pos:end="167:40"><expr pos:start="167:39" pos:end="167:40"><name pos:start="167:39" pos:end="167:40">r1</name></expr></argument>, <argument pos:start="167:43" pos:end="167:65"><expr pos:start="167:43" pos:end="167:65"><name pos:start="167:43" pos:end="167:65">ZPCI_MOD_ST_DMAAS_INVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="175:9">else if <condition pos:start="169:19" pos:end="169:41">(<expr pos:start="169:20" pos:end="169:40"><operator pos:start="169:20" pos:end="169:20">!</operator><name pos:start="169:21" pos:end="169:40"><name pos:start="169:21" pos:end="169:25">pbdev</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:40">iommu_enabled</name></name></expr>)</condition> <block pos:start="169:43" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:64">

            <expr_stmt pos:start="171:13" pos:end="171:33"><expr pos:start="171:13" pos:end="171:32"><name pos:start="171:13" pos:end="171:14">cc</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <name pos:start="171:18" pos:end="171:32">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:64"><expr pos:start="173:13" pos:end="173:63"><call pos:start="173:13" pos:end="173:63"><name pos:start="173:13" pos:end="173:32">s390_set_status_code</name><argument_list pos:start="173:33" pos:end="173:63">(<argument pos:start="173:34" pos:end="173:36"><expr pos:start="173:34" pos:end="173:36"><name pos:start="173:34" pos:end="173:36">env</name></expr></argument>, <argument pos:start="173:39" pos:end="173:40"><expr pos:start="173:39" pos:end="173:40"><name pos:start="173:39" pos:end="173:40">r1</name></expr></argument>, <argument pos:start="173:43" pos:end="173:62"><expr pos:start="173:43" pos:end="173:62"><name pos:start="173:43" pos:end="173:62">ZPCI_MOD_ST_SEQUENCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="175:11" pos:end="187:9">else <block pos:start="175:16" pos:end="187:9">{<block_content pos:start="177:13" pos:end="185:13">

            <expr_stmt pos:start="177:13" pos:end="177:34"><expr pos:start="177:13" pos:end="177:33"><call pos:start="177:13" pos:end="177:33"><name pos:start="177:13" pos:end="177:26">pci_dereg_ioat</name><argument_list pos:start="177:27" pos:end="177:33">(<argument pos:start="177:28" pos:end="177:32"><expr pos:start="177:28" pos:end="177:32"><name pos:start="177:28" pos:end="177:32">pbdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="185:13"><if pos:start="179:13" pos:end="185:13">if <condition pos:start="179:16" pos:end="179:42">(<expr pos:start="179:17" pos:end="179:41"><call pos:start="179:17" pos:end="179:41"><name pos:start="179:17" pos:end="179:24">reg_ioat</name><argument_list pos:start="179:25" pos:end="179:41">(<argument pos:start="179:26" pos:end="179:28"><expr pos:start="179:26" pos:end="179:28"><name pos:start="179:26" pos:end="179:28">env</name></expr></argument>, <argument pos:start="179:31" pos:end="179:35"><expr pos:start="179:31" pos:end="179:35"><name pos:start="179:31" pos:end="179:35">pbdev</name></expr></argument>, <argument pos:start="179:38" pos:end="179:40"><expr pos:start="179:38" pos:end="179:40"><name pos:start="179:38" pos:end="179:40">fib</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:44" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:69">

                <expr_stmt pos:start="181:17" pos:end="181:37"><expr pos:start="181:17" pos:end="181:36"><name pos:start="181:17" pos:end="181:18">cc</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <name pos:start="181:22" pos:end="181:36">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:69"><expr pos:start="183:17" pos:end="183:68"><call pos:start="183:17" pos:end="183:68"><name pos:start="183:17" pos:end="183:36">s390_set_status_code</name><argument_list pos:start="183:37" pos:end="183:68">(<argument pos:start="183:38" pos:end="183:40"><expr pos:start="183:38" pos:end="183:40"><name pos:start="183:38" pos:end="183:40">env</name></expr></argument>, <argument pos:start="183:43" pos:end="183:44"><expr pos:start="183:43" pos:end="183:44"><name pos:start="183:43" pos:end="183:44">r1</name></expr></argument>, <argument pos:start="183:47" pos:end="183:67"><expr pos:start="183:47" pos:end="183:67"><name pos:start="183:47" pos:end="183:67">ZPCI_MOD_ST_INSUF_RES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="189:9" pos:end="189:14">break;</break>

    <case pos:start="191:5" pos:end="191:33">case <expr pos:start="191:10" pos:end="191:32"><name pos:start="191:10" pos:end="191:32">ZPCI_MOD_FC_RESET_ERROR</name></expr>:</case>

        <expr_stmt pos:start="193:9" pos:end="193:35"><expr pos:start="193:9" pos:end="193:34"><name pos:start="193:9" pos:end="193:26"><name pos:start="193:9" pos:end="193:13">pbdev</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:26">error_state</name></name> <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:34">false</name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:37"><expr pos:start="195:9" pos:end="195:36"><name pos:start="195:9" pos:end="195:28"><name pos:start="195:9" pos:end="195:13">pbdev</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:28">lgstg_blocked</name></name> <operator pos:start="195:30" pos:end="195:30">=</operator> <name pos:start="195:32" pos:end="195:36">false</name></expr>;</expr_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:33">case <expr pos:start="199:10" pos:end="199:32"><name pos:start="199:10" pos:end="199:32">ZPCI_MOD_FC_RESET_BLOCK</name></expr>:</case>

        <expr_stmt pos:start="201:9" pos:end="201:37"><expr pos:start="201:9" pos:end="201:36"><name pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:13">pbdev</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:28">lgstg_blocked</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:36">false</name></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:33">case <expr pos:start="205:10" pos:end="205:32"><name pos:start="205:10" pos:end="205:32">ZPCI_MOD_FC_SET_MEASURE</name></expr>:</case>

        <expr_stmt pos:start="207:9" pos:end="207:47"><expr pos:start="207:9" pos:end="207:46"><name pos:start="207:9" pos:end="207:23"><name pos:start="207:9" pos:end="207:13">pbdev</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:23">fmb_addr</name></name> <operator pos:start="207:25" pos:end="207:25">=</operator> <call pos:start="207:27" pos:end="207:46"><name pos:start="207:27" pos:end="207:31">ldq_p</name><argument_list pos:start="207:32" pos:end="207:46">(<argument pos:start="207:33" pos:end="207:45"><expr pos:start="207:33" pos:end="207:45"><operator pos:start="207:33" pos:end="207:33">&amp;</operator><name pos:start="207:34" pos:end="207:45"><name pos:start="207:34" pos:end="207:36">fib</name><operator pos:start="207:37" pos:end="207:37">.</operator><name pos:start="207:38" pos:end="207:45">fmb_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="209:9" pos:end="209:14">break;</break>

    <default pos:start="211:5" pos:end="211:12">default:</default>

        <expr_stmt pos:start="213:9" pos:end="213:53"><expr pos:start="213:9" pos:end="213:52"><call pos:start="213:9" pos:end="213:52"><name pos:start="213:9" pos:end="213:25">program_interrupt</name><argument_list pos:start="213:26" pos:end="213:52">(<argument pos:start="213:27" pos:end="213:35"><expr pos:start="213:27" pos:end="213:35"><operator pos:start="213:27" pos:end="213:27">&amp;</operator><name pos:start="213:28" pos:end="213:35"><name pos:start="213:28" pos:end="213:30">cpu</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:35">env</name></name></expr></argument>, <argument pos:start="213:38" pos:end="213:48"><expr pos:start="213:38" pos:end="213:48"><name pos:start="213:38" pos:end="213:48">PGM_OPERAND</name></expr></argument>, <argument pos:start="213:51" pos:end="213:51"><expr pos:start="213:51" pos:end="213:51"><literal type="number" pos:start="213:51" pos:end="213:51">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:29"><expr pos:start="215:9" pos:end="215:28"><name pos:start="215:9" pos:end="215:10">cc</name> <operator pos:start="215:12" pos:end="215:12">=</operator> <name pos:start="215:14" pos:end="215:28">ZPCI_PCI_LS_ERR</name></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="221:5" pos:end="221:19"><expr pos:start="221:5" pos:end="221:18"><call pos:start="221:5" pos:end="221:18"><name pos:start="221:5" pos:end="221:9">setcc</name><argument_list pos:start="221:10" pos:end="221:18">(<argument pos:start="221:11" pos:end="221:13"><expr pos:start="221:11" pos:end="221:13"><name pos:start="221:11" pos:end="221:13">cpu</name></expr></argument>, <argument pos:start="221:16" pos:end="221:17"><expr pos:start="221:16" pos:end="221:17"><name pos:start="221:16" pos:end="221:17">cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
