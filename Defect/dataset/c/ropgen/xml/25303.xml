<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25303.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">mm_decode_intra</name><parameter_list pos:start="1:28" pos:end="1:107">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:37">MmContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type> <name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:57">half_horiz</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:72">half_vert</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:92"><decl pos:start="1:75" pos:end="1:92"><type pos:start="1:75" pos:end="1:92"><specifier pos:start="1:75" pos:end="1:79">const</specifier> <name pos:start="1:81" pos:end="1:87">uint8_t</name> <modifier pos:start="1:89" pos:end="1:89">*</modifier></type><name pos:start="1:90" pos:end="1:92">buf</name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:106"><decl pos:start="1:95" pos:end="1:106"><type pos:start="1:95" pos:end="1:106"><name pos:start="1:95" pos:end="1:97">int</name></type> <name pos:start="1:99" pos:end="1:106">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">x</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">y</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:8"><expr pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:5">i</name><operator pos:start="7:6" pos:end="7:6">=</operator><literal type="number" pos:start="7:7" pos:end="7:7">0</literal></expr>;</expr_stmt> <expr_stmt pos:start="7:10" pos:end="7:13"><expr pos:start="7:10" pos:end="7:12"><name pos:start="7:10" pos:end="7:10">x</name><operator pos:start="7:11" pos:end="7:11">=</operator><literal type="number" pos:start="7:12" pos:end="7:12">0</literal></expr>;</expr_stmt> <expr_stmt pos:start="7:15" pos:end="7:18"><expr pos:start="7:15" pos:end="7:17"><name pos:start="7:15" pos:end="7:15">y</name><operator pos:start="7:16" pos:end="7:16">=</operator><literal type="number" pos:start="7:17" pos:end="7:17">0</literal></expr>;</expr_stmt>



    <while pos:start="11:5" pos:end="65:5">while<condition pos:start="11:10" pos:end="11:21">(<expr pos:start="11:11" pos:end="11:20"><name pos:start="11:11" pos:end="11:11">i</name><operator pos:start="11:12" pos:end="11:12">&lt;</operator><name pos:start="11:13" pos:end="11:20">buf_size</name></expr>)</condition> <block pos:start="11:23" pos:end="65:5">{<block_content pos:start="13:9" pos:end="63:9">

        <decl_stmt pos:start="13:9" pos:end="13:30"><decl pos:start="13:9" pos:end="13:22"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:22">run_length</name></decl>, <decl pos:start="13:25" pos:end="13:29"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:25" pos:end="13:29">color</name></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="33:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:18"><name pos:start="17:13" pos:end="17:15">buf</name><index pos:start="17:16" pos:end="17:18">[<expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">i</name></expr>]</index></name> <operator pos:start="17:20" pos:end="17:20">&amp;</operator> <literal type="number" pos:start="17:22" pos:end="17:25">0x80</literal></expr>)</condition> <block pos:start="17:28" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:16">

            <expr_stmt pos:start="19:13" pos:end="19:27"><expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:22">run_length</name> <operator pos:start="19:24" pos:end="19:24">=</operator> <literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:17">color</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:26"><name pos:start="21:21" pos:end="21:23">buf</name><index pos:start="21:24" pos:end="21:26">[<expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:16"><expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:13">i</name><operator pos:start="23:14" pos:end="23:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="25:10" pos:end="33:9">else<block pos:start="25:14" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:17">

            <expr_stmt pos:start="27:13" pos:end="27:45"><expr pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:22">run_length</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <operator pos:start="27:26" pos:end="27:26">(</operator><name pos:start="27:27" pos:end="27:32"><name pos:start="27:27" pos:end="27:29">buf</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><name pos:start="27:31" pos:end="27:31">i</name></expr>]</index></name> <operator pos:start="27:34" pos:end="27:34">&amp;</operator> <literal type="number" pos:start="27:36" pos:end="27:39">0x7f</literal><operator pos:start="27:40" pos:end="27:40">)</operator> <operator pos:start="27:42" pos:end="27:42">+</operator> <literal type="number" pos:start="27:44" pos:end="27:44">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:29"><expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:17">color</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:23">buf</name><index pos:start="29:24" pos:end="29:28">[<expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">i</name><operator pos:start="29:26" pos:end="29:26">+</operator><literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:17"><expr pos:start="31:13" pos:end="31:16"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:15">+=</operator><literal type="number" pos:start="31:16" pos:end="31:16">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="37:9" pos:end="39:27"><if pos:start="37:9" pos:end="39:27">if <condition pos:start="37:12" pos:end="37:23">(<expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:22">half_horiz</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:27"><block_content pos:start="39:13" pos:end="39:27">

            <expr_stmt pos:start="39:13" pos:end="39:27"><expr pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:22">run_length</name> <operator pos:start="39:24" pos:end="39:25">*=</operator><literal type="number" pos:start="39:26" pos:end="39:26">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:18">(<expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:17">color</name></expr>)</condition> <block pos:start="43:20" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:93">

            <expr_stmt pos:start="45:13" pos:end="45:85"><expr pos:start="45:13" pos:end="45:84"><call pos:start="45:13" pos:end="45:84"><name pos:start="45:13" pos:end="45:18">memset</name><argument_list pos:start="45:19" pos:end="45:84">(<argument pos:start="45:20" pos:end="45:64"><expr pos:start="45:20" pos:end="45:64"><name pos:start="45:20" pos:end="45:35"><name pos:start="45:20" pos:end="45:20">s</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:27">frame</name><operator pos:start="45:28" pos:end="45:28">.</operator><name pos:start="45:29" pos:end="45:32">data</name><index pos:start="45:33" pos:end="45:35">[<expr pos:start="45:34" pos:end="45:34"><literal type="number" pos:start="45:34" pos:end="45:34">0</literal></expr>]</index></name> <operator pos:start="45:37" pos:end="45:37">+</operator> <name pos:start="45:39" pos:end="45:39">y</name><operator pos:start="45:40" pos:end="45:40">*</operator><name pos:start="45:41" pos:end="45:60"><name pos:start="45:41" pos:end="45:41">s</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:48">frame</name><operator pos:start="45:49" pos:end="45:49">.</operator><name pos:start="45:50" pos:end="45:57">linesize</name><index pos:start="45:58" pos:end="45:60">[<expr pos:start="45:59" pos:end="45:59"><literal type="number" pos:start="45:59" pos:end="45:59">0</literal></expr>]</index></name> <operator pos:start="45:62" pos:end="45:62">+</operator> <name pos:start="45:64" pos:end="45:64">x</name></expr></argument>, <argument pos:start="45:67" pos:end="45:71"><expr pos:start="45:67" pos:end="45:71"><name pos:start="45:67" pos:end="45:71">color</name></expr></argument>, <argument pos:start="45:74" pos:end="45:83"><expr pos:start="45:74" pos:end="45:83"><name pos:start="45:74" pos:end="45:83">run_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="49:93"><if pos:start="47:13" pos:end="49:93">if <condition pos:start="47:16" pos:end="47:26">(<expr pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:25">half_vert</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:93"><block_content pos:start="49:17" pos:end="49:93">

                <expr_stmt pos:start="49:17" pos:end="49:93"><expr pos:start="49:17" pos:end="49:92"><call pos:start="49:17" pos:end="49:92"><name pos:start="49:17" pos:end="49:22">memset</name><argument_list pos:start="49:23" pos:end="49:92">(<argument pos:start="49:24" pos:end="49:72"><expr pos:start="49:24" pos:end="49:72"><name pos:start="49:24" pos:end="49:39"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">frame</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:36">data</name><index pos:start="49:37" pos:end="49:39">[<expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">0</literal></expr>]</index></name> <operator pos:start="49:41" pos:end="49:41">+</operator> <operator pos:start="49:43" pos:end="49:43">(</operator><name pos:start="49:44" pos:end="49:44">y</name><operator pos:start="49:45" pos:end="49:45">+</operator><literal type="number" pos:start="49:46" pos:end="49:46">1</literal><operator pos:start="49:47" pos:end="49:47">)</operator><operator pos:start="49:48" pos:end="49:48">*</operator><name pos:start="49:49" pos:end="49:68"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:56">frame</name><operator pos:start="49:57" pos:end="49:57">.</operator><name pos:start="49:58" pos:end="49:65">linesize</name><index pos:start="49:66" pos:end="49:68">[<expr pos:start="49:67" pos:end="49:67"><literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr>]</index></name> <operator pos:start="49:70" pos:end="49:70">+</operator> <name pos:start="49:72" pos:end="49:72">x</name></expr></argument>, <argument pos:start="49:75" pos:end="49:79"><expr pos:start="49:75" pos:end="49:79"><name pos:start="49:75" pos:end="49:79">color</name></expr></argument>, <argument pos:start="49:82" pos:end="49:91"><expr pos:start="49:82" pos:end="49:91"><name pos:start="49:82" pos:end="49:91">run_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:9">x</name><operator pos:start="53:10" pos:end="53:11">+=</operator> <name pos:start="53:13" pos:end="53:22">run_length</name></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:33">(<expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:13">x</name> <operator pos:start="57:15" pos:end="57:16">&gt;=</operator> <name pos:start="57:18" pos:end="57:32"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:25">avctx</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:32">width</name></name></expr>)</condition> <block pos:start="57:35" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:35">

            <expr_stmt pos:start="59:13" pos:end="59:16"><expr pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:13">x</name><operator pos:start="59:14" pos:end="59:14">=</operator><literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:13">y</name> <operator pos:start="61:15" pos:end="61:16">+=</operator> <ternary pos:start="61:18" pos:end="61:34"><condition pos:start="61:18" pos:end="61:28"><expr pos:start="61:18" pos:end="61:26"><name pos:start="61:18" pos:end="61:26">half_vert</name></expr> ?</condition><then pos:start="61:30" pos:end="61:30"> <expr pos:start="61:30" pos:end="61:30"><literal type="number" pos:start="61:30" pos:end="61:30">2</literal></expr> </then><else pos:start="61:32" pos:end="61:34">: <expr pos:start="61:34" pos:end="61:34"><literal type="number" pos:start="61:34" pos:end="61:34">1</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
