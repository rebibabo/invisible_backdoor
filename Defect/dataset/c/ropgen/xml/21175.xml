<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21175.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">qcow2_get_cluster_offset</name><parameter_list pos:start="1:29" pos:end="3:39">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:66">offset</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:12"><decl pos:start="3:5" pos:end="3:12"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:7">int</name> <modifier pos:start="3:9" pos:end="3:9">*</modifier></type><name pos:start="3:10" pos:end="3:12">num</name></decl></parameter>, <parameter pos:start="3:15" pos:end="3:38"><decl pos:start="3:15" pos:end="3:38"><type pos:start="3:15" pos:end="3:38"><name pos:start="3:15" pos:end="3:22">uint64_t</name> <modifier pos:start="3:24" pos:end="3:24">*</modifier></type><name pos:start="3:25" pos:end="3:38">cluster_offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="201:1">{<block_content pos:start="7:5" pos:end="199:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:25">l2_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:21">l1_index</name></decl>, <decl pos:start="11:24" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:24" pos:end="11:32">l2_offset</name></decl>, <decl pos:start="11:35" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:12"><modifier pos:start="11:35" pos:end="11:35">*</modifier></type><name pos:start="11:36" pos:end="11:43">l2_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">l1_bits</name></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:33">index_in_cluster</name></decl>, <decl pos:start="15:36" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:36" pos:end="15:46">nb_clusters</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:25">nb_available</name></decl>, <decl pos:start="17:28" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:28" pos:end="17:36">nb_needed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:64"><expr pos:start="23:5" pos:end="23:63"><name pos:start="23:5" pos:end="23:20">index_in_cluster</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <operator pos:start="23:24" pos:end="23:24">(</operator><name pos:start="23:25" pos:end="23:30">offset</name> <operator pos:start="23:32" pos:end="23:33">&gt;&gt;</operator> <literal type="number" pos:start="23:35" pos:end="23:35">9</literal><operator pos:start="23:36" pos:end="23:36">)</operator> <operator pos:start="23:38" pos:end="23:38">&amp;</operator> <operator pos:start="23:40" pos:end="23:40">(</operator><name pos:start="23:41" pos:end="23:58"><name pos:start="23:41" pos:end="23:41">s</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:58">cluster_sectors</name></name> <operator pos:start="23:60" pos:end="23:60">-</operator> <literal type="number" pos:start="23:62" pos:end="23:62">1</literal><operator pos:start="23:63" pos:end="23:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:13">nb_needed</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <operator pos:start="25:17" pos:end="25:17">*</operator><name pos:start="25:18" pos:end="25:20">num</name> <operator pos:start="25:22" pos:end="25:22">+</operator> <name pos:start="25:24" pos:end="25:39">index_in_cluster</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:11">l1_bits</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:24"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:24">l2_bits</name></name> <operator pos:start="29:26" pos:end="29:26">+</operator> <name pos:start="29:28" pos:end="29:42"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:42">cluster_bits</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="37:7">/* compute how many bytes there are between the offset and

     * the end of the l1 entry

     */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:74"><expr pos:start="41:5" pos:end="41:73"><name pos:start="41:5" pos:end="41:16">nb_available</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <operator pos:start="41:20" pos:end="41:20">(</operator><literal type="number" pos:start="41:21" pos:end="41:24">1ULL</literal> <operator pos:start="41:26" pos:end="41:27">&lt;&lt;</operator> <name pos:start="41:29" pos:end="41:35">l1_bits</name><operator pos:start="41:36" pos:end="41:36">)</operator> <operator pos:start="41:38" pos:end="41:38">-</operator> <operator pos:start="41:40" pos:end="41:40">(</operator><name pos:start="41:41" pos:end="41:46">offset</name> <operator pos:start="41:48" pos:end="41:48">&amp;</operator> <operator pos:start="41:50" pos:end="41:50">(</operator><operator pos:start="41:51" pos:end="41:51">(</operator><literal type="number" pos:start="41:52" pos:end="41:55">1ULL</literal> <operator pos:start="41:57" pos:end="41:58">&lt;&lt;</operator> <name pos:start="41:60" pos:end="41:66">l1_bits</name><operator pos:start="41:67" pos:end="41:67">)</operator> <operator pos:start="41:69" pos:end="41:69">-</operator> <literal type="number" pos:start="41:71" pos:end="41:71">1</literal><operator pos:start="41:72" pos:end="41:72">)</operator><operator pos:start="41:73" pos:end="41:73">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:49">/* compute the number of available sectors */</comment>



    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:16">nb_available</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <operator pos:start="49:20" pos:end="49:20">(</operator><name pos:start="49:21" pos:end="49:32">nb_available</name> <operator pos:start="49:34" pos:end="49:35">&gt;&gt;</operator> <literal type="number" pos:start="49:37" pos:end="49:37">9</literal><operator pos:start="49:38" pos:end="49:38">)</operator> <operator pos:start="49:40" pos:end="49:40">+</operator> <name pos:start="49:42" pos:end="49:57">index_in_cluster</name></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:33">(<expr pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:17">nb_needed</name> <operator pos:start="53:19" pos:end="53:19">&gt;</operator> <name pos:start="53:21" pos:end="53:32">nb_available</name></expr>)</condition> <block pos:start="53:35" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:33">

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:17">nb_needed</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:32">nb_available</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:19">cluster_offset</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:48">/* seek the the l2 offset in the l1 table */</comment>



    <expr_stmt pos:start="69:5" pos:end="69:33"><expr pos:start="69:5" pos:end="69:32"><name pos:start="69:5" pos:end="69:12">l1_index</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:21">offset</name> <operator pos:start="69:23" pos:end="69:24">&gt;&gt;</operator> <name pos:start="69:26" pos:end="69:32">l1_bits</name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:31">(<expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:16">l1_index</name> <operator pos:start="71:18" pos:end="71:19">&gt;=</operator> <name pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:30">l1_size</name></name></expr>)</condition> <block pos:start="71:33" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:17">

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:39">QCOW2_CLUSTER_UNALLOCATED</name></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:56"><expr pos:start="81:5" pos:end="81:55"><name pos:start="81:5" pos:end="81:13">l2_offset</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <name pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:27">l1_table</name><index pos:start="81:28" pos:end="81:37">[<expr pos:start="81:29" pos:end="81:36"><name pos:start="81:29" pos:end="81:36">l1_index</name></expr>]</index></name> <operator pos:start="81:39" pos:end="81:39">&amp;</operator> <name pos:start="81:41" pos:end="81:55">L1E_OFFSET_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:19">(<expr pos:start="83:9" pos:end="83:18"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:18">l2_offset</name></expr>)</condition> <block pos:start="83:21" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:17">

        <expr_stmt pos:start="85:9" pos:end="85:40"><expr pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:39">QCOW2_CLUSTER_UNALLOCATED</name></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:17">goto <name pos:start="87:14" pos:end="87:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:37">/* load the l2 table in memory */</comment>



    <expr_stmt pos:start="97:5" pos:end="97:44"><expr pos:start="97:5" pos:end="97:43"><name pos:start="97:5" pos:end="97:7">ret</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:43"><name pos:start="97:11" pos:end="97:17">l2_load</name><argument_list pos:start="97:18" pos:end="97:43">(<argument pos:start="97:19" pos:end="97:20"><expr pos:start="97:19" pos:end="97:20"><name pos:start="97:19" pos:end="97:20">bs</name></expr></argument>, <argument pos:start="97:23" pos:end="97:31"><expr pos:start="97:23" pos:end="97:31"><name pos:start="97:23" pos:end="97:31">l2_offset</name></expr></argument>, <argument pos:start="97:34" pos:end="97:42"><expr pos:start="97:34" pos:end="97:42"><operator pos:start="97:34" pos:end="97:34">&amp;</operator><name pos:start="97:35" pos:end="97:42">l2_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">&lt;</operator> <literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>)</condition> <block pos:start="99:18" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:19">

        <return pos:start="101:9" pos:end="101:19">return <expr pos:start="101:16" pos:end="101:18"><name pos:start="101:16" pos:end="101:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:59">/* find the cluster offset for the given disk offset */</comment>



    <expr_stmt pos:start="111:5" pos:end="111:62"><expr pos:start="111:5" pos:end="111:61"><name pos:start="111:5" pos:end="111:12">l2_index</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <operator pos:start="111:16" pos:end="111:16">(</operator><name pos:start="111:17" pos:end="111:22">offset</name> <operator pos:start="111:24" pos:end="111:25">&gt;&gt;</operator> <name pos:start="111:27" pos:end="111:41"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:41">cluster_bits</name></name><operator pos:start="111:42" pos:end="111:42">)</operator> <operator pos:start="111:44" pos:end="111:44">&amp;</operator> <operator pos:start="111:46" pos:end="111:46">(</operator><name pos:start="111:47" pos:end="111:56"><name pos:start="111:47" pos:end="111:47">s</name><operator pos:start="111:48" pos:end="111:49">-&gt;</operator><name pos:start="111:50" pos:end="111:56">l2_size</name></name> <operator pos:start="111:58" pos:end="111:58">-</operator> <literal type="number" pos:start="111:60" pos:end="111:60">1</literal><operator pos:start="111:61" pos:end="111:61">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:54"><expr pos:start="113:5" pos:end="113:53"><operator pos:start="113:5" pos:end="113:5">*</operator><name pos:start="113:6" pos:end="113:19">cluster_offset</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="113:53"><name pos:start="113:23" pos:end="113:33">be64_to_cpu</name><argument_list pos:start="113:34" pos:end="113:53">(<argument pos:start="113:35" pos:end="113:52"><expr pos:start="113:35" pos:end="113:52"><name pos:start="113:35" pos:end="113:52"><name pos:start="113:35" pos:end="113:42">l2_table</name><index pos:start="113:43" pos:end="113:52">[<expr pos:start="113:44" pos:end="113:51"><name pos:start="113:44" pos:end="113:51">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:54"><expr pos:start="115:5" pos:end="115:53"><name pos:start="115:5" pos:end="115:15">nb_clusters</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:53"><name pos:start="115:19" pos:end="115:34">size_to_clusters</name><argument_list pos:start="115:35" pos:end="115:53">(<argument pos:start="115:36" pos:end="115:36"><expr pos:start="115:36" pos:end="115:36"><name pos:start="115:36" pos:end="115:36">s</name></expr></argument>, <argument pos:start="115:39" pos:end="115:52"><expr pos:start="115:39" pos:end="115:52"><name pos:start="115:39" pos:end="115:47">nb_needed</name> <operator pos:start="115:49" pos:end="115:50">&lt;&lt;</operator> <literal type="number" pos:start="115:52" pos:end="115:52">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:50"><expr pos:start="119:5" pos:end="119:49"><name pos:start="119:5" pos:end="119:7">ret</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <call pos:start="119:11" pos:end="119:49"><name pos:start="119:11" pos:end="119:32">qcow2_get_cluster_type</name><argument_list pos:start="119:33" pos:end="119:49">(<argument pos:start="119:34" pos:end="119:48"><expr pos:start="119:34" pos:end="119:48"><operator pos:start="119:34" pos:end="119:34">*</operator><name pos:start="119:35" pos:end="119:48">cluster_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="121:5" pos:end="176:5">switch <condition pos:start="121:12" pos:end="121:16">(<expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">ret</name></expr>)</condition> <block pos:start="121:18" pos:end="176:5">{<block_content pos:start="123:5" pos:end="174:16">

    <case pos:start="123:5" pos:end="123:34">case <expr pos:start="123:10" pos:end="123:33"><name pos:start="123:10" pos:end="123:33">QCOW2_CLUSTER_COMPRESSED</name></expr>:</case>

        <comment type="block" pos:start="125:9" pos:end="125:66">/* Compressed clusters can only be processed one by one */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:14"><expr pos:start="127:9" pos:end="127:13"><name pos:start="127:9" pos:end="127:9">c</name> <operator pos:start="127:11" pos:end="127:11">=</operator> <literal type="number" pos:start="127:13" pos:end="127:13">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:59"><expr pos:start="129:9" pos:end="129:58"><operator pos:start="129:9" pos:end="129:9">*</operator><name pos:start="129:10" pos:end="129:23">cluster_offset</name> <operator pos:start="129:25" pos:end="129:26">&amp;=</operator> <name pos:start="129:28" pos:end="129:58">L2E_COMPRESSED_OFFSET_SIZE_MASK</name></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    <case pos:start="133:5" pos:end="133:28">case <expr pos:start="133:10" pos:end="133:27"><name pos:start="133:10" pos:end="133:27">QCOW2_CLUSTER_ZERO</name></expr>:</case>

        <if_stmt pos:start="135:9" pos:end="140:9"><if pos:start="135:9" pos:end="140:9">if <condition pos:start="135:12" pos:end="135:32">(<expr pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:13">s</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:27">qcow_version</name></name> <operator pos:start="135:29" pos:end="135:29">&lt;</operator> <literal type="number" pos:start="135:31" pos:end="135:31">3</literal></expr>)</condition> <block pos:start="135:34" pos:end="140:9">{<block_content pos:start="138:13" pos:end="138:24">


            <return pos:start="138:13" pos:end="138:24">return <expr pos:start="138:20" pos:end="138:23"><operator pos:start="138:20" pos:end="138:20">-</operator><name pos:start="138:21" pos:end="138:23">EIO</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="142:9" pos:end="144:54"><expr pos:start="142:9" pos:end="144:53"><name pos:start="142:9" pos:end="142:9">c</name> <operator pos:start="142:11" pos:end="142:11">=</operator> <call pos:start="142:13" pos:end="144:53"><name pos:start="142:13" pos:end="142:37">count_contiguous_clusters</name><argument_list pos:start="142:38" pos:end="144:53">(<argument pos:start="142:39" pos:end="142:49"><expr pos:start="142:39" pos:end="142:49"><name pos:start="142:39" pos:end="142:49">nb_clusters</name></expr></argument>, <argument pos:start="142:52" pos:end="142:66"><expr pos:start="142:52" pos:end="142:66"><name pos:start="142:52" pos:end="142:66"><name pos:start="142:52" pos:end="142:52">s</name><operator pos:start="142:53" pos:end="142:54">-&gt;</operator><name pos:start="142:55" pos:end="142:66">cluster_size</name></name></expr></argument>,

                <argument pos:start="144:17" pos:end="144:35"><expr pos:start="144:17" pos:end="144:35"><operator pos:start="144:17" pos:end="144:17">&amp;</operator><name pos:start="144:18" pos:end="144:35"><name pos:start="144:18" pos:end="144:25">l2_table</name><index pos:start="144:26" pos:end="144:35">[<expr pos:start="144:27" pos:end="144:34"><name pos:start="144:27" pos:end="144:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="144:38" pos:end="144:52"><expr pos:start="144:38" pos:end="144:52"><name pos:start="144:38" pos:end="144:52">QCOW_OFLAG_ZERO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="146:9" pos:end="146:28"><expr pos:start="146:9" pos:end="146:27"><operator pos:start="146:9" pos:end="146:9">*</operator><name pos:start="146:10" pos:end="146:23">cluster_offset</name> <operator pos:start="146:25" pos:end="146:25">=</operator> <literal type="number" pos:start="146:27" pos:end="146:27">0</literal></expr>;</expr_stmt>

        <break pos:start="148:9" pos:end="148:14">break;</break>

    <case pos:start="150:5" pos:end="150:35">case <expr pos:start="150:10" pos:end="150:34"><name pos:start="150:10" pos:end="150:34">QCOW2_CLUSTER_UNALLOCATED</name></expr>:</case>

        <comment type="block" pos:start="152:9" pos:end="152:39">/* how many empty clusters ? */</comment>

        <expr_stmt pos:start="154:9" pos:end="154:77"><expr pos:start="154:9" pos:end="154:76"><name pos:start="154:9" pos:end="154:9">c</name> <operator pos:start="154:11" pos:end="154:11">=</operator> <call pos:start="154:13" pos:end="154:76"><name pos:start="154:13" pos:end="154:42">count_contiguous_free_clusters</name><argument_list pos:start="154:43" pos:end="154:76">(<argument pos:start="154:44" pos:end="154:54"><expr pos:start="154:44" pos:end="154:54"><name pos:start="154:44" pos:end="154:54">nb_clusters</name></expr></argument>, <argument pos:start="154:57" pos:end="154:75"><expr pos:start="154:57" pos:end="154:75"><operator pos:start="154:57" pos:end="154:57">&amp;</operator><name pos:start="154:58" pos:end="154:75"><name pos:start="154:58" pos:end="154:65">l2_table</name><index pos:start="154:66" pos:end="154:75">[<expr pos:start="154:67" pos:end="154:74"><name pos:start="154:67" pos:end="154:74">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="156:9" pos:end="156:28"><expr pos:start="156:9" pos:end="156:27"><operator pos:start="156:9" pos:end="156:9">*</operator><name pos:start="156:10" pos:end="156:23">cluster_offset</name> <operator pos:start="156:25" pos:end="156:25">=</operator> <literal type="number" pos:start="156:27" pos:end="156:27">0</literal></expr>;</expr_stmt>

        <break pos:start="158:9" pos:end="158:14">break;</break>

    <case pos:start="160:5" pos:end="160:30">case <expr pos:start="160:10" pos:end="160:29"><name pos:start="160:10" pos:end="160:29">QCOW2_CLUSTER_NORMAL</name></expr>:</case>

        <comment type="block" pos:start="162:9" pos:end="162:43">/* how many allocated clusters ? */</comment>

        <expr_stmt pos:start="164:9" pos:end="166:54"><expr pos:start="164:9" pos:end="166:53"><name pos:start="164:9" pos:end="164:9">c</name> <operator pos:start="164:11" pos:end="164:11">=</operator> <call pos:start="164:13" pos:end="166:53"><name pos:start="164:13" pos:end="164:37">count_contiguous_clusters</name><argument_list pos:start="164:38" pos:end="166:53">(<argument pos:start="164:39" pos:end="164:49"><expr pos:start="164:39" pos:end="164:49"><name pos:start="164:39" pos:end="164:49">nb_clusters</name></expr></argument>, <argument pos:start="164:52" pos:end="164:66"><expr pos:start="164:52" pos:end="164:66"><name pos:start="164:52" pos:end="164:66"><name pos:start="164:52" pos:end="164:52">s</name><operator pos:start="164:53" pos:end="164:54">-&gt;</operator><name pos:start="164:55" pos:end="164:66">cluster_size</name></name></expr></argument>,

                <argument pos:start="166:17" pos:end="166:35"><expr pos:start="166:17" pos:end="166:35"><operator pos:start="166:17" pos:end="166:17">&amp;</operator><name pos:start="166:18" pos:end="166:35"><name pos:start="166:18" pos:end="166:25">l2_table</name><index pos:start="166:26" pos:end="166:35">[<expr pos:start="166:27" pos:end="166:34"><name pos:start="166:27" pos:end="166:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="166:38" pos:end="166:52"><expr pos:start="166:38" pos:end="166:52"><name pos:start="166:38" pos:end="166:52">QCOW_OFLAG_ZERO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="168:9" pos:end="168:43"><expr pos:start="168:9" pos:end="168:42"><operator pos:start="168:9" pos:end="168:9">*</operator><name pos:start="168:10" pos:end="168:23">cluster_offset</name> <operator pos:start="168:25" pos:end="168:26">&amp;=</operator> <name pos:start="168:28" pos:end="168:42">L2E_OFFSET_MASK</name></expr>;</expr_stmt>

        <break pos:start="170:9" pos:end="170:14">break;</break>

    <default pos:start="172:5" pos:end="172:12">default:</default>

        <expr_stmt pos:start="174:9" pos:end="174:16"><expr pos:start="174:9" pos:end="174:15"><call pos:start="174:9" pos:end="174:15"><name pos:start="174:9" pos:end="174:13">abort</name><argument_list pos:start="174:14" pos:end="174:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>






    <expr_stmt pos:start="183:5" pos:end="183:44"><expr pos:start="183:5" pos:end="183:43"><name pos:start="183:5" pos:end="183:16">nb_available</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <operator pos:start="183:20" pos:end="183:20">(</operator><name pos:start="183:21" pos:end="183:21">c</name> <operator pos:start="183:23" pos:end="183:23">*</operator> <name pos:start="183:25" pos:end="183:42"><name pos:start="183:25" pos:end="183:25">s</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:42">cluster_sectors</name></name><operator pos:start="183:43" pos:end="183:43">)</operator></expr>;</expr_stmt>



<label pos:start="187:1" pos:end="187:4"><name pos:start="187:1" pos:end="187:3">out</name>:</label>

    <if_stmt pos:start="189:5" pos:end="191:33"><if pos:start="189:5" pos:end="191:33">if <condition pos:start="189:8" pos:end="189:33">(<expr pos:start="189:9" pos:end="189:32"><name pos:start="189:9" pos:end="189:20">nb_available</name> <operator pos:start="189:22" pos:end="189:22">&gt;</operator> <name pos:start="189:24" pos:end="189:32">nb_needed</name></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:33"><block_content pos:start="191:9" pos:end="191:33">

        <expr_stmt pos:start="191:9" pos:end="191:33"><expr pos:start="191:9" pos:end="191:32"><name pos:start="191:9" pos:end="191:20">nb_available</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <name pos:start="191:24" pos:end="191:32">nb_needed</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:43"><expr pos:start="195:5" pos:end="195:42"><operator pos:start="195:5" pos:end="195:5">*</operator><name pos:start="195:6" pos:end="195:8">num</name> <operator pos:start="195:10" pos:end="195:10">=</operator> <name pos:start="195:12" pos:end="195:23">nb_available</name> <operator pos:start="195:25" pos:end="195:25">-</operator> <name pos:start="195:27" pos:end="195:42">index_in_cluster</name></expr>;</expr_stmt>



    <return pos:start="199:5" pos:end="199:15">return <expr pos:start="199:12" pos:end="199:14"><name pos:start="199:12" pos:end="199:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
