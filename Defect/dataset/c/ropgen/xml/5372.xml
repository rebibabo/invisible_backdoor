<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5372.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">qcow_create2</name><parameter_list pos:start="1:24" pos:end="5:34">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><specifier pos:start="1:25" pos:end="1:29">const</specifier> <name pos:start="1:31" pos:end="1:34">char</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">filename</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:53">int64_t</name></type> <name pos:start="1:55" pos:end="1:64">total_size</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:48"><decl pos:start="3:25" pos:end="3:48"><type pos:start="3:25" pos:end="3:48"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:48">backing_file</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:76"><decl pos:start="3:51" pos:end="3:76"><type pos:start="3:51" pos:end="3:76"><specifier pos:start="3:51" pos:end="3:55">const</specifier> <name pos:start="3:57" pos:end="3:60">char</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:76">backing_format</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:33"><decl pos:start="5:25" pos:end="5:33"><type pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:33">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="211:1">{<block_content pos:start="11:5" pos:end="209:13">



    <decl_stmt pos:start="11:5" pos:end="11:74"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">fd</name></decl>, <decl pos:start="11:13" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:23">header_size</name></decl>, <decl pos:start="11:26" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:45">backing_filename_len</name></decl>, <decl pos:start="11:48" pos:end="11:54"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:48" pos:end="11:54">l1_size</name></decl>, <decl pos:start="11:57" pos:end="11:57"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:57" pos:end="11:57">i</name></decl>, <decl pos:start="11:60" pos:end="11:64"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:60" pos:end="11:64">shift</name></decl>, <decl pos:start="11:67" pos:end="11:73"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:67" pos:end="11:73">l2_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:26">backing_format_len</name> <init pos:start="13:28" pos:end="13:30">= <expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">QCowHeader</name></type> <name pos:start="15:16" pos:end="15:21">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:16">tmp</name></decl>, <decl pos:start="17:19" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:19" pos:end="17:24">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:19">QCowCreateState</name></type> <name pos:start="19:21" pos:end="19:22">s1</name></decl>, <decl pos:start="19:25" pos:end="19:32"><type ref="prev" pos:start="19:5" pos:end="19:19"><modifier pos:start="19:25" pos:end="19:25">*</modifier></type><name pos:start="19:26" pos:end="19:26">s</name> <init pos:start="19:28" pos:end="19:32">= <expr pos:start="19:30" pos:end="19:32"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:32">s1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:33"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:17">QCowExtension</name></type> <name pos:start="21:19" pos:end="21:24">ext_bf</name> <init pos:start="21:26" pos:end="21:33">= <expr pos:start="21:28" pos:end="21:33"><block pos:start="21:28" pos:end="21:33">{<expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">0</literal></expr>, <expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>





    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><call pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:28">(<argument pos:start="27:12" pos:end="27:12"><expr pos:start="27:12" pos:end="27:12"><name pos:start="27:12" pos:end="27:12">s</name></expr></argument>, <argument pos:start="27:15" pos:end="27:15"><expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr></argument>, <argument pos:start="27:18" pos:end="27:27"><expr pos:start="27:18" pos:end="27:27"><sizeof pos:start="27:18" pos:end="27:27">sizeof<argument_list pos:start="27:24" pos:end="27:27">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><operator pos:start="27:25" pos:end="27:25">*</operator><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:71"><expr pos:start="31:5" pos:end="31:70"><name pos:start="31:5" pos:end="31:6">fd</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:70"><name pos:start="31:10" pos:end="31:13">open</name><argument_list pos:start="31:14" pos:end="31:70">(<argument pos:start="31:15" pos:end="31:22"><expr pos:start="31:15" pos:end="31:22"><name pos:start="31:15" pos:end="31:22">filename</name></expr></argument>, <argument pos:start="31:25" pos:end="31:63"><expr pos:start="31:25" pos:end="31:63"><name pos:start="31:25" pos:end="31:32">O_WRONLY</name> <operator pos:start="31:34" pos:end="31:34">|</operator> <name pos:start="31:36" pos:end="31:42">O_CREAT</name> <operator pos:start="31:44" pos:end="31:44">|</operator> <name pos:start="31:46" pos:end="31:52">O_TRUNC</name> <operator pos:start="31:54" pos:end="31:54">|</operator> <name pos:start="31:56" pos:end="31:63">O_BINARY</name></expr></argument>, <argument pos:start="31:66" pos:end="31:69"><expr pos:start="31:66" pos:end="31:69"><literal type="number" pos:start="31:66" pos:end="31:69">0644</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:10">fd</name> <operator pos:start="33:12" pos:end="33:12">&lt;</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><call pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:38">(<argument pos:start="37:12" pos:end="37:18"><expr pos:start="37:12" pos:end="37:18"><operator pos:start="37:12" pos:end="37:12">&amp;</operator><name pos:start="37:13" pos:end="37:18">header</name></expr></argument>, <argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr></argument>, <argument pos:start="37:24" pos:end="37:37"><expr pos:start="37:24" pos:end="37:37"><sizeof pos:start="37:24" pos:end="37:37">sizeof<argument_list pos:start="37:30" pos:end="37:37">(<argument pos:start="37:31" pos:end="37:36"><expr pos:start="37:31" pos:end="37:36"><name pos:start="37:31" pos:end="37:36">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:10">header</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:16">magic</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:42"><name pos:start="39:20" pos:end="39:30">cpu_to_be32</name><argument_list pos:start="39:31" pos:end="39:42">(<argument pos:start="39:32" pos:end="39:41"><expr pos:start="39:32" pos:end="39:41"><name pos:start="39:32" pos:end="39:41">QCOW_MAGIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:10">header</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:18">version</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <call pos:start="41:22" pos:end="41:46"><name pos:start="41:22" pos:end="41:32">cpu_to_be32</name><argument_list pos:start="41:33" pos:end="41:46">(<argument pos:start="41:34" pos:end="41:45"><expr pos:start="41:34" pos:end="41:45"><name pos:start="41:34" pos:end="41:45">QCOW_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:10">header</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:15">size</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <call pos:start="43:19" pos:end="43:47"><name pos:start="43:19" pos:end="43:29">cpu_to_be64</name><argument_list pos:start="43:30" pos:end="43:47">(<argument pos:start="43:31" pos:end="43:46"><expr pos:start="43:31" pos:end="43:46"><name pos:start="43:31" pos:end="43:40">total_size</name> <operator pos:start="43:42" pos:end="43:42">*</operator> <literal type="number" pos:start="43:44" pos:end="43:46">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:15">header_size</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <sizeof pos:start="45:19" pos:end="45:32">sizeof<argument_list pos:start="45:25" pos:end="45:32">(<argument pos:start="45:26" pos:end="45:31"><expr pos:start="45:26" pos:end="45:31"><name pos:start="45:26" pos:end="45:31">header</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:24">backing_filename_len</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="71:5"><if pos:start="49:5" pos:end="71:5">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:20">backing_file</name></expr>)</condition> <block pos:start="49:23" pos:end="71:5">{<block_content pos:start="51:9" pos:end="69:44">

        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="61:9">if <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:26">backing_format</name></expr>)</condition> <block pos:start="51:29" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:68">

            <expr_stmt pos:start="53:13" pos:end="53:57"><expr pos:start="53:13" pos:end="53:56"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:18">ext_bf</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:24">magic</name></name> <operator pos:start="53:26" pos:end="53:26">=</operator> <name pos:start="53:28" pos:end="53:56">QCOW_EXT_MAGIC_BACKING_FORMAT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:56"><expr pos:start="55:13" pos:end="55:55"><name pos:start="55:13" pos:end="55:30">backing_format_len</name> <operator pos:start="55:32" pos:end="55:32">=</operator> <call pos:start="55:34" pos:end="55:55"><name pos:start="55:34" pos:end="55:39">strlen</name><argument_list pos:start="55:40" pos:end="55:55">(<argument pos:start="55:41" pos:end="55:54"><expr pos:start="55:41" pos:end="55:54"><name pos:start="55:41" pos:end="55:54">backing_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:55"><expr pos:start="57:13" pos:end="57:54"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:18">ext_bf</name><operator pos:start="57:19" pos:end="57:19">.</operator><name pos:start="57:20" pos:end="57:22">len</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <operator pos:start="57:26" pos:end="57:26">(</operator><name pos:start="57:27" pos:end="57:44">backing_format_len</name> <operator pos:start="57:46" pos:end="57:46">+</operator> <literal type="number" pos:start="57:48" pos:end="57:48">7</literal><operator pos:start="57:49" pos:end="57:49">)</operator> <operator pos:start="57:51" pos:end="57:51">&amp;</operator> <operator pos:start="57:53" pos:end="57:53">~</operator><literal type="number" pos:start="57:54" pos:end="57:54">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:68"><expr pos:start="59:13" pos:end="59:67"><name pos:start="59:13" pos:end="59:23">header_size</name> <operator pos:start="59:25" pos:end="59:26">+=</operator> <operator pos:start="59:28" pos:end="59:28">(</operator><operator pos:start="59:29" pos:end="59:29">(</operator><sizeof pos:start="59:30" pos:end="59:43">sizeof<argument_list pos:start="59:36" pos:end="59:43">(<argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42">ext_bf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="59:45" pos:end="59:45">+</operator> <name pos:start="59:47" pos:end="59:56"><name pos:start="59:47" pos:end="59:52">ext_bf</name><operator pos:start="59:53" pos:end="59:53">.</operator><name pos:start="59:54" pos:end="59:56">len</name></name> <operator pos:start="59:58" pos:end="59:58">+</operator> <literal type="number" pos:start="59:60" pos:end="59:60">7</literal><operator pos:start="59:61" pos:end="59:61">)</operator> <operator pos:start="59:63" pos:end="59:63">&amp;</operator> <operator pos:start="59:65" pos:end="59:65">~</operator><literal type="number" pos:start="59:66" pos:end="59:66">7</literal><operator pos:start="59:67" pos:end="59:67">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:62"><expr pos:start="63:9" pos:end="63:61"><name pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:14">header</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:34">backing_file_offset</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <call pos:start="63:38" pos:end="63:61"><name pos:start="63:38" pos:end="63:48">cpu_to_be64</name><argument_list pos:start="63:49" pos:end="63:61">(<argument pos:start="63:50" pos:end="63:60"><expr pos:start="63:50" pos:end="63:60"><name pos:start="63:50" pos:end="63:60">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:52"><expr pos:start="65:9" pos:end="65:51"><name pos:start="65:9" pos:end="65:28">backing_filename_len</name> <operator pos:start="65:30" pos:end="65:30">=</operator> <call pos:start="65:32" pos:end="65:51"><name pos:start="65:32" pos:end="65:37">strlen</name><argument_list pos:start="65:38" pos:end="65:51">(<argument pos:start="65:39" pos:end="65:50"><expr pos:start="65:39" pos:end="65:50"><name pos:start="65:39" pos:end="65:50">backing_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:14">header</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:32">backing_file_size</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <call pos:start="67:36" pos:end="67:68"><name pos:start="67:36" pos:end="67:46">cpu_to_be32</name><argument_list pos:start="67:47" pos:end="67:68">(<argument pos:start="67:48" pos:end="67:67"><expr pos:start="67:48" pos:end="67:67"><name pos:start="67:48" pos:end="67:67">backing_filename_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:19">header_size</name> <operator pos:start="69:21" pos:end="69:22">+=</operator> <name pos:start="69:24" pos:end="69:43">backing_filename_len</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:25"><expr pos:start="73:5" pos:end="73:24"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:19">cluster_bits</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:24">12</literal></expr>;</expr_stmt>  <comment type="block" pos:start="73:28" pos:end="73:46">/* 4 KB clusters */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:19">cluster_size</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <literal type="number" pos:start="75:23" pos:end="75:23">1</literal> <operator pos:start="75:25" pos:end="75:26">&lt;&lt;</operator> <name pos:start="75:28" pos:end="75:42"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:42">cluster_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:55"><expr pos:start="77:5" pos:end="77:54"><name pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:10">header</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:23">cluster_bits</name></name> <operator pos:start="77:25" pos:end="77:25">=</operator> <call pos:start="77:27" pos:end="77:54"><name pos:start="77:27" pos:end="77:37">cpu_to_be32</name><argument_list pos:start="77:38" pos:end="77:54">(<argument pos:start="77:39" pos:end="77:53"><expr pos:start="77:39" pos:end="77:53"><name pos:start="77:39" pos:end="77:53"><name pos:start="77:39" pos:end="77:39">s</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:53">cluster_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:41"><expr pos:start="79:5" pos:end="79:40"><name pos:start="79:5" pos:end="79:15">header_size</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <operator pos:start="79:19" pos:end="79:19">(</operator><name pos:start="79:20" pos:end="79:30">header_size</name> <operator pos:start="79:32" pos:end="79:32">+</operator> <literal type="number" pos:start="79:34" pos:end="79:34">7</literal><operator pos:start="79:35" pos:end="79:35">)</operator> <operator pos:start="79:37" pos:end="79:37">&amp;</operator> <operator pos:start="79:39" pos:end="79:39">~</operator><literal type="number" pos:start="79:40" pos:end="79:40">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:35">(<expr pos:start="81:9" pos:end="81:34"><name pos:start="81:9" pos:end="81:13">flags</name> <operator pos:start="81:15" pos:end="81:15">&amp;</operator> <name pos:start="81:17" pos:end="81:34">BLOCK_FLAG_ENCRYPT</name></expr>)</condition> <block pos:start="81:37" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:58">

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:14">header</name><operator pos:start="83:15" pos:end="83:15">.</operator><name pos:start="83:16" pos:end="83:27">crypt_method</name></name> <operator pos:start="83:29" pos:end="83:29">=</operator> <call pos:start="83:31" pos:end="83:57"><name pos:start="83:31" pos:end="83:41">cpu_to_be32</name><argument_list pos:start="83:42" pos:end="83:57">(<argument pos:start="83:43" pos:end="83:56"><expr pos:start="83:43" pos:end="83:56"><name pos:start="83:43" pos:end="83:56">QCOW_CRYPT_AES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="89:5">else <block pos:start="85:12" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:59">

        <expr_stmt pos:start="87:9" pos:end="87:59"><expr pos:start="87:9" pos:end="87:58"><name pos:start="87:9" pos:end="87:27"><name pos:start="87:9" pos:end="87:14">header</name><operator pos:start="87:15" pos:end="87:15">.</operator><name pos:start="87:16" pos:end="87:27">crypt_method</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <call pos:start="87:31" pos:end="87:58"><name pos:start="87:31" pos:end="87:41">cpu_to_be32</name><argument_list pos:start="87:42" pos:end="87:58">(<argument pos:start="87:43" pos:end="87:57"><expr pos:start="87:43" pos:end="87:57"><name pos:start="87:43" pos:end="87:57">QCOW_CRYPT_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:11">l2_bits</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:29"><name pos:start="91:15" pos:end="91:15">s</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:29">cluster_bits</name></name> <operator pos:start="91:31" pos:end="91:31">-</operator> <literal type="number" pos:start="91:33" pos:end="91:33">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:38"><expr pos:start="93:5" pos:end="93:37"><name pos:start="93:5" pos:end="93:9">shift</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <name pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:27">cluster_bits</name></name> <operator pos:start="93:29" pos:end="93:29">+</operator> <name pos:start="93:31" pos:end="93:37">l2_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:67"><expr pos:start="95:5" pos:end="95:66"><name pos:start="95:5" pos:end="95:11">l1_size</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <operator pos:start="95:15" pos:end="95:15">(</operator><operator pos:start="95:16" pos:end="95:16">(</operator><operator pos:start="95:17" pos:end="95:17">(</operator><name pos:start="95:18" pos:end="95:27">total_size</name> <operator pos:start="95:29" pos:end="95:29">*</operator> <literal type="number" pos:start="95:31" pos:end="95:33">512</literal><operator pos:start="95:34" pos:end="95:34">)</operator> <operator pos:start="95:36" pos:end="95:36">+</operator> <operator pos:start="95:38" pos:end="95:38">(</operator><literal type="number" pos:start="95:39" pos:end="95:41">1LL</literal> <operator pos:start="95:43" pos:end="95:44">&lt;&lt;</operator> <name pos:start="95:46" pos:end="95:50">shift</name><operator pos:start="95:51" pos:end="95:51">)</operator> <operator pos:start="95:53" pos:end="95:53">-</operator> <literal type="number" pos:start="95:55" pos:end="95:55">1</literal><operator pos:start="95:56" pos:end="95:56">)</operator> <operator pos:start="95:58" pos:end="95:59">&gt;&gt;</operator> <name pos:start="95:61" pos:end="95:65">shift</name><operator pos:start="95:66" pos:end="95:66">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:56"><expr pos:start="97:5" pos:end="97:55"><name pos:start="97:5" pos:end="97:10">offset</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <call pos:start="97:14" pos:end="97:55"><name pos:start="97:14" pos:end="97:25">align_offset</name><argument_list pos:start="97:26" pos:end="97:55">(<argument pos:start="97:27" pos:end="97:37"><expr pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:37">header_size</name></expr></argument>, <argument pos:start="97:40" pos:end="97:54"><expr pos:start="97:40" pos:end="97:54"><name pos:start="97:40" pos:end="97:54"><name pos:start="97:40" pos:end="97:40">s</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:54">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:22">l1_table_offset</name></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:31">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:61"><expr pos:start="101:5" pos:end="101:60"><name pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:10">header</name><operator pos:start="101:11" pos:end="101:11">.</operator><name pos:start="101:12" pos:end="101:26">l1_table_offset</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="101:60"><name pos:start="101:30" pos:end="101:40">cpu_to_be64</name><argument_list pos:start="101:41" pos:end="101:60">(<argument pos:start="101:42" pos:end="101:59"><expr pos:start="101:42" pos:end="101:59"><name pos:start="101:42" pos:end="101:59"><name pos:start="101:42" pos:end="101:42">s</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:59">l1_table_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:42"><expr pos:start="103:5" pos:end="103:41"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:10">header</name><operator pos:start="103:11" pos:end="103:11">.</operator><name pos:start="103:12" pos:end="103:18">l1_size</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <call pos:start="103:22" pos:end="103:41"><name pos:start="103:22" pos:end="103:32">cpu_to_be32</name><argument_list pos:start="103:33" pos:end="103:41">(<argument pos:start="103:34" pos:end="103:40"><expr pos:start="103:34" pos:end="103:40"><name pos:start="103:34" pos:end="103:40">l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:72"><expr pos:start="105:5" pos:end="105:71"><name pos:start="105:5" pos:end="105:10">offset</name> <operator pos:start="105:12" pos:end="105:13">+=</operator> <call pos:start="105:15" pos:end="105:71"><name pos:start="105:15" pos:end="105:26">align_offset</name><argument_list pos:start="105:27" pos:end="105:71">(<argument pos:start="105:28" pos:end="105:53"><expr pos:start="105:28" pos:end="105:53"><name pos:start="105:28" pos:end="105:34">l1_size</name> <operator pos:start="105:36" pos:end="105:36">*</operator> <sizeof pos:start="105:38" pos:end="105:53">sizeof<argument_list pos:start="105:44" pos:end="105:53">(<argument pos:start="105:45" pos:end="105:52"><expr pos:start="105:45" pos:end="105:52"><name pos:start="105:45" pos:end="105:52">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:56" pos:end="105:70"><expr pos:start="105:56" pos:end="105:70"><name pos:start="105:56" pos:end="105:70"><name pos:start="105:56" pos:end="105:56">s</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:70">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:54"><expr pos:start="109:5" pos:end="109:53"><name pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:21">refcount_table</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <call pos:start="109:25" pos:end="109:53"><name pos:start="109:25" pos:end="109:36">qemu_mallocz</name><argument_list pos:start="109:37" pos:end="109:53">(<argument pos:start="109:38" pos:end="109:52"><expr pos:start="109:38" pos:end="109:52"><name pos:start="109:38" pos:end="109:52"><name pos:start="109:38" pos:end="109:38">s</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:52">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:54"><expr pos:start="111:5" pos:end="111:53"><name pos:start="111:5" pos:end="111:21"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:21">refcount_block</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:53"><name pos:start="111:25" pos:end="111:36">qemu_mallocz</name><argument_list pos:start="111:37" pos:end="111:53">(<argument pos:start="111:38" pos:end="111:52"><expr pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:38">s</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:52">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:38"><expr pos:start="115:5" pos:end="115:37"><name pos:start="115:5" pos:end="115:28"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:28">refcount_table_offset</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:37">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:55"><expr pos:start="117:5" pos:end="117:54"><name pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:10">header</name><operator pos:start="117:11" pos:end="117:11">.</operator><name pos:start="117:12" pos:end="117:32">refcount_table_offset</name></name> <operator pos:start="117:34" pos:end="117:34">=</operator> <call pos:start="117:36" pos:end="117:54"><name pos:start="117:36" pos:end="117:46">cpu_to_be64</name><argument_list pos:start="117:47" pos:end="117:54">(<argument pos:start="117:48" pos:end="117:53"><expr pos:start="117:48" pos:end="117:53"><name pos:start="117:48" pos:end="117:53">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:52"><expr pos:start="119:5" pos:end="119:51"><name pos:start="119:5" pos:end="119:34"><name pos:start="119:5" pos:end="119:10">header</name><operator pos:start="119:11" pos:end="119:11">.</operator><name pos:start="119:12" pos:end="119:34">refcount_table_clusters</name></name> <operator pos:start="119:36" pos:end="119:36">=</operator> <call pos:start="119:38" pos:end="119:51"><name pos:start="119:38" pos:end="119:48">cpu_to_be32</name><argument_list pos:start="119:49" pos:end="119:51">(<argument pos:start="119:50" pos:end="119:50"><expr pos:start="119:50" pos:end="119:50"><literal type="number" pos:start="119:50" pos:end="119:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:10">offset</name> <operator pos:start="121:12" pos:end="121:13">+=</operator> <name pos:start="121:15" pos:end="121:29"><name pos:start="121:15" pos:end="121:15">s</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:29">cluster_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:47"><expr pos:start="125:5" pos:end="125:46"><name pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:21">refcount_table</name><index pos:start="125:22" pos:end="125:24">[<expr pos:start="125:23" pos:end="125:23"><literal type="number" pos:start="125:23" pos:end="125:23">0</literal></expr>]</index></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <call pos:start="125:28" pos:end="125:46"><name pos:start="125:28" pos:end="125:38">cpu_to_be64</name><argument_list pos:start="125:39" pos:end="125:46">(<argument pos:start="125:40" pos:end="125:45"><expr pos:start="125:40" pos:end="125:45"><name pos:start="125:40" pos:end="125:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:38"><expr pos:start="127:5" pos:end="127:37"><name pos:start="127:5" pos:end="127:28"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:28">refcount_block_offset</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:37">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:30"><expr pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:10">offset</name> <operator pos:start="129:12" pos:end="129:13">+=</operator> <name pos:start="129:15" pos:end="129:29"><name pos:start="129:15" pos:end="129:15">s</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:29">cluster_size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:26">/* update refcounts */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:46"><expr pos:start="135:5" pos:end="135:45"><call pos:start="135:5" pos:end="135:45"><name pos:start="135:5" pos:end="135:26">create_refcount_update</name><argument_list pos:start="135:27" pos:end="135:45">(<argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><name pos:start="135:28" pos:end="135:28">s</name></expr></argument>, <argument pos:start="135:31" pos:end="135:31"><expr pos:start="135:31" pos:end="135:31"><literal type="number" pos:start="135:31" pos:end="135:31">0</literal></expr></argument>, <argument pos:start="135:34" pos:end="135:44"><expr pos:start="135:34" pos:end="135:44"><name pos:start="135:34" pos:end="135:44">header_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:78"><expr pos:start="137:5" pos:end="137:77"><call pos:start="137:5" pos:end="137:77"><name pos:start="137:5" pos:end="137:26">create_refcount_update</name><argument_list pos:start="137:27" pos:end="137:77">(<argument pos:start="137:28" pos:end="137:28"><expr pos:start="137:28" pos:end="137:28"><name pos:start="137:28" pos:end="137:28">s</name></expr></argument>, <argument pos:start="137:31" pos:end="137:48"><expr pos:start="137:31" pos:end="137:48"><name pos:start="137:31" pos:end="137:48"><name pos:start="137:31" pos:end="137:31">s</name><operator pos:start="137:32" pos:end="137:33">-&gt;</operator><name pos:start="137:34" pos:end="137:48">l1_table_offset</name></name></expr></argument>, <argument pos:start="137:51" pos:end="137:76"><expr pos:start="137:51" pos:end="137:76"><name pos:start="137:51" pos:end="137:57">l1_size</name> <operator pos:start="137:59" pos:end="137:59">*</operator> <sizeof pos:start="137:61" pos:end="137:76">sizeof<argument_list pos:start="137:67" pos:end="137:76">(<argument pos:start="137:68" pos:end="137:75"><expr pos:start="137:68" pos:end="137:75"><name pos:start="137:68" pos:end="137:75">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:73"><expr pos:start="139:5" pos:end="139:72"><call pos:start="139:5" pos:end="139:72"><name pos:start="139:5" pos:end="139:26">create_refcount_update</name><argument_list pos:start="139:27" pos:end="139:72">(<argument pos:start="139:28" pos:end="139:28"><expr pos:start="139:28" pos:end="139:28"><name pos:start="139:28" pos:end="139:28">s</name></expr></argument>, <argument pos:start="139:31" pos:end="139:54"><expr pos:start="139:31" pos:end="139:54"><name pos:start="139:31" pos:end="139:54"><name pos:start="139:31" pos:end="139:31">s</name><operator pos:start="139:32" pos:end="139:33">-&gt;</operator><name pos:start="139:34" pos:end="139:54">refcount_table_offset</name></name></expr></argument>, <argument pos:start="139:57" pos:end="139:71"><expr pos:start="139:57" pos:end="139:71"><name pos:start="139:57" pos:end="139:71"><name pos:start="139:57" pos:end="139:57">s</name><operator pos:start="139:58" pos:end="139:59">-&gt;</operator><name pos:start="139:60" pos:end="139:71">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:73"><expr pos:start="141:5" pos:end="141:72"><call pos:start="141:5" pos:end="141:72"><name pos:start="141:5" pos:end="141:26">create_refcount_update</name><argument_list pos:start="141:27" pos:end="141:72">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">s</name></expr></argument>, <argument pos:start="141:31" pos:end="141:54"><expr pos:start="141:31" pos:end="141:54"><name pos:start="141:31" pos:end="141:54"><name pos:start="141:31" pos:end="141:31">s</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:54">refcount_block_offset</name></name></expr></argument>, <argument pos:start="141:57" pos:end="141:71"><expr pos:start="141:57" pos:end="141:71"><name pos:start="141:57" pos:end="141:71"><name pos:start="141:57" pos:end="141:57">s</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:71">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="145:5" pos:end="145:28">/* write all the data */</comment>

    <expr_stmt pos:start="147:5" pos:end="147:39"><expr pos:start="147:5" pos:end="147:38"><call pos:start="147:5" pos:end="147:38"><name pos:start="147:5" pos:end="147:9">write</name><argument_list pos:start="147:10" pos:end="147:38">(<argument pos:start="147:11" pos:end="147:12"><expr pos:start="147:11" pos:end="147:12"><name pos:start="147:11" pos:end="147:12">fd</name></expr></argument>, <argument pos:start="147:15" pos:end="147:21"><expr pos:start="147:15" pos:end="147:21"><operator pos:start="147:15" pos:end="147:15">&amp;</operator><name pos:start="147:16" pos:end="147:21">header</name></expr></argument>, <argument pos:start="147:24" pos:end="147:37"><expr pos:start="147:24" pos:end="147:37"><sizeof pos:start="147:24" pos:end="147:37">sizeof<argument_list pos:start="147:30" pos:end="147:37">(<argument pos:start="147:31" pos:end="147:36"><expr pos:start="147:31" pos:end="147:36"><name pos:start="147:31" pos:end="147:36">header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="179:5"><if pos:start="149:5" pos:end="179:5">if <condition pos:start="149:8" pos:end="149:21">(<expr pos:start="149:9" pos:end="149:20"><name pos:start="149:9" pos:end="149:20">backing_file</name></expr>)</condition> <block pos:start="149:23" pos:end="179:5">{<block_content pos:start="151:9" pos:end="177:54">

        <if_stmt pos:start="151:9" pos:end="175:9"><if pos:start="151:9" pos:end="175:9">if <condition pos:start="151:12" pos:end="151:31">(<expr pos:start="151:13" pos:end="151:30"><name pos:start="151:13" pos:end="151:30">backing_format_len</name></expr>)</condition> <block pos:start="151:33" pos:end="175:9">{<block_content pos:start="153:13" pos:end="173:13">

            <decl_stmt pos:start="153:13" pos:end="153:26"><decl pos:start="153:13" pos:end="153:25"><type pos:start="153:13" pos:end="153:16"><name pos:start="153:13" pos:end="153:16">char</name></type> <name pos:start="153:18" pos:end="153:25"><name pos:start="153:18" pos:end="153:21">zero</name><index pos:start="153:22" pos:end="153:25">[<expr pos:start="153:23" pos:end="153:24"><literal type="number" pos:start="153:23" pos:end="153:24">16</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="155:13" pos:end="155:52"><decl pos:start="155:13" pos:end="155:51"><type pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">int</name></type> <name pos:start="155:17" pos:end="155:17">d</name> <init pos:start="155:19" pos:end="155:51">= <expr pos:start="155:21" pos:end="155:51"><name pos:start="155:21" pos:end="155:30"><name pos:start="155:21" pos:end="155:26">ext_bf</name><operator pos:start="155:27" pos:end="155:27">.</operator><name pos:start="155:28" pos:end="155:30">len</name></name> <operator pos:start="155:32" pos:end="155:32">-</operator> <name pos:start="155:34" pos:end="155:51">backing_format_len</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:42"><expr pos:start="159:13" pos:end="159:41"><call pos:start="159:13" pos:end="159:41"><name pos:start="159:13" pos:end="159:18">memset</name><argument_list pos:start="159:19" pos:end="159:41">(<argument pos:start="159:20" pos:end="159:23"><expr pos:start="159:20" pos:end="159:23"><name pos:start="159:20" pos:end="159:23">zero</name></expr></argument>, <argument pos:start="159:26" pos:end="159:26"><expr pos:start="159:26" pos:end="159:26"><literal type="number" pos:start="159:26" pos:end="159:26">0</literal></expr></argument>, <argument pos:start="159:29" pos:end="159:40"><expr pos:start="159:29" pos:end="159:40"><sizeof pos:start="159:29" pos:end="159:40">sizeof<argument_list pos:start="159:35" pos:end="159:40">(<argument pos:start="159:36" pos:end="159:39"><expr pos:start="159:36" pos:end="159:39"><name pos:start="159:36" pos:end="159:39">zero</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:40"><expr pos:start="161:13" pos:end="161:39"><call pos:start="161:13" pos:end="161:39"><name pos:start="161:13" pos:end="161:24">cpu_to_be32s</name><argument_list pos:start="161:25" pos:end="161:39">(<argument pos:start="161:26" pos:end="161:38"><expr pos:start="161:26" pos:end="161:38"><operator pos:start="161:26" pos:end="161:26">&amp;</operator><name pos:start="161:27" pos:end="161:38"><name pos:start="161:27" pos:end="161:32">ext_bf</name><operator pos:start="161:33" pos:end="161:33">.</operator><name pos:start="161:34" pos:end="161:38">magic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:38"><expr pos:start="163:13" pos:end="163:37"><call pos:start="163:13" pos:end="163:37"><name pos:start="163:13" pos:end="163:24">cpu_to_be32s</name><argument_list pos:start="163:25" pos:end="163:37">(<argument pos:start="163:26" pos:end="163:36"><expr pos:start="163:26" pos:end="163:36"><operator pos:start="163:26" pos:end="163:26">&amp;</operator><name pos:start="163:27" pos:end="163:36"><name pos:start="163:27" pos:end="163:32">ext_bf</name><operator pos:start="163:33" pos:end="163:33">.</operator><name pos:start="163:34" pos:end="163:36">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:47"><expr pos:start="165:13" pos:end="165:46"><call pos:start="165:13" pos:end="165:46"><name pos:start="165:13" pos:end="165:17">write</name><argument_list pos:start="165:18" pos:end="165:46">(<argument pos:start="165:19" pos:end="165:20"><expr pos:start="165:19" pos:end="165:20"><name pos:start="165:19" pos:end="165:20">fd</name></expr></argument>, <argument pos:start="165:23" pos:end="165:29"><expr pos:start="165:23" pos:end="165:29"><operator pos:start="165:23" pos:end="165:23">&amp;</operator><name pos:start="165:24" pos:end="165:29">ext_bf</name></expr></argument>, <argument pos:start="165:32" pos:end="165:45"><expr pos:start="165:32" pos:end="165:45"><sizeof pos:start="165:32" pos:end="165:45">sizeof<argument_list pos:start="165:38" pos:end="165:45">(<argument pos:start="165:39" pos:end="165:44"><expr pos:start="165:39" pos:end="165:44"><name pos:start="165:39" pos:end="165:44">ext_bf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:58"><expr pos:start="167:13" pos:end="167:57"><call pos:start="167:13" pos:end="167:57"><name pos:start="167:13" pos:end="167:17">write</name><argument_list pos:start="167:18" pos:end="167:57">(<argument pos:start="167:19" pos:end="167:20"><expr pos:start="167:19" pos:end="167:20"><name pos:start="167:19" pos:end="167:20">fd</name></expr></argument>, <argument pos:start="167:23" pos:end="167:36"><expr pos:start="167:23" pos:end="167:36"><name pos:start="167:23" pos:end="167:36">backing_format</name></expr></argument>, <argument pos:start="167:39" pos:end="167:56"><expr pos:start="167:39" pos:end="167:56"><name pos:start="167:39" pos:end="167:56">backing_format_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="173:13"><if pos:start="169:13" pos:end="173:13">if <condition pos:start="169:16" pos:end="169:20">(<expr pos:start="169:17" pos:end="169:19"><name pos:start="169:17" pos:end="169:17">d</name><operator pos:start="169:18" pos:end="169:18">&gt;</operator><literal type="number" pos:start="169:19" pos:end="169:19">0</literal></expr>)</condition> <block pos:start="169:22" pos:end="173:13">{<block_content pos:start="171:17" pos:end="171:35">

                <expr_stmt pos:start="171:17" pos:end="171:35"><expr pos:start="171:17" pos:end="171:34"><call pos:start="171:17" pos:end="171:34"><name pos:start="171:17" pos:end="171:21">write</name><argument_list pos:start="171:22" pos:end="171:34">(<argument pos:start="171:23" pos:end="171:24"><expr pos:start="171:23" pos:end="171:24"><name pos:start="171:23" pos:end="171:24">fd</name></expr></argument>, <argument pos:start="171:27" pos:end="171:30"><expr pos:start="171:27" pos:end="171:30"><name pos:start="171:27" pos:end="171:30">zero</name></expr></argument>, <argument pos:start="171:33" pos:end="171:33"><expr pos:start="171:33" pos:end="171:33"><name pos:start="171:33" pos:end="171:33">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:54"><expr pos:start="177:9" pos:end="177:53"><call pos:start="177:9" pos:end="177:53"><name pos:start="177:9" pos:end="177:13">write</name><argument_list pos:start="177:14" pos:end="177:53">(<argument pos:start="177:15" pos:end="177:16"><expr pos:start="177:15" pos:end="177:16"><name pos:start="177:15" pos:end="177:16">fd</name></expr></argument>, <argument pos:start="177:19" pos:end="177:30"><expr pos:start="177:19" pos:end="177:30"><name pos:start="177:19" pos:end="177:30">backing_file</name></expr></argument>, <argument pos:start="177:33" pos:end="177:52"><expr pos:start="177:33" pos:end="177:52"><name pos:start="177:33" pos:end="177:52">backing_filename_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:44"><expr pos:start="181:5" pos:end="181:43"><call pos:start="181:5" pos:end="181:43"><name pos:start="181:5" pos:end="181:9">lseek</name><argument_list pos:start="181:10" pos:end="181:43">(<argument pos:start="181:11" pos:end="181:12"><expr pos:start="181:11" pos:end="181:12"><name pos:start="181:11" pos:end="181:12">fd</name></expr></argument>, <argument pos:start="181:15" pos:end="181:32"><expr pos:start="181:15" pos:end="181:32"><name pos:start="181:15" pos:end="181:32"><name pos:start="181:15" pos:end="181:15">s</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:32">l1_table_offset</name></name></expr></argument>, <argument pos:start="181:35" pos:end="181:42"><expr pos:start="181:35" pos:end="181:42"><name pos:start="181:35" pos:end="181:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:12"><expr pos:start="183:5" pos:end="183:11"><name pos:start="183:5" pos:end="183:7">tmp</name> <operator pos:start="183:9" pos:end="183:9">=</operator> <literal type="number" pos:start="183:11" pos:end="183:11">0</literal></expr>;</expr_stmt>

    <for pos:start="185:5" pos:end="189:5">for<control pos:start="185:8" pos:end="185:31">(<init pos:start="185:9" pos:end="185:14"><expr pos:start="185:9" pos:end="185:13"><name pos:start="185:9" pos:end="185:9">i</name> <operator pos:start="185:11" pos:end="185:11">=</operator> <literal type="number" pos:start="185:13" pos:end="185:13">0</literal></expr>;</init><condition pos:start="185:15" pos:end="185:26"><expr pos:start="185:15" pos:end="185:25"><name pos:start="185:15" pos:end="185:15">i</name> <operator pos:start="185:17" pos:end="185:17">&lt;</operator> <name pos:start="185:19" pos:end="185:25">l1_size</name></expr>;</condition> <incr pos:start="185:28" pos:end="185:30"><expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:28">i</name><operator pos:start="185:29" pos:end="185:30">++</operator></expr></incr>)</control> <block pos:start="185:33" pos:end="189:5">{<block_content pos:start="187:9" pos:end="187:37">

        <expr_stmt pos:start="187:9" pos:end="187:37"><expr pos:start="187:9" pos:end="187:36"><call pos:start="187:9" pos:end="187:36"><name pos:start="187:9" pos:end="187:13">write</name><argument_list pos:start="187:14" pos:end="187:36">(<argument pos:start="187:15" pos:end="187:16"><expr pos:start="187:15" pos:end="187:16"><name pos:start="187:15" pos:end="187:16">fd</name></expr></argument>, <argument pos:start="187:19" pos:end="187:22"><expr pos:start="187:19" pos:end="187:22"><operator pos:start="187:19" pos:end="187:19">&amp;</operator><name pos:start="187:20" pos:end="187:22">tmp</name></expr></argument>, <argument pos:start="187:25" pos:end="187:35"><expr pos:start="187:25" pos:end="187:35"><sizeof pos:start="187:25" pos:end="187:35">sizeof<argument_list pos:start="187:31" pos:end="187:35">(<argument pos:start="187:32" pos:end="187:34"><expr pos:start="187:32" pos:end="187:34"><name pos:start="187:32" pos:end="187:34">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="191:5" pos:end="191:50"><expr pos:start="191:5" pos:end="191:49"><call pos:start="191:5" pos:end="191:49"><name pos:start="191:5" pos:end="191:9">lseek</name><argument_list pos:start="191:10" pos:end="191:49">(<argument pos:start="191:11" pos:end="191:12"><expr pos:start="191:11" pos:end="191:12"><name pos:start="191:11" pos:end="191:12">fd</name></expr></argument>, <argument pos:start="191:15" pos:end="191:38"><expr pos:start="191:15" pos:end="191:38"><name pos:start="191:15" pos:end="191:38"><name pos:start="191:15" pos:end="191:15">s</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:38">refcount_table_offset</name></name></expr></argument>, <argument pos:start="191:41" pos:end="191:48"><expr pos:start="191:41" pos:end="191:48"><name pos:start="191:41" pos:end="191:48">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:50"><expr pos:start="193:5" pos:end="193:49"><call pos:start="193:5" pos:end="193:49"><name pos:start="193:5" pos:end="193:9">write</name><argument_list pos:start="193:10" pos:end="193:49">(<argument pos:start="193:11" pos:end="193:12"><expr pos:start="193:11" pos:end="193:12"><name pos:start="193:11" pos:end="193:12">fd</name></expr></argument>, <argument pos:start="193:15" pos:end="193:31"><expr pos:start="193:15" pos:end="193:31"><name pos:start="193:15" pos:end="193:31"><name pos:start="193:15" pos:end="193:15">s</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:31">refcount_table</name></name></expr></argument>, <argument pos:start="193:34" pos:end="193:48"><expr pos:start="193:34" pos:end="193:48"><name pos:start="193:34" pos:end="193:48"><name pos:start="193:34" pos:end="193:34">s</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:48">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:50"><expr pos:start="197:5" pos:end="197:49"><call pos:start="197:5" pos:end="197:49"><name pos:start="197:5" pos:end="197:9">lseek</name><argument_list pos:start="197:10" pos:end="197:49">(<argument pos:start="197:11" pos:end="197:12"><expr pos:start="197:11" pos:end="197:12"><name pos:start="197:11" pos:end="197:12">fd</name></expr></argument>, <argument pos:start="197:15" pos:end="197:38"><expr pos:start="197:15" pos:end="197:38"><name pos:start="197:15" pos:end="197:38"><name pos:start="197:15" pos:end="197:15">s</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:38">refcount_block_offset</name></name></expr></argument>, <argument pos:start="197:41" pos:end="197:48"><expr pos:start="197:41" pos:end="197:48"><name pos:start="197:41" pos:end="197:48">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:50"><expr pos:start="199:5" pos:end="199:49"><call pos:start="199:5" pos:end="199:49"><name pos:start="199:5" pos:end="199:9">write</name><argument_list pos:start="199:10" pos:end="199:49">(<argument pos:start="199:11" pos:end="199:12"><expr pos:start="199:11" pos:end="199:12"><name pos:start="199:11" pos:end="199:12">fd</name></expr></argument>, <argument pos:start="199:15" pos:end="199:31"><expr pos:start="199:15" pos:end="199:31"><name pos:start="199:15" pos:end="199:31"><name pos:start="199:15" pos:end="199:15">s</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:31">refcount_block</name></name></expr></argument>, <argument pos:start="199:34" pos:end="199:48"><expr pos:start="199:34" pos:end="199:48"><name pos:start="199:34" pos:end="199:48"><name pos:start="199:34" pos:end="199:34">s</name><operator pos:start="199:35" pos:end="199:36">-&gt;</operator><name pos:start="199:37" pos:end="199:48">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:33"><expr pos:start="203:5" pos:end="203:32"><call pos:start="203:5" pos:end="203:32"><name pos:start="203:5" pos:end="203:13">qemu_free</name><argument_list pos:start="203:14" pos:end="203:32">(<argument pos:start="203:15" pos:end="203:31"><expr pos:start="203:15" pos:end="203:31"><name pos:start="203:15" pos:end="203:31"><name pos:start="203:15" pos:end="203:15">s</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:31">refcount_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:33"><expr pos:start="205:5" pos:end="205:32"><call pos:start="205:5" pos:end="205:32"><name pos:start="205:5" pos:end="205:13">qemu_free</name><argument_list pos:start="205:14" pos:end="205:32">(<argument pos:start="205:15" pos:end="205:31"><expr pos:start="205:15" pos:end="205:31"><name pos:start="205:15" pos:end="205:31"><name pos:start="205:15" pos:end="205:15">s</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:31">refcount_block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:14"><expr pos:start="207:5" pos:end="207:13"><call pos:start="207:5" pos:end="207:13"><name pos:start="207:5" pos:end="207:9">close</name><argument_list pos:start="207:10" pos:end="207:13">(<argument pos:start="207:11" pos:end="207:12"><expr pos:start="207:11" pos:end="207:12"><name pos:start="207:11" pos:end="207:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="209:5" pos:end="209:13">return <expr pos:start="209:12" pos:end="209:12"><literal type="number" pos:start="209:12" pos:end="209:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
