<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5012.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">ObjectClass</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:45">object_class_dynamic_cast_assert</name><parameter_list pos:start="1:46" pos:end="7:63">(<parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><name pos:start="1:47" pos:end="1:57">ObjectClass</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:64">class</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:66"><decl pos:start="3:47" pos:end="3:66"><type pos:start="3:47" pos:end="3:66"><specifier pos:start="3:47" pos:end="3:51">const</specifier> <name pos:start="3:53" pos:end="3:56">char</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:66">typename</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:62"><decl pos:start="5:47" pos:end="5:62"><type pos:start="5:47" pos:end="5:62"><specifier pos:start="5:47" pos:end="5:51">const</specifier> <name pos:start="5:53" pos:end="5:56">char</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:62">file</name></decl></parameter>, <parameter pos:start="5:65" pos:end="5:72"><decl pos:start="5:65" pos:end="5:72"><type pos:start="5:65" pos:end="5:72"><name pos:start="5:65" pos:end="5:67">int</name></type> <name pos:start="5:69" pos:end="5:72">line</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:62"><decl pos:start="7:47" pos:end="7:62"><type pos:start="7:47" pos:end="7:62"><specifier pos:start="7:47" pos:end="7:51">const</specifier> <name pos:start="7:53" pos:end="7:56">char</name> <modifier pos:start="7:58" pos:end="7:58">*</modifier></type><name pos:start="7:59" pos:end="7:62">func</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="85:1">{<block_content pos:start="11:5" pos:end="83:15">

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">ObjectClass</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="22:0"><expr pos:start="15:5" pos:end="17:70"><call pos:start="15:5" pos:end="17:70"><name pos:start="15:5" pos:end="15:42">trace_object_class_dynamic_cast_assert</name><argument_list pos:start="15:43" pos:end="17:70">(<argument pos:start="15:44" pos:end="15:79"><expr pos:start="15:44" pos:end="15:79"><ternary pos:start="15:44" pos:end="15:79"><condition pos:start="15:44" pos:end="15:50"><expr pos:start="15:44" pos:end="15:48"><name pos:start="15:44" pos:end="15:48">class</name></expr> ?</condition><then pos:start="15:52" pos:end="15:68"> <expr pos:start="15:52" pos:end="15:68"><name pos:start="15:52" pos:end="15:68"><name pos:start="15:52" pos:end="15:56">class</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:62">type</name><operator pos:start="15:63" pos:end="15:64">-&gt;</operator><name pos:start="15:65" pos:end="15:68">name</name></name></expr> </then><else pos:start="15:70" pos:end="15:79">: <expr pos:start="15:72" pos:end="15:79"><literal type="string" pos:start="15:72" pos:end="15:79">"(null)"</literal></expr></else></ternary></expr></argument>,

                                           <argument pos:start="17:44" pos:end="17:51"><expr pos:start="17:44" pos:end="17:51"><name pos:start="17:44" pos:end="17:51">typename</name></expr></argument>, <argument pos:start="17:54" pos:end="17:57"><expr pos:start="17:54" pos:end="17:57"><name pos:start="17:54" pos:end="17:57">file</name></expr></argument>, <argument pos:start="17:60" pos:end="17:63"><expr pos:start="17:60" pos:end="17:63"><name pos:start="17:60" pos:end="17:63">line</name></expr></argument>, <argument pos:start="17:66" pos:end="17:69"><expr pos:start="17:66" pos:end="17:69"><name pos:start="17:66" pos:end="17:69">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="21:1" pos:end="21:28">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:28">CONFIG_QOM_CAST_DEBUG</name></cpp:ifdef>

    <decl_stmt pos:start="23:5" pos:end="23:10"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="40:0">for <control pos:start="27:9" pos:end="27:49">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:44"><expr pos:start="27:17" pos:end="27:43"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:43">OBJECT_CLASS_CAST_CACHE</name></expr>;</condition> <incr pos:start="27:46" pos:end="27:48"><expr pos:start="27:46" pos:end="27:48"><name pos:start="27:46" pos:end="27:46">i</name><operator pos:start="27:47" pos:end="27:48">++</operator></expr></incr>)</control> <block pos:start="27:51" pos:end="40:0">{<block_content pos:start="29:9" pos:end="35:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:45">(<expr pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:17">class</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:29">cast_cache</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">i</name></expr>]</index></name> <operator pos:start="29:34" pos:end="29:35">==</operator> <name pos:start="29:37" pos:end="29:44">typename</name></expr>)</condition> <block pos:start="29:47" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:21">

            <expr_stmt pos:start="31:13" pos:end="31:24"><expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:23">class</name></expr>;</expr_stmt>

            <goto pos:start="33:13" pos:end="33:21">goto <name pos:start="33:18" pos:end="33:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:else pos:start="39:1" pos:end="39:5">#<cpp:directive pos:start="39:2" pos:end="39:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="41:5" pos:end="48:0"><if pos:start="41:5" pos:end="48:0">if <condition pos:start="41:8" pos:end="41:27">(<expr pos:start="41:9" pos:end="41:26"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:26"><name pos:start="41:10" pos:end="41:14">class</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:26">interfaces</name></name></expr>)</condition> <block pos:start="41:29" pos:end="48:0">{<block_content pos:start="43:9" pos:end="43:21">

        <return pos:start="43:9" pos:end="43:21">return <expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">class</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="51:5" pos:end="51:53"><expr pos:start="51:5" pos:end="51:52"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:52"><name pos:start="51:11" pos:end="51:35">object_class_dynamic_cast</name><argument_list pos:start="51:36" pos:end="51:52">(<argument pos:start="51:37" pos:end="51:41"><expr pos:start="51:37" pos:end="51:41"><name pos:start="51:37" pos:end="51:41">class</name></expr></argument>, <argument pos:start="51:44" pos:end="51:51"><expr pos:start="51:44" pos:end="51:51"><name pos:start="51:44" pos:end="51:51">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="66:0"><if pos:start="53:5" pos:end="66:0">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:15">&amp;&amp;</operator> <name pos:start="53:17" pos:end="53:21">class</name></expr>)</condition> <block pos:start="53:24" pos:end="66:0">{<block_content pos:start="55:9" pos:end="59:16">

        <expr_stmt pos:start="55:9" pos:end="57:51"><expr pos:start="55:9" pos:end="57:50"><call pos:start="55:9" pos:end="57:50"><name pos:start="55:9" pos:end="55:15">fprintf</name><argument_list pos:start="55:16" pos:end="57:50">(<argument pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:22">stderr</name></expr></argument>, <argument pos:start="55:25" pos:end="55:77"><expr pos:start="55:25" pos:end="55:77"><literal type="string" pos:start="55:25" pos:end="55:77">"%s:%d:%s: Object %p is not an instance of type %s\n"</literal></expr></argument>,

                <argument pos:start="57:17" pos:end="57:20"><expr pos:start="57:17" pos:end="57:20"><name pos:start="57:17" pos:end="57:20">file</name></expr></argument>, <argument pos:start="57:23" pos:end="57:26"><expr pos:start="57:23" pos:end="57:26"><name pos:start="57:23" pos:end="57:26">line</name></expr></argument>, <argument pos:start="57:29" pos:end="57:32"><expr pos:start="57:29" pos:end="57:32"><name pos:start="57:29" pos:end="57:32">func</name></expr></argument>, <argument pos:start="57:35" pos:end="57:39"><expr pos:start="57:35" pos:end="57:39"><name pos:start="57:35" pos:end="57:39">class</name></expr></argument>, <argument pos:start="57:42" pos:end="57:49"><expr pos:start="57:42" pos:end="57:49"><name pos:start="57:42" pos:end="57:49">typename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:16"><expr pos:start="59:9" pos:end="59:15"><call pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:13">abort</name><argument_list pos:start="59:14" pos:end="59:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="65:1" pos:end="65:28">#<cpp:directive pos:start="65:2" pos:end="65:6">ifdef</cpp:directive> <name pos:start="65:8" pos:end="65:28">CONFIG_QOM_CAST_DEBUG</name></cpp:ifdef>

    <if_stmt pos:start="67:5" pos:end="77:5"><if pos:start="67:5" pos:end="77:5">if <condition pos:start="67:8" pos:end="67:21">(<expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:14">==</operator> <name pos:start="67:16" pos:end="67:20">class</name></expr>)</condition> <block pos:start="67:23" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:44">

        <for pos:start="69:9" pos:end="73:9">for <control pos:start="69:13" pos:end="69:53">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">i</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">1</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:48"><expr pos:start="69:21" pos:end="69:47"><name pos:start="69:21" pos:end="69:21">i</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:47">OBJECT_CLASS_CAST_CACHE</name></expr>;</condition> <incr pos:start="69:50" pos:end="69:52"><expr pos:start="69:50" pos:end="69:52"><name pos:start="69:50" pos:end="69:50">i</name><operator pos:start="69:51" pos:end="69:52">++</operator></expr></incr>)</control> <block pos:start="69:55" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:60">

            <expr_stmt pos:start="71:13" pos:end="71:60"><expr pos:start="71:13" pos:end="71:59"><name pos:start="71:13" pos:end="71:36"><name pos:start="71:13" pos:end="71:17">class</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:29">cast_cache</name><index pos:start="71:30" pos:end="71:36">[<expr pos:start="71:31" pos:end="71:35"><name pos:start="71:31" pos:end="71:31">i</name> <operator pos:start="71:33" pos:end="71:33">-</operator> <literal type="number" pos:start="71:35" pos:end="71:35">1</literal></expr>]</index></name> <operator pos:start="71:38" pos:end="71:38">=</operator> <name pos:start="71:40" pos:end="71:59"><name pos:start="71:40" pos:end="71:44">class</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:56">cast_cache</name><index pos:start="71:57" pos:end="71:59">[<expr pos:start="71:58" pos:end="71:58"><name pos:start="71:58" pos:end="71:58">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:13">class</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:25">cast_cache</name><index pos:start="75:26" pos:end="75:32">[<expr pos:start="75:27" pos:end="75:31"><name pos:start="75:27" pos:end="75:27">i</name> <operator pos:start="75:29" pos:end="75:29">-</operator> <literal type="number" pos:start="75:31" pos:end="75:31">1</literal></expr>]</index></name> <operator pos:start="75:34" pos:end="75:34">=</operator> <name pos:start="75:36" pos:end="75:43">typename</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="79:1" pos:end="82:0"><name pos:start="79:1" pos:end="79:3">out</name>:</label>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

    <return pos:start="83:5" pos:end="83:15">return <expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
