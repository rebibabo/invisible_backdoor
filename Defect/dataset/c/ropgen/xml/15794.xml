<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15794.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:50">dnxhd_decode_dct_block</name><parameter_list pos:start="1:51" pos:end="13:64">(<parameter pos:start="1:52" pos:end="1:74"><decl pos:start="1:52" pos:end="1:74"><type pos:start="1:52" pos:end="1:74"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:69">DNXHDContext</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">ctx</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:61">RowContext</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:66">row</name></decl></parameter>,

                                                   <parameter pos:start="5:52" pos:end="5:56"><decl pos:start="5:52" pos:end="5:56"><type pos:start="5:52" pos:end="5:56"><name pos:start="5:52" pos:end="5:54">int</name></type> <name pos:start="5:56" pos:end="5:56">n</name></decl></parameter>,

                                                   <parameter pos:start="7:52" pos:end="7:65"><decl pos:start="7:52" pos:end="7:65"><type pos:start="7:52" pos:end="7:65"><name pos:start="7:52" pos:end="7:54">int</name></type> <name pos:start="7:56" pos:end="7:65">index_bits</name></decl></parameter>,

                                                   <parameter pos:start="9:52" pos:end="9:65"><decl pos:start="9:52" pos:end="9:65"><type pos:start="9:52" pos:end="9:65"><name pos:start="9:52" pos:end="9:54">int</name></type> <name pos:start="9:56" pos:end="9:65">level_bias</name></decl></parameter>,

                                                   <parameter pos:start="11:52" pos:end="11:66"><decl pos:start="11:52" pos:end="11:66"><type pos:start="11:52" pos:end="11:66"><name pos:start="11:52" pos:end="11:54">int</name></type> <name pos:start="11:56" pos:end="11:66">level_shift</name></decl></parameter>,

                                                   <parameter pos:start="13:52" pos:end="13:63"><decl pos:start="13:52" pos:end="13:63"><type pos:start="13:52" pos:end="13:63"><name pos:start="13:52" pos:end="13:54">int</name></type> <name pos:start="13:56" pos:end="13:63">dc_shift</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="199:1">{<block_content pos:start="17:5" pos:end="197:15">

    <decl_stmt pos:start="17:5" pos:end="17:41"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>, <decl pos:start="17:15" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:20">index1</name></decl>, <decl pos:start="17:23" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:23" pos:end="17:28">index2</name></decl>, <decl pos:start="17:31" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:31" pos:end="17:33">len</name></decl>, <decl pos:start="17:36" pos:end="17:40"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:36" pos:end="17:40">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">level</name></decl>, <decl pos:start="19:16" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:16" pos:end="19:24">component</name></decl>, <decl pos:start="19:27" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:27" pos:end="19:30">sign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:15"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:20">scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:33"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:19"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:17">uint8_t</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:32">weight_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:53"><decl pos:start="25:5" pos:end="25:52"><type pos:start="25:5" pos:end="25:19"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:17">uint8_t</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:26">ac_info</name> <init pos:start="25:28" pos:end="25:52">= <expr pos:start="25:30" pos:end="25:52"><name pos:start="25:30" pos:end="25:52"><name pos:start="25:30" pos:end="25:32">ctx</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:43">cid_table</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:52">ac_info</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:36"><decl pos:start="27:5" pos:end="27:35"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">int16_t</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:18">block</name> <init pos:start="27:20" pos:end="27:35">= <expr pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:24">row</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">blocks</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">n</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:56"><decl pos:start="29:5" pos:end="29:55"><type pos:start="29:5" pos:end="29:13"><specifier pos:start="29:5" pos:end="29:9">const</specifier> <name pos:start="29:11" pos:end="29:13">int</name></type> <name pos:start="29:15" pos:end="29:23">eob_index</name>     <init pos:start="29:29" pos:end="29:55">= <expr pos:start="29:31" pos:end="29:55"><name pos:start="29:31" pos:end="29:55"><name pos:start="29:31" pos:end="29:33">ctx</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:44">cid_table</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:55">eob_index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:16"><decl pos:start="31:5" pos:end="31:15"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">ret</name> <init pos:start="31:13" pos:end="31:15">= <expr pos:start="31:15" pos:end="31:15"><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:15">OPEN_READER</name><argument_list pos:start="33:16" pos:end="33:29">(<argument pos:start="33:17" pos:end="33:18"><expr pos:start="33:17" pos:end="33:18"><name pos:start="33:17" pos:end="33:18">bs</name></expr></argument>, <argument pos:start="33:21" pos:end="33:28"><expr pos:start="33:21" pos:end="33:28"><operator pos:start="33:21" pos:end="33:21">&amp;</operator><name pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:24">row</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><call pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:13">bdsp</name><operator pos:start="37:14" pos:end="37:14">.</operator><name pos:start="37:15" pos:end="37:25">clear_block</name></name><argument_list pos:start="37:26" pos:end="37:32">(<argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="79:5"><if pos:start="41:5" pos:end="61:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:20"><name pos:start="41:10" pos:end="41:12">ctx</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:20">is_444</name></name></expr>)</condition> <block pos:start="41:23" pos:end="61:5">{<block_content pos:start="43:9" pos:end="59:9">

        <if_stmt pos:start="43:9" pos:end="59:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:18">(<expr pos:start="43:13" pos:end="43:17"><name pos:start="43:13" pos:end="43:13">n</name> <operator pos:start="43:15" pos:end="43:15">&amp;</operator> <literal type="number" pos:start="43:17" pos:end="43:17">2</literal></expr>)</condition> <block pos:start="43:20" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:58">

            <expr_stmt pos:start="45:13" pos:end="45:40"><expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:21">component</name>     <operator pos:start="45:27" pos:end="45:27">=</operator> <literal type="number" pos:start="45:29" pos:end="45:31">1</literal> <operator pos:start="45:31" pos:end="45:31">+</operator> <operator pos:start="45:33" pos:end="45:33">(</operator><name pos:start="45:34" pos:end="45:34">n</name> <operator pos:start="45:36" pos:end="45:36">&amp;</operator> <literal type="number" pos:start="45:38" pos:end="45:38">1</literal><operator pos:start="45:39" pos:end="45:39">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:38"><expr pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:17">scale</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:37"><name pos:start="47:21" pos:end="47:23">row</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:37">chroma_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:58"><expr pos:start="49:13" pos:end="49:57"><name pos:start="49:13" pos:end="49:25">weight_matrix</name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:57"><name pos:start="49:29" pos:end="49:31">ctx</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:42">cid_table</name><operator pos:start="49:43" pos:end="49:44">-&gt;</operator><name pos:start="49:45" pos:end="49:57">chroma_weight</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="59:9">else <block pos:start="51:16" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:56">

            <expr_stmt pos:start="53:13" pos:end="53:30"><expr pos:start="53:13" pos:end="53:29"><name pos:start="53:13" pos:end="53:21">component</name>     <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:17">scale</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:35"><name pos:start="55:21" pos:end="55:23">row</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:35">luma_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:56"><expr pos:start="57:13" pos:end="57:55"><name pos:start="57:13" pos:end="57:25">weight_matrix</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:55"><name pos:start="57:29" pos:end="57:31">ctx</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:42">cid_table</name><operator pos:start="57:43" pos:end="57:44">-&gt;</operator><name pos:start="57:45" pos:end="57:55">luma_weight</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="79:5">else <block pos:start="61:12" pos:end="79:5">{<block_content pos:start="63:9" pos:end="77:9">

        <expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:17">component</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <operator pos:start="63:21" pos:end="63:21">(</operator><name pos:start="63:22" pos:end="63:22">n</name> <operator pos:start="63:24" pos:end="63:25">&gt;&gt;</operator> <literal type="number" pos:start="63:27" pos:end="63:27">1</literal><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:30">%</operator> <literal type="number" pos:start="63:32" pos:end="63:32">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="77:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:22">(<expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:21">component</name></expr>)</condition> <block pos:start="65:24" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:58">

            <expr_stmt pos:start="67:13" pos:end="67:38"><expr pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:17">scale</name> <operator pos:start="67:19" pos:end="67:19">=</operator> <name pos:start="67:21" pos:end="67:37"><name pos:start="67:21" pos:end="67:23">row</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:37">chroma_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:58"><expr pos:start="69:13" pos:end="69:57"><name pos:start="69:13" pos:end="69:25">weight_matrix</name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:57"><name pos:start="69:29" pos:end="69:31">ctx</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:42">cid_table</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:57">chroma_weight</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="77:9">else <block pos:start="71:16" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:56">

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:17">scale</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:35"><name pos:start="73:21" pos:end="73:23">row</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:35">luma_scale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:56"><expr pos:start="75:13" pos:end="75:55"><name pos:start="75:13" pos:end="75:25">weight_matrix</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:55"><name pos:start="75:29" pos:end="75:31">ctx</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:42">cid_table</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:55">luma_weight</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:31"><expr pos:start="83:5" pos:end="83:30"><call pos:start="83:5" pos:end="83:30"><name pos:start="83:5" pos:end="83:16">UPDATE_CACHE</name><argument_list pos:start="83:17" pos:end="83:30">(<argument pos:start="83:18" pos:end="83:19"><expr pos:start="83:18" pos:end="83:19"><name pos:start="83:18" pos:end="83:19">bs</name></expr></argument>, <argument pos:start="83:22" pos:end="83:29"><expr pos:start="83:22" pos:end="83:29"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:29"><name pos:start="83:23" pos:end="83:25">row</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:72"><expr pos:start="85:5" pos:end="85:71"><call pos:start="85:5" pos:end="85:71"><name pos:start="85:5" pos:end="85:11">GET_VLC</name><argument_list pos:start="85:12" pos:end="85:71">(<argument pos:start="85:13" pos:end="85:15"><expr pos:start="85:13" pos:end="85:15"><name pos:start="85:13" pos:end="85:15">len</name></expr></argument>, <argument pos:start="85:18" pos:end="85:19"><expr pos:start="85:18" pos:end="85:19"><name pos:start="85:18" pos:end="85:19">bs</name></expr></argument>, <argument pos:start="85:22" pos:end="85:29"><expr pos:start="85:22" pos:end="85:29"><operator pos:start="85:22" pos:end="85:22">&amp;</operator><name pos:start="85:23" pos:end="85:29"><name pos:start="85:23" pos:end="85:25">row</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:29">gb</name></name></expr></argument>, <argument pos:start="85:32" pos:end="85:48"><expr pos:start="85:32" pos:end="85:48"><name pos:start="85:32" pos:end="85:48"><name pos:start="85:32" pos:end="85:34">ctx</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:42">dc_vlc</name><operator pos:start="85:43" pos:end="85:43">.</operator><name pos:start="85:44" pos:end="85:48">table</name></name></expr></argument>, <argument pos:start="85:51" pos:end="85:67"><expr pos:start="85:51" pos:end="85:67"><name pos:start="85:51" pos:end="85:67">DNXHD_DC_VLC_BITS</name></expr></argument>, <argument pos:start="85:70" pos:end="85:70"><expr pos:start="85:70" pos:end="85:70"><literal type="number" pos:start="85:70" pos:end="85:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="99:5"><if pos:start="87:5" pos:end="99:5">if <condition pos:start="87:8" pos:end="87:12">(<expr pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">len</name></expr>)</condition> <block pos:start="87:14" pos:end="99:5">{<block_content pos:start="89:9" pos:end="97:53">

        <expr_stmt pos:start="89:9" pos:end="89:40"><expr pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:13">level</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <call pos:start="89:17" pos:end="89:39"><name pos:start="89:17" pos:end="89:25">GET_CACHE</name><argument_list pos:start="89:26" pos:end="89:39">(<argument pos:start="89:27" pos:end="89:28"><expr pos:start="89:27" pos:end="89:28"><name pos:start="89:27" pos:end="89:28">bs</name></expr></argument>, <argument pos:start="89:31" pos:end="89:38"><expr pos:start="89:31" pos:end="89:38"><operator pos:start="89:31" pos:end="89:31">&amp;</operator><name pos:start="89:32" pos:end="89:38"><name pos:start="89:32" pos:end="89:34">row</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:42"><expr pos:start="91:9" pos:end="91:41"><call pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:22">LAST_SKIP_BITS</name><argument_list pos:start="91:23" pos:end="91:41">(<argument pos:start="91:24" pos:end="91:25"><expr pos:start="91:24" pos:end="91:25"><name pos:start="91:24" pos:end="91:25">bs</name></expr></argument>, <argument pos:start="91:28" pos:end="91:35"><expr pos:start="91:28" pos:end="91:35"><operator pos:start="91:28" pos:end="91:28">&amp;</operator><name pos:start="91:29" pos:end="91:35"><name pos:start="91:29" pos:end="91:31">row</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:35">gb</name></name></expr></argument>, <argument pos:start="91:38" pos:end="91:40"><expr pos:start="91:38" pos:end="91:40"><name pos:start="91:38" pos:end="91:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:12">sign</name>  <operator pos:start="93:15" pos:end="93:15">=</operator> <operator pos:start="93:17" pos:end="93:17">~</operator><name pos:start="93:18" pos:end="93:22">level</name> <operator pos:start="93:24" pos:end="93:25">&gt;&gt;</operator> <literal type="number" pos:start="93:27" pos:end="93:28">31</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:13">level</name> <operator pos:start="95:15" pos:end="95:15">=</operator> <operator pos:start="95:17" pos:end="95:17">(</operator><call pos:start="95:18" pos:end="95:45"><name pos:start="95:18" pos:end="95:26">NEG_USR32</name><argument_list pos:start="95:27" pos:end="95:45">(<argument pos:start="95:28" pos:end="95:39"><expr pos:start="95:28" pos:end="95:39"><name pos:start="95:28" pos:end="95:31">sign</name> <operator pos:start="95:33" pos:end="95:33">^</operator> <name pos:start="95:35" pos:end="95:39">level</name></expr></argument>, <argument pos:start="95:42" pos:end="95:44"><expr pos:start="95:42" pos:end="95:44"><name pos:start="95:42" pos:end="95:44">len</name></expr></argument>)</argument_list></call> <operator pos:start="95:47" pos:end="95:47">^</operator> <name pos:start="95:49" pos:end="95:52">sign</name><operator pos:start="95:53" pos:end="95:53">)</operator> <operator pos:start="95:55" pos:end="95:55">-</operator> <name pos:start="95:57" pos:end="95:60">sign</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:53"><expr pos:start="97:9" pos:end="97:52"><name pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:11">row</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:20">last_dc</name><index pos:start="97:21" pos:end="97:31">[<expr pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:30">component</name></expr>]</index></name> <operator pos:start="97:33" pos:end="97:34">+=</operator> <name pos:start="97:36" pos:end="97:40">level</name> <operator pos:start="97:42" pos:end="97:43">&lt;&lt;</operator> <name pos:start="97:45" pos:end="97:52">dc_shift</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:12"><name pos:start="101:5" pos:end="101:9">block</name><index pos:start="101:10" pos:end="101:12">[<expr pos:start="101:11" pos:end="101:11"><literal type="number" pos:start="101:11" pos:end="101:11">0</literal></expr>]</index></name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:38"><name pos:start="101:16" pos:end="101:18">row</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:27">last_dc</name><index pos:start="101:28" pos:end="101:38">[<expr pos:start="101:29" pos:end="101:37"><name pos:start="101:29" pos:end="101:37">component</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:10"><expr pos:start="105:5" pos:end="105:9"><name pos:start="105:5" pos:end="105:5">i</name> <operator pos:start="105:7" pos:end="105:7">=</operator> <literal type="number" pos:start="105:9" pos:end="105:9">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:31"><expr pos:start="109:5" pos:end="109:30"><call pos:start="109:5" pos:end="109:30"><name pos:start="109:5" pos:end="109:16">UPDATE_CACHE</name><argument_list pos:start="109:17" pos:end="109:30">(<argument pos:start="109:18" pos:end="109:19"><expr pos:start="109:18" pos:end="109:19"><name pos:start="109:18" pos:end="109:19">bs</name></expr></argument>, <argument pos:start="109:22" pos:end="109:29"><expr pos:start="109:22" pos:end="109:29"><operator pos:start="109:22" pos:end="109:22">&amp;</operator><name pos:start="109:23" pos:end="109:29"><name pos:start="109:23" pos:end="109:25">row</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="113:31"><expr pos:start="111:5" pos:end="113:30"><call pos:start="111:5" pos:end="113:30"><name pos:start="111:5" pos:end="111:11">GET_VLC</name><argument_list pos:start="111:12" pos:end="113:30">(<argument pos:start="111:13" pos:end="111:18"><expr pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:18">index1</name></expr></argument>, <argument pos:start="111:21" pos:end="111:22"><expr pos:start="111:21" pos:end="111:22"><name pos:start="111:21" pos:end="111:22">bs</name></expr></argument>, <argument pos:start="111:25" pos:end="111:32"><expr pos:start="111:25" pos:end="111:32"><operator pos:start="111:25" pos:end="111:25">&amp;</operator><name pos:start="111:26" pos:end="111:32"><name pos:start="111:26" pos:end="111:28">row</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:32">gb</name></name></expr></argument>, <argument pos:start="111:35" pos:end="111:51"><expr pos:start="111:35" pos:end="111:51"><name pos:start="111:35" pos:end="111:51"><name pos:start="111:35" pos:end="111:37">ctx</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:45">ac_vlc</name><operator pos:start="111:46" pos:end="111:46">.</operator><name pos:start="111:47" pos:end="111:51">table</name></name></expr></argument>,

            <argument pos:start="113:13" pos:end="113:26"><expr pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:26">DNXHD_VLC_BITS</name></expr></argument>, <argument pos:start="113:29" pos:end="113:29"><expr pos:start="113:29" pos:end="113:29"><literal type="number" pos:start="113:29" pos:end="113:29">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="117:5" pos:end="191:5">while <condition pos:start="117:11" pos:end="117:31">(<expr pos:start="117:12" pos:end="117:30"><name pos:start="117:12" pos:end="117:17">index1</name> <operator pos:start="117:19" pos:end="117:20">!=</operator> <name pos:start="117:22" pos:end="117:30">eob_index</name></expr>)</condition> <block pos:start="117:33" pos:end="191:5">{<block_content pos:start="119:9" pos:end="189:35">

        <expr_stmt pos:start="119:9" pos:end="119:36"><expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:13">level</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:35"><name pos:start="119:17" pos:end="119:23">ac_info</name><index pos:start="119:24" pos:end="119:35">[<expr pos:start="119:25" pos:end="119:34"><literal type="number" pos:start="119:25" pos:end="119:25">2</literal><operator pos:start="119:26" pos:end="119:26">*</operator><name pos:start="119:27" pos:end="119:32">index1</name><operator pos:start="119:33" pos:end="119:33">+</operator><literal type="number" pos:start="119:34" pos:end="119:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:36"><expr pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:13">flags</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <name pos:start="121:17" pos:end="121:35"><name pos:start="121:17" pos:end="121:23">ac_info</name><index pos:start="121:24" pos:end="121:35">[<expr pos:start="121:25" pos:end="121:34"><literal type="number" pos:start="121:25" pos:end="121:25">2</literal><operator pos:start="121:26" pos:end="121:26">*</operator><name pos:start="121:27" pos:end="121:32">index1</name><operator pos:start="121:33" pos:end="121:33">+</operator><literal type="number" pos:start="121:34" pos:end="121:34">1</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:43"><expr pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:12">sign</name> <operator pos:start="125:14" pos:end="125:14">=</operator> <call pos:start="125:16" pos:end="125:42"><name pos:start="125:16" pos:end="125:25">SHOW_SBITS</name><argument_list pos:start="125:26" pos:end="125:42">(<argument pos:start="125:27" pos:end="125:28"><expr pos:start="125:27" pos:end="125:28"><name pos:start="125:27" pos:end="125:28">bs</name></expr></argument>, <argument pos:start="125:31" pos:end="125:38"><expr pos:start="125:31" pos:end="125:38"><operator pos:start="125:31" pos:end="125:31">&amp;</operator><name pos:start="125:32" pos:end="125:38"><name pos:start="125:32" pos:end="125:34">row</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:38">gb</name></name></expr></argument>, <argument pos:start="125:41" pos:end="125:41"><expr pos:start="125:41" pos:end="125:41"><literal type="number" pos:start="125:41" pos:end="125:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:35"><expr pos:start="127:9" pos:end="127:34"><call pos:start="127:9" pos:end="127:34"><name pos:start="127:9" pos:end="127:17">SKIP_BITS</name><argument_list pos:start="127:18" pos:end="127:34">(<argument pos:start="127:19" pos:end="127:20"><expr pos:start="127:19" pos:end="127:20"><name pos:start="127:19" pos:end="127:20">bs</name></expr></argument>, <argument pos:start="127:23" pos:end="127:30"><expr pos:start="127:23" pos:end="127:30"><operator pos:start="127:23" pos:end="127:23">&amp;</operator><name pos:start="127:24" pos:end="127:30"><name pos:start="127:24" pos:end="127:26">row</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:30">gb</name></name></expr></argument>, <argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><literal type="number" pos:start="127:33" pos:end="127:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:22">(<expr pos:start="131:13" pos:end="131:21"><name pos:start="131:13" pos:end="131:17">flags</name> <operator pos:start="131:19" pos:end="131:19">&amp;</operator> <literal type="number" pos:start="131:21" pos:end="131:21">1</literal></expr>)</condition> <block pos:start="131:24" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:48">

            <expr_stmt pos:start="133:13" pos:end="133:63"><expr pos:start="133:13" pos:end="133:62"><name pos:start="133:13" pos:end="133:17">level</name> <operator pos:start="133:19" pos:end="133:20">+=</operator> <call pos:start="133:22" pos:end="133:57"><name pos:start="133:22" pos:end="133:31">SHOW_UBITS</name><argument_list pos:start="133:32" pos:end="133:57">(<argument pos:start="133:33" pos:end="133:34"><expr pos:start="133:33" pos:end="133:34"><name pos:start="133:33" pos:end="133:34">bs</name></expr></argument>, <argument pos:start="133:37" pos:end="133:44"><expr pos:start="133:37" pos:end="133:44"><operator pos:start="133:37" pos:end="133:37">&amp;</operator><name pos:start="133:38" pos:end="133:44"><name pos:start="133:38" pos:end="133:40">row</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:44">gb</name></name></expr></argument>, <argument pos:start="133:47" pos:end="133:56"><expr pos:start="133:47" pos:end="133:56"><name pos:start="133:47" pos:end="133:56">index_bits</name></expr></argument>)</argument_list></call> <operator pos:start="133:59" pos:end="133:60">&lt;&lt;</operator> <literal type="number" pos:start="133:62" pos:end="133:62">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:48"><expr pos:start="135:13" pos:end="135:47"><call pos:start="135:13" pos:end="135:47"><name pos:start="135:13" pos:end="135:21">SKIP_BITS</name><argument_list pos:start="135:22" pos:end="135:47">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">bs</name></expr></argument>, <argument pos:start="135:27" pos:end="135:34"><expr pos:start="135:27" pos:end="135:34"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:34"><name pos:start="135:28" pos:end="135:30">row</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:34">gb</name></name></expr></argument>, <argument pos:start="135:37" pos:end="135:46"><expr pos:start="135:37" pos:end="135:46"><name pos:start="135:37" pos:end="135:46">index_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="151:9"><if pos:start="141:9" pos:end="151:9">if <condition pos:start="141:12" pos:end="141:22">(<expr pos:start="141:13" pos:end="141:21"><name pos:start="141:13" pos:end="141:17">flags</name> <operator pos:start="141:19" pos:end="141:19">&amp;</operator> <literal type="number" pos:start="141:21" pos:end="141:21">2</literal></expr>)</condition> <block pos:start="141:24" pos:end="151:9">{<block_content pos:start="143:13" pos:end="149:45">

            <expr_stmt pos:start="143:13" pos:end="143:39"><expr pos:start="143:13" pos:end="143:38"><call pos:start="143:13" pos:end="143:38"><name pos:start="143:13" pos:end="143:24">UPDATE_CACHE</name><argument_list pos:start="143:25" pos:end="143:38">(<argument pos:start="143:26" pos:end="143:27"><expr pos:start="143:26" pos:end="143:27"><name pos:start="143:26" pos:end="143:27">bs</name></expr></argument>, <argument pos:start="143:30" pos:end="143:37"><expr pos:start="143:30" pos:end="143:37"><operator pos:start="143:30" pos:end="143:30">&amp;</operator><name pos:start="143:31" pos:end="143:37"><name pos:start="143:31" pos:end="143:33">row</name><operator pos:start="143:34" pos:end="143:35">-&gt;</operator><name pos:start="143:36" pos:end="143:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="147:39"><expr pos:start="145:13" pos:end="147:38"><call pos:start="145:13" pos:end="147:38"><name pos:start="145:13" pos:end="145:19">GET_VLC</name><argument_list pos:start="145:20" pos:end="147:38">(<argument pos:start="145:21" pos:end="145:26"><expr pos:start="145:21" pos:end="145:26"><name pos:start="145:21" pos:end="145:26">index2</name></expr></argument>, <argument pos:start="145:29" pos:end="145:30"><expr pos:start="145:29" pos:end="145:30"><name pos:start="145:29" pos:end="145:30">bs</name></expr></argument>, <argument pos:start="145:33" pos:end="145:40"><expr pos:start="145:33" pos:end="145:40"><operator pos:start="145:33" pos:end="145:33">&amp;</operator><name pos:start="145:34" pos:end="145:40"><name pos:start="145:34" pos:end="145:36">row</name><operator pos:start="145:37" pos:end="145:38">-&gt;</operator><name pos:start="145:39" pos:end="145:40">gb</name></name></expr></argument>, <argument pos:start="145:43" pos:end="145:60"><expr pos:start="145:43" pos:end="145:60"><name pos:start="145:43" pos:end="145:60"><name pos:start="145:43" pos:end="145:45">ctx</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:54">run_vlc</name><operator pos:start="145:55" pos:end="145:55">.</operator><name pos:start="145:56" pos:end="145:60">table</name></name></expr></argument>,

                    <argument pos:start="147:21" pos:end="147:34"><expr pos:start="147:21" pos:end="147:34"><name pos:start="147:21" pos:end="147:34">DNXHD_VLC_BITS</name></expr></argument>, <argument pos:start="147:37" pos:end="147:37"><expr pos:start="147:37" pos:end="147:37"><literal type="number" pos:start="147:37" pos:end="147:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:45"><expr pos:start="149:13" pos:end="149:44"><name pos:start="149:13" pos:end="149:13">i</name> <operator pos:start="149:15" pos:end="149:16">+=</operator> <name pos:start="149:18" pos:end="149:44"><name pos:start="149:18" pos:end="149:20">ctx</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:31">cid_table</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:36">run</name><index pos:start="149:37" pos:end="149:44">[<expr pos:start="149:38" pos:end="149:43"><name pos:start="149:38" pos:end="149:43">index2</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="163:9"><if pos:start="155:9" pos:end="163:9">if <condition pos:start="155:12" pos:end="155:21">(<expr pos:start="155:13" pos:end="155:20"><operator pos:start="155:13" pos:end="155:14">++</operator><name pos:start="155:15" pos:end="155:15">i</name> <operator pos:start="155:17" pos:end="155:17">&gt;</operator> <literal type="number" pos:start="155:19" pos:end="155:20">63</literal></expr>)</condition> <block pos:start="155:23" pos:end="163:9">{<block_content pos:start="157:13" pos:end="161:18">

            <expr_stmt pos:start="157:13" pos:end="157:78"><expr pos:start="157:13" pos:end="157:77"><call pos:start="157:13" pos:end="157:77"><name pos:start="157:13" pos:end="157:18">av_log</name><argument_list pos:start="157:19" pos:end="157:77">(<argument pos:start="157:20" pos:end="157:29"><expr pos:start="157:20" pos:end="157:29"><name pos:start="157:20" pos:end="157:29"><name pos:start="157:20" pos:end="157:22">ctx</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:29">avctx</name></name></expr></argument>, <argument pos:start="157:32" pos:end="157:43"><expr pos:start="157:32" pos:end="157:43"><name pos:start="157:32" pos:end="157:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:46" pos:end="157:70"><expr pos:start="157:46" pos:end="157:70"><literal type="string" pos:start="157:46" pos:end="157:70">"ac tex damaged %d, %d\n"</literal></expr></argument>, <argument pos:start="157:73" pos:end="157:73"><expr pos:start="157:73" pos:end="157:73"><name pos:start="157:73" pos:end="157:73">n</name></expr></argument>, <argument pos:start="157:76" pos:end="157:76"><expr pos:start="157:76" pos:end="157:76"><name pos:start="157:76" pos:end="157:76">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:21"><expr pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:15">ret</name> <operator pos:start="159:17" pos:end="159:17">=</operator> <operator pos:start="159:19" pos:end="159:19">-</operator><literal type="number" pos:start="159:20" pos:end="159:20">1</literal></expr>;</expr_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:45"><expr pos:start="167:9" pos:end="167:44"><name pos:start="167:9" pos:end="167:9">j</name>     <operator pos:start="167:15" pos:end="167:15">=</operator> <name pos:start="167:17" pos:end="167:44"><name pos:start="167:17" pos:end="167:19">ctx</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:30">scantable</name><operator pos:start="167:31" pos:end="167:31">.</operator><name pos:start="167:32" pos:end="167:41">permutated</name><index pos:start="167:42" pos:end="167:44">[<expr pos:start="167:43" pos:end="167:43"><name pos:start="167:43" pos:end="167:43">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:26"><expr pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:13">level</name> <operator pos:start="169:15" pos:end="169:16">*=</operator> <name pos:start="169:18" pos:end="169:25"><name pos:start="169:18" pos:end="169:22">scale</name><index pos:start="169:23" pos:end="169:25">[<expr pos:start="169:24" pos:end="169:24"><name pos:start="169:24" pos:end="169:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:31"><expr pos:start="171:9" pos:end="171:30"><name pos:start="171:9" pos:end="171:13">level</name> <operator pos:start="171:15" pos:end="171:16">+=</operator> <name pos:start="171:18" pos:end="171:25"><name pos:start="171:18" pos:end="171:22">scale</name><index pos:start="171:23" pos:end="171:25">[<expr pos:start="171:24" pos:end="171:24"><name pos:start="171:24" pos:end="171:24">i</name></expr>]</index></name> <operator pos:start="171:27" pos:end="171:28">&gt;&gt;</operator> <literal type="number" pos:start="171:30" pos:end="171:30">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="175:32"><if pos:start="173:9" pos:end="175:32">if <condition pos:start="173:12" pos:end="173:62">(<expr pos:start="173:13" pos:end="173:61"><name pos:start="173:13" pos:end="173:22">level_bias</name> <operator pos:start="173:24" pos:end="173:24">&lt;</operator> <literal type="number" pos:start="173:26" pos:end="173:27">32</literal> <operator pos:start="173:29" pos:end="173:30">||</operator> <name pos:start="173:32" pos:end="173:47"><name pos:start="173:32" pos:end="173:44">weight_matrix</name><index pos:start="173:45" pos:end="173:47">[<expr pos:start="173:46" pos:end="173:46"><name pos:start="173:46" pos:end="173:46">i</name></expr>]</index></name> <operator pos:start="173:49" pos:end="173:50">!=</operator> <name pos:start="173:52" pos:end="173:61">level_bias</name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:32"><block_content pos:start="175:13" pos:end="175:32">

            <expr_stmt pos:start="175:13" pos:end="175:32"><expr pos:start="175:13" pos:end="175:31"><name pos:start="175:13" pos:end="175:17">level</name> <operator pos:start="175:19" pos:end="175:20">+=</operator> <name pos:start="175:22" pos:end="175:31">level_bias</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="175:34" pos:end="175:54">// 1&lt;&lt;(level_shift-1)</comment>

        <expr_stmt pos:start="177:9" pos:end="177:30"><expr pos:start="177:9" pos:end="177:29"><name pos:start="177:9" pos:end="177:13">level</name> <operator pos:start="177:15" pos:end="177:17">&gt;&gt;=</operator> <name pos:start="177:19" pos:end="177:29">level_shift</name></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:41"><expr pos:start="181:9" pos:end="181:40"><name pos:start="181:9" pos:end="181:16"><name pos:start="181:9" pos:end="181:13">block</name><index pos:start="181:14" pos:end="181:16">[<expr pos:start="181:15" pos:end="181:15"><name pos:start="181:15" pos:end="181:15">j</name></expr>]</index></name> <operator pos:start="181:18" pos:end="181:18">=</operator> <operator pos:start="181:20" pos:end="181:20">(</operator><name pos:start="181:21" pos:end="181:25">level</name> <operator pos:start="181:27" pos:end="181:27">^</operator> <name pos:start="181:29" pos:end="181:32">sign</name><operator pos:start="181:33" pos:end="181:33">)</operator> <operator pos:start="181:35" pos:end="181:35">-</operator> <name pos:start="181:37" pos:end="181:40">sign</name></expr>;</expr_stmt>



        <expr_stmt pos:start="185:9" pos:end="185:35"><expr pos:start="185:9" pos:end="185:34"><call pos:start="185:9" pos:end="185:34"><name pos:start="185:9" pos:end="185:20">UPDATE_CACHE</name><argument_list pos:start="185:21" pos:end="185:34">(<argument pos:start="185:22" pos:end="185:23"><expr pos:start="185:22" pos:end="185:23"><name pos:start="185:22" pos:end="185:23">bs</name></expr></argument>, <argument pos:start="185:26" pos:end="185:33"><expr pos:start="185:26" pos:end="185:33"><operator pos:start="185:26" pos:end="185:26">&amp;</operator><name pos:start="185:27" pos:end="185:33"><name pos:start="185:27" pos:end="185:29">row</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="189:35"><expr pos:start="187:9" pos:end="189:34"><call pos:start="187:9" pos:end="189:34"><name pos:start="187:9" pos:end="187:15">GET_VLC</name><argument_list pos:start="187:16" pos:end="189:34">(<argument pos:start="187:17" pos:end="187:22"><expr pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:22">index1</name></expr></argument>, <argument pos:start="187:25" pos:end="187:26"><expr pos:start="187:25" pos:end="187:26"><name pos:start="187:25" pos:end="187:26">bs</name></expr></argument>, <argument pos:start="187:29" pos:end="187:36"><expr pos:start="187:29" pos:end="187:36"><operator pos:start="187:29" pos:end="187:29">&amp;</operator><name pos:start="187:30" pos:end="187:36"><name pos:start="187:30" pos:end="187:32">row</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:36">gb</name></name></expr></argument>, <argument pos:start="187:39" pos:end="187:55"><expr pos:start="187:39" pos:end="187:55"><name pos:start="187:39" pos:end="187:55"><name pos:start="187:39" pos:end="187:41">ctx</name><operator pos:start="187:42" pos:end="187:43">-&gt;</operator><name pos:start="187:44" pos:end="187:49">ac_vlc</name><operator pos:start="187:50" pos:end="187:50">.</operator><name pos:start="187:51" pos:end="187:55">table</name></name></expr></argument>,

                <argument pos:start="189:17" pos:end="189:30"><expr pos:start="189:17" pos:end="189:30"><name pos:start="189:17" pos:end="189:30">DNXHD_VLC_BITS</name></expr></argument>, <argument pos:start="189:33" pos:end="189:33"><expr pos:start="189:33" pos:end="189:33"><literal type="number" pos:start="189:33" pos:end="189:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="195:5" pos:end="195:31"><expr pos:start="195:5" pos:end="195:30"><call pos:start="195:5" pos:end="195:30"><name pos:start="195:5" pos:end="195:16">CLOSE_READER</name><argument_list pos:start="195:17" pos:end="195:30">(<argument pos:start="195:18" pos:end="195:19"><expr pos:start="195:18" pos:end="195:19"><name pos:start="195:18" pos:end="195:19">bs</name></expr></argument>, <argument pos:start="195:22" pos:end="195:29"><expr pos:start="195:22" pos:end="195:29"><operator pos:start="195:22" pos:end="195:22">&amp;</operator><name pos:start="195:23" pos:end="195:29"><name pos:start="195:23" pos:end="195:25">row</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:15">return <expr pos:start="197:12" pos:end="197:14"><name pos:start="197:12" pos:end="197:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
