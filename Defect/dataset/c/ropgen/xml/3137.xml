<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3137.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_glbl</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:13">fc</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:25">nb_streams</name></name> <operator pos:start="9:27" pos:end="9:27">&lt;</operator> <literal type="number" pos:start="9:29" pos:end="9:29">1</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:44"><name pos:start="13:10" pos:end="13:10">c</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:14">fc</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:23">streams</name><index pos:start="13:24" pos:end="13:44">[<expr pos:start="13:25" pos:end="13:43"><name pos:start="13:25" pos:end="13:41"><name pos:start="13:25" pos:end="13:25">c</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:29">fc</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:41">nb_streams</name></name><operator pos:start="13:42" pos:end="13:42">-</operator><literal type="number" pos:start="13:43" pos:end="13:43">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:35"><if pos:start="17:5" pos:end="19:35">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17">uint64_t</name><operator pos:start="17:18" pos:end="17:18">)</operator><name pos:start="17:19" pos:end="17:27"><name pos:start="17:19" pos:end="17:22">atom</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:27">size</name></name> <operator pos:start="17:29" pos:end="17:29">&gt;</operator> <operator pos:start="17:31" pos:end="17:31">(</operator><literal type="number" pos:start="17:32" pos:end="17:32">1</literal><operator pos:start="17:33" pos:end="17:34">&lt;&lt;</operator><literal type="number" pos:start="17:35" pos:end="17:36">30</literal><operator pos:start="17:37" pos:end="17:37">)</operator></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:35"><block_content pos:start="19:9" pos:end="19:35">

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="39:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">atom</name><operator pos:start="23:13" pos:end="23:13">.</operator><name pos:start="23:14" pos:end="23:17">size</name></name> <operator pos:start="23:19" pos:end="23:20">&gt;=</operator> <literal type="number" pos:start="23:22" pos:end="23:23">10</literal></expr>)</condition> <block pos:start="23:26" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:49">

        <comment type="line" pos:start="25:9" pos:end="25:70">// Broken files created by legacy versions of libavformat will</comment>

        <comment type="line" pos:start="27:9" pos:end="27:56">// wrap a whole fiel atom inside of a glbl atom.</comment>

        <decl_stmt pos:start="29:9" pos:end="29:38"><decl pos:start="29:9" pos:end="29:37"><type pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">unsigned</name></type> <name pos:start="29:18" pos:end="29:21">size</name> <init pos:start="29:23" pos:end="29:37">= <expr pos:start="29:25" pos:end="29:37"><call pos:start="29:25" pos:end="29:37"><name pos:start="29:25" pos:end="29:33">avio_rb32</name><argument_list pos:start="29:34" pos:end="29:37">(<argument pos:start="29:35" pos:end="29:36"><expr pos:start="29:35" pos:end="29:36"><name pos:start="29:35" pos:end="29:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:38"><decl pos:start="31:9" pos:end="31:37"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">unsigned</name></type> <name pos:start="31:18" pos:end="31:21">type</name> <init pos:start="31:23" pos:end="31:37">= <expr pos:start="31:25" pos:end="31:37"><call pos:start="31:25" pos:end="31:37"><name pos:start="31:25" pos:end="31:33">avio_rl32</name><argument_list pos:start="31:34" pos:end="31:37">(<argument pos:start="31:35" pos:end="31:36"><expr pos:start="31:35" pos:end="31:36"><name pos:start="31:35" pos:end="31:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:36"><expr pos:start="33:9" pos:end="33:35"><call pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:17">avio_seek</name><argument_list pos:start="33:18" pos:end="33:35">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">pb</name></expr></argument>, <argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><operator pos:start="33:23" pos:end="33:23">-</operator><literal type="number" pos:start="33:24" pos:end="33:24">8</literal></expr></argument>, <argument pos:start="33:27" pos:end="33:34"><expr pos:start="33:27" pos:end="33:34"><name pos:start="33:27" pos:end="33:34">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:49"><if pos:start="35:9" pos:end="37:49">if <condition pos:start="35:12" pos:end="35:64">(<expr pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:16">type</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <call pos:start="35:21" pos:end="35:42"><name pos:start="35:21" pos:end="35:25">MKTAG</name><argument_list pos:start="35:26" pos:end="35:42">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><literal type="char" pos:start="35:27" pos:end="35:29">'f'</literal></expr></argument>,<argument pos:start="35:31" pos:end="35:33"><expr pos:start="35:31" pos:end="35:33"><literal type="char" pos:start="35:31" pos:end="35:33">'i'</literal></expr></argument>,<argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><literal type="char" pos:start="35:35" pos:end="35:37">'e'</literal></expr></argument>,<argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><literal type="char" pos:start="35:39" pos:end="35:41">'l'</literal></expr></argument>)</argument_list></call> <operator pos:start="35:44" pos:end="35:45">&amp;&amp;</operator> <name pos:start="35:47" pos:end="35:50">size</name> <operator pos:start="35:52" pos:end="35:53">==</operator> <name pos:start="35:55" pos:end="35:63"><name pos:start="35:55" pos:end="35:58">atom</name><operator pos:start="35:59" pos:end="35:59">.</operator><name pos:start="35:60" pos:end="35:63">size</name></name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:49"><block_content pos:start="37:13" pos:end="37:49">

            <return pos:start="37:13" pos:end="37:49">return <expr pos:start="37:20" pos:end="37:48"><call pos:start="37:20" pos:end="37:48"><name pos:start="37:20" pos:end="37:35">mov_read_default</name><argument_list pos:start="37:36" pos:end="37:48">(<argument pos:start="37:37" pos:end="37:37"><expr pos:start="37:37" pos:end="37:37"><name pos:start="37:37" pos:end="37:37">c</name></expr></argument>, <argument pos:start="37:40" pos:end="37:41"><expr pos:start="37:40" pos:end="37:41"><name pos:start="37:40" pos:end="37:41">pb</name></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><name pos:start="37:44" pos:end="37:47">atom</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:11">av_free</name><argument_list pos:start="41:12" pos:end="41:33">(<argument pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:14">st</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">codec</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:32">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:80"><expr pos:start="43:5" pos:end="43:79"><name pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:24">extradata</name></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <call pos:start="43:28" pos:end="43:79"><name pos:start="43:28" pos:end="43:37">av_mallocz</name><argument_list pos:start="43:38" pos:end="43:79">(<argument pos:start="43:39" pos:end="43:78"><expr pos:start="43:39" pos:end="43:78"><name pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:42">atom</name><operator pos:start="43:43" pos:end="43:43">.</operator><name pos:start="43:44" pos:end="43:47">size</name></name> <operator pos:start="43:49" pos:end="43:49">+</operator> <name pos:start="43:51" pos:end="43:78">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:31"><if pos:start="45:5" pos:end="47:31">if <condition pos:start="45:8" pos:end="45:30">(<expr pos:start="45:9" pos:end="45:29"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:29"><name pos:start="45:10" pos:end="45:11">st</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:18">codec</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:29">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:31"><block_content pos:start="47:9" pos:end="47:31">

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:42"><expr pos:start="49:5" pos:end="49:41"><name pos:start="49:5" pos:end="49:29"><name pos:start="49:5" pos:end="49:6">st</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:13">codec</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:29">extradata_size</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:41"><name pos:start="49:33" pos:end="49:36">atom</name><operator pos:start="49:37" pos:end="49:37">.</operator><name pos:start="49:38" pos:end="49:41">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><call pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:13">avio_read</name><argument_list pos:start="51:14" pos:end="51:50">(<argument pos:start="51:15" pos:end="51:16"><expr pos:start="51:15" pos:end="51:16"><name pos:start="51:15" pos:end="51:16">pb</name></expr></argument>, <argument pos:start="51:19" pos:end="51:38"><expr pos:start="51:19" pos:end="51:38"><name pos:start="51:19" pos:end="51:38"><name pos:start="51:19" pos:end="51:20">st</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:27">codec</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:38">extradata</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:49"><expr pos:start="51:41" pos:end="51:49"><name pos:start="51:41" pos:end="51:49"><name pos:start="51:41" pos:end="51:44">atom</name><operator pos:start="51:45" pos:end="51:45">.</operator><name pos:start="51:46" pos:end="51:49">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
