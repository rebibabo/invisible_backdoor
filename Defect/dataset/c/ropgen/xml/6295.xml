<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6295.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">qemu_rbd_open</name><parameter_list pos:start="1:25" pos:end="1:79">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:67"><decl pos:start="1:48" pos:end="1:67"><type pos:start="1:48" pos:end="1:67"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:67">filename</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:78"><decl pos:start="1:70" pos:end="1:78"><type pos:start="1:70" pos:end="1:78"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:78">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="173:1">{<block_content pos:start="5:5" pos:end="171:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRBDState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:37"><name pos:start="7:10" pos:end="7:13">pool</name><index pos:start="7:14" pos:end="7:37">[<expr pos:start="7:15" pos:end="7:36"><name pos:start="7:15" pos:end="7:36">RBD_MAX_POOL_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:41"><name pos:start="9:10" pos:end="9:17">snap_buf</name><index pos:start="9:18" pos:end="9:41">[<expr pos:start="9:19" pos:end="9:40"><name pos:start="9:19" pos:end="9:40">RBD_MAX_SNAP_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:32"><name pos:start="11:10" pos:end="11:13">conf</name><index pos:start="11:14" pos:end="11:32">[<expr pos:start="11:15" pos:end="11:31"><name pos:start="11:15" pos:end="11:31">RBD_MAX_CONF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">r</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="23:51">(<expr pos:start="17:9" pos:end="23:50"><call pos:start="17:9" pos:end="23:46"><name pos:start="17:9" pos:end="17:26">qemu_rbd_parsename</name><argument_list pos:start="17:27" pos:end="23:46">(<argument pos:start="17:28" pos:end="17:35"><expr pos:start="17:28" pos:end="17:35"><name pos:start="17:28" pos:end="17:35">filename</name></expr></argument>, <argument pos:start="17:38" pos:end="17:41"><expr pos:start="17:38" pos:end="17:41"><name pos:start="17:38" pos:end="17:41">pool</name></expr></argument>, <argument pos:start="17:44" pos:end="17:55"><expr pos:start="17:44" pos:end="17:55"><sizeof pos:start="17:44" pos:end="17:55">sizeof<argument_list pos:start="17:50" pos:end="17:55">(<argument pos:start="17:51" pos:end="17:54"><expr pos:start="17:51" pos:end="17:54"><name pos:start="17:51" pos:end="17:54">pool</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="19:28" pos:end="19:35"><expr pos:start="19:28" pos:end="19:35"><name pos:start="19:28" pos:end="19:35">snap_buf</name></expr></argument>, <argument pos:start="19:38" pos:end="19:53"><expr pos:start="19:38" pos:end="19:53"><sizeof pos:start="19:38" pos:end="19:53">sizeof<argument_list pos:start="19:44" pos:end="19:53">(<argument pos:start="19:45" pos:end="19:52"><expr pos:start="19:45" pos:end="19:52"><name pos:start="19:45" pos:end="19:52">snap_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:34">name</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:51"><expr pos:start="21:37" pos:end="21:51"><sizeof pos:start="21:37" pos:end="21:51">sizeof<argument_list pos:start="21:43" pos:end="21:51">(<argument pos:start="21:44" pos:end="21:50"><expr pos:start="21:44" pos:end="21:50"><name pos:start="21:44" pos:end="21:50"><name pos:start="21:44" pos:end="21:44">s</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:50">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">conf</name></expr></argument>, <argument pos:start="23:34" pos:end="23:45"><expr pos:start="23:34" pos:end="23:45"><sizeof pos:start="23:34" pos:end="23:45">sizeof<argument_list pos:start="23:40" pos:end="23:45">(<argument pos:start="23:41" pos:end="23:44"><expr pos:start="23:41" pos:end="23:44"><name pos:start="23:41" pos:end="23:44">conf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="23:48" pos:end="23:48">&lt;</operator> <literal type="number" pos:start="23:50" pos:end="23:50">0</literal></expr>)</condition> <block pos:start="23:53" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:23">

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:11">snap</name></name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:16">snap_buf</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>]</index></name> <operator pos:start="31:21" pos:end="31:22">!=</operator> <literal type="char" pos:start="31:24" pos:end="31:27">'\0'</literal></expr>)</condition> <block pos:start="31:30" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:37">

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">snap</name></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:36"><name pos:start="33:19" pos:end="33:26">g_strdup</name><argument_list pos:start="33:27" pos:end="33:36">(<argument pos:start="33:28" pos:end="33:35"><expr pos:start="33:28" pos:end="33:35"><name pos:start="33:28" pos:end="33:35">snap_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:5">r</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:20">rados_create</name><argument_list pos:start="39:21" pos:end="39:39">(<argument pos:start="39:22" pos:end="39:32"><expr pos:start="39:22" pos:end="39:32"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:32"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:32">cluster</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:14">(<expr pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:9">r</name> <operator pos:start="41:11" pos:end="41:11">&lt;</operator> <literal type="number" pos:start="41:13" pos:end="41:13">0</literal></expr>)</condition> <block pos:start="41:16" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><call pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:20">error_report</name><argument_list pos:start="43:21" pos:end="43:42">(<argument pos:start="43:22" pos:end="43:41"><expr pos:start="43:22" pos:end="43:41"><literal type="string" pos:start="43:22" pos:end="43:41">"error initializing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><name pos:start="45:16" pos:end="45:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="65:5">if <condition pos:start="51:8" pos:end="51:38">(<expr pos:start="51:9" pos:end="51:37"><call pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:14">strstr</name><argument_list pos:start="51:15" pos:end="51:29">(<argument pos:start="51:16" pos:end="51:19"><expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">conf</name></expr></argument>, <argument pos:start="51:22" pos:end="51:28"><expr pos:start="51:22" pos:end="51:28"><literal type="string" pos:start="51:22" pos:end="51:28">"conf="</literal></expr></argument>)</argument_list></call> <operator pos:start="51:31" pos:end="51:32">==</operator> <name pos:start="51:34" pos:end="51:37">NULL</name></expr>)</condition> <block pos:start="51:40" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:9">

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:9">r</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:50"><name pos:start="53:13" pos:end="53:32">rados_conf_read_file</name><argument_list pos:start="53:33" pos:end="53:50">(<argument pos:start="53:34" pos:end="53:43"><expr pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:34">s</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:43">cluster</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:49"><expr pos:start="53:46" pos:end="53:49"><name pos:start="53:46" pos:end="53:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:18">(<expr pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:13">r</name> <operator pos:start="55:15" pos:end="55:15">&lt;</operator> <literal type="number" pos:start="55:17" pos:end="55:17">0</literal></expr>)</condition> <block pos:start="55:20" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:21">

            <expr_stmt pos:start="57:13" pos:end="57:54"><expr pos:start="57:13" pos:end="57:53"><call pos:start="57:13" pos:end="57:53"><name pos:start="57:13" pos:end="57:24">error_report</name><argument_list pos:start="57:25" pos:end="57:53">(<argument pos:start="57:26" pos:end="57:52"><expr pos:start="57:26" pos:end="57:52"><literal type="string" pos:start="57:26" pos:end="57:52">"error reading config file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:39"><expr pos:start="59:13" pos:end="59:38"><call pos:start="59:13" pos:end="59:38"><name pos:start="59:13" pos:end="59:26">rados_shutdown</name><argument_list pos:start="59:27" pos:end="59:38">(<argument pos:start="59:28" pos:end="59:37"><expr pos:start="59:28" pos:end="59:37"><name pos:start="59:28" pos:end="59:37"><name pos:start="59:28" pos:end="59:28">s</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:37">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:24">(<expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:12">conf</name><index pos:start="69:13" pos:end="69:15">[<expr pos:start="69:14" pos:end="69:14"><literal type="number" pos:start="69:14" pos:end="69:14">0</literal></expr>]</index></name> <operator pos:start="69:17" pos:end="69:18">!=</operator> <literal type="char" pos:start="69:20" pos:end="69:23">'\0'</literal></expr>)</condition> <block pos:start="69:26" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:9">

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:9">r</name> <operator pos:start="71:11" pos:end="71:11">=</operator> <call pos:start="71:13" pos:end="71:47"><name pos:start="71:13" pos:end="71:29">qemu_rbd_set_conf</name><argument_list pos:start="71:30" pos:end="71:47">(<argument pos:start="71:31" pos:end="71:40"><expr pos:start="71:31" pos:end="71:40"><name pos:start="71:31" pos:end="71:40"><name pos:start="71:31" pos:end="71:31">s</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:40">cluster</name></name></expr></argument>, <argument pos:start="71:43" pos:end="71:46"><expr pos:start="71:43" pos:end="71:46"><name pos:start="71:43" pos:end="71:46">conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="81:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:18">(<expr pos:start="73:13" pos:end="73:17"><name pos:start="73:13" pos:end="73:13">r</name> <operator pos:start="73:15" pos:end="73:15">&lt;</operator> <literal type="number" pos:start="73:17" pos:end="73:17">0</literal></expr>)</condition> <block pos:start="73:20" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:21">

            <expr_stmt pos:start="75:13" pos:end="75:57"><expr pos:start="75:13" pos:end="75:56"><call pos:start="75:13" pos:end="75:56"><name pos:start="75:13" pos:end="75:24">error_report</name><argument_list pos:start="75:25" pos:end="75:56">(<argument pos:start="75:26" pos:end="75:55"><expr pos:start="75:26" pos:end="75:55"><literal type="string" pos:start="75:26" pos:end="75:55">"error setting config options"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:39"><expr pos:start="77:13" pos:end="77:38"><call pos:start="77:13" pos:end="77:38"><name pos:start="77:13" pos:end="77:26">rados_shutdown</name><argument_list pos:start="77:27" pos:end="77:38">(<argument pos:start="77:28" pos:end="77:37"><expr pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:37">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:21">return <expr pos:start="79:20" pos:end="79:20"><name pos:start="79:20" pos:end="79:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:34"><expr pos:start="87:5" pos:end="87:33"><name pos:start="87:5" pos:end="87:5">r</name> <operator pos:start="87:7" pos:end="87:7">=</operator> <call pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:21">rados_connect</name><argument_list pos:start="87:22" pos:end="87:33">(<argument pos:start="87:23" pos:end="87:32"><expr pos:start="87:23" pos:end="87:32"><name pos:start="87:23" pos:end="87:32"><name pos:start="87:23" pos:end="87:23">s</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:32">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:14">(<expr pos:start="89:9" pos:end="89:13"><name pos:start="89:9" pos:end="89:9">r</name> <operator pos:start="89:11" pos:end="89:11">&lt;</operator> <literal type="number" pos:start="89:13" pos:end="89:13">0</literal></expr>)</condition> <block pos:start="89:16" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:17">

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><call pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:20">error_report</name><argument_list pos:start="91:21" pos:end="91:40">(<argument pos:start="91:22" pos:end="91:39"><expr pos:start="91:22" pos:end="91:39"><literal type="string" pos:start="91:22" pos:end="91:39">"error connecting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><call pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:22">rados_shutdown</name><argument_list pos:start="93:23" pos:end="93:34">(<argument pos:start="93:24" pos:end="93:33"><expr pos:start="93:24" pos:end="93:33"><name pos:start="93:24" pos:end="93:33"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:33">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:17">return <expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:57"><expr pos:start="101:5" pos:end="101:56"><name pos:start="101:5" pos:end="101:5">r</name> <operator pos:start="101:7" pos:end="101:7">=</operator> <call pos:start="101:9" pos:end="101:56"><name pos:start="101:9" pos:end="101:26">rados_ioctx_create</name><argument_list pos:start="101:27" pos:end="101:56">(<argument pos:start="101:28" pos:end="101:37"><expr pos:start="101:28" pos:end="101:37"><name pos:start="101:28" pos:end="101:37"><name pos:start="101:28" pos:end="101:28">s</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:37">cluster</name></name></expr></argument>, <argument pos:start="101:40" pos:end="101:43"><expr pos:start="101:40" pos:end="101:43"><name pos:start="101:40" pos:end="101:43">pool</name></expr></argument>, <argument pos:start="101:46" pos:end="101:55"><expr pos:start="101:46" pos:end="101:55"><operator pos:start="101:46" pos:end="101:46">&amp;</operator><name pos:start="101:47" pos:end="101:55"><name pos:start="101:47" pos:end="101:47">s</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:55">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="111:5"><if pos:start="103:5" pos:end="111:5">if <condition pos:start="103:8" pos:end="103:14">(<expr pos:start="103:9" pos:end="103:13"><name pos:start="103:9" pos:end="103:9">r</name> <operator pos:start="103:11" pos:end="103:11">&lt;</operator> <literal type="number" pos:start="103:13" pos:end="103:13">0</literal></expr>)</condition> <block pos:start="103:16" pos:end="111:5">{<block_content pos:start="105:9" pos:end="109:17">

        <expr_stmt pos:start="105:9" pos:end="105:52"><expr pos:start="105:9" pos:end="105:51"><call pos:start="105:9" pos:end="105:51"><name pos:start="105:9" pos:end="105:20">error_report</name><argument_list pos:start="105:21" pos:end="105:51">(<argument pos:start="105:22" pos:end="105:44"><expr pos:start="105:22" pos:end="105:44"><literal type="string" pos:start="105:22" pos:end="105:44">"error opening pool %s"</literal></expr></argument>, <argument pos:start="105:47" pos:end="105:50"><expr pos:start="105:47" pos:end="105:50"><name pos:start="105:47" pos:end="105:50">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:35"><expr pos:start="107:9" pos:end="107:34"><call pos:start="107:9" pos:end="107:34"><name pos:start="107:9" pos:end="107:22">rados_shutdown</name><argument_list pos:start="107:23" pos:end="107:34">(<argument pos:start="107:24" pos:end="107:33"><expr pos:start="107:24" pos:end="107:33"><name pos:start="107:24" pos:end="107:33"><name pos:start="107:24" pos:end="107:24">s</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:33">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:17">return <expr pos:start="109:16" pos:end="109:16"><name pos:start="109:16" pos:end="109:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:57"><expr pos:start="115:5" pos:end="115:56"><name pos:start="115:5" pos:end="115:5">r</name> <operator pos:start="115:7" pos:end="115:7">=</operator> <call pos:start="115:9" pos:end="115:56"><name pos:start="115:9" pos:end="115:16">rbd_open</name><argument_list pos:start="115:17" pos:end="115:56">(<argument pos:start="115:18" pos:end="115:26"><expr pos:start="115:18" pos:end="115:26"><name pos:start="115:18" pos:end="115:26"><name pos:start="115:18" pos:end="115:18">s</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:26">io_ctx</name></name></expr></argument>, <argument pos:start="115:29" pos:end="115:35"><expr pos:start="115:29" pos:end="115:35"><name pos:start="115:29" pos:end="115:35"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:35">name</name></name></expr></argument>, <argument pos:start="115:38" pos:end="115:46"><expr pos:start="115:38" pos:end="115:46"><operator pos:start="115:38" pos:end="115:38">&amp;</operator><name pos:start="115:39" pos:end="115:46"><name pos:start="115:39" pos:end="115:39">s</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:46">image</name></name></expr></argument>, <argument pos:start="115:49" pos:end="115:55"><expr pos:start="115:49" pos:end="115:55"><name pos:start="115:49" pos:end="115:55"><name pos:start="115:49" pos:end="115:49">s</name><operator pos:start="115:50" pos:end="115:51">-&gt;</operator><name pos:start="115:52" pos:end="115:55">snap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="127:5"><if pos:start="117:5" pos:end="127:5">if <condition pos:start="117:8" pos:end="117:14">(<expr pos:start="117:9" pos:end="117:13"><name pos:start="117:9" pos:end="117:9">r</name> <operator pos:start="117:11" pos:end="117:11">&lt;</operator> <literal type="number" pos:start="117:13" pos:end="117:13">0</literal></expr>)</condition> <block pos:start="117:16" pos:end="127:5">{<block_content pos:start="119:9" pos:end="125:17">

        <expr_stmt pos:start="119:9" pos:end="119:62"><expr pos:start="119:9" pos:end="119:61"><call pos:start="119:9" pos:end="119:61"><name pos:start="119:9" pos:end="119:20">error_report</name><argument_list pos:start="119:21" pos:end="119:61">(<argument pos:start="119:22" pos:end="119:51"><expr pos:start="119:22" pos:end="119:51"><literal type="string" pos:start="119:22" pos:end="119:51">"error reading header from %s"</literal></expr></argument>, <argument pos:start="119:54" pos:end="119:60"><expr pos:start="119:54" pos:end="119:60"><name pos:start="119:54" pos:end="119:60"><name pos:start="119:54" pos:end="119:54">s</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:60">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:39"><expr pos:start="121:9" pos:end="121:38"><call pos:start="121:9" pos:end="121:38"><name pos:start="121:9" pos:end="121:27">rados_ioctx_destroy</name><argument_list pos:start="121:28" pos:end="121:38">(<argument pos:start="121:29" pos:end="121:37"><expr pos:start="121:29" pos:end="121:37"><name pos:start="121:29" pos:end="121:37"><name pos:start="121:29" pos:end="121:29">s</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:37">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:35"><expr pos:start="123:9" pos:end="123:34"><call pos:start="123:9" pos:end="123:34"><name pos:start="123:9" pos:end="123:22">rados_shutdown</name><argument_list pos:start="123:23" pos:end="123:34">(<argument pos:start="123:24" pos:end="123:33"><expr pos:start="123:24" pos:end="123:33"><name pos:start="123:24" pos:end="123:33"><name pos:start="123:24" pos:end="123:24">s</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:33">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="125:9" pos:end="125:17">return <expr pos:start="125:16" pos:end="125:16"><name pos:start="125:16" pos:end="125:16">r</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:38"><expr pos:start="131:5" pos:end="131:37"><name pos:start="131:5" pos:end="131:17"><name pos:start="131:5" pos:end="131:6">bs</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:17">read_only</name></name> <operator pos:start="131:19" pos:end="131:19">=</operator> <operator pos:start="131:21" pos:end="131:21">(</operator><name pos:start="131:22" pos:end="131:28"><name pos:start="131:22" pos:end="131:22">s</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:28">snap</name></name> <operator pos:start="131:30" pos:end="131:31">!=</operator> <name pos:start="131:33" pos:end="131:36">NULL</name><operator pos:start="131:37" pos:end="131:37">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:28"><expr pos:start="135:5" pos:end="135:27"><name pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:23">event_reader_pos</name></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <literal type="number" pos:start="135:27" pos:end="135:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:26"><expr pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:5">r</name> <operator pos:start="137:7" pos:end="137:7">=</operator> <call pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:17">qemu_pipe</name><argument_list pos:start="137:18" pos:end="137:25">(<argument pos:start="137:19" pos:end="137:24"><expr pos:start="137:19" pos:end="137:24"><name pos:start="137:19" pos:end="137:24"><name pos:start="137:19" pos:end="137:19">s</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:24">fds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:14">(<expr pos:start="139:9" pos:end="139:13"><name pos:start="139:9" pos:end="139:9">r</name> <operator pos:start="139:11" pos:end="139:11">&lt;</operator> <literal type="number" pos:start="139:13" pos:end="139:13">0</literal></expr>)</condition> <block pos:start="139:16" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:20">

        <expr_stmt pos:start="141:9" pos:end="141:46"><expr pos:start="141:9" pos:end="141:45"><call pos:start="141:9" pos:end="141:45"><name pos:start="141:9" pos:end="141:20">error_report</name><argument_list pos:start="141:21" pos:end="141:45">(<argument pos:start="141:22" pos:end="141:44"><expr pos:start="141:22" pos:end="141:44"><literal type="string" pos:start="141:22" pos:end="141:44">"error opening eventfd"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:20">goto <name pos:start="143:14" pos:end="143:19">failed</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:42"><expr pos:start="147:5" pos:end="147:41"><call pos:start="147:5" pos:end="147:41"><name pos:start="147:5" pos:end="147:9">fcntl</name><argument_list pos:start="147:10" pos:end="147:41">(<argument pos:start="147:11" pos:end="147:19"><expr pos:start="147:11" pos:end="147:19"><name pos:start="147:11" pos:end="147:19"><name pos:start="147:11" pos:end="147:11">s</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:16">fds</name><index pos:start="147:17" pos:end="147:19">[<expr pos:start="147:18" pos:end="147:18"><literal type="number" pos:start="147:18" pos:end="147:18">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:22" pos:end="147:28"><expr pos:start="147:22" pos:end="147:28"><name pos:start="147:22" pos:end="147:28">F_SETFL</name></expr></argument>, <argument pos:start="147:31" pos:end="147:40"><expr pos:start="147:31" pos:end="147:40"><name pos:start="147:31" pos:end="147:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:42"><expr pos:start="149:5" pos:end="149:41"><call pos:start="149:5" pos:end="149:41"><name pos:start="149:5" pos:end="149:9">fcntl</name><argument_list pos:start="149:10" pos:end="149:41">(<argument pos:start="149:11" pos:end="149:19"><expr pos:start="149:11" pos:end="149:19"><name pos:start="149:11" pos:end="149:19"><name pos:start="149:11" pos:end="149:11">s</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:16">fds</name><index pos:start="149:17" pos:end="149:19">[<expr pos:start="149:18" pos:end="149:18"><literal type="number" pos:start="149:18" pos:end="149:18">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="149:22" pos:end="149:28"><expr pos:start="149:22" pos:end="149:28"><name pos:start="149:22" pos:end="149:28">F_SETFL</name></expr></argument>, <argument pos:start="149:31" pos:end="149:40"><expr pos:start="149:31" pos:end="149:40"><name pos:start="149:31" pos:end="149:40">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="153:66"><expr pos:start="151:5" pos:end="153:65"><call pos:start="151:5" pos:end="153:65"><name pos:start="151:5" pos:end="151:27">qemu_aio_set_fd_handler</name><argument_list pos:start="151:28" pos:end="153:65">(<argument pos:start="151:29" pos:end="151:47"><expr pos:start="151:29" pos:end="151:47"><name pos:start="151:29" pos:end="151:47"><name pos:start="151:29" pos:end="151:29">s</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:34">fds</name><index pos:start="151:35" pos:end="151:47">[<expr pos:start="151:36" pos:end="151:46"><name pos:start="151:36" pos:end="151:46">RBD_FD_READ</name></expr>]</index></name></expr></argument>, <argument pos:start="151:50" pos:end="151:74"><expr pos:start="151:50" pos:end="151:74"><name pos:start="151:50" pos:end="151:74">qemu_rbd_aio_event_reader</name></expr></argument>,

                            <argument pos:start="153:29" pos:end="153:32"><expr pos:start="153:29" pos:end="153:32"><name pos:start="153:29" pos:end="153:32">NULL</name></expr></argument>, <argument pos:start="153:35" pos:end="153:55"><expr pos:start="153:35" pos:end="153:55"><name pos:start="153:35" pos:end="153:55">qemu_rbd_aio_flush_cb</name></expr></argument>, <argument pos:start="153:58" pos:end="153:61"><expr pos:start="153:58" pos:end="153:61"><name pos:start="153:58" pos:end="153:61">NULL</name></expr></argument>, <argument pos:start="153:64" pos:end="153:64"><expr pos:start="153:64" pos:end="153:64"><name pos:start="153:64" pos:end="153:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <return pos:start="159:5" pos:end="159:13">return <expr pos:start="159:12" pos:end="159:12"><literal type="number" pos:start="159:12" pos:end="159:12">0</literal></expr>;</return>



<label pos:start="163:1" pos:end="163:7"><name pos:start="163:1" pos:end="163:6">failed</name>:</label>

    <expr_stmt pos:start="165:5" pos:end="165:24"><expr pos:start="165:5" pos:end="165:23"><call pos:start="165:5" pos:end="165:23"><name pos:start="165:5" pos:end="165:13">rbd_close</name><argument_list pos:start="165:14" pos:end="165:23">(<argument pos:start="165:15" pos:end="165:22"><expr pos:start="165:15" pos:end="165:22"><name pos:start="165:15" pos:end="165:22"><name pos:start="165:15" pos:end="165:15">s</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:22">image</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:35"><expr pos:start="167:5" pos:end="167:34"><call pos:start="167:5" pos:end="167:34"><name pos:start="167:5" pos:end="167:23">rados_ioctx_destroy</name><argument_list pos:start="167:24" pos:end="167:34">(<argument pos:start="167:25" pos:end="167:33"><expr pos:start="167:25" pos:end="167:33"><name pos:start="167:25" pos:end="167:33"><name pos:start="167:25" pos:end="167:25">s</name><operator pos:start="167:26" pos:end="167:27">-&gt;</operator><name pos:start="167:28" pos:end="167:33">io_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:31"><expr pos:start="169:5" pos:end="169:30"><call pos:start="169:5" pos:end="169:30"><name pos:start="169:5" pos:end="169:18">rados_shutdown</name><argument_list pos:start="169:19" pos:end="169:30">(<argument pos:start="169:20" pos:end="169:29"><expr pos:start="169:20" pos:end="169:29"><name pos:start="169:20" pos:end="169:29"><name pos:start="169:20" pos:end="169:20">s</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:29">cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="171:5" pos:end="171:13">return <expr pos:start="171:12" pos:end="171:12"><name pos:start="171:12" pos:end="171:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
