<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11285.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">av_packet_unpack_dictionary</name><parameter_list pos:start="1:32" pos:end="1:83">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:45">uint8_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">data</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:61"><decl pos:start="1:54" pos:end="1:61"><type pos:start="1:54" pos:end="1:61"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:61">size</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:82"><decl pos:start="1:64" pos:end="1:82"><type pos:start="1:64" pos:end="1:82"><name pos:start="1:64" pos:end="1:75">AVDictionary</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier><modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:82">dict</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">end</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:29">data</name> <operator pos:start="5:31" pos:end="5:31">+</operator> <name pos:start="5:33" pos:end="5:36">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:19"><if pos:start="11:5" pos:end="13:19">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:13">dict</name> <operator pos:start="11:15" pos:end="11:16">||</operator> <operator pos:start="11:18" pos:end="11:18">!</operator><name pos:start="11:19" pos:end="11:22">data</name> <operator pos:start="11:24" pos:end="11:25">||</operator> <operator pos:start="11:27" pos:end="11:27">!</operator><name pos:start="11:28" pos:end="11:31">size</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:19"><block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="15:5" pos:end="17:35"><if pos:start="15:5" pos:end="17:35">if <condition pos:start="15:8" pos:end="15:24">(<expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:12">size</name> <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <name pos:start="15:17" pos:end="15:23"><name pos:start="15:17" pos:end="15:19">end</name><index pos:start="15:20" pos:end="15:23">[<expr pos:start="15:21" pos:end="15:22"><operator pos:start="15:21" pos:end="15:21">-</operator><literal type="number" pos:start="15:22" pos:end="15:22">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:35"><block_content pos:start="17:9" pos:end="17:35">

        <return pos:start="17:9" pos:end="17:35">return <expr pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <while pos:start="19:5" pos:end="41:5">while <condition pos:start="19:11" pos:end="19:22">(<expr pos:start="19:12" pos:end="19:21"><name pos:start="19:12" pos:end="19:15">data</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <name pos:start="19:19" pos:end="19:21">end</name></expr>)</condition> <block pos:start="19:24" pos:end="41:5">{<block_content pos:start="21:9" pos:end="39:37">

        <decl_stmt pos:start="21:9" pos:end="21:34"><decl pos:start="21:9" pos:end="21:33"><type pos:start="21:9" pos:end="21:23"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:21">uint8_t</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:26">key</name> <init pos:start="21:28" pos:end="21:33">= <expr pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:33">data</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:52"><decl pos:start="23:9" pos:end="23:51"><type pos:start="23:9" pos:end="23:23"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:21">uint8_t</name> <modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:26">val</name> <init pos:start="23:28" pos:end="23:51">= <expr pos:start="23:30" pos:end="23:51"><name pos:start="23:30" pos:end="23:33">data</name> <operator pos:start="23:35" pos:end="23:35">+</operator> <call pos:start="23:37" pos:end="23:47"><name pos:start="23:37" pos:end="23:42">strlen</name><argument_list pos:start="23:43" pos:end="23:47">(<argument pos:start="23:44" pos:end="23:46"><expr pos:start="23:44" pos:end="23:46"><name pos:start="23:44" pos:end="23:46">key</name></expr></argument>)</argument_list></call> <operator pos:start="23:49" pos:end="23:49">+</operator> <literal type="number" pos:start="23:51" pos:end="23:51">1</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="27:9" pos:end="29:39"><if pos:start="27:9" pos:end="29:39">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">val</name> <operator pos:start="27:17" pos:end="27:18">&gt;=</operator> <name pos:start="27:20" pos:end="27:22">end</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:39"><block_content pos:start="29:13" pos:end="29:39">

            <return pos:start="29:13" pos:end="29:39">return <expr pos:start="29:20" pos:end="29:38"><name pos:start="29:20" pos:end="29:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:44"><name pos:start="33:15" pos:end="33:25">av_dict_set</name><argument_list pos:start="33:26" pos:end="33:44">(<argument pos:start="33:27" pos:end="33:30"><expr pos:start="33:27" pos:end="33:30"><name pos:start="33:27" pos:end="33:30">dict</name></expr></argument>, <argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">key</name></expr></argument>, <argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">val</name></expr></argument>, <argument pos:start="33:43" pos:end="33:43"><expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:20">(<expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:37"><expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:12">data</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:18">val</name> <operator pos:start="39:20" pos:end="39:20">+</operator> <call pos:start="39:22" pos:end="39:32"><name pos:start="39:22" pos:end="39:27">strlen</name><argument_list pos:start="39:28" pos:end="39:32">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">val</name></expr></argument>)</argument_list></call> <operator pos:start="39:34" pos:end="39:34">+</operator> <literal type="number" pos:start="39:36" pos:end="39:36">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="45:5" pos:end="45:15">return <expr pos:start="45:12" pos:end="45:14"><name pos:start="45:12" pos:end="45:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
