<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24782.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">context_init</name><parameter_list pos:start="1:24" pos:end="1:39">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:35">H264Context</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">h</name></decl></parameter>)</parameter_list><block pos:start="1:40" pos:end="27:1">{<block_content pos:start="3:5" pos:end="25:14">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>



    <macro pos:start="7:5" pos:end="7:81"><name pos:start="7:5" pos:end="7:18">CHECKED_ALLOCZ</name><argument_list pos:start="7:19" pos:end="7:81">(<argument pos:start="7:20" pos:end="7:36">h-&gt;top_borders[<literal type="number" pos:start="7:35" pos:end="7:35">0</literal>]</argument>, <argument pos:start="7:39" pos:end="7:80">h-&gt;s.mb_width * (<literal type="number" pos:start="7:56" pos:end="7:58">16</literal>+<literal type="number" pos:start="7:59" pos:end="7:60">8</literal>+<literal type="number" pos:start="7:61" pos:end="7:61">8</literal>) * sizeof(uint8_t)</argument>)</argument_list></macro>

    <macro pos:start="9:5" pos:end="9:81"><name pos:start="9:5" pos:end="9:18">CHECKED_ALLOCZ</name><argument_list pos:start="9:19" pos:end="9:81">(<argument pos:start="9:20" pos:end="9:36">h-&gt;top_borders[<literal type="number" pos:start="9:35" pos:end="9:35">1</literal>]</argument>, <argument pos:start="9:39" pos:end="9:80">h-&gt;s.mb_width * (<literal type="number" pos:start="9:56" pos:end="9:58">16</literal>+<literal type="number" pos:start="9:59" pos:end="9:60">8</literal>+<literal type="number" pos:start="9:61" pos:end="9:61">8</literal>) * sizeof(uint8_t)</argument>)</argument_list></macro>



    <comment type="line" pos:start="13:5" pos:end="13:89">// edge emu needs blocksize + filter length - 1 (=17x17 for halfpel / 21x21 for h264)</comment>

    <expr_stmt pos:start="15:5" pos:end="17:41"><expr pos:start="15:5" pos:end="17:40"><call pos:start="15:5" pos:end="17:40"><name pos:start="15:5" pos:end="15:18">CHECKED_ALLOCZ</name><argument_list pos:start="15:19" pos:end="17:40">(<argument pos:start="15:20" pos:end="15:47"><expr pos:start="15:20" pos:end="15:47"><name pos:start="15:20" pos:end="15:47"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:47">allocated_edge_emu_buffer</name></name></expr></argument>,

                   <argument pos:start="17:20" pos:end="17:39"><expr pos:start="17:20" pos:end="17:39"><operator pos:start="17:20" pos:end="17:20">(</operator><name pos:start="17:21" pos:end="17:28"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:28">width</name></name><operator pos:start="17:29" pos:end="17:29">+</operator><literal type="number" pos:start="17:30" pos:end="17:31">64</literal><operator pos:start="17:32" pos:end="17:32">)</operator><operator pos:start="17:33" pos:end="17:33">*</operator><literal type="number" pos:start="17:34" pos:end="17:34">2</literal><operator pos:start="17:35" pos:end="17:35">*</operator><literal type="number" pos:start="17:36" pos:end="17:37">21</literal><operator pos:start="17:38" pos:end="17:38">*</operator><literal type="number" pos:start="17:39" pos:end="17:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="17:43" pos:end="17:94">//(width + edge + align)*interlaced*MBsize*tolerance</comment>

    <expr_stmt pos:start="19:5" pos:end="19:74"><expr pos:start="19:5" pos:end="19:73"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:22">edge_emu_buffer</name></name><operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:52"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:52">allocated_edge_emu_buffer</name></name> <operator pos:start="19:54" pos:end="19:54">+</operator> <operator pos:start="19:56" pos:end="19:56">(</operator><name pos:start="19:57" pos:end="19:64"><name pos:start="19:57" pos:end="19:57">s</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:64">width</name></name><operator pos:start="19:65" pos:end="19:65">+</operator><literal type="number" pos:start="19:66" pos:end="19:67">64</literal><operator pos:start="19:68" pos:end="19:68">)</operator><operator pos:start="19:69" pos:end="19:69">*</operator><literal type="number" pos:start="19:70" pos:end="19:70">2</literal><operator pos:start="19:71" pos:end="19:71">*</operator><literal type="number" pos:start="19:72" pos:end="19:73">21</literal></expr>;</expr_stmt>

    <return pos:start="21:5" pos:end="21:13">return <expr pos:start="21:12" pos:end="21:12"><literal type="number" pos:start="21:12" pos:end="21:12">0</literal></expr>;</return>

<label pos:start="23:1" pos:end="23:5"><name pos:start="23:1" pos:end="23:4">fail</name>:</label>

    <return pos:start="25:5" pos:end="25:14">return <expr pos:start="25:12" pos:end="25:13"><operator pos:start="25:12" pos:end="25:12">-</operator><literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr>;</return> <comment type="line" pos:start="25:16" pos:end="25:50">// free_tables will clean up for us</comment>

</block_content>}</block></function>
</unit>
