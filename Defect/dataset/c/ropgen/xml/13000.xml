<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13000.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">virtio_net_set_features</name><parameter_list pos:start="1:36" pos:end="1:74">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:48">VirtIODevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">vdev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:73"><decl pos:start="1:57" pos:end="1:73"><type pos:start="1:57" pos:end="1:73"><name pos:start="1:57" pos:end="1:64">uint64_t</name></type> <name pos:start="1:66" pos:end="1:73">features</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:35">= <expr pos:start="5:20" pos:end="5:35"><call pos:start="5:20" pos:end="5:35"><name pos:start="5:20" pos:end="5:29">VIRTIO_NET</name><argument_list pos:start="5:30" pos:end="5:35">(<argument pos:start="5:31" pos:end="5:34"><expr pos:start="5:31" pos:end="5:34"><name pos:start="5:31" pos:end="5:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:79"><expr pos:start="11:5" pos:end="13:78"><call pos:start="11:5" pos:end="13:78"><name pos:start="11:5" pos:end="11:29">virtio_net_set_multiqueue</name><argument_list pos:start="11:30" pos:end="13:78">(<argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><name pos:start="11:31" pos:end="11:31">n</name></expr></argument>,

                              <argument pos:start="13:31" pos:end="13:77"><expr pos:start="13:31" pos:end="13:77"><call pos:start="13:31" pos:end="13:77"><name pos:start="13:31" pos:end="13:50">__virtio_has_feature</name><argument_list pos:start="13:51" pos:end="13:77">(<argument pos:start="13:52" pos:end="13:59"><expr pos:start="13:52" pos:end="13:59"><name pos:start="13:52" pos:end="13:59">features</name></expr></argument>, <argument pos:start="13:62" pos:end="13:76"><expr pos:start="13:62" pos:end="13:76"><name pos:start="13:62" pos:end="13:76">VIRTIO_NET_F_MQ</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="25:73"><expr pos:start="17:5" pos:end="25:72"><call pos:start="17:5" pos:end="25:72"><name pos:start="17:5" pos:end="17:30">virtio_net_set_mrg_rx_bufs</name><argument_list pos:start="17:31" pos:end="25:72">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">n</name></expr></argument>,

                               <argument pos:start="19:32" pos:end="21:75"><expr pos:start="19:32" pos:end="21:75"><call pos:start="19:32" pos:end="21:75"><name pos:start="19:32" pos:end="19:51">__virtio_has_feature</name><argument_list pos:start="19:52" pos:end="21:75">(<argument pos:start="19:53" pos:end="19:60"><expr pos:start="19:53" pos:end="19:60"><name pos:start="19:53" pos:end="19:60">features</name></expr></argument>,

                                                    <argument pos:start="21:53" pos:end="21:74"><expr pos:start="21:53" pos:end="21:74"><name pos:start="21:53" pos:end="21:74">VIRTIO_NET_F_MRG_RXBUF</name></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="23:32" pos:end="25:71"><expr pos:start="23:32" pos:end="25:71"><call pos:start="23:32" pos:end="25:71"><name pos:start="23:32" pos:end="23:51">__virtio_has_feature</name><argument_list pos:start="23:52" pos:end="25:71">(<argument pos:start="23:53" pos:end="23:60"><expr pos:start="23:53" pos:end="23:60"><name pos:start="23:53" pos:end="23:60">features</name></expr></argument>,

                                                    <argument pos:start="25:53" pos:end="25:70"><expr pos:start="25:53" pos:end="25:70"><name pos:start="25:53" pos:end="25:70">VIRTIO_F_VERSION_1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:24">(<expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">n</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:23">has_vnet_hdr</name></name></expr>)</condition> <block pos:start="29:26" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:43">

        <expr_stmt pos:start="31:9" pos:end="33:60"><expr pos:start="31:9" pos:end="33:59"><name pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:9">n</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:30">curr_guest_offloads</name></name> <operator pos:start="31:32" pos:end="31:32">=</operator>

            <call pos:start="33:13" pos:end="33:59"><name pos:start="33:13" pos:end="33:49">virtio_net_guest_offloads_by_features</name><argument_list pos:start="33:50" pos:end="33:59">(<argument pos:start="33:51" pos:end="33:58"><expr pos:start="33:51" pos:end="33:58"><name pos:start="33:51" pos:end="33:58">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:39">virtio_net_apply_guest_offloads</name><argument_list pos:start="35:40" pos:end="35:42">(<argument pos:start="35:41" pos:end="35:41"><expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="41:5" pos:end="55:5">for <control pos:start="41:9" pos:end="41:40">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init>  <condition pos:start="41:18" pos:end="41:35"><expr pos:start="41:18" pos:end="41:34"><name pos:start="41:18" pos:end="41:18">i</name> <operator pos:start="41:20" pos:end="41:20">&lt;</operator> <name pos:start="41:22" pos:end="41:34"><name pos:start="41:22" pos:end="41:22">n</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:34">max_queues</name></name></expr>;</condition> <incr pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:37">i</name><operator pos:start="41:38" pos:end="41:39">++</operator></expr></incr>)</control> <block pos:start="41:42" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:66">

        <decl_stmt pos:start="43:9" pos:end="43:58"><decl pos:start="43:9" pos:end="43:57"><type pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:22">NetClientState</name> <modifier pos:start="43:24" pos:end="43:24">*</modifier></type><name pos:start="43:25" pos:end="43:26">nc</name> <init pos:start="43:28" pos:end="43:57">= <expr pos:start="43:30" pos:end="43:57"><call pos:start="43:30" pos:end="43:57"><name pos:start="43:30" pos:end="43:46">qemu_get_subqueue</name><argument_list pos:start="43:47" pos:end="43:57">(<argument pos:start="43:48" pos:end="43:53"><expr pos:start="43:48" pos:end="43:53"><name pos:start="43:48" pos:end="43:53"><name pos:start="43:48" pos:end="43:48">n</name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:53">nic</name></name></expr></argument>, <argument pos:start="43:56" pos:end="43:56"><expr pos:start="43:56" pos:end="43:56"><name pos:start="43:56" pos:end="43:56">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:37">(<expr pos:start="47:13" pos:end="47:36"><operator pos:start="47:13" pos:end="47:13">!</operator><call pos:start="47:14" pos:end="47:36"><name pos:start="47:14" pos:end="47:26">get_vhost_net</name><argument_list pos:start="47:27" pos:end="47:36">(<argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:29">nc</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:35">peer</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:39" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:21">

            <continue pos:start="49:13" pos:end="49:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:66"><expr pos:start="53:9" pos:end="53:65"><call pos:start="53:9" pos:end="53:65"><name pos:start="53:9" pos:end="53:30">vhost_net_ack_features</name><argument_list pos:start="53:31" pos:end="53:65">(<argument pos:start="53:32" pos:end="53:54"><expr pos:start="53:32" pos:end="53:54"><call pos:start="53:32" pos:end="53:54"><name pos:start="53:32" pos:end="53:44">get_vhost_net</name><argument_list pos:start="53:45" pos:end="53:54">(<argument pos:start="53:46" pos:end="53:53"><expr pos:start="53:46" pos:end="53:53"><name pos:start="53:46" pos:end="53:53"><name pos:start="53:46" pos:end="53:47">nc</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:53">peer</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:57" pos:end="53:64"><expr pos:start="53:57" pos:end="53:64"><name pos:start="53:57" pos:end="53:64">features</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:63">(<expr pos:start="59:9" pos:end="59:62"><call pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:28">__virtio_has_feature</name><argument_list pos:start="59:29" pos:end="59:62">(<argument pos:start="59:30" pos:end="59:37"><expr pos:start="59:30" pos:end="59:37"><name pos:start="59:30" pos:end="59:37">features</name></expr></argument>, <argument pos:start="59:40" pos:end="59:61"><expr pos:start="59:40" pos:end="59:61"><name pos:start="59:40" pos:end="59:61">VIRTIO_NET_F_CTRL_VLAN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:65" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:43">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><call pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:14">memset</name><argument_list pos:start="61:15" pos:end="61:42">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:16">n</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:23">vlans</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr></argument>, <argument pos:start="61:29" pos:end="61:41"><expr pos:start="61:29" pos:end="61:41"><name pos:start="61:29" pos:end="61:36">MAX_VLAN</name> <operator pos:start="61:38" pos:end="61:39">&gt;&gt;</operator> <literal type="number" pos:start="61:41" pos:end="61:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="67:5">else <block pos:start="63:12" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:46">

        <expr_stmt pos:start="65:9" pos:end="65:46"><expr pos:start="65:9" pos:end="65:45"><call pos:start="65:9" pos:end="65:45"><name pos:start="65:9" pos:end="65:14">memset</name><argument_list pos:start="65:15" pos:end="65:45">(<argument pos:start="65:16" pos:end="65:23"><expr pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:23"><name pos:start="65:16" pos:end="65:16">n</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:23">vlans</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><literal type="number" pos:start="65:26" pos:end="65:29">0xff</literal></expr></argument>, <argument pos:start="65:32" pos:end="65:44"><expr pos:start="65:32" pos:end="65:44"><name pos:start="65:32" pos:end="65:39">MAX_VLAN</name> <operator pos:start="65:41" pos:end="65:42">&gt;&gt;</operator> <literal type="number" pos:start="65:44" pos:end="65:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
