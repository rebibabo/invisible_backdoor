<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/175.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">virtser_port_qdev_init</name><parameter_list pos:start="1:34" pos:end="1:70">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">qdev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:63">DeviceInfo</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">base</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:15">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtIOSerialPort</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">port</name> <init pos:start="5:28" pos:end="5:67">= <expr pos:start="5:30" pos:end="5:67"><call pos:start="5:30" pos:end="5:67"><name pos:start="5:30" pos:end="5:38">DO_UPCAST</name><argument_list pos:start="5:39" pos:end="5:67">(<argument pos:start="5:40" pos:end="5:55"><expr pos:start="5:40" pos:end="5:55"><name pos:start="5:40" pos:end="5:55">VirtIOSerialPort</name></expr></argument>, <argument pos:start="5:58" pos:end="5:60"><expr pos:start="5:58" pos:end="5:60"><name pos:start="5:58" pos:end="5:60">dev</name></expr></argument>, <argument pos:start="5:63" pos:end="5:66"><expr pos:start="5:63" pos:end="5:66"><name pos:start="5:63" pos:end="5:66">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:77"><decl pos:start="7:5" pos:end="7:76"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">VirtIOSerialPortInfo</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:30">info</name> <init pos:start="7:32" pos:end="7:76">= <expr pos:start="7:34" pos:end="7:76"><call pos:start="7:34" pos:end="7:76"><name pos:start="7:34" pos:end="7:42">DO_UPCAST</name><argument_list pos:start="7:43" pos:end="7:76">(<argument pos:start="7:44" pos:end="7:63"><expr pos:start="7:44" pos:end="7:63"><name pos:start="7:44" pos:end="7:63">VirtIOSerialPortInfo</name></expr></argument>, <argument pos:start="7:66" pos:end="7:69"><expr pos:start="7:66" pos:end="7:69"><name pos:start="7:66" pos:end="7:69">qdev</name></expr></argument>, <argument pos:start="7:72" pos:end="7:75"><expr pos:start="7:72" pos:end="7:75"><name pos:start="7:72" pos:end="7:75">base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:78"><decl pos:start="9:5" pos:end="9:77"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">VirtIOSerialBus</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">bus</name> <init pos:start="9:26" pos:end="9:77">= <expr pos:start="9:28" pos:end="9:77"><call pos:start="9:28" pos:end="9:77"><name pos:start="9:28" pos:end="9:36">DO_UPCAST</name><argument_list pos:start="9:37" pos:end="9:77">(<argument pos:start="9:38" pos:end="9:52"><expr pos:start="9:38" pos:end="9:52"><name pos:start="9:38" pos:end="9:52">VirtIOSerialBus</name></expr></argument>, <argument pos:start="9:55" pos:end="9:58"><expr pos:start="9:55" pos:end="9:58"><name pos:start="9:55" pos:end="9:58">qbus</name></expr></argument>, <argument pos:start="9:61" pos:end="9:76"><expr pos:start="9:61" pos:end="9:76"><name pos:start="9:61" pos:end="9:76"><name pos:start="9:61" pos:end="9:64">qdev</name><operator pos:start="9:65" pos:end="9:66">-&gt;</operator><name pos:start="9:67" pos:end="9:76">parent_bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:25">max_nr_ports</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:23">plugging_port0</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:8">port</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:14">vser</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:26"><name pos:start="17:18" pos:end="17:20">bus</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">vser</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:8">port</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:12">bh</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:54"><name pos:start="19:16" pos:end="19:26">qemu_bh_new</name><argument_list pos:start="19:27" pos:end="19:54">(<argument pos:start="19:28" pos:end="19:47"><expr pos:start="19:28" pos:end="19:47"><name pos:start="19:28" pos:end="19:47">flush_queued_data_bh</name></expr></argument>, <argument pos:start="19:50" pos:end="19:53"><expr pos:start="19:50" pos:end="19:53"><name pos:start="19:50" pos:end="19:53">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="31:7">/*

     * Is the first console port we're seeing? If so, put it up at

     * location 0. This is done for backward compatibility (old

     * kernel, new qemu).

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:73"><expr pos:start="33:5" pos:end="33:72"><name pos:start="33:5" pos:end="33:18">plugging_port0</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:37"><name pos:start="33:22" pos:end="33:25">port</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">is_console</name></name> <operator pos:start="33:39" pos:end="33:40">&amp;&amp;</operator> <operator pos:start="33:42" pos:end="33:42">!</operator><call pos:start="33:43" pos:end="33:72"><name pos:start="33:43" pos:end="33:57">find_port_by_id</name><argument_list pos:start="33:58" pos:end="33:72">(<argument pos:start="33:59" pos:end="33:68"><expr pos:start="33:59" pos:end="33:68"><name pos:start="33:59" pos:end="33:68"><name pos:start="33:59" pos:end="33:62">port</name><operator pos:start="33:63" pos:end="33:64">-&gt;</operator><name pos:start="33:65" pos:end="33:68">vser</name></name></expr></argument>, <argument pos:start="33:71" pos:end="33:71"><expr pos:start="33:71" pos:end="33:71"><literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:46">(<expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:23">find_port_by_id</name><argument_list pos:start="37:24" pos:end="37:45">(<argument pos:start="37:25" pos:end="37:34"><expr pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:28">port</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:34">vser</name></name></expr></argument>, <argument pos:start="37:37" pos:end="37:44"><expr pos:start="37:37" pos:end="37:44"><name pos:start="37:37" pos:end="37:44"><name pos:start="37:37" pos:end="37:40">port</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:44">id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:48" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:18">

        <expr_stmt pos:start="39:9" pos:end="41:31"><expr pos:start="39:9" pos:end="41:30"><call pos:start="39:9" pos:end="41:30"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="41:30">(<argument pos:start="39:22" pos:end="39:74"><expr pos:start="39:22" pos:end="39:74"><literal type="string" pos:start="39:22" pos:end="39:74">"virtio-serial-bus: A port already exists at id %u\n"</literal></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:25">port</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="69:5"><if pos:start="49:5" pos:end="69:5">if <condition pos:start="49:8" pos:end="49:42">(<expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:12">port</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:16">id</name></name> <operator pos:start="49:18" pos:end="49:19">==</operator> <name pos:start="49:21" pos:end="49:41">VIRTIO_CONSOLE_BAD_ID</name></expr>)</condition> <block pos:start="49:44" pos:end="69:5">{<block_content pos:start="51:9" pos:end="67:9">

        <if_stmt pos:start="51:9" pos:end="67:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:26">plugging_port0</name></expr>)</condition> <block pos:start="51:29" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:25">

            <expr_stmt pos:start="53:13" pos:end="53:25"><expr pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:16">port</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:20">id</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="67:9">else <block pos:start="55:16" pos:end="67:9">{<block_content pos:start="57:13" pos:end="65:13">

            <expr_stmt pos:start="57:13" pos:end="57:53"><expr pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:16">port</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:20">id</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:52"><name pos:start="57:24" pos:end="57:40">find_free_port_id</name><argument_list pos:start="57:41" pos:end="57:52">(<argument pos:start="57:42" pos:end="57:51"><expr pos:start="57:42" pos:end="57:51"><name pos:start="57:42" pos:end="57:51"><name pos:start="57:42" pos:end="57:45">port</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:51">vser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="65:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:50">(<expr pos:start="59:17" pos:end="59:49"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:20">port</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:24">id</name></name> <operator pos:start="59:26" pos:end="59:27">==</operator> <name pos:start="59:29" pos:end="59:49">VIRTIO_CONSOLE_BAD_ID</name></expr>)</condition> <block pos:start="59:52" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:26">

                <expr_stmt pos:start="61:17" pos:end="61:96"><expr pos:start="61:17" pos:end="61:95"><call pos:start="61:17" pos:end="61:95"><name pos:start="61:17" pos:end="61:28">error_report</name><argument_list pos:start="61:29" pos:end="61:95">(<argument pos:start="61:30" pos:end="61:94"><expr pos:start="61:30" pos:end="61:94"><literal type="string" pos:start="61:30" pos:end="61:94">"virtio-serial-bus: Maximum port limit for this device reached\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:26">return <expr pos:start="63:24" pos:end="63:25"><operator pos:start="63:24" pos:end="63:24">-</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:60"><expr pos:start="73:5" pos:end="73:59"><name pos:start="73:5" pos:end="73:16">max_nr_ports</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:59"><name pos:start="73:20" pos:end="73:26">tswap32</name><argument_list pos:start="73:27" pos:end="73:59">(<argument pos:start="73:28" pos:end="73:58"><expr pos:start="73:28" pos:end="73:58"><name pos:start="73:28" pos:end="73:58"><name pos:start="73:28" pos:end="73:31">port</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:37">vser</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:45">config</name><operator pos:start="73:46" pos:end="73:46">.</operator><name pos:start="73:47" pos:end="73:58">max_nr_ports</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:33">(<expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:16"><name pos:start="75:9" pos:end="75:12">port</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:16">id</name></name> <operator pos:start="75:18" pos:end="75:19">&gt;=</operator> <name pos:start="75:21" pos:end="75:32">max_nr_ports</name></expr>)</condition> <block pos:start="75:35" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:18">

        <expr_stmt pos:start="77:9" pos:end="79:39"><expr pos:start="77:9" pos:end="79:38"><call pos:start="77:9" pos:end="79:38"><name pos:start="77:9" pos:end="77:20">error_report</name><argument_list pos:start="77:21" pos:end="79:38">(<argument pos:start="77:22" pos:end="77:92"><expr pos:start="77:22" pos:end="77:92"><literal type="string" pos:start="77:22" pos:end="77:92">"virtio-serial-bus: Out-of-range port id specified, max. allowed: %u\n"</literal></expr></argument>,

                     <argument pos:start="79:22" pos:end="79:37"><expr pos:start="79:22" pos:end="79:37"><name pos:start="79:22" pos:end="79:33">max_nr_ports</name> <operator pos:start="79:35" pos:end="79:35">-</operator> <literal type="number" pos:start="79:37" pos:end="79:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:22"><expr pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:14"><name pos:start="87:5" pos:end="87:8">port</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:14">info</name></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <name pos:start="87:18" pos:end="87:21">info</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:7">ret</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <call pos:start="89:11" pos:end="89:26"><name pos:start="89:11" pos:end="89:20"><name pos:start="89:11" pos:end="89:14">info</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:20">init</name></name><argument_list pos:start="89:21" pos:end="89:26">(<argument pos:start="89:22" pos:end="89:25"><expr pos:start="89:22" pos:end="89:25"><name pos:start="89:22" pos:end="89:25">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="95:5"><if pos:start="91:5" pos:end="95:5">if <condition pos:start="91:8" pos:end="91:12">(<expr pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">ret</name></expr>)</condition> <block pos:start="91:14" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:19">

        <return pos:start="93:9" pos:end="93:19">return <expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="111:5"><if pos:start="99:5" pos:end="111:5">if <condition pos:start="99:8" pos:end="99:35">(<expr pos:start="99:9" pos:end="99:34"><operator pos:start="99:9" pos:end="99:9">!</operator><call pos:start="99:10" pos:end="99:34"><name pos:start="99:10" pos:end="99:22">use_multiport</name><argument_list pos:start="99:23" pos:end="99:34">(<argument pos:start="99:24" pos:end="99:33"><expr pos:start="99:24" pos:end="99:33"><name pos:start="99:24" pos:end="99:33"><name pos:start="99:24" pos:end="99:27">port</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:33">vser</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:37" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:37">

        <comment type="block" pos:start="101:9" pos:end="107:11">/*

         * Allow writes to guest in this case; we have no way of

         * knowing if a guest port is connected.

         */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:37"><expr pos:start="109:9" pos:end="109:36"><name pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:12">port</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:29">guest_connected</name></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <name pos:start="109:33" pos:end="109:36">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:27"><expr pos:start="115:5" pos:end="115:26"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:8">port</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:14">elem</name><operator pos:start="115:15" pos:end="115:15">.</operator><name pos:start="115:16" pos:end="115:22">out_num</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="number" pos:start="115:26" pos:end="115:26">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:55"><expr pos:start="119:5" pos:end="119:54"><call pos:start="119:5" pos:end="119:54"><name pos:start="119:5" pos:end="119:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="119:23" pos:end="119:54">(<argument pos:start="119:24" pos:end="119:41"><expr pos:start="119:24" pos:end="119:41"><operator pos:start="119:24" pos:end="119:24">&amp;</operator><name pos:start="119:25" pos:end="119:41"><name pos:start="119:25" pos:end="119:28">port</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:34">vser</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:41">ports</name></name></expr></argument>, <argument pos:start="119:44" pos:end="119:47"><expr pos:start="119:44" pos:end="119:47"><name pos:start="119:44" pos:end="119:47">port</name></expr></argument>, <argument pos:start="119:50" pos:end="119:53"><expr pos:start="119:50" pos:end="119:53"><name pos:start="119:50" pos:end="119:53">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:43"><expr pos:start="121:5" pos:end="121:42"><name pos:start="121:5" pos:end="121:13"><name pos:start="121:5" pos:end="121:8">port</name><operator pos:start="121:9" pos:end="121:10">-&gt;</operator><name pos:start="121:11" pos:end="121:13">ivq</name></name> <operator pos:start="121:15" pos:end="121:15">=</operator> <name pos:start="121:17" pos:end="121:42"><name pos:start="121:17" pos:end="121:20">port</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:26">vser</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:32">ivqs</name><index pos:start="121:33" pos:end="121:42">[<expr pos:start="121:34" pos:end="121:41"><name pos:start="121:34" pos:end="121:41"><name pos:start="121:34" pos:end="121:37">port</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:41">id</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:43"><expr pos:start="123:5" pos:end="123:42"><name pos:start="123:5" pos:end="123:13"><name pos:start="123:5" pos:end="123:8">port</name><operator pos:start="123:9" pos:end="123:10">-&gt;</operator><name pos:start="123:11" pos:end="123:13">ovq</name></name> <operator pos:start="123:15" pos:end="123:15">=</operator> <name pos:start="123:17" pos:end="123:42"><name pos:start="123:17" pos:end="123:20">port</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:26">vser</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:32">ovqs</name><index pos:start="123:33" pos:end="123:42">[<expr pos:start="123:34" pos:end="123:41"><name pos:start="123:34" pos:end="123:41"><name pos:start="123:34" pos:end="123:37">port</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:41">id</name></name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:35"><expr pos:start="127:5" pos:end="127:34"><call pos:start="127:5" pos:end="127:34"><name pos:start="127:5" pos:end="127:12">add_port</name><argument_list pos:start="127:13" pos:end="127:34">(<argument pos:start="127:14" pos:end="127:23"><expr pos:start="127:14" pos:end="127:23"><name pos:start="127:14" pos:end="127:23"><name pos:start="127:14" pos:end="127:17">port</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:23">vser</name></name></expr></argument>, <argument pos:start="127:26" pos:end="127:33"><expr pos:start="127:26" pos:end="127:33"><name pos:start="127:26" pos:end="127:33"><name pos:start="127:26" pos:end="127:29">port</name><operator pos:start="127:30" pos:end="127:31">-&gt;</operator><name pos:start="127:32" pos:end="127:33">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:63">/* Send an update to the guest about this new port added */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:44"><expr pos:start="133:5" pos:end="133:43"><call pos:start="133:5" pos:end="133:43"><name pos:start="133:5" pos:end="133:24">virtio_notify_config</name><argument_list pos:start="133:25" pos:end="133:43">(<argument pos:start="133:26" pos:end="133:42"><expr pos:start="133:26" pos:end="133:42"><operator pos:start="133:26" pos:end="133:26">&amp;</operator><name pos:start="133:27" pos:end="133:42"><name pos:start="133:27" pos:end="133:30">port</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:36">vser</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:42">vdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="137:5" pos:end="137:15">return <expr pos:start="137:12" pos:end="137:14"><name pos:start="137:12" pos:end="137:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
