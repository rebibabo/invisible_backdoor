<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/502.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">char</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:18">desc_get_buf</name><parameter_list pos:start="1:19" pos:end="1:50">(<parameter pos:start="1:20" pos:end="1:33"><decl pos:start="1:20" pos:end="1:33"><type pos:start="1:20" pos:end="1:33"><name pos:start="1:20" pos:end="1:27">DescInfo</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">info</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:39">bool</name></type> <name pos:start="1:41" pos:end="1:49">read_only</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:21">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">dev</name> <init pos:start="5:20" pos:end="5:46">= <expr pos:start="5:22" pos:end="5:46"><call pos:start="5:22" pos:end="5:46"><name pos:start="5:22" pos:end="5:31">PCI_DEVICE</name><argument_list pos:start="5:32" pos:end="5:46">(<argument pos:start="5:33" pos:end="5:45"><expr pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:45"><name pos:start="5:33" pos:end="5:36">info</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:42">ring</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:45">r</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="9:63"><decl pos:start="7:5" pos:end="9:62"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:15">size</name> <init pos:start="7:17" pos:end="9:62">= <expr pos:start="7:19" pos:end="9:62"><ternary pos:start="7:19" pos:end="9:62"><condition pos:start="7:19" pos:end="7:29"><expr pos:start="7:19" pos:end="7:27"><name pos:start="7:19" pos:end="7:27">read_only</name></expr> ?</condition><then pos:start="7:31" pos:end="7:62"> <expr pos:start="7:31" pos:end="7:62"><call pos:start="7:31" pos:end="7:62"><name pos:start="7:31" pos:end="7:41">le16_to_cpu</name><argument_list pos:start="7:42" pos:end="7:62">(<argument pos:start="7:43" pos:end="7:61"><expr pos:start="7:43" pos:end="7:61"><name pos:start="7:43" pos:end="7:61"><name pos:start="7:43" pos:end="7:46">info</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:52">desc</name><operator pos:start="7:53" pos:end="7:53">.</operator><name pos:start="7:54" pos:end="7:61">tlv_size</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="7:64" pos:end="9:62">:

                              <expr pos:start="9:31" pos:end="9:62"><call pos:start="9:31" pos:end="9:62"><name pos:start="9:31" pos:end="9:41">le16_to_cpu</name><argument_list pos:start="9:42" pos:end="9:62">(<argument pos:start="9:43" pos:end="9:61"><expr pos:start="9:43" pos:end="9:61"><name pos:start="9:43" pos:end="9:61"><name pos:start="9:43" pos:end="9:46">info</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:52">desc</name><operator pos:start="9:53" pos:end="9:53">.</operator><name pos:start="9:54" pos:end="9:61">buf_size</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:14">&gt;</operator> <name pos:start="13:16" pos:end="13:29"><name pos:start="13:16" pos:end="13:19">info</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:29">buf_size</name></name></expr>)</condition> <block pos:start="13:32" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:30">

        <expr_stmt pos:start="15:9" pos:end="15:47"><expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">info</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:17">buf</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:46"><name pos:start="15:21" pos:end="15:29">g_realloc</name><argument_list pos:start="15:30" pos:end="15:46">(<argument pos:start="15:31" pos:end="15:39"><expr pos:start="15:31" pos:end="15:39"><name pos:start="15:31" pos:end="15:39"><name pos:start="15:31" pos:end="15:34">info</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:39">buf</name></name></expr></argument>, <argument pos:start="15:42" pos:end="15:45"><expr pos:start="15:42" pos:end="15:45"><name pos:start="15:42" pos:end="15:45">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:30"><expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:12">info</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:22">buf_size</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:29">size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:18"><name pos:start="23:10" pos:end="23:13">info</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:18">buf</name></name></expr>)</condition> <block pos:start="23:21" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:20">

        <return pos:start="25:9" pos:end="25:20">return <expr pos:start="25:16" pos:end="25:19"><name pos:start="25:16" pos:end="25:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:77">(<expr pos:start="31:9" pos:end="31:76"><call pos:start="31:9" pos:end="31:76"><name pos:start="31:9" pos:end="31:20">pci_dma_read</name><argument_list pos:start="31:21" pos:end="31:76">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">dev</name></expr></argument>, <argument pos:start="31:27" pos:end="31:58"><expr pos:start="31:27" pos:end="31:58"><call pos:start="31:27" pos:end="31:58"><name pos:start="31:27" pos:end="31:37">le64_to_cpu</name><argument_list pos:start="31:38" pos:end="31:58">(<argument pos:start="31:39" pos:end="31:57"><expr pos:start="31:39" pos:end="31:57"><name pos:start="31:39" pos:end="31:57"><name pos:start="31:39" pos:end="31:42">info</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:48">desc</name><operator pos:start="31:49" pos:end="31:49">.</operator><name pos:start="31:50" pos:end="31:57">buf_addr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:61" pos:end="31:69"><expr pos:start="31:61" pos:end="31:69"><name pos:start="31:61" pos:end="31:69"><name pos:start="31:61" pos:end="31:64">info</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:69">buf</name></name></expr></argument>, <argument pos:start="31:72" pos:end="31:75"><expr pos:start="31:72" pos:end="31:75"><name pos:start="31:72" pos:end="31:75">size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:79" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:20">

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:21">return <expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:15">info</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:20">buf</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
