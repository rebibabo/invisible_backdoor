<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5644.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">ff_jpegls_init_state</name><parameter_list pos:start="1:26" pos:end="1:42">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:36"><name pos:start="1:27" pos:end="1:34">JLSState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">state</name></decl></parameter>)</parameter_list><block pos:start="1:43" pos:end="39:1">{<block_content pos:start="3:5" pos:end="35:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="7:5" pos:end="7:41"><expr pos:start="7:5" pos:end="7:40"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:9">state</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:18">twonear</name></name> <operator pos:start="7:20" pos:end="7:20">=</operator> <name pos:start="7:22" pos:end="7:32"><name pos:start="7:22" pos:end="7:26">state</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:32">near</name></name> <operator pos:start="7:34" pos:end="7:34">*</operator> <literal type="number" pos:start="7:36" pos:end="7:38">2</literal> <operator pos:start="7:38" pos:end="7:38">+</operator> <literal type="number" pos:start="7:40" pos:end="7:40">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:79"><expr pos:start="9:5" pos:end="9:78"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:9">state</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">range</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <operator pos:start="9:20" pos:end="9:20">(</operator><operator pos:start="9:21" pos:end="9:21">(</operator><name pos:start="9:22" pos:end="9:34"><name pos:start="9:22" pos:end="9:26">state</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">maxval</name></name> <operator pos:start="9:36" pos:end="9:36">+</operator> <name pos:start="9:38" pos:end="9:51"><name pos:start="9:38" pos:end="9:42">state</name><operator pos:start="9:43" pos:end="9:44">-&gt;</operator><name pos:start="9:45" pos:end="9:51">twonear</name></name> <operator pos:start="9:53" pos:end="9:53">-</operator> <literal type="number" pos:start="9:55" pos:end="9:55">1</literal><operator pos:start="9:56" pos:end="9:56">)</operator> <operator pos:start="9:58" pos:end="9:58">/</operator> <name pos:start="9:60" pos:end="9:73"><name pos:start="9:60" pos:end="9:64">state</name><operator pos:start="9:65" pos:end="9:66">-&gt;</operator><name pos:start="9:67" pos:end="9:73">twonear</name></name><operator pos:start="9:74" pos:end="9:74">)</operator> <operator pos:start="9:76" pos:end="9:76">+</operator> <literal type="number" pos:start="9:78" pos:end="9:78">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:31">// QBPP = ceil(log2(RANGE))</comment>

    <for pos:start="15:5" pos:end="15:75">for<control pos:start="15:8" pos:end="15:74">(<init pos:start="15:9" pos:end="15:24"><expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:13">state</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">qbpp</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr>;</init> <condition pos:start="15:26" pos:end="15:59"><expr pos:start="15:26" pos:end="15:58"><operator pos:start="15:26" pos:end="15:26">(</operator><literal type="number" pos:start="15:27" pos:end="15:27">1</literal> <operator pos:start="15:29" pos:end="15:30">&lt;&lt;</operator> <name pos:start="15:32" pos:end="15:42"><name pos:start="15:32" pos:end="15:36">state</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:42">qbpp</name></name><operator pos:start="15:43" pos:end="15:43">)</operator> <operator pos:start="15:45" pos:end="15:45">&lt;</operator> <name pos:start="15:47" pos:end="15:58"><name pos:start="15:47" pos:end="15:51">state</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:58">range</name></name></expr>;</condition> <incr pos:start="15:61" pos:end="15:73"><expr pos:start="15:61" pos:end="15:73"><name pos:start="15:61" pos:end="15:71"><name pos:start="15:61" pos:end="15:65">state</name><operator pos:start="15:66" pos:end="15:67">-&gt;</operator><name pos:start="15:68" pos:end="15:71">qbpp</name></name><operator pos:start="15:72" pos:end="15:73">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:75" pos:end="15:75"><block_content pos:start="15:75" pos:end="15:75"><empty_stmt pos:start="15:75" pos:end="15:75">;</empty_stmt></block_content></block></for>



    <if_stmt pos:start="19:5" pos:end="25:54"><if pos:start="19:5" pos:end="21:57">if<condition pos:start="19:7" pos:end="19:22">(<expr pos:start="19:8" pos:end="19:21"><name pos:start="19:8" pos:end="19:17"><name pos:start="19:8" pos:end="19:12">state</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">bpp</name></name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">8</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:57"><block_content pos:start="21:9" pos:end="21:57">

        <expr_stmt pos:start="21:9" pos:end="21:57"><expr pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:13">state</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:20">limit</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:27">16</literal> <operator pos:start="21:27" pos:end="21:27">+</operator> <literal type="number" pos:start="21:29" pos:end="21:29">2</literal> <operator pos:start="21:31" pos:end="21:31">*</operator> <name pos:start="21:33" pos:end="21:42"><name pos:start="21:33" pos:end="21:37">state</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:42">bpp</name></name> <operator pos:start="21:44" pos:end="21:44">-</operator> <name pos:start="21:46" pos:end="21:56"><name pos:start="21:46" pos:end="21:50">state</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:56">qbpp</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="23:5" pos:end="25:54">else<block type="pseudo" pos:start="25:9" pos:end="25:54"><block_content pos:start="25:9" pos:end="25:54">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:13">state</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">limit</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <operator pos:start="25:24" pos:end="25:24">(</operator><literal type="number" pos:start="25:25" pos:end="25:25">4</literal> <operator pos:start="25:27" pos:end="25:27">*</operator> <name pos:start="25:29" pos:end="25:38"><name pos:start="25:29" pos:end="25:33">state</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:38">bpp</name></name><operator pos:start="25:39" pos:end="25:39">)</operator> <operator pos:start="25:41" pos:end="25:41">-</operator> <name pos:start="25:43" pos:end="25:53"><name pos:start="25:43" pos:end="25:47">state</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:53">qbpp</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <for pos:start="29:5" pos:end="35:5">for<control pos:start="29:8" pos:end="29:28">(<init pos:start="29:9" pos:end="29:14"><expr pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:9">i</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr>;</init> <condition pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:16">i</name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <literal type="number" pos:start="29:20" pos:end="29:22">367</literal></expr>;</condition> <incr pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:25">i</name><operator pos:start="29:26" pos:end="29:27">++</operator></expr></incr>)</control> <block pos:start="29:30" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:24">

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:13">state</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:16">A</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">i</name></expr>]</index></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:56"><name pos:start="31:23" pos:end="31:27">FFMAX</name><argument_list pos:start="31:28" pos:end="31:56">(<argument pos:start="31:29" pos:end="31:52"><expr pos:start="31:29" pos:end="31:52"><operator pos:start="31:29" pos:end="31:29">(</operator><name pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:34">state</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:41">range</name></name> <operator pos:start="31:43" pos:end="31:43">+</operator> <literal type="number" pos:start="31:45" pos:end="31:46">32</literal><operator pos:start="31:47" pos:end="31:47">)</operator> <operator pos:start="31:49" pos:end="31:50">&gt;&gt;</operator> <literal type="number" pos:start="31:52" pos:end="31:52">6</literal></expr></argument>, <argument pos:start="31:55" pos:end="31:55"><expr pos:start="31:55" pos:end="31:55"><literal type="number" pos:start="31:55" pos:end="31:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:13">state</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:16">N</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



</block_content>}</block></function>
</unit>
