<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7691.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">slirp_smb</name><parameter_list pos:start="1:21" pos:end="3:49">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">SlirpState</name><modifier pos:start="1:32" pos:end="1:32">*</modifier></type> <name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:60"><decl pos:start="1:37" pos:end="1:60"><type pos:start="1:37" pos:end="1:60"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:60">exported_dir</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:48"><decl pos:start="3:22" pos:end="3:48"><type pos:start="3:22" pos:end="3:48"><name pos:start="3:22" pos:end="3:35"><name pos:start="3:22" pos:end="3:27">struct</name> <name pos:start="3:29" pos:end="3:35">in_addr</name></name></type> <name pos:start="3:37" pos:end="3:48">vserver_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <name pos:start="7:12" pos:end="7:14">int</name></type> <name pos:start="7:16" pos:end="7:23">instance</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:17">smb_conf</name><index pos:start="9:18" pos:end="9:22">[<expr pos:start="9:19" pos:end="9:21"><literal type="number" pos:start="9:19" pos:end="9:21">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:25"><name pos:start="11:10" pos:end="11:20">smb_cmdline</name><index pos:start="11:21" pos:end="11:25">[<expr pos:start="11:22" pos:end="11:24"><literal type="number" pos:start="11:22" pos:end="11:24">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">FILE</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:11">f</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="19:41"><expr pos:start="17:5" pos:end="19:40"><call pos:start="17:5" pos:end="19:40"><name pos:start="17:5" pos:end="17:12">snprintf</name><argument_list pos:start="17:13" pos:end="19:40">(<argument pos:start="17:14" pos:end="17:23"><expr pos:start="17:14" pos:end="17:23"><name pos:start="17:14" pos:end="17:23"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:23">smb_dir</name></name></expr></argument>, <argument pos:start="17:26" pos:end="17:43"><expr pos:start="17:26" pos:end="17:43"><sizeof pos:start="17:26" pos:end="17:43">sizeof<argument_list pos:start="17:32" pos:end="17:43">(<argument pos:start="17:33" pos:end="17:42"><expr pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:42">smb_dir</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:46" pos:end="17:67"><expr pos:start="17:46" pos:end="17:67"><literal type="string" pos:start="17:46" pos:end="17:67">"/tmp/qemu-smb.%ld-%d"</literal></expr></argument>,

             <argument pos:start="19:14" pos:end="19:27"><expr pos:start="19:14" pos:end="19:27"><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:18">long</name><operator pos:start="19:19" pos:end="19:19">)</operator><call pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:25">getpid</name><argument_list pos:start="19:26" pos:end="19:27">()</argument_list></call></expr></argument>, <argument pos:start="19:30" pos:end="19:39"><expr pos:start="19:30" pos:end="19:39"><name pos:start="19:30" pos:end="19:37">instance</name><operator pos:start="19:38" pos:end="19:39">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:13">mkdir</name><argument_list pos:start="21:14" pos:end="21:31">(<argument pos:start="21:15" pos:end="21:24"><expr pos:start="21:15" pos:end="21:24"><name pos:start="21:15" pos:end="21:24"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:24">smb_dir</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><literal type="number" pos:start="21:27" pos:end="21:30">0700</literal></expr></argument>)</argument_list></call> <operator pos:start="21:33" pos:end="21:33">&lt;</operator> <literal type="number" pos:start="21:35" pos:end="21:35">0</literal></expr>)</condition> <block pos:start="21:38" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:18">

        <expr_stmt pos:start="23:9" pos:end="23:75"><expr pos:start="23:9" pos:end="23:74"><call pos:start="23:9" pos:end="23:74"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="23:74">(<argument pos:start="23:22" pos:end="23:61"><expr pos:start="23:22" pos:end="23:61"><literal type="string" pos:start="23:22" pos:end="23:61">"could not create samba server dir '%s'"</literal></expr></argument>, <argument pos:start="23:64" pos:end="23:73"><expr pos:start="23:64" pos:end="23:73"><name pos:start="23:64" pos:end="23:73"><name pos:start="23:64" pos:end="23:64">s</name><operator pos:start="23:65" pos:end="23:66">-&gt;</operator><name pos:start="23:67" pos:end="23:73">smb_dir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:74"><expr pos:start="29:5" pos:end="29:73"><call pos:start="29:5" pos:end="29:73"><name pos:start="29:5" pos:end="29:12">snprintf</name><argument_list pos:start="29:13" pos:end="29:73">(<argument pos:start="29:14" pos:end="29:21"><expr pos:start="29:14" pos:end="29:21"><name pos:start="29:14" pos:end="29:21">smb_conf</name></expr></argument>, <argument pos:start="29:24" pos:end="29:39"><expr pos:start="29:24" pos:end="29:39"><sizeof pos:start="29:24" pos:end="29:39">sizeof<argument_list pos:start="29:30" pos:end="29:39">(<argument pos:start="29:31" pos:end="29:38"><expr pos:start="29:31" pos:end="29:38"><name pos:start="29:31" pos:end="29:38">smb_conf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:42" pos:end="29:48"><expr pos:start="29:42" pos:end="29:48"><literal type="string" pos:start="29:42" pos:end="29:48">"%s/%s"</literal></expr></argument>, <argument pos:start="29:51" pos:end="29:60"><expr pos:start="29:51" pos:end="29:60"><name pos:start="29:51" pos:end="29:60"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:60">smb_dir</name></name></expr></argument>, <argument pos:start="29:63" pos:end="29:72"><expr pos:start="29:63" pos:end="29:72"><literal type="string" pos:start="29:63" pos:end="29:72">"smb.conf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:5">f</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:13">fopen</name><argument_list pos:start="33:14" pos:end="33:28">(<argument pos:start="33:15" pos:end="33:22"><expr pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:22">smb_conf</name></expr></argument>, <argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><literal type="string" pos:start="33:25" pos:end="33:27">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:11">(<expr pos:start="35:9" pos:end="35:10"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:10">f</name></expr>)</condition> <block pos:start="35:13" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:18">

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><call pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:25">slirp_smb_cleanup</name><argument_list pos:start="37:26" pos:end="37:28">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:31"><expr pos:start="39:9" pos:end="41:30"><call pos:start="39:9" pos:end="41:30"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="41:30">(<argument pos:start="39:22" pos:end="39:76"><expr pos:start="39:22" pos:end="39:76"><literal type="string" pos:start="39:22" pos:end="39:76">"could not create samba server configuration file '%s'"</literal></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:29">smb_conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="83:14"><expr pos:start="47:5" pos:end="83:13"><call pos:start="47:5" pos:end="83:13"><name pos:start="47:5" pos:end="47:11">fprintf</name><argument_list pos:start="47:12" pos:end="83:13">(<argument pos:start="47:13" pos:end="47:13"><expr pos:start="47:13" pos:end="47:13"><name pos:start="47:13" pos:end="47:13">f</name></expr></argument>,

            <argument pos:start="49:13" pos:end="73:28"><expr pos:start="49:13" pos:end="73:28"><literal type="string" pos:start="49:13" pos:end="49:24">"[global]\n"</literal>

            <literal type="string" pos:start="51:13" pos:end="51:30">"private dir=%s\n"</literal>

            <literal type="string" pos:start="53:13" pos:end="53:40">"socket address=127.0.0.1\n"</literal>

            <literal type="string" pos:start="55:13" pos:end="55:32">"pid directory=%s\n"</literal>

            <literal type="string" pos:start="57:13" pos:end="57:33">"lock directory=%s\n"</literal>

            <literal type="string" pos:start="59:13" pos:end="59:34">"state directory=%s\n"</literal>

            <literal type="string" pos:start="61:13" pos:end="61:36">"log file=%s/log.smbd\n"</literal>

            <literal type="string" pos:start="63:13" pos:end="63:44">"smb passwd file=%s/smbpasswd\n"</literal>

            <literal type="string" pos:start="65:13" pos:end="65:32">"security = share\n"</literal>

            <literal type="string" pos:start="67:13" pos:end="67:22">"[qemu]\n"</literal>

            <literal type="string" pos:start="69:13" pos:end="69:23">"path=%s\n"</literal>

            <literal type="string" pos:start="71:13" pos:end="71:28">"read only=no\n"</literal>

            <literal type="string" pos:start="73:13" pos:end="73:28">"guest ok=yes\n"</literal></expr></argument>,







            <argument pos:start="81:13" pos:end="81:24"><expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:24">exported_dir</name></expr></argument>

            )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:14"><expr pos:start="85:5" pos:end="85:13"><call pos:start="85:5" pos:end="85:13"><name pos:start="85:5" pos:end="85:10">fclose</name><argument_list pos:start="85:11" pos:end="85:13">(<argument pos:start="85:12" pos:end="85:12"><expr pos:start="85:12" pos:end="85:12"><name pos:start="85:12" pos:end="85:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="91:44"><expr pos:start="89:5" pos:end="91:43"><call pos:start="89:5" pos:end="91:43"><name pos:start="89:5" pos:end="89:12">snprintf</name><argument_list pos:start="89:13" pos:end="91:43">(<argument pos:start="89:14" pos:end="89:24"><expr pos:start="89:14" pos:end="89:24"><name pos:start="89:14" pos:end="89:24">smb_cmdline</name></expr></argument>, <argument pos:start="89:27" pos:end="89:45"><expr pos:start="89:27" pos:end="89:45"><sizeof pos:start="89:27" pos:end="89:45">sizeof<argument_list pos:start="89:33" pos:end="89:45">(<argument pos:start="89:34" pos:end="89:44"><expr pos:start="89:34" pos:end="89:44"><name pos:start="89:34" pos:end="89:44">smb_cmdline</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:48" pos:end="89:57"><expr pos:start="89:48" pos:end="89:57"><literal type="string" pos:start="89:48" pos:end="89:57">"%s -s %s"</literal></expr></argument>,

             <argument pos:start="91:14" pos:end="91:32"><expr pos:start="91:14" pos:end="91:32"><name pos:start="91:14" pos:end="91:32">CONFIG_SMBD_COMMAND</name></expr></argument>, <argument pos:start="91:35" pos:end="91:42"><expr pos:start="91:35" pos:end="91:42"><name pos:start="91:35" pos:end="91:42">smb_conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:73">(<expr pos:start="95:9" pos:end="95:72"><call pos:start="95:9" pos:end="95:68"><name pos:start="95:9" pos:end="95:22">slirp_add_exec</name><argument_list pos:start="95:23" pos:end="95:68">(<argument pos:start="95:24" pos:end="95:31"><expr pos:start="95:24" pos:end="95:31"><name pos:start="95:24" pos:end="95:31"><name pos:start="95:24" pos:end="95:24">s</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:31">slirp</name></name></expr></argument>, <argument pos:start="95:34" pos:end="95:34"><expr pos:start="95:34" pos:end="95:34"><literal type="number" pos:start="95:34" pos:end="95:34">0</literal></expr></argument>, <argument pos:start="95:37" pos:end="95:47"><expr pos:start="95:37" pos:end="95:47"><name pos:start="95:37" pos:end="95:47">smb_cmdline</name></expr></argument>, <argument pos:start="95:50" pos:end="95:62"><expr pos:start="95:50" pos:end="95:62"><operator pos:start="95:50" pos:end="95:50">&amp;</operator><name pos:start="95:51" pos:end="95:62">vserver_addr</name></expr></argument>, <argument pos:start="95:65" pos:end="95:67"><expr pos:start="95:65" pos:end="95:67"><literal type="number" pos:start="95:65" pos:end="95:67">139</literal></expr></argument>)</argument_list></call> <operator pos:start="95:70" pos:end="95:70">&lt;</operator> <literal type="number" pos:start="95:72" pos:end="95:72">0</literal></expr>)</condition> <block pos:start="95:75" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:18">

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><call pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:25">slirp_smb_cleanup</name><argument_list pos:start="97:26" pos:end="97:28">(<argument pos:start="97:27" pos:end="97:27"><expr pos:start="97:27" pos:end="97:27"><name pos:start="97:27" pos:end="97:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:62"><expr pos:start="99:9" pos:end="99:61"><call pos:start="99:9" pos:end="99:61"><name pos:start="99:9" pos:end="99:20">error_report</name><argument_list pos:start="99:21" pos:end="99:61">(<argument pos:start="99:22" pos:end="99:60"><expr pos:start="99:22" pos:end="99:60"><literal type="string" pos:start="99:22" pos:end="99:60">"conflicting/invalid smbserver address"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:18">return <expr pos:start="101:16" pos:end="101:17"><operator pos:start="101:16" pos:end="101:16">-</operator><literal type="number" pos:start="101:17" pos:end="101:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
