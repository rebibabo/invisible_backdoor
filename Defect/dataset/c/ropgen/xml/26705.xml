<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26705.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">device_set_realized</name><parameter_list pos:start="1:32" pos:end="1:70">(<parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:38">Object</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">obj</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">bool</name></type> <name pos:start="1:51" pos:end="1:55">value</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="233:1">{<block_content pos:start="5:5" pos:end="231:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">dev</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:29">DEVICE</name><argument_list pos:start="5:30" pos:end="5:34">(<argument pos:start="5:31" pos:end="5:33"><expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceClass</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">dc</name> <init pos:start="7:21" pos:end="7:43">= <expr pos:start="7:23" pos:end="7:43"><call pos:start="7:23" pos:end="7:43"><name pos:start="7:23" pos:end="7:38">DEVICE_GET_CLASS</name><argument_list pos:start="7:39" pos:end="7:43">(<argument pos:start="7:40" pos:end="7:42"><expr pos:start="7:40" pos:end="7:42"><name pos:start="7:40" pos:end="7:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">HotplugHandler</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:32">hotplug_ctrl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BusState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:26">unattached_parent</name> <init pos:start="15:28" pos:end="15:34">= <expr pos:start="15:30" pos:end="15:34"><name pos:start="15:30" pos:end="15:34">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:14"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:14">int</name></type> <name pos:start="17:16" pos:end="17:31">unattached_count</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:45">(<expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">dev</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:23">hotplugged</name></name> <operator pos:start="21:25" pos:end="21:26">&amp;&amp;</operator> <operator pos:start="21:28" pos:end="21:28">!</operator><name pos:start="21:29" pos:end="21:44"><name pos:start="21:29" pos:end="21:30">dc</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:44">hotpluggable</name></name></expr>)</condition> <block pos:start="21:47" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:75"><expr pos:start="23:9" pos:end="23:74"><call pos:start="23:9" pos:end="23:74"><name pos:start="23:9" pos:end="23:18">error_setg</name><argument_list pos:start="23:19" pos:end="23:74">(<argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">errp</name></expr></argument>, <argument pos:start="23:26" pos:end="23:47"><expr pos:start="23:26" pos:end="23:47"><name pos:start="23:26" pos:end="23:47">QERR_DEVICE_NO_HOTPLUG</name></expr></argument>, <argument pos:start="23:50" pos:end="23:73"><expr pos:start="23:50" pos:end="23:73"><call pos:start="23:50" pos:end="23:73"><name pos:start="23:50" pos:end="23:68">object_get_typename</name><argument_list pos:start="23:69" pos:end="23:73">(<argument pos:start="23:70" pos:end="23:72"><expr pos:start="23:70" pos:end="23:72"><name pos:start="23:70" pos:end="23:72">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="173:5"><if pos:start="31:5" pos:end="141:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:13">value</name> <operator pos:start="31:15" pos:end="31:16">&amp;&amp;</operator> <operator pos:start="31:18" pos:end="31:18">!</operator><name pos:start="31:19" pos:end="31:31"><name pos:start="31:19" pos:end="31:21">dev</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:31">realized</name></name></expr>)</condition> <block pos:start="31:34" pos:end="141:5">{<block_content pos:start="33:9" pos:end="139:43">

        <if_stmt pos:start="33:9" pos:end="49:9"><if pos:start="33:9" pos:end="49:9">if <condition pos:start="33:12" pos:end="33:25">(<expr pos:start="33:13" pos:end="33:24"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:16">obj</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:24">parent</name></name></expr>)</condition> <block pos:start="33:27" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:25">

            <decl_stmt pos:start="35:13" pos:end="35:76"><decl pos:start="35:13" pos:end="35:75"><type pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:17">gchar</name> <modifier pos:start="35:19" pos:end="35:19">*</modifier></type><name pos:start="35:20" pos:end="35:23">name</name> <init pos:start="35:25" pos:end="35:75">= <expr pos:start="35:27" pos:end="35:75"><call pos:start="35:27" pos:end="35:75"><name pos:start="35:27" pos:end="35:41">g_strdup_printf</name><argument_list pos:start="35:42" pos:end="35:75">(<argument pos:start="35:43" pos:end="35:54"><expr pos:start="35:43" pos:end="35:54"><literal type="string" pos:start="35:43" pos:end="35:54">"device[%d]"</literal></expr></argument>, <argument pos:start="35:57" pos:end="35:74"><expr pos:start="35:57" pos:end="35:74"><name pos:start="35:57" pos:end="35:72">unattached_count</name><operator pos:start="35:73" pos:end="35:74">++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="39:13" pos:end="43:63"><expr pos:start="39:13" pos:end="43:62"><call pos:start="39:13" pos:end="43:62"><name pos:start="39:13" pos:end="39:37">object_property_add_child</name><argument_list pos:start="39:38" pos:end="43:62">(<argument pos:start="39:39" pos:end="41:66"><expr pos:start="39:39" pos:end="41:66"><call pos:start="39:39" pos:end="41:66"><name pos:start="39:39" pos:end="39:51">container_get</name><argument_list pos:start="39:52" pos:end="41:66">(<argument pos:start="39:53" pos:end="39:70"><expr pos:start="39:53" pos:end="39:70"><call pos:start="39:53" pos:end="39:70"><name pos:start="39:53" pos:end="39:68">qdev_get_machine</name><argument_list pos:start="39:69" pos:end="39:70">()</argument_list></call></expr></argument>,

                                                    <argument pos:start="41:53" pos:end="41:65"><expr pos:start="41:53" pos:end="41:65"><literal type="string" pos:start="41:53" pos:end="41:65">"/unattached"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                      <argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><name pos:start="43:39" pos:end="43:42">name</name></expr></argument>, <argument pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:47">obj</name></expr></argument>, <argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:61">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:37"><expr pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:29">unattached_parent</name> <operator pos:start="45:31" pos:end="45:31">=</operator> <name pos:start="45:33" pos:end="45:36">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><call pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:18">g_free</name><argument_list pos:start="47:19" pos:end="47:24">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:53"><expr pos:start="53:9" pos:end="53:52"><name pos:start="53:9" pos:end="53:20">hotplug_ctrl</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:52"><name pos:start="53:24" pos:end="53:47">qdev_get_hotplug_handler</name><argument_list pos:start="53:48" pos:end="53:52">(<argument pos:start="53:49" pos:end="53:51"><expr pos:start="53:49" pos:end="53:51"><name pos:start="53:49" pos:end="53:51">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:25">(<expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:24">hotplug_ctrl</name></expr>)</condition> <block pos:start="55:27" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:13">

            <expr_stmt pos:start="57:13" pos:end="57:68"><expr pos:start="57:13" pos:end="57:67"><call pos:start="57:13" pos:end="57:67"><name pos:start="57:13" pos:end="57:36">hotplug_handler_pre_plug</name><argument_list pos:start="57:37" pos:end="57:67">(<argument pos:start="57:38" pos:end="57:49"><expr pos:start="57:38" pos:end="57:49"><name pos:start="57:38" pos:end="57:49">hotplug_ctrl</name></expr></argument>, <argument pos:start="57:52" pos:end="57:54"><expr pos:start="57:52" pos:end="57:54"><name pos:start="57:52" pos:end="57:54">dev</name></expr></argument>, <argument pos:start="57:57" pos:end="57:66"><expr pos:start="57:57" pos:end="57:66"><operator pos:start="57:57" pos:end="57:57">&amp;</operator><name pos:start="57:58" pos:end="57:66">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:34">(<expr pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:25">local_err</name> <operator pos:start="59:27" pos:end="59:28">!=</operator> <name pos:start="59:30" pos:end="59:33">NULL</name></expr>)</condition> <block pos:start="59:36" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:26">

                <goto pos:start="61:17" pos:end="61:26">goto <name pos:start="61:22" pos:end="61:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:24">(<expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:14">dc</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:23">realize</name></name></expr>)</condition> <block pos:start="69:26" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:41">

            <expr_stmt pos:start="71:13" pos:end="71:41"><expr pos:start="71:13" pos:end="71:40"><call pos:start="71:13" pos:end="71:40"><name pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:14">dc</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:23">realize</name></name><argument_list pos:start="71:24" pos:end="71:40">(<argument pos:start="71:25" pos:end="71:27"><expr pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:27">dev</name></expr></argument>, <argument pos:start="71:30" pos:end="71:39"><expr pos:start="71:30" pos:end="71:39"><operator pos:start="71:30" pos:end="71:30">&amp;</operator><name pos:start="71:31" pos:end="71:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:30">(<expr pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:21">local_err</name> <operator pos:start="77:23" pos:end="77:24">!=</operator> <name pos:start="77:26" pos:end="77:29">NULL</name></expr>)</condition> <block pos:start="77:32" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:22">

            <goto pos:start="79:13" pos:end="79:22">goto <name pos:start="79:18" pos:end="79:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:52"><expr pos:start="85:9" pos:end="85:51"><call pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:28">DEVICE_LISTENER_CALL</name><argument_list pos:start="85:29" pos:end="85:51">(<argument pos:start="85:30" pos:end="85:36"><expr pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:36">realize</name></expr></argument>, <argument pos:start="85:39" pos:end="85:45"><expr pos:start="85:39" pos:end="85:45"><name pos:start="85:39" pos:end="85:45">Forward</name></expr></argument>, <argument pos:start="85:48" pos:end="85:50"><expr pos:start="85:48" pos:end="85:50"><name pos:start="85:48" pos:end="85:50">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:25">(<expr pos:start="89:13" pos:end="89:24"><name pos:start="89:13" pos:end="89:24">hotplug_ctrl</name></expr>)</condition> <block pos:start="89:27" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:64">

            <expr_stmt pos:start="91:13" pos:end="91:64"><expr pos:start="91:13" pos:end="91:63"><call pos:start="91:13" pos:end="91:63"><name pos:start="91:13" pos:end="91:32">hotplug_handler_plug</name><argument_list pos:start="91:33" pos:end="91:63">(<argument pos:start="91:34" pos:end="91:45"><expr pos:start="91:34" pos:end="91:45"><name pos:start="91:34" pos:end="91:45">hotplug_ctrl</name></expr></argument>, <argument pos:start="91:48" pos:end="91:50"><expr pos:start="91:48" pos:end="91:50"><name pos:start="91:48" pos:end="91:50">dev</name></expr></argument>, <argument pos:start="91:53" pos:end="91:62"><expr pos:start="91:53" pos:end="91:62"><operator pos:start="91:53" pos:end="91:53">&amp;</operator><name pos:start="91:54" pos:end="91:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:30">(<expr pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:21">local_err</name> <operator pos:start="97:23" pos:end="97:24">!=</operator> <name pos:start="97:26" pos:end="97:29">NULL</name></expr>)</condition> <block pos:start="97:32" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:35">

            <goto pos:start="99:13" pos:end="99:35">goto <name pos:start="99:18" pos:end="99:34">post_realize_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="115:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="105:31">(<expr pos:start="105:13" pos:end="105:30"><call pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:25">qdev_get_vmsd</name><argument_list pos:start="105:26" pos:end="105:30">(<argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:33" pos:end="115:9">{<block_content pos:start="107:13" pos:end="113:49">

            <expr_stmt pos:start="107:13" pos:end="113:49"><expr pos:start="107:13" pos:end="113:48"><call pos:start="107:13" pos:end="113:48"><name pos:start="107:13" pos:end="107:42">vmstate_register_with_alias_id</name><argument_list pos:start="107:43" pos:end="113:48">(<argument pos:start="107:44" pos:end="107:46"><expr pos:start="107:44" pos:end="107:46"><name pos:start="107:44" pos:end="107:46">dev</name></expr></argument>, <argument pos:start="107:49" pos:end="107:50"><expr pos:start="107:49" pos:end="107:50"><operator pos:start="107:49" pos:end="107:49">-</operator><literal type="number" pos:start="107:50" pos:end="107:50">1</literal></expr></argument>, <argument pos:start="107:53" pos:end="107:70"><expr pos:start="107:53" pos:end="107:70"><call pos:start="107:53" pos:end="107:70"><name pos:start="107:53" pos:end="107:65">qdev_get_vmsd</name><argument_list pos:start="107:66" pos:end="107:70">(<argument pos:start="107:67" pos:end="107:69"><expr pos:start="107:67" pos:end="107:69"><name pos:start="107:67" pos:end="107:69">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="107:73" pos:end="107:75"><expr pos:start="107:73" pos:end="107:75"><name pos:start="107:73" pos:end="107:75">dev</name></expr></argument>,

                                           <argument pos:start="109:44" pos:end="109:65"><expr pos:start="109:44" pos:end="109:65"><name pos:start="109:44" pos:end="109:65"><name pos:start="109:44" pos:end="109:46">dev</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:65">instance_id_alias</name></name></expr></argument>,

                                           <argument pos:start="111:44" pos:end="111:74"><expr pos:start="111:44" pos:end="111:74"><name pos:start="111:44" pos:end="111:74"><name pos:start="111:44" pos:end="111:46">dev</name><operator pos:start="111:47" pos:end="111:48">-&gt;</operator><name pos:start="111:49" pos:end="111:74">alias_required_for_version</name></name></expr></argument>,

                                           <argument pos:start="113:44" pos:end="113:47"><expr pos:start="113:44" pos:end="113:47"><name pos:start="113:44" pos:end="113:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <macro pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:21">QLIST_FOREACH</name><argument_list pos:start="119:22" pos:end="119:52">(<argument pos:start="119:23" pos:end="119:25">bus</argument>, <argument pos:start="119:28" pos:end="119:42">&amp;dev-&gt;child_bus</argument>, <argument pos:start="119:45" pos:end="119:51">sibling</argument>)</argument_list></macro> <block pos:start="119:54" pos:end="131:9">{<block_content pos:start="121:13" pos:end="129:13">

            <expr_stmt pos:start="121:13" pos:end="123:53"><expr pos:start="121:13" pos:end="123:52"><call pos:start="121:13" pos:end="123:52"><name pos:start="121:13" pos:end="121:36">object_property_set_bool</name><argument_list pos:start="121:37" pos:end="123:52">(<argument pos:start="121:38" pos:end="121:48"><expr pos:start="121:38" pos:end="121:48"><call pos:start="121:38" pos:end="121:48"><name pos:start="121:38" pos:end="121:43">OBJECT</name><argument_list pos:start="121:44" pos:end="121:48">(<argument pos:start="121:45" pos:end="121:47"><expr pos:start="121:45" pos:end="121:47"><name pos:start="121:45" pos:end="121:47">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:51" pos:end="121:54"><expr pos:start="121:51" pos:end="121:54"><name pos:start="121:51" pos:end="121:54">true</name></expr></argument>, <argument pos:start="121:57" pos:end="121:66"><expr pos:start="121:57" pos:end="121:66"><literal type="string" pos:start="121:57" pos:end="121:66">"realized"</literal></expr></argument>,

                                         <argument pos:start="123:42" pos:end="123:51"><expr pos:start="123:42" pos:end="123:51"><operator pos:start="123:42" pos:end="123:42">&amp;</operator><name pos:start="123:43" pos:end="123:51">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="129:13"><if pos:start="125:13" pos:end="129:13">if <condition pos:start="125:16" pos:end="125:34">(<expr pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:25">local_err</name> <operator pos:start="125:27" pos:end="125:28">!=</operator> <name pos:start="125:30" pos:end="125:33">NULL</name></expr>)</condition> <block pos:start="125:36" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:40">

                <goto pos:start="127:17" pos:end="127:40">goto <name pos:start="127:22" pos:end="127:39">child_realize_fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:28">(<expr pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:15">dev</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:27">hotplugged</name></name></expr>)</condition> <block pos:start="133:30" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:30">

            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><call pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:24">device_reset</name><argument_list pos:start="135:25" pos:end="135:29">(<argument pos:start="135:26" pos:end="135:28"><expr pos:start="135:26" pos:end="135:28"><name pos:start="135:26" pos:end="135:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:43"><expr pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:34"><name pos:start="139:9" pos:end="139:11">dev</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:34">pending_deleted_event</name></name> <operator pos:start="139:36" pos:end="139:36">=</operator> <name pos:start="139:38" pos:end="139:42">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="141:7" pos:end="173:5">else if <condition pos:start="141:15" pos:end="141:39">(<expr pos:start="141:16" pos:end="141:38"><operator pos:start="141:16" pos:end="141:16">!</operator><name pos:start="141:17" pos:end="141:21">value</name> <operator pos:start="141:23" pos:end="141:24">&amp;&amp;</operator> <name pos:start="141:26" pos:end="141:38"><name pos:start="141:26" pos:end="141:28">dev</name><operator pos:start="141:29" pos:end="141:30">-&gt;</operator><name pos:start="141:31" pos:end="141:38">realized</name></name></expr>)</condition> <block pos:start="141:41" pos:end="173:5">{<block_content pos:start="143:9" pos:end="171:54">

        <decl_stmt pos:start="143:9" pos:end="143:34"><decl pos:start="143:9" pos:end="143:33"><type pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:13">Error</name> <modifier pos:start="143:15" pos:end="143:15">*</modifier><modifier pos:start="143:16" pos:end="143:16">*</modifier></type><name pos:start="143:17" pos:end="143:26">local_errp</name> <init pos:start="143:28" pos:end="143:33">= <expr pos:start="143:30" pos:end="143:33"><name pos:start="143:30" pos:end="143:33">NULL</name></expr></init></decl>;</decl_stmt>

        <macro pos:start="145:9" pos:end="145:52"><name pos:start="145:9" pos:end="145:21">QLIST_FOREACH</name><argument_list pos:start="145:22" pos:end="145:52">(<argument pos:start="145:23" pos:end="145:25">bus</argument>, <argument pos:start="145:28" pos:end="145:42">&amp;dev-&gt;child_bus</argument>, <argument pos:start="145:45" pos:end="145:51">sibling</argument>)</argument_list></macro> <block pos:start="145:54" pos:end="153:9">{<block_content pos:start="147:13" pos:end="151:49">

            <expr_stmt pos:start="147:13" pos:end="147:55"><expr pos:start="147:13" pos:end="147:54"><name pos:start="147:13" pos:end="147:22">local_errp</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <ternary pos:start="147:26" pos:end="147:54"><condition pos:start="147:26" pos:end="147:36"><expr pos:start="147:26" pos:end="147:34"><name pos:start="147:26" pos:end="147:34">local_err</name></expr> ?</condition><then pos:start="147:38" pos:end="147:41"> <expr pos:start="147:38" pos:end="147:41"><name pos:start="147:38" pos:end="147:41">NULL</name></expr> </then><else pos:start="147:43" pos:end="147:54">: <expr pos:start="147:45" pos:end="147:54"><operator pos:start="147:45" pos:end="147:45">&amp;</operator><name pos:start="147:46" pos:end="147:54">local_err</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="151:49"><expr pos:start="149:13" pos:end="151:48"><call pos:start="149:13" pos:end="151:48"><name pos:start="149:13" pos:end="149:36">object_property_set_bool</name><argument_list pos:start="149:37" pos:end="151:48">(<argument pos:start="149:38" pos:end="149:48"><expr pos:start="149:38" pos:end="149:48"><call pos:start="149:38" pos:end="149:48"><name pos:start="149:38" pos:end="149:43">OBJECT</name><argument_list pos:start="149:44" pos:end="149:48">(<argument pos:start="149:45" pos:end="149:47"><expr pos:start="149:45" pos:end="149:47"><name pos:start="149:45" pos:end="149:47">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="149:51" pos:end="149:55"><expr pos:start="149:51" pos:end="149:55"><name pos:start="149:51" pos:end="149:55">false</name></expr></argument>, <argument pos:start="149:58" pos:end="149:67"><expr pos:start="149:58" pos:end="149:67"><literal type="string" pos:start="149:58" pos:end="149:67">"realized"</literal></expr></argument>,

                                     <argument pos:start="151:38" pos:end="151:47"><expr pos:start="151:38" pos:end="151:47"><name pos:start="151:38" pos:end="151:47">local_errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <if_stmt pos:start="155:9" pos:end="159:9"><if pos:start="155:9" pos:end="159:9">if <condition pos:start="155:12" pos:end="155:31">(<expr pos:start="155:13" pos:end="155:30"><call pos:start="155:13" pos:end="155:30"><name pos:start="155:13" pos:end="155:25">qdev_get_vmsd</name><argument_list pos:start="155:26" pos:end="155:30">(<argument pos:start="155:27" pos:end="155:29"><expr pos:start="155:27" pos:end="155:29"><name pos:start="155:27" pos:end="155:29">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:33" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:61">

            <expr_stmt pos:start="157:13" pos:end="157:61"><expr pos:start="157:13" pos:end="157:60"><call pos:start="157:13" pos:end="157:60"><name pos:start="157:13" pos:end="157:30">vmstate_unregister</name><argument_list pos:start="157:31" pos:end="157:60">(<argument pos:start="157:32" pos:end="157:34"><expr pos:start="157:32" pos:end="157:34"><name pos:start="157:32" pos:end="157:34">dev</name></expr></argument>, <argument pos:start="157:37" pos:end="157:54"><expr pos:start="157:37" pos:end="157:54"><call pos:start="157:37" pos:end="157:54"><name pos:start="157:37" pos:end="157:49">qdev_get_vmsd</name><argument_list pos:start="157:50" pos:end="157:54">(<argument pos:start="157:51" pos:end="157:53"><expr pos:start="157:51" pos:end="157:53"><name pos:start="157:51" pos:end="157:53">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:57" pos:end="157:59"><expr pos:start="157:57" pos:end="157:59"><name pos:start="157:57" pos:end="157:59">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="167:9"><if pos:start="161:9" pos:end="167:9">if <condition pos:start="161:12" pos:end="161:26">(<expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:14">dc</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:25">unrealize</name></name></expr>)</condition> <block pos:start="161:28" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:43">

            <expr_stmt pos:start="163:13" pos:end="163:55"><expr pos:start="163:13" pos:end="163:54"><name pos:start="163:13" pos:end="163:22">local_errp</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <ternary pos:start="163:26" pos:end="163:54"><condition pos:start="163:26" pos:end="163:36"><expr pos:start="163:26" pos:end="163:34"><name pos:start="163:26" pos:end="163:34">local_err</name></expr> ?</condition><then pos:start="163:38" pos:end="163:41"> <expr pos:start="163:38" pos:end="163:41"><name pos:start="163:38" pos:end="163:41">NULL</name></expr> </then><else pos:start="163:43" pos:end="163:54">: <expr pos:start="163:45" pos:end="163:54"><operator pos:start="163:45" pos:end="163:45">&amp;</operator><name pos:start="163:46" pos:end="163:54">local_err</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:43"><expr pos:start="165:13" pos:end="165:42"><call pos:start="165:13" pos:end="165:42"><name pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:14">dc</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:25">unrealize</name></name><argument_list pos:start="165:26" pos:end="165:42">(<argument pos:start="165:27" pos:end="165:29"><expr pos:start="165:27" pos:end="165:29"><name pos:start="165:27" pos:end="165:29">dev</name></expr></argument>, <argument pos:start="165:32" pos:end="165:41"><expr pos:start="165:32" pos:end="165:41"><name pos:start="165:32" pos:end="165:41">local_errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:42"><expr pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:11">dev</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:34">pending_deleted_event</name></name> <operator pos:start="169:36" pos:end="169:36">=</operator> <name pos:start="169:38" pos:end="169:41">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:54"><expr pos:start="171:9" pos:end="171:53"><call pos:start="171:9" pos:end="171:53"><name pos:start="171:9" pos:end="171:28">DEVICE_LISTENER_CALL</name><argument_list pos:start="171:29" pos:end="171:53">(<argument pos:start="171:30" pos:end="171:38"><expr pos:start="171:30" pos:end="171:38"><name pos:start="171:30" pos:end="171:38">unrealize</name></expr></argument>, <argument pos:start="171:41" pos:end="171:47"><expr pos:start="171:41" pos:end="171:47"><name pos:start="171:41" pos:end="171:47">Reverse</name></expr></argument>, <argument pos:start="171:50" pos:end="171:52"><expr pos:start="171:50" pos:end="171:52"><name pos:start="171:50" pos:end="171:52">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:26">(<expr pos:start="177:9" pos:end="177:25"><name pos:start="177:9" pos:end="177:17">local_err</name> <operator pos:start="177:19" pos:end="177:20">!=</operator> <name pos:start="177:22" pos:end="177:25">NULL</name></expr>)</condition> <block pos:start="177:28" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:18">

        <goto pos:start="179:9" pos:end="179:18">goto <name pos:start="179:14" pos:end="179:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:26"><expr pos:start="185:5" pos:end="185:25"><name pos:start="185:5" pos:end="185:17"><name pos:start="185:5" pos:end="185:7">dev</name><operator pos:start="185:8" pos:end="185:9">-&gt;</operator><name pos:start="185:10" pos:end="185:17">realized</name></name> <operator pos:start="185:19" pos:end="185:19">=</operator> <name pos:start="185:21" pos:end="185:25">value</name></expr>;</expr_stmt>

    <return pos:start="187:5" pos:end="187:11">return;</return>



<label pos:start="191:1" pos:end="191:19"><name pos:start="191:1" pos:end="191:18">child_realize_fail</name>:</label>

    <macro pos:start="193:5" pos:end="193:48"><name pos:start="193:5" pos:end="193:17">QLIST_FOREACH</name><argument_list pos:start="193:18" pos:end="193:48">(<argument pos:start="193:19" pos:end="193:21">bus</argument>, <argument pos:start="193:24" pos:end="193:38">&amp;dev-&gt;child_bus</argument>, <argument pos:start="193:41" pos:end="193:47">sibling</argument>)</argument_list></macro> <block pos:start="193:50" pos:end="199:5">{<block_content pos:start="195:9" pos:end="197:39">

        <expr_stmt pos:start="195:9" pos:end="197:39"><expr pos:start="195:9" pos:end="197:38"><call pos:start="195:9" pos:end="197:38"><name pos:start="195:9" pos:end="195:32">object_property_set_bool</name><argument_list pos:start="195:33" pos:end="197:38">(<argument pos:start="195:34" pos:end="195:44"><expr pos:start="195:34" pos:end="195:44"><call pos:start="195:34" pos:end="195:44"><name pos:start="195:34" pos:end="195:39">OBJECT</name><argument_list pos:start="195:40" pos:end="195:44">(<argument pos:start="195:41" pos:end="195:43"><expr pos:start="195:41" pos:end="195:43"><name pos:start="195:41" pos:end="195:43">bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="195:47" pos:end="195:51"><expr pos:start="195:47" pos:end="195:51"><name pos:start="195:47" pos:end="195:51">false</name></expr></argument>, <argument pos:start="195:54" pos:end="195:63"><expr pos:start="195:54" pos:end="195:63"><literal type="string" pos:start="195:54" pos:end="195:63">"realized"</literal></expr></argument>,

                                 <argument pos:start="197:34" pos:end="197:37"><expr pos:start="197:34" pos:end="197:37"><name pos:start="197:34" pos:end="197:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="203:5" pos:end="207:5"><if pos:start="203:5" pos:end="207:5">if <condition pos:start="203:8" pos:end="203:27">(<expr pos:start="203:9" pos:end="203:26"><call pos:start="203:9" pos:end="203:26"><name pos:start="203:9" pos:end="203:21">qdev_get_vmsd</name><argument_list pos:start="203:22" pos:end="203:26">(<argument pos:start="203:23" pos:end="203:25"><expr pos:start="203:23" pos:end="203:25"><name pos:start="203:23" pos:end="203:25">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:29" pos:end="207:5">{<block_content pos:start="205:9" pos:end="205:57">

        <expr_stmt pos:start="205:9" pos:end="205:57"><expr pos:start="205:9" pos:end="205:56"><call pos:start="205:9" pos:end="205:56"><name pos:start="205:9" pos:end="205:26">vmstate_unregister</name><argument_list pos:start="205:27" pos:end="205:56">(<argument pos:start="205:28" pos:end="205:30"><expr pos:start="205:28" pos:end="205:30"><name pos:start="205:28" pos:end="205:30">dev</name></expr></argument>, <argument pos:start="205:33" pos:end="205:50"><expr pos:start="205:33" pos:end="205:50"><call pos:start="205:33" pos:end="205:50"><name pos:start="205:33" pos:end="205:45">qdev_get_vmsd</name><argument_list pos:start="205:46" pos:end="205:50">(<argument pos:start="205:47" pos:end="205:49"><expr pos:start="205:47" pos:end="205:49"><name pos:start="205:47" pos:end="205:49">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="205:53" pos:end="205:55"><expr pos:start="205:53" pos:end="205:55"><name pos:start="205:53" pos:end="205:55">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="211:1" pos:end="211:18"><name pos:start="211:1" pos:end="211:17">post_realize_fail</name>:</label>

    <if_stmt pos:start="213:5" pos:end="217:5"><if pos:start="213:5" pos:end="217:5">if <condition pos:start="213:8" pos:end="213:22">(<expr pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:21"><name pos:start="213:9" pos:end="213:10">dc</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:21">unrealize</name></name></expr>)</condition> <block pos:start="213:24" pos:end="217:5">{<block_content pos:start="215:9" pos:end="215:33">

        <expr_stmt pos:start="215:9" pos:end="215:33"><expr pos:start="215:9" pos:end="215:32"><call pos:start="215:9" pos:end="215:32"><name pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:10">dc</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:21">unrealize</name></name><argument_list pos:start="215:22" pos:end="215:32">(<argument pos:start="215:23" pos:end="215:25"><expr pos:start="215:23" pos:end="215:25"><name pos:start="215:23" pos:end="215:25">dev</name></expr></argument>, <argument pos:start="215:28" pos:end="215:31"><expr pos:start="215:28" pos:end="215:31"><name pos:start="215:28" pos:end="215:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="221:1" pos:end="221:5"><name pos:start="221:1" pos:end="221:4">fail</name>:</label>

    <expr_stmt pos:start="223:5" pos:end="223:37"><expr pos:start="223:5" pos:end="223:36"><call pos:start="223:5" pos:end="223:36"><name pos:start="223:5" pos:end="223:19">error_propagate</name><argument_list pos:start="223:20" pos:end="223:36">(<argument pos:start="223:21" pos:end="223:24"><expr pos:start="223:21" pos:end="223:24"><name pos:start="223:21" pos:end="223:24">errp</name></expr></argument>, <argument pos:start="223:27" pos:end="223:35"><expr pos:start="223:27" pos:end="223:35"><name pos:start="223:27" pos:end="223:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="231:5"><if pos:start="225:5" pos:end="231:5">if <condition pos:start="225:8" pos:end="225:26">(<expr pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:25">unattached_parent</name></expr>)</condition> <block pos:start="225:28" pos:end="231:5">{<block_content pos:start="227:9" pos:end="229:27">

        <expr_stmt pos:start="227:9" pos:end="227:37"><expr pos:start="227:9" pos:end="227:36"><call pos:start="227:9" pos:end="227:36"><name pos:start="227:9" pos:end="227:23">object_unparent</name><argument_list pos:start="227:24" pos:end="227:36">(<argument pos:start="227:25" pos:end="227:35"><expr pos:start="227:25" pos:end="227:35"><call pos:start="227:25" pos:end="227:35"><name pos:start="227:25" pos:end="227:30">OBJECT</name><argument_list pos:start="227:31" pos:end="227:35">(<argument pos:start="227:32" pos:end="227:34"><expr pos:start="227:32" pos:end="227:34"><name pos:start="227:32" pos:end="227:34">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:27"><expr pos:start="229:9" pos:end="229:26"><name pos:start="229:9" pos:end="229:24">unattached_count</name><operator pos:start="229:25" pos:end="229:26">--</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
