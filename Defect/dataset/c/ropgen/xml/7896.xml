<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7896.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">nbd_negotiate_options</name><parameter_list pos:start="1:33" pos:end="1:51">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:42">NBDClient</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">client</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="305:1">{<block_content pos:start="5:5" pos:end="303:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:22">fixedNewstyle</name> <init pos:start="7:24" pos:end="7:30">= <expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30">false</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="35:6">/* Client sends:

        [ 0 ..   3]   client flags



        [ 0 ..   7]   NBD_OPTS_MAGIC

        [ 8 ..  11]   NBD option

        [12 ..  15]   Data length

        ...           Rest of request



        [ 0 ..   7]   NBD_OPTS_MAGIC

        [ 8 ..  11]   Second NBD option

        [12 ..  15]   Data length

        ...           Rest of request

    */</comment>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="41:22">(<expr pos:start="39:9" pos:end="41:21"><call pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:26">nbd_negotiate_read</name><argument_list pos:start="39:27" pos:end="39:62">(<argument pos:start="39:28" pos:end="39:38"><expr pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:33">client</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:38">ioc</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:46"><expr pos:start="39:41" pos:end="39:46"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:46">flags</name></expr></argument>, <argument pos:start="39:49" pos:end="39:61"><expr pos:start="39:49" pos:end="39:61"><sizeof pos:start="39:49" pos:end="39:61">sizeof<argument_list pos:start="39:55" pos:end="39:61">(<argument pos:start="39:56" pos:end="39:60"><expr pos:start="39:56" pos:end="39:60"><name pos:start="39:56" pos:end="39:60">flags</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="39:64" pos:end="39:65">!=</operator>

        <sizeof pos:start="41:9" pos:end="41:21">sizeof<argument_list pos:start="41:15" pos:end="41:21">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">flags</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="41:24" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:20">

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><call pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:11">LOG</name><argument_list pos:start="43:12" pos:end="43:26">(<argument pos:start="43:13" pos:end="43:25"><expr pos:start="43:13" pos:end="43:25"><literal type="string" pos:start="43:13" pos:end="43:25">"read failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:20">return <expr pos:start="45:16" pos:end="45:19"><operator pos:start="45:16" pos:end="45:16">-</operator><name pos:start="45:17" pos:end="45:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><call pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:9">TRACE</name><argument_list pos:start="49:10" pos:end="49:34">(<argument pos:start="49:11" pos:end="49:33"><expr pos:start="49:11" pos:end="49:33"><literal type="string" pos:start="49:11" pos:end="49:33">"Checking client flags"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><call pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:16">be32_to_cpus</name><argument_list pos:start="51:17" pos:end="51:24">(<argument pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:23"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:23">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:42">(<expr pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:13">flags</name> <operator pos:start="53:15" pos:end="53:15">&amp;</operator> <name pos:start="53:17" pos:end="53:41">NBD_FLAG_C_FIXED_NEWSTYLE</name></expr>)</condition> <block pos:start="53:44" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:44">

        <expr_stmt pos:start="55:9" pos:end="55:58"><expr pos:start="55:9" pos:end="55:57"><call pos:start="55:9" pos:end="55:57"><name pos:start="55:9" pos:end="55:13">TRACE</name><argument_list pos:start="55:14" pos:end="55:57">(<argument pos:start="55:15" pos:end="55:56"><expr pos:start="55:15" pos:end="55:56"><literal type="string" pos:start="55:15" pos:end="55:56">"Client supports fixed newstyle handshake"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:21">fixedNewstyle</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:28">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:13">flags</name> <operator pos:start="59:15" pos:end="59:16">&amp;=</operator> <operator pos:start="59:18" pos:end="59:18">~</operator><name pos:start="59:19" pos:end="59:43">NBD_FLAG_C_FIXED_NEWSTYLE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:19">(<expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:13">flags</name> <operator pos:start="63:15" pos:end="63:16">!=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>)</condition> <block pos:start="63:21" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:20">

        <expr_stmt pos:start="65:9" pos:end="65:68"><expr pos:start="65:9" pos:end="65:67"><call pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:13">TRACE</name><argument_list pos:start="65:14" pos:end="65:67">(<argument pos:start="65:15" pos:end="65:59"><expr pos:start="65:15" pos:end="65:59"><literal type="string" pos:start="65:15" pos:end="65:40">"Unknown client flags 0x%"</literal> <name pos:start="65:42" pos:end="65:47">PRIx32</name> <literal type="string" pos:start="65:49" pos:end="65:59">" received"</literal></expr></argument>, <argument pos:start="65:62" pos:end="65:66"><expr pos:start="65:62" pos:end="65:66"><name pos:start="65:62" pos:end="65:66">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:20">return <expr pos:start="67:16" pos:end="67:19"><operator pos:start="67:16" pos:end="67:16">-</operator><name pos:start="67:17" pos:end="67:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="73:5" pos:end="303:5">while <condition pos:start="73:11" pos:end="73:13">(<expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">1</literal></expr>)</condition> <block pos:start="73:15" pos:end="303:5">{<block_content pos:start="75:9" pos:end="301:9">

        <decl_stmt pos:start="75:9" pos:end="75:16"><decl pos:start="75:9" pos:end="75:15"><type pos:start="75:9" pos:end="75:11"><name pos:start="75:9" pos:end="75:11">int</name></type> <name pos:start="75:13" pos:end="75:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:37"><decl pos:start="77:9" pos:end="77:28"><type pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:16">uint32_t</name></type> <name pos:start="77:18" pos:end="77:28">clientflags</name></decl>, <decl pos:start="77:31" pos:end="77:36"><type ref="prev" pos:start="77:9" pos:end="77:16"/><name pos:start="77:31" pos:end="77:36">length</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:23"><decl pos:start="79:9" pos:end="79:22"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">uint64_t</name></type> <name pos:start="79:18" pos:end="79:22">magic</name></decl>;</decl_stmt>



        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="85:26">(<expr pos:start="83:13" pos:end="85:25"><call pos:start="83:13" pos:end="83:66"><name pos:start="83:13" pos:end="83:30">nbd_negotiate_read</name><argument_list pos:start="83:31" pos:end="83:66">(<argument pos:start="83:32" pos:end="83:42"><expr pos:start="83:32" pos:end="83:42"><name pos:start="83:32" pos:end="83:42"><name pos:start="83:32" pos:end="83:37">client</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:42">ioc</name></name></expr></argument>, <argument pos:start="83:45" pos:end="83:50"><expr pos:start="83:45" pos:end="83:50"><operator pos:start="83:45" pos:end="83:45">&amp;</operator><name pos:start="83:46" pos:end="83:50">magic</name></expr></argument>, <argument pos:start="83:53" pos:end="83:65"><expr pos:start="83:53" pos:end="83:65"><sizeof pos:start="83:53" pos:end="83:65">sizeof<argument_list pos:start="83:59" pos:end="83:65">(<argument pos:start="83:60" pos:end="83:64"><expr pos:start="83:60" pos:end="83:64"><name pos:start="83:60" pos:end="83:64">magic</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="83:68" pos:end="83:69">!=</operator>

            <sizeof pos:start="85:13" pos:end="85:25">sizeof<argument_list pos:start="85:19" pos:end="85:25">(<argument pos:start="85:20" pos:end="85:24"><expr pos:start="85:20" pos:end="85:24"><name pos:start="85:20" pos:end="85:24">magic</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="85:28" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:27">

            <expr_stmt pos:start="87:13" pos:end="87:31"><expr pos:start="87:13" pos:end="87:30"><call pos:start="87:13" pos:end="87:30"><name pos:start="87:13" pos:end="87:15">LOG</name><argument_list pos:start="87:16" pos:end="87:30">(<argument pos:start="87:17" pos:end="87:29"><expr pos:start="87:17" pos:end="87:29"><literal type="string" pos:start="87:17" pos:end="87:29">"read failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:27">return <expr pos:start="89:20" pos:end="89:26"><operator pos:start="89:20" pos:end="89:20">-</operator><name pos:start="89:21" pos:end="89:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:37"><expr pos:start="93:9" pos:end="93:36"><call pos:start="93:9" pos:end="93:36"><name pos:start="93:9" pos:end="93:13">TRACE</name><argument_list pos:start="93:14" pos:end="93:36">(<argument pos:start="93:15" pos:end="93:35"><expr pos:start="93:15" pos:end="93:35"><literal type="string" pos:start="93:15" pos:end="93:35">"Checking opts magic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:49">(<expr pos:start="95:13" pos:end="95:48"><name pos:start="95:13" pos:end="95:17">magic</name> <operator pos:start="95:19" pos:end="95:20">!=</operator> <call pos:start="95:22" pos:end="95:48"><name pos:start="95:22" pos:end="95:32">be64_to_cpu</name><argument_list pos:start="95:33" pos:end="95:48">(<argument pos:start="95:34" pos:end="95:47"><expr pos:start="95:34" pos:end="95:47"><name pos:start="95:34" pos:end="95:47">NBD_OPTS_MAGIC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:51" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:27">

            <expr_stmt pos:start="97:13" pos:end="97:38"><expr pos:start="97:13" pos:end="97:37"><call pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:15">LOG</name><argument_list pos:start="97:16" pos:end="97:37">(<argument pos:start="97:17" pos:end="97:36"><expr pos:start="97:17" pos:end="97:36"><literal type="string" pos:start="97:17" pos:end="97:36">"Bad magic received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:27">return <expr pos:start="99:20" pos:end="99:26"><operator pos:start="99:20" pos:end="99:20">-</operator><name pos:start="99:21" pos:end="99:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="113:9"><if pos:start="105:9" pos:end="113:9">if <condition pos:start="105:12" pos:end="107:75">(<expr pos:start="105:13" pos:end="107:74"><call pos:start="105:13" pos:end="107:51"><name pos:start="105:13" pos:end="105:30">nbd_negotiate_read</name><argument_list pos:start="105:31" pos:end="107:51">(<argument pos:start="105:32" pos:end="105:42"><expr pos:start="105:32" pos:end="105:42"><name pos:start="105:32" pos:end="105:42"><name pos:start="105:32" pos:end="105:37">client</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:42">ioc</name></name></expr></argument>, <argument pos:start="105:45" pos:end="105:56"><expr pos:start="105:45" pos:end="105:56"><operator pos:start="105:45" pos:end="105:45">&amp;</operator><name pos:start="105:46" pos:end="105:56">clientflags</name></expr></argument>,

                               <argument pos:start="107:32" pos:end="107:50"><expr pos:start="107:32" pos:end="107:50"><sizeof pos:start="107:32" pos:end="107:50">sizeof<argument_list pos:start="107:38" pos:end="107:50">(<argument pos:start="107:39" pos:end="107:49"><expr pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:49">clientflags</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="107:53" pos:end="107:54">!=</operator> <sizeof pos:start="107:56" pos:end="107:74">sizeof<argument_list pos:start="107:62" pos:end="107:74">(<argument pos:start="107:63" pos:end="107:73"><expr pos:start="107:63" pos:end="107:73"><name pos:start="107:63" pos:end="107:73">clientflags</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="107:77" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:27">

            <expr_stmt pos:start="109:13" pos:end="109:31"><expr pos:start="109:13" pos:end="109:30"><call pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:15">LOG</name><argument_list pos:start="109:16" pos:end="109:30">(<argument pos:start="109:17" pos:end="109:29"><expr pos:start="109:17" pos:end="109:29"><literal type="string" pos:start="109:17" pos:end="109:29">"read failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="111:13" pos:end="111:27">return <expr pos:start="111:20" pos:end="111:26"><operator pos:start="111:20" pos:end="111:20">-</operator><name pos:start="111:21" pos:end="111:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:47"><expr pos:start="115:9" pos:end="115:46"><name pos:start="115:9" pos:end="115:19">clientflags</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <call pos:start="115:23" pos:end="115:46"><name pos:start="115:23" pos:end="115:33">be32_to_cpu</name><argument_list pos:start="115:34" pos:end="115:46">(<argument pos:start="115:35" pos:end="115:45"><expr pos:start="115:35" pos:end="115:45"><name pos:start="115:35" pos:end="115:45">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="127:9"><if pos:start="119:9" pos:end="127:9">if <condition pos:start="119:12" pos:end="121:27">(<expr pos:start="119:13" pos:end="121:26"><call pos:start="119:13" pos:end="119:68"><name pos:start="119:13" pos:end="119:30">nbd_negotiate_read</name><argument_list pos:start="119:31" pos:end="119:68">(<argument pos:start="119:32" pos:end="119:42"><expr pos:start="119:32" pos:end="119:42"><name pos:start="119:32" pos:end="119:42"><name pos:start="119:32" pos:end="119:37">client</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:42">ioc</name></name></expr></argument>, <argument pos:start="119:45" pos:end="119:51"><expr pos:start="119:45" pos:end="119:51"><operator pos:start="119:45" pos:end="119:45">&amp;</operator><name pos:start="119:46" pos:end="119:51">length</name></expr></argument>, <argument pos:start="119:54" pos:end="119:67"><expr pos:start="119:54" pos:end="119:67"><sizeof pos:start="119:54" pos:end="119:67">sizeof<argument_list pos:start="119:60" pos:end="119:67">(<argument pos:start="119:61" pos:end="119:66"><expr pos:start="119:61" pos:end="119:66"><name pos:start="119:61" pos:end="119:66">length</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="119:70" pos:end="119:71">!=</operator>

            <sizeof pos:start="121:13" pos:end="121:26">sizeof<argument_list pos:start="121:19" pos:end="121:26">(<argument pos:start="121:20" pos:end="121:25"><expr pos:start="121:20" pos:end="121:25"><name pos:start="121:20" pos:end="121:25">length</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="121:29" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:27">

            <expr_stmt pos:start="123:13" pos:end="123:31"><expr pos:start="123:13" pos:end="123:30"><call pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:15">LOG</name><argument_list pos:start="123:16" pos:end="123:30">(<argument pos:start="123:17" pos:end="123:29"><expr pos:start="123:17" pos:end="123:29"><literal type="string" pos:start="123:17" pos:end="123:29">"read failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="125:13" pos:end="125:27">return <expr pos:start="125:20" pos:end="125:26"><operator pos:start="125:20" pos:end="125:20">-</operator><name pos:start="125:21" pos:end="125:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:37"><expr pos:start="129:9" pos:end="129:36"><name pos:start="129:9" pos:end="129:14">length</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <call pos:start="129:18" pos:end="129:36"><name pos:start="129:18" pos:end="129:28">be32_to_cpu</name><argument_list pos:start="129:29" pos:end="129:36">(<argument pos:start="129:30" pos:end="129:35"><expr pos:start="129:30" pos:end="129:35"><name pos:start="129:30" pos:end="129:35">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:57"><expr pos:start="133:9" pos:end="133:56"><call pos:start="133:9" pos:end="133:56"><name pos:start="133:9" pos:end="133:13">TRACE</name><argument_list pos:start="133:14" pos:end="133:56">(<argument pos:start="133:15" pos:end="133:42"><expr pos:start="133:15" pos:end="133:42"><literal type="string" pos:start="133:15" pos:end="133:35">"Checking option 0x%"</literal> <name pos:start="133:37" pos:end="133:42">PRIx32</name></expr></argument>, <argument pos:start="133:45" pos:end="133:55"><expr pos:start="133:45" pos:end="133:55"><name pos:start="133:45" pos:end="133:55">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="301:9"><if pos:start="135:9" pos:end="199:9">if <condition pos:start="135:12" pos:end="137:54">(<expr pos:start="135:13" pos:end="137:53"><name pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:18">client</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:28">tlscreds</name></name> <operator pos:start="135:30" pos:end="135:31">&amp;&amp;</operator>

            <name pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:18">client</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:23">ioc</name></name> <operator pos:start="137:25" pos:end="137:26">==</operator> <operator pos:start="137:28" pos:end="137:28">(</operator><name pos:start="137:29" pos:end="137:38">QIOChannel</name> <operator pos:start="137:40" pos:end="137:40">*</operator><operator pos:start="137:41" pos:end="137:41">)</operator><name pos:start="137:42" pos:end="137:53"><name pos:start="137:42" pos:end="137:47">client</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:53">sioc</name></name></expr>)</condition> <block pos:start="137:56" pos:end="199:9">{<block_content pos:start="139:13" pos:end="197:13">

            <decl_stmt pos:start="139:13" pos:end="139:29"><decl pos:start="139:13" pos:end="139:28"><type pos:start="139:13" pos:end="139:24"><name pos:start="139:13" pos:end="139:22">QIOChannel</name> <modifier pos:start="139:24" pos:end="139:24">*</modifier></type><name pos:start="139:25" pos:end="139:28">tioc</name></decl>;</decl_stmt>

            <if_stmt pos:start="141:13" pos:end="147:13"><if pos:start="141:13" pos:end="147:13">if <condition pos:start="141:16" pos:end="141:31">(<expr pos:start="141:17" pos:end="141:30"><operator pos:start="141:17" pos:end="141:17">!</operator><name pos:start="141:18" pos:end="141:30">fixedNewstyle</name></expr>)</condition> <block pos:start="141:33" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:31">

                <expr_stmt pos:start="143:17" pos:end="143:68"><expr pos:start="143:17" pos:end="143:67"><call pos:start="143:17" pos:end="143:67"><name pos:start="143:17" pos:end="143:21">TRACE</name><argument_list pos:start="143:22" pos:end="143:67">(<argument pos:start="143:23" pos:end="143:53"><expr pos:start="143:23" pos:end="143:53"><literal type="string" pos:start="143:23" pos:end="143:46">"Unsupported option 0x%"</literal> <name pos:start="143:48" pos:end="143:53">PRIx32</name></expr></argument>, <argument pos:start="143:56" pos:end="143:66"><expr pos:start="143:56" pos:end="143:66"><name pos:start="143:56" pos:end="143:66">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="145:17" pos:end="145:31">return <expr pos:start="145:24" pos:end="145:30"><operator pos:start="145:24" pos:end="145:24">-</operator><name pos:start="145:25" pos:end="145:30">EINVAL</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <switch pos:start="149:13" pos:end="197:13">switch <condition pos:start="149:20" pos:end="149:32">(<expr pos:start="149:21" pos:end="149:31"><name pos:start="149:21" pos:end="149:31">clientflags</name></expr>)</condition> <block pos:start="149:34" pos:end="197:13">{<block_content pos:start="151:13" pos:end="195:22">

            <case pos:start="151:13" pos:end="151:34">case <expr pos:start="151:18" pos:end="151:33"><name pos:start="151:18" pos:end="151:33">NBD_OPT_STARTTLS</name></expr>:</case>

                <expr_stmt pos:start="153:17" pos:end="153:69"><expr pos:start="153:17" pos:end="153:68"><name pos:start="153:17" pos:end="153:20">tioc</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <call pos:start="153:24" pos:end="153:68"><name pos:start="153:24" pos:end="153:52">nbd_negotiate_handle_starttls</name><argument_list pos:start="153:53" pos:end="153:68">(<argument pos:start="153:54" pos:end="153:59"><expr pos:start="153:54" pos:end="153:59"><name pos:start="153:54" pos:end="153:59">client</name></expr></argument>, <argument pos:start="153:62" pos:end="153:67"><expr pos:start="153:62" pos:end="153:67"><name pos:start="153:62" pos:end="153:67">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="159:17"><if pos:start="155:17" pos:end="159:17">if <condition pos:start="155:20" pos:end="155:26">(<expr pos:start="155:21" pos:end="155:25"><operator pos:start="155:21" pos:end="155:21">!</operator><name pos:start="155:22" pos:end="155:25">tioc</name></expr>)</condition> <block pos:start="155:28" pos:end="159:17">{<block_content pos:start="157:21" pos:end="157:32">

                    <return pos:start="157:21" pos:end="157:32">return <expr pos:start="157:28" pos:end="157:31"><operator pos:start="157:28" pos:end="157:28">-</operator><name pos:start="157:29" pos:end="157:31">EIO</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:50"><expr pos:start="161:17" pos:end="161:49"><call pos:start="161:17" pos:end="161:49"><name pos:start="161:17" pos:end="161:28">object_unref</name><argument_list pos:start="161:29" pos:end="161:49">(<argument pos:start="161:30" pos:end="161:48"><expr pos:start="161:30" pos:end="161:48"><call pos:start="161:30" pos:end="161:48"><name pos:start="161:30" pos:end="161:35">OBJECT</name><argument_list pos:start="161:36" pos:end="161:48">(<argument pos:start="161:37" pos:end="161:47"><expr pos:start="161:37" pos:end="161:47"><name pos:start="161:37" pos:end="161:47"><name pos:start="161:37" pos:end="161:42">client</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:47">ioc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:48"><expr pos:start="163:17" pos:end="163:47"><name pos:start="163:17" pos:end="163:27"><name pos:start="163:17" pos:end="163:22">client</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:27">ioc</name></name> <operator pos:start="163:29" pos:end="163:29">=</operator> <call pos:start="163:31" pos:end="163:47"><name pos:start="163:31" pos:end="163:41">QIO_CHANNEL</name><argument_list pos:start="163:42" pos:end="163:47">(<argument pos:start="163:43" pos:end="163:46"><expr pos:start="163:43" pos:end="163:46"><name pos:start="163:43" pos:end="163:46">tioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>



            <case pos:start="169:13" pos:end="169:37">case <expr pos:start="169:18" pos:end="169:36"><name pos:start="169:18" pos:end="169:36">NBD_OPT_EXPORT_NAME</name></expr>:</case>

                <comment type="block" pos:start="171:17" pos:end="171:77">/* No way to return an error to client, so drop connection */</comment>

                <expr_stmt pos:start="173:17" pos:end="173:75"><expr pos:start="173:17" pos:end="173:74"><call pos:start="173:17" pos:end="173:74"><name pos:start="173:17" pos:end="173:21">TRACE</name><argument_list pos:start="173:22" pos:end="173:74">(<argument pos:start="173:23" pos:end="173:60"><expr pos:start="173:23" pos:end="173:60"><literal type="string" pos:start="173:23" pos:end="173:60">"Option 0x%x not permitted before TLS"</literal></expr></argument>, <argument pos:start="173:63" pos:end="173:73"><expr pos:start="173:63" pos:end="173:73"><name pos:start="173:63" pos:end="173:73">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="175:17" pos:end="175:31">return <expr pos:start="175:24" pos:end="175:30"><operator pos:start="175:24" pos:end="175:24">-</operator><name pos:start="175:25" pos:end="175:30">EINVAL</name></expr>;</return>



            <default pos:start="179:13" pos:end="179:20">default:</default>

                <expr_stmt pos:start="181:17" pos:end="183:35"><expr pos:start="181:17" pos:end="183:34"><call pos:start="181:17" pos:end="183:34"><name pos:start="181:17" pos:end="181:21">TRACE</name><argument_list pos:start="181:22" pos:end="183:34">(<argument pos:start="181:23" pos:end="181:69"><expr pos:start="181:23" pos:end="181:69"><literal type="string" pos:start="181:23" pos:end="181:34">"Option 0x%"</literal> <name pos:start="181:36" pos:end="181:41">PRIx32</name> <literal type="string" pos:start="181:43" pos:end="181:69">" not permitted before TLS"</literal></expr></argument>,

                      <argument pos:start="183:23" pos:end="183:33"><expr pos:start="183:23" pos:end="183:33"><name pos:start="183:23" pos:end="183:33">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="185:17" pos:end="189:17"><if pos:start="185:17" pos:end="189:17">if <condition pos:start="185:20" pos:end="185:75">(<expr pos:start="185:21" pos:end="185:74"><call pos:start="185:21" pos:end="185:64"><name pos:start="185:21" pos:end="185:43">nbd_negotiate_drop_sync</name><argument_list pos:start="185:44" pos:end="185:64">(<argument pos:start="185:45" pos:end="185:55"><expr pos:start="185:45" pos:end="185:55"><name pos:start="185:45" pos:end="185:55"><name pos:start="185:45" pos:end="185:50">client</name><operator pos:start="185:51" pos:end="185:52">-&gt;</operator><name pos:start="185:53" pos:end="185:55">ioc</name></name></expr></argument>, <argument pos:start="185:58" pos:end="185:63"><expr pos:start="185:58" pos:end="185:63"><name pos:start="185:58" pos:end="185:63">length</name></expr></argument>)</argument_list></call> <operator pos:start="185:66" pos:end="185:67">!=</operator> <name pos:start="185:69" pos:end="185:74">length</name></expr>)</condition> <block pos:start="185:77" pos:end="189:17">{<block_content pos:start="187:21" pos:end="187:32">

                    <return pos:start="187:21" pos:end="187:32">return <expr pos:start="187:28" pos:end="187:31"><operator pos:start="187:28" pos:end="187:28">-</operator><name pos:start="187:29" pos:end="187:31">EIO</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="191:17" pos:end="193:52"><expr pos:start="191:17" pos:end="193:51"><call pos:start="191:17" pos:end="193:51"><name pos:start="191:17" pos:end="191:38">nbd_negotiate_send_rep</name><argument_list pos:start="191:39" pos:end="193:51">(<argument pos:start="191:40" pos:end="191:50"><expr pos:start="191:40" pos:end="191:50"><name pos:start="191:40" pos:end="191:50"><name pos:start="191:40" pos:end="191:45">client</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:50">ioc</name></name></expr></argument>, <argument pos:start="191:53" pos:end="191:72"><expr pos:start="191:53" pos:end="191:72"><name pos:start="191:53" pos:end="191:72">NBD_REP_ERR_TLS_REQD</name></expr></argument>,

                                       <argument pos:start="193:40" pos:end="193:50"><expr pos:start="193:40" pos:end="193:50"><name pos:start="193:40" pos:end="193:50">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="195:17" pos:end="195:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="199:11" pos:end="275:9">else if <condition pos:start="199:19" pos:end="199:33">(<expr pos:start="199:20" pos:end="199:32"><name pos:start="199:20" pos:end="199:32">fixedNewstyle</name></expr>)</condition> <block pos:start="199:35" pos:end="275:9">{<block_content pos:start="201:13" pos:end="273:13">

            <switch pos:start="201:13" pos:end="273:13">switch <condition pos:start="201:20" pos:end="201:32">(<expr pos:start="201:21" pos:end="201:31"><name pos:start="201:21" pos:end="201:31">clientflags</name></expr>)</condition> <block pos:start="201:34" pos:end="273:13">{<block_content pos:start="203:13" pos:end="271:22">

            <case pos:start="203:13" pos:end="203:30">case <expr pos:start="203:18" pos:end="203:29"><name pos:start="203:18" pos:end="203:29">NBD_OPT_LIST</name></expr>:</case>

                <expr_stmt pos:start="205:17" pos:end="205:64"><expr pos:start="205:17" pos:end="205:63"><name pos:start="205:17" pos:end="205:19">ret</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:63"><name pos:start="205:23" pos:end="205:47">nbd_negotiate_handle_list</name><argument_list pos:start="205:48" pos:end="205:63">(<argument pos:start="205:49" pos:end="205:54"><expr pos:start="205:49" pos:end="205:54"><name pos:start="205:49" pos:end="205:54">client</name></expr></argument>, <argument pos:start="205:57" pos:end="205:62"><expr pos:start="205:57" pos:end="205:62"><name pos:start="205:57" pos:end="205:62">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="207:17" pos:end="211:17"><if pos:start="207:17" pos:end="211:17">if <condition pos:start="207:20" pos:end="207:28">(<expr pos:start="207:21" pos:end="207:27"><name pos:start="207:21" pos:end="207:23">ret</name> <operator pos:start="207:25" pos:end="207:25">&lt;</operator> <literal type="number" pos:start="207:27" pos:end="207:27">0</literal></expr>)</condition> <block pos:start="207:30" pos:end="211:17">{<block_content pos:start="209:21" pos:end="209:31">

                    <return pos:start="209:21" pos:end="209:31">return <expr pos:start="209:28" pos:end="209:30"><name pos:start="209:28" pos:end="209:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <break pos:start="213:17" pos:end="213:22">break;</break>



            <case pos:start="217:13" pos:end="217:31">case <expr pos:start="217:18" pos:end="217:30"><name pos:start="217:18" pos:end="217:30">NBD_OPT_ABORT</name></expr>:</case>

                <return pos:start="219:17" pos:end="219:31">return <expr pos:start="219:24" pos:end="219:30"><operator pos:start="219:24" pos:end="219:24">-</operator><name pos:start="219:25" pos:end="219:30">EINVAL</name></expr>;</return>



            <case pos:start="223:13" pos:end="223:37">case <expr pos:start="223:18" pos:end="223:36"><name pos:start="223:18" pos:end="223:36">NBD_OPT_EXPORT_NAME</name></expr>:</case>

                <return pos:start="225:17" pos:end="225:72">return <expr pos:start="225:24" pos:end="225:71"><call pos:start="225:24" pos:end="225:71"><name pos:start="225:24" pos:end="225:55">nbd_negotiate_handle_export_name</name><argument_list pos:start="225:56" pos:end="225:71">(<argument pos:start="225:57" pos:end="225:62"><expr pos:start="225:57" pos:end="225:62"><name pos:start="225:57" pos:end="225:62">client</name></expr></argument>, <argument pos:start="225:65" pos:end="225:70"><expr pos:start="225:65" pos:end="225:70"><name pos:start="225:65" pos:end="225:70">length</name></expr></argument>)</argument_list></call></expr>;</return>



            <case pos:start="229:13" pos:end="229:34">case <expr pos:start="229:18" pos:end="229:33"><name pos:start="229:18" pos:end="229:33">NBD_OPT_STARTTLS</name></expr>:</case>

                <if_stmt pos:start="231:17" pos:end="235:17"><if pos:start="231:17" pos:end="235:17">if <condition pos:start="231:20" pos:end="231:75">(<expr pos:start="231:21" pos:end="231:74"><call pos:start="231:21" pos:end="231:64"><name pos:start="231:21" pos:end="231:43">nbd_negotiate_drop_sync</name><argument_list pos:start="231:44" pos:end="231:64">(<argument pos:start="231:45" pos:end="231:55"><expr pos:start="231:45" pos:end="231:55"><name pos:start="231:45" pos:end="231:55"><name pos:start="231:45" pos:end="231:50">client</name><operator pos:start="231:51" pos:end="231:52">-&gt;</operator><name pos:start="231:53" pos:end="231:55">ioc</name></name></expr></argument>, <argument pos:start="231:58" pos:end="231:63"><expr pos:start="231:58" pos:end="231:63"><name pos:start="231:58" pos:end="231:63">length</name></expr></argument>)</argument_list></call> <operator pos:start="231:66" pos:end="231:67">!=</operator> <name pos:start="231:69" pos:end="231:74">length</name></expr>)</condition> <block pos:start="231:77" pos:end="235:17">{<block_content pos:start="233:21" pos:end="233:32">

                    <return pos:start="233:21" pos:end="233:32">return <expr pos:start="233:28" pos:end="233:31"><operator pos:start="233:28" pos:end="233:28">-</operator><name pos:start="233:29" pos:end="233:31">EIO</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="237:17" pos:end="253:17"><if pos:start="237:17" pos:end="245:17">if <condition pos:start="237:20" pos:end="237:37">(<expr pos:start="237:21" pos:end="237:36"><name pos:start="237:21" pos:end="237:36"><name pos:start="237:21" pos:end="237:26">client</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:36">tlscreds</name></name></expr>)</condition> <block pos:start="237:39" pos:end="245:17">{<block_content pos:start="239:21" pos:end="243:56">

                    <expr_stmt pos:start="239:21" pos:end="239:49"><expr pos:start="239:21" pos:end="239:48"><call pos:start="239:21" pos:end="239:48"><name pos:start="239:21" pos:end="239:25">TRACE</name><argument_list pos:start="239:26" pos:end="239:48">(<argument pos:start="239:27" pos:end="239:47"><expr pos:start="239:27" pos:end="239:47"><literal type="string" pos:start="239:27" pos:end="239:47">"TLS already enabled"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="241:21" pos:end="243:56"><expr pos:start="241:21" pos:end="243:55"><call pos:start="241:21" pos:end="243:55"><name pos:start="241:21" pos:end="241:42">nbd_negotiate_send_rep</name><argument_list pos:start="241:43" pos:end="243:55">(<argument pos:start="241:44" pos:end="241:54"><expr pos:start="241:44" pos:end="241:54"><name pos:start="241:44" pos:end="241:54"><name pos:start="241:44" pos:end="241:49">client</name><operator pos:start="241:50" pos:end="241:51">-&gt;</operator><name pos:start="241:52" pos:end="241:54">ioc</name></name></expr></argument>, <argument pos:start="241:57" pos:end="241:75"><expr pos:start="241:57" pos:end="241:75"><name pos:start="241:57" pos:end="241:75">NBD_REP_ERR_INVALID</name></expr></argument>,

                                           <argument pos:start="243:44" pos:end="243:54"><expr pos:start="243:44" pos:end="243:54"><name pos:start="243:44" pos:end="243:54">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="245:19" pos:end="253:17">else <block pos:start="245:24" pos:end="253:17">{<block_content pos:start="247:21" pos:end="251:56">

                    <expr_stmt pos:start="247:21" pos:end="247:48"><expr pos:start="247:21" pos:end="247:47"><call pos:start="247:21" pos:end="247:47"><name pos:start="247:21" pos:end="247:25">TRACE</name><argument_list pos:start="247:26" pos:end="247:47">(<argument pos:start="247:27" pos:end="247:46"><expr pos:start="247:27" pos:end="247:46"><literal type="string" pos:start="247:27" pos:end="247:46">"TLS not configured"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="249:21" pos:end="251:56"><expr pos:start="249:21" pos:end="251:55"><call pos:start="249:21" pos:end="251:55"><name pos:start="249:21" pos:end="249:42">nbd_negotiate_send_rep</name><argument_list pos:start="249:43" pos:end="251:55">(<argument pos:start="249:44" pos:end="249:54"><expr pos:start="249:44" pos:end="249:54"><name pos:start="249:44" pos:end="249:54"><name pos:start="249:44" pos:end="249:49">client</name><operator pos:start="249:50" pos:end="249:51">-&gt;</operator><name pos:start="249:52" pos:end="249:54">ioc</name></name></expr></argument>, <argument pos:start="249:57" pos:end="249:74"><expr pos:start="249:57" pos:end="249:74"><name pos:start="249:57" pos:end="249:74">NBD_REP_ERR_POLICY</name></expr></argument>,

                                           <argument pos:start="251:44" pos:end="251:54"><expr pos:start="251:44" pos:end="251:54"><name pos:start="251:44" pos:end="251:54">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="255:17" pos:end="255:22">break;</break>

            <default pos:start="257:13" pos:end="257:20">default:</default>

                <expr_stmt pos:start="259:17" pos:end="259:68"><expr pos:start="259:17" pos:end="259:67"><call pos:start="259:17" pos:end="259:67"><name pos:start="259:17" pos:end="259:21">TRACE</name><argument_list pos:start="259:22" pos:end="259:67">(<argument pos:start="259:23" pos:end="259:53"><expr pos:start="259:23" pos:end="259:53"><literal type="string" pos:start="259:23" pos:end="259:46">"Unsupported option 0x%"</literal> <name pos:start="259:48" pos:end="259:53">PRIx32</name></expr></argument>, <argument pos:start="259:56" pos:end="259:66"><expr pos:start="259:56" pos:end="259:66"><name pos:start="259:56" pos:end="259:66">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="261:17" pos:end="265:17"><if pos:start="261:17" pos:end="265:17">if <condition pos:start="261:20" pos:end="261:75">(<expr pos:start="261:21" pos:end="261:74"><call pos:start="261:21" pos:end="261:64"><name pos:start="261:21" pos:end="261:43">nbd_negotiate_drop_sync</name><argument_list pos:start="261:44" pos:end="261:64">(<argument pos:start="261:45" pos:end="261:55"><expr pos:start="261:45" pos:end="261:55"><name pos:start="261:45" pos:end="261:55"><name pos:start="261:45" pos:end="261:50">client</name><operator pos:start="261:51" pos:end="261:52">-&gt;</operator><name pos:start="261:53" pos:end="261:55">ioc</name></name></expr></argument>, <argument pos:start="261:58" pos:end="261:63"><expr pos:start="261:58" pos:end="261:63"><name pos:start="261:58" pos:end="261:63">length</name></expr></argument>)</argument_list></call> <operator pos:start="261:66" pos:end="261:67">!=</operator> <name pos:start="261:69" pos:end="261:74">length</name></expr>)</condition> <block pos:start="261:77" pos:end="265:17">{<block_content pos:start="263:21" pos:end="263:32">

                    <return pos:start="263:21" pos:end="263:32">return <expr pos:start="263:28" pos:end="263:31"><operator pos:start="263:28" pos:end="263:28">-</operator><name pos:start="263:29" pos:end="263:31">EIO</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="267:17" pos:end="269:52"><expr pos:start="267:17" pos:end="269:51"><call pos:start="267:17" pos:end="269:51"><name pos:start="267:17" pos:end="267:38">nbd_negotiate_send_rep</name><argument_list pos:start="267:39" pos:end="269:51">(<argument pos:start="267:40" pos:end="267:50"><expr pos:start="267:40" pos:end="267:50"><name pos:start="267:40" pos:end="267:50"><name pos:start="267:40" pos:end="267:45">client</name><operator pos:start="267:46" pos:end="267:47">-&gt;</operator><name pos:start="267:48" pos:end="267:50">ioc</name></name></expr></argument>, <argument pos:start="267:53" pos:end="267:69"><expr pos:start="267:53" pos:end="267:69"><name pos:start="267:53" pos:end="267:69">NBD_REP_ERR_UNSUP</name></expr></argument>,

                                       <argument pos:start="269:40" pos:end="269:50"><expr pos:start="269:40" pos:end="269:50"><name pos:start="269:40" pos:end="269:50">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="271:17" pos:end="271:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="275:11" pos:end="301:9">else <block pos:start="275:16" pos:end="301:9">{<block_content pos:start="285:13" pos:end="299:13">

            <comment type="block" pos:start="277:13" pos:end="283:15">/*

             * If broken new-style we should drop the connection

             * for anything except NBD_OPT_EXPORT_NAME

             */</comment>

            <switch pos:start="285:13" pos:end="299:13">switch <condition pos:start="285:20" pos:end="285:32">(<expr pos:start="285:21" pos:end="285:31"><name pos:start="285:21" pos:end="285:31">clientflags</name></expr>)</condition> <block pos:start="285:34" pos:end="299:13">{<block_content pos:start="287:13" pos:end="297:31">

            <case pos:start="287:13" pos:end="287:37">case <expr pos:start="287:18" pos:end="287:36"><name pos:start="287:18" pos:end="287:36">NBD_OPT_EXPORT_NAME</name></expr>:</case>

                <return pos:start="289:17" pos:end="289:72">return <expr pos:start="289:24" pos:end="289:71"><call pos:start="289:24" pos:end="289:71"><name pos:start="289:24" pos:end="289:55">nbd_negotiate_handle_export_name</name><argument_list pos:start="289:56" pos:end="289:71">(<argument pos:start="289:57" pos:end="289:62"><expr pos:start="289:57" pos:end="289:62"><name pos:start="289:57" pos:end="289:62">client</name></expr></argument>, <argument pos:start="289:65" pos:end="289:70"><expr pos:start="289:65" pos:end="289:70"><name pos:start="289:65" pos:end="289:70">length</name></expr></argument>)</argument_list></call></expr>;</return>



            <default pos:start="293:13" pos:end="293:20">default:</default>

                <expr_stmt pos:start="295:17" pos:end="295:68"><expr pos:start="295:17" pos:end="295:67"><call pos:start="295:17" pos:end="295:67"><name pos:start="295:17" pos:end="295:21">TRACE</name><argument_list pos:start="295:22" pos:end="295:67">(<argument pos:start="295:23" pos:end="295:53"><expr pos:start="295:23" pos:end="295:53"><literal type="string" pos:start="295:23" pos:end="295:46">"Unsupported option 0x%"</literal> <name pos:start="295:48" pos:end="295:53">PRIx32</name></expr></argument>, <argument pos:start="295:56" pos:end="295:66"><expr pos:start="295:56" pos:end="295:66"><name pos:start="295:56" pos:end="295:66">clientflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="297:17" pos:end="297:31">return <expr pos:start="297:24" pos:end="297:30"><operator pos:start="297:24" pos:end="297:24">-</operator><name pos:start="297:25" pos:end="297:30">EINVAL</name></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
