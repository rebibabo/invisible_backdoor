<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13651.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:39">apply_motion_generic</name><parameter_list pos:start="1:40" pos:end="3:59">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:50">RoqContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">ri</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:61"><decl pos:start="1:57" pos:end="1:61"><type pos:start="1:57" pos:end="1:61"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:61">x</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:68"><decl pos:start="1:64" pos:end="1:68"><type pos:start="1:64" pos:end="1:68"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:68">y</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:80"><decl pos:start="1:71" pos:end="1:80"><type pos:start="1:71" pos:end="1:80"><name pos:start="1:71" pos:end="1:73">int</name></type> <name pos:start="1:75" pos:end="1:80">deltax</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:50"><decl pos:start="3:41" pos:end="3:50"><type pos:start="3:41" pos:end="3:50"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:50">deltay</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:58"><decl pos:start="3:53" pos:end="3:58"><type pos:start="3:53" pos:end="3:58"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:58">sz</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:5">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">mx</name></decl>, <decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:14">my</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">cp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:6">mx</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <name pos:start="11:10" pos:end="11:10">x</name> <operator pos:start="11:12" pos:end="11:12">+</operator> <name pos:start="11:14" pos:end="11:19">deltax</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:6">my</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:10">y</name> <operator pos:start="13:12" pos:end="13:12">+</operator> <name pos:start="13:14" pos:end="13:19">deltay</name></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:43">/* check MV against frame boundaries */</comment>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="21:43">(<expr pos:start="19:9" pos:end="21:42"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:11">mx</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal><operator pos:start="19:16" pos:end="19:16">)</operator> <operator pos:start="19:18" pos:end="19:19">||</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:23">mx</name> <operator pos:start="19:25" pos:end="19:25">&gt;</operator> <name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:28">ri</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:35">width</name></name> <operator pos:start="19:37" pos:end="19:37">-</operator> <name pos:start="19:39" pos:end="19:40">sz</name><operator pos:start="19:41" pos:end="19:41">)</operator> <operator pos:start="19:43" pos:end="19:44">||</operator>

        <operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:11">my</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal><operator pos:start="21:16" pos:end="21:16">)</operator> <operator pos:start="21:18" pos:end="21:19">||</operator> <operator pos:start="21:21" pos:end="21:21">(</operator><name pos:start="21:22" pos:end="21:23">my</name> <operator pos:start="21:25" pos:end="21:25">&gt;</operator> <name pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:28">ri</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">height</name></name> <operator pos:start="21:38" pos:end="21:38">-</operator> <name pos:start="21:40" pos:end="21:41">sz</name><operator pos:start="21:42" pos:end="21:42">)</operator></expr>)</condition> <block pos:start="21:45" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <expr_stmt pos:start="23:9" pos:end="25:43"><expr pos:start="23:9" pos:end="25:42"><call pos:start="23:9" pos:end="25:42"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="25:42">(<argument pos:start="23:16" pos:end="23:24"><expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:17">ri</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">avctx</name></name></expr></argument>, <argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:41" pos:end="23:115"><expr pos:start="23:41" pos:end="23:115"><literal type="string" pos:start="23:41" pos:end="23:115">"motion vector out of bounds: MV = (%d, %d), boundaries = (0, 0, %d, %d)\n"</literal></expr></argument>,

            <argument pos:start="25:13" pos:end="25:14"><expr pos:start="25:13" pos:end="25:14"><name pos:start="25:13" pos:end="25:14">mx</name></expr></argument>, <argument pos:start="25:17" pos:end="25:18"><expr pos:start="25:17" pos:end="25:18"><name pos:start="25:17" pos:end="25:18">my</name></expr></argument>, <argument pos:start="25:21" pos:end="25:29"><expr pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:22">ri</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:29">width</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:33">ri</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:41">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:40">(<expr pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:10">ri</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:22">last_frame</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:28">data</name><index pos:start="33:29" pos:end="33:31">[<expr pos:start="33:30" pos:end="33:30"><literal type="number" pos:start="33:30" pos:end="33:30">0</literal></expr>]</index></name> <operator pos:start="33:33" pos:end="33:34">==</operator> <name pos:start="33:36" pos:end="33:39">NULL</name></expr>)</condition> <block pos:start="33:42" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:82"><expr pos:start="35:9" pos:end="35:81"><call pos:start="35:9" pos:end="35:81"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:81">(<argument pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:17">ri</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">avctx</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:41" pos:end="35:80"><expr pos:start="35:41" pos:end="35:80"><literal type="string" pos:start="35:41" pos:end="35:80">"Invalid decode type. Invalid header?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="43:5" pos:end="55:5">for<control pos:start="43:8" pos:end="43:29">(<init pos:start="43:9" pos:end="43:15"><expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:10">cp</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:23"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:18">cp</name> <operator pos:start="43:20" pos:end="43:20">&lt;</operator> <literal type="number" pos:start="43:22" pos:end="43:22">3</literal></expr>;</condition> <incr pos:start="43:25" pos:end="43:28"><expr pos:start="43:25" pos:end="43:28"><name pos:start="43:25" pos:end="43:26">cp</name><operator pos:start="43:27" pos:end="43:28">++</operator></expr></incr>)</control> <block pos:start="43:31" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:44">

        <decl_stmt pos:start="45:9" pos:end="45:56"><decl pos:start="45:9" pos:end="45:55"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:21">outstride</name> <init pos:start="45:23" pos:end="45:55">= <expr pos:start="45:25" pos:end="45:55"><name pos:start="45:25" pos:end="45:55"><name pos:start="45:25" pos:end="45:26">ri</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:41">current_frame</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:51">linesize</name><index pos:start="45:52" pos:end="45:55">[<expr pos:start="45:53" pos:end="45:54"><name pos:start="45:53" pos:end="45:54">cp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:56"><decl pos:start="47:9" pos:end="47:55"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:20">instride</name>  <init pos:start="47:23" pos:end="47:55">= <expr pos:start="47:25" pos:end="47:55"><name pos:start="47:25" pos:end="47:55"><name pos:start="47:25" pos:end="47:26">ri</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:38">last_frame</name>   <operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:51">linesize</name><index pos:start="47:52" pos:end="47:55">[<expr pos:start="47:53" pos:end="47:54"><name pos:start="47:53" pos:end="47:54">cp</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="53:44"><expr pos:start="49:9" pos:end="53:43"><call pos:start="49:9" pos:end="53:43"><name pos:start="49:9" pos:end="49:18">block_copy</name><argument_list pos:start="49:19" pos:end="53:43">(<argument pos:start="49:20" pos:end="49:64"><expr pos:start="49:20" pos:end="49:64"><name pos:start="49:20" pos:end="49:46"><name pos:start="49:20" pos:end="49:21">ri</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:36">current_frame</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:42">data</name><index pos:start="49:43" pos:end="49:46">[<expr pos:start="49:44" pos:end="49:45"><name pos:start="49:44" pos:end="49:45">cp</name></expr>]</index></name> <operator pos:start="49:48" pos:end="49:48">+</operator> <name pos:start="49:50" pos:end="49:50">y</name><operator pos:start="49:51" pos:end="49:51">*</operator><name pos:start="49:52" pos:end="49:60">outstride</name> <operator pos:start="49:62" pos:end="49:62">+</operator> <name pos:start="49:64" pos:end="49:64">x</name></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:62"><expr pos:start="51:20" pos:end="51:62"><name pos:start="51:20" pos:end="51:43"><name pos:start="51:20" pos:end="51:21">ri</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:33">last_frame</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:39">data</name><index pos:start="51:40" pos:end="51:43">[<expr pos:start="51:41" pos:end="51:42"><name pos:start="51:41" pos:end="51:42">cp</name></expr>]</index></name> <operator pos:start="51:45" pos:end="51:45">+</operator> <name pos:start="51:47" pos:end="51:48">my</name><operator pos:start="51:49" pos:end="51:49">*</operator><name pos:start="51:50" pos:end="51:57">instride</name> <operator pos:start="51:59" pos:end="51:59">+</operator> <name pos:start="51:61" pos:end="51:62">mx</name></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:28"><expr pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:28">outstride</name></expr></argument>, <argument pos:start="53:31" pos:end="53:38"><expr pos:start="53:31" pos:end="53:38"><name pos:start="53:31" pos:end="53:38">instride</name></expr></argument>, <argument pos:start="53:41" pos:end="53:42"><expr pos:start="53:41" pos:end="53:42"><name pos:start="53:41" pos:end="53:42">sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
