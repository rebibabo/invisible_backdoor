<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18778.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mpegps_read_packet</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">AVPacket</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:43">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:13">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>, <decl pos:start="9:14" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:22">startcode</name></decl>, <decl pos:start="9:25" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:25">i</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:31">type</name></decl>, <decl pos:start="9:34" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:41">codec_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pts</name></decl>, <decl pos:start="11:18" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:20">dts</name></decl>;</decl_stmt>



 <label pos:start="15:2" pos:end="15:6"><name pos:start="15:2" pos:end="15:5">redo</name>:</label>

    <expr_stmt pos:start="17:5" pos:end="17:69"><expr pos:start="17:5" pos:end="17:68"><name pos:start="17:5" pos:end="17:7">len</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:68"><name pos:start="17:11" pos:end="17:32">mpegps_read_pes_header</name><argument_list pos:start="17:33" pos:end="17:68">(<argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">s</name></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">NULL</name></expr></argument>, <argument pos:start="17:43" pos:end="17:52"><expr pos:start="17:43" pos:end="17:52"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:52">startcode</name></expr></argument>, <argument pos:start="17:55" pos:end="17:58"><expr pos:start="17:55" pos:end="17:58"><operator pos:start="17:55" pos:end="17:55">&amp;</operator><name pos:start="17:56" pos:end="17:58">pts</name></expr></argument>, <argument pos:start="17:61" pos:end="17:64"><expr pos:start="17:61" pos:end="17:64"><operator pos:start="17:61" pos:end="17:61">&amp;</operator><name pos:start="17:62" pos:end="17:64">dts</name></expr></argument>, <argument pos:start="17:67" pos:end="17:67"><expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:19"><if pos:start="19:5" pos:end="21:19">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:19"><block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">len</name></expr>;</return></block_content></block></if></if_stmt>

    

    <comment type="block" pos:start="25:5" pos:end="25:25">/* now find stream */</comment>

    <for pos:start="27:5" pos:end="35:5">for<control pos:start="27:8" pos:end="27:32">(<init pos:start="27:9" pos:end="27:12"><expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:9">i</name><operator pos:start="27:10" pos:end="27:10">=</operator><literal type="number" pos:start="27:11" pos:end="27:11">0</literal></expr>;</init><condition pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:13">i</name><operator pos:start="27:14" pos:end="27:14">&lt;</operator><name pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:27">nb_streams</name></name></expr>;</condition><incr pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:29">i</name><operator pos:start="27:30" pos:end="27:31">++</operator></expr></incr>)</control> <block pos:start="27:34" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:23">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:10">st</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:26"><name pos:start="29:14" pos:end="29:14">s</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:23">streams</name><index pos:start="29:24" pos:end="29:26">[<expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:32">(<expr pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:14">st</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:18">id</name></name> <operator pos:start="31:20" pos:end="31:21">==</operator> <name pos:start="31:23" pos:end="31:31">startcode</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <goto pos:start="33:13" pos:end="33:23">goto <name pos:start="33:18" pos:end="33:22">found</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="37:5" pos:end="71:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:49">(<expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:17">startcode</name> <operator pos:start="37:19" pos:end="37:20">&gt;=</operator> <literal type="number" pos:start="37:22" pos:end="37:26">0x1e0</literal> <operator pos:start="37:28" pos:end="37:29">&amp;&amp;</operator> <name pos:start="37:31" pos:end="37:39">startcode</name> <operator pos:start="37:41" pos:end="37:42">&lt;=</operator> <literal type="number" pos:start="37:44" pos:end="37:48">0x1ef</literal></expr>)</condition> <block pos:start="37:51" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:39">

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:12">type</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:31">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:16">codec_id</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:38">CODEC_ID_MPEG2VIDEO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="49:5">else if <condition pos:start="43:15" pos:end="43:56">(<expr pos:start="43:16" pos:end="43:55"><name pos:start="43:16" pos:end="43:24">startcode</name> <operator pos:start="43:26" pos:end="43:27">&gt;=</operator> <literal type="number" pos:start="43:29" pos:end="43:33">0x1c0</literal> <operator pos:start="43:35" pos:end="43:36">&amp;&amp;</operator> <name pos:start="43:38" pos:end="43:46">startcode</name> <operator pos:start="43:48" pos:end="43:49">&lt;=</operator> <literal type="number" pos:start="43:51" pos:end="43:55">0x1df</literal></expr>)</condition> <block pos:start="43:58" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:32">

        <expr_stmt pos:start="45:9" pos:end="45:32"><expr pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:12">type</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:31">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:16">codec_id</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:31">CODEC_ID_MP2</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="55:5">else if <condition pos:start="49:15" pos:end="49:54">(<expr pos:start="49:16" pos:end="49:53"><name pos:start="49:16" pos:end="49:24">startcode</name> <operator pos:start="49:26" pos:end="49:27">&gt;=</operator> <literal type="number" pos:start="49:29" pos:end="49:32">0x80</literal> <operator pos:start="49:34" pos:end="49:35">&amp;&amp;</operator> <name pos:start="49:37" pos:end="49:45">startcode</name> <operator pos:start="49:47" pos:end="49:48">&lt;=</operator> <literal type="number" pos:start="49:50" pos:end="49:53">0x9f</literal></expr>)</condition> <block pos:start="49:56" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:32">

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:12">type</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:31">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:32"><expr pos:start="53:9" pos:end="53:31"><name pos:start="53:9" pos:end="53:16">codec_id</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:31">CODEC_ID_AC3</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="61:5">else if <condition pos:start="55:15" pos:end="55:54">(<expr pos:start="55:16" pos:end="55:53"><name pos:start="55:16" pos:end="55:24">startcode</name> <operator pos:start="55:26" pos:end="55:27">&gt;=</operator> <literal type="number" pos:start="55:29" pos:end="55:32">0xa0</literal> <operator pos:start="55:34" pos:end="55:35">&amp;&amp;</operator> <name pos:start="55:37" pos:end="55:45">startcode</name> <operator pos:start="55:47" pos:end="55:48">&lt;=</operator> <literal type="number" pos:start="55:50" pos:end="55:53">0xbf</literal></expr>)</condition> <block pos:start="55:56" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:38">

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:12">type</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:31">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:16">codec_id</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:37">CODEC_ID_PCM_S16BE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="71:5">else <block pos:start="61:12" pos:end="71:5">{<block_content pos:start="63:5" pos:end="69:18">

    <label pos:start="63:5" pos:end="63:9"><name pos:start="63:5" pos:end="63:8">skip</name>:</label>

        <comment type="block" pos:start="65:9" pos:end="65:25">/* skip packet */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><call pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:17">url_fskip</name><argument_list pos:start="67:18" pos:end="67:30">(<argument pos:start="67:19" pos:end="67:24"><expr pos:start="67:19" pos:end="67:24"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:24">pb</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:18">goto <name pos:start="69:14" pos:end="69:17">redo</name>;</goto>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:43">/* no stream found: add a new stream */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:37"><expr pos:start="75:5" pos:end="75:36"><name pos:start="75:5" pos:end="75:6">st</name> <operator pos:start="75:8" pos:end="75:8">=</operator> <call pos:start="75:10" pos:end="75:36"><name pos:start="75:10" pos:end="75:22">av_new_stream</name><argument_list pos:start="75:23" pos:end="75:36">(<argument pos:start="75:24" pos:end="75:24"><expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">s</name></expr></argument>, <argument pos:start="75:27" pos:end="75:35"><expr pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:35">startcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:18"><if pos:start="77:5" pos:end="79:18">if <condition pos:start="77:8" pos:end="77:12">(<expr pos:start="77:9" pos:end="77:11"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:11">st</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:18"><block_content pos:start="79:9" pos:end="79:18"> 

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">skip</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:32"><expr pos:start="81:5" pos:end="81:31"><name pos:start="81:5" pos:end="81:24"><name pos:start="81:5" pos:end="81:6">st</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:13">codec</name><operator pos:start="81:14" pos:end="81:14">.</operator><name pos:start="81:15" pos:end="81:24">codec_type</name></name> <operator pos:start="81:26" pos:end="81:26">=</operator> <name pos:start="81:28" pos:end="81:31">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:34"><expr pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:6">st</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:14">.</operator><name pos:start="83:15" pos:end="83:22">codec_id</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:33">codec_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:29"><if pos:start="85:5" pos:end="87:29">if <condition pos:start="85:8" pos:end="85:39">(<expr pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:16">codec_id</name> <operator pos:start="85:18" pos:end="85:19">!=</operator> <name pos:start="85:21" pos:end="85:38">CODEC_ID_PCM_S16BE</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:29"><block_content pos:start="87:9" pos:end="87:29">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:10">st</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:24">need_parsing</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

 <label pos:start="89:2" pos:end="89:7"><name pos:start="89:2" pos:end="89:6">found</name>:</label>

    <if_stmt pos:start="91:5" pos:end="121:5"><if pos:start="91:5" pos:end="121:5">if <condition pos:start="91:8" pos:end="91:47">(<expr pos:start="91:9" pos:end="91:46"><name pos:start="91:9" pos:end="91:17">startcode</name> <operator pos:start="91:19" pos:end="91:20">&gt;=</operator> <literal type="number" pos:start="91:22" pos:end="91:25">0xa0</literal> <operator pos:start="91:27" pos:end="91:28">&amp;&amp;</operator> <name pos:start="91:30" pos:end="91:38">startcode</name> <operator pos:start="91:40" pos:end="91:41">&lt;=</operator> <literal type="number" pos:start="91:43" pos:end="91:46">0xbf</literal></expr>)</condition> <block pos:start="91:49" pos:end="121:5">{<block_content pos:start="93:9" pos:end="119:76">

        <decl_stmt pos:start="93:9" pos:end="93:21"><decl pos:start="93:9" pos:end="93:14"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:14">b1</name></decl>, <decl pos:start="93:17" pos:end="93:20"><type ref="prev" pos:start="93:9" pos:end="93:11"/><name pos:start="93:17" pos:end="93:20">freq</name></decl>;</decl_stmt>



        <comment type="block" pos:start="97:9" pos:end="99:24">/* for LPCM, we just skip the header and consider it is raw

           audio data */</comment>

        <if_stmt pos:start="101:9" pos:end="103:22"><if pos:start="101:9" pos:end="103:22">if <condition pos:start="101:12" pos:end="101:21">(<expr pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">len</name> <operator pos:start="101:17" pos:end="101:18">&lt;=</operator> <literal type="number" pos:start="101:20" pos:end="101:20">3</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:22"><block_content pos:start="103:13" pos:end="103:22">

            <goto pos:start="103:13" pos:end="103:22">goto <name pos:start="103:18" pos:end="103:21">skip</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:25"><expr pos:start="105:9" pos:end="105:24"><call pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:16">get_byte</name><argument_list pos:start="105:17" pos:end="105:24">(<argument pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:23"><operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:23"><name pos:start="105:19" pos:end="105:19">s</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:27" pos:end="105:83">/* emphasis (1), muse(1), reserved(1), frame number(5) */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:10">b1</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <call pos:start="107:14" pos:end="107:29"><name pos:start="107:14" pos:end="107:21">get_byte</name><argument_list pos:start="107:22" pos:end="107:29">(<argument pos:start="107:23" pos:end="107:28"><expr pos:start="107:23" pos:end="107:28"><operator pos:start="107:23" pos:end="107:23">&amp;</operator><name pos:start="107:24" pos:end="107:28"><name pos:start="107:24" pos:end="107:24">s</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:28">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="107:32" pos:end="107:81">/* quant (2), freq(2), reserved(1), channels(3) */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:25"><expr pos:start="109:9" pos:end="109:24"><call pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:16">get_byte</name><argument_list pos:start="109:17" pos:end="109:24">(<argument pos:start="109:18" pos:end="109:23"><expr pos:start="109:18" pos:end="109:23"><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="109:27" pos:end="109:66">/* dynamic range control (0x80 = off) */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:17"><expr pos:start="111:9" pos:end="111:16"><name pos:start="111:9" pos:end="111:11">len</name> <operator pos:start="111:13" pos:end="111:14">-=</operator> <literal type="number" pos:start="111:16" pos:end="111:16">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:12">freq</name> <operator pos:start="113:14" pos:end="113:14">=</operator> <operator pos:start="113:16" pos:end="113:16">(</operator><name pos:start="113:17" pos:end="113:18">b1</name> <operator pos:start="113:20" pos:end="113:21">&gt;&gt;</operator> <literal type="number" pos:start="113:23" pos:end="113:23">4</literal><operator pos:start="113:24" pos:end="113:24">)</operator> <operator pos:start="113:26" pos:end="113:26">&amp;</operator> <literal type="number" pos:start="113:28" pos:end="113:28">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:52"><expr pos:start="115:9" pos:end="115:51"><name pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:10">st</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:17">codec</name><operator pos:start="115:18" pos:end="115:18">.</operator><name pos:start="115:19" pos:end="115:29">sample_rate</name></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:51"><name pos:start="115:33" pos:end="115:45">lpcm_freq_tab</name><index pos:start="115:46" pos:end="115:51">[<expr pos:start="115:47" pos:end="115:50"><name pos:start="115:47" pos:end="115:50">freq</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:42"><expr pos:start="117:9" pos:end="117:41"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:10">st</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:17">codec</name><operator pos:start="117:18" pos:end="117:18">.</operator><name pos:start="117:19" pos:end="117:26">channels</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <literal type="number" pos:start="117:30" pos:end="117:32">1</literal> <operator pos:start="117:32" pos:end="117:32">+</operator> <operator pos:start="117:34" pos:end="117:34">(</operator><name pos:start="117:35" pos:end="117:36">b1</name> <operator pos:start="117:38" pos:end="117:38">&amp;</operator> <literal type="number" pos:start="117:40" pos:end="117:40">7</literal><operator pos:start="117:41" pos:end="117:41">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:76"><expr pos:start="119:9" pos:end="119:75"><name pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:10">st</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">codec</name><operator pos:start="119:18" pos:end="119:18">.</operator><name pos:start="119:19" pos:end="119:26">bit_rate</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <name pos:start="119:30" pos:end="119:47"><name pos:start="119:30" pos:end="119:31">st</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:38">codec</name><operator pos:start="119:39" pos:end="119:39">.</operator><name pos:start="119:40" pos:end="119:47">channels</name></name> <operator pos:start="119:49" pos:end="119:49">*</operator> <name pos:start="119:51" pos:end="119:71"><name pos:start="119:51" pos:end="119:52">st</name><operator pos:start="119:53" pos:end="119:54">-&gt;</operator><name pos:start="119:55" pos:end="119:59">codec</name><operator pos:start="119:60" pos:end="119:60">.</operator><name pos:start="119:61" pos:end="119:71">sample_rate</name></name> <operator pos:start="119:73" pos:end="119:73">*</operator> <literal type="number" pos:start="119:75" pos:end="119:75">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:28"><expr pos:start="123:5" pos:end="123:27"><call pos:start="123:5" pos:end="123:27"><name pos:start="123:5" pos:end="123:17">av_new_packet</name><argument_list pos:start="123:18" pos:end="123:27">(<argument pos:start="123:19" pos:end="123:21"><expr pos:start="123:19" pos:end="123:21"><name pos:start="123:19" pos:end="123:21">pkt</name></expr></argument>, <argument pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:45"><expr pos:start="125:5" pos:end="125:44"><call pos:start="125:5" pos:end="125:44"><name pos:start="125:5" pos:end="125:14">get_buffer</name><argument_list pos:start="125:15" pos:end="125:44">(<argument pos:start="125:16" pos:end="125:21"><expr pos:start="125:16" pos:end="125:21"><operator pos:start="125:16" pos:end="125:16">&amp;</operator><name pos:start="125:17" pos:end="125:21"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:21">pb</name></name></expr></argument>, <argument pos:start="125:24" pos:end="125:32"><expr pos:start="125:24" pos:end="125:32"><name pos:start="125:24" pos:end="125:32"><name pos:start="125:24" pos:end="125:26">pkt</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:32">data</name></name></expr></argument>, <argument pos:start="125:35" pos:end="125:43"><expr pos:start="125:35" pos:end="125:43"><name pos:start="125:35" pos:end="125:43"><name pos:start="125:35" pos:end="125:37">pkt</name><operator pos:start="125:38" pos:end="125:39">-&gt;</operator><name pos:start="125:40" pos:end="125:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:19"><expr pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:12"><name pos:start="127:5" pos:end="127:7">pkt</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:12">pts</name></name> <operator pos:start="127:14" pos:end="127:14">=</operator> <name pos:start="127:16" pos:end="127:18">pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:19"><expr pos:start="129:5" pos:end="129:18"><name pos:start="129:5" pos:end="129:12"><name pos:start="129:5" pos:end="129:7">pkt</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:12">dts</name></name> <operator pos:start="129:14" pos:end="129:14">=</operator> <name pos:start="129:16" pos:end="129:18">dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="140:0"><expr pos:start="131:5" pos:end="131:33"><name pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:7">pkt</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:21">stream_index</name></name> <operator pos:start="131:23" pos:end="131:23">=</operator> <name pos:start="131:25" pos:end="131:33"><name pos:start="131:25" pos:end="131:26">st</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:33">index</name></name></expr>;</expr_stmt>

<cpp:if pos:start="133:1" pos:end="133:5">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:5"><literal type="number" pos:start="133:5" pos:end="133:5">0</literal></expr></cpp:if>

    printf("%d: pts=%0.3f dts=%0.3f\n",

           pkt-&gt;stream_index, pkt-&gt;pts / 90000.0, pkt-&gt;dts / 90000.0);

<cpp:endif pos:start="139:1" pos:end="139:6">#<cpp:directive pos:start="139:2" pos:end="139:6">endif</cpp:directive></cpp:endif>

    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
