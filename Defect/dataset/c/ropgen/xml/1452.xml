<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1452.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">opt_opencl_bench</name><parameter_list pos:start="1:21" pos:end="1:68">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:25">void</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33">optctx</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">opt</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:24">nb_devices</name> <init pos:start="5:26" pos:end="5:28">= <expr pos:start="5:28" pos:end="5:28"><literal type="number" pos:start="5:28" pos:end="5:28">0</literal></expr></init></decl>, <decl pos:start="5:31" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:31" pos:end="5:35">count</name> <init pos:start="5:37" pos:end="5:39">= <expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:17">score</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">AVOpenCLDeviceList</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:35">device_list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">AVOpenCLDeviceNode</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:35">device_node</name> <init pos:start="11:37" pos:end="11:42">= <expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:25">OpenCLDeviceBenchmark</name> <modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:34">devices</name> <init pos:start="13:36" pos:end="13:41">= <expr pos:start="13:38" pos:end="13:41"><name pos:start="13:38" pos:end="13:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18">cl_platform_id</name></type> <name pos:start="15:20" pos:end="15:27">platform</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:29">av_opencl_get_device_list</name><argument_list pos:start="19:30" pos:end="19:43">(<argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><operator pos:start="19:31" pos:end="19:31">&amp;</operator><name pos:start="19:32" pos:end="19:42">device_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="21:5" pos:end="23:64">for <control pos:start="21:9" pos:end="21:51">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:46"><expr pos:start="21:17" pos:end="21:45"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:31">device_list</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:45">platform_num</name></name></expr>;</condition> <incr pos:start="21:48" pos:end="21:50"><expr pos:start="21:48" pos:end="21:50"><name pos:start="21:48" pos:end="21:48">i</name><operator pos:start="21:49" pos:end="21:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="23:64"><block_content pos:start="23:9" pos:end="23:64">

        <expr_stmt pos:start="23:9" pos:end="23:64"><expr pos:start="23:9" pos:end="23:63"><name pos:start="23:9" pos:end="23:18">nb_devices</name> <operator pos:start="23:20" pos:end="23:21">+=</operator> <name pos:start="23:23" pos:end="23:51"><name pos:start="23:23" pos:end="23:33">device_list</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:48">platform_node</name><index pos:start="23:49" pos:end="23:51">[<expr pos:start="23:50" pos:end="23:50"><name pos:start="23:50" pos:end="23:50">i</name></expr>]</index></name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:63">device_num</name></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:19">nb_devices</name></expr>)</condition> <block pos:start="25:22" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:31">

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:66">(<argument pos:start="27:16" pos:end="27:19"><expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr></argument>, <argument pos:start="27:22" pos:end="27:33"><expr pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:36" pos:end="27:65"><expr pos:start="27:36" pos:end="27:65"><literal type="string" pos:start="27:36" pos:end="27:65">"No OpenCL device detected!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:80">(<expr pos:start="33:9" pos:end="33:79"><operator pos:start="33:9" pos:end="33:9">!</operator><operator pos:start="33:10" pos:end="33:10">(</operator><name pos:start="33:11" pos:end="33:17">devices</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:78"><name pos:start="33:21" pos:end="33:35">av_malloc_array</name><argument_list pos:start="33:36" pos:end="33:78">(<argument pos:start="33:37" pos:end="33:46"><expr pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:46">nb_devices</name></expr></argument>, <argument pos:start="33:49" pos:end="33:77"><expr pos:start="33:49" pos:end="33:77"><sizeof pos:start="33:49" pos:end="33:77">sizeof<argument_list pos:start="33:55" pos:end="33:77">(<argument pos:start="33:56" pos:end="33:76"><expr pos:start="33:56" pos:end="33:76"><name pos:start="33:56" pos:end="33:76">OpenCLDeviceBenchmark</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="33:79" pos:end="33:79">)</operator></expr>)</condition> <block pos:start="33:82" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:31">

        <expr_stmt pos:start="35:9" pos:end="35:66"><expr pos:start="35:9" pos:end="35:65"><call pos:start="35:9" pos:end="35:65"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:65">(<argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr></argument>, <argument pos:start="35:22" pos:end="35:33"><expr pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:36" pos:end="35:64"><expr pos:start="35:36" pos:end="35:64"><literal type="string" pos:start="35:36" pos:end="35:64">"Could not allocate buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="43:5" pos:end="71:5">for <control pos:start="43:9" pos:end="43:51">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:46"><expr pos:start="43:17" pos:end="43:45"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:45"><name pos:start="43:21" pos:end="43:31">device_list</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:45">platform_num</name></name></expr>;</condition> <incr pos:start="43:48" pos:end="43:50"><expr pos:start="43:48" pos:end="43:50"><name pos:start="43:48" pos:end="43:48">i</name><operator pos:start="43:49" pos:end="43:50">++</operator></expr></incr>)</control> <block pos:start="43:53" pos:end="71:5">{<block_content pos:start="45:9" pos:end="69:9">

        <for pos:start="45:9" pos:end="69:9">for <control pos:start="45:13" pos:end="45:71">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">j</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:66"><expr pos:start="45:21" pos:end="45:65"><name pos:start="45:21" pos:end="45:21">j</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <name pos:start="45:25" pos:end="45:53"><name pos:start="45:25" pos:end="45:35">device_list</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:50">platform_node</name><index pos:start="45:51" pos:end="45:53">[<expr pos:start="45:52" pos:end="45:52"><name pos:start="45:52" pos:end="45:52">i</name></expr>]</index></name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:65">device_num</name></expr>;</condition> <incr pos:start="45:68" pos:end="45:70"><expr pos:start="45:68" pos:end="45:70"><name pos:start="45:68" pos:end="45:68">j</name><operator pos:start="45:69" pos:end="45:70">++</operator></expr></incr>)</control> <block pos:start="45:73" pos:end="69:9">{<block_content pos:start="47:13" pos:end="67:13">

            <expr_stmt pos:start="47:13" pos:end="47:72"><expr pos:start="47:13" pos:end="47:71"><name pos:start="47:13" pos:end="47:23">device_node</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:55"><name pos:start="47:27" pos:end="47:37">device_list</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:52">platform_node</name><index pos:start="47:53" pos:end="47:55">[<expr pos:start="47:54" pos:end="47:54"><name pos:start="47:54" pos:end="47:54">i</name></expr>]</index></name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:71"><name pos:start="47:58" pos:end="47:68">device_node</name><index pos:start="47:69" pos:end="47:71">[<expr pos:start="47:70" pos:end="47:70"><name pos:start="47:70" pos:end="47:70">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:66"><expr pos:start="49:13" pos:end="49:65"><name pos:start="49:13" pos:end="49:20">platform</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:52"><name pos:start="49:24" pos:end="49:34">device_list</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:49">platform_node</name><index pos:start="49:50" pos:end="49:52">[<expr pos:start="49:51" pos:end="49:51"><name pos:start="49:51" pos:end="49:51">i</name></expr>]</index></name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:65">platform_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:81"><expr pos:start="51:13" pos:end="51:80"><name pos:start="51:13" pos:end="51:17">score</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:80"><name pos:start="51:21" pos:end="51:39">av_opencl_benchmark</name><argument_list pos:start="51:40" pos:end="51:80">(<argument pos:start="51:41" pos:end="51:51"><expr pos:start="51:41" pos:end="51:51"><name pos:start="51:41" pos:end="51:51">device_node</name></expr></argument>, <argument pos:start="51:54" pos:end="51:61"><expr pos:start="51:54" pos:end="51:61"><name pos:start="51:54" pos:end="51:61">platform</name></expr></argument>, <argument pos:start="51:64" pos:end="51:79"><expr pos:start="51:64" pos:end="51:79"><name pos:start="51:64" pos:end="51:79">run_opencl_bench</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="67:13"><if pos:start="53:13" pos:end="67:13">if <condition pos:start="53:16" pos:end="53:26">(<expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:21">score</name> <operator pos:start="53:23" pos:end="53:23">&gt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>)</condition> <block pos:start="53:28" pos:end="67:13">{<block_content pos:start="55:17" pos:end="65:24">

                <expr_stmt pos:start="55:17" pos:end="55:48"><expr pos:start="55:17" pos:end="55:47"><name pos:start="55:17" pos:end="55:30"><name pos:start="55:17" pos:end="55:23">devices</name><index pos:start="55:24" pos:end="55:30">[<expr pos:start="55:25" pos:end="55:29"><name pos:start="55:25" pos:end="55:29">count</name></expr>]</index></name><operator pos:start="55:31" pos:end="55:31">.</operator><name pos:start="55:32" pos:end="55:43">platform_idx</name> <operator pos:start="55:45" pos:end="55:45">=</operator> <name pos:start="55:47" pos:end="55:47">i</name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:23">devices</name><index pos:start="57:24" pos:end="57:30">[<expr pos:start="57:25" pos:end="57:29"><name pos:start="57:25" pos:end="57:29">count</name></expr>]</index></name><operator pos:start="57:31" pos:end="57:31">.</operator><name pos:start="57:32" pos:end="57:41">device_idx</name> <operator pos:start="57:43" pos:end="57:43">=</operator> <name pos:start="57:45" pos:end="57:45">j</name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:47"><expr pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:23">devices</name><index pos:start="59:24" pos:end="59:30">[<expr pos:start="59:25" pos:end="59:29"><name pos:start="59:25" pos:end="59:29">count</name></expr>]</index></name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:38">runtime</name> <operator pos:start="59:40" pos:end="59:40">=</operator> <name pos:start="59:42" pos:end="59:46">score</name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="63:63"><expr pos:start="61:17" pos:end="63:62"><call pos:start="61:17" pos:end="63:62"><name pos:start="61:17" pos:end="61:26">av_strlcpy</name><argument_list pos:start="61:27" pos:end="63:62">(<argument pos:start="61:28" pos:end="61:53"><expr pos:start="61:28" pos:end="61:53"><name pos:start="61:28" pos:end="61:41"><name pos:start="61:28" pos:end="61:34">devices</name><index pos:start="61:35" pos:end="61:41">[<expr pos:start="61:36" pos:end="61:40"><name pos:start="61:36" pos:end="61:40">count</name></expr>]</index></name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:53">device_name</name></expr></argument>, <argument pos:start="61:56" pos:end="61:79"><expr pos:start="61:56" pos:end="61:79"><name pos:start="61:56" pos:end="61:79"><name pos:start="61:56" pos:end="61:66">device_node</name><operator pos:start="61:67" pos:end="61:68">-&gt;</operator><name pos:start="61:69" pos:end="61:79">device_name</name></name></expr></argument>,

                           <argument pos:start="63:28" pos:end="63:61"><expr pos:start="63:28" pos:end="63:61"><sizeof pos:start="63:28" pos:end="63:61">sizeof<argument_list pos:start="63:34" pos:end="63:61">(<argument pos:start="63:35" pos:end="63:60"><expr pos:start="63:35" pos:end="63:60"><name pos:start="63:35" pos:end="63:48"><name pos:start="63:35" pos:end="63:41">devices</name><index pos:start="63:42" pos:end="63:48">[<expr pos:start="63:43" pos:end="63:47"><name pos:start="63:43" pos:end="63:47">count</name></expr>]</index></name><operator pos:start="63:49" pos:end="63:49">.</operator><name pos:start="63:50" pos:end="63:60">device_name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:24"><expr pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:21">count</name><operator pos:start="65:22" pos:end="65:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="73:5" pos:end="73:82"><expr pos:start="73:5" pos:end="73:81"><call pos:start="73:5" pos:end="73:81"><name pos:start="73:5" pos:end="73:9">qsort</name><argument_list pos:start="73:10" pos:end="73:81">(<argument pos:start="73:11" pos:end="73:17"><expr pos:start="73:11" pos:end="73:17"><name pos:start="73:11" pos:end="73:17">devices</name></expr></argument>, <argument pos:start="73:20" pos:end="73:24"><expr pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:24">count</name></expr></argument>, <argument pos:start="73:27" pos:end="73:55"><expr pos:start="73:27" pos:end="73:55"><sizeof pos:start="73:27" pos:end="73:55">sizeof<argument_list pos:start="73:33" pos:end="73:55">(<argument pos:start="73:34" pos:end="73:54"><expr pos:start="73:34" pos:end="73:54"><name pos:start="73:34" pos:end="73:54">OpenCLDeviceBenchmark</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="73:58" pos:end="73:80"><expr pos:start="73:58" pos:end="73:80"><name pos:start="73:58" pos:end="73:80">compare_ocl_device_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:72"><expr pos:start="75:5" pos:end="75:71"><call pos:start="75:5" pos:end="75:71"><name pos:start="75:5" pos:end="75:11">fprintf</name><argument_list pos:start="75:12" pos:end="75:71">(<argument pos:start="75:13" pos:end="75:18"><expr pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:18">stderr</name></expr></argument>, <argument pos:start="75:21" pos:end="75:70"><expr pos:start="75:21" pos:end="75:70"><literal type="string" pos:start="75:21" pos:end="75:70">"platform_idx\tdevice_idx\tdevice_name\truntime\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="83:60">for <control pos:start="77:9" pos:end="77:31">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:26"><expr pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:25">count</name></expr>;</condition> <incr pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:28">i</name><operator pos:start="77:29" pos:end="77:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:9" pos:end="83:60"><block_content pos:start="79:9" pos:end="83:60">

        <expr_stmt pos:start="79:9" pos:end="83:60"><expr pos:start="79:9" pos:end="83:59"><call pos:start="79:9" pos:end="83:59"><name pos:start="79:9" pos:end="79:15">fprintf</name><argument_list pos:start="79:16" pos:end="83:59">(<argument pos:start="79:17" pos:end="79:22"><expr pos:start="79:17" pos:end="79:22"><name pos:start="79:17" pos:end="79:22">stdout</name></expr></argument>, <argument pos:start="79:25" pos:end="79:49"><expr pos:start="79:25" pos:end="79:49"><literal type="string" pos:start="79:25" pos:end="79:39">"%d\t%d\t%s\t%"</literal><name pos:start="79:40" pos:end="79:45">PRId64</name><literal type="string" pos:start="79:46" pos:end="79:49">"\n"</literal></expr></argument>,

                <argument pos:start="81:17" pos:end="81:39"><expr pos:start="81:17" pos:end="81:39"><name pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:23">devices</name><index pos:start="81:24" pos:end="81:26">[<expr pos:start="81:25" pos:end="81:25"><name pos:start="81:25" pos:end="81:25">i</name></expr>]</index></name><operator pos:start="81:27" pos:end="81:27">.</operator><name pos:start="81:28" pos:end="81:39">platform_idx</name></expr></argument>, <argument pos:start="81:42" pos:end="81:62"><expr pos:start="81:42" pos:end="81:62"><name pos:start="81:42" pos:end="81:51"><name pos:start="81:42" pos:end="81:48">devices</name><index pos:start="81:49" pos:end="81:51">[<expr pos:start="81:50" pos:end="81:50"><name pos:start="81:50" pos:end="81:50">i</name></expr>]</index></name><operator pos:start="81:52" pos:end="81:52">.</operator><name pos:start="81:53" pos:end="81:62">device_idx</name></expr></argument>,

                <argument pos:start="83:17" pos:end="83:38"><expr pos:start="83:17" pos:end="83:38"><name pos:start="83:17" pos:end="83:26"><name pos:start="83:17" pos:end="83:23">devices</name><index pos:start="83:24" pos:end="83:26">[<expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">i</name></expr>]</index></name><operator pos:start="83:27" pos:end="83:27">.</operator><name pos:start="83:28" pos:end="83:38">device_name</name></expr></argument>, <argument pos:start="83:41" pos:end="83:58"><expr pos:start="83:41" pos:end="83:58"><name pos:start="83:41" pos:end="83:50"><name pos:start="83:41" pos:end="83:47">devices</name><index pos:start="83:48" pos:end="83:50">[<expr pos:start="83:49" pos:end="83:49"><name pos:start="83:49" pos:end="83:49">i</name></expr>]</index></name><operator pos:start="83:51" pos:end="83:51">.</operator><name pos:start="83:52" pos:end="83:58">runtime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><call pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:30">av_opencl_free_device_list</name><argument_list pos:start="87:31" pos:end="87:44">(<argument pos:start="87:32" pos:end="87:43"><expr pos:start="87:32" pos:end="87:43"><operator pos:start="87:32" pos:end="87:32">&amp;</operator><name pos:start="87:33" pos:end="87:43">device_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:21"><expr pos:start="89:5" pos:end="89:20"><call pos:start="89:5" pos:end="89:20"><name pos:start="89:5" pos:end="89:11">av_free</name><argument_list pos:start="89:12" pos:end="89:20">(<argument pos:start="89:13" pos:end="89:19"><expr pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:19">devices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
