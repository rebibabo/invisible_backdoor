<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6142.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">reset_contexts</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">SnowContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list><block pos:start="1:43" pos:end="29:1">{<block_content pos:start="3:5" pos:end="27:56">

    <decl_stmt pos:start="3:5" pos:end="3:40"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:19">plane_index</name></decl>, <decl pos:start="3:22" pos:end="3:26"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:22" pos:end="3:26">level</name></decl>, <decl pos:start="3:29" pos:end="3:39"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:29" pos:end="3:39">orientation</name></decl>;</decl_stmt>



    <for pos:start="7:5" pos:end="19:5">for<control pos:start="7:8" pos:end="7:52">(<init pos:start="7:9" pos:end="7:22"><expr pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:19">plane_index</name><operator pos:start="7:20" pos:end="7:20">=</operator><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr>;</init> <condition pos:start="7:24" pos:end="7:37"><expr pos:start="7:24" pos:end="7:36"><name pos:start="7:24" pos:end="7:34">plane_index</name><operator pos:start="7:35" pos:end="7:35">&lt;</operator><literal type="number" pos:start="7:36" pos:end="7:36">2</literal></expr>;</condition> <incr pos:start="7:39" pos:end="7:51"><expr pos:start="7:39" pos:end="7:51"><name pos:start="7:39" pos:end="7:49">plane_index</name><operator pos:start="7:50" pos:end="7:51">++</operator></expr></incr>)</control><block pos:start="7:53" pos:end="19:5">{<block_content pos:start="9:9" pos:end="17:9">

        <for pos:start="9:9" pos:end="17:9">for<control pos:start="9:12" pos:end="9:67">(<init pos:start="9:13" pos:end="9:20"><expr pos:start="9:13" pos:end="9:19"><name pos:start="9:13" pos:end="9:17">level</name><operator pos:start="9:18" pos:end="9:18">=</operator><literal type="number" pos:start="9:19" pos:end="9:19">0</literal></expr>;</init> <condition pos:start="9:22" pos:end="9:58"><expr pos:start="9:22" pos:end="9:57"><name pos:start="9:22" pos:end="9:26">level</name><operator pos:start="9:27" pos:end="9:27">&lt;</operator><name pos:start="9:28" pos:end="9:57"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:57">spatial_decomposition_count</name></name></expr>;</condition> <incr pos:start="9:60" pos:end="9:66"><expr pos:start="9:60" pos:end="9:66"><name pos:start="9:60" pos:end="9:64">level</name><operator pos:start="9:65" pos:end="9:66">++</operator></expr></incr>)</control><block pos:start="9:68" pos:end="17:9">{<block_content pos:start="11:13" pos:end="15:13">

            <for pos:start="11:13" pos:end="15:13">for<control pos:start="11:16" pos:end="11:70">(<init pos:start="11:17" pos:end="11:40"><expr pos:start="11:17" pos:end="11:39"><name pos:start="11:17" pos:end="11:27">orientation</name><operator pos:start="11:28" pos:end="11:28">=</operator><ternary pos:start="11:29" pos:end="11:39"><condition pos:start="11:29" pos:end="11:35"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">level</name></expr> ?</condition><then pos:start="11:37" pos:end="11:37"> <expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr></then><else pos:start="11:38" pos:end="11:39">:<expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr></else></ternary></expr>;</init> <condition pos:start="11:42" pos:end="11:55"><expr pos:start="11:42" pos:end="11:54"><name pos:start="11:42" pos:end="11:52">orientation</name><operator pos:start="11:53" pos:end="11:53">&lt;</operator><literal type="number" pos:start="11:54" pos:end="11:54">4</literal></expr>;</condition> <incr pos:start="11:57" pos:end="11:69"><expr pos:start="11:57" pos:end="11:69"><name pos:start="11:57" pos:end="11:67">orientation</name><operator pos:start="11:68" pos:end="11:69">++</operator></expr></incr>)</control><block pos:start="11:71" pos:end="15:13">{<block_content pos:start="13:17" pos:end="13:142">

                <expr_stmt pos:start="13:17" pos:end="13:142"><expr pos:start="13:17" pos:end="13:141"><call pos:start="13:17" pos:end="13:141"><name pos:start="13:17" pos:end="13:22">memset</name><argument_list pos:start="13:23" pos:end="13:141">(<argument pos:start="13:24" pos:end="13:75"><expr pos:start="13:24" pos:end="13:75"><name pos:start="13:24" pos:end="13:44"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:31">plane</name><index pos:start="13:32" pos:end="13:44">[<expr pos:start="13:33" pos:end="13:43"><name pos:start="13:33" pos:end="13:43">plane_index</name></expr>]</index></name><operator pos:start="13:45" pos:end="13:45">.</operator><name pos:start="13:46" pos:end="13:69"><name pos:start="13:46" pos:end="13:49">band</name><index pos:start="13:50" pos:end="13:56">[<expr pos:start="13:51" pos:end="13:55"><name pos:start="13:51" pos:end="13:55">level</name></expr>]</index><index pos:start="13:57" pos:end="13:69">[<expr pos:start="13:58" pos:end="13:68"><name pos:start="13:58" pos:end="13:68">orientation</name></expr>]</index></name><operator pos:start="13:70" pos:end="13:70">.</operator><name pos:start="13:71" pos:end="13:75">state</name></expr></argument>, <argument pos:start="13:78" pos:end="13:78"><expr pos:start="13:78" pos:end="13:78"><literal type="number" pos:start="13:78" pos:end="13:78">0</literal></expr></argument>, <argument pos:start="13:81" pos:end="13:140"><expr pos:start="13:81" pos:end="13:140"><sizeof pos:start="13:81" pos:end="13:140">sizeof<argument_list pos:start="13:87" pos:end="13:140">(<argument pos:start="13:88" pos:end="13:139"><expr pos:start="13:88" pos:end="13:139"><name pos:start="13:88" pos:end="13:108"><name pos:start="13:88" pos:end="13:88">s</name><operator pos:start="13:89" pos:end="13:90">-&gt;</operator><name pos:start="13:91" pos:end="13:95">plane</name><index pos:start="13:96" pos:end="13:108">[<expr pos:start="13:97" pos:end="13:107"><name pos:start="13:97" pos:end="13:107">plane_index</name></expr>]</index></name><operator pos:start="13:109" pos:end="13:109">.</operator><name pos:start="13:110" pos:end="13:133"><name pos:start="13:110" pos:end="13:113">band</name><index pos:start="13:114" pos:end="13:120">[<expr pos:start="13:115" pos:end="13:119"><name pos:start="13:115" pos:end="13:119">level</name></expr>]</index><index pos:start="13:121" pos:end="13:133">[<expr pos:start="13:122" pos:end="13:132"><name pos:start="13:122" pos:end="13:132">orientation</name></expr>]</index></name><operator pos:start="13:134" pos:end="13:134">.</operator><name pos:start="13:135" pos:end="13:139">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><call pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:57">(<argument pos:start="21:12" pos:end="21:27"><expr pos:start="21:12" pos:end="21:27"><name pos:start="21:12" pos:end="21:27"><name pos:start="21:12" pos:end="21:12">s</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:21">mb_band</name><operator pos:start="21:22" pos:end="21:22">.</operator><name pos:start="21:23" pos:end="21:27">state</name></name></expr></argument>, <argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></argument>, <argument pos:start="21:33" pos:end="21:56"><expr pos:start="21:33" pos:end="21:56"><sizeof pos:start="21:33" pos:end="21:56">sizeof<argument_list pos:start="21:39" pos:end="21:56">(<argument pos:start="21:40" pos:end="21:55"><expr pos:start="21:40" pos:end="21:55"><name pos:start="21:40" pos:end="21:55"><name pos:start="21:40" pos:end="21:40">s</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:49">mb_band</name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:55">state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:64"><expr pos:start="23:5" pos:end="23:63"><call pos:start="23:5" pos:end="23:63"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:63">(<argument pos:start="23:12" pos:end="23:30"><expr pos:start="23:12" pos:end="23:30"><name pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:21">mv_band</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>]</index></name><operator pos:start="23:25" pos:end="23:25">.</operator><name pos:start="23:26" pos:end="23:30">state</name></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">0</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:62"><expr pos:start="23:36" pos:end="23:62"><sizeof pos:start="23:36" pos:end="23:62">sizeof<argument_list pos:start="23:42" pos:end="23:62">(<argument pos:start="23:43" pos:end="23:61"><expr pos:start="23:43" pos:end="23:61"><name pos:start="23:43" pos:end="23:55"><name pos:start="23:43" pos:end="23:43">s</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:52">mv_band</name><index pos:start="23:53" pos:end="23:55">[<expr pos:start="23:54" pos:end="23:54"><literal type="number" pos:start="23:54" pos:end="23:54">0</literal></expr>]</index></name><operator pos:start="23:56" pos:end="23:56">.</operator><name pos:start="23:57" pos:end="23:61">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><call pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:63">(<argument pos:start="25:12" pos:end="25:30"><expr pos:start="25:12" pos:end="25:30"><name pos:start="25:12" pos:end="25:24"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">mv_band</name><index pos:start="25:22" pos:end="25:24">[<expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr>]</index></name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:30">state</name></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr></argument>, <argument pos:start="25:36" pos:end="25:62"><expr pos:start="25:36" pos:end="25:62"><sizeof pos:start="25:36" pos:end="25:62">sizeof<argument_list pos:start="25:42" pos:end="25:62">(<argument pos:start="25:43" pos:end="25:61"><expr pos:start="25:43" pos:end="25:61"><name pos:start="25:43" pos:end="25:55"><name pos:start="25:43" pos:end="25:43">s</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:52">mv_band</name><index pos:start="25:53" pos:end="25:55">[<expr pos:start="25:54" pos:end="25:54"><literal type="number" pos:start="25:54" pos:end="25:54">1</literal></expr>]</index></name><operator pos:start="25:56" pos:end="25:56">.</operator><name pos:start="25:57" pos:end="25:61">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><call pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:55">(<argument pos:start="27:12" pos:end="27:26"><expr pos:start="27:12" pos:end="27:26"><name pos:start="27:12" pos:end="27:26"><name pos:start="27:12" pos:end="27:12">s</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:26">header_state</name></name></expr></argument>, <argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:54"><expr pos:start="27:32" pos:end="27:54"><sizeof pos:start="27:32" pos:end="27:54">sizeof<argument_list pos:start="27:38" pos:end="27:54">(<argument pos:start="27:39" pos:end="27:53"><expr pos:start="27:39" pos:end="27:53"><name pos:start="27:39" pos:end="27:53"><name pos:start="27:39" pos:end="27:39">s</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:53">header_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
