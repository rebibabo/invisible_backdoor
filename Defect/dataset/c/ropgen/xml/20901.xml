<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20901.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:20">do_rt_sigreturn</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:34">CPUAlphaState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:30">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">abi_ulong</name></type> <name pos:start="5:15" pos:end="5:24">frame_addr</name> <init pos:start="5:26" pos:end="5:41">= <expr pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:30">env</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:34">ir</name><index pos:start="5:35" pos:end="5:41">[<expr pos:start="5:36" pos:end="5:40"><name pos:start="5:36" pos:end="5:40">IR_A0</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">target_rt_sigframe</name></name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">sigset_t</name></type> <name pos:start="9:14" pos:end="9:16">set</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:60"><name pos:start="13:10" pos:end="13:25">lock_user_struct</name><argument_list pos:start="13:26" pos:end="13:60">(<argument pos:start="13:27" pos:end="13:37"><expr pos:start="13:27" pos:end="13:37"><name pos:start="13:27" pos:end="13:37">VERIFY_READ</name></expr></argument>, <argument pos:start="13:40" pos:end="13:44"><expr pos:start="13:40" pos:end="13:44"><name pos:start="13:40" pos:end="13:44">frame</name></expr></argument>, <argument pos:start="13:47" pos:end="13:56"><expr pos:start="13:47" pos:end="13:56"><name pos:start="13:47" pos:end="13:56">frame_addr</name></expr></argument>, <argument pos:start="13:59" pos:end="13:59"><expr pos:start="13:59" pos:end="13:59"><literal type="number" pos:start="13:59" pos:end="13:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:63" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:22">

        <goto pos:start="15:9" pos:end="15:22">goto <name pos:start="15:14" pos:end="15:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:25">target_to_host_sigset</name><argument_list pos:start="19:26" pos:end="19:55">(<argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:30">set</name></expr></argument>, <argument pos:start="19:33" pos:end="19:54"><expr pos:start="19:33" pos:end="19:54"><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:54"><name pos:start="19:34" pos:end="19:38">frame</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:42">uc</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:54">tuc_sigmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><call pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:15">sigprocmask</name><argument_list pos:start="21:16" pos:end="21:40">(<argument pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:27">SIG_SETMASK</name></expr></argument>, <argument pos:start="21:30" pos:end="21:33"><expr pos:start="21:30" pos:end="21:33"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:33">set</name></expr></argument>, <argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:57">(<expr pos:start="25:9" pos:end="25:56"><call pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:26">restore_sigcontext</name><argument_list pos:start="25:27" pos:end="25:56">(<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:30">env</name></expr></argument>, <argument pos:start="25:33" pos:end="25:55"><expr pos:start="25:33" pos:end="25:55"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:55"><name pos:start="25:34" pos:end="25:38">frame</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:42">uc</name><operator pos:start="25:43" pos:end="25:43">.</operator><name pos:start="25:44" pos:end="25:55">tuc_mcontext</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:59" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:22">

        <goto pos:start="27:9" pos:end="27:22">goto <name pos:start="27:14" pos:end="27:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="35:53">(<expr pos:start="31:9" pos:end="35:52"><call pos:start="31:9" pos:end="35:41"><name pos:start="31:9" pos:end="31:22">do_sigaltstack</name><argument_list pos:start="31:23" pos:end="35:41">(<argument pos:start="31:24" pos:end="33:58"><expr pos:start="31:24" pos:end="33:58"><name pos:start="31:24" pos:end="31:33">frame_addr</name> <operator pos:start="31:35" pos:end="31:35">+</operator> <call pos:start="31:37" pos:end="33:58"><name pos:start="31:37" pos:end="31:44">offsetof</name><argument_list pos:start="31:45" pos:end="33:58">(<argument pos:start="31:46" pos:end="31:70"><expr pos:start="31:46" pos:end="31:70">struct <name pos:start="31:53" pos:end="31:70">target_rt_sigframe</name></expr></argument>,

                                             <argument pos:start="33:46" pos:end="33:57"><expr pos:start="33:46" pos:end="33:57"><name pos:start="33:46" pos:end="33:57"><name pos:start="33:46" pos:end="33:47">uc</name><operator pos:start="33:48" pos:end="33:48">.</operator><name pos:start="33:49" pos:end="33:57">tuc_stack</name></name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">0</literal></expr></argument>, <argument pos:start="35:27" pos:end="35:40"><expr pos:start="35:27" pos:end="35:40"><name pos:start="35:27" pos:end="35:40"><name pos:start="35:27" pos:end="35:29">env</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:33">ir</name><index pos:start="35:34" pos:end="35:40">[<expr pos:start="35:35" pos:end="35:39"><name pos:start="35:35" pos:end="35:39">IR_SP</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="35:43" pos:end="35:44">==</operator> <operator pos:start="35:46" pos:end="35:46">-</operator><name pos:start="35:47" pos:end="35:52">EFAULT</name></expr>)</condition> <block pos:start="35:55" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:22">

        <goto pos:start="37:9" pos:end="37:22">goto <name pos:start="37:14" pos:end="37:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><call pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:22">unlock_user_struct</name><argument_list pos:start="43:23" pos:end="43:44">(<argument pos:start="43:24" pos:end="43:28"><expr pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:28">frame</name></expr></argument>, <argument pos:start="43:31" pos:end="43:40"><expr pos:start="43:31" pos:end="43:40"><name pos:start="43:31" pos:end="43:40">frame_addr</name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="45:5" pos:end="45:26">return <expr pos:start="45:12" pos:end="45:25"><name pos:start="45:12" pos:end="45:25"><name pos:start="45:12" pos:end="45:14">env</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:18">ir</name><index pos:start="45:19" pos:end="45:25">[<expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">IR_V0</name></expr>]</index></name></expr>;</return>





 <label pos:start="51:2" pos:end="51:10"><name pos:start="51:2" pos:end="51:9">badframe</name>:</label>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:22">unlock_user_struct</name><argument_list pos:start="53:23" pos:end="53:44">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">frame</name></expr></argument>, <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:40">frame_addr</name></expr></argument>, <argument pos:start="53:43" pos:end="53:43"><expr pos:start="53:43" pos:end="53:43"><literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><call pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:13">force_sig</name><argument_list pos:start="55:14" pos:end="55:29">(<argument pos:start="55:15" pos:end="55:28"><expr pos:start="55:15" pos:end="55:28"><name pos:start="55:15" pos:end="55:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
