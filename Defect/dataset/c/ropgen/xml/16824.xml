<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16824.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">process_tns_coeffs</name><parameter_list pos:start="1:30" pos:end="3:57">(<parameter pos:start="1:31" pos:end="1:55"><decl pos:start="1:31" pos:end="1:55"><type pos:start="1:31" pos:end="1:55"><name pos:start="1:31" pos:end="1:50">TemporalNoiseShaping</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">tns</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:62">float</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:77">tns_coefs_raw</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:39"><decl pos:start="3:31" pos:end="3:39"><type pos:start="3:31" pos:end="3:39"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:39">order</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:46"><decl pos:start="3:42" pos:end="3:46"><type pos:start="3:42" pos:end="3:46"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:46">w</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:56"><decl pos:start="3:49" pos:end="3:56"><type pos:start="3:49" pos:end="3:56"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:56">filt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:17">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">int</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">idx</name> <init pos:start="9:14" pos:end="9:37">= <expr pos:start="9:16" pos:end="9:37"><name pos:start="9:16" pos:end="9:37"><name pos:start="9:16" pos:end="9:18">tns</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:28">coef_idx</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">w</name></expr>]</index><index pos:start="9:32" pos:end="9:37">[<expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">filt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">lpc</name> <init pos:start="11:16" pos:end="11:35">= <expr pos:start="11:18" pos:end="11:35"><name pos:start="11:18" pos:end="11:35"><name pos:start="11:18" pos:end="11:20">tns</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:26">coef</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">w</name></expr>]</index><index pos:start="11:30" pos:end="11:35">[<expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">filt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:72"><decl pos:start="13:5" pos:end="13:71"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:21">iqfac_p</name> <init pos:start="13:23" pos:end="13:71">= <expr pos:start="13:25" pos:end="13:71"><operator pos:start="13:25" pos:end="13:25">(</operator><operator pos:start="13:26" pos:end="13:26">(</operator><literal type="number" pos:start="13:27" pos:end="13:27">1</literal> <operator pos:start="13:29" pos:end="13:30">&lt;&lt;</operator> <operator pos:start="13:32" pos:end="13:32">(</operator><name pos:start="13:33" pos:end="13:49">MAX_LPC_PRECISION</name><operator pos:start="13:50" pos:end="13:50">-</operator><literal type="number" pos:start="13:51" pos:end="13:51">1</literal><operator pos:start="13:52" pos:end="13:52">)</operator><operator pos:start="13:53" pos:end="13:53">)</operator> <operator pos:start="13:55" pos:end="13:55">-</operator> <literal type="number" pos:start="13:57" pos:end="13:59">0.5</literal><operator pos:start="13:60" pos:end="13:60">)</operator><operator pos:start="13:61" pos:end="13:61">/</operator><operator pos:start="13:62" pos:end="13:62">(</operator><name pos:start="13:63" pos:end="13:66">M_PI</name><operator pos:start="13:67" pos:end="13:67">/</operator><literal type="number" pos:start="13:68" pos:end="13:70">2.0</literal><operator pos:start="13:71" pos:end="13:71">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:72"><decl pos:start="15:5" pos:end="15:71"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:21">iqfac_m</name> <init pos:start="15:23" pos:end="15:71">= <expr pos:start="15:25" pos:end="15:71"><operator pos:start="15:25" pos:end="15:25">(</operator><operator pos:start="15:26" pos:end="15:26">(</operator><literal type="number" pos:start="15:27" pos:end="15:27">1</literal> <operator pos:start="15:29" pos:end="15:30">&lt;&lt;</operator> <operator pos:start="15:32" pos:end="15:32">(</operator><name pos:start="15:33" pos:end="15:49">MAX_LPC_PRECISION</name><operator pos:start="15:50" pos:end="15:50">-</operator><literal type="number" pos:start="15:51" pos:end="15:51">1</literal><operator pos:start="15:52" pos:end="15:52">)</operator><operator pos:start="15:53" pos:end="15:53">)</operator> <operator pos:start="15:55" pos:end="15:55">+</operator> <literal type="number" pos:start="15:57" pos:end="15:59">0.5</literal><operator pos:start="15:60" pos:end="15:60">)</operator><operator pos:start="15:61" pos:end="15:61">/</operator><operator pos:start="15:62" pos:end="15:62">(</operator><name pos:start="15:63" pos:end="15:66">M_PI</name><operator pos:start="15:67" pos:end="15:67">/</operator><literal type="number" pos:start="15:68" pos:end="15:70">2.0</literal><operator pos:start="15:71" pos:end="15:71">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:68"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:29"><name pos:start="17:11" pos:end="17:14">temp</name><index pos:start="17:15" pos:end="17:29">[<expr pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:28">TNS_MAX_ORDER</name></expr>]</index></name> <init pos:start="17:31" pos:end="17:38">= <expr pos:start="17:33" pos:end="17:38"><block pos:start="17:33" pos:end="17:38">{<expr pos:start="17:34" pos:end="17:37"><literal type="number" pos:start="17:34" pos:end="17:37">0.0f</literal></expr>}</block></expr></init></decl>, <decl pos:start="17:41" pos:end="17:67"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:41" pos:end="17:58"><name pos:start="17:41" pos:end="17:43">out</name><index pos:start="17:44" pos:end="17:58">[<expr pos:start="17:45" pos:end="17:57"><name pos:start="17:45" pos:end="17:57">TNS_MAX_ORDER</name></expr>]</index></name> <init pos:start="17:60" pos:end="17:67">= <expr pos:start="17:62" pos:end="17:67"><block pos:start="17:62" pos:end="17:67">{<expr pos:start="17:63" pos:end="17:66"><literal type="number" pos:start="17:63" pos:end="17:66">0.0f</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:22">/* Quantization */</comment>

    <for pos:start="23:5" pos:end="29:5">for <control pos:start="23:9" pos:end="23:31">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:26"><expr pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:25">order</name></expr>;</condition> <incr pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:28">i</name><operator pos:start="23:29" pos:end="23:30">++</operator></expr></incr>)</control> <block pos:start="23:33" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:67">

        <expr_stmt pos:start="25:9" pos:end="25:93"><expr pos:start="25:9" pos:end="25:92"><name pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:11">idx</name><index pos:start="25:12" pos:end="25:14">[<expr pos:start="25:13" pos:end="25:13"><name pos:start="25:13" pos:end="25:13">i</name></expr>]</index></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:92"><name pos:start="25:18" pos:end="25:22">ceilf</name><argument_list pos:start="25:23" pos:end="25:92">(<argument pos:start="25:24" pos:end="25:91"><expr pos:start="25:24" pos:end="25:91"><call pos:start="25:24" pos:end="25:45"><name pos:start="25:24" pos:end="25:27">asin</name><argument_list pos:start="25:28" pos:end="25:45">(<argument pos:start="25:29" pos:end="25:44"><expr pos:start="25:29" pos:end="25:44"><name pos:start="25:29" pos:end="25:44"><name pos:start="25:29" pos:end="25:41">tns_coefs_raw</name><index pos:start="25:42" pos:end="25:44">[<expr pos:start="25:43" pos:end="25:43"><name pos:start="25:43" pos:end="25:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="25:46" pos:end="25:46">*</operator><operator pos:start="25:47" pos:end="25:47">(</operator><ternary pos:start="25:48" pos:end="25:90"><condition pos:start="25:48" pos:end="25:72"><expr pos:start="25:48" pos:end="25:70"><operator pos:start="25:48" pos:end="25:48">(</operator><name pos:start="25:49" pos:end="25:64"><name pos:start="25:49" pos:end="25:61">tns_coefs_raw</name><index pos:start="25:62" pos:end="25:64">[<expr pos:start="25:63" pos:end="25:63"><name pos:start="25:63" pos:end="25:63">i</name></expr>]</index></name> <operator pos:start="25:66" pos:end="25:67">&gt;=</operator> <literal type="number" pos:start="25:69" pos:end="25:69">0</literal><operator pos:start="25:70" pos:end="25:70">)</operator></expr> ?</condition><then pos:start="25:74" pos:end="25:80"> <expr pos:start="25:74" pos:end="25:80"><name pos:start="25:74" pos:end="25:80">iqfac_p</name></expr> </then><else pos:start="25:82" pos:end="25:90">: <expr pos:start="25:84" pos:end="25:90"><name pos:start="25:84" pos:end="25:90">iqfac_m</name></expr></else></ternary><operator pos:start="25:91" pos:end="25:91">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">lpc</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">i</name></expr>]</index></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">2</literal><operator pos:start="27:19" pos:end="27:19">*</operator><call pos:start="27:20" pos:end="27:66"><name pos:start="27:20" pos:end="27:22">sin</name><argument_list pos:start="27:23" pos:end="27:66">(<argument pos:start="27:24" pos:end="27:65"><expr pos:start="27:24" pos:end="27:65"><name pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:26">idx</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">/</operator><operator pos:start="27:31" pos:end="27:31">(</operator><ternary pos:start="27:32" pos:end="27:64"><condition pos:start="27:32" pos:end="27:46"><expr pos:start="27:32" pos:end="27:44"><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:38"><name pos:start="27:33" pos:end="27:35">idx</name><index pos:start="27:36" pos:end="27:38">[<expr pos:start="27:37" pos:end="27:37"><name pos:start="27:37" pos:end="27:37">i</name></expr>]</index></name> <operator pos:start="27:40" pos:end="27:41">&gt;=</operator> <literal type="number" pos:start="27:43" pos:end="27:43">0</literal><operator pos:start="27:44" pos:end="27:44">)</operator></expr> ?</condition><then pos:start="27:48" pos:end="27:54"> <expr pos:start="27:48" pos:end="27:54"><name pos:start="27:48" pos:end="27:54">iqfac_p</name></expr> </then><else pos:start="27:56" pos:end="27:64">: <expr pos:start="27:58" pos:end="27:64"><name pos:start="27:58" pos:end="27:64">iqfac_m</name></expr></else></ternary><operator pos:start="27:65" pos:end="27:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="33:5" pos:end="33:52">/* Trim any coeff less than 0.1f from the end */</comment>

    <for pos:start="35:5" pos:end="47:5">for <control pos:start="35:9" pos:end="35:32">(<init pos:start="35:10" pos:end="35:19"><expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:18">order</name></expr>;</init> <condition pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&gt;</operator> <operator pos:start="35:25" pos:end="35:25">-</operator><literal type="number" pos:start="35:26" pos:end="35:26">1</literal></expr>;</condition> <incr pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:29">i</name><operator pos:start="35:30" pos:end="35:31">--</operator></expr></incr>)</control> <block pos:start="35:34" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <expr_stmt pos:start="37:9" pos:end="37:55"><expr pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:11">lpc</name><index pos:start="37:12" pos:end="37:14">[<expr pos:start="37:13" pos:end="37:13"><name pos:start="37:13" pos:end="37:13">i</name></expr>]</index></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <ternary pos:start="37:18" pos:end="37:54"><condition pos:start="37:18" pos:end="37:40"><expr pos:start="37:18" pos:end="37:38"><operator pos:start="37:18" pos:end="37:18">(</operator><call pos:start="37:19" pos:end="37:30"><name pos:start="37:19" pos:end="37:22">fabs</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:26">lpc</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="37:32" pos:end="37:32">&gt;</operator> <literal type="number" pos:start="37:34" pos:end="37:37">0.1f</literal><operator pos:start="37:38" pos:end="37:38">)</operator></expr> ?</condition><then pos:start="37:42" pos:end="37:47"> <expr pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:44">lpc</name><index pos:start="37:45" pos:end="37:47">[<expr pos:start="37:46" pos:end="37:46"><name pos:start="37:46" pos:end="37:46">i</name></expr>]</index></name></expr> </then><else pos:start="37:49" pos:end="37:54">: <expr pos:start="37:51" pos:end="37:54"><literal type="number" pos:start="37:51" pos:end="37:54">0.0f</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:27">(<expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:15">lpc</name><index pos:start="39:16" pos:end="39:18">[<expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">i</name></expr>]</index></name> <operator pos:start="39:20" pos:end="39:21">!=</operator> <literal type="number" pos:start="39:23" pos:end="39:25">0.0</literal></expr> )</condition> <block pos:start="39:29" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:18">

            <expr_stmt pos:start="41:13" pos:end="41:22"><expr pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:17">order</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:21">i</name></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="51:5" pos:end="53:17"><if pos:start="51:5" pos:end="53:17">if <condition pos:start="51:8" pos:end="51:15">(<expr pos:start="51:9" pos:end="51:14"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:14">order</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:17"><block_content pos:start="53:9" pos:end="53:17">

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:50">/* Step up procedure, convert to LPC coeffs */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:10"><name pos:start="59:5" pos:end="59:7">out</name><index pos:start="59:8" pos:end="59:10">[<expr pos:start="59:9" pos:end="59:9"><literal type="number" pos:start="59:9" pos:end="59:9">0</literal></expr>]</index></name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:17">1.0f</literal></expr>;</expr_stmt>

    <for pos:start="61:5" pos:end="77:5">for <control pos:start="61:9" pos:end="61:32">(<init pos:start="61:10" pos:end="61:15"><expr pos:start="61:10" pos:end="61:14"><name pos:start="61:10" pos:end="61:10">i</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <literal type="number" pos:start="61:14" pos:end="61:14">1</literal></expr>;</init> <condition pos:start="61:17" pos:end="61:27"><expr pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:17">i</name> <operator pos:start="61:19" pos:end="61:20">&lt;=</operator> <name pos:start="61:22" pos:end="61:26">order</name></expr>;</condition> <incr pos:start="61:29" pos:end="61:31"><expr pos:start="61:29" pos:end="61:31"><name pos:start="61:29" pos:end="61:29">i</name><operator pos:start="61:30" pos:end="61:31">++</operator></expr></incr>)</control> <block pos:start="61:34" pos:end="77:5">{<block_content pos:start="63:9" pos:end="75:26">

        <for pos:start="63:9" pos:end="67:9">for <control pos:start="63:13" pos:end="63:31">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">j</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:26"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:21">j</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:25">i</name></expr>;</condition> <incr pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:28">j</name><operator pos:start="63:29" pos:end="63:30">++</operator></expr></incr>)</control> <block pos:start="63:33" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:47">

            <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:16">temp</name><index pos:start="65:17" pos:end="65:19">[<expr pos:start="65:18" pos:end="65:18"><name pos:start="65:18" pos:end="65:18">j</name></expr>]</index></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:28"><name pos:start="65:23" pos:end="65:25">out</name><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">j</name></expr>]</index></name> <operator pos:start="65:30" pos:end="65:30">+</operator> <name pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:34">lpc</name><index pos:start="65:35" pos:end="65:37">[<expr pos:start="65:36" pos:end="65:36"><name pos:start="65:36" pos:end="65:36">i</name></expr>]</index></name><operator pos:start="65:38" pos:end="65:38">*</operator><name pos:start="65:39" pos:end="65:46"><name pos:start="65:39" pos:end="65:41">out</name><index pos:start="65:42" pos:end="65:46">[<expr pos:start="65:43" pos:end="65:45"><name pos:start="65:43" pos:end="65:43">i</name><operator pos:start="65:44" pos:end="65:44">-</operator><name pos:start="65:45" pos:end="65:45">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="69:9" pos:end="73:9">for <control pos:start="69:13" pos:end="69:32">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">j</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">1</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:27"><expr pos:start="69:21" pos:end="69:26"><name pos:start="69:21" pos:end="69:21">j</name> <operator pos:start="69:23" pos:end="69:24">&lt;=</operator> <name pos:start="69:26" pos:end="69:26">i</name></expr>;</condition> <incr pos:start="69:29" pos:end="69:31"><expr pos:start="69:29" pos:end="69:31"><name pos:start="69:29" pos:end="69:29">j</name><operator pos:start="69:30" pos:end="69:31">++</operator></expr></incr>)</control> <block pos:start="69:34" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:29">

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:15">out</name><index pos:start="71:16" pos:end="71:18">[<expr pos:start="71:17" pos:end="71:17"><name pos:start="71:17" pos:end="71:17">j</name></expr>]</index></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:28"><name pos:start="71:22" pos:end="71:25">temp</name><index pos:start="71:26" pos:end="71:28">[<expr pos:start="71:27" pos:end="71:27"><name pos:start="71:27" pos:end="71:27">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:11">out</name><index pos:start="75:12" pos:end="75:14">[<expr pos:start="75:13" pos:end="75:13"><name pos:start="75:13" pos:end="75:13">i</name></expr>]</index></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:25"><name pos:start="75:18" pos:end="75:20">lpc</name><index pos:start="75:21" pos:end="75:25">[<expr pos:start="75:22" pos:end="75:24"><name pos:start="75:22" pos:end="75:22">i</name><operator pos:start="75:23" pos:end="75:23">-</operator><literal type="number" pos:start="75:24" pos:end="75:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="79:5" pos:end="79:50"><expr pos:start="79:5" pos:end="79:49"><call pos:start="79:5" pos:end="79:49"><name pos:start="79:5" pos:end="79:10">memcpy</name><argument_list pos:start="79:11" pos:end="79:49">(<argument pos:start="79:12" pos:end="79:14"><expr pos:start="79:12" pos:end="79:14"><name pos:start="79:12" pos:end="79:14">lpc</name></expr></argument>, <argument pos:start="79:17" pos:end="79:19"><expr pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:19">out</name></expr></argument>, <argument pos:start="79:22" pos:end="79:48"><expr pos:start="79:22" pos:end="79:48"><name pos:start="79:22" pos:end="79:34">TNS_MAX_ORDER</name><operator pos:start="79:35" pos:end="79:35">*</operator><sizeof pos:start="79:36" pos:end="79:48">sizeof<argument_list pos:start="79:42" pos:end="79:48">(<argument pos:start="79:43" pos:end="79:47"><expr pos:start="79:43" pos:end="79:47"><name pos:start="79:43" pos:end="79:47">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="83:5" pos:end="83:17">return <expr pos:start="83:12" pos:end="83:16"><name pos:start="83:12" pos:end="83:16">order</name></expr>;</return>

</block_content>}</block></function>
</unit>
