<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4407.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">ioq_submit</name><parameter_list pos:start="1:23" pos:end="1:40">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:36">LinuxAioState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:38">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">qemu_laiocb</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:29">aiocb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:15">iocb</name></name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:37"><name pos:start="9:18" pos:end="9:22">iocbs</name><index pos:start="9:23" pos:end="9:37">[<expr pos:start="9:24" pos:end="9:36"><name pos:start="9:24" pos:end="9:36">MAX_QUEUED_IO</name></expr>]</index></name></decl>;</decl_stmt>

    <macro pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:17">QSIMPLEQ_HEAD</name><argument_list pos:start="11:18" pos:end="11:32">(<argument/>, <argument pos:start="11:21" pos:end="11:31">qemu_laiocb</argument>)</argument_list></macro> <expr_stmt pos:start="11:34" pos:end="11:43"><expr pos:start="11:34" pos:end="11:42"><name pos:start="11:34" pos:end="11:42">completed</name></expr>;</expr_stmt>



    <do pos:start="15:5" pos:end="55:62">do <block pos:start="15:8" pos:end="55:5">{<block_content pos:start="17:9" pos:end="53:72">

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</expr_stmt>

        <macro pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:24">QSIMPLEQ_FOREACH</name><argument_list pos:start="19:25" pos:end="19:55">(<argument pos:start="19:26" pos:end="19:30">aiocb</argument>, <argument pos:start="19:33" pos:end="19:48">&amp;s-&gt;io_q.pending</argument>, <argument pos:start="19:51" pos:end="19:54">next</argument>)</argument_list></macro> <block pos:start="19:57" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:13">

            <expr_stmt pos:start="21:13" pos:end="21:40"><expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:17">iocbs</name><index pos:start="21:18" pos:end="21:24">[<expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:21">len</name><operator pos:start="21:22" pos:end="21:23">++</operator></expr>]</index></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:33">aiocb</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">iocb</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:37">(<expr pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:19">len</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <name pos:start="23:24" pos:end="23:36">MAX_QUEUED_IO</name></expr>)</condition> <block pos:start="23:39" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:22">

                <break pos:start="25:17" pos:end="25:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:43"><name pos:start="33:15" pos:end="33:23">io_submit</name><argument_list pos:start="33:24" pos:end="33:43">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">ctx</name></name></expr></argument>, <argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">len</name></expr></argument>, <argument pos:start="33:38" pos:end="33:42"><expr pos:start="33:38" pos:end="33:42"><name pos:start="33:38" pos:end="33:42">iocbs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <operator pos:start="35:20" pos:end="35:20">-</operator><name pos:start="35:21" pos:end="35:26">EAGAIN</name></expr>)</condition> <block pos:start="35:29" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:20">

            <expr_stmt pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:19"><call pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:17">abort</name><argument_list pos:start="43:18" pos:end="43:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">io_q</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:17">n</name></name> <operator pos:start="49:19" pos:end="49:20">-=</operator> <name pos:start="49:22" pos:end="49:24">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:71"><expr pos:start="51:9" pos:end="51:70"><name pos:start="51:9" pos:end="51:13">aiocb</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:70"><name pos:start="51:17" pos:end="51:28">container_of</name><argument_list pos:start="51:29" pos:end="51:70">(<argument pos:start="51:30" pos:end="51:43"><expr pos:start="51:30" pos:end="51:43"><name pos:start="51:30" pos:end="51:43"><name pos:start="51:30" pos:end="51:34">iocbs</name><index pos:start="51:35" pos:end="51:43">[<expr pos:start="51:36" pos:end="51:42"><name pos:start="51:36" pos:end="51:38">ret</name> <operator pos:start="51:40" pos:end="51:40">-</operator> <literal type="number" pos:start="51:42" pos:end="51:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:46" pos:end="51:63"><expr pos:start="51:46" pos:end="51:63">struct <name pos:start="51:53" pos:end="51:63">qemu_laiocb</name></expr></argument>, <argument pos:start="51:66" pos:end="51:69"><expr pos:start="51:66" pos:end="51:69"><name pos:start="51:66" pos:end="51:69">iocb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:72"><expr pos:start="53:9" pos:end="53:71"><call pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:28">QSIMPLEQ_SPLIT_AFTER</name><argument_list pos:start="53:29" pos:end="53:71">(<argument pos:start="53:30" pos:end="53:45"><expr pos:start="53:30" pos:end="53:45"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:45"><name pos:start="53:31" pos:end="53:31">s</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:37">io_q</name><operator pos:start="53:38" pos:end="53:38">.</operator><name pos:start="53:39" pos:end="53:45">pending</name></name></expr></argument>, <argument pos:start="53:48" pos:end="53:52"><expr pos:start="53:48" pos:end="53:52"><name pos:start="53:48" pos:end="53:52">aiocb</name></expr></argument>, <argument pos:start="53:55" pos:end="53:58"><expr pos:start="53:55" pos:end="53:58"><name pos:start="53:55" pos:end="53:58">next</name></expr></argument>, <argument pos:start="53:61" pos:end="53:70"><expr pos:start="53:61" pos:end="53:70"><operator pos:start="53:61" pos:end="53:61">&amp;</operator><name pos:start="53:62" pos:end="53:70">completed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="55:13" pos:end="55:61">(<expr pos:start="55:14" pos:end="55:60"><name pos:start="55:14" pos:end="55:16">ret</name> <operator pos:start="55:18" pos:end="55:19">==</operator> <name pos:start="55:21" pos:end="55:23">len</name> <operator pos:start="55:25" pos:end="55:26">&amp;&amp;</operator> <operator pos:start="55:28" pos:end="55:28">!</operator><call pos:start="55:29" pos:end="55:60"><name pos:start="55:29" pos:end="55:42">QSIMPLEQ_EMPTY</name><argument_list pos:start="55:43" pos:end="55:60">(<argument pos:start="55:44" pos:end="55:59"><expr pos:start="55:44" pos:end="55:59"><operator pos:start="55:44" pos:end="55:44">&amp;</operator><name pos:start="55:45" pos:end="55:59"><name pos:start="55:45" pos:end="55:45">s</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:51">io_q</name><operator pos:start="55:52" pos:end="55:52">.</operator><name pos:start="55:53" pos:end="55:59">pending</name></name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

    <expr_stmt pos:start="57:5" pos:end="57:38"><expr pos:start="57:5" pos:end="57:37"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:11">io_q</name><operator pos:start="57:12" pos:end="57:12">.</operator><name pos:start="57:13" pos:end="57:19">blocked</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">(</operator><name pos:start="57:24" pos:end="57:32"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:30">io_q</name><operator pos:start="57:31" pos:end="57:31">.</operator><name pos:start="57:32" pos:end="57:32">n</name></name> <operator pos:start="57:34" pos:end="57:34">&gt;</operator> <literal type="number" pos:start="57:36" pos:end="57:36">0</literal><operator pos:start="57:37" pos:end="57:37">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
