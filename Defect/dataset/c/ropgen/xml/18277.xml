<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18277.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">disas_cond_b_imm</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:41">DisasContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:59">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">cond</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:48">(<expr pos:start="11:9" pos:end="11:47"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:13">insn</name> <operator pos:start="11:15" pos:end="11:15">&amp;</operator> <operator pos:start="11:17" pos:end="11:17">(</operator><literal type="number" pos:start="11:18" pos:end="11:18">1</literal> <operator pos:start="11:20" pos:end="11:21">&lt;&lt;</operator> <literal type="number" pos:start="11:23" pos:end="11:23">4</literal><operator pos:start="11:24" pos:end="11:24">)</operator><operator pos:start="11:25" pos:end="11:25">)</operator> <operator pos:start="11:27" pos:end="11:28">||</operator> <operator pos:start="11:30" pos:end="11:30">(</operator><name pos:start="11:31" pos:end="11:34">insn</name> <operator pos:start="11:36" pos:end="11:36">&amp;</operator> <operator pos:start="11:38" pos:end="11:38">(</operator><literal type="number" pos:start="11:39" pos:end="11:39">1</literal> <operator pos:start="11:41" pos:end="11:42">&lt;&lt;</operator> <literal type="number" pos:start="11:44" pos:end="11:45">24</literal><operator pos:start="11:46" pos:end="11:46">)</operator><operator pos:start="11:47" pos:end="11:47">)</operator></expr>)</condition> <block pos:start="11:50" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:28">unallocated_encoding</name><argument_list pos:start="13:29" pos:end="13:31">(<argument pos:start="13:30" pos:end="13:30"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:8">addr</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:16"><name pos:start="19:12" pos:end="19:12">s</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:16">pc</name></name> <operator pos:start="19:18" pos:end="19:18">+</operator> <call pos:start="19:20" pos:end="19:42"><name pos:start="19:20" pos:end="19:29">sextract32</name><argument_list pos:start="19:30" pos:end="19:42">(<argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">insn</name></expr></argument>, <argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><literal type="number" pos:start="19:37" pos:end="19:37">5</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:41"><expr pos:start="19:40" pos:end="19:41"><literal type="number" pos:start="19:40" pos:end="19:41">19</literal></expr></argument>)</argument_list></call> <operator pos:start="19:44" pos:end="19:44">*</operator> <literal type="number" pos:start="19:46" pos:end="19:48">4</literal> <operator pos:start="19:48" pos:end="19:48">-</operator> <literal type="number" pos:start="19:50" pos:end="19:50">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:8">cond</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:32"><name pos:start="21:12" pos:end="21:20">extract32</name><argument_list pos:start="21:21" pos:end="21:32">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">insn</name></expr></argument>, <argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="45:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:12">cond</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <literal type="number" pos:start="25:16" pos:end="25:19">0x0e</literal></expr>)</condition> <block pos:start="25:22" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:32">

        <comment type="block" pos:start="27:9" pos:end="27:44">/* genuinely conditional branches */</comment>

        <decl_stmt pos:start="29:9" pos:end="29:42"><decl pos:start="29:9" pos:end="29:41"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:23">label_match</name> <init pos:start="29:25" pos:end="29:41">= <expr pos:start="29:27" pos:end="29:41"><call pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:39">gen_new_label</name><argument_list pos:start="29:40" pos:end="29:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><call pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:23">arm_gen_test_cc</name><argument_list pos:start="31:24" pos:end="31:42">(<argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><name pos:start="31:25" pos:end="31:28">cond</name></expr></argument>, <argument pos:start="31:31" pos:end="31:41"><expr pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:41">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><call pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:19">gen_goto_tb</name><argument_list pos:start="33:20" pos:end="33:32">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">s</name></expr></argument>, <argument pos:start="33:24" pos:end="33:24"><expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr></argument>, <argument pos:start="33:27" pos:end="33:31"><expr pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:31"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:31">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><call pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:21">gen_set_label</name><argument_list pos:start="35:22" pos:end="35:34">(<argument pos:start="35:23" pos:end="35:33"><expr pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:33">label_match</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:19">gen_goto_tb</name><argument_list pos:start="37:20" pos:end="37:31">(<argument pos:start="37:21" pos:end="37:21"><expr pos:start="37:21" pos:end="37:21"><name pos:start="37:21" pos:end="37:21">s</name></expr></argument>, <argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr></argument>, <argument pos:start="37:27" pos:end="37:30"><expr pos:start="37:27" pos:end="37:30"><name pos:start="37:27" pos:end="37:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:32">

        <comment type="block" pos:start="41:9" pos:end="41:54">/* 0xe and 0xf are both "always" conditions */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><call pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:19">gen_goto_tb</name><argument_list pos:start="43:20" pos:end="43:31">(<argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">s</name></expr></argument>, <argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr></argument>, <argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><name pos:start="43:27" pos:end="43:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
