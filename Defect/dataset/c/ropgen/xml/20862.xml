<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20862.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">net_init_bridge</name><parameter_list pos:start="1:20" pos:end="1:70">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:28">QemuOpts</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">opts</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">name</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:63">VLANState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">vlan</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">TAPState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>, <decl pos:start="7:13" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:20">vnet_hdr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:33"><name pos:start="11:10" pos:end="11:21">qemu_opt_get</name><argument_list pos:start="11:22" pos:end="11:33">(<argument pos:start="11:23" pos:end="11:26"><expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">opts</name></expr></argument>, <argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><literal type="string" pos:start="11:29" pos:end="11:32">"br"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:36" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:59">

        <expr_stmt pos:start="13:9" pos:end="13:59"><expr pos:start="13:9" pos:end="13:58"><call pos:start="13:9" pos:end="13:58"><name pos:start="13:9" pos:end="13:20">qemu_opt_set</name><argument_list pos:start="13:21" pos:end="13:58">(<argument pos:start="13:22" pos:end="13:25"><expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">opts</name></expr></argument>, <argument pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><literal type="string" pos:start="13:28" pos:end="13:31">"br"</literal></expr></argument>, <argument pos:start="13:34" pos:end="13:57"><expr pos:start="13:34" pos:end="13:57"><name pos:start="13:34" pos:end="13:57">DEFAULT_BRIDGE_INTERFACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:37"><name pos:start="17:10" pos:end="17:21">qemu_opt_get</name><argument_list pos:start="17:22" pos:end="17:37">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">opts</name></expr></argument>, <argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><literal type="string" pos:start="17:29" pos:end="17:36">"helper"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:40" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:60">

        <expr_stmt pos:start="19:9" pos:end="19:60"><expr pos:start="19:9" pos:end="19:59"><call pos:start="19:9" pos:end="19:59"><name pos:start="19:9" pos:end="19:20">qemu_opt_set</name><argument_list pos:start="19:21" pos:end="19:59">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">opts</name></expr></argument>, <argument pos:start="19:28" pos:end="19:35"><expr pos:start="19:28" pos:end="19:35"><literal type="string" pos:start="19:28" pos:end="19:35">"helper"</literal></expr></argument>, <argument pos:start="19:38" pos:end="19:58"><expr pos:start="19:38" pos:end="19:58"><name pos:start="19:38" pos:end="19:58">DEFAULT_BRIDGE_HELPER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:57"><expr pos:start="25:5" pos:end="27:56"><name pos:start="25:5" pos:end="25:6">fd</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="27:56"><name pos:start="25:10" pos:end="25:30">net_bridge_run_helper</name><argument_list pos:start="25:31" pos:end="27:56">(<argument pos:start="25:32" pos:end="25:59"><expr pos:start="25:32" pos:end="25:59"><call pos:start="25:32" pos:end="25:59"><name pos:start="25:32" pos:end="25:43">qemu_opt_get</name><argument_list pos:start="25:44" pos:end="25:59">(<argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><name pos:start="25:45" pos:end="25:48">opts</name></expr></argument>, <argument pos:start="25:51" pos:end="25:58"><expr pos:start="25:51" pos:end="25:58"><literal type="string" pos:start="25:51" pos:end="25:58">"helper"</literal></expr></argument>)</argument_list></call></expr></argument>,

                               <argument pos:start="27:32" pos:end="27:55"><expr pos:start="27:32" pos:end="27:55"><call pos:start="27:32" pos:end="27:55"><name pos:start="27:32" pos:end="27:43">qemu_opt_get</name><argument_list pos:start="27:44" pos:end="27:55">(<argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:48">opts</name></expr></argument>, <argument pos:start="27:51" pos:end="27:54"><expr pos:start="27:51" pos:end="27:54"><literal type="string" pos:start="27:51" pos:end="27:54">"br"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:10">fd</name> <operator pos:start="29:12" pos:end="29:13">==</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>)</condition> <block pos:start="29:19" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:9">fcntl</name><argument_list pos:start="37:10" pos:end="37:34">(<argument pos:start="37:11" pos:end="37:12"><expr pos:start="37:11" pos:end="37:12"><name pos:start="37:11" pos:end="37:12">fd</name></expr></argument>, <argument pos:start="37:15" pos:end="37:21"><expr pos:start="37:15" pos:end="37:21"><name pos:start="37:15" pos:end="37:21">F_SETFL</name></expr></argument>, <argument pos:start="37:24" pos:end="37:33"><expr pos:start="37:24" pos:end="37:33"><name pos:start="37:24" pos:end="37:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:38"><expr pos:start="41:5" pos:end="41:37"><name pos:start="41:5" pos:end="41:12">vnet_hdr</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:37"><name pos:start="41:16" pos:end="41:33">tap_probe_vnet_hdr</name><argument_list pos:start="41:34" pos:end="41:37">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:60"><expr pos:start="45:5" pos:end="45:59"><name pos:start="45:5" pos:end="45:5">s</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:23">net_tap_fd_init</name><argument_list pos:start="45:24" pos:end="45:59">(<argument pos:start="45:25" pos:end="45:28"><expr pos:start="45:25" pos:end="45:28"><name pos:start="45:25" pos:end="45:28">vlan</name></expr></argument>, <argument pos:start="45:31" pos:end="45:38"><expr pos:start="45:31" pos:end="45:38"><literal type="string" pos:start="45:31" pos:end="45:38">"bridge"</literal></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><name pos:start="45:41" pos:end="45:44">name</name></expr></argument>, <argument pos:start="45:47" pos:end="45:48"><expr pos:start="45:47" pos:end="45:48"><name pos:start="45:47" pos:end="45:48">fd</name></expr></argument>, <argument pos:start="45:51" pos:end="45:58"><expr pos:start="45:51" pos:end="45:58"><name pos:start="45:51" pos:end="45:58">vnet_hdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:11">(<expr pos:start="47:9" pos:end="47:10"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:10">s</name></expr>)</condition> <block pos:start="47:13" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><call pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:13">close</name><argument_list pos:start="49:14" pos:end="49:17">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:69"><expr pos:start="57:5" pos:end="59:68"><call pos:start="57:5" pos:end="59:68"><name pos:start="57:5" pos:end="57:12">snprintf</name><argument_list pos:start="57:13" pos:end="59:68">(<argument pos:start="57:14" pos:end="57:27"><expr pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:27"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:18">nc</name><operator pos:start="57:19" pos:end="57:19">.</operator><name pos:start="57:20" pos:end="57:27">info_str</name></name></expr></argument>, <argument pos:start="57:30" pos:end="57:51"><expr pos:start="57:30" pos:end="57:51"><sizeof pos:start="57:30" pos:end="57:51">sizeof<argument_list pos:start="57:36" pos:end="57:51">(<argument pos:start="57:37" pos:end="57:50"><expr pos:start="57:37" pos:end="57:50"><name pos:start="57:37" pos:end="57:50"><name pos:start="57:37" pos:end="57:37">s</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:41">nc</name><operator pos:start="57:42" pos:end="57:42">.</operator><name pos:start="57:43" pos:end="57:50">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:54" pos:end="57:70"><expr pos:start="57:54" pos:end="57:70"><literal type="string" pos:start="57:54" pos:end="57:70">"helper=%s,br=%s"</literal></expr></argument>,

             <argument pos:start="59:14" pos:end="59:41"><expr pos:start="59:14" pos:end="59:41"><call pos:start="59:14" pos:end="59:41"><name pos:start="59:14" pos:end="59:25">qemu_opt_get</name><argument_list pos:start="59:26" pos:end="59:41">(<argument pos:start="59:27" pos:end="59:30"><expr pos:start="59:27" pos:end="59:30"><name pos:start="59:27" pos:end="59:30">opts</name></expr></argument>, <argument pos:start="59:33" pos:end="59:40"><expr pos:start="59:33" pos:end="59:40"><literal type="string" pos:start="59:33" pos:end="59:40">"helper"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:44" pos:end="59:67"><expr pos:start="59:44" pos:end="59:67"><call pos:start="59:44" pos:end="59:67"><name pos:start="59:44" pos:end="59:55">qemu_opt_get</name><argument_list pos:start="59:56" pos:end="59:67">(<argument pos:start="59:57" pos:end="59:60"><expr pos:start="59:57" pos:end="59:60"><name pos:start="59:57" pos:end="59:60">opts</name></expr></argument>, <argument pos:start="59:63" pos:end="59:66"><expr pos:start="59:63" pos:end="59:66"><literal type="string" pos:start="59:63" pos:end="59:66">"br"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
