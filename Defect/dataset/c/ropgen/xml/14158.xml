<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14158.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">floor_encode</name><parameter_list pos:start="1:25" pos:end="1:122">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">venc_context_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type> <name pos:start="1:43" pos:end="1:46">venc</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:55">floor_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type> <name pos:start="1:59" pos:end="1:60">fc</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:80"><decl pos:start="1:63" pos:end="1:80"><type pos:start="1:63" pos:end="1:80"><name pos:start="1:63" pos:end="1:75">PutBitContext</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type> <name pos:start="1:79" pos:end="1:80">pb</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:93"><decl pos:start="1:83" pos:end="1:93"><type pos:start="1:83" pos:end="1:93"><name pos:start="1:83" pos:end="1:85">int</name> <modifier pos:start="1:87" pos:end="1:87">*</modifier></type> <name pos:start="1:89" pos:end="1:93">posts</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:108"><decl pos:start="1:96" pos:end="1:108"><type pos:start="1:96" pos:end="1:108"><name pos:start="1:96" pos:end="1:100">float</name> <modifier pos:start="1:102" pos:end="1:102">*</modifier></type> <name pos:start="1:104" pos:end="1:108">floor</name></decl></parameter>, <parameter pos:start="1:111" pos:end="1:121"><decl pos:start="1:111" pos:end="1:121"><type pos:start="1:111" pos:end="1:121"><name pos:start="1:111" pos:end="1:113">int</name></type> <name pos:start="1:115" pos:end="1:121">samples</name></decl></parameter>)</parameter_list> <block pos:start="1:124" pos:end="165:1">{<block_content pos:start="3:5" pos:end="163:71">

    <decl_stmt pos:start="3:5" pos:end="3:41"><decl pos:start="3:5" pos:end="3:40"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">range</name> <init pos:start="3:15" pos:end="3:40">= <expr pos:start="3:17" pos:end="3:40"><literal type="number" pos:start="3:17" pos:end="3:19">255</literal> <operator pos:start="3:21" pos:end="3:21">/</operator> <name pos:start="3:23" pos:end="3:36"><name pos:start="3:23" pos:end="3:24">fc</name><operator pos:start="3:25" pos:end="3:26">-&gt;</operator><name pos:start="3:27" pos:end="3:36">multiplier</name></name> <operator pos:start="3:38" pos:end="3:38">+</operator> <literal type="number" pos:start="3:40" pos:end="3:40">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:25"><name pos:start="5:9" pos:end="5:13">coded</name><index pos:start="5:14" pos:end="5:25">[<expr pos:start="5:15" pos:end="5:24"><name pos:start="5:15" pos:end="5:24"><name pos:start="5:15" pos:end="5:16">fc</name><operator pos:start="5:17" pos:end="5:18">-&gt;</operator><name pos:start="5:19" pos:end="5:24">values</name></name></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="5:28" pos:end="5:55">// first 2 values are unused</comment>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:18">counter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">lx</name></decl>, <decl pos:start="9:13" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">ly</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:12">put_bits</name><argument_list pos:start="13:13" pos:end="13:22">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>, <argument pos:start="13:18" pos:end="13:18"><expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">1</literal></expr></argument>, <argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="13:25" pos:end="13:35">// non zero</comment>

    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><call pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:12">put_bits</name><argument_list pos:start="15:13" pos:end="15:43">(<argument pos:start="15:14" pos:end="15:15"><expr pos:start="15:14" pos:end="15:15"><name pos:start="15:14" pos:end="15:15">pb</name></expr></argument>, <argument pos:start="15:18" pos:end="15:32"><expr pos:start="15:18" pos:end="15:32"><call pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:21">ilog</name><argument_list pos:start="15:22" pos:end="15:32">(<argument pos:start="15:23" pos:end="15:31"><expr pos:start="15:23" pos:end="15:31"><name pos:start="15:23" pos:end="15:27">range</name> <operator pos:start="15:29" pos:end="15:29">-</operator> <literal type="number" pos:start="15:31" pos:end="15:31">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:35" pos:end="15:42"><expr pos:start="15:35" pos:end="15:42"><name pos:start="15:35" pos:end="15:42"><name pos:start="15:35" pos:end="15:39">posts</name><index pos:start="15:40" pos:end="15:42">[<expr pos:start="15:41" pos:end="15:41"><literal type="number" pos:start="15:41" pos:end="15:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><call pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:12">put_bits</name><argument_list pos:start="17:13" pos:end="17:43">(<argument pos:start="17:14" pos:end="17:15"><expr pos:start="17:14" pos:end="17:15"><name pos:start="17:14" pos:end="17:15">pb</name></expr></argument>, <argument pos:start="17:18" pos:end="17:32"><expr pos:start="17:18" pos:end="17:32"><call pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:21">ilog</name><argument_list pos:start="17:22" pos:end="17:32">(<argument pos:start="17:23" pos:end="17:31"><expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:27">range</name> <operator pos:start="17:29" pos:end="17:29">-</operator> <literal type="number" pos:start="17:31" pos:end="17:31">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:35" pos:end="17:42"><expr pos:start="17:35" pos:end="17:42"><name pos:start="17:35" pos:end="17:42"><name pos:start="17:35" pos:end="17:39">posts</name><index pos:start="17:40" pos:end="17:42">[<expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="67:5">for <control pos:start="21:9" pos:end="21:36">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">2</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:31"><expr pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:22">fc</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:30">values</name></name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control> <block pos:start="21:38" pos:end="67:5">{<block_content pos:start="23:9" pos:end="65:9">

        <decl_stmt pos:start="23:9" pos:end="31:52"><decl pos:start="23:9" pos:end="31:51"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:21">predicted</name> <init pos:start="23:23" pos:end="31:51">= <expr pos:start="23:25" pos:end="31:51"><call pos:start="23:25" pos:end="31:51"><name pos:start="23:25" pos:end="23:36">render_point</name><argument_list pos:start="23:37" pos:end="31:51">(<argument pos:start="23:38" pos:end="23:64"><expr pos:start="23:38" pos:end="23:64"><name pos:start="23:38" pos:end="23:62"><name pos:start="23:38" pos:end="23:39">fc</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:45">list</name><index pos:start="23:46" pos:end="23:62">[<expr pos:start="23:47" pos:end="23:61"><name pos:start="23:47" pos:end="23:57"><name pos:start="23:47" pos:end="23:48">fc</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:54">list</name><index pos:start="23:55" pos:end="23:57">[<expr pos:start="23:56" pos:end="23:56"><name pos:start="23:56" pos:end="23:56">i</name></expr>]</index></name><operator pos:start="23:58" pos:end="23:58">.</operator><name pos:start="23:59" pos:end="23:61">low</name></expr>]</index></name><operator pos:start="23:63" pos:end="23:63">.</operator><name pos:start="23:64" pos:end="23:64">x</name></expr></argument>,

                                     <argument pos:start="25:38" pos:end="25:59"><expr pos:start="25:38" pos:end="25:59"><name pos:start="25:38" pos:end="25:59"><name pos:start="25:38" pos:end="25:42">posts</name><index pos:start="25:43" pos:end="25:59">[<expr pos:start="25:44" pos:end="25:58"><name pos:start="25:44" pos:end="25:54"><name pos:start="25:44" pos:end="25:45">fc</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:51">list</name><index pos:start="25:52" pos:end="25:54">[<expr pos:start="25:53" pos:end="25:53"><name pos:start="25:53" pos:end="25:53">i</name></expr>]</index></name><operator pos:start="25:55" pos:end="25:55">.</operator><name pos:start="25:56" pos:end="25:58">low</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="27:38" pos:end="27:65"><expr pos:start="27:38" pos:end="27:65"><name pos:start="27:38" pos:end="27:63"><name pos:start="27:38" pos:end="27:39">fc</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:45">list</name><index pos:start="27:46" pos:end="27:63">[<expr pos:start="27:47" pos:end="27:62"><name pos:start="27:47" pos:end="27:57"><name pos:start="27:47" pos:end="27:48">fc</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:54">list</name><index pos:start="27:55" pos:end="27:57">[<expr pos:start="27:56" pos:end="27:56"><name pos:start="27:56" pos:end="27:56">i</name></expr>]</index></name><operator pos:start="27:58" pos:end="27:58">.</operator><name pos:start="27:59" pos:end="27:62">high</name></expr>]</index></name><operator pos:start="27:64" pos:end="27:64">.</operator><name pos:start="27:65" pos:end="27:65">x</name></expr></argument>,

                                     <argument pos:start="29:38" pos:end="29:60"><expr pos:start="29:38" pos:end="29:60"><name pos:start="29:38" pos:end="29:60"><name pos:start="29:38" pos:end="29:42">posts</name><index pos:start="29:43" pos:end="29:60">[<expr pos:start="29:44" pos:end="29:59"><name pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:45">fc</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:51">list</name><index pos:start="29:52" pos:end="29:54">[<expr pos:start="29:53" pos:end="29:53"><name pos:start="29:53" pos:end="29:53">i</name></expr>]</index></name><operator pos:start="29:55" pos:end="29:55">.</operator><name pos:start="29:56" pos:end="29:59">high</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="31:38" pos:end="31:50"><expr pos:start="31:38" pos:end="31:50"><name pos:start="31:38" pos:end="31:48"><name pos:start="31:38" pos:end="31:39">fc</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:45">list</name><index pos:start="31:46" pos:end="31:48">[<expr pos:start="31:47" pos:end="31:47"><name pos:start="31:47" pos:end="31:47">i</name></expr>]</index></name><operator pos:start="31:49" pos:end="31:49">.</operator><name pos:start="31:50" pos:end="31:50">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:41"><decl pos:start="33:9" pos:end="33:40"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:20">highroom</name> <init pos:start="33:22" pos:end="33:40">= <expr pos:start="33:24" pos:end="33:40"><name pos:start="33:24" pos:end="33:28">range</name> <operator pos:start="33:30" pos:end="33:30">-</operator> <name pos:start="33:32" pos:end="33:40">predicted</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:32"><decl pos:start="35:9" pos:end="35:31"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:19">lowroom</name> <init pos:start="35:21" pos:end="35:31">= <expr pos:start="35:23" pos:end="35:31"><name pos:start="35:23" pos:end="35:31">predicted</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:44"><decl pos:start="37:9" pos:end="37:43"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:16">room</name> <init pos:start="37:18" pos:end="37:43">= <expr pos:start="37:20" pos:end="37:43"><call pos:start="37:20" pos:end="37:43"><name pos:start="37:20" pos:end="37:24">FFMIN</name><argument_list pos:start="37:25" pos:end="37:43">(<argument pos:start="37:26" pos:end="37:33"><expr pos:start="37:26" pos:end="37:33"><name pos:start="37:26" pos:end="37:33">highroom</name></expr></argument>, <argument pos:start="37:36" pos:end="37:42"><expr pos:start="37:36" pos:end="37:42"><name pos:start="37:36" pos:end="37:42">lowroom</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="51:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:21">predicted</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <name pos:start="39:26" pos:end="39:33"><name pos:start="39:26" pos:end="39:30">posts</name><index pos:start="39:31" pos:end="39:33">[<expr pos:start="39:32" pos:end="39:32"><name pos:start="39:32" pos:end="39:32">i</name></expr>]</index></name></expr>)</condition> <block pos:start="39:36" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:21">

            <expr_stmt pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:17">coded</name><index pos:start="41:18" pos:end="41:20">[<expr pos:start="41:19" pos:end="41:19"><name pos:start="41:19" pos:end="41:19">i</name></expr>]</index></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="41:27" pos:end="41:56">// must be used later as flag!</comment>

            <continue pos:start="43:13" pos:end="43:21">continue;</continue>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="51:9">else <block pos:start="45:16" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:71">

            <if_stmt pos:start="47:13" pos:end="47:69"><if pos:start="47:13" pos:end="47:69">if <condition pos:start="47:16" pos:end="47:40">(<expr pos:start="47:17" pos:end="47:39"><operator pos:start="47:17" pos:end="47:17">!</operator><name pos:start="47:18" pos:end="47:39"><name pos:start="47:18" pos:end="47:22">coded</name><index pos:start="47:23" pos:end="47:39">[<expr pos:start="47:24" pos:end="47:38"><name pos:start="47:24" pos:end="47:34"><name pos:start="47:24" pos:end="47:25">fc</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:31">list</name><index pos:start="47:32" pos:end="47:34">[<expr pos:start="47:33" pos:end="47:33"><name pos:start="47:33" pos:end="47:33">i</name></expr>]</index></name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:38">low</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="47:42" pos:end="47:69"><block_content pos:start="47:42" pos:end="47:69"> <expr_stmt pos:start="47:42" pos:end="47:69"><expr pos:start="47:42" pos:end="47:68"><name pos:start="47:42" pos:end="47:63"><name pos:start="47:42" pos:end="47:46">coded</name><index pos:start="47:47" pos:end="47:63">[<expr pos:start="47:48" pos:end="47:62"><name pos:start="47:48" pos:end="47:58"><name pos:start="47:48" pos:end="47:49">fc</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:55">list</name><index pos:start="47:56" pos:end="47:58">[<expr pos:start="47:57" pos:end="47:57"><name pos:start="47:57" pos:end="47:57">i</name></expr>]</index></name><operator pos:start="47:59" pos:end="47:59">.</operator><name pos:start="47:60" pos:end="47:62">low</name></expr>]</index></name> <operator pos:start="47:65" pos:end="47:65">=</operator> <operator pos:start="47:67" pos:end="47:67">-</operator><literal type="number" pos:start="47:68" pos:end="47:68">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="49:13" pos:end="49:71"><if pos:start="49:13" pos:end="49:71">if <condition pos:start="49:16" pos:end="49:41">(<expr pos:start="49:17" pos:end="49:40"><operator pos:start="49:17" pos:end="49:17">!</operator><name pos:start="49:18" pos:end="49:40"><name pos:start="49:18" pos:end="49:22">coded</name><index pos:start="49:23" pos:end="49:40">[<expr pos:start="49:24" pos:end="49:39"><name pos:start="49:24" pos:end="49:34"><name pos:start="49:24" pos:end="49:25">fc</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:31">list</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">i</name></expr>]</index></name><operator pos:start="49:35" pos:end="49:35">.</operator><name pos:start="49:36" pos:end="49:39">high</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="49:43" pos:end="49:71"><block_content pos:start="49:43" pos:end="49:71"> <expr_stmt pos:start="49:43" pos:end="49:71"><expr pos:start="49:43" pos:end="49:70"><name pos:start="49:43" pos:end="49:65"><name pos:start="49:43" pos:end="49:47">coded</name><index pos:start="49:48" pos:end="49:65">[<expr pos:start="49:49" pos:end="49:64"><name pos:start="49:49" pos:end="49:59"><name pos:start="49:49" pos:end="49:50">fc</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:56">list</name><index pos:start="49:57" pos:end="49:59">[<expr pos:start="49:58" pos:end="49:58"><name pos:start="49:58" pos:end="49:58">i</name></expr>]</index></name><operator pos:start="49:60" pos:end="49:60">.</operator><name pos:start="49:61" pos:end="49:64">high</name></expr>]</index></name> <operator pos:start="49:67" pos:end="49:67">=</operator> <operator pos:start="49:69" pos:end="49:69">-</operator><literal type="number" pos:start="49:70" pos:end="49:70">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="53:9" pos:end="65:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:33">(<expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:17">posts</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><name pos:start="53:19" pos:end="53:19">i</name></expr>]</index></name> <operator pos:start="53:22" pos:end="53:22">&gt;</operator> <name pos:start="53:24" pos:end="53:32">predicted</name></expr>)</condition> <block pos:start="53:35" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:56">

            <if_stmt pos:start="55:13" pos:end="57:56"><if pos:start="55:13" pos:end="55:87">if <condition pos:start="55:16" pos:end="55:44">(<expr pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:24"><name pos:start="55:17" pos:end="55:21">posts</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr>]</index></name> <operator pos:start="55:26" pos:end="55:26">-</operator> <name pos:start="55:28" pos:end="55:36">predicted</name> <operator pos:start="55:38" pos:end="55:38">&gt;</operator> <name pos:start="55:40" pos:end="55:43">room</name></expr>)</condition><block type="pseudo" pos:start="55:46" pos:end="55:87"><block_content pos:start="55:46" pos:end="55:87"> <expr_stmt pos:start="55:46" pos:end="55:87"><expr pos:start="55:46" pos:end="55:86"><name pos:start="55:46" pos:end="55:53"><name pos:start="55:46" pos:end="55:50">coded</name><index pos:start="55:51" pos:end="55:53">[<expr pos:start="55:52" pos:end="55:52"><name pos:start="55:52" pos:end="55:52">i</name></expr>]</index></name> <operator pos:start="55:55" pos:end="55:55">=</operator> <name pos:start="55:57" pos:end="55:64"><name pos:start="55:57" pos:end="55:61">posts</name><index pos:start="55:62" pos:end="55:64">[<expr pos:start="55:63" pos:end="55:63"><name pos:start="55:63" pos:end="55:63">i</name></expr>]</index></name> <operator pos:start="55:66" pos:end="55:66">-</operator> <name pos:start="55:68" pos:end="55:76">predicted</name> <operator pos:start="55:78" pos:end="55:78">+</operator> <name pos:start="55:80" pos:end="55:86">lowroom</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="57:13" pos:end="57:56">else<block type="pseudo" pos:start="57:18" pos:end="57:56"><block_content pos:start="57:18" pos:end="57:56"> <expr_stmt pos:start="57:18" pos:end="57:56"><expr pos:start="57:18" pos:end="57:55"><name pos:start="57:18" pos:end="57:25"><name pos:start="57:18" pos:end="57:22">coded</name><index pos:start="57:23" pos:end="57:25">[<expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">i</name></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <operator pos:start="57:29" pos:end="57:29">(</operator><name pos:start="57:30" pos:end="57:37"><name pos:start="57:30" pos:end="57:34">posts</name><index pos:start="57:35" pos:end="57:37">[<expr pos:start="57:36" pos:end="57:36"><name pos:start="57:36" pos:end="57:36">i</name></expr>]</index></name> <operator pos:start="57:39" pos:end="57:39">-</operator> <name pos:start="57:41" pos:end="57:49">predicted</name><operator pos:start="57:50" pos:end="57:50">)</operator> <operator pos:start="57:52" pos:end="57:53">&lt;&lt;</operator> <literal type="number" pos:start="57:55" pos:end="57:55">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="65:9">else <block pos:start="59:16" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:62">

            <if_stmt pos:start="61:13" pos:end="63:62"><if pos:start="61:13" pos:end="61:92">if <condition pos:start="61:16" pos:end="61:44">(<expr pos:start="61:17" pos:end="61:43"><name pos:start="61:17" pos:end="61:25">predicted</name> <operator pos:start="61:27" pos:end="61:27">-</operator> <name pos:start="61:29" pos:end="61:36"><name pos:start="61:29" pos:end="61:33">posts</name><index pos:start="61:34" pos:end="61:36">[<expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">i</name></expr>]</index></name> <operator pos:start="61:38" pos:end="61:38">&gt;</operator> <name pos:start="61:40" pos:end="61:43">room</name></expr>)</condition><block type="pseudo" pos:start="61:46" pos:end="61:92"><block_content pos:start="61:46" pos:end="61:92"> <expr_stmt pos:start="61:46" pos:end="61:92"><expr pos:start="61:46" pos:end="61:91"><name pos:start="61:46" pos:end="61:53"><name pos:start="61:46" pos:end="61:50">coded</name><index pos:start="61:51" pos:end="61:53">[<expr pos:start="61:52" pos:end="61:52"><name pos:start="61:52" pos:end="61:52">i</name></expr>]</index></name> <operator pos:start="61:55" pos:end="61:55">=</operator> <name pos:start="61:57" pos:end="61:65">predicted</name> <operator pos:start="61:67" pos:end="61:67">-</operator> <name pos:start="61:69" pos:end="61:76"><name pos:start="61:69" pos:end="61:73">posts</name><index pos:start="61:74" pos:end="61:76">[<expr pos:start="61:75" pos:end="61:75"><name pos:start="61:75" pos:end="61:75">i</name></expr>]</index></name> <operator pos:start="61:78" pos:end="61:78">+</operator> <name pos:start="61:80" pos:end="61:87">highroom</name> <operator pos:start="61:89" pos:end="61:89">-</operator> <literal type="number" pos:start="61:91" pos:end="61:91">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="63:13" pos:end="63:62">else<block type="pseudo" pos:start="63:18" pos:end="63:62"><block_content pos:start="63:18" pos:end="63:62"> <expr_stmt pos:start="63:18" pos:end="63:62"><expr pos:start="63:18" pos:end="63:61"><name pos:start="63:18" pos:end="63:25"><name pos:start="63:18" pos:end="63:22">coded</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">i</name></expr>]</index></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <operator pos:start="63:29" pos:end="63:29">(</operator><operator pos:start="63:30" pos:end="63:30">(</operator><name pos:start="63:31" pos:end="63:39">predicted</name> <operator pos:start="63:41" pos:end="63:41">-</operator> <name pos:start="63:43" pos:end="63:50"><name pos:start="63:43" pos:end="63:47">posts</name><index pos:start="63:48" pos:end="63:50">[<expr pos:start="63:49" pos:end="63:49"><name pos:start="63:49" pos:end="63:49">i</name></expr>]</index></name><operator pos:start="63:51" pos:end="63:51">)</operator> <operator pos:start="63:53" pos:end="63:54">&lt;&lt;</operator> <literal type="number" pos:start="63:56" pos:end="63:56">1</literal><operator pos:start="63:57" pos:end="63:57">)</operator> <operator pos:start="63:59" pos:end="63:59">-</operator> <literal type="number" pos:start="63:61" pos:end="63:61">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:16"><expr pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:11">counter</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <literal type="number" pos:start="71:15" pos:end="71:15">2</literal></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="135:5">for <control pos:start="73:9" pos:end="73:40">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:35"><expr pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:34"><name pos:start="73:21" pos:end="73:22">fc</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:34">partitions</name></name></expr>;</condition> <incr pos:start="73:37" pos:end="73:39"><expr pos:start="73:37" pos:end="73:39"><name pos:start="73:37" pos:end="73:37">i</name><operator pos:start="73:38" pos:end="73:39">++</operator></expr></incr>)</control> <block pos:start="73:42" pos:end="135:5">{<block_content pos:start="75:9" pos:end="133:9">

        <decl_stmt pos:start="75:9" pos:end="75:68"><decl pos:start="75:9" pos:end="75:67"><type pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:21">floor_class_t</name> <modifier pos:start="75:23" pos:end="75:23">*</modifier></type> <name pos:start="75:25" pos:end="75:25">c</name> <init pos:start="75:27" pos:end="75:67">= <expr pos:start="75:29" pos:end="75:67"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:67"><name pos:start="75:30" pos:end="75:31">fc</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:40">classes</name><index pos:start="75:41" pos:end="75:67">[<expr pos:start="75:42" pos:end="75:66"><name pos:start="75:42" pos:end="75:66"><name pos:start="75:42" pos:end="75:43">fc</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:63">partition_to_class</name><index pos:start="75:64" pos:end="75:66">[<expr pos:start="75:65" pos:end="75:65"><name pos:start="75:65" pos:end="75:65">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:47"><decl pos:start="77:9" pos:end="77:13"><type pos:start="77:9" pos:end="77:11"><name pos:start="77:9" pos:end="77:11">int</name></type> <name pos:start="77:13" pos:end="77:13">k</name></decl>, <decl pos:start="77:16" pos:end="77:23"><type ref="prev" pos:start="77:9" pos:end="77:11"/><name pos:start="77:16" pos:end="77:19">cval</name> <init pos:start="77:21" pos:end="77:23">= <expr pos:start="77:23" pos:end="77:23"><literal type="number" pos:start="77:23" pos:end="77:23">0</literal></expr></init></decl>, <decl pos:start="77:26" pos:end="77:46"><type ref="prev" pos:start="77:9" pos:end="77:11"/><name pos:start="77:26" pos:end="77:29">csub</name> <init pos:start="77:31" pos:end="77:46">= <expr pos:start="77:33" pos:end="77:46"><literal type="number" pos:start="77:33" pos:end="77:33">1</literal><operator pos:start="77:34" pos:end="77:35">&lt;&lt;</operator><name pos:start="77:36" pos:end="77:46"><name pos:start="77:36" pos:end="77:36">c</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:46">subclass</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="79:9" pos:end="113:9"><if pos:start="79:9" pos:end="113:9">if <condition pos:start="79:12" pos:end="79:24">(<expr pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:13">c</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:23">subclass</name></name></expr>)</condition> <block pos:start="79:26" pos:end="113:9">{<block_content pos:start="81:13" pos:end="111:80">

            <decl_stmt pos:start="81:13" pos:end="81:64"><decl pos:start="81:13" pos:end="81:63"><type pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:22">codebook_t</name> <modifier pos:start="81:24" pos:end="81:24">*</modifier></type> <name pos:start="81:26" pos:end="81:29">book</name> <init pos:start="81:31" pos:end="81:63">= <expr pos:start="81:33" pos:end="81:63"><operator pos:start="81:33" pos:end="81:33">&amp;</operator><name pos:start="81:34" pos:end="81:63"><name pos:start="81:34" pos:end="81:37">venc</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:48">codebooks</name><index pos:start="81:49" pos:end="81:63">[<expr pos:start="81:50" pos:end="81:62"><name pos:start="81:50" pos:end="81:62"><name pos:start="81:50" pos:end="81:50">c</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:62">masterbook</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:27"><decl pos:start="83:13" pos:end="83:26"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:22">cshift</name> <init pos:start="83:24" pos:end="83:26">= <expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="85:13" pos:end="107:13">for <control pos:start="85:17" pos:end="85:40">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">k</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:35"><expr pos:start="85:25" pos:end="85:34"><name pos:start="85:25" pos:end="85:25">k</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:34"><name pos:start="85:29" pos:end="85:29">c</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:34">dim</name></name></expr>;</condition> <incr pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:37">k</name><operator pos:start="85:38" pos:end="85:39">++</operator></expr></incr>)</control> <block pos:start="85:42" pos:end="107:13">{<block_content pos:start="87:17" pos:end="105:38">

                <decl_stmt pos:start="87:17" pos:end="87:22"><decl pos:start="87:17" pos:end="87:21"><type pos:start="87:17" pos:end="87:19"><name pos:start="87:17" pos:end="87:19">int</name></type> <name pos:start="87:21" pos:end="87:21">l</name></decl>;</decl_stmt>

                <for pos:start="89:17" pos:end="99:17">for <control pos:start="89:21" pos:end="89:42">(<init pos:start="89:22" pos:end="89:27"><expr pos:start="89:22" pos:end="89:26"><name pos:start="89:22" pos:end="89:22">l</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>;</init> <condition pos:start="89:29" pos:end="89:37"><expr pos:start="89:29" pos:end="89:36"><name pos:start="89:29" pos:end="89:29">l</name> <operator pos:start="89:31" pos:end="89:31">&lt;</operator> <name pos:start="89:33" pos:end="89:36">csub</name></expr>;</condition> <incr pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:39">l</name><operator pos:start="89:40" pos:end="89:41">++</operator></expr></incr>)</control> <block pos:start="89:44" pos:end="99:17">{<block_content pos:start="91:21" pos:end="97:59">

                    <decl_stmt pos:start="91:21" pos:end="91:35"><decl pos:start="91:21" pos:end="91:34"><type pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">int</name></type> <name pos:start="91:25" pos:end="91:30">maxval</name> <init pos:start="91:32" pos:end="91:34">= <expr pos:start="91:34" pos:end="91:34"><literal type="number" pos:start="91:34" pos:end="91:34">1</literal></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="93:21" pos:end="93:90"><if pos:start="93:21" pos:end="93:90">if <condition pos:start="93:24" pos:end="93:42">(<expr pos:start="93:25" pos:end="93:41"><name pos:start="93:25" pos:end="93:35"><name pos:start="93:25" pos:end="93:25">c</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:32">books</name><index pos:start="93:33" pos:end="93:35">[<expr pos:start="93:34" pos:end="93:34"><name pos:start="93:34" pos:end="93:34">l</name></expr>]</index></name> <operator pos:start="93:37" pos:end="93:38">!=</operator> <operator pos:start="93:40" pos:end="93:40">-</operator><literal type="number" pos:start="93:41" pos:end="93:41">1</literal></expr>)</condition><block type="pseudo" pos:start="93:44" pos:end="93:90"><block_content pos:start="93:44" pos:end="93:90"> <expr_stmt pos:start="93:44" pos:end="93:90"><expr pos:start="93:44" pos:end="93:89"><name pos:start="93:44" pos:end="93:49">maxval</name> <operator pos:start="93:51" pos:end="93:51">=</operator> <name pos:start="93:53" pos:end="93:80"><name pos:start="93:53" pos:end="93:56">venc</name><operator pos:start="93:57" pos:end="93:58">-&gt;</operator><name pos:start="93:59" pos:end="93:67">codebooks</name><index pos:start="93:68" pos:end="93:80">[<expr pos:start="93:69" pos:end="93:79"><name pos:start="93:69" pos:end="93:79"><name pos:start="93:69" pos:end="93:69">c</name><operator pos:start="93:70" pos:end="93:71">-&gt;</operator><name pos:start="93:72" pos:end="93:76">books</name><index pos:start="93:77" pos:end="93:79">[<expr pos:start="93:78" pos:end="93:78"><name pos:start="93:78" pos:end="93:78">l</name></expr>]</index></name></expr>]</index></name><operator pos:start="93:81" pos:end="93:81">.</operator><name pos:start="93:82" pos:end="93:89">nentries</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="line" pos:start="95:21" pos:end="95:77">// coded could be -1, but this still works, cause thats 0</comment>

                    <if_stmt pos:start="97:21" pos:end="97:59"><if pos:start="97:21" pos:end="97:59">if <condition pos:start="97:24" pos:end="97:52">(<expr pos:start="97:25" pos:end="97:51"><name pos:start="97:25" pos:end="97:42"><name pos:start="97:25" pos:end="97:29">coded</name><index pos:start="97:30" pos:end="97:42">[<expr pos:start="97:31" pos:end="97:41"><name pos:start="97:31" pos:end="97:37">counter</name> <operator pos:start="97:39" pos:end="97:39">+</operator> <name pos:start="97:41" pos:end="97:41">k</name></expr>]</index></name> <operator pos:start="97:44" pos:end="97:44">&lt;</operator> <name pos:start="97:46" pos:end="97:51">maxval</name></expr>)</condition><block type="pseudo" pos:start="97:54" pos:end="97:59"><block_content pos:start="97:54" pos:end="97:59"> <break pos:start="97:54" pos:end="97:59">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="101:17" pos:end="101:34"><expr pos:start="101:17" pos:end="101:33"><call pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:22">assert</name><argument_list pos:start="101:23" pos:end="101:33">(<argument pos:start="101:24" pos:end="101:32"><expr pos:start="101:24" pos:end="101:32"><name pos:start="101:24" pos:end="101:24">l</name> <operator pos:start="101:26" pos:end="101:27">!=</operator> <name pos:start="101:29" pos:end="101:32">csub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:20">cval</name> <operator pos:start="103:22" pos:end="103:23">|=</operator> <name pos:start="103:25" pos:end="103:25">l</name> <operator pos:start="103:27" pos:end="103:28">&lt;&lt;</operator> <name pos:start="103:30" pos:end="103:35">cshift</name></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:38"><expr pos:start="105:17" pos:end="105:37"><name pos:start="105:17" pos:end="105:22">cshift</name> <operator pos:start="105:24" pos:end="105:25">+=</operator> <name pos:start="105:27" pos:end="105:37"><name pos:start="105:27" pos:end="105:27">c</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:37">subclass</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="109:13" pos:end="109:42"><expr pos:start="109:13" pos:end="109:41"><call pos:start="109:13" pos:end="109:41"><name pos:start="109:13" pos:end="109:18">assert</name><argument_list pos:start="109:19" pos:end="109:41">(<argument pos:start="109:20" pos:end="109:40"><expr pos:start="109:20" pos:end="109:40"><name pos:start="109:20" pos:end="109:23">cval</name> <operator pos:start="109:25" pos:end="109:25">&lt;</operator> <name pos:start="109:27" pos:end="109:40"><name pos:start="109:27" pos:end="109:30">book</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:40">nentries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:80"><expr pos:start="111:13" pos:end="111:79"><call pos:start="111:13" pos:end="111:79"><name pos:start="111:13" pos:end="111:20">put_bits</name><argument_list pos:start="111:21" pos:end="111:79">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">pb</name></expr></argument>, <argument pos:start="111:26" pos:end="111:48"><expr pos:start="111:26" pos:end="111:48"><name pos:start="111:26" pos:end="111:44"><name pos:start="111:26" pos:end="111:29">book</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:38">entries</name><index pos:start="111:39" pos:end="111:44">[<expr pos:start="111:40" pos:end="111:43"><name pos:start="111:40" pos:end="111:43">cval</name></expr>]</index></name><operator pos:start="111:45" pos:end="111:45">.</operator><name pos:start="111:46" pos:end="111:48">len</name></expr></argument>, <argument pos:start="111:51" pos:end="111:78"><expr pos:start="111:51" pos:end="111:78"><name pos:start="111:51" pos:end="111:69"><name pos:start="111:51" pos:end="111:54">book</name><operator pos:start="111:55" pos:end="111:56">-&gt;</operator><name pos:start="111:57" pos:end="111:63">entries</name><index pos:start="111:64" pos:end="111:69">[<expr pos:start="111:65" pos:end="111:68"><name pos:start="111:65" pos:end="111:68">cval</name></expr>]</index></name><operator pos:start="111:70" pos:end="111:70">.</operator><name pos:start="111:71" pos:end="111:78">codeword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="115:9" pos:end="133:9">for <control pos:start="115:13" pos:end="115:36">(<init pos:start="115:14" pos:end="115:19"><expr pos:start="115:14" pos:end="115:18"><name pos:start="115:14" pos:end="115:14">k</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>;</init> <condition pos:start="115:21" pos:end="115:31"><expr pos:start="115:21" pos:end="115:30"><name pos:start="115:21" pos:end="115:21">k</name> <operator pos:start="115:23" pos:end="115:23">&lt;</operator> <name pos:start="115:25" pos:end="115:30"><name pos:start="115:25" pos:end="115:25">c</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:30">dim</name></name></expr>;</condition> <incr pos:start="115:33" pos:end="115:35"><expr pos:start="115:33" pos:end="115:35"><name pos:start="115:33" pos:end="115:33">k</name><operator pos:start="115:34" pos:end="115:35">++</operator></expr></incr>)</control> <block pos:start="115:38" pos:end="133:9">{<block_content pos:start="117:13" pos:end="131:114">

            <decl_stmt pos:start="117:13" pos:end="117:49"><decl pos:start="117:13" pos:end="117:48"><type pos:start="117:13" pos:end="117:15"><name pos:start="117:13" pos:end="117:15">int</name></type> <name pos:start="117:17" pos:end="117:20">book</name> <init pos:start="117:22" pos:end="117:48">= <expr pos:start="117:24" pos:end="117:48"><name pos:start="117:24" pos:end="117:48"><name pos:start="117:24" pos:end="117:24">c</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:31">books</name><index pos:start="117:32" pos:end="117:48">[<expr pos:start="117:33" pos:end="117:47"><name pos:start="117:33" pos:end="117:36">cval</name> <operator pos:start="117:38" pos:end="117:38">&amp;</operator> <operator pos:start="117:40" pos:end="117:40">(</operator><name pos:start="117:41" pos:end="117:44">csub</name><operator pos:start="117:45" pos:end="117:45">-</operator><literal type="number" pos:start="117:46" pos:end="117:46">1</literal><operator pos:start="117:47" pos:end="117:47">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="119:13" pos:end="119:41"><decl pos:start="119:13" pos:end="119:40"><type pos:start="119:13" pos:end="119:15"><name pos:start="119:13" pos:end="119:15">int</name></type> <name pos:start="119:17" pos:end="119:21">entry</name> <init pos:start="119:23" pos:end="119:40">= <expr pos:start="119:25" pos:end="119:40"><name pos:start="119:25" pos:end="119:40"><name pos:start="119:25" pos:end="119:29">coded</name><index pos:start="119:30" pos:end="119:40">[<expr pos:start="119:31" pos:end="119:39"><name pos:start="119:31" pos:end="119:37">counter</name><operator pos:start="119:38" pos:end="119:39">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:16">cval</name> <operator pos:start="121:18" pos:end="121:20">&gt;&gt;=</operator> <name pos:start="121:22" pos:end="121:32"><name pos:start="121:22" pos:end="121:22">c</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:32">subclass</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="123:37"><if pos:start="123:13" pos:end="123:37">if <condition pos:start="123:16" pos:end="123:27">(<expr pos:start="123:17" pos:end="123:26"><name pos:start="123:17" pos:end="123:20">book</name> <operator pos:start="123:22" pos:end="123:23">==</operator> <operator pos:start="123:25" pos:end="123:25">-</operator><literal type="number" pos:start="123:26" pos:end="123:26">1</literal></expr>)</condition><block type="pseudo" pos:start="123:29" pos:end="123:37"><block_content pos:start="123:29" pos:end="123:37"> <continue pos:start="123:29" pos:end="123:37">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="125:13" pos:end="125:39"><if pos:start="125:13" pos:end="125:39">if <condition pos:start="125:16" pos:end="125:28">(<expr pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:21">entry</name> <operator pos:start="125:23" pos:end="125:24">==</operator> <operator pos:start="125:26" pos:end="125:26">-</operator><literal type="number" pos:start="125:27" pos:end="125:27">1</literal></expr>)</condition><block type="pseudo" pos:start="125:30" pos:end="125:39"><block_content pos:start="125:30" pos:end="125:39"> <expr_stmt pos:start="125:30" pos:end="125:39"><expr pos:start="125:30" pos:end="125:38"><name pos:start="125:30" pos:end="125:34">entry</name> <operator pos:start="125:36" pos:end="125:36">=</operator> <literal type="number" pos:start="125:38" pos:end="125:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:59"><expr pos:start="127:13" pos:end="127:58"><call pos:start="127:13" pos:end="127:58"><name pos:start="127:13" pos:end="127:18">assert</name><argument_list pos:start="127:19" pos:end="127:58">(<argument pos:start="127:20" pos:end="127:57"><expr pos:start="127:20" pos:end="127:57"><name pos:start="127:20" pos:end="127:24">entry</name> <operator pos:start="127:26" pos:end="127:26">&lt;</operator> <name pos:start="127:28" pos:end="127:48"><name pos:start="127:28" pos:end="127:31">venc</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:42">codebooks</name><index pos:start="127:43" pos:end="127:48">[<expr pos:start="127:44" pos:end="127:47"><name pos:start="127:44" pos:end="127:47">book</name></expr>]</index></name><operator pos:start="127:49" pos:end="127:49">.</operator><name pos:start="127:50" pos:end="127:57">nentries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:31"><expr pos:start="129:13" pos:end="129:30"><call pos:start="129:13" pos:end="129:30"><name pos:start="129:13" pos:end="129:18">assert</name><argument_list pos:start="129:19" pos:end="129:30">(<argument pos:start="129:20" pos:end="129:29"><expr pos:start="129:20" pos:end="129:29"><name pos:start="129:20" pos:end="129:24">entry</name> <operator pos:start="129:26" pos:end="129:27">&gt;=</operator> <literal type="number" pos:start="129:29" pos:end="129:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:114"><expr pos:start="131:13" pos:end="131:113"><call pos:start="131:13" pos:end="131:113"><name pos:start="131:13" pos:end="131:20">put_bits</name><argument_list pos:start="131:21" pos:end="131:113">(<argument pos:start="131:22" pos:end="131:23"><expr pos:start="131:22" pos:end="131:23"><name pos:start="131:22" pos:end="131:23">pb</name></expr></argument>, <argument pos:start="131:26" pos:end="131:65"><expr pos:start="131:26" pos:end="131:65"><name pos:start="131:26" pos:end="131:46"><name pos:start="131:26" pos:end="131:29">venc</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:40">codebooks</name><index pos:start="131:41" pos:end="131:46">[<expr pos:start="131:42" pos:end="131:45"><name pos:start="131:42" pos:end="131:45">book</name></expr>]</index></name><operator pos:start="131:47" pos:end="131:47">.</operator><name pos:start="131:48" pos:end="131:61"><name pos:start="131:48" pos:end="131:54">entries</name><index pos:start="131:55" pos:end="131:61">[<expr pos:start="131:56" pos:end="131:60"><name pos:start="131:56" pos:end="131:60">entry</name></expr>]</index></name><operator pos:start="131:62" pos:end="131:62">.</operator><name pos:start="131:63" pos:end="131:65">len</name></expr></argument>, <argument pos:start="131:68" pos:end="131:112"><expr pos:start="131:68" pos:end="131:112"><name pos:start="131:68" pos:end="131:88"><name pos:start="131:68" pos:end="131:71">venc</name><operator pos:start="131:72" pos:end="131:73">-&gt;</operator><name pos:start="131:74" pos:end="131:82">codebooks</name><index pos:start="131:83" pos:end="131:88">[<expr pos:start="131:84" pos:end="131:87"><name pos:start="131:84" pos:end="131:87">book</name></expr>]</index></name><operator pos:start="131:89" pos:end="131:89">.</operator><name pos:start="131:90" pos:end="131:103"><name pos:start="131:90" pos:end="131:96">entries</name><index pos:start="131:97" pos:end="131:103">[<expr pos:start="131:98" pos:end="131:102"><name pos:start="131:98" pos:end="131:102">entry</name></expr>]</index></name><operator pos:start="131:104" pos:end="131:104">.</operator><name pos:start="131:105" pos:end="131:112">codeword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="139:5" pos:end="139:11"><expr pos:start="139:5" pos:end="139:10"><name pos:start="139:5" pos:end="139:6">lx</name> <operator pos:start="139:8" pos:end="139:8">=</operator> <literal type="number" pos:start="139:10" pos:end="139:10">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:35"><expr pos:start="141:5" pos:end="141:34"><name pos:start="141:5" pos:end="141:6">ly</name> <operator pos:start="141:8" pos:end="141:8">=</operator> <name pos:start="141:10" pos:end="141:17"><name pos:start="141:10" pos:end="141:14">posts</name><index pos:start="141:15" pos:end="141:17">[<expr pos:start="141:16" pos:end="141:16"><literal type="number" pos:start="141:16" pos:end="141:16">0</literal></expr>]</index></name> <operator pos:start="141:19" pos:end="141:19">*</operator> <name pos:start="141:21" pos:end="141:34"><name pos:start="141:21" pos:end="141:22">fc</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:34">multiplier</name></name></expr>;</expr_stmt> <comment type="line" pos:start="141:37" pos:end="141:58">// sorted 0 is still 0</comment>

    <expr_stmt pos:start="143:5" pos:end="143:28"><expr pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:12"><name pos:start="143:5" pos:end="143:9">coded</name><index pos:start="143:10" pos:end="143:12">[<expr pos:start="143:11" pos:end="143:11"><literal type="number" pos:start="143:11" pos:end="143:11">0</literal></expr>]</index></name> <operator pos:start="143:14" pos:end="143:14">=</operator> <name pos:start="143:16" pos:end="143:23"><name pos:start="143:16" pos:end="143:20">coded</name><index pos:start="143:21" pos:end="143:23">[<expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">1</literal></expr>]</index></name> <operator pos:start="143:25" pos:end="143:25">=</operator> <literal type="number" pos:start="143:27" pos:end="143:27">1</literal></expr>;</expr_stmt>

    <for pos:start="145:5" pos:end="161:5">for <control pos:start="145:9" pos:end="145:36">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">1</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:31"><expr pos:start="145:17" pos:end="145:30"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:30"><name pos:start="145:21" pos:end="145:22">fc</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:30">values</name></name></expr>;</condition> <incr pos:start="145:33" pos:end="145:35"><expr pos:start="145:33" pos:end="145:35"><name pos:start="145:33" pos:end="145:33">i</name><operator pos:start="145:34" pos:end="145:35">++</operator></expr></incr>)</control> <block pos:start="145:38" pos:end="161:5">{<block_content pos:start="147:9" pos:end="159:33">

        <decl_stmt pos:start="147:9" pos:end="147:35"><decl pos:start="147:9" pos:end="147:34"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:15">pos</name> <init pos:start="147:17" pos:end="147:34">= <expr pos:start="147:19" pos:end="147:34"><name pos:start="147:19" pos:end="147:29"><name pos:start="147:19" pos:end="147:20">fc</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:26">list</name><index pos:start="147:27" pos:end="147:29">[<expr pos:start="147:28" pos:end="147:28"><name pos:start="147:28" pos:end="147:28">i</name></expr>]</index></name><operator pos:start="147:30" pos:end="147:30">.</operator><name pos:start="147:31" pos:end="147:34">sort</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="149:9" pos:end="157:9"><if pos:start="149:9" pos:end="157:9">if <condition pos:start="149:12" pos:end="149:23">(<expr pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:22"><name pos:start="149:13" pos:end="149:17">coded</name><index pos:start="149:18" pos:end="149:22">[<expr pos:start="149:19" pos:end="149:21"><name pos:start="149:19" pos:end="149:21">pos</name></expr>]</index></name></expr>)</condition> <block pos:start="149:25" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:45">

            <expr_stmt pos:start="151:13" pos:end="151:94"><expr pos:start="151:13" pos:end="151:93"><call pos:start="151:13" pos:end="151:93"><name pos:start="151:13" pos:end="151:23">render_line</name><argument_list pos:start="151:24" pos:end="151:93">(<argument pos:start="151:25" pos:end="151:26"><expr pos:start="151:25" pos:end="151:26"><name pos:start="151:25" pos:end="151:26">lx</name></expr></argument>, <argument pos:start="151:29" pos:end="151:30"><expr pos:start="151:29" pos:end="151:30"><name pos:start="151:29" pos:end="151:30">ly</name></expr></argument>, <argument pos:start="151:33" pos:end="151:47"><expr pos:start="151:33" pos:end="151:47"><name pos:start="151:33" pos:end="151:45"><name pos:start="151:33" pos:end="151:34">fc</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:40">list</name><index pos:start="151:41" pos:end="151:45">[<expr pos:start="151:42" pos:end="151:44"><name pos:start="151:42" pos:end="151:44">pos</name></expr>]</index></name><operator pos:start="151:46" pos:end="151:46">.</operator><name pos:start="151:47" pos:end="151:47">x</name></expr></argument>, <argument pos:start="151:50" pos:end="151:76"><expr pos:start="151:50" pos:end="151:76"><name pos:start="151:50" pos:end="151:59"><name pos:start="151:50" pos:end="151:54">posts</name><index pos:start="151:55" pos:end="151:59">[<expr pos:start="151:56" pos:end="151:58"><name pos:start="151:56" pos:end="151:58">pos</name></expr>]</index></name> <operator pos:start="151:61" pos:end="151:61">*</operator> <name pos:start="151:63" pos:end="151:76"><name pos:start="151:63" pos:end="151:64">fc</name><operator pos:start="151:65" pos:end="151:66">-&gt;</operator><name pos:start="151:67" pos:end="151:76">multiplier</name></name></expr></argument>, <argument pos:start="151:79" pos:end="151:83"><expr pos:start="151:79" pos:end="151:83"><name pos:start="151:79" pos:end="151:83">floor</name></expr></argument>, <argument pos:start="151:86" pos:end="151:92"><expr pos:start="151:86" pos:end="151:92"><name pos:start="151:86" pos:end="151:92">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:33"><expr pos:start="153:13" pos:end="153:32"><name pos:start="153:13" pos:end="153:14">lx</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <name pos:start="153:18" pos:end="153:30"><name pos:start="153:18" pos:end="153:19">fc</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:25">list</name><index pos:start="153:26" pos:end="153:30">[<expr pos:start="153:27" pos:end="153:29"><name pos:start="153:27" pos:end="153:29">pos</name></expr>]</index></name><operator pos:start="153:31" pos:end="153:31">.</operator><name pos:start="153:32" pos:end="153:32">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:45"><expr pos:start="155:13" pos:end="155:44"><name pos:start="155:13" pos:end="155:14">ly</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <name pos:start="155:18" pos:end="155:27"><name pos:start="155:18" pos:end="155:22">posts</name><index pos:start="155:23" pos:end="155:27">[<expr pos:start="155:24" pos:end="155:26"><name pos:start="155:24" pos:end="155:26">pos</name></expr>]</index></name> <operator pos:start="155:29" pos:end="155:29">*</operator> <name pos:start="155:31" pos:end="155:44"><name pos:start="155:31" pos:end="155:32">fc</name><operator pos:start="155:33" pos:end="155:34">-&gt;</operator><name pos:start="155:35" pos:end="155:44">multiplier</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="159:33"><if pos:start="159:9" pos:end="159:33">if <condition pos:start="159:12" pos:end="159:26">(<expr pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:14">lx</name> <operator pos:start="159:16" pos:end="159:17">&gt;=</operator> <name pos:start="159:19" pos:end="159:25">samples</name></expr>)</condition><block type="pseudo" pos:start="159:28" pos:end="159:33"><block_content pos:start="159:28" pos:end="159:33"> <break pos:start="159:28" pos:end="159:33">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="163:5" pos:end="163:71"><if pos:start="163:5" pos:end="163:71">if <condition pos:start="163:8" pos:end="163:21">(<expr pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:10">lx</name> <operator pos:start="163:12" pos:end="163:12">&lt;</operator> <name pos:start="163:14" pos:end="163:20">samples</name></expr>)</condition><block type="pseudo" pos:start="163:23" pos:end="163:71"><block_content pos:start="163:23" pos:end="163:71"> <expr_stmt pos:start="163:23" pos:end="163:71"><expr pos:start="163:23" pos:end="163:70"><call pos:start="163:23" pos:end="163:70"><name pos:start="163:23" pos:end="163:33">render_line</name><argument_list pos:start="163:34" pos:end="163:70">(<argument pos:start="163:35" pos:end="163:36"><expr pos:start="163:35" pos:end="163:36"><name pos:start="163:35" pos:end="163:36">lx</name></expr></argument>, <argument pos:start="163:39" pos:end="163:40"><expr pos:start="163:39" pos:end="163:40"><name pos:start="163:39" pos:end="163:40">ly</name></expr></argument>, <argument pos:start="163:43" pos:end="163:49"><expr pos:start="163:43" pos:end="163:49"><name pos:start="163:43" pos:end="163:49">samples</name></expr></argument>, <argument pos:start="163:52" pos:end="163:53"><expr pos:start="163:52" pos:end="163:53"><name pos:start="163:52" pos:end="163:53">ly</name></expr></argument>, <argument pos:start="163:56" pos:end="163:60"><expr pos:start="163:56" pos:end="163:60"><name pos:start="163:56" pos:end="163:60">floor</name></expr></argument>, <argument pos:start="163:63" pos:end="163:69"><expr pos:start="163:63" pos:end="163:69"><name pos:start="163:63" pos:end="163:69">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
