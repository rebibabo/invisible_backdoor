<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16454.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_h264_check_intra_pred_mode</name><parameter_list pos:start="1:34" pos:end="1:59">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:45">H264Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">mode</name></decl></parameter>)</parameter_list><block pos:start="1:60" pos:end="61:1">{<block_content pos:start="3:5" pos:end="59:16">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:23"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:23">int8_t</name></type> <name pos:start="5:25" pos:end="5:31"><name pos:start="5:25" pos:end="5:27">top</name> <index pos:start="5:29" pos:end="5:31">[<expr pos:start="5:30" pos:end="5:30"><literal type="number" pos:start="5:30" pos:end="5:30">7</literal></expr>]</index></name><init pos:start="5:32" pos:end="5:59">= <expr pos:start="5:34" pos:end="5:59"><block pos:start="5:34" pos:end="5:59">{<expr pos:start="5:35" pos:end="5:49"><name pos:start="5:35" pos:end="5:49">LEFT_DC_PRED8x8</name></expr>, <expr pos:start="5:52" pos:end="5:52"><literal type="number" pos:start="5:52" pos:end="5:52">1</literal></expr>,<expr pos:start="5:54" pos:end="5:55"><operator pos:start="5:54" pos:end="5:54">-</operator><literal type="number" pos:start="5:55" pos:end="5:55">1</literal></expr>,<expr pos:start="5:57" pos:end="5:58"><operator pos:start="5:57" pos:end="5:57">-</operator><literal type="number" pos:start="5:58" pos:end="5:58">1</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:74"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:23">int8_t</name></type> <name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:28">left</name><index pos:start="7:29" pos:end="7:31">[<expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">7</literal></expr>]</index></name><init pos:start="7:32" pos:end="7:74">= <expr pos:start="7:34" pos:end="7:74"><block pos:start="7:34" pos:end="7:74">{ <expr pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:49">TOP_DC_PRED8x8</name></expr>,<expr pos:start="7:51" pos:end="7:52"><operator pos:start="7:51" pos:end="7:51">-</operator><literal type="number" pos:start="7:52" pos:end="7:52">1</literal></expr>, <expr pos:start="7:55" pos:end="7:55"><literal type="number" pos:start="7:55" pos:end="7:55">2</literal></expr>,<expr pos:start="7:57" pos:end="7:58"><operator pos:start="7:57" pos:end="7:57">-</operator><literal type="number" pos:start="7:58" pos:end="7:58">1</literal></expr>,<expr pos:start="7:60" pos:end="7:73"><name pos:start="7:60" pos:end="7:73">DC_128_PRED8x8</name></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if<condition pos:start="11:7" pos:end="11:17">(<expr pos:start="11:8" pos:end="11:16"><name pos:start="11:8" pos:end="11:11">mode</name> <operator pos:start="11:13" pos:end="11:13">&gt;</operator> <literal type="number" pos:start="11:15" pos:end="11:16">6U</literal></expr>)</condition> <block pos:start="11:19" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:109"><expr pos:start="13:9" pos:end="13:108"><call pos:start="13:9" pos:end="13:108"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:108">(<argument pos:start="13:16" pos:end="13:25"><expr pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:16">h</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:25">avctx</name></name></expr></argument>, <argument pos:start="13:28" pos:end="13:39"><expr pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:42" pos:end="13:89"><expr pos:start="13:42" pos:end="13:89"><literal type="string" pos:start="13:42" pos:end="13:89">"out of range intra chroma pred mode at %d %d\n"</literal></expr></argument>, <argument pos:start="13:92" pos:end="13:98"><expr pos:start="13:92" pos:end="13:98"><name pos:start="13:92" pos:end="13:98"><name pos:start="13:92" pos:end="13:92">s</name><operator pos:start="13:93" pos:end="13:94">-&gt;</operator><name pos:start="13:95" pos:end="13:98">mb_x</name></name></expr></argument>, <argument pos:start="13:101" pos:end="13:107"><expr pos:start="13:101" pos:end="13:107"><name pos:start="13:101" pos:end="13:107"><name pos:start="13:101" pos:end="13:101">s</name><operator pos:start="13:102" pos:end="13:103">-&gt;</operator><name pos:start="13:104" pos:end="13:107">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if<condition pos:start="21:7" pos:end="21:42">(<expr pos:start="21:8" pos:end="21:41"><operator pos:start="21:8" pos:end="21:8">!</operator><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:33"><name pos:start="21:10" pos:end="21:10">h</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:33">top_samples_available</name></name><operator pos:start="21:34" pos:end="21:34">&amp;</operator><literal type="number" pos:start="21:35" pos:end="21:40">0x8000</literal><operator pos:start="21:41" pos:end="21:41">)</operator></expr>)</condition><block pos:start="21:43" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:9">

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:12">mode</name><operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:17">top</name><index pos:start="23:18" pos:end="23:25">[ <expr pos:start="23:20" pos:end="23:23"><name pos:start="23:20" pos:end="23:23">mode</name></expr> ]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if<condition pos:start="25:11" pos:end="25:18">(<expr pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:15">mode</name><operator pos:start="25:16" pos:end="25:16">&lt;</operator><literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>)</condition><block pos:start="25:19" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:22">

            <expr_stmt pos:start="27:13" pos:end="27:124"><expr pos:start="27:13" pos:end="27:123"><call pos:start="27:13" pos:end="27:123"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:123">(<argument pos:start="27:20" pos:end="27:29"><expr pos:start="27:20" pos:end="27:29"><name pos:start="27:20" pos:end="27:29"><name pos:start="27:20" pos:end="27:20">h</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:24">.</operator><name pos:start="27:25" pos:end="27:29">avctx</name></name></expr></argument>, <argument pos:start="27:32" pos:end="27:43"><expr pos:start="27:32" pos:end="27:43"><name pos:start="27:32" pos:end="27:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:46" pos:end="27:104"><expr pos:start="27:46" pos:end="27:104"><literal type="string" pos:start="27:46" pos:end="27:104">"top block unavailable for requested intra mode at %d %d\n"</literal></expr></argument>, <argument pos:start="27:107" pos:end="27:113"><expr pos:start="27:107" pos:end="27:113"><name pos:start="27:107" pos:end="27:113"><name pos:start="27:107" pos:end="27:107">s</name><operator pos:start="27:108" pos:end="27:109">-&gt;</operator><name pos:start="27:110" pos:end="27:113">mb_x</name></name></expr></argument>, <argument pos:start="27:116" pos:end="27:122"><expr pos:start="27:116" pos:end="27:122"><name pos:start="27:116" pos:end="27:122"><name pos:start="27:116" pos:end="27:116">s</name><operator pos:start="27:117" pos:end="27:118">-&gt;</operator><name pos:start="27:119" pos:end="27:122">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="55:5"><if pos:start="37:5" pos:end="55:5">if<condition pos:start="37:7" pos:end="37:52">(<expr pos:start="37:8" pos:end="37:51"><operator pos:start="37:8" pos:end="37:8">(</operator><name pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:9">h</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:33">left_samples_available</name></name><operator pos:start="37:34" pos:end="37:34">&amp;</operator><literal type="number" pos:start="37:35" pos:end="37:40">0x8080</literal><operator pos:start="37:41" pos:end="37:41">)</operator> <operator pos:start="37:43" pos:end="37:44">!=</operator> <literal type="number" pos:start="37:46" pos:end="37:51">0x8080</literal></expr>)</condition><block pos:start="37:53" pos:end="55:5">{<block_content pos:start="39:9" pos:end="53:9">

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:12">mode</name><operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:26"><name pos:start="39:15" pos:end="39:18">left</name><index pos:start="39:19" pos:end="39:26">[ <expr pos:start="39:21" pos:end="39:24"><name pos:start="39:21" pos:end="39:24">mode</name></expr> ]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if<condition pos:start="41:11" pos:end="41:44">(<expr pos:start="41:12" pos:end="41:43"><name pos:start="41:12" pos:end="41:36"><name pos:start="41:12" pos:end="41:12">h</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:36">left_samples_available</name></name><operator pos:start="41:37" pos:end="41:37">&amp;</operator><literal type="number" pos:start="41:38" pos:end="41:43">0x8080</literal></expr>)</condition><block pos:start="41:45" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:112"> <comment type="line" pos:start="41:47" pos:end="41:104">//mad cow disease mode, aka MBAFF + constrained_intra_pred</comment>

            <expr_stmt pos:start="43:13" pos:end="43:112"><expr pos:start="43:13" pos:end="43:111"><name pos:start="43:13" pos:end="43:16">mode</name><operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:42">ALZHEIMER_DC_L0T_PRED8x8</name> <operator pos:start="43:44" pos:end="43:44">+</operator> <operator pos:start="43:46" pos:end="43:46">(</operator><operator pos:start="43:47" pos:end="43:47">!</operator><operator pos:start="43:48" pos:end="43:48">(</operator><name pos:start="43:49" pos:end="43:73"><name pos:start="43:49" pos:end="43:49">h</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:73">left_samples_available</name></name><operator pos:start="43:74" pos:end="43:74">&amp;</operator><literal type="number" pos:start="43:75" pos:end="43:80">0x8000</literal><operator pos:start="43:81" pos:end="43:81">)</operator><operator pos:start="43:82" pos:end="43:82">)</operator> <operator pos:start="43:84" pos:end="43:84">+</operator> <literal type="number" pos:start="43:86" pos:end="43:86">2</literal><operator pos:start="43:87" pos:end="43:87">*</operator><operator pos:start="43:88" pos:end="43:88">(</operator><name pos:start="43:89" pos:end="43:92">mode</name> <operator pos:start="43:94" pos:end="43:95">==</operator> <name pos:start="43:97" pos:end="43:110">DC_128_PRED8x8</name><operator pos:start="43:111" pos:end="43:111">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if<condition pos:start="47:11" pos:end="47:18">(<expr pos:start="47:12" pos:end="47:17"><name pos:start="47:12" pos:end="47:15">mode</name><operator pos:start="47:16" pos:end="47:16">&lt;</operator><literal type="number" pos:start="47:17" pos:end="47:17">0</literal></expr>)</condition><block pos:start="47:19" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:22">

            <expr_stmt pos:start="49:13" pos:end="49:125"><expr pos:start="49:13" pos:end="49:124"><call pos:start="49:13" pos:end="49:124"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:124">(<argument pos:start="49:20" pos:end="49:29"><expr pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:29"><name pos:start="49:20" pos:end="49:20">h</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:29">avctx</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:46" pos:end="49:105"><expr pos:start="49:46" pos:end="49:105"><literal type="string" pos:start="49:46" pos:end="49:105">"left block unavailable for requested intra mode at %d %d\n"</literal></expr></argument>, <argument pos:start="49:108" pos:end="49:114"><expr pos:start="49:108" pos:end="49:114"><name pos:start="49:108" pos:end="49:114"><name pos:start="49:108" pos:end="49:108">s</name><operator pos:start="49:109" pos:end="49:110">-&gt;</operator><name pos:start="49:111" pos:end="49:114">mb_x</name></name></expr></argument>, <argument pos:start="49:117" pos:end="49:123"><expr pos:start="49:117" pos:end="49:123"><name pos:start="49:117" pos:end="49:123"><name pos:start="49:117" pos:end="49:117">s</name><operator pos:start="49:118" pos:end="49:119">-&gt;</operator><name pos:start="49:120" pos:end="49:123">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:16">return <expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">mode</name></expr>;</return>

</block_content>}</block></function>
</unit>
