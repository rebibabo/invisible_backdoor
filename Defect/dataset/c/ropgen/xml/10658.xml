<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10658.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h261_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:56">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">void</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">data</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:55">data_size</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:41"><decl pos:start="5:30" pos:end="5:41"><type pos:start="5:30" pos:end="5:41"><name pos:start="5:30" pos:end="5:36">uint8_t</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:41">buf</name></decl></parameter>, <parameter pos:start="5:44" pos:end="5:55"><decl pos:start="5:44" pos:end="5:55"><type pos:start="5:44" pos:end="5:55"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:55">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="187:1">{<block_content pos:start="9:5" pos:end="185:43">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">H261Context</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">h</name><init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:29">= <expr pos:start="11:25" pos:end="11:29"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:26">h</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">pict</name> <init pos:start="15:19" pos:end="15:24">= <expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">data</name></expr></init></decl>;</decl_stmt>



<cpp:ifdef pos:start="19:1" pos:end="19:12">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="21:5" pos:end="21:69"><expr pos:start="21:5" pos:end="21:68"><call pos:start="21:5" pos:end="21:68"><name pos:start="21:5" pos:end="21:10">printf</name><argument_list pos:start="21:11" pos:end="21:68">(<argument pos:start="21:12" pos:end="21:36"><expr pos:start="21:12" pos:end="21:36"><literal type="string" pos:start="21:12" pos:end="21:36">"*****frame %d size=%d\n"</literal></expr></argument>, <argument pos:start="21:39" pos:end="21:57"><expr pos:start="21:39" pos:end="21:57"><name pos:start="21:39" pos:end="21:57"><name pos:start="21:39" pos:end="21:43">avctx</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:57">frame_number</name></name></expr></argument>, <argument pos:start="21:60" pos:end="21:67"><expr pos:start="21:60" pos:end="21:67"><name pos:start="21:60" pos:end="21:67">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:65"><call pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:10">printf</name><argument_list pos:start="23:11" pos:end="23:65">(<argument pos:start="23:12" pos:end="23:32"><expr pos:start="23:12" pos:end="23:32"><literal type="string" pos:start="23:12" pos:end="23:32">"bytes=%x %x %x %x\n"</literal></expr></argument>, <argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:40"><name pos:start="23:35" pos:end="23:37">buf</name><index pos:start="23:38" pos:end="23:40">[<expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:45">buf</name><index pos:start="23:46" pos:end="23:48">[<expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:51" pos:end="23:56"><expr pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:53">buf</name><index pos:start="23:54" pos:end="23:56">[<expr pos:start="23:55" pos:end="23:55"><literal type="number" pos:start="23:55" pos:end="23:55">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="23:59" pos:end="23:64"><expr pos:start="23:59" pos:end="23:64"><name pos:start="23:59" pos:end="23:64"><name pos:start="23:59" pos:end="23:61">buf</name><index pos:start="23:62" pos:end="23:64">[<expr pos:start="23:63" pos:end="23:63"><literal type="number" pos:start="23:63" pos:end="23:63">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">flags</name></name><operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:19">avctx</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:26">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:13"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:13">flags2</name></name><operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:20">avctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:28">flags2</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:22">(<expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:16">buf_size</name> <operator pos:start="35:18" pos:end="35:19">==</operator> <literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>)</condition> <block pos:start="35:24" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:5">h</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:29">gob_start_code_skipped</name></name><operator pos:start="43:30" pos:end="43:30">=</operator><literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr>;</expr_stmt>



<label pos:start="47:1" pos:end="47:6"><name pos:start="47:1" pos:end="47:5">retry</name>:</label>



    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><call pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:17">init_get_bits</name><argument_list pos:start="51:18" pos:end="51:42">(<argument pos:start="51:19" pos:end="51:24"><expr pos:start="51:19" pos:end="51:24"><operator pos:start="51:19" pos:end="51:19">&amp;</operator><name pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:20">s</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:24">gb</name></name></expr></argument>, <argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">buf</name></expr></argument>, <argument pos:start="51:32" pos:end="51:41"><expr pos:start="51:32" pos:end="51:41"><name pos:start="51:32" pos:end="51:39">buf_size</name><operator pos:start="51:40" pos:end="51:40">*</operator><literal type="number" pos:start="51:41" pos:end="51:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if<condition pos:start="55:7" pos:end="55:31">(<expr pos:start="55:8" pos:end="55:30"><operator pos:start="55:8" pos:end="55:8">!</operator><name pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:30">context_initialized</name></name></expr>)</condition><block pos:start="55:32" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:22">

        <if_stmt pos:start="57:9" pos:end="59:22"><if pos:start="57:9" pos:end="59:22">if <condition pos:start="57:12" pos:end="57:35">(<expr pos:start="57:13" pos:end="57:34"><call pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:27">MPV_common_init</name><argument_list pos:start="57:28" pos:end="57:30">(<argument pos:start="57:29" pos:end="57:29"><expr pos:start="57:29" pos:end="57:29"><name pos:start="57:29" pos:end="57:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="57:32" pos:end="57:32">&lt;</operator> <literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:22"><block_content pos:start="59:13" pos:end="59:22"> <comment type="line" pos:start="57:37" pos:end="57:93">//we need the idct permutaton for reading a custom matrix</comment>

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:108">//we need to set current_picture_ptr before reading the header, otherwise we cant store anyting im there</comment>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if<condition pos:start="67:7" pos:end="67:71">(<expr pos:start="67:8" pos:end="67:70"><name pos:start="67:8" pos:end="67:29"><name pos:start="67:8" pos:end="67:8">s</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:29">current_picture_ptr</name></name><operator pos:start="67:30" pos:end="67:31">==</operator><name pos:start="67:32" pos:end="67:35">NULL</name> <operator pos:start="67:37" pos:end="67:38">||</operator> <name pos:start="67:40" pos:end="67:70"><name pos:start="67:40" pos:end="67:40">s</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:61">current_picture_ptr</name><operator pos:start="67:62" pos:end="67:63">-&gt;</operator><name pos:start="67:64" pos:end="67:67">data</name><index pos:start="67:68" pos:end="67:70">[<expr pos:start="67:69" pos:end="67:69"><literal type="number" pos:start="67:69" pos:end="67:69">0</literal></expr>]</index></name></expr>)</condition><block pos:start="67:72" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:47">

        <decl_stmt pos:start="69:9" pos:end="69:44"><decl pos:start="69:9" pos:end="69:43"><type pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">int</name></type> <name pos:start="69:13" pos:end="69:13">i</name><init pos:start="69:14" pos:end="69:43">= <expr pos:start="69:16" pos:end="69:43"><call pos:start="69:16" pos:end="69:43"><name pos:start="69:16" pos:end="69:37">ff_find_unused_picture</name><argument_list pos:start="69:38" pos:end="69:43">(<argument pos:start="69:39" pos:end="69:39"><expr pos:start="69:39" pos:end="69:39"><name pos:start="69:39" pos:end="69:39">s</name></expr></argument>, <argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:30">current_picture_ptr</name></name><operator pos:start="71:31" pos:end="71:31">=</operator> <operator pos:start="71:33" pos:end="71:33">&amp;</operator><name pos:start="71:34" pos:end="71:46"><name pos:start="71:34" pos:end="71:34">s</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:43">picture</name><index pos:start="71:44" pos:end="71:46">[<expr pos:start="71:45" pos:end="71:45"><name pos:start="71:45" pos:end="71:45">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:40"><expr pos:start="77:5" pos:end="77:39"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:39"><name pos:start="77:11" pos:end="77:36">h261_decode_picture_header</name><argument_list pos:start="77:37" pos:end="77:39">(<argument pos:start="77:38" pos:end="77:38"><expr pos:start="77:38" pos:end="77:38"><name pos:start="77:38" pos:end="77:38">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:41">/* skip if the header was thrashed */</comment>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:16">(<expr pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">&lt;</operator> <literal type="number" pos:start="83:15" pos:end="83:15">0</literal></expr>)</condition><block pos:start="83:17" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:18">

        <expr_stmt pos:start="85:9" pos:end="85:59"><expr pos:start="85:9" pos:end="85:58"><call pos:start="85:9" pos:end="85:58"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:58">(<argument pos:start="85:16" pos:end="85:23"><expr pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:23"><name pos:start="85:16" pos:end="85:16">s</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:23">avctx</name></name></expr></argument>, <argument pos:start="85:26" pos:end="85:37"><expr pos:start="85:26" pos:end="85:37"><name pos:start="85:26" pos:end="85:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:40" pos:end="85:57"><expr pos:start="85:40" pos:end="85:57"><literal type="string" pos:start="85:40" pos:end="85:57">"header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:18">return <expr pos:start="87:16" pos:end="87:17"><operator pos:start="87:16" pos:end="87:16">-</operator><literal type="number" pos:start="87:17" pos:end="87:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="103:5"><if pos:start="93:5" pos:end="103:5">if <condition pos:start="93:8" pos:end="93:75">(<expr pos:start="93:9" pos:end="93:74"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">width</name></name> <operator pos:start="93:18" pos:end="93:19">!=</operator> <name pos:start="93:21" pos:end="93:38"><name pos:start="93:21" pos:end="93:25">avctx</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:38">coded_width</name></name> <operator pos:start="93:40" pos:end="93:41">||</operator> <name pos:start="93:43" pos:end="93:51"><name pos:start="93:43" pos:end="93:43">s</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:51">height</name></name> <operator pos:start="93:53" pos:end="93:54">!=</operator> <name pos:start="93:56" pos:end="93:74"><name pos:start="93:56" pos:end="93:60">avctx</name><operator pos:start="93:61" pos:end="93:62">-&gt;</operator><name pos:start="93:63" pos:end="93:74">coded_height</name></name></expr>)</condition><block pos:start="93:76" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:29">

        <decl_stmt pos:start="95:9" pos:end="95:42"><decl pos:start="95:9" pos:end="95:41"><type pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:20">ParseContext</name></type> <name pos:start="95:22" pos:end="95:23">pc</name><init pos:start="95:24" pos:end="95:41">= <expr pos:start="95:26" pos:end="95:41"><name pos:start="95:26" pos:end="95:41"><name pos:start="95:26" pos:end="95:26">s</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:41">parse_context</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="95:44" pos:end="95:86">//FIXME move these demuxng hack to avformat</comment>

        <expr_stmt pos:start="97:9" pos:end="97:34"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:31"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:24">parse_context</name><operator pos:start="97:25" pos:end="97:25">.</operator><name pos:start="97:26" pos:end="97:31">buffer</name></name><operator pos:start="97:32" pos:end="97:32">=</operator><literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><call pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:22">MPV_common_end</name><argument_list pos:start="99:23" pos:end="99:25">(<argument pos:start="99:24" pos:end="99:24"><expr pos:start="99:24" pos:end="99:24"><name pos:start="99:24" pos:end="99:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:24">parse_context</name></name><operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:28">pc</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:32">(<expr pos:start="105:9" pos:end="105:31"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:31"><name pos:start="105:10" pos:end="105:10">s</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:31">context_initialized</name></name></expr>)</condition> <block pos:start="105:34" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:19">

        <expr_stmt pos:start="107:9" pos:end="107:59"><expr pos:start="107:9" pos:end="107:58"><call pos:start="107:9" pos:end="107:58"><name pos:start="107:9" pos:end="107:30">avcodec_set_dimensions</name><argument_list pos:start="107:31" pos:end="107:58">(<argument pos:start="107:32" pos:end="107:36"><expr pos:start="107:32" pos:end="107:36"><name pos:start="107:32" pos:end="107:36">avctx</name></expr></argument>, <argument pos:start="107:39" pos:end="107:46"><expr pos:start="107:39" pos:end="107:46"><name pos:start="107:39" pos:end="107:46"><name pos:start="107:39" pos:end="107:39">s</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:46">width</name></name></expr></argument>, <argument pos:start="107:49" pos:end="107:57"><expr pos:start="107:49" pos:end="107:57"><name pos:start="107:49" pos:end="107:57"><name pos:start="107:49" pos:end="107:49">s</name><operator pos:start="107:50" pos:end="107:51">-&gt;</operator><name pos:start="107:52" pos:end="107:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <goto pos:start="111:9" pos:end="111:19">goto <name pos:start="111:14" pos:end="111:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="117:5" pos:end="117:22">// for hurry_up==5</comment>

    <expr_stmt pos:start="119:5" pos:end="119:47"><expr pos:start="119:5" pos:end="119:46"><name pos:start="119:5" pos:end="119:32"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:22">current_picture</name><operator pos:start="119:23" pos:end="119:23">.</operator><name pos:start="119:24" pos:end="119:32">pict_type</name></name><operator pos:start="119:33" pos:end="119:33">=</operator> <name pos:start="119:35" pos:end="119:46"><name pos:start="119:35" pos:end="119:35">s</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:46">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:57"><expr pos:start="121:5" pos:end="121:56"><name pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:22">current_picture</name><operator pos:start="121:23" pos:end="121:23">.</operator><name pos:start="121:24" pos:end="121:32">key_frame</name></name><operator pos:start="121:33" pos:end="121:33">=</operator> <name pos:start="121:35" pos:end="121:46"><name pos:start="121:35" pos:end="121:35">s</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:46">pict_type</name></name> <operator pos:start="121:48" pos:end="121:49">==</operator> <name pos:start="121:51" pos:end="121:56">I_TYPE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:49">/* skip everything if we are in a hurry&gt;=5 */</comment>

    <if_stmt pos:start="127:5" pos:end="127:66"><if pos:start="127:5" pos:end="127:66">if<condition pos:start="127:7" pos:end="127:26">(<expr pos:start="127:8" pos:end="127:25"><name pos:start="127:8" pos:end="127:22"><name pos:start="127:8" pos:end="127:12">avctx</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:22">hurry_up</name></name><operator pos:start="127:23" pos:end="127:24">&gt;=</operator><literal type="number" pos:start="127:25" pos:end="127:25">5</literal></expr>)</condition><block type="pseudo" pos:start="127:28" pos:end="127:66"><block_content pos:start="127:28" pos:end="127:66"> <return pos:start="127:28" pos:end="127:66">return <expr pos:start="127:35" pos:end="127:65"><call pos:start="127:35" pos:end="127:65"><name pos:start="127:35" pos:end="127:52">get_consumed_bytes</name><argument_list pos:start="127:53" pos:end="127:65">(<argument pos:start="127:54" pos:end="127:54"><expr pos:start="127:54" pos:end="127:54"><name pos:start="127:54" pos:end="127:54">s</name></expr></argument>, <argument pos:start="127:57" pos:end="127:64"><expr pos:start="127:57" pos:end="127:64"><name pos:start="127:57" pos:end="127:64">buf_size</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="131:5" pos:end="133:18"><if pos:start="131:5" pos:end="133:18">if<condition pos:start="131:7" pos:end="131:37">(<expr pos:start="131:8" pos:end="131:36"><call pos:start="131:8" pos:end="131:32"><name pos:start="131:8" pos:end="131:22">MPV_frame_start</name><argument_list pos:start="131:23" pos:end="131:32">(<argument pos:start="131:24" pos:end="131:24"><expr pos:start="131:24" pos:end="131:24"><name pos:start="131:24" pos:end="131:24">s</name></expr></argument>, <argument pos:start="131:27" pos:end="131:31"><expr pos:start="131:27" pos:end="131:31"><name pos:start="131:27" pos:end="131:31">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="131:34" pos:end="131:34">&lt;</operator> <literal type="number" pos:start="131:36" pos:end="131:36">0</literal></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:18"><block_content pos:start="133:9" pos:end="133:18">

        <return pos:start="133:9" pos:end="133:18">return <expr pos:start="133:16" pos:end="133:17"><operator pos:start="133:16" pos:end="133:16">-</operator><literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:25"><expr pos:start="137:5" pos:end="137:24"><call pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:21">ff_er_frame_start</name><argument_list pos:start="137:22" pos:end="137:24">(<argument pos:start="137:23" pos:end="137:23"><expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:32">/* decode each macroblock */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:14"><expr pos:start="143:5" pos:end="143:13"><name pos:start="143:5" pos:end="143:11"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:11">mb_x</name></name><operator pos:start="143:12" pos:end="143:12">=</operator><literal type="number" pos:start="143:13" pos:end="143:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:14"><expr pos:start="145:5" pos:end="145:13"><name pos:start="145:5" pos:end="145:11"><name pos:start="145:5" pos:end="145:5">s</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:11">mb_y</name></name><operator pos:start="145:12" pos:end="145:12">=</operator><literal type="number" pos:start="145:13" pos:end="145:13">0</literal></expr>;</expr_stmt>



    <while pos:start="149:5" pos:end="157:5">while<condition pos:start="149:10" pos:end="149:54">(<expr pos:start="149:11" pos:end="149:53"><name pos:start="149:11" pos:end="149:23"><name pos:start="149:11" pos:end="149:11">h</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:23">gob_number</name></name> <operator pos:start="149:25" pos:end="149:25">&lt;</operator> <operator pos:start="149:27" pos:end="149:27">(</operator><ternary pos:start="149:28" pos:end="149:52"><condition pos:start="149:28" pos:end="149:45"><expr pos:start="149:28" pos:end="149:43"><name pos:start="149:28" pos:end="149:39"><name pos:start="149:28" pos:end="149:28">s</name><operator pos:start="149:29" pos:end="149:30">-&gt;</operator><name pos:start="149:31" pos:end="149:39">mb_height</name></name><operator pos:start="149:40" pos:end="149:41">==</operator><literal type="number" pos:start="149:42" pos:end="149:43">18</literal></expr> ?</condition><then pos:start="149:47" pos:end="149:48"> <expr pos:start="149:47" pos:end="149:48"><literal type="number" pos:start="149:47" pos:end="149:48">12</literal></expr> </then><else pos:start="149:50" pos:end="149:52">: <expr pos:start="149:52" pos:end="149:52"><literal type="number" pos:start="149:52" pos:end="149:52">5</literal></expr></else></ternary><operator pos:start="149:53" pos:end="149:53">)</operator></expr>)</condition><block pos:start="149:55" pos:end="157:5">{<block_content pos:start="151:9" pos:end="155:27">

        <if_stmt pos:start="151:9" pos:end="153:18"><if pos:start="151:9" pos:end="153:18">if<condition pos:start="151:11" pos:end="151:31">(<expr pos:start="151:12" pos:end="151:30"><call pos:start="151:12" pos:end="151:28"><name pos:start="151:12" pos:end="151:25">ff_h261_resync</name><argument_list pos:start="151:26" pos:end="151:28">(<argument pos:start="151:27" pos:end="151:27"><expr pos:start="151:27" pos:end="151:27"><name pos:start="151:27" pos:end="151:27">h</name></expr></argument>)</argument_list></call><operator pos:start="151:29" pos:end="151:29">&lt;</operator><literal type="number" pos:start="151:30" pos:end="151:30">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:18"><block_content pos:start="153:13" pos:end="153:18">

            <break pos:start="153:13" pos:end="153:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:27"><expr pos:start="155:9" pos:end="155:26"><call pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:23">h261_decode_gob</name><argument_list pos:start="155:24" pos:end="155:26">(<argument pos:start="155:25" pos:end="155:25"><expr pos:start="155:25" pos:end="155:25"><name pos:start="155:25" pos:end="155:25">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="159:5" pos:end="159:21"><expr pos:start="159:5" pos:end="159:20"><call pos:start="159:5" pos:end="159:20"><name pos:start="159:5" pos:end="159:17">MPV_frame_end</name><argument_list pos:start="159:18" pos:end="159:20">(<argument pos:start="159:19" pos:end="159:19"><expr pos:start="159:19" pos:end="159:19"><name pos:start="159:19" pos:end="159:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt pos:start="163:1" pos:end="163:74"><expr pos:start="163:1" pos:end="163:73"><call pos:start="163:1" pos:end="163:73"><name pos:start="163:1" pos:end="163:6">assert</name><argument_list pos:start="163:7" pos:end="163:73">(<argument pos:start="163:8" pos:end="163:72"><expr pos:start="163:8" pos:end="163:72"><name pos:start="163:8" pos:end="163:35"><name pos:start="163:8" pos:end="163:8">s</name><operator pos:start="163:9" pos:end="163:10">-&gt;</operator><name pos:start="163:11" pos:end="163:25">current_picture</name><operator pos:start="163:26" pos:end="163:26">.</operator><name pos:start="163:27" pos:end="163:35">pict_type</name></name> <operator pos:start="163:37" pos:end="163:38">==</operator> <name pos:start="163:40" pos:end="163:72"><name pos:start="163:40" pos:end="163:40">s</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:61">current_picture_ptr</name><operator pos:start="163:62" pos:end="163:63">-&gt;</operator><name pos:start="163:64" pos:end="163:72">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt pos:start="165:1" pos:end="165:53"><expr pos:start="165:1" pos:end="165:52"><call pos:start="165:1" pos:end="165:52"><name pos:start="165:1" pos:end="165:6">assert</name><argument_list pos:start="165:7" pos:end="165:52">(<argument pos:start="165:8" pos:end="165:51"><expr pos:start="165:8" pos:end="165:51"><name pos:start="165:8" pos:end="165:35"><name pos:start="165:8" pos:end="165:8">s</name><operator pos:start="165:9" pos:end="165:10">-&gt;</operator><name pos:start="165:11" pos:end="165:25">current_picture</name><operator pos:start="165:26" pos:end="165:26">.</operator><name pos:start="165:27" pos:end="165:35">pict_type</name></name> <operator pos:start="165:37" pos:end="165:38">==</operator> <name pos:start="165:40" pos:end="165:51"><name pos:start="165:40" pos:end="165:40">s</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:51">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:45"><expr pos:start="167:5" pos:end="167:44"><operator pos:start="167:5" pos:end="167:5">*</operator><name pos:start="167:6" pos:end="167:9">pict</name><operator pos:start="167:10" pos:end="167:10">=</operator> <operator pos:start="167:12" pos:end="167:12">*</operator><operator pos:start="167:13" pos:end="167:13">(</operator><name pos:start="167:14" pos:end="167:20">AVFrame</name><operator pos:start="167:21" pos:end="167:21">*</operator><operator pos:start="167:22" pos:end="167:22">)</operator><name pos:start="167:23" pos:end="167:44"><name pos:start="167:23" pos:end="167:23">s</name><operator pos:start="167:24" pos:end="167:25">-&gt;</operator><name pos:start="167:26" pos:end="167:44">current_picture_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:33"><expr pos:start="169:5" pos:end="169:32"><call pos:start="169:5" pos:end="169:32"><name pos:start="169:5" pos:end="169:23">ff_print_debug_info</name><argument_list pos:start="169:24" pos:end="169:32">(<argument pos:start="169:25" pos:end="169:25"><expr pos:start="169:25" pos:end="169:25"><name pos:start="169:25" pos:end="169:25">s</name></expr></argument>, <argument pos:start="169:28" pos:end="169:31"><expr pos:start="169:28" pos:end="169:31"><name pos:start="169:28" pos:end="169:31">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:58">/* Return the Picture timestamp as the frame number */</comment>

    <comment type="block" pos:start="175:5" pos:end="175:58">/* we substract 1 because it is added on utils.c    */</comment>

    <expr_stmt pos:start="177:5" pos:end="177:48"><expr pos:start="177:5" pos:end="177:47"><name pos:start="177:5" pos:end="177:23"><name pos:start="177:5" pos:end="177:9">avctx</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:23">frame_number</name></name> <operator pos:start="177:25" pos:end="177:25">=</operator> <name pos:start="177:27" pos:end="177:43"><name pos:start="177:27" pos:end="177:27">s</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:43">picture_number</name></name> <operator pos:start="177:45" pos:end="177:45">-</operator> <literal type="number" pos:start="177:47" pos:end="177:47">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:33"><expr pos:start="181:5" pos:end="181:32"><operator pos:start="181:5" pos:end="181:5">*</operator><name pos:start="181:6" pos:end="181:14">data_size</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <sizeof pos:start="181:18" pos:end="181:32">sizeof<argument_list pos:start="181:24" pos:end="181:32">(<argument pos:start="181:25" pos:end="181:31"><expr pos:start="181:25" pos:end="181:31"><name pos:start="181:25" pos:end="181:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="185:5" pos:end="185:43">return <expr pos:start="185:12" pos:end="185:42"><call pos:start="185:12" pos:end="185:42"><name pos:start="185:12" pos:end="185:29">get_consumed_bytes</name><argument_list pos:start="185:30" pos:end="185:42">(<argument pos:start="185:31" pos:end="185:31"><expr pos:start="185:31" pos:end="185:31"><name pos:start="185:31" pos:end="185:31">s</name></expr></argument>, <argument pos:start="185:34" pos:end="185:41"><expr pos:start="185:34" pos:end="185:41"><name pos:start="185:34" pos:end="185:41">buf_size</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
