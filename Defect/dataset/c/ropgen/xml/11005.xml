<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11005.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:29"><name pos:start="1:1" pos:end="1:10">START_TEST</name><argument_list pos:start="1:11" pos:end="1:29">(<argument pos:start="1:12" pos:end="1:28">simple_whitespace</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <struct pos:start="7:5" pos:end="87:6">struct <block pos:start="7:12" pos:end="13:5">{

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">encoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:31"><decl pos:start="11:9" pos:end="11:30"><type pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:22">LiteralQObject</name></type> <name pos:start="11:24" pos:end="11:30">decoded</name></decl>;</decl_stmt>

    }</block> <decl pos:start="13:7" pos:end="87:5"><name pos:start="13:7" pos:end="13:18"><name pos:start="13:7" pos:end="13:16">test_cases</name><index pos:start="13:17" pos:end="13:18">[]</index></name> <init pos:start="13:20" pos:end="87:5">= <expr pos:start="13:22" pos:end="87:5"><block pos:start="13:22" pos:end="87:5">{

        <expr pos:start="15:9" pos:end="29:9"><block pos:start="15:9" pos:end="29:9">{

            <expr pos:start="17:13" pos:end="17:37"><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:20">encoded</name> <operator pos:start="17:22" pos:end="17:22">=</operator> <literal type="string" pos:start="17:24" pos:end="17:37">" [ 43 , 42 ]"</literal></expr>,

            <expr pos:start="19:13" pos:end="27:23"><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:20">decoded</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <macro pos:start="19:24" pos:end="27:23"><name pos:start="19:24" pos:end="19:33">QLIT_QLIST</name><argument_list pos:start="19:34" pos:end="27:23">(<argument pos:start="19:35" pos:end="27:22">((LiteralQObject[]){

                        QLIT_QINT(<literal type="number" pos:start="21:35" pos:end="21:36">43</literal>),

                        QLIT_QINT(<literal type="number" pos:start="23:35" pos:end="23:36">42</literal>),

                        { }

                    })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="31:9" pos:end="55:9"><block pos:start="31:9" pos:end="55:9">{

            <expr pos:start="33:13" pos:end="33:57"><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:20">encoded</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <literal type="string" pos:start="33:24" pos:end="33:57">" [ 43 , { 'h' : 'b' }, [ ], 42 ]"</literal></expr>,

            <expr pos:start="35:13" pos:end="53:23"><operator pos:start="35:13" pos:end="35:13">.</operator><name pos:start="35:14" pos:end="35:20">decoded</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <macro pos:start="35:24" pos:end="53:23"><name pos:start="35:24" pos:end="35:33">QLIT_QLIST</name><argument_list pos:start="35:34" pos:end="53:23">(<argument pos:start="35:35" pos:end="53:22">((LiteralQObject[]){

                        QLIT_QINT(<literal type="number" pos:start="37:35" pos:end="37:36">43</literal>),

                        QLIT_QDICT(((LiteralQDictEntry[]){

                                    { <literal type="string" pos:start="41:39" pos:end="41:41">"h"</literal>, QLIT_QSTR(<literal type="string" pos:start="41:54" pos:end="41:56">"b"</literal>) },

                                    { }})),

                        QLIT_QLIST(((LiteralQObject[]){

                                    { }})),

                        QLIT_QINT(<literal type="number" pos:start="49:35" pos:end="49:36">42</literal>),

                        { }

                    })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="57:9" pos:end="83:9"><block pos:start="57:9" pos:end="83:9">{

            <expr pos:start="59:13" pos:end="59:68"><operator pos:start="59:13" pos:end="59:13">.</operator><name pos:start="59:14" pos:end="59:20">encoded</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="string" pos:start="59:24" pos:end="59:68">" [ 43 , { 'h' : 'b' , 'a' : 32 }, [ ], 42 ]"</literal></expr>,

            <expr pos:start="61:13" pos:end="81:23"><operator pos:start="61:13" pos:end="61:13">.</operator><name pos:start="61:14" pos:end="61:20">decoded</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <macro pos:start="61:24" pos:end="81:23"><name pos:start="61:24" pos:end="61:33">QLIT_QLIST</name><argument_list pos:start="61:34" pos:end="81:23">(<argument pos:start="61:35" pos:end="81:22">((LiteralQObject[]){

                        QLIT_QINT(<literal type="number" pos:start="63:35" pos:end="63:36">43</literal>),

                        QLIT_QDICT(((LiteralQDictEntry[]){

                                    { <literal type="string" pos:start="67:39" pos:end="67:41">"h"</literal>, QLIT_QSTR(<literal type="string" pos:start="67:54" pos:end="67:56">"b"</literal>) },

                                    { <literal type="string" pos:start="69:39" pos:end="69:41">"a"</literal>, QLIT_QINT(<literal type="number" pos:start="69:54" pos:end="69:55">32</literal>) },

                                    { }})),

                        QLIT_QLIST(((LiteralQObject[]){

                                    { }})),

                        QLIT_QINT(<literal type="number" pos:start="77:35" pos:end="77:36">42</literal>),

                        { }

                    })</argument>)</argument_list></macro></expr>,

        }</block></expr>,

        <expr pos:start="85:9" pos:end="85:11"><block pos:start="85:9" pos:end="85:11">{ }</block></expr>

    }</block></expr></init></decl>;</struct>



    <for pos:start="91:5" pos:end="133:5">for <control pos:start="91:9" pos:end="91:43">(<init pos:start="91:10" pos:end="91:15"><expr pos:start="91:10" pos:end="91:14"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>;</init> <condition pos:start="91:17" pos:end="91:38"><expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:26">test_cases</name><index pos:start="91:27" pos:end="91:29">[<expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">i</name></expr>]</index></name><operator pos:start="91:30" pos:end="91:30">.</operator><name pos:start="91:31" pos:end="91:37">encoded</name></expr>;</condition> <incr pos:start="91:40" pos:end="91:42"><expr pos:start="91:40" pos:end="91:42"><name pos:start="91:40" pos:end="91:40">i</name><operator pos:start="91:41" pos:end="91:42">++</operator></expr></incr>)</control> <block pos:start="91:45" pos:end="133:5">{<block_content pos:start="93:9" pos:end="131:21">

        <decl_stmt pos:start="93:9" pos:end="93:21"><decl pos:start="93:9" pos:end="93:20"><type pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:15">QObject</name> <modifier pos:start="93:17" pos:end="93:17">*</modifier></type><name pos:start="93:18" pos:end="93:20">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:21"><decl pos:start="95:9" pos:end="95:20"><type pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:15">QString</name> <modifier pos:start="95:17" pos:end="95:17">*</modifier></type><name pos:start="95:18" pos:end="95:20">str</name></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:55"><expr pos:start="99:9" pos:end="99:54"><name pos:start="99:9" pos:end="99:11">obj</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:54"><name pos:start="99:15" pos:end="99:31">qobject_from_json</name><argument_list pos:start="99:32" pos:end="99:54">(<argument pos:start="99:33" pos:end="99:53"><expr pos:start="99:33" pos:end="99:53"><name pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:42">test_cases</name><index pos:start="99:43" pos:end="99:45">[<expr pos:start="99:44" pos:end="99:44"><name pos:start="99:44" pos:end="99:44">i</name></expr>]</index></name><operator pos:start="99:46" pos:end="99:46">.</operator><name pos:start="99:47" pos:end="99:53">encoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:33"><expr pos:start="101:9" pos:end="101:32"><call pos:start="101:9" pos:end="101:32"><name pos:start="101:9" pos:end="101:19">fail_unless</name><argument_list pos:start="101:20" pos:end="101:32">(<argument pos:start="101:21" pos:end="101:31"><expr pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:23">obj</name> <operator pos:start="101:25" pos:end="101:26">!=</operator> <name pos:start="101:28" pos:end="101:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:54"><expr pos:start="103:9" pos:end="103:53"><call pos:start="103:9" pos:end="103:53"><name pos:start="103:9" pos:end="103:19">fail_unless</name><argument_list pos:start="103:20" pos:end="103:53">(<argument pos:start="103:21" pos:end="103:52"><expr pos:start="103:21" pos:end="103:52"><call pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:32">qobject_type</name><argument_list pos:start="103:33" pos:end="103:37">(<argument pos:start="103:34" pos:end="103:36"><expr pos:start="103:34" pos:end="103:36"><name pos:start="103:34" pos:end="103:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="103:39" pos:end="103:40">==</operator> <name pos:start="103:42" pos:end="103:52">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:79"><expr pos:start="107:9" pos:end="107:78"><call pos:start="107:9" pos:end="107:78"><name pos:start="107:9" pos:end="107:19">fail_unless</name><argument_list pos:start="107:20" pos:end="107:78">(<argument pos:start="107:21" pos:end="107:77"><expr pos:start="107:21" pos:end="107:77"><call pos:start="107:21" pos:end="107:72"><name pos:start="107:21" pos:end="107:43">compare_litqobj_to_qobj</name><argument_list pos:start="107:44" pos:end="107:72">(<argument pos:start="107:45" pos:end="107:66"><expr pos:start="107:45" pos:end="107:66"><operator pos:start="107:45" pos:end="107:45">&amp;</operator><name pos:start="107:46" pos:end="107:58"><name pos:start="107:46" pos:end="107:55">test_cases</name><index pos:start="107:56" pos:end="107:58">[<expr pos:start="107:57" pos:end="107:57"><name pos:start="107:57" pos:end="107:57">i</name></expr>]</index></name><operator pos:start="107:59" pos:end="107:59">.</operator><name pos:start="107:60" pos:end="107:66">decoded</name></expr></argument>, <argument pos:start="107:69" pos:end="107:71"><expr pos:start="107:69" pos:end="107:71"><name pos:start="107:69" pos:end="107:71">obj</name></expr></argument>)</argument_list></call> <operator pos:start="107:74" pos:end="107:75">==</operator> <literal type="number" pos:start="107:77" pos:end="107:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:11">str</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <call pos:start="111:15" pos:end="111:34"><name pos:start="111:15" pos:end="111:29">qobject_to_json</name><argument_list pos:start="111:30" pos:end="111:34">(<argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><call pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:22">qobject_decref</name><argument_list pos:start="113:23" pos:end="113:27">(<argument pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:26">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:54"><expr pos:start="117:9" pos:end="117:53"><name pos:start="117:9" pos:end="117:11">obj</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:53"><name pos:start="117:15" pos:end="117:31">qobject_from_json</name><argument_list pos:start="117:32" pos:end="117:53">(<argument pos:start="117:33" pos:end="117:52"><expr pos:start="117:33" pos:end="117:52"><call pos:start="117:33" pos:end="117:52"><name pos:start="117:33" pos:end="117:47">qstring_get_str</name><argument_list pos:start="117:48" pos:end="117:52">(<argument pos:start="117:49" pos:end="117:51"><expr pos:start="117:49" pos:end="117:51"><name pos:start="117:49" pos:end="117:51">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><call pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:19">fail_unless</name><argument_list pos:start="119:20" pos:end="119:32">(<argument pos:start="119:21" pos:end="119:31"><expr pos:start="119:21" pos:end="119:31"><name pos:start="119:21" pos:end="119:23">obj</name> <operator pos:start="119:25" pos:end="119:26">!=</operator> <name pos:start="119:28" pos:end="119:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:54"><expr pos:start="121:9" pos:end="121:53"><call pos:start="121:9" pos:end="121:53"><name pos:start="121:9" pos:end="121:19">fail_unless</name><argument_list pos:start="121:20" pos:end="121:53">(<argument pos:start="121:21" pos:end="121:52"><expr pos:start="121:21" pos:end="121:52"><call pos:start="121:21" pos:end="121:37"><name pos:start="121:21" pos:end="121:32">qobject_type</name><argument_list pos:start="121:33" pos:end="121:37">(<argument pos:start="121:34" pos:end="121:36"><expr pos:start="121:34" pos:end="121:36"><name pos:start="121:34" pos:end="121:36">obj</name></expr></argument>)</argument_list></call> <operator pos:start="121:39" pos:end="121:40">==</operator> <name pos:start="121:42" pos:end="121:52">QTYPE_QLIST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:79"><expr pos:start="125:9" pos:end="125:78"><call pos:start="125:9" pos:end="125:78"><name pos:start="125:9" pos:end="125:19">fail_unless</name><argument_list pos:start="125:20" pos:end="125:78">(<argument pos:start="125:21" pos:end="125:77"><expr pos:start="125:21" pos:end="125:77"><call pos:start="125:21" pos:end="125:72"><name pos:start="125:21" pos:end="125:43">compare_litqobj_to_qobj</name><argument_list pos:start="125:44" pos:end="125:72">(<argument pos:start="125:45" pos:end="125:66"><expr pos:start="125:45" pos:end="125:66"><operator pos:start="125:45" pos:end="125:45">&amp;</operator><name pos:start="125:46" pos:end="125:58"><name pos:start="125:46" pos:end="125:55">test_cases</name><index pos:start="125:56" pos:end="125:58">[<expr pos:start="125:57" pos:end="125:57"><name pos:start="125:57" pos:end="125:57">i</name></expr>]</index></name><operator pos:start="125:59" pos:end="125:59">.</operator><name pos:start="125:60" pos:end="125:66">decoded</name></expr></argument>, <argument pos:start="125:69" pos:end="125:71"><expr pos:start="125:69" pos:end="125:71"><name pos:start="125:69" pos:end="125:71">obj</name></expr></argument>)</argument_list></call> <operator pos:start="125:74" pos:end="125:75">==</operator> <literal type="number" pos:start="125:77" pos:end="125:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:28"><expr pos:start="129:9" pos:end="129:27"><call pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:22">qobject_decref</name><argument_list pos:start="129:23" pos:end="129:27">(<argument pos:start="129:24" pos:end="129:26"><expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:21"><expr pos:start="131:9" pos:end="131:20"><call pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:15">QDECREF</name><argument_list pos:start="131:16" pos:end="131:20">(<argument pos:start="131:17" pos:end="131:19"><expr pos:start="131:17" pos:end="131:19"><name pos:start="131:17" pos:end="131:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
