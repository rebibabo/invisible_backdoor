<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19787.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mjpeg_decode_scan</name><parameter_list pos:start="1:29" pos:end="5:54">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:69">nb_components</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:77"><decl pos:start="1:72" pos:end="1:77"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:77">Ah</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:35"><decl pos:start="3:30" pos:end="3:35"><type pos:start="3:30" pos:end="3:35"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:35">Al</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:62"><decl pos:start="3:38" pos:end="3:62"><type pos:start="3:38" pos:end="3:62"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:50">uint8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:62">mb_bitmask</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:53"><decl pos:start="5:30" pos:end="5:53"><type pos:start="5:30" pos:end="5:53"><specifier pos:start="5:30" pos:end="5:34">const</specifier> <name pos:start="5:36" pos:end="5:42">AVFrame</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:53">reference</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="203:1">{<block_content pos:start="9:5" pos:end="201:13">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:15">mb_x</name></decl>, <decl pos:start="9:18" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:21">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:33"><name pos:start="11:14" pos:end="11:17">data</name><index pos:start="11:18" pos:end="11:33">[<expr pos:start="11:19" pos:end="11:32"><name pos:start="11:19" pos:end="11:32">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:49"><name pos:start="13:20" pos:end="13:33">reference_data</name><index pos:start="13:34" pos:end="13:49">[<expr pos:start="13:35" pos:end="13:48"><name pos:start="13:35" pos:end="13:48">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:16">linesize</name><index pos:start="15:17" pos:end="15:32">[<expr pos:start="15:18" pos:end="15:31"><name pos:start="15:18" pos:end="15:31">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">GetBitContext</name></type> <name pos:start="17:19" pos:end="17:31">mb_bitmask_gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:23">bytes_per_pixel</name> <init pos:start="19:25" pos:end="19:43">= <expr pos:start="19:27" pos:end="19:43"><literal type="number" pos:start="19:27" pos:end="19:29">1</literal> <operator pos:start="19:29" pos:end="19:29">+</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:38"><name pos:start="19:32" pos:end="19:32">s</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:38">bits</name></name> <operator pos:start="19:40" pos:end="19:40">&gt;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">8</literal><operator pos:start="19:43" pos:end="19:43">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:78"><if pos:start="23:5" pos:end="25:78">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18">mb_bitmask</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:78"><block_content pos:start="25:9" pos:end="25:78">

        <expr_stmt pos:start="25:9" pos:end="25:78"><expr pos:start="25:9" pos:end="25:77"><call pos:start="25:9" pos:end="25:77"><name pos:start="25:9" pos:end="25:21">init_get_bits</name><argument_list pos:start="25:22" pos:end="25:77">(<argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:36">mb_bitmask_gb</name></expr></argument>, <argument pos:start="25:39" pos:end="25:48"><expr pos:start="25:39" pos:end="25:48"><name pos:start="25:39" pos:end="25:48">mb_bitmask</name></expr></argument>, <argument pos:start="25:51" pos:end="25:76"><expr pos:start="25:51" pos:end="25:76"><name pos:start="25:51" pos:end="25:61"><name pos:start="25:51" pos:end="25:51">s</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:61">mb_width</name></name> <operator pos:start="25:63" pos:end="25:63">*</operator> <name pos:start="25:65" pos:end="25:76"><name pos:start="25:65" pos:end="25:65">s</name><operator pos:start="25:66" pos:end="25:67">-&gt;</operator><name pos:start="25:68" pos:end="25:76">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:20">restart_count</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="45:5">for <control pos:start="33:9" pos:end="33:39">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:33">nb_components</name></expr>;</condition> <incr pos:start="33:36" pos:end="33:38"><expr pos:start="33:36" pos:end="33:38"><name pos:start="33:36" pos:end="33:36">i</name><operator pos:start="33:37" pos:end="33:38">++</operator></expr></incr>)</control> <block pos:start="33:41" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:34">

        <decl_stmt pos:start="35:9" pos:end="35:35"><decl pos:start="35:9" pos:end="35:34"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">c</name>   <init pos:start="35:17" pos:end="35:34">= <expr pos:start="35:19" pos:end="35:34"><name pos:start="35:19" pos:end="35:34"><name pos:start="35:19" pos:end="35:19">s</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:31">comp_index</name><index pos:start="35:32" pos:end="35:34">[<expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:42"><expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:12">data</name><index pos:start="37:13" pos:end="37:15">[<expr pos:start="37:14" pos:end="37:14"><name pos:start="37:14" pos:end="37:14">c</name></expr>]</index></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:41"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:32">picture_ptr</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:38">data</name><index pos:start="37:39" pos:end="37:41">[<expr pos:start="37:40" pos:end="37:40"><name pos:start="37:40" pos:end="37:40">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:66"><expr pos:start="39:9" pos:end="39:65"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:22">reference_data</name><index pos:start="39:23" pos:end="39:25">[<expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">c</name></expr>]</index></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <ternary pos:start="39:29" pos:end="39:65"><condition pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:37"><name pos:start="39:29" pos:end="39:37">reference</name></expr> ?</condition><then pos:start="39:41" pos:end="39:58"> <expr pos:start="39:41" pos:end="39:58"><name pos:start="39:41" pos:end="39:58"><name pos:start="39:41" pos:end="39:49">reference</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:55">data</name><index pos:start="39:56" pos:end="39:58">[<expr pos:start="39:57" pos:end="39:57"><name pos:start="39:57" pos:end="39:57">c</name></expr>]</index></name></expr> </then><else pos:start="39:60" pos:end="39:65">: <expr pos:start="39:62" pos:end="39:65"><name pos:start="39:62" pos:end="39:65">NULL</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:37"><expr pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:16">linesize</name><index pos:start="41:17" pos:end="41:19">[<expr pos:start="41:18" pos:end="41:18"><name pos:start="41:18" pos:end="41:18">c</name></expr>]</index></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:36"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:33">linesize</name><index pos:start="41:34" pos:end="41:36">[<expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:25">coefs_finished</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">c</name></expr>]</index></name> <operator pos:start="43:30" pos:end="43:31">|=</operator> <literal type="number" pos:start="43:33" pos:end="43:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="49:5" pos:end="199:5">for <control pos:start="49:9" pos:end="49:47">(<init pos:start="49:10" pos:end="49:18"><expr pos:start="49:10" pos:end="49:17"><name pos:start="49:10" pos:end="49:13">mb_y</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>;</init> <condition pos:start="49:20" pos:end="49:39"><expr pos:start="49:20" pos:end="49:38"><name pos:start="49:20" pos:end="49:23">mb_y</name> <operator pos:start="49:25" pos:end="49:25">&lt;</operator> <name pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:27">s</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:38">mb_height</name></name></expr>;</condition> <incr pos:start="49:41" pos:end="49:46"><expr pos:start="49:41" pos:end="49:46"><name pos:start="49:41" pos:end="49:44">mb_y</name><operator pos:start="49:45" pos:end="49:46">++</operator></expr></incr>)</control> <block pos:start="49:49" pos:end="199:5">{<block_content pos:start="51:9" pos:end="197:9">

        <for pos:start="51:9" pos:end="197:9">for <control pos:start="51:13" pos:end="51:50">(<init pos:start="51:14" pos:end="51:22"><expr pos:start="51:14" pos:end="51:21"><name pos:start="51:14" pos:end="51:17">mb_x</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <literal type="number" pos:start="51:21" pos:end="51:21">0</literal></expr>;</init> <condition pos:start="51:24" pos:end="51:42"><expr pos:start="51:24" pos:end="51:41"><name pos:start="51:24" pos:end="51:27">mb_x</name> <operator pos:start="51:29" pos:end="51:29">&lt;</operator> <name pos:start="51:31" pos:end="51:41"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:41">mb_width</name></name></expr>;</condition> <incr pos:start="51:44" pos:end="51:49"><expr pos:start="51:44" pos:end="51:49"><name pos:start="51:44" pos:end="51:47">mb_x</name><operator pos:start="51:48" pos:end="51:49">++</operator></expr></incr>)</control> <block pos:start="51:52" pos:end="197:9">{<block_content pos:start="53:13" pos:end="195:42">

            <decl_stmt pos:start="53:13" pos:end="53:73"><decl pos:start="53:13" pos:end="53:72"><type pos:start="53:13" pos:end="53:21"><specifier pos:start="53:13" pos:end="53:17">const</specifier> <name pos:start="53:19" pos:end="53:21">int</name></type> <name pos:start="53:23" pos:end="53:29">copy_mb</name> <init pos:start="53:31" pos:end="53:72">= <expr pos:start="53:33" pos:end="53:72"><name pos:start="53:33" pos:end="53:42">mb_bitmask</name> <operator pos:start="53:44" pos:end="53:45">&amp;&amp;</operator> <operator pos:start="53:47" pos:end="53:47">!</operator><call pos:start="53:48" pos:end="53:72"><name pos:start="53:48" pos:end="53:56">get_bits1</name><argument_list pos:start="53:57" pos:end="53:72">(<argument pos:start="53:58" pos:end="53:71"><expr pos:start="53:58" pos:end="53:71"><operator pos:start="53:58" pos:end="53:58">&amp;</operator><name pos:start="53:59" pos:end="53:71">mb_bitmask_gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="57:13" pos:end="59:55"><if pos:start="57:13" pos:end="59:55">if <condition pos:start="57:16" pos:end="57:57">(<expr pos:start="57:17" pos:end="57:56"><name pos:start="57:17" pos:end="57:35"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:35">restart_interval</name></name> <operator pos:start="57:37" pos:end="57:38">&amp;&amp;</operator> <operator pos:start="57:40" pos:end="57:40">!</operator><name pos:start="57:41" pos:end="57:56"><name pos:start="57:41" pos:end="57:41">s</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:56">restart_count</name></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:55"><block_content pos:start="59:17" pos:end="59:55">

                <expr_stmt pos:start="59:17" pos:end="59:55"><expr pos:start="59:17" pos:end="59:54"><name pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:32">restart_count</name></name> <operator pos:start="59:34" pos:end="59:34">=</operator> <name pos:start="59:36" pos:end="59:54"><name pos:start="59:36" pos:end="59:36">s</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:54">restart_interval</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="63:13" pos:end="71:13"><if pos:start="63:13" pos:end="71:13">if <condition pos:start="63:16" pos:end="63:42">(<expr pos:start="63:17" pos:end="63:41"><call pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:29">get_bits_left</name><argument_list pos:start="63:30" pos:end="63:37">(<argument pos:start="63:31" pos:end="63:36"><expr pos:start="63:31" pos:end="63:36"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:36"><name pos:start="63:32" pos:end="63:32">s</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:39" pos:end="63:39">&lt;</operator> <literal type="number" pos:start="63:41" pos:end="63:41">0</literal></expr>)</condition> <block pos:start="63:44" pos:end="71:13">{<block_content pos:start="65:17" pos:end="69:43">

                <expr_stmt pos:start="65:17" pos:end="67:47"><expr pos:start="65:17" pos:end="67:46"><call pos:start="65:17" pos:end="67:46"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="67:46">(<argument pos:start="65:24" pos:end="65:31"><expr pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:31"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:31">avctx</name></name></expr></argument>, <argument pos:start="65:34" pos:end="65:45"><expr pos:start="65:34" pos:end="65:45"><name pos:start="65:34" pos:end="65:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:48" pos:end="65:62"><expr pos:start="65:48" pos:end="65:62"><literal type="string" pos:start="65:48" pos:end="65:62">"overread %d\n"</literal></expr></argument>,

                       <argument pos:start="67:24" pos:end="67:45"><expr pos:start="67:24" pos:end="67:45"><operator pos:start="67:24" pos:end="67:24">-</operator><call pos:start="67:25" pos:end="67:45"><name pos:start="67:25" pos:end="67:37">get_bits_left</name><argument_list pos:start="67:38" pos:end="67:45">(<argument pos:start="67:39" pos:end="67:44"><expr pos:start="67:39" pos:end="67:44"><operator pos:start="67:39" pos:end="67:39">&amp;</operator><name pos:start="67:40" pos:end="67:44"><name pos:start="67:40" pos:end="67:40">s</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:44">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="69:17" pos:end="69:43">return <expr pos:start="69:24" pos:end="69:42"><name pos:start="69:24" pos:end="69:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="73:13" pos:end="191:13">for <control pos:start="73:17" pos:end="73:47">(<init pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:18">i</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</init> <condition pos:start="73:25" pos:end="73:42"><expr pos:start="73:25" pos:end="73:41"><name pos:start="73:25" pos:end="73:25">i</name> <operator pos:start="73:27" pos:end="73:27">&lt;</operator> <name pos:start="73:29" pos:end="73:41">nb_components</name></expr>;</condition> <incr pos:start="73:44" pos:end="73:46"><expr pos:start="73:44" pos:end="73:46"><name pos:start="73:44" pos:end="73:44">i</name><operator pos:start="73:45" pos:end="73:46">++</operator></expr></incr>)</control> <block pos:start="73:49" pos:end="191:13">{<block_content pos:start="75:17" pos:end="189:17">

                <decl_stmt pos:start="75:17" pos:end="75:29"><decl pos:start="75:17" pos:end="75:28"><type pos:start="75:17" pos:end="75:25"><name pos:start="75:17" pos:end="75:23">uint8_t</name> <modifier pos:start="75:25" pos:end="75:25">*</modifier></type><name pos:start="75:26" pos:end="75:28">ptr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="77:17" pos:end="77:40"><decl pos:start="77:17" pos:end="77:21"><type pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">int</name></type> <name pos:start="77:21" pos:end="77:21">n</name></decl>, <decl pos:start="77:24" pos:end="77:24"><type ref="prev" pos:start="77:17" pos:end="77:19"/><name pos:start="77:24" pos:end="77:24">h</name></decl>, <decl pos:start="77:27" pos:end="77:27"><type ref="prev" pos:start="77:17" pos:end="77:19"/><name pos:start="77:27" pos:end="77:27">v</name></decl>, <decl pos:start="77:30" pos:end="77:30"><type ref="prev" pos:start="77:17" pos:end="77:19"/><name pos:start="77:30" pos:end="77:30">x</name></decl>, <decl pos:start="77:33" pos:end="77:33"><type ref="prev" pos:start="77:17" pos:end="77:19"/><name pos:start="77:33" pos:end="77:33">y</name></decl>, <decl pos:start="77:36" pos:end="77:36"><type ref="prev" pos:start="77:17" pos:end="77:19"/><name pos:start="77:36" pos:end="77:36">c</name></decl>, <decl pos:start="77:39" pos:end="77:39"><type ref="prev" pos:start="77:17" pos:end="77:19"/><name pos:start="77:39" pos:end="77:39">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="79:17" pos:end="79:33"><decl pos:start="79:17" pos:end="79:32"><type pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:19">int</name></type> <name pos:start="79:21" pos:end="79:32">block_offset</name></decl>;</decl_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:36"><expr pos:start="81:17" pos:end="81:35"><name pos:start="81:17" pos:end="81:17">n</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:35"><name pos:start="81:21" pos:end="81:21">s</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:32">nb_blocks</name><index pos:start="81:33" pos:end="81:35">[<expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:37"><expr pos:start="83:17" pos:end="83:36"><name pos:start="83:17" pos:end="83:17">c</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <name pos:start="83:21" pos:end="83:36"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:33">comp_index</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:35"><expr pos:start="85:17" pos:end="85:34"><name pos:start="85:17" pos:end="85:17">h</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:21">s</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:31">h_scount</name><index pos:start="85:32" pos:end="85:34">[<expr pos:start="85:33" pos:end="85:33"><name pos:start="85:33" pos:end="85:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:35"><expr pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:17">v</name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:34"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:31">v_scount</name><index pos:start="87:32" pos:end="87:34">[<expr pos:start="87:33" pos:end="87:33"><name pos:start="87:33" pos:end="87:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:22"><expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:17">x</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <literal type="number" pos:start="89:21" pos:end="89:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:21"><name pos:start="91:17" pos:end="91:17">y</name> <operator pos:start="91:19" pos:end="91:19">=</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>;</expr_stmt>

                <for pos:start="93:17" pos:end="189:17">for <control pos:start="93:21" pos:end="93:39">(<init pos:start="93:22" pos:end="93:27"><expr pos:start="93:22" pos:end="93:26"><name pos:start="93:22" pos:end="93:22">j</name> <operator pos:start="93:24" pos:end="93:24">=</operator> <literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>;</init> <condition pos:start="93:29" pos:end="93:34"><expr pos:start="93:29" pos:end="93:33"><name pos:start="93:29" pos:end="93:29">j</name> <operator pos:start="93:31" pos:end="93:31">&lt;</operator> <name pos:start="93:33" pos:end="93:33">n</name></expr>;</condition> <incr pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><name pos:start="93:36" pos:end="93:36">j</name><operator pos:start="93:37" pos:end="93:38">++</operator></expr></incr>)</control> <block pos:start="93:41" pos:end="189:17">{<block_content pos:start="95:21" pos:end="187:21">

                    <expr_stmt pos:start="95:21" pos:end="97:96"><expr pos:start="95:21" pos:end="97:95"><name pos:start="95:21" pos:end="95:32">block_offset</name> <operator pos:start="95:34" pos:end="95:34">=</operator> <operator pos:start="95:36" pos:end="95:36">(</operator><operator pos:start="95:37" pos:end="95:37">(</operator><operator pos:start="95:38" pos:end="95:38">(</operator><name pos:start="95:39" pos:end="95:49"><name pos:start="95:39" pos:end="95:46">linesize</name><index pos:start="95:47" pos:end="95:49">[<expr pos:start="95:48" pos:end="95:48"><name pos:start="95:48" pos:end="95:48">c</name></expr>]</index></name> <operator pos:start="95:51" pos:end="95:51">*</operator> <operator pos:start="95:53" pos:end="95:53">(</operator><name pos:start="95:54" pos:end="95:54">v</name> <operator pos:start="95:56" pos:end="95:56">*</operator> <name pos:start="95:58" pos:end="95:61">mb_y</name> <operator pos:start="95:63" pos:end="95:63">+</operator> <name pos:start="95:65" pos:end="95:65">y</name><operator pos:start="95:66" pos:end="95:66">)</operator> <operator pos:start="95:68" pos:end="95:68">*</operator> <literal type="number" pos:start="95:70" pos:end="95:70">8</literal><operator pos:start="95:71" pos:end="95:71">)</operator> <operator pos:start="95:73" pos:end="95:73">+</operator>

                                     <operator pos:start="97:38" pos:end="97:38">(</operator><name pos:start="97:39" pos:end="97:39">h</name> <operator pos:start="97:41" pos:end="97:41">*</operator> <name pos:start="97:43" pos:end="97:46">mb_x</name> <operator pos:start="97:48" pos:end="97:48">+</operator> <name pos:start="97:50" pos:end="97:50">x</name><operator pos:start="97:51" pos:end="97:51">)</operator> <operator pos:start="97:53" pos:end="97:53">*</operator> <literal type="number" pos:start="97:55" pos:end="97:55">8</literal> <operator pos:start="97:57" pos:end="97:57">*</operator> <name pos:start="97:59" pos:end="97:73">bytes_per_pixel</name><operator pos:start="97:74" pos:end="97:74">)</operator> <operator pos:start="97:76" pos:end="97:77">&gt;&gt;</operator> <name pos:start="97:79" pos:end="97:94"><name pos:start="97:79" pos:end="97:79">s</name><operator pos:start="97:80" pos:end="97:81">-&gt;</operator><name pos:start="97:82" pos:end="97:86">avctx</name><operator pos:start="97:87" pos:end="97:88">-&gt;</operator><name pos:start="97:89" pos:end="97:94">lowres</name></name><operator pos:start="97:95" pos:end="97:95">)</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="101:21" pos:end="103:57"><if pos:start="101:21" pos:end="103:57">if <condition pos:start="101:24" pos:end="101:57">(<expr pos:start="101:25" pos:end="101:56"><name pos:start="101:25" pos:end="101:37"><name pos:start="101:25" pos:end="101:25">s</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:37">interlaced</name></name> <operator pos:start="101:39" pos:end="101:40">&amp;&amp;</operator> <name pos:start="101:42" pos:end="101:56"><name pos:start="101:42" pos:end="101:42">s</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:56">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="103:25" pos:end="103:57"><block_content pos:start="103:25" pos:end="103:57">

                        <expr_stmt pos:start="103:25" pos:end="103:57"><expr pos:start="103:25" pos:end="103:56"><name pos:start="103:25" pos:end="103:36">block_offset</name> <operator pos:start="103:38" pos:end="103:39">+=</operator> <name pos:start="103:41" pos:end="103:51"><name pos:start="103:41" pos:end="103:48">linesize</name><index pos:start="103:49" pos:end="103:51">[<expr pos:start="103:50" pos:end="103:50"><name pos:start="103:50" pos:end="103:50">c</name></expr>]</index></name> <operator pos:start="103:53" pos:end="103:54">&gt;&gt;</operator> <literal type="number" pos:start="103:56" pos:end="103:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="105:21" pos:end="105:49"><expr pos:start="105:21" pos:end="105:48"><name pos:start="105:21" pos:end="105:23">ptr</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:33"><name pos:start="105:27" pos:end="105:30">data</name><index pos:start="105:31" pos:end="105:33">[<expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">c</name></expr>]</index></name> <operator pos:start="105:35" pos:end="105:35">+</operator> <name pos:start="105:37" pos:end="105:48">block_offset</name></expr>;</expr_stmt>

                    <if_stmt pos:start="107:21" pos:end="171:21"><if pos:start="107:21" pos:end="143:21">if <condition pos:start="107:24" pos:end="107:40">(<expr pos:start="107:25" pos:end="107:39"><operator pos:start="107:25" pos:end="107:25">!</operator><name pos:start="107:26" pos:end="107:39"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:39">progressive</name></name></expr>)</condition> <block pos:start="107:42" pos:end="143:21">{<block_content pos:start="109:25" pos:end="141:25">

                        <if_stmt pos:start="109:25" pos:end="141:25"><if pos:start="109:25" pos:end="113:76">if <condition pos:start="109:28" pos:end="109:36">(<expr pos:start="109:29" pos:end="109:35"><name pos:start="109:29" pos:end="109:35">copy_mb</name></expr>)</condition><block type="pseudo" pos:start="111:29" pos:end="113:76"><block_content pos:start="111:29" pos:end="113:76">

                            <expr_stmt pos:start="111:29" pos:end="113:76"><expr pos:start="111:29" pos:end="113:75"><call pos:start="111:29" pos:end="113:75"><name pos:start="111:29" pos:end="111:44">mjpeg_copy_block</name><argument_list pos:start="111:45" pos:end="113:75">(<argument pos:start="111:46" pos:end="111:46"><expr pos:start="111:46" pos:end="111:46"><name pos:start="111:46" pos:end="111:46">s</name></expr></argument>, <argument pos:start="111:49" pos:end="111:51"><expr pos:start="111:49" pos:end="111:51"><name pos:start="111:49" pos:end="111:51">ptr</name></expr></argument>, <argument pos:start="111:54" pos:end="111:85"><expr pos:start="111:54" pos:end="111:85"><name pos:start="111:54" pos:end="111:70"><name pos:start="111:54" pos:end="111:67">reference_data</name><index pos:start="111:68" pos:end="111:70">[<expr pos:start="111:69" pos:end="111:69"><name pos:start="111:69" pos:end="111:69">c</name></expr>]</index></name> <operator pos:start="111:72" pos:end="111:72">+</operator> <name pos:start="111:74" pos:end="111:85">block_offset</name></expr></argument>,

                                             <argument pos:start="113:46" pos:end="113:56"><expr pos:start="113:46" pos:end="113:56"><name pos:start="113:46" pos:end="113:56"><name pos:start="113:46" pos:end="113:53">linesize</name><index pos:start="113:54" pos:end="113:56">[<expr pos:start="113:55" pos:end="113:55"><name pos:start="113:55" pos:end="113:55">c</name></expr>]</index></name></expr></argument>, <argument pos:start="113:59" pos:end="113:74"><expr pos:start="113:59" pos:end="113:74"><name pos:start="113:59" pos:end="113:74"><name pos:start="113:59" pos:end="113:59">s</name><operator pos:start="113:60" pos:end="113:61">-&gt;</operator><name pos:start="113:62" pos:end="113:66">avctx</name><operator pos:start="113:67" pos:end="113:68">-&gt;</operator><name pos:start="113:69" pos:end="113:74">lowres</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>



                        <else pos:start="117:25" pos:end="141:25">else <block pos:start="117:30" pos:end="141:25">{<block_content pos:start="119:29" pos:end="139:66">

                            <expr_stmt pos:start="119:29" pos:end="119:57"><expr pos:start="119:29" pos:end="119:56"><call pos:start="119:29" pos:end="119:56"><name pos:start="119:29" pos:end="119:46"><name pos:start="119:29" pos:end="119:29">s</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:34">dsp</name><operator pos:start="119:35" pos:end="119:35">.</operator><name pos:start="119:36" pos:end="119:46">clear_block</name></name><argument_list pos:start="119:47" pos:end="119:56">(<argument pos:start="119:48" pos:end="119:55"><expr pos:start="119:48" pos:end="119:55"><name pos:start="119:48" pos:end="119:55"><name pos:start="119:48" pos:end="119:48">s</name><operator pos:start="119:49" pos:end="119:50">-&gt;</operator><name pos:start="119:51" pos:end="119:55">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="121:29" pos:end="133:29"><if pos:start="121:29" pos:end="133:29">if <condition pos:start="121:32" pos:end="125:88">(<expr pos:start="121:33" pos:end="125:87"><call pos:start="121:33" pos:end="125:83"><name pos:start="121:33" pos:end="121:44">decode_block</name><argument_list pos:start="121:45" pos:end="125:83">(<argument pos:start="121:46" pos:end="121:46"><expr pos:start="121:46" pos:end="121:46"><name pos:start="121:46" pos:end="121:46">s</name></expr></argument>, <argument pos:start="121:49" pos:end="121:56"><expr pos:start="121:49" pos:end="121:56"><name pos:start="121:49" pos:end="121:56"><name pos:start="121:49" pos:end="121:49">s</name><operator pos:start="121:50" pos:end="121:51">-&gt;</operator><name pos:start="121:52" pos:end="121:56">block</name></name></expr></argument>, <argument pos:start="121:59" pos:end="121:59"><expr pos:start="121:59" pos:end="121:59"><name pos:start="121:59" pos:end="121:59">i</name></expr></argument>,

                                             <argument pos:start="123:46" pos:end="123:59"><expr pos:start="123:46" pos:end="123:59"><name pos:start="123:46" pos:end="123:59"><name pos:start="123:46" pos:end="123:46">s</name><operator pos:start="123:47" pos:end="123:48">-&gt;</operator><name pos:start="123:49" pos:end="123:56">dc_index</name><index pos:start="123:57" pos:end="123:59">[<expr pos:start="123:58" pos:end="123:58"><name pos:start="123:58" pos:end="123:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="123:62" pos:end="123:75"><expr pos:start="123:62" pos:end="123:75"><name pos:start="123:62" pos:end="123:75"><name pos:start="123:62" pos:end="123:62">s</name><operator pos:start="123:63" pos:end="123:64">-&gt;</operator><name pos:start="123:65" pos:end="123:72">ac_index</name><index pos:start="123:73" pos:end="123:75">[<expr pos:start="123:74" pos:end="123:74"><name pos:start="123:74" pos:end="123:74">i</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="125:46" pos:end="125:82"><expr pos:start="125:46" pos:end="125:82"><name pos:start="125:46" pos:end="125:82"><name pos:start="125:46" pos:end="125:46">s</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:62">quant_matrixes</name><index pos:start="125:63" pos:end="125:82">[<expr pos:start="125:64" pos:end="125:81"><name pos:start="125:64" pos:end="125:81"><name pos:start="125:64" pos:end="125:64">s</name><operator pos:start="125:65" pos:end="125:66">-&gt;</operator><name pos:start="125:67" pos:end="125:78">quant_sindex</name><index pos:start="125:79" pos:end="125:81">[<expr pos:start="125:80" pos:end="125:80"><name pos:start="125:80" pos:end="125:80">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="125:85" pos:end="125:85">&lt;</operator> <literal type="number" pos:start="125:87" pos:end="125:87">0</literal></expr>)</condition> <block pos:start="125:90" pos:end="133:29">{<block_content pos:start="127:33" pos:end="131:59">

                                <expr_stmt pos:start="127:33" pos:end="129:72"><expr pos:start="127:33" pos:end="129:71"><call pos:start="127:33" pos:end="129:71"><name pos:start="127:33" pos:end="127:38">av_log</name><argument_list pos:start="127:39" pos:end="129:71">(<argument pos:start="127:40" pos:end="127:47"><expr pos:start="127:40" pos:end="127:47"><name pos:start="127:40" pos:end="127:47"><name pos:start="127:40" pos:end="127:40">s</name><operator pos:start="127:41" pos:end="127:42">-&gt;</operator><name pos:start="127:43" pos:end="127:47">avctx</name></name></expr></argument>, <argument pos:start="127:50" pos:end="127:61"><expr pos:start="127:50" pos:end="127:61"><name pos:start="127:50" pos:end="127:61">AV_LOG_ERROR</name></expr></argument>,

                                       <argument pos:start="129:40" pos:end="129:58"><expr pos:start="129:40" pos:end="129:58"><literal type="string" pos:start="129:40" pos:end="129:58">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="129:61" pos:end="129:64"><expr pos:start="129:61" pos:end="129:64"><name pos:start="129:61" pos:end="129:64">mb_y</name></expr></argument>, <argument pos:start="129:67" pos:end="129:70"><expr pos:start="129:67" pos:end="129:70"><name pos:start="129:67" pos:end="129:70">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="131:33" pos:end="131:59">return <expr pos:start="131:40" pos:end="131:58"><name pos:start="131:40" pos:end="131:58">AVERROR_INVALIDDATA</name></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="135:29" pos:end="135:72"><expr pos:start="135:29" pos:end="135:71"><call pos:start="135:29" pos:end="135:71"><name pos:start="135:29" pos:end="135:43"><name pos:start="135:29" pos:end="135:29">s</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:34">dsp</name><operator pos:start="135:35" pos:end="135:35">.</operator><name pos:start="135:36" pos:end="135:43">idct_put</name></name><argument_list pos:start="135:44" pos:end="135:71">(<argument pos:start="135:45" pos:end="135:47"><expr pos:start="135:45" pos:end="135:47"><name pos:start="135:45" pos:end="135:47">ptr</name></expr></argument>, <argument pos:start="135:50" pos:end="135:60"><expr pos:start="135:50" pos:end="135:60"><name pos:start="135:50" pos:end="135:60"><name pos:start="135:50" pos:end="135:57">linesize</name><index pos:start="135:58" pos:end="135:60">[<expr pos:start="135:59" pos:end="135:59"><name pos:start="135:59" pos:end="135:59">c</name></expr>]</index></name></expr></argument>, <argument pos:start="135:63" pos:end="135:70"><expr pos:start="135:63" pos:end="135:70"><name pos:start="135:63" pos:end="135:70"><name pos:start="135:63" pos:end="135:63">s</name><operator pos:start="135:64" pos:end="135:65">-&gt;</operator><name pos:start="135:66" pos:end="135:70">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="137:29" pos:end="139:66"><if pos:start="137:29" pos:end="139:66">if <condition pos:start="137:32" pos:end="137:44">(<expr pos:start="137:33" pos:end="137:43"><name pos:start="137:33" pos:end="137:39"><name pos:start="137:33" pos:end="137:33">s</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:39">bits</name></name> <operator pos:start="137:41" pos:end="137:41">&amp;</operator> <literal type="number" pos:start="137:43" pos:end="137:43">7</literal></expr>)</condition><block type="pseudo" pos:start="139:33" pos:end="139:66"><block_content pos:start="139:33" pos:end="139:66">

                                <expr_stmt pos:start="139:33" pos:end="139:66"><expr pos:start="139:33" pos:end="139:65"><call pos:start="139:33" pos:end="139:65"><name pos:start="139:33" pos:end="139:44">shift_output</name><argument_list pos:start="139:45" pos:end="139:65">(<argument pos:start="139:46" pos:end="139:46"><expr pos:start="139:46" pos:end="139:46"><name pos:start="139:46" pos:end="139:46">s</name></expr></argument>, <argument pos:start="139:49" pos:end="139:51"><expr pos:start="139:49" pos:end="139:51"><name pos:start="139:49" pos:end="139:51">ptr</name></expr></argument>, <argument pos:start="139:54" pos:end="139:64"><expr pos:start="139:54" pos:end="139:64"><name pos:start="139:54" pos:end="139:64"><name pos:start="139:54" pos:end="139:61">linesize</name><index pos:start="139:62" pos:end="139:64">[<expr pos:start="139:63" pos:end="139:63"><name pos:start="139:63" pos:end="139:63">c</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="143:23" pos:end="171:21">else <block pos:start="143:28" pos:end="171:21">{<block_content pos:start="145:25" pos:end="169:25">

                        <decl_stmt pos:start="145:25" pos:end="147:56"><decl pos:start="145:25" pos:end="147:55"><type pos:start="145:25" pos:end="145:27"><name pos:start="145:25" pos:end="145:27">int</name></type> <name pos:start="145:29" pos:end="145:37">block_idx</name>  <init pos:start="145:40" pos:end="147:55">= <expr pos:start="145:42" pos:end="147:55"><name pos:start="145:42" pos:end="145:59"><name pos:start="145:42" pos:end="145:42">s</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:56">block_stride</name><index pos:start="145:57" pos:end="145:59">[<expr pos:start="145:58" pos:end="145:58"><name pos:start="145:58" pos:end="145:58">c</name></expr>]</index></name> <operator pos:start="145:61" pos:end="145:61">*</operator> <operator pos:start="145:63" pos:end="145:63">(</operator><name pos:start="145:64" pos:end="145:64">v</name> <operator pos:start="145:66" pos:end="145:66">*</operator> <name pos:start="145:68" pos:end="145:71">mb_y</name> <operator pos:start="145:73" pos:end="145:73">+</operator> <name pos:start="145:75" pos:end="145:75">y</name><operator pos:start="145:76" pos:end="145:76">)</operator> <operator pos:start="145:78" pos:end="145:78">+</operator>

                                         <operator pos:start="147:42" pos:end="147:42">(</operator><name pos:start="147:43" pos:end="147:43">h</name> <operator pos:start="147:45" pos:end="147:45">*</operator> <name pos:start="147:47" pos:end="147:50">mb_x</name> <operator pos:start="147:52" pos:end="147:52">+</operator> <name pos:start="147:54" pos:end="147:54">x</name><operator pos:start="147:55" pos:end="147:55">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="149:25" pos:end="149:65"><decl pos:start="149:25" pos:end="149:64"><type pos:start="149:25" pos:end="149:33"><name pos:start="149:25" pos:end="149:31">int16_t</name> <modifier pos:start="149:33" pos:end="149:33">*</modifier></type><name pos:start="149:34" pos:end="149:38">block</name> <init pos:start="149:40" pos:end="149:64">= <expr pos:start="149:42" pos:end="149:64"><name pos:start="149:42" pos:end="149:64"><name pos:start="149:42" pos:end="149:42">s</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:50">blocks</name><index pos:start="149:51" pos:end="149:53">[<expr pos:start="149:52" pos:end="149:52"><name pos:start="149:52" pos:end="149:52">c</name></expr>]</index><index pos:start="149:54" pos:end="149:64">[<expr pos:start="149:55" pos:end="149:63"><name pos:start="149:55" pos:end="149:63">block_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="151:25" pos:end="169:25"><if pos:start="151:25" pos:end="155:87">if <condition pos:start="151:28" pos:end="151:31">(<expr pos:start="151:29" pos:end="151:30"><name pos:start="151:29" pos:end="151:30">Ah</name></expr>)</condition><block type="pseudo" pos:start="153:29" pos:end="155:87"><block_content pos:start="153:29" pos:end="155:87">

                            <expr_stmt pos:start="153:29" pos:end="155:87"><expr pos:start="153:29" pos:end="155:86"><name pos:start="153:29" pos:end="153:36"><name pos:start="153:29" pos:end="153:33">block</name><index pos:start="153:34" pos:end="153:36">[<expr pos:start="153:35" pos:end="153:35"><literal type="number" pos:start="153:35" pos:end="153:35">0</literal></expr>]</index></name> <operator pos:start="153:38" pos:end="153:39">+=</operator> <call pos:start="153:41" pos:end="153:57"><name pos:start="153:41" pos:end="153:49">get_bits1</name><argument_list pos:start="153:50" pos:end="153:57">(<argument pos:start="153:51" pos:end="153:56"><expr pos:start="153:51" pos:end="153:56"><operator pos:start="153:51" pos:end="153:51">&amp;</operator><name pos:start="153:52" pos:end="153:56"><name pos:start="153:52" pos:end="153:52">s</name><operator pos:start="153:53" pos:end="153:54">-&gt;</operator><name pos:start="153:55" pos:end="153:56">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="153:59" pos:end="153:59">*</operator>

                                        <name pos:start="155:41" pos:end="155:80"><name pos:start="155:41" pos:end="155:41">s</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:57">quant_matrixes</name><index pos:start="155:58" pos:end="155:77">[<expr pos:start="155:59" pos:end="155:76"><name pos:start="155:59" pos:end="155:76"><name pos:start="155:59" pos:end="155:59">s</name><operator pos:start="155:60" pos:end="155:61">-&gt;</operator><name pos:start="155:62" pos:end="155:73">quant_sindex</name><index pos:start="155:74" pos:end="155:76">[<expr pos:start="155:75" pos:end="155:75"><name pos:start="155:75" pos:end="155:75">i</name></expr>]</index></name></expr>]</index><index pos:start="155:78" pos:end="155:80">[<expr pos:start="155:79" pos:end="155:79"><literal type="number" pos:start="155:79" pos:end="155:79">0</literal></expr>]</index></name> <operator pos:start="155:82" pos:end="155:83">&lt;&lt;</operator> <name pos:start="155:85" pos:end="155:86">Al</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="157:25" pos:end="169:25">else if <condition pos:start="157:33" pos:end="161:63">(<expr pos:start="157:34" pos:end="161:62"><call pos:start="157:34" pos:end="161:58"><name pos:start="157:34" pos:end="157:54">decode_dc_progressive</name><argument_list pos:start="157:55" pos:end="161:58">(<argument pos:start="157:56" pos:end="157:56"><expr pos:start="157:56" pos:end="157:56"><name pos:start="157:56" pos:end="157:56">s</name></expr></argument>, <argument pos:start="157:59" pos:end="157:63"><expr pos:start="157:59" pos:end="157:63"><name pos:start="157:59" pos:end="157:63">block</name></expr></argument>, <argument pos:start="157:66" pos:end="157:66"><expr pos:start="157:66" pos:end="157:66"><name pos:start="157:66" pos:end="157:66">i</name></expr></argument>, <argument pos:start="157:69" pos:end="157:82"><expr pos:start="157:69" pos:end="157:82"><name pos:start="157:69" pos:end="157:82"><name pos:start="157:69" pos:end="157:69">s</name><operator pos:start="157:70" pos:end="157:71">-&gt;</operator><name pos:start="157:72" pos:end="157:79">dc_index</name><index pos:start="157:80" pos:end="157:82">[<expr pos:start="157:81" pos:end="157:81"><name pos:start="157:81" pos:end="157:81">i</name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="159:56" pos:end="159:92"><expr pos:start="159:56" pos:end="159:92"><name pos:start="159:56" pos:end="159:92"><name pos:start="159:56" pos:end="159:56">s</name><operator pos:start="159:57" pos:end="159:58">-&gt;</operator><name pos:start="159:59" pos:end="159:72">quant_matrixes</name><index pos:start="159:73" pos:end="159:92">[<expr pos:start="159:74" pos:end="159:91"><name pos:start="159:74" pos:end="159:91"><name pos:start="159:74" pos:end="159:74">s</name><operator pos:start="159:75" pos:end="159:76">-&gt;</operator><name pos:start="159:77" pos:end="159:88">quant_sindex</name><index pos:start="159:89" pos:end="159:91">[<expr pos:start="159:90" pos:end="159:90"><name pos:start="159:90" pos:end="159:90">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="161:56" pos:end="161:57"><expr pos:start="161:56" pos:end="161:57"><name pos:start="161:56" pos:end="161:57">Al</name></expr></argument>)</argument_list></call> <operator pos:start="161:60" pos:end="161:60">&lt;</operator> <literal type="number" pos:start="161:62" pos:end="161:62">0</literal></expr>)</condition> <block pos:start="161:65" pos:end="169:25">{<block_content pos:start="163:29" pos:end="167:55">

                            <expr_stmt pos:start="163:29" pos:end="165:68"><expr pos:start="163:29" pos:end="165:67"><call pos:start="163:29" pos:end="165:67"><name pos:start="163:29" pos:end="163:34">av_log</name><argument_list pos:start="163:35" pos:end="165:67">(<argument pos:start="163:36" pos:end="163:43"><expr pos:start="163:36" pos:end="163:43"><name pos:start="163:36" pos:end="163:43"><name pos:start="163:36" pos:end="163:36">s</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:43">avctx</name></name></expr></argument>, <argument pos:start="163:46" pos:end="163:57"><expr pos:start="163:46" pos:end="163:57"><name pos:start="163:46" pos:end="163:57">AV_LOG_ERROR</name></expr></argument>,

                                   <argument pos:start="165:36" pos:end="165:54"><expr pos:start="165:36" pos:end="165:54"><literal type="string" pos:start="165:36" pos:end="165:54">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="165:57" pos:end="165:60"><expr pos:start="165:57" pos:end="165:60"><name pos:start="165:57" pos:end="165:60">mb_y</name></expr></argument>, <argument pos:start="165:63" pos:end="165:66"><expr pos:start="165:63" pos:end="165:66"><name pos:start="165:63" pos:end="165:66">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="167:29" pos:end="167:55">return <expr pos:start="167:36" pos:end="167:54"><name pos:start="167:36" pos:end="167:54">AVERROR_INVALIDDATA</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:75"><expr pos:start="173:21" pos:end="173:74"><call pos:start="173:21" pos:end="173:74"><name pos:start="173:21" pos:end="173:27">av_dlog</name><argument_list pos:start="173:28" pos:end="173:74">(<argument pos:start="173:29" pos:end="173:36"><expr pos:start="173:29" pos:end="173:36"><name pos:start="173:29" pos:end="173:36"><name pos:start="173:29" pos:end="173:29">s</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:36">avctx</name></name></expr></argument>, <argument pos:start="173:39" pos:end="173:61"><expr pos:start="173:39" pos:end="173:61"><literal type="string" pos:start="173:39" pos:end="173:61">"mb: %d %d processed\n"</literal></expr></argument>, <argument pos:start="173:64" pos:end="173:67"><expr pos:start="173:64" pos:end="173:67"><name pos:start="173:64" pos:end="173:67">mb_y</name></expr></argument>, <argument pos:start="173:70" pos:end="173:73"><expr pos:start="173:70" pos:end="173:73"><name pos:start="173:70" pos:end="173:73">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="179:68"><expr pos:start="175:21" pos:end="179:67"><call pos:start="175:21" pos:end="179:67"><name pos:start="175:21" pos:end="175:27">av_dlog</name><argument_list pos:start="175:28" pos:end="179:67">(<argument pos:start="175:29" pos:end="175:36"><expr pos:start="175:29" pos:end="175:36"><name pos:start="175:29" pos:end="175:36"><name pos:start="175:29" pos:end="175:29">s</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:36">avctx</name></name></expr></argument>, <argument pos:start="175:39" pos:end="175:66"><expr pos:start="175:39" pos:end="175:66"><literal type="string" pos:start="175:39" pos:end="175:66">"%d %d %d %d %d %d %d %d \n"</literal></expr></argument>,

                            <argument pos:start="177:29" pos:end="177:32"><expr pos:start="177:29" pos:end="177:32"><name pos:start="177:29" pos:end="177:32">mb_x</name></expr></argument>, <argument pos:start="177:35" pos:end="177:38"><expr pos:start="177:35" pos:end="177:38"><name pos:start="177:35" pos:end="177:38">mb_y</name></expr></argument>, <argument pos:start="177:41" pos:end="177:41"><expr pos:start="177:41" pos:end="177:41"><name pos:start="177:41" pos:end="177:41">x</name></expr></argument>, <argument pos:start="177:44" pos:end="177:44"><expr pos:start="177:44" pos:end="177:44"><name pos:start="177:44" pos:end="177:44">y</name></expr></argument>, <argument pos:start="177:47" pos:end="177:47"><expr pos:start="177:47" pos:end="177:47"><name pos:start="177:47" pos:end="177:47">c</name></expr></argument>, <argument pos:start="177:50" pos:end="177:64"><expr pos:start="177:50" pos:end="177:64"><name pos:start="177:50" pos:end="177:64"><name pos:start="177:50" pos:end="177:50">s</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:64">bottom_field</name></name></expr></argument>,

                            <argument pos:start="179:29" pos:end="179:46"><expr pos:start="179:29" pos:end="179:46"><operator pos:start="179:29" pos:end="179:29">(</operator><name pos:start="179:30" pos:end="179:30">v</name> <operator pos:start="179:32" pos:end="179:32">*</operator> <name pos:start="179:34" pos:end="179:37">mb_y</name> <operator pos:start="179:39" pos:end="179:39">+</operator> <name pos:start="179:41" pos:end="179:41">y</name><operator pos:start="179:42" pos:end="179:42">)</operator> <operator pos:start="179:44" pos:end="179:44">*</operator> <literal type="number" pos:start="179:46" pos:end="179:46">8</literal></expr></argument>, <argument pos:start="179:49" pos:end="179:66"><expr pos:start="179:49" pos:end="179:66"><operator pos:start="179:49" pos:end="179:49">(</operator><name pos:start="179:50" pos:end="179:50">h</name> <operator pos:start="179:52" pos:end="179:52">*</operator> <name pos:start="179:54" pos:end="179:57">mb_x</name> <operator pos:start="179:59" pos:end="179:59">+</operator> <name pos:start="179:61" pos:end="179:61">x</name><operator pos:start="179:62" pos:end="179:62">)</operator> <operator pos:start="179:64" pos:end="179:64">*</operator> <literal type="number" pos:start="179:66" pos:end="179:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="181:21" pos:end="187:21"><if pos:start="181:21" pos:end="187:21">if <condition pos:start="181:24" pos:end="181:33">(<expr pos:start="181:25" pos:end="181:32"><operator pos:start="181:25" pos:end="181:26">++</operator><name pos:start="181:27" pos:end="181:27">x</name> <operator pos:start="181:29" pos:end="181:30">==</operator> <name pos:start="181:32" pos:end="181:32">h</name></expr>)</condition> <block pos:start="181:35" pos:end="187:21">{<block_content pos:start="183:25" pos:end="185:28">

                        <expr_stmt pos:start="183:25" pos:end="183:30"><expr pos:start="183:25" pos:end="183:29"><name pos:start="183:25" pos:end="183:25">x</name> <operator pos:start="183:27" pos:end="183:27">=</operator> <literal type="number" pos:start="183:29" pos:end="183:29">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="185:25" pos:end="185:28"><expr pos:start="185:25" pos:end="185:27"><name pos:start="185:25" pos:end="185:25">y</name><operator pos:start="185:26" pos:end="185:27">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="195:13" pos:end="195:42"><expr pos:start="195:13" pos:end="195:41"><call pos:start="195:13" pos:end="195:41"><name pos:start="195:13" pos:end="195:23">handle_rstn</name><argument_list pos:start="195:24" pos:end="195:41">(<argument pos:start="195:25" pos:end="195:25"><expr pos:start="195:25" pos:end="195:25"><name pos:start="195:25" pos:end="195:25">s</name></expr></argument>, <argument pos:start="195:28" pos:end="195:40"><expr pos:start="195:28" pos:end="195:40"><name pos:start="195:28" pos:end="195:40">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
