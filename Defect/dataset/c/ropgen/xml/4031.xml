<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4031.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">add_query_tests</name><parameter_list pos:start="1:28" pos:end="1:46">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:39"><name pos:start="1:29" pos:end="1:37">QmpSchema</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">schema</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SchemaInfoList</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:24">tail</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SchemaInfo</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">si</name></decl>, <decl pos:start="7:21" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:29">arg_type</name></decl>, <decl pos:start="7:32" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:40">ret_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:25">test_name</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:38">/* Test the query-like commands */</comment>

    <for pos:start="15:5" pos:end="61:5">for <control pos:start="15:9" pos:end="15:54">(<init pos:start="15:10" pos:end="15:29"><expr pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:13">tail</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:28"><name pos:start="15:17" pos:end="15:22">schema</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:28">list</name></name></expr>;</init> <condition pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">tail</name></expr>;</condition> <incr pos:start="15:37" pos:end="15:53"><expr pos:start="15:37" pos:end="15:53"><name pos:start="15:37" pos:end="15:40">tail</name> <operator pos:start="15:42" pos:end="15:42">=</operator> <name pos:start="15:44" pos:end="15:53"><name pos:start="15:44" pos:end="15:47">tail</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:53">next</name></name></expr></incr>)</control> <block pos:start="15:56" pos:end="61:5">{<block_content pos:start="17:9" pos:end="59:61">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:10">si</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:17">tail</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:24">value</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:54">(<expr pos:start="19:13" pos:end="19:53"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:14">si</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:25">meta_type</name></name> <operator pos:start="19:27" pos:end="19:28">!=</operator> <name pos:start="19:30" pos:end="19:53">SCHEMA_META_TYPE_COMMAND</name></expr>)</condition> <block pos:start="19:56" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:43">(<expr pos:start="27:13" pos:end="27:42"><call pos:start="27:13" pos:end="27:42"><name pos:start="27:13" pos:end="27:32">query_is_blacklisted</name><argument_list pos:start="27:33" pos:end="27:42">(<argument pos:start="27:34" pos:end="27:41"><expr pos:start="27:34" pos:end="27:41"><name pos:start="27:34" pos:end="27:41"><name pos:start="27:34" pos:end="27:35">si</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:41">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:45" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:16">arg_type</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:68"><name pos:start="35:20" pos:end="35:36">qmp_schema_lookup</name><argument_list pos:start="35:37" pos:end="35:68">(<argument pos:start="35:38" pos:end="35:43"><expr pos:start="35:38" pos:end="35:43"><name pos:start="35:38" pos:end="35:43">schema</name></expr></argument>, <argument pos:start="35:46" pos:end="35:67"><expr pos:start="35:46" pos:end="35:67"><name pos:start="35:46" pos:end="35:67"><name pos:start="35:46" pos:end="35:47">si</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:50">u</name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:58">command</name><operator pos:start="35:59" pos:end="35:59">.</operator><name pos:start="35:60" pos:end="35:67">arg_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:56">(<expr pos:start="37:13" pos:end="37:55"><call pos:start="37:13" pos:end="37:55"><name pos:start="37:13" pos:end="37:45">object_type_has_mandatory_members</name><argument_list pos:start="37:46" pos:end="37:55">(<argument pos:start="37:47" pos:end="37:54"><expr pos:start="37:47" pos:end="37:54"><name pos:start="37:47" pos:end="37:54">arg_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:58" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:21">

            <continue pos:start="39:13" pos:end="39:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:69"><expr pos:start="45:9" pos:end="45:68"><name pos:start="45:9" pos:end="45:16">ret_type</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:68"><name pos:start="45:20" pos:end="45:36">qmp_schema_lookup</name><argument_list pos:start="45:37" pos:end="45:68">(<argument pos:start="45:38" pos:end="45:43"><expr pos:start="45:38" pos:end="45:43"><name pos:start="45:38" pos:end="45:43">schema</name></expr></argument>, <argument pos:start="45:46" pos:end="45:67"><expr pos:start="45:46" pos:end="45:67"><name pos:start="45:46" pos:end="45:67"><name pos:start="45:46" pos:end="45:47">si</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:50">u</name><operator pos:start="45:51" pos:end="45:51">.</operator><name pos:start="45:52" pos:end="45:58">command</name><operator pos:start="45:59" pos:end="45:59">.</operator><name pos:start="45:60" pos:end="45:67">ret_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="49:43">(<expr pos:start="47:13" pos:end="49:42"><name pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:20">ret_type</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:31">meta_type</name></name> <operator pos:start="47:33" pos:end="47:34">==</operator> <name pos:start="47:36" pos:end="47:58">SCHEMA_META_TYPE_OBJECT</name>

            <operator pos:start="49:13" pos:end="49:14">&amp;&amp;</operator> <operator pos:start="49:16" pos:end="49:16">!</operator><name pos:start="49:17" pos:end="49:42"><name pos:start="49:17" pos:end="49:24">ret_type</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:27">u</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:34">object</name><operator pos:start="49:35" pos:end="49:35">.</operator><name pos:start="49:36" pos:end="49:42">members</name></name></expr>)</condition> <block pos:start="49:45" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:17">test_name</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:55"><name pos:start="57:21" pos:end="57:35">g_strdup_printf</name><argument_list pos:start="57:36" pos:end="57:55">(<argument pos:start="57:37" pos:end="57:44"><expr pos:start="57:37" pos:end="57:44"><literal type="string" pos:start="57:37" pos:end="57:44">"qmp/%s"</literal></expr></argument>, <argument pos:start="57:47" pos:end="57:54"><expr pos:start="57:47" pos:end="57:54"><name pos:start="57:47" pos:end="57:54"><name pos:start="57:47" pos:end="57:48">si</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:54">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><call pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:27">qtest_add_data_func</name><argument_list pos:start="59:28" pos:end="59:60">(<argument pos:start="59:29" pos:end="59:37"><expr pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:37">test_name</name></expr></argument>, <argument pos:start="59:40" pos:end="59:47"><expr pos:start="59:40" pos:end="59:47"><name pos:start="59:40" pos:end="59:47"><name pos:start="59:40" pos:end="59:41">si</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:47">name</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:59"><expr pos:start="59:50" pos:end="59:59"><name pos:start="59:50" pos:end="59:59">test_query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
