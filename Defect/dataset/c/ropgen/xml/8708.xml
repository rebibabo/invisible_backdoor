<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8708.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_mb_info</name><parameter_list pos:start="1:26" pos:end="3:63">(<parameter pos:start="1:27" pos:end="1:45"><decl pos:start="1:27" pos:end="1:45"><type pos:start="1:27" pos:end="1:45"><name pos:start="1:27" pos:end="1:40">IVI5DecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:58">IVIBandDesc</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">band</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:33">IVITile</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">tile</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:62"><decl pos:start="3:42" pos:end="3:62"><type pos:start="3:42" pos:end="3:62"><name pos:start="3:42" pos:end="3:55">AVCodecContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:13">

    <decl_stmt pos:start="7:5" pos:end="9:38"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>         <name pos:start="7:17" pos:end="7:17">x</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">y</name></decl>, <decl pos:start="7:23" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:26">mv_x</name></decl>, <decl pos:start="7:29" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:32">mv_y</name></decl>, <decl pos:start="7:35" pos:end="7:42"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:42">mv_delta</name></decl>, <decl pos:start="7:45" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:45" pos:end="7:48">offs</name></decl>, <decl pos:start="7:51" pos:end="7:59"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:51" pos:end="7:59">mb_offset</name></decl>,

                <decl pos:start="9:17" pos:end="9:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:17" pos:end="9:24">mv_scale</name></decl>, <decl pos:start="9:27" pos:end="9:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="9:27" pos:end="9:37">blks_per_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:13">IVIMbInfo</name>   <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">mb</name></decl>, <decl pos:start="11:22" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">ref_mb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:57"><decl pos:start="13:5" pos:end="13:56"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>         <name pos:start="13:17" pos:end="13:26">row_offset</name> <init pos:start="13:28" pos:end="13:56">= <expr pos:start="13:30" pos:end="13:56"><name pos:start="13:30" pos:end="13:42"><name pos:start="13:30" pos:end="13:33">band</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">mb_size</name></name> <operator pos:start="13:44" pos:end="13:44">*</operator> <name pos:start="13:46" pos:end="13:56"><name pos:start="13:46" pos:end="13:49">band</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:56">pitch</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:6">mb</name>     <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:22"><name pos:start="17:14" pos:end="17:17">tile</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:10">ref_mb</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:26"><name pos:start="19:14" pos:end="19:17">tile</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">ref_mbs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:8">offs</name>   <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:23"><name pos:start="21:14" pos:end="21:17">tile</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">ypos</name></name> <operator pos:start="21:25" pos:end="21:25">*</operator> <name pos:start="21:27" pos:end="21:37"><name pos:start="21:27" pos:end="21:30">band</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">pitch</name></name> <operator pos:start="21:39" pos:end="21:39">+</operator> <name pos:start="21:41" pos:end="21:50"><name pos:start="21:41" pos:end="21:44">tile</name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:50">xpos</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:41">/* scale factor for motion vectors */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:77"><expr pos:start="27:5" pos:end="27:76"><name pos:start="27:5" pos:end="27:12">mv_scale</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <operator pos:start="27:16" pos:end="27:16">(</operator><name pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:19">ctx</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">planes</name><index pos:start="27:28" pos:end="27:30">[<expr pos:start="27:29" pos:end="27:29"><literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>]</index></name><operator pos:start="27:31" pos:end="27:31">.</operator><name pos:start="27:32" pos:end="27:39"><name pos:start="27:32" pos:end="27:36">bands</name><index pos:start="27:37" pos:end="27:39">[<expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">0</literal></expr>]</index></name><operator pos:start="27:40" pos:end="27:40">.</operator><name pos:start="27:41" pos:end="27:47">mb_size</name> <operator pos:start="27:49" pos:end="27:50">&gt;&gt;</operator> <literal type="number" pos:start="27:52" pos:end="27:52">3</literal><operator pos:start="27:53" pos:end="27:53">)</operator> <operator pos:start="27:55" pos:end="27:55">-</operator> <operator pos:start="27:57" pos:end="27:57">(</operator><name pos:start="27:58" pos:end="27:70"><name pos:start="27:58" pos:end="27:61">band</name><operator pos:start="27:62" pos:end="27:63">-&gt;</operator><name pos:start="27:64" pos:end="27:70">mb_size</name></name> <operator pos:start="27:72" pos:end="27:73">&gt;&gt;</operator> <literal type="number" pos:start="27:75" pos:end="27:75">3</literal><operator pos:start="27:76" pos:end="27:76">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:8">mv_x</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <name pos:start="29:12" pos:end="29:15">mv_y</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="215:5">for <control pos:start="33:9" pos:end="33:77">(<init pos:start="33:10" pos:end="33:24"><expr pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:10">y</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:23"><name pos:start="33:14" pos:end="33:17">tile</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:23">ypos</name></name></expr>;</init> <condition pos:start="33:26" pos:end="33:57"><expr pos:start="33:26" pos:end="33:56"><name pos:start="33:26" pos:end="33:26">y</name> <operator pos:start="33:28" pos:end="33:28">&lt;</operator> <operator pos:start="33:30" pos:end="33:30">(</operator><name pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:34">tile</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:40">ypos</name></name> <operator pos:start="33:42" pos:end="33:42">+</operator> <name pos:start="33:44" pos:end="33:55"><name pos:start="33:44" pos:end="33:47">tile</name><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:55">height</name></name><operator pos:start="33:56" pos:end="33:56">)</operator></expr>;</condition> <incr pos:start="33:59" pos:end="33:76"><expr pos:start="33:59" pos:end="33:76"><name pos:start="33:59" pos:end="33:59">y</name> <operator pos:start="33:61" pos:end="33:62">+=</operator> <name pos:start="33:64" pos:end="33:76"><name pos:start="33:64" pos:end="33:67">band</name><operator pos:start="33:68" pos:end="33:69">-&gt;</operator><name pos:start="33:70" pos:end="33:76">mb_size</name></name></expr></incr>)</control> <block pos:start="33:79" pos:end="215:5">{<block_content pos:start="35:9" pos:end="213:27">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:17">mb_offset</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:24">offs</name></expr>;</expr_stmt>



        <for pos:start="39:9" pos:end="209:9">for <control pos:start="39:13" pos:end="39:80">(<init pos:start="39:14" pos:end="39:28"><expr pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:14">x</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:27"><name pos:start="39:18" pos:end="39:21">tile</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:27">xpos</name></name></expr>;</init> <condition pos:start="39:30" pos:end="39:60"><expr pos:start="39:30" pos:end="39:59"><name pos:start="39:30" pos:end="39:30">x</name> <operator pos:start="39:32" pos:end="39:32">&lt;</operator> <operator pos:start="39:34" pos:end="39:34">(</operator><name pos:start="39:35" pos:end="39:44"><name pos:start="39:35" pos:end="39:38">tile</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:44">xpos</name></name> <operator pos:start="39:46" pos:end="39:46">+</operator> <name pos:start="39:48" pos:end="39:58"><name pos:start="39:48" pos:end="39:51">tile</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:58">width</name></name><operator pos:start="39:59" pos:end="39:59">)</operator></expr>;</condition> <incr pos:start="39:62" pos:end="39:79"><expr pos:start="39:62" pos:end="39:79"><name pos:start="39:62" pos:end="39:62">x</name> <operator pos:start="39:64" pos:end="39:65">+=</operator> <name pos:start="39:67" pos:end="39:79"><name pos:start="39:67" pos:end="39:70">band</name><operator pos:start="39:71" pos:end="39:72">-&gt;</operator><name pos:start="39:73" pos:end="39:79">mb_size</name></name></expr></incr>)</control> <block pos:start="39:82" pos:end="209:9">{<block_content pos:start="41:13" pos:end="207:39">

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:14">mb</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">xpos</name></name>     <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:28">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:14">mb</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">ypos</name></name>     <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:28">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:37"><expr pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:14">mb</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:24">buf_offs</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:36">mb_offset</name></expr>;</expr_stmt>



            <if_stmt pos:start="49:13" pos:end="197:13"><if pos:start="49:13" pos:end="101:13">if <condition pos:start="49:16" pos:end="49:36">(<expr pos:start="49:17" pos:end="49:35"><call pos:start="49:17" pos:end="49:35"><name pos:start="49:17" pos:end="49:25">get_bits1</name><argument_list pos:start="49:26" pos:end="49:35">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:34"><name pos:start="49:28" pos:end="49:30">ctx</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:34">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:38" pos:end="101:13">{<block_content pos:start="51:17" pos:end="99:17">

                <if_stmt pos:start="51:17" pos:end="57:17"><if pos:start="51:17" pos:end="57:17">if <condition pos:start="51:20" pos:end="51:55">(<expr pos:start="51:21" pos:end="51:54"><name pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:23">ctx</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:35">frame_type</name></name> <operator pos:start="51:37" pos:end="51:38">==</operator> <name pos:start="51:40" pos:end="51:54">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="51:57" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:30">

                    <expr_stmt pos:start="53:21" pos:end="53:91"><expr pos:start="53:21" pos:end="53:90"><call pos:start="53:21" pos:end="53:90"><name pos:start="53:21" pos:end="53:26">av_log</name><argument_list pos:start="53:27" pos:end="53:90">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">avctx</name></expr></argument>, <argument pos:start="53:35" pos:end="53:46"><expr pos:start="53:35" pos:end="53:46"><name pos:start="53:35" pos:end="53:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:49" pos:end="53:89"><expr pos:start="53:49" pos:end="53:89"><literal type="string" pos:start="53:49" pos:end="53:89">"Empty macroblock in an INTRA picture!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="55:21" pos:end="55:30">return <expr pos:start="55:28" pos:end="55:29"><operator pos:start="55:28" pos:end="55:28">-</operator><literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:29"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:18">mb</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:24">type</name></name> <operator pos:start="59:26" pos:end="59:26">=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:31" pos:end="59:70">/* empty macroblocks are always INTER */</comment>

                <expr_stmt pos:start="61:17" pos:end="61:29"><expr pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:18">mb</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:23">cbp</name></name>  <operator pos:start="61:26" pos:end="61:26">=</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:31" pos:end="61:56">/* all blocks are empty */</comment>



                <expr_stmt pos:start="65:17" pos:end="65:32"><expr pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:18">mb</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:27">q_delta</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <literal type="number" pos:start="65:31" pos:end="65:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="67:17" pos:end="75:17"><if pos:start="67:17" pos:end="75:17">if <condition pos:start="67:20" pos:end="67:78">(<expr pos:start="67:21" pos:end="67:77"><operator pos:start="67:21" pos:end="67:21">!</operator><name pos:start="67:22" pos:end="67:32"><name pos:start="67:22" pos:end="67:25">band</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:32">plane</name></name> <operator pos:start="67:34" pos:end="67:35">&amp;&amp;</operator> <operator pos:start="67:37" pos:end="67:37">!</operator><name pos:start="67:38" pos:end="67:51"><name pos:start="67:38" pos:end="67:41">band</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:51">band_num</name></name> <operator pos:start="67:53" pos:end="67:54">&amp;&amp;</operator> <operator pos:start="67:56" pos:end="67:56">(</operator><name pos:start="67:57" pos:end="67:72"><name pos:start="67:57" pos:end="67:59">ctx</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:72">frame_flags</name></name> <operator pos:start="67:74" pos:end="67:74">&amp;</operator> <literal type="number" pos:start="67:76" pos:end="67:76">8</literal><operator pos:start="67:77" pos:end="67:77">)</operator></expr>)</condition> <block pos:start="67:80" pos:end="75:17">{<block_content pos:start="69:21" pos:end="73:60">

                    <expr_stmt pos:start="69:21" pos:end="71:60"><expr pos:start="69:21" pos:end="71:59"><name pos:start="69:21" pos:end="69:31"><name pos:start="69:21" pos:end="69:22">mb</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:31">q_delta</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <call pos:start="69:35" pos:end="71:59"><name pos:start="69:35" pos:end="69:42">get_vlc2</name><argument_list pos:start="69:43" pos:end="71:59">(<argument pos:start="69:44" pos:end="69:51"><expr pos:start="69:44" pos:end="69:51"><operator pos:start="69:44" pos:end="69:44">&amp;</operator><name pos:start="69:45" pos:end="69:51"><name pos:start="69:45" pos:end="69:47">ctx</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:51">gb</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:75"><expr pos:start="69:54" pos:end="69:75"><name pos:start="69:54" pos:end="69:75"><name pos:start="69:54" pos:end="69:56">ctx</name><operator pos:start="69:57" pos:end="69:58">-&gt;</operator><name pos:start="69:59" pos:end="69:64">mb_vlc</name><operator pos:start="69:65" pos:end="69:65">.</operator><name pos:start="69:66" pos:end="69:68">tab</name><operator pos:start="69:69" pos:end="69:70">-&gt;</operator><name pos:start="69:71" pos:end="69:75">table</name></name></expr></argument>,

                                           <argument pos:start="71:44" pos:end="71:55"><expr pos:start="71:44" pos:end="71:55"><name pos:start="71:44" pos:end="71:55">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="71:58" pos:end="71:58"><expr pos:start="71:58" pos:end="71:58"><literal type="number" pos:start="71:58" pos:end="71:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:60"><expr pos:start="73:21" pos:end="73:59"><name pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:22">mb</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:31">q_delta</name></name> <operator pos:start="73:33" pos:end="73:33">=</operator> <call pos:start="73:35" pos:end="73:59"><name pos:start="73:35" pos:end="73:46">IVI_TOSIGNED</name><argument_list pos:start="73:47" pos:end="73:59">(<argument pos:start="73:48" pos:end="73:58"><expr pos:start="73:48" pos:end="73:58"><name pos:start="73:48" pos:end="73:58"><name pos:start="73:48" pos:end="73:49">mb</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:58">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="79:17" pos:end="79:40"><expr pos:start="79:17" pos:end="79:39"><name pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:18">mb</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:24">mv_x</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <name pos:start="79:28" pos:end="79:35"><name pos:start="79:28" pos:end="79:29">mb</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:35">mv_y</name></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <literal type="number" pos:start="79:39" pos:end="79:39">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="79:42" pos:end="79:69">/* no motion vector coded */</comment>

                <if_stmt pos:start="81:17" pos:end="99:17"><if pos:start="81:17" pos:end="99:17">if <condition pos:start="81:20" pos:end="81:37">(<expr pos:start="81:21" pos:end="81:36"><name pos:start="81:21" pos:end="81:36"><name pos:start="81:21" pos:end="81:24">band</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:36">inherit_mv</name></name></expr>)</condition><block pos:start="81:38" pos:end="99:17">{<block_content pos:start="85:21" pos:end="97:21">

                    <comment type="block" pos:start="83:21" pos:end="83:51">/* motion vector inheritance */</comment>

                    <if_stmt pos:start="85:21" pos:end="97:21"><if pos:start="85:21" pos:end="91:21">if <condition pos:start="85:24" pos:end="85:33">(<expr pos:start="85:25" pos:end="85:32"><name pos:start="85:25" pos:end="85:32">mv_scale</name></expr>)</condition> <block pos:start="85:35" pos:end="91:21">{<block_content pos:start="87:25" pos:end="89:72">

                        <expr_stmt pos:start="87:25" pos:end="87:72"><expr pos:start="87:25" pos:end="87:71"><name pos:start="87:25" pos:end="87:32"><name pos:start="87:25" pos:end="87:26">mb</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:32">mv_x</name></name> <operator pos:start="87:34" pos:end="87:34">=</operator> <call pos:start="87:36" pos:end="87:71"><name pos:start="87:36" pos:end="87:47">ivi_scale_mv</name><argument_list pos:start="87:48" pos:end="87:71">(<argument pos:start="87:49" pos:end="87:60"><expr pos:start="87:49" pos:end="87:60"><name pos:start="87:49" pos:end="87:60"><name pos:start="87:49" pos:end="87:54">ref_mb</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:60">mv_x</name></name></expr></argument>, <argument pos:start="87:63" pos:end="87:70"><expr pos:start="87:63" pos:end="87:70"><name pos:start="87:63" pos:end="87:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="89:25" pos:end="89:72"><expr pos:start="89:25" pos:end="89:71"><name pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:26">mb</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:32">mv_y</name></name> <operator pos:start="89:34" pos:end="89:34">=</operator> <call pos:start="89:36" pos:end="89:71"><name pos:start="89:36" pos:end="89:47">ivi_scale_mv</name><argument_list pos:start="89:48" pos:end="89:71">(<argument pos:start="89:49" pos:end="89:60"><expr pos:start="89:49" pos:end="89:60"><name pos:start="89:49" pos:end="89:60"><name pos:start="89:49" pos:end="89:54">ref_mb</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:60">mv_y</name></name></expr></argument>, <argument pos:start="89:63" pos:end="89:70"><expr pos:start="89:63" pos:end="89:70"><name pos:start="89:63" pos:end="89:70">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="91:23" pos:end="97:21">else <block pos:start="91:28" pos:end="97:21">{<block_content pos:start="93:25" pos:end="95:48">

                        <expr_stmt pos:start="93:25" pos:end="93:48"><expr pos:start="93:25" pos:end="93:47"><name pos:start="93:25" pos:end="93:32"><name pos:start="93:25" pos:end="93:26">mb</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:32">mv_x</name></name> <operator pos:start="93:34" pos:end="93:34">=</operator> <name pos:start="93:36" pos:end="93:47"><name pos:start="93:36" pos:end="93:41">ref_mb</name><operator pos:start="93:42" pos:end="93:43">-&gt;</operator><name pos:start="93:44" pos:end="93:47">mv_x</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:48"><expr pos:start="95:25" pos:end="95:47"><name pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:26">mb</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:32">mv_y</name></name> <operator pos:start="95:34" pos:end="95:34">=</operator> <name pos:start="95:36" pos:end="95:47"><name pos:start="95:36" pos:end="95:41">ref_mb</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:47">mv_y</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="101:15" pos:end="197:13">else <block pos:start="101:20" pos:end="197:13">{<block_content pos:start="103:17" pos:end="195:17">

                <if_stmt pos:start="103:17" pos:end="115:17"><if pos:start="103:17" pos:end="107:17">if <condition pos:start="103:20" pos:end="103:37">(<expr pos:start="103:21" pos:end="103:36"><name pos:start="103:21" pos:end="103:36"><name pos:start="103:21" pos:end="103:24">band</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:36">inherit_mv</name></name></expr>)</condition> <block pos:start="103:39" pos:end="107:17">{<block_content pos:start="105:21" pos:end="105:44">

                    <expr_stmt pos:start="105:21" pos:end="105:44"><expr pos:start="105:21" pos:end="105:43"><name pos:start="105:21" pos:end="105:28"><name pos:start="105:21" pos:end="105:22">mb</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:28">type</name></name> <operator pos:start="105:30" pos:end="105:30">=</operator> <name pos:start="105:32" pos:end="105:43"><name pos:start="105:32" pos:end="105:37">ref_mb</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:43">type</name></name></expr>;</expr_stmt> <comment type="block" pos:start="105:46" pos:end="105:95">/* copy mb_type from corresponding reference mb */</comment>

                </block_content>}</block></if> <if type="elseif" pos:start="107:19" pos:end="111:17">else if <condition pos:start="107:27" pos:end="107:62">(<expr pos:start="107:28" pos:end="107:61"><name pos:start="107:28" pos:end="107:42"><name pos:start="107:28" pos:end="107:30">ctx</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:42">frame_type</name></name> <operator pos:start="107:44" pos:end="107:45">==</operator> <name pos:start="107:47" pos:end="107:61">FRAMETYPE_INTRA</name></expr>)</condition> <block pos:start="107:64" pos:end="111:17">{<block_content pos:start="109:21" pos:end="109:33">

                    <expr_stmt pos:start="109:21" pos:end="109:33"><expr pos:start="109:21" pos:end="109:32"><name pos:start="109:21" pos:end="109:28"><name pos:start="109:21" pos:end="109:22">mb</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:28">type</name></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <literal type="number" pos:start="109:32" pos:end="109:32">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="109:35" pos:end="109:80">/* mb_type is always INTRA for intra-frames */</comment>

                </block_content>}</block></if> <else pos:start="111:19" pos:end="115:17">else <block pos:start="111:24" pos:end="115:17">{<block_content pos:start="113:21" pos:end="113:51">

                    <expr_stmt pos:start="113:21" pos:end="113:51"><expr pos:start="113:21" pos:end="113:50"><name pos:start="113:21" pos:end="113:28"><name pos:start="113:21" pos:end="113:22">mb</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:28">type</name></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <call pos:start="113:32" pos:end="113:50"><name pos:start="113:32" pos:end="113:40">get_bits1</name><argument_list pos:start="113:41" pos:end="113:50">(<argument pos:start="113:42" pos:end="113:49"><expr pos:start="113:42" pos:end="113:49"><operator pos:start="113:42" pos:end="113:42">&amp;</operator><name pos:start="113:43" pos:end="113:49"><name pos:start="113:43" pos:end="113:45">ctx</name><operator pos:start="113:46" pos:end="113:47">-&gt;</operator><name pos:start="113:48" pos:end="113:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="119:17" pos:end="119:70"><expr pos:start="119:17" pos:end="119:69"><name pos:start="119:17" pos:end="119:27">blks_per_mb</name> <operator pos:start="119:29" pos:end="119:29">=</operator> <ternary pos:start="119:31" pos:end="119:69"><condition pos:start="119:31" pos:end="119:63"><expr pos:start="119:31" pos:end="119:61"><name pos:start="119:31" pos:end="119:43"><name pos:start="119:31" pos:end="119:34">band</name><operator pos:start="119:35" pos:end="119:36">-&gt;</operator><name pos:start="119:37" pos:end="119:43">mb_size</name></name> <operator pos:start="119:45" pos:end="119:46">!=</operator> <name pos:start="119:48" pos:end="119:61"><name pos:start="119:48" pos:end="119:51">band</name><operator pos:start="119:52" pos:end="119:53">-&gt;</operator><name pos:start="119:54" pos:end="119:61">blk_size</name></name></expr> ?</condition><then pos:start="119:65" pos:end="119:65"> <expr pos:start="119:65" pos:end="119:65"><literal type="number" pos:start="119:65" pos:end="119:65">4</literal></expr> </then><else pos:start="119:67" pos:end="119:69">: <expr pos:start="119:69" pos:end="119:69"><literal type="number" pos:start="119:69" pos:end="119:69">1</literal></expr></else></ternary></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:58"><expr pos:start="121:17" pos:end="121:57"><name pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:18">mb</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:23">cbp</name></name> <operator pos:start="121:25" pos:end="121:25">=</operator> <call pos:start="121:27" pos:end="121:57"><name pos:start="121:27" pos:end="121:34">get_bits</name><argument_list pos:start="121:35" pos:end="121:57">(<argument pos:start="121:36" pos:end="121:43"><expr pos:start="121:36" pos:end="121:43"><operator pos:start="121:36" pos:end="121:36">&amp;</operator><name pos:start="121:37" pos:end="121:43"><name pos:start="121:37" pos:end="121:39">ctx</name><operator pos:start="121:40" pos:end="121:41">-&gt;</operator><name pos:start="121:42" pos:end="121:43">gb</name></name></expr></argument>, <argument pos:start="121:46" pos:end="121:56"><expr pos:start="121:46" pos:end="121:56"><name pos:start="121:46" pos:end="121:56">blks_per_mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="125:17" pos:end="125:32"><expr pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:18">mb</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:27">q_delta</name></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <literal type="number" pos:start="125:31" pos:end="125:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="145:17"><if pos:start="127:17" pos:end="145:17">if <condition pos:start="127:20" pos:end="127:41">(<expr pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:24">band</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:40">qdelta_present</name></name></expr>)</condition> <block pos:start="127:43" pos:end="145:17">{<block_content pos:start="129:21" pos:end="143:21">

                    <if_stmt pos:start="129:21" pos:end="143:21"><if pos:start="129:21" pos:end="133:21">if <condition pos:start="129:24" pos:end="129:45">(<expr pos:start="129:25" pos:end="129:44"><name pos:start="129:25" pos:end="129:44"><name pos:start="129:25" pos:end="129:28">band</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:44">inherit_qdelta</name></name></expr>)</condition> <block pos:start="129:47" pos:end="133:21">{<block_content pos:start="131:25" pos:end="131:66">

                        <if_stmt pos:start="131:25" pos:end="131:66"><if pos:start="131:25" pos:end="131:66">if <condition pos:start="131:28" pos:end="131:35">(<expr pos:start="131:29" pos:end="131:34"><name pos:start="131:29" pos:end="131:34">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="131:37" pos:end="131:66"><block_content pos:start="131:37" pos:end="131:66"> <expr_stmt pos:start="131:37" pos:end="131:66"><expr pos:start="131:37" pos:end="131:65"><name pos:start="131:37" pos:end="131:47"><name pos:start="131:37" pos:end="131:38">mb</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:47">q_delta</name></name> <operator pos:start="131:49" pos:end="131:49">=</operator> <name pos:start="131:51" pos:end="131:65"><name pos:start="131:51" pos:end="131:56">ref_mb</name><operator pos:start="131:57" pos:end="131:58">-&gt;</operator><name pos:start="131:59" pos:end="131:65">q_delta</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="133:23" pos:end="143:21">else if <condition pos:start="133:31" pos:end="135:67">(<expr pos:start="133:32" pos:end="135:66"><name pos:start="133:32" pos:end="133:38"><name pos:start="133:32" pos:end="133:33">mb</name><operator pos:start="133:34" pos:end="133:35">-&gt;</operator><name pos:start="133:36" pos:end="133:38">cbp</name></name> <operator pos:start="133:40" pos:end="133:41">||</operator> <operator pos:start="133:43" pos:end="133:43">(</operator><operator pos:start="133:44" pos:end="133:44">!</operator><name pos:start="133:45" pos:end="133:55"><name pos:start="133:45" pos:end="133:48">band</name><operator pos:start="133:49" pos:end="133:50">-&gt;</operator><name pos:start="133:51" pos:end="133:55">plane</name></name> <operator pos:start="133:57" pos:end="133:58">&amp;&amp;</operator> <operator pos:start="133:60" pos:end="133:60">!</operator><name pos:start="133:61" pos:end="133:74"><name pos:start="133:61" pos:end="133:64">band</name><operator pos:start="133:65" pos:end="133:66">-&gt;</operator><name pos:start="133:67" pos:end="133:74">band_num</name></name> <operator pos:start="133:76" pos:end="133:77">&amp;&amp;</operator>

                                           <operator pos:start="135:44" pos:end="135:44">(</operator><name pos:start="135:45" pos:end="135:60"><name pos:start="135:45" pos:end="135:47">ctx</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:60">frame_flags</name></name> <operator pos:start="135:62" pos:end="135:62">&amp;</operator> <literal type="number" pos:start="135:64" pos:end="135:64">8</literal><operator pos:start="135:65" pos:end="135:65">)</operator><operator pos:start="135:66" pos:end="135:66">)</operator></expr>)</condition> <block pos:start="135:69" pos:end="143:21">{<block_content pos:start="137:25" pos:end="141:64">

                        <expr_stmt pos:start="137:25" pos:end="139:64"><expr pos:start="137:25" pos:end="139:63"><name pos:start="137:25" pos:end="137:35"><name pos:start="137:25" pos:end="137:26">mb</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:35">q_delta</name></name> <operator pos:start="137:37" pos:end="137:37">=</operator> <call pos:start="137:39" pos:end="139:63"><name pos:start="137:39" pos:end="137:46">get_vlc2</name><argument_list pos:start="137:47" pos:end="139:63">(<argument pos:start="137:48" pos:end="137:55"><expr pos:start="137:48" pos:end="137:55"><operator pos:start="137:48" pos:end="137:48">&amp;</operator><name pos:start="137:49" pos:end="137:55"><name pos:start="137:49" pos:end="137:51">ctx</name><operator pos:start="137:52" pos:end="137:53">-&gt;</operator><name pos:start="137:54" pos:end="137:55">gb</name></name></expr></argument>, <argument pos:start="137:58" pos:end="137:79"><expr pos:start="137:58" pos:end="137:79"><name pos:start="137:58" pos:end="137:79"><name pos:start="137:58" pos:end="137:60">ctx</name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:68">mb_vlc</name><operator pos:start="137:69" pos:end="137:69">.</operator><name pos:start="137:70" pos:end="137:72">tab</name><operator pos:start="137:73" pos:end="137:74">-&gt;</operator><name pos:start="137:75" pos:end="137:79">table</name></name></expr></argument>,

                                               <argument pos:start="139:48" pos:end="139:59"><expr pos:start="139:48" pos:end="139:59"><name pos:start="139:48" pos:end="139:59">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="139:62" pos:end="139:62"><expr pos:start="139:62" pos:end="139:62"><literal type="number" pos:start="139:62" pos:end="139:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="141:25" pos:end="141:64"><expr pos:start="141:25" pos:end="141:63"><name pos:start="141:25" pos:end="141:35"><name pos:start="141:25" pos:end="141:26">mb</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:35">q_delta</name></name> <operator pos:start="141:37" pos:end="141:37">=</operator> <call pos:start="141:39" pos:end="141:63"><name pos:start="141:39" pos:end="141:50">IVI_TOSIGNED</name><argument_list pos:start="141:51" pos:end="141:63">(<argument pos:start="141:52" pos:end="141:62"><expr pos:start="141:52" pos:end="141:62"><name pos:start="141:52" pos:end="141:62"><name pos:start="141:52" pos:end="141:53">mb</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:62">q_delta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="149:17" pos:end="195:17"><if pos:start="149:17" pos:end="153:17">if <condition pos:start="149:20" pos:end="149:30">(<expr pos:start="149:21" pos:end="149:29"><operator pos:start="149:21" pos:end="149:21">!</operator><name pos:start="149:22" pos:end="149:29"><name pos:start="149:22" pos:end="149:23">mb</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">type</name></name></expr>)</condition> <block pos:start="149:32" pos:end="153:17">{<block_content pos:start="151:21" pos:end="151:44">

                    <expr_stmt pos:start="151:21" pos:end="151:44"><expr pos:start="151:21" pos:end="151:43"><name pos:start="151:21" pos:end="151:28"><name pos:start="151:21" pos:end="151:22">mb</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:28">mv_x</name></name> <operator pos:start="151:30" pos:end="151:30">=</operator> <name pos:start="151:32" pos:end="151:39"><name pos:start="151:32" pos:end="151:33">mb</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:39">mv_y</name></name> <operator pos:start="151:41" pos:end="151:41">=</operator> <literal type="number" pos:start="151:43" pos:end="151:43">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="151:46" pos:end="151:97">/* there is no motion vector in intra-macroblocks */</comment>

                </block_content>}</block></if> <else pos:start="153:19" pos:end="195:17">else <block pos:start="153:24" pos:end="195:17">{<block_content pos:start="155:21" pos:end="193:21">

                    <if_stmt pos:start="155:21" pos:end="193:21"><if pos:start="155:21" pos:end="173:21">if <condition pos:start="155:24" pos:end="155:41">(<expr pos:start="155:25" pos:end="155:40"><name pos:start="155:25" pos:end="155:40"><name pos:start="155:25" pos:end="155:28">band</name><operator pos:start="155:29" pos:end="155:30">-&gt;</operator><name pos:start="155:31" pos:end="155:40">inherit_mv</name></name></expr>)</condition><block pos:start="155:42" pos:end="173:21">{<block_content pos:start="159:25" pos:end="171:25">

                        <comment type="block" pos:start="157:25" pos:end="157:55">/* motion vector inheritance */</comment>

                        <if_stmt pos:start="159:25" pos:end="171:25"><if pos:start="159:25" pos:end="165:25">if <condition pos:start="159:28" pos:end="159:37">(<expr pos:start="159:29" pos:end="159:36"><name pos:start="159:29" pos:end="159:36">mv_scale</name></expr>)</condition> <block pos:start="159:39" pos:end="165:25">{<block_content pos:start="161:29" pos:end="163:76">

                            <expr_stmt pos:start="161:29" pos:end="161:76"><expr pos:start="161:29" pos:end="161:75"><name pos:start="161:29" pos:end="161:36"><name pos:start="161:29" pos:end="161:30">mb</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:36">mv_x</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <call pos:start="161:40" pos:end="161:75"><name pos:start="161:40" pos:end="161:51">ivi_scale_mv</name><argument_list pos:start="161:52" pos:end="161:75">(<argument pos:start="161:53" pos:end="161:64"><expr pos:start="161:53" pos:end="161:64"><name pos:start="161:53" pos:end="161:64"><name pos:start="161:53" pos:end="161:58">ref_mb</name><operator pos:start="161:59" pos:end="161:60">-&gt;</operator><name pos:start="161:61" pos:end="161:64">mv_x</name></name></expr></argument>, <argument pos:start="161:67" pos:end="161:74"><expr pos:start="161:67" pos:end="161:74"><name pos:start="161:67" pos:end="161:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="163:29" pos:end="163:76"><expr pos:start="163:29" pos:end="163:75"><name pos:start="163:29" pos:end="163:36"><name pos:start="163:29" pos:end="163:30">mb</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:36">mv_y</name></name> <operator pos:start="163:38" pos:end="163:38">=</operator> <call pos:start="163:40" pos:end="163:75"><name pos:start="163:40" pos:end="163:51">ivi_scale_mv</name><argument_list pos:start="163:52" pos:end="163:75">(<argument pos:start="163:53" pos:end="163:64"><expr pos:start="163:53" pos:end="163:64"><name pos:start="163:53" pos:end="163:64"><name pos:start="163:53" pos:end="163:58">ref_mb</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:64">mv_y</name></name></expr></argument>, <argument pos:start="163:67" pos:end="163:74"><expr pos:start="163:67" pos:end="163:74"><name pos:start="163:67" pos:end="163:74">mv_scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="165:27" pos:end="171:25">else <block pos:start="165:32" pos:end="171:25">{<block_content pos:start="167:29" pos:end="169:52">

                            <expr_stmt pos:start="167:29" pos:end="167:52"><expr pos:start="167:29" pos:end="167:51"><name pos:start="167:29" pos:end="167:36"><name pos:start="167:29" pos:end="167:30">mb</name><operator pos:start="167:31" pos:end="167:32">-&gt;</operator><name pos:start="167:33" pos:end="167:36">mv_x</name></name> <operator pos:start="167:38" pos:end="167:38">=</operator> <name pos:start="167:40" pos:end="167:51"><name pos:start="167:40" pos:end="167:45">ref_mb</name><operator pos:start="167:46" pos:end="167:47">-&gt;</operator><name pos:start="167:48" pos:end="167:51">mv_x</name></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="169:29" pos:end="169:52"><expr pos:start="169:29" pos:end="169:51"><name pos:start="169:29" pos:end="169:36"><name pos:start="169:29" pos:end="169:30">mb</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:36">mv_y</name></name> <operator pos:start="169:38" pos:end="169:38">=</operator> <name pos:start="169:40" pos:end="169:51"><name pos:start="169:40" pos:end="169:45">ref_mb</name><operator pos:start="169:46" pos:end="169:47">-&gt;</operator><name pos:start="169:48" pos:end="169:51">mv_y</name></name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="173:23" pos:end="193:21">else <block pos:start="173:28" pos:end="193:21">{<block_content pos:start="177:25" pos:end="191:40">

                        <comment type="block" pos:start="175:25" pos:end="175:57">/* decode motion vector deltas */</comment>

                        <expr_stmt pos:start="177:25" pos:end="179:61"><expr pos:start="177:25" pos:end="179:60"><name pos:start="177:25" pos:end="177:32">mv_delta</name> <operator pos:start="177:34" pos:end="177:34">=</operator> <call pos:start="177:36" pos:end="179:60"><name pos:start="177:36" pos:end="177:43">get_vlc2</name><argument_list pos:start="177:44" pos:end="179:60">(<argument pos:start="177:45" pos:end="177:52"><expr pos:start="177:45" pos:end="177:52"><operator pos:start="177:45" pos:end="177:45">&amp;</operator><name pos:start="177:46" pos:end="177:52"><name pos:start="177:46" pos:end="177:48">ctx</name><operator pos:start="177:49" pos:end="177:50">-&gt;</operator><name pos:start="177:51" pos:end="177:52">gb</name></name></expr></argument>, <argument pos:start="177:55" pos:end="177:76"><expr pos:start="177:55" pos:end="177:76"><name pos:start="177:55" pos:end="177:76"><name pos:start="177:55" pos:end="177:57">ctx</name><operator pos:start="177:58" pos:end="177:59">-&gt;</operator><name pos:start="177:60" pos:end="177:65">mb_vlc</name><operator pos:start="177:66" pos:end="177:66">.</operator><name pos:start="177:67" pos:end="177:69">tab</name><operator pos:start="177:70" pos:end="177:71">-&gt;</operator><name pos:start="177:72" pos:end="177:76">table</name></name></expr></argument>,

                                            <argument pos:start="179:45" pos:end="179:56"><expr pos:start="179:45" pos:end="179:56"><name pos:start="179:45" pos:end="179:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="179:59" pos:end="179:59"><expr pos:start="179:59" pos:end="179:59"><literal type="number" pos:start="179:59" pos:end="179:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="181:25" pos:end="181:55"><expr pos:start="181:25" pos:end="181:54"><name pos:start="181:25" pos:end="181:28">mv_y</name> <operator pos:start="181:30" pos:end="181:31">+=</operator> <call pos:start="181:33" pos:end="181:54"><name pos:start="181:33" pos:end="181:44">IVI_TOSIGNED</name><argument_list pos:start="181:45" pos:end="181:54">(<argument pos:start="181:46" pos:end="181:53"><expr pos:start="181:46" pos:end="181:53"><name pos:start="181:46" pos:end="181:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="183:25" pos:end="185:61"><expr pos:start="183:25" pos:end="185:60"><name pos:start="183:25" pos:end="183:32">mv_delta</name> <operator pos:start="183:34" pos:end="183:34">=</operator> <call pos:start="183:36" pos:end="185:60"><name pos:start="183:36" pos:end="183:43">get_vlc2</name><argument_list pos:start="183:44" pos:end="185:60">(<argument pos:start="183:45" pos:end="183:52"><expr pos:start="183:45" pos:end="183:52"><operator pos:start="183:45" pos:end="183:45">&amp;</operator><name pos:start="183:46" pos:end="183:52"><name pos:start="183:46" pos:end="183:48">ctx</name><operator pos:start="183:49" pos:end="183:50">-&gt;</operator><name pos:start="183:51" pos:end="183:52">gb</name></name></expr></argument>, <argument pos:start="183:55" pos:end="183:76"><expr pos:start="183:55" pos:end="183:76"><name pos:start="183:55" pos:end="183:76"><name pos:start="183:55" pos:end="183:57">ctx</name><operator pos:start="183:58" pos:end="183:59">-&gt;</operator><name pos:start="183:60" pos:end="183:65">mb_vlc</name><operator pos:start="183:66" pos:end="183:66">.</operator><name pos:start="183:67" pos:end="183:69">tab</name><operator pos:start="183:70" pos:end="183:71">-&gt;</operator><name pos:start="183:72" pos:end="183:76">table</name></name></expr></argument>,

                                            <argument pos:start="185:45" pos:end="185:56"><expr pos:start="185:45" pos:end="185:56"><name pos:start="185:45" pos:end="185:56">IVI_VLC_BITS</name></expr></argument>, <argument pos:start="185:59" pos:end="185:59"><expr pos:start="185:59" pos:end="185:59"><literal type="number" pos:start="185:59" pos:end="185:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:55"><expr pos:start="187:25" pos:end="187:54"><name pos:start="187:25" pos:end="187:28">mv_x</name> <operator pos:start="187:30" pos:end="187:31">+=</operator> <call pos:start="187:33" pos:end="187:54"><name pos:start="187:33" pos:end="187:44">IVI_TOSIGNED</name><argument_list pos:start="187:45" pos:end="187:54">(<argument pos:start="187:46" pos:end="187:53"><expr pos:start="187:46" pos:end="187:53"><name pos:start="187:46" pos:end="187:53">mv_delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="189:25" pos:end="189:40"><expr pos:start="189:25" pos:end="189:39"><name pos:start="189:25" pos:end="189:32"><name pos:start="189:25" pos:end="189:26">mb</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:32">mv_x</name></name> <operator pos:start="189:34" pos:end="189:34">=</operator> <name pos:start="189:36" pos:end="189:39">mv_x</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="191:25" pos:end="191:40"><expr pos:start="191:25" pos:end="191:39"><name pos:start="191:25" pos:end="191:32"><name pos:start="191:25" pos:end="191:26">mb</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:32">mv_y</name></name> <operator pos:start="191:34" pos:end="191:34">=</operator> <name pos:start="191:36" pos:end="191:39">mv_y</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="201:13" pos:end="201:17"><expr pos:start="201:13" pos:end="201:16"><name pos:start="201:13" pos:end="201:14">mb</name><operator pos:start="201:15" pos:end="201:16">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="205:25"><if pos:start="203:13" pos:end="205:25">if <condition pos:start="203:16" pos:end="203:23">(<expr pos:start="203:17" pos:end="203:22"><name pos:start="203:17" pos:end="203:22">ref_mb</name></expr>)</condition><block type="pseudo" pos:start="205:17" pos:end="205:25"><block_content pos:start="205:17" pos:end="205:25">

                <expr_stmt pos:start="205:17" pos:end="205:25"><expr pos:start="205:17" pos:end="205:24"><name pos:start="205:17" pos:end="205:22">ref_mb</name><operator pos:start="205:23" pos:end="205:24">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:39"><expr pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:21">mb_offset</name> <operator pos:start="207:23" pos:end="207:24">+=</operator> <name pos:start="207:26" pos:end="207:38"><name pos:start="207:26" pos:end="207:29">band</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:38">mb_size</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="213:9" pos:end="213:27"><expr pos:start="213:9" pos:end="213:26"><name pos:start="213:9" pos:end="213:12">offs</name> <operator pos:start="213:14" pos:end="213:15">+=</operator> <name pos:start="213:17" pos:end="213:26">row_offset</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="219:5" pos:end="219:29"><expr pos:start="219:5" pos:end="219:28"><call pos:start="219:5" pos:end="219:28"><name pos:start="219:5" pos:end="219:18">align_get_bits</name><argument_list pos:start="219:19" pos:end="219:28">(<argument pos:start="219:20" pos:end="219:27"><expr pos:start="219:20" pos:end="219:27"><operator pos:start="219:20" pos:end="219:20">&amp;</operator><name pos:start="219:21" pos:end="219:27"><name pos:start="219:21" pos:end="219:23">ctx</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="223:5" pos:end="223:13">return <expr pos:start="223:12" pos:end="223:12"><literal type="number" pos:start="223:12" pos:end="223:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
