<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3008.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">do_info_migrate</name><parameter_list pos:start="1:21" pos:end="1:54">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:28">Monitor</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">mon</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:42">QObject</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier><modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:53">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">QDict</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MigrationState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:41">= <expr pos:start="7:25" pos:end="7:41"><name pos:start="7:25" pos:end="7:41">current_migration</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="67:5"><if pos:start="11:5" pos:end="67:5">if <condition pos:start="11:8" pos:end="11:10">(<expr pos:start="11:9" pos:end="11:9"><name pos:start="11:9" pos:end="11:9">s</name></expr>)</condition> <block pos:start="11:12" pos:end="67:5">{<block_content pos:start="13:9" pos:end="65:34">

        <switch pos:start="13:9" pos:end="63:9">switch <condition pos:start="13:16" pos:end="13:33">(<expr pos:start="13:17" pos:end="13:32"><call pos:start="13:17" pos:end="13:32"><name pos:start="13:17" pos:end="13:29"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:29">get_status</name></name><argument_list pos:start="13:30" pos:end="13:32">(<argument pos:start="13:31" pos:end="13:31"><expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:35" pos:end="63:9">{<block_content pos:start="15:9" pos:end="61:18">

        <case pos:start="15:9" pos:end="15:30">case <expr pos:start="15:14" pos:end="15:29"><name pos:start="15:14" pos:end="15:29">MIG_STATE_ACTIVE</name></expr>:</case>

            <expr_stmt pos:start="17:13" pos:end="17:32"><expr pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:17">qdict</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:29">qdict_new</name><argument_list pos:start="17:30" pos:end="17:31">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:67"><expr pos:start="19:13" pos:end="19:66"><call pos:start="19:13" pos:end="19:66"><name pos:start="19:13" pos:end="19:21">qdict_put</name><argument_list pos:start="19:22" pos:end="19:66">(<argument pos:start="19:23" pos:end="19:27"><expr pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:27">qdict</name></expr></argument>, <argument pos:start="19:30" pos:end="19:37"><expr pos:start="19:30" pos:end="19:37"><literal type="string" pos:start="19:30" pos:end="19:37">"status"</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:65"><expr pos:start="19:40" pos:end="19:65"><call pos:start="19:40" pos:end="19:65"><name pos:start="19:40" pos:end="19:55">qstring_from_str</name><argument_list pos:start="19:56" pos:end="19:65">(<argument pos:start="19:57" pos:end="19:64"><expr pos:start="19:57" pos:end="19:64"><literal type="string" pos:start="19:57" pos:end="19:64">"active"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="23:13" pos:end="25:73"><expr pos:start="23:13" pos:end="25:72"><call pos:start="23:13" pos:end="25:72"><name pos:start="23:13" pos:end="23:30">migrate_put_status</name><argument_list pos:start="23:31" pos:end="25:72">(<argument pos:start="23:32" pos:end="23:36"><expr pos:start="23:32" pos:end="23:36"><name pos:start="23:32" pos:end="23:36">qdict</name></expr></argument>, <argument pos:start="23:39" pos:end="23:43"><expr pos:start="23:39" pos:end="23:43"><literal type="string" pos:start="23:39" pos:end="23:43">"ram"</literal></expr></argument>, <argument pos:start="23:46" pos:end="23:68"><expr pos:start="23:46" pos:end="23:68"><call pos:start="23:46" pos:end="23:68"><name pos:start="23:46" pos:end="23:66">ram_bytes_transferred</name><argument_list pos:start="23:67" pos:end="23:68">()</argument_list></call></expr></argument>,

                               <argument pos:start="25:32" pos:end="25:52"><expr pos:start="25:32" pos:end="25:52"><call pos:start="25:32" pos:end="25:52"><name pos:start="25:32" pos:end="25:50">ram_bytes_remaining</name><argument_list pos:start="25:51" pos:end="25:52">()</argument_list></call></expr></argument>, <argument pos:start="25:55" pos:end="25:71"><expr pos:start="25:55" pos:end="25:71"><call pos:start="25:55" pos:end="25:71"><name pos:start="25:55" pos:end="25:69">ram_bytes_total</name><argument_list pos:start="25:70" pos:end="25:71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="29:13" pos:end="37:13"><if pos:start="29:13" pos:end="37:13">if <condition pos:start="29:16" pos:end="29:33">(<expr pos:start="29:17" pos:end="29:32"><call pos:start="29:17" pos:end="29:32"><name pos:start="29:17" pos:end="29:30">blk_mig_active</name><argument_list pos:start="29:31" pos:end="29:32">()</argument_list></call></expr>)</condition> <block pos:start="29:35" pos:end="37:13">{<block_content pos:start="31:17" pos:end="35:58">

                <expr_stmt pos:start="31:17" pos:end="35:58"><expr pos:start="31:17" pos:end="35:57"><call pos:start="31:17" pos:end="35:57"><name pos:start="31:17" pos:end="31:34">migrate_put_status</name><argument_list pos:start="31:35" pos:end="35:57">(<argument pos:start="31:36" pos:end="31:40"><expr pos:start="31:36" pos:end="31:40"><name pos:start="31:36" pos:end="31:40">qdict</name></expr></argument>, <argument pos:start="31:43" pos:end="31:48"><expr pos:start="31:43" pos:end="31:48"><literal type="string" pos:start="31:43" pos:end="31:48">"disk"</literal></expr></argument>, <argument pos:start="31:51" pos:end="31:77"><expr pos:start="31:51" pos:end="31:77"><call pos:start="31:51" pos:end="31:77"><name pos:start="31:51" pos:end="31:75">blk_mig_bytes_transferred</name><argument_list pos:start="31:76" pos:end="31:77">()</argument_list></call></expr></argument>,

                                   <argument pos:start="33:36" pos:end="33:60"><expr pos:start="33:36" pos:end="33:60"><call pos:start="33:36" pos:end="33:60"><name pos:start="33:36" pos:end="33:58">blk_mig_bytes_remaining</name><argument_list pos:start="33:59" pos:end="33:60">()</argument_list></call></expr></argument>,

                                   <argument pos:start="35:36" pos:end="35:56"><expr pos:start="35:36" pos:end="35:56"><call pos:start="35:36" pos:end="35:56"><name pos:start="35:36" pos:end="35:54">blk_mig_bytes_total</name><argument_list pos:start="35:55" pos:end="35:56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:21">ret_data</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:31">QOBJECT</name><argument_list pos:start="41:32" pos:end="41:38">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:33">case <expr pos:start="45:14" pos:end="45:32"><name pos:start="45:14" pos:end="45:32">MIG_STATE_COMPLETED</name></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:72"><expr pos:start="47:13" pos:end="47:71"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:21">ret_data</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <call pos:start="47:25" pos:end="47:71"><name pos:start="47:25" pos:end="47:42">qobject_from_jsonf</name><argument_list pos:start="47:43" pos:end="47:71">(<argument pos:start="47:44" pos:end="47:70"><expr pos:start="47:44" pos:end="47:70"><literal type="string" pos:start="47:44" pos:end="47:70">"{ 'status': 'completed' }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        <case pos:start="51:9" pos:end="51:29">case <expr pos:start="51:14" pos:end="51:28"><name pos:start="51:14" pos:end="51:28">MIG_STATE_ERROR</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:69"><expr pos:start="53:13" pos:end="53:68"><operator pos:start="53:13" pos:end="53:13">*</operator><name pos:start="53:14" pos:end="53:21">ret_data</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <call pos:start="53:25" pos:end="53:68"><name pos:start="53:25" pos:end="53:42">qobject_from_jsonf</name><argument_list pos:start="53:43" pos:end="53:68">(<argument pos:start="53:44" pos:end="53:67"><expr pos:start="53:44" pos:end="53:67"><literal type="string" pos:start="53:44" pos:end="53:67">"{ 'status': 'failed' }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="55:13" pos:end="55:18">break;</break>

        <case pos:start="57:9" pos:end="57:33">case <expr pos:start="57:14" pos:end="57:32"><name pos:start="57:14" pos:end="57:32">MIG_STATE_CANCELLED</name></expr>:</case>

            <expr_stmt pos:start="59:13" pos:end="59:72"><expr pos:start="59:13" pos:end="59:71"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:21">ret_data</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="59:71"><name pos:start="59:25" pos:end="59:42">qobject_from_jsonf</name><argument_list pos:start="59:43" pos:end="59:71">(<argument pos:start="59:44" pos:end="59:70"><expr pos:start="59:44" pos:end="59:70"><literal type="string" pos:start="59:44" pos:end="59:70">"{ 'status': 'cancelled' }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="61:13" pos:end="61:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><call pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:33">(<argument pos:start="65:16" pos:end="65:32"><expr pos:start="65:16" pos:end="65:32"><operator pos:start="65:16" pos:end="65:16">*</operator><name pos:start="65:17" pos:end="65:24">ret_data</name> <operator pos:start="65:26" pos:end="65:27">!=</operator> <name pos:start="65:29" pos:end="65:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
