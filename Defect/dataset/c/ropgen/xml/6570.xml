<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6570.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">patch_reloc</name><parameter_list pos:start="1:24" pos:end="3:56">(<parameter pos:start="1:25" pos:end="1:47"><decl pos:start="1:25" pos:end="1:47"><type pos:start="1:25" pos:end="1:47"><name pos:start="1:25" pos:end="1:37">tcg_insn_unit</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">code_ptr</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:57">type</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:32">intptr_t</name></type> <name pos:start="3:34" pos:end="3:38">value</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:55"><decl pos:start="3:41" pos:end="3:55"><type pos:start="3:41" pos:end="3:55"><name pos:start="3:41" pos:end="3:48">intptr_t</name></type> <name pos:start="3:50" pos:end="3:55">addend</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">tcg_insn_unit</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">target</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">tcg_insn_unit</name></type> <name pos:start="9:19" pos:end="9:21">old</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:9">value</name> <operator pos:start="13:11" pos:end="13:12">+=</operator> <name pos:start="13:14" pos:end="13:19">addend</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:10">target</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <operator pos:start="15:14" pos:end="15:14">(</operator><name pos:start="15:15" pos:end="15:27">tcg_insn_unit</name> <operator pos:start="15:29" pos:end="15:29">*</operator><operator pos:start="15:30" pos:end="15:30">)</operator><name pos:start="15:31" pos:end="15:35">value</name></expr>;</expr_stmt>



    <switch pos:start="19:5" pos:end="49:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">type</name></expr>)</condition> <block pos:start="19:19" pos:end="49:5">{<block_content pos:start="21:5" pos:end="47:20">

    <case pos:start="21:5" pos:end="21:21">case <expr pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:20">R_PPC_REL14</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><call pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:18">reloc_pc14</name><argument_list pos:start="23:19" pos:end="23:36">(<argument pos:start="23:20" pos:end="23:27"><expr pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:27">code_ptr</name></expr></argument>, <argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><name pos:start="23:30" pos:end="23:35">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:21">case <expr pos:start="27:10" pos:end="27:20"><name pos:start="27:10" pos:end="27:20">R_PPC_REL24</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:37"><expr pos:start="29:9" pos:end="29:36"><call pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:18">reloc_pc24</name><argument_list pos:start="29:19" pos:end="29:36">(<argument pos:start="29:20" pos:end="29:27"><expr pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:27">code_ptr</name></expr></argument>, <argument pos:start="29:30" pos:end="29:35"><expr pos:start="29:30" pos:end="29:35"><name pos:start="29:30" pos:end="29:35">target</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:22">case <expr pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:21">R_PPC_ADDR16</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:40"><expr pos:start="35:9" pos:end="35:39"><call pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:14">assert</name><argument_list pos:start="35:15" pos:end="35:39">(<argument pos:start="35:16" pos:end="35:38"><expr pos:start="35:16" pos:end="35:38"><name pos:start="35:16" pos:end="35:20">value</name> <operator pos:start="35:22" pos:end="35:23">==</operator> <operator pos:start="35:25" pos:end="35:25">(</operator><name pos:start="35:26" pos:end="35:32">int16_t</name><operator pos:start="35:33" pos:end="35:33">)</operator><name pos:start="35:34" pos:end="35:38">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:11">old</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">*</operator><name pos:start="37:16" pos:end="37:23">code_ptr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:11">old</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:42"><name pos:start="39:15" pos:end="39:23">deposit32</name><argument_list pos:start="39:24" pos:end="39:42">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">old</name></expr></argument>, <argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><literal type="number" pos:start="39:30" pos:end="39:30">0</literal></expr></argument>, <argument pos:start="39:33" pos:end="39:34"><expr pos:start="39:33" pos:end="39:34"><literal type="number" pos:start="39:33" pos:end="39:34">16</literal></expr></argument>, <argument pos:start="39:37" pos:end="39:41"><expr pos:start="39:37" pos:end="39:41"><name pos:start="39:37" pos:end="39:41">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:17">code_ptr</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:23">old</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <default pos:start="45:5" pos:end="45:12">default:</default>

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><call pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:17">tcg_abort</name><argument_list pos:start="47:18" pos:end="47:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
