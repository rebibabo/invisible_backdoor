<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21225.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">kempf_decode_tile</name><parameter_list pos:start="1:29" pos:end="3:62">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:39">G2MContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">c</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:54">tile_x</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:66">tile_y</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">src</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:61">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="201:1">{<block_content pos:start="7:5" pos:end="199:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">hdr</name></decl>, <decl pos:start="9:14" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:18">zsize</name></decl>, <decl pos:start="9:21" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:24">npal</name></decl>, <decl pos:start="9:27" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:30">tidx</name> <init pos:start="9:32" pos:end="9:35">= <expr pos:start="9:34" pos:end="9:35"><operator pos:start="9:34" pos:end="9:34">-</operator><literal type="number" pos:start="9:35" pos:end="9:35">1</literal></expr></init></decl>, <decl pos:start="9:38" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:38" pos:end="9:40">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">src_end</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:32">src</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:43">src_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:15">pal</name><index pos:start="15:16" pos:end="15:20">[<expr pos:start="15:17" pos:end="15:19"><literal type="number" pos:start="15:17" pos:end="15:19">768</literal></expr>]</index></name></decl>, <decl pos:start="15:23" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:23" pos:end="15:31"><name pos:start="15:23" pos:end="15:28">transp</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:54"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">uLongf</name></type> <name pos:start="17:12" pos:end="17:15">dlen</name> <init pos:start="17:17" pos:end="17:54">= <expr pos:start="17:19" pos:end="17:54"><operator pos:start="17:19" pos:end="17:19">(</operator><name pos:start="17:20" pos:end="17:32"><name pos:start="17:20" pos:end="17:20">c</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:32">tile_width</name></name> <operator pos:start="17:34" pos:end="17:34">+</operator> <literal type="number" pos:start="17:36" pos:end="17:36">1</literal><operator pos:start="17:37" pos:end="17:37">)</operator> <operator pos:start="17:39" pos:end="17:39">*</operator> <name pos:start="17:41" pos:end="17:54"><name pos:start="17:41" pos:end="17:41">c</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:54">tile_height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">sub_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">nblocks</name></decl>, <decl pos:start="21:18" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:18" pos:end="21:24">cblocks</name></decl>, <decl pos:start="21:27" pos:end="21:33"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:27" pos:end="21:33">bstride</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:12"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:12">bits</name></decl>, <decl pos:start="23:15" pos:end="23:20"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:20">bitbuf</name></decl>, <decl pos:start="23:23" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:23" pos:end="23:27">coded</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="27:64"><decl pos:start="25:5" pos:end="27:63"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">uint8_t</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:16">dst</name> <init pos:start="25:18" pos:end="27:63">= <expr pos:start="25:20" pos:end="27:63"><name pos:start="25:20" pos:end="25:30"><name pos:start="25:20" pos:end="25:20">c</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:30">framebuf</name></name> <operator pos:start="25:32" pos:end="25:32">+</operator> <name pos:start="25:34" pos:end="25:39">tile_x</name> <operator pos:start="25:41" pos:end="25:41">*</operator> <name pos:start="25:43" pos:end="25:55"><name pos:start="25:43" pos:end="25:43">c</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:55">tile_width</name></name> <operator pos:start="25:57" pos:end="25:57">*</operator> <literal type="number" pos:start="25:59" pos:end="25:61">3</literal> <operator pos:start="25:61" pos:end="25:61">+</operator>

                   <name pos:start="27:20" pos:end="27:25">tile_y</name> <operator pos:start="27:27" pos:end="27:27">*</operator> <name pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:29">c</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:42">tile_height</name></name> <operator pos:start="27:44" pos:end="27:44">*</operator> <name pos:start="27:46" pos:end="27:63"><name pos:start="27:46" pos:end="27:46">c</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:63">framebuf_stride</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:16">src_size</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <literal type="number" pos:start="31:20" pos:end="31:20">2</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:9">width</name>  <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:70"><name pos:start="37:14" pos:end="37:18">FFMIN</name><argument_list pos:start="37:19" pos:end="37:70">(<argument pos:start="37:20" pos:end="37:53"><expr pos:start="37:20" pos:end="37:53"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">c</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">width</name></name>  <operator pos:start="37:30" pos:end="37:30">-</operator> <name pos:start="37:32" pos:end="37:37">tile_x</name> <operator pos:start="37:39" pos:end="37:39">*</operator> <name pos:start="37:41" pos:end="37:53"><name pos:start="37:41" pos:end="37:41">c</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:53">tile_width</name></name></expr></argument>,  <argument pos:start="37:57" pos:end="37:69"><expr pos:start="37:57" pos:end="37:69"><name pos:start="37:57" pos:end="37:69"><name pos:start="37:57" pos:end="37:57">c</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:69">tile_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:72"><expr pos:start="39:5" pos:end="39:71"><name pos:start="39:5" pos:end="39:10">height</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:71"><name pos:start="39:14" pos:end="39:18">FFMIN</name><argument_list pos:start="39:19" pos:end="39:71">(<argument pos:start="39:20" pos:end="39:54"><expr pos:start="39:20" pos:end="39:54"><name pos:start="39:20" pos:end="39:28"><name pos:start="39:20" pos:end="39:20">c</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:28">height</name></name> <operator pos:start="39:30" pos:end="39:30">-</operator> <name pos:start="39:32" pos:end="39:37">tile_y</name> <operator pos:start="39:39" pos:end="39:39">*</operator> <name pos:start="39:41" pos:end="39:54"><name pos:start="39:41" pos:end="39:41">c</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:54">tile_height</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:70"><expr pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:57">c</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:70">tile_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:17"><expr pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:7">hdr</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <operator pos:start="43:11" pos:end="43:11">*</operator><name pos:start="43:12" pos:end="43:14">src</name><operator pos:start="43:15" pos:end="43:16">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:12">sub_type</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:18">hdr</name> <operator pos:start="45:20" pos:end="45:21">&gt;&gt;</operator> <literal type="number" pos:start="45:23" pos:end="45:23">5</literal></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="69:5"><if pos:start="47:5" pos:end="63:5">if <condition pos:start="47:8" pos:end="47:22">(<expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:16">sub_type</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <literal type="number" pos:start="47:21" pos:end="47:21">0</literal></expr>)</condition> <block pos:start="47:24" pos:end="63:5">{<block_content pos:start="49:9" pos:end="61:17">

        <decl_stmt pos:start="49:9" pos:end="49:14"><decl pos:start="49:9" pos:end="49:13"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:13">j</name></decl>;</decl_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:14">memcpy</name><argument_list pos:start="51:15" pos:end="51:30">(<argument pos:start="51:16" pos:end="51:21"><expr pos:start="51:16" pos:end="51:21"><name pos:start="51:16" pos:end="51:21">transp</name></expr></argument>, <argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">src</name></expr></argument>, <argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><literal type="number" pos:start="51:29" pos:end="51:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:17"><expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:11">src</name> <operator pos:start="53:13" pos:end="53:14">+=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">3</literal></expr>;</expr_stmt>

        <for pos:start="55:9" pos:end="59:47">for <control pos:start="55:13" pos:end="55:63">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">j</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:31"><expr pos:start="55:21" pos:end="55:30"><name pos:start="55:21" pos:end="55:21">j</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:30">height</name></expr>;</condition> <incr pos:start="55:33" pos:end="55:62"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:33">j</name><operator pos:start="55:34" pos:end="55:35">++</operator></expr><operator pos:start="55:36" pos:end="55:36">,</operator> <expr pos:start="55:38" pos:end="55:62"><name pos:start="55:38" pos:end="55:40">dst</name> <operator pos:start="55:42" pos:end="55:43">+=</operator> <name pos:start="55:45" pos:end="55:62"><name pos:start="55:45" pos:end="55:45">c</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:62">framebuf_stride</name></name></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="59:47"><block_content pos:start="57:13" pos:end="59:47">

            <for pos:start="57:13" pos:end="59:47">for <control pos:start="57:17" pos:end="57:39">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">i</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:34"><expr pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:25">i</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:33">width</name></expr>;</condition> <incr pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:36">i</name><operator pos:start="57:37" pos:end="57:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:17" pos:end="59:47"><block_content pos:start="59:17" pos:end="59:47">

                <expr_stmt pos:start="59:17" pos:end="59:47"><expr pos:start="59:17" pos:end="59:46"><call pos:start="59:17" pos:end="59:46"><name pos:start="59:17" pos:end="59:22">memcpy</name><argument_list pos:start="59:23" pos:end="59:46">(<argument pos:start="59:24" pos:end="59:34"><expr pos:start="59:24" pos:end="59:34"><name pos:start="59:24" pos:end="59:26">dst</name> <operator pos:start="59:28" pos:end="59:28">+</operator> <name pos:start="59:30" pos:end="59:30">i</name> <operator pos:start="59:32" pos:end="59:32">*</operator> <literal type="number" pos:start="59:34" pos:end="59:34">3</literal></expr></argument>, <argument pos:start="59:37" pos:end="59:42"><expr pos:start="59:37" pos:end="59:42"><name pos:start="59:37" pos:end="59:42">transp</name></expr></argument>, <argument pos:start="59:45" pos:end="59:45"><expr pos:start="59:45" pos:end="59:45"><literal type="number" pos:start="59:45" pos:end="59:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="63:7" pos:end="69:5">else if <condition pos:start="63:15" pos:end="63:29">(<expr pos:start="63:16" pos:end="63:28"><name pos:start="63:16" pos:end="63:23">sub_type</name> <operator pos:start="63:25" pos:end="63:26">==</operator> <literal type="number" pos:start="63:28" pos:end="63:28">1</literal></expr>)</condition> <block pos:start="63:31" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:71">

        <return pos:start="65:9" pos:end="67:71">return <expr pos:start="65:16" pos:end="67:70"><call pos:start="65:16" pos:end="67:70"><name pos:start="65:16" pos:end="65:30">jpg_decode_data</name><argument_list pos:start="65:31" pos:end="67:70">(<argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><operator pos:start="65:32" pos:end="65:32">&amp;</operator><name pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:33">c</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:37">jc</name></name></expr></argument>, <argument pos:start="65:40" pos:end="65:44"><expr pos:start="65:40" pos:end="65:44"><name pos:start="65:40" pos:end="65:44">width</name></expr></argument>, <argument pos:start="65:47" pos:end="65:52"><expr pos:start="65:47" pos:end="65:52"><name pos:start="65:47" pos:end="65:52">height</name></expr></argument>, <argument pos:start="65:55" pos:end="65:57"><expr pos:start="65:55" pos:end="65:57"><name pos:start="65:55" pos:end="65:57">src</name></expr></argument>, <argument pos:start="65:60" pos:end="65:72"><expr pos:start="65:60" pos:end="65:72"><name pos:start="65:60" pos:end="65:66">src_end</name> <operator pos:start="65:68" pos:end="65:68">-</operator> <name pos:start="65:70" pos:end="65:72">src</name></expr></argument>,

                               <argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">dst</name></expr></argument>, <argument pos:start="67:37" pos:end="67:54"><expr pos:start="67:37" pos:end="67:54"><name pos:start="67:37" pos:end="67:54"><name pos:start="67:37" pos:end="67:37">c</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:54">framebuf_stride</name></name></expr></argument>, <argument pos:start="67:57" pos:end="67:60"><expr pos:start="67:57" pos:end="67:60"><name pos:start="67:57" pos:end="67:60">NULL</name></expr></argument>, <argument pos:start="67:63" pos:end="67:63"><expr pos:start="67:63" pos:end="67:63"><literal type="number" pos:start="67:63" pos:end="67:63">0</literal></expr></argument>, <argument pos:start="67:66" pos:end="67:66"><expr pos:start="67:66" pos:end="67:66"><literal type="number" pos:start="67:66" pos:end="67:66">0</literal></expr></argument>, <argument pos:start="67:69" pos:end="67:69"><expr pos:start="67:69" pos:end="67:69"><literal type="number" pos:start="67:69" pos:end="67:69">0</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:22">(<expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:16">sub_type</name> <operator pos:start="73:18" pos:end="73:19">!=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">2</literal></expr>)</condition> <block pos:start="73:24" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:17">

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><call pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:14">memcpy</name><argument_list pos:start="75:15" pos:end="75:30">(<argument pos:start="75:16" pos:end="75:21"><expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21">transp</name></expr></argument>, <argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">src</name></expr></argument>, <argument pos:start="75:29" pos:end="75:29"><expr pos:start="75:29" pos:end="75:29"><literal type="number" pos:start="75:29" pos:end="75:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:17"><expr pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:11">src</name> <operator pos:start="77:13" pos:end="77:14">+=</operator> <literal type="number" pos:start="77:16" pos:end="77:16">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:22"><expr pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:8">npal</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <operator pos:start="81:12" pos:end="81:12">*</operator><name pos:start="81:13" pos:end="81:15">src</name><operator pos:start="81:16" pos:end="81:17">++</operator> <operator pos:start="81:19" pos:end="81:19">+</operator> <literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:31"><expr pos:start="83:5" pos:end="83:30"><call pos:start="83:5" pos:end="83:30"><name pos:start="83:5" pos:end="83:10">memcpy</name><argument_list pos:start="83:11" pos:end="83:30">(<argument pos:start="83:12" pos:end="83:14"><expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">pal</name></expr></argument>, <argument pos:start="83:17" pos:end="83:19"><expr pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:19">src</name></expr></argument>, <argument pos:start="83:22" pos:end="83:29"><expr pos:start="83:22" pos:end="83:29"><name pos:start="83:22" pos:end="83:25">npal</name> <operator pos:start="83:27" pos:end="83:27">*</operator> <literal type="number" pos:start="83:29" pos:end="83:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="83:33" pos:end="83:48"><expr pos:start="83:33" pos:end="83:47"><name pos:start="83:33" pos:end="83:35">src</name> <operator pos:start="83:37" pos:end="83:38">+=</operator> <name pos:start="83:40" pos:end="83:43">npal</name> <operator pos:start="83:45" pos:end="83:45">*</operator> <literal type="number" pos:start="83:47" pos:end="83:47">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="99:5"><if pos:start="85:5" pos:end="99:5">if <condition pos:start="85:8" pos:end="85:22">(<expr pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:16">sub_type</name> <operator pos:start="85:18" pos:end="85:19">!=</operator> <literal type="number" pos:start="85:21" pos:end="85:21">2</literal></expr>)</condition> <block pos:start="85:24" pos:end="99:5">{<block_content pos:start="87:9" pos:end="97:9">

        <for pos:start="87:9" pos:end="97:9">for <control pos:start="87:13" pos:end="87:34">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:29"><expr pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:28">npal</name></expr>;</condition> <incr pos:start="87:31" pos:end="87:33"><expr pos:start="87:31" pos:end="87:33"><name pos:start="87:31" pos:end="87:31">i</name><operator pos:start="87:32" pos:end="87:33">++</operator></expr></incr>)</control> <block pos:start="87:36" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:13">

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:48">(<expr pos:start="89:17" pos:end="89:47"><operator pos:start="89:17" pos:end="89:17">!</operator><call pos:start="89:18" pos:end="89:47"><name pos:start="89:18" pos:end="89:23">memcmp</name><argument_list pos:start="89:24" pos:end="89:47">(<argument pos:start="89:25" pos:end="89:35"><expr pos:start="89:25" pos:end="89:35"><name pos:start="89:25" pos:end="89:27">pal</name> <operator pos:start="89:29" pos:end="89:29">+</operator> <name pos:start="89:31" pos:end="89:31">i</name> <operator pos:start="89:33" pos:end="89:33">*</operator> <literal type="number" pos:start="89:35" pos:end="89:35">3</literal></expr></argument>, <argument pos:start="89:38" pos:end="89:43"><expr pos:start="89:38" pos:end="89:43"><name pos:start="89:38" pos:end="89:43">transp</name></expr></argument>, <argument pos:start="89:46" pos:end="89:46"><expr pos:start="89:46" pos:end="89:46"><literal type="number" pos:start="89:46" pos:end="89:46">3</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:50" pos:end="95:13">{<block_content pos:start="91:16" pos:end="93:21">

               <expr_stmt pos:start="91:16" pos:end="91:24"><expr pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:19">tidx</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:23">i</name></expr>;</expr_stmt>

               <break pos:start="93:16" pos:end="93:21">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="105:17"><if pos:start="103:5" pos:end="105:17">if <condition pos:start="103:8" pos:end="103:26">(<expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:15">src_end</name> <operator pos:start="103:17" pos:end="103:17">-</operator> <name pos:start="103:19" pos:end="103:21">src</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <literal type="number" pos:start="103:25" pos:end="103:25">2</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:17"><block_content pos:start="105:9" pos:end="105:17">

        <return pos:start="105:9" pos:end="105:17">return <expr pos:start="105:16" pos:end="105:16"><literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:35"><expr pos:start="107:5" pos:end="107:34"><name pos:start="107:5" pos:end="107:9">zsize</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:19"><name pos:start="107:14" pos:end="107:16">src</name><index pos:start="107:17" pos:end="107:19">[<expr pos:start="107:18" pos:end="107:18"><literal type="number" pos:start="107:18" pos:end="107:18">0</literal></expr>]</index></name> <operator pos:start="107:21" pos:end="107:22">&lt;&lt;</operator> <literal type="number" pos:start="107:24" pos:end="107:24">8</literal><operator pos:start="107:25" pos:end="107:25">)</operator> <operator pos:start="107:27" pos:end="107:27">|</operator> <name pos:start="107:29" pos:end="107:34"><name pos:start="107:29" pos:end="107:31">src</name><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><literal type="number" pos:start="107:33" pos:end="107:33">1</literal></expr>]</index></name></expr>;</expr_stmt> <expr_stmt pos:start="107:37" pos:end="107:45"><expr pos:start="107:37" pos:end="107:44"><name pos:start="107:37" pos:end="107:39">src</name> <operator pos:start="107:41" pos:end="107:42">+=</operator> <literal type="number" pos:start="107:44" pos:end="107:44">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="113:35"><if pos:start="111:5" pos:end="113:35">if <condition pos:start="111:8" pos:end="111:30">(<expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:15">src_end</name> <operator pos:start="111:17" pos:end="111:17">-</operator> <name pos:start="111:19" pos:end="111:21">src</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:29">zsize</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:35"><block_content pos:start="113:9" pos:end="113:35">

        <return pos:start="113:9" pos:end="113:35">return <expr pos:start="113:16" pos:end="113:34"><name pos:start="113:16" pos:end="113:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:54"><expr pos:start="117:5" pos:end="117:53"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:53"><name pos:start="117:11" pos:end="117:20">uncompress</name><argument_list pos:start="117:21" pos:end="117:53">(<argument pos:start="117:22" pos:end="117:33"><expr pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:22">c</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:33">kempf_buf</name></name></expr></argument>, <argument pos:start="117:36" pos:end="117:40"><expr pos:start="117:36" pos:end="117:40"><operator pos:start="117:36" pos:end="117:36">&amp;</operator><name pos:start="117:37" pos:end="117:40">dlen</name></expr></argument>, <argument pos:start="117:43" pos:end="117:45"><expr pos:start="117:43" pos:end="117:45"><name pos:start="117:43" pos:end="117:45">src</name></expr></argument>, <argument pos:start="117:48" pos:end="117:52"><expr pos:start="117:48" pos:end="117:52"><name pos:start="117:48" pos:end="117:52">zsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:35"><if pos:start="119:5" pos:end="121:35">if <condition pos:start="119:8" pos:end="119:12">(<expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">ret</name></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:35"><block_content pos:start="121:9" pos:end="121:35">

        <return pos:start="121:9" pos:end="121:35">return <expr pos:start="121:16" pos:end="121:34"><name pos:start="121:16" pos:end="121:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:17"><expr pos:start="123:5" pos:end="123:16"><name pos:start="123:5" pos:end="123:7">src</name> <operator pos:start="123:9" pos:end="123:10">+=</operator> <name pos:start="123:12" pos:end="123:16">zsize</name></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="135:5"><if pos:start="127:5" pos:end="135:5">if <condition pos:start="127:8" pos:end="127:22">(<expr pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:16">sub_type</name> <operator pos:start="127:18" pos:end="127:19">==</operator> <literal type="number" pos:start="127:21" pos:end="127:21">2</literal></expr>)</condition> <block pos:start="127:24" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:17">

        <expr_stmt pos:start="129:9" pos:end="131:67"><expr pos:start="129:9" pos:end="131:66"><call pos:start="129:9" pos:end="131:66"><name pos:start="129:9" pos:end="129:25">kempf_restore_buf</name><argument_list pos:start="129:26" pos:end="131:66">(<argument pos:start="129:27" pos:end="129:38"><expr pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:27">c</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:38">kempf_buf</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:44"><expr pos:start="129:41" pos:end="129:44"><name pos:start="129:41" pos:end="129:44">dlen</name></expr></argument>, <argument pos:start="129:47" pos:end="129:49"><expr pos:start="129:47" pos:end="129:49"><name pos:start="129:47" pos:end="129:49">dst</name></expr></argument>, <argument pos:start="129:52" pos:end="129:69"><expr pos:start="129:52" pos:end="129:69"><name pos:start="129:52" pos:end="129:69"><name pos:start="129:52" pos:end="129:52">c</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:69">framebuf_stride</name></name></expr></argument>,

                          <argument pos:start="131:27" pos:end="131:30"><expr pos:start="131:27" pos:end="131:30"><name pos:start="131:27" pos:end="131:30">NULL</name></expr></argument>, <argument pos:start="131:33" pos:end="131:33"><expr pos:start="131:33" pos:end="131:33"><literal type="number" pos:start="131:33" pos:end="131:33">0</literal></expr></argument>, <argument pos:start="131:36" pos:end="131:40"><expr pos:start="131:36" pos:end="131:40"><name pos:start="131:36" pos:end="131:40">width</name></expr></argument>, <argument pos:start="131:43" pos:end="131:48"><expr pos:start="131:43" pos:end="131:48"><name pos:start="131:43" pos:end="131:48">height</name></expr></argument>, <argument pos:start="131:51" pos:end="131:53"><expr pos:start="131:51" pos:end="131:53"><name pos:start="131:51" pos:end="131:53">pal</name></expr></argument>, <argument pos:start="131:56" pos:end="131:59"><expr pos:start="131:56" pos:end="131:59"><name pos:start="131:56" pos:end="131:59">npal</name></expr></argument>, <argument pos:start="131:62" pos:end="131:65"><expr pos:start="131:62" pos:end="131:65"><name pos:start="131:62" pos:end="131:65">tidx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="133:9" pos:end="133:17">return <expr pos:start="133:16" pos:end="133:16"><literal type="number" pos:start="133:16" pos:end="133:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:25"><expr pos:start="139:5" pos:end="139:24"><name pos:start="139:5" pos:end="139:11">nblocks</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <operator pos:start="139:15" pos:end="139:15">*</operator><name pos:start="139:16" pos:end="139:18">src</name><operator pos:start="139:19" pos:end="139:20">++</operator> <operator pos:start="139:22" pos:end="139:22">+</operator> <literal type="number" pos:start="139:24" pos:end="139:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:16"><expr pos:start="141:5" pos:end="141:15"><name pos:start="141:5" pos:end="141:11">cblocks</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <literal type="number" pos:start="141:15" pos:end="141:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:38"><expr pos:start="143:5" pos:end="143:37"><name pos:start="143:5" pos:end="143:11">bstride</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <call pos:start="143:15" pos:end="143:32"><name pos:start="143:15" pos:end="143:21">FFALIGN</name><argument_list pos:start="143:22" pos:end="143:32">(<argument pos:start="143:23" pos:end="143:27"><expr pos:start="143:23" pos:end="143:27"><name pos:start="143:23" pos:end="143:27">width</name></expr></argument>, <argument pos:start="143:30" pos:end="143:31"><expr pos:start="143:30" pos:end="143:31"><literal type="number" pos:start="143:30" pos:end="143:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="143:34" pos:end="143:35">&gt;&gt;</operator> <literal type="number" pos:start="143:37" pos:end="143:37">4</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="145:5" pos:end="145:70">// blocks are coded LSB and we need normal bitreader for JPEG data</comment>

    <expr_stmt pos:start="147:5" pos:end="147:13"><expr pos:start="147:5" pos:end="147:12"><name pos:start="147:5" pos:end="147:8">bits</name> <operator pos:start="147:10" pos:end="147:10">=</operator> <literal type="number" pos:start="147:12" pos:end="147:12">0</literal></expr>;</expr_stmt>

    <for pos:start="149:5" pos:end="177:5">for <control pos:start="149:9" pos:end="149:52">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">0</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:47"><expr pos:start="149:17" pos:end="149:46"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <operator pos:start="149:21" pos:end="149:21">(</operator><call pos:start="149:22" pos:end="149:40"><name pos:start="149:22" pos:end="149:28">FFALIGN</name><argument_list pos:start="149:29" pos:end="149:40">(<argument pos:start="149:30" pos:end="149:35"><expr pos:start="149:30" pos:end="149:35"><name pos:start="149:30" pos:end="149:35">height</name></expr></argument>, <argument pos:start="149:38" pos:end="149:39"><expr pos:start="149:38" pos:end="149:39"><literal type="number" pos:start="149:38" pos:end="149:39">16</literal></expr></argument>)</argument_list></call> <operator pos:start="149:42" pos:end="149:43">&gt;&gt;</operator> <literal type="number" pos:start="149:45" pos:end="149:45">4</literal><operator pos:start="149:46" pos:end="149:46">)</operator></expr>;</condition> <incr pos:start="149:49" pos:end="149:51"><expr pos:start="149:49" pos:end="149:51"><name pos:start="149:49" pos:end="149:49">i</name><operator pos:start="149:50" pos:end="149:51">++</operator></expr></incr>)</control> <block pos:start="149:54" pos:end="177:5">{<block_content pos:start="151:9" pos:end="175:9">

        <for pos:start="151:9" pos:end="175:9">for <control pos:start="151:13" pos:end="151:55">(<init pos:start="151:14" pos:end="151:19"><expr pos:start="151:14" pos:end="151:18"><name pos:start="151:14" pos:end="151:14">j</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</init> <condition pos:start="151:21" pos:end="151:50"><expr pos:start="151:21" pos:end="151:49"><name pos:start="151:21" pos:end="151:21">j</name> <operator pos:start="151:23" pos:end="151:23">&lt;</operator> <operator pos:start="151:25" pos:end="151:25">(</operator><call pos:start="151:26" pos:end="151:43"><name pos:start="151:26" pos:end="151:32">FFALIGN</name><argument_list pos:start="151:33" pos:end="151:43">(<argument pos:start="151:34" pos:end="151:38"><expr pos:start="151:34" pos:end="151:38"><name pos:start="151:34" pos:end="151:38">width</name></expr></argument>, <argument pos:start="151:41" pos:end="151:42"><expr pos:start="151:41" pos:end="151:42"><literal type="number" pos:start="151:41" pos:end="151:42">16</literal></expr></argument>)</argument_list></call> <operator pos:start="151:45" pos:end="151:46">&gt;&gt;</operator> <literal type="number" pos:start="151:48" pos:end="151:48">4</literal><operator pos:start="151:49" pos:end="151:49">)</operator></expr>;</condition> <incr pos:start="151:52" pos:end="151:54"><expr pos:start="151:52" pos:end="151:54"><name pos:start="151:52" pos:end="151:52">j</name><operator pos:start="151:53" pos:end="151:54">++</operator></expr></incr>)</control> <block pos:start="151:57" pos:end="175:9">{<block_content pos:start="153:13" pos:end="173:52">

            <if_stmt pos:start="153:13" pos:end="159:13"><if pos:start="153:13" pos:end="159:13">if <condition pos:start="153:16" pos:end="153:22">(<expr pos:start="153:17" pos:end="153:21"><operator pos:start="153:17" pos:end="153:17">!</operator><name pos:start="153:18" pos:end="153:21">bits</name></expr>)</condition> <block pos:start="153:24" pos:end="159:13">{<block_content pos:start="155:17" pos:end="157:27">

                <expr_stmt pos:start="155:17" pos:end="155:32"><expr pos:start="155:17" pos:end="155:31"><name pos:start="155:17" pos:end="155:22">bitbuf</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <operator pos:start="155:26" pos:end="155:26">*</operator><name pos:start="155:27" pos:end="155:29">src</name><operator pos:start="155:30" pos:end="155:31">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:27"><expr pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:20">bits</name>   <operator pos:start="157:24" pos:end="157:24">=</operator> <literal type="number" pos:start="157:26" pos:end="157:26">8</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:17">coded</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <name pos:start="161:21" pos:end="161:26">bitbuf</name> <operator pos:start="161:28" pos:end="161:28">&amp;</operator> <literal type="number" pos:start="161:30" pos:end="161:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:19"><expr pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:16">bits</name><operator pos:start="163:17" pos:end="163:18">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:25"><expr pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:18">bitbuf</name> <operator pos:start="165:20" pos:end="165:22">&gt;&gt;=</operator> <literal type="number" pos:start="165:24" pos:end="165:24">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:29"><expr pos:start="167:13" pos:end="167:28"><name pos:start="167:13" pos:end="167:19">cblocks</name> <operator pos:start="167:21" pos:end="167:22">+=</operator> <name pos:start="167:24" pos:end="167:28">coded</name></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="171:43"><if pos:start="169:13" pos:end="171:43">if <condition pos:start="169:16" pos:end="169:34">(<expr pos:start="169:17" pos:end="169:33"><name pos:start="169:17" pos:end="169:23">cblocks</name> <operator pos:start="169:25" pos:end="169:25">&gt;</operator> <name pos:start="169:27" pos:end="169:33">nblocks</name></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:43"><block_content pos:start="171:17" pos:end="171:43">

                <return pos:start="171:17" pos:end="171:43">return <expr pos:start="171:24" pos:end="171:42"><name pos:start="171:24" pos:end="171:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:52"><expr pos:start="173:13" pos:end="173:51"><name pos:start="173:13" pos:end="173:43"><name pos:start="173:13" pos:end="173:13">c</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:26">kempf_flags</name><index pos:start="173:27" pos:end="173:43">[<expr pos:start="173:28" pos:end="173:42"><name pos:start="173:28" pos:end="173:28">j</name> <operator pos:start="173:30" pos:end="173:30">+</operator> <name pos:start="173:32" pos:end="173:32">i</name> <operator pos:start="173:34" pos:end="173:34">*</operator> <name pos:start="173:36" pos:end="173:42">bstride</name></expr>]</index></name> <operator pos:start="173:45" pos:end="173:45">=</operator> <name pos:start="173:47" pos:end="173:51">coded</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="181:5" pos:end="181:53"><expr pos:start="181:5" pos:end="181:52"><call pos:start="181:5" pos:end="181:52"><name pos:start="181:5" pos:end="181:10">memset</name><argument_list pos:start="181:11" pos:end="181:52">(<argument pos:start="181:12" pos:end="181:23"><expr pos:start="181:12" pos:end="181:23"><name pos:start="181:12" pos:end="181:23"><name pos:start="181:12" pos:end="181:12">c</name><operator pos:start="181:13" pos:end="181:14">-&gt;</operator><name pos:start="181:15" pos:end="181:23">jpeg_tile</name></name></expr></argument>, <argument pos:start="181:26" pos:end="181:26"><expr pos:start="181:26" pos:end="181:26"><literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr></argument>, <argument pos:start="181:29" pos:end="181:51"><expr pos:start="181:29" pos:end="181:51"><name pos:start="181:29" pos:end="181:42"><name pos:start="181:29" pos:end="181:29">c</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:42">tile_stride</name></name> <operator pos:start="181:44" pos:end="181:44">*</operator> <name pos:start="181:46" pos:end="181:51">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="187:57"><expr pos:start="183:5" pos:end="187:56"><call pos:start="183:5" pos:end="187:56"><name pos:start="183:5" pos:end="183:19">jpg_decode_data</name><argument_list pos:start="183:20" pos:end="187:56">(<argument pos:start="183:21" pos:end="183:26"><expr pos:start="183:21" pos:end="183:26"><operator pos:start="183:21" pos:end="183:21">&amp;</operator><name pos:start="183:22" pos:end="183:26"><name pos:start="183:22" pos:end="183:22">c</name><operator pos:start="183:23" pos:end="183:24">-&gt;</operator><name pos:start="183:25" pos:end="183:26">jc</name></name></expr></argument>, <argument pos:start="183:29" pos:end="183:33"><expr pos:start="183:29" pos:end="183:33"><name pos:start="183:29" pos:end="183:33">width</name></expr></argument>, <argument pos:start="183:36" pos:end="183:41"><expr pos:start="183:36" pos:end="183:41"><name pos:start="183:36" pos:end="183:41">height</name></expr></argument>, <argument pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:46"><name pos:start="183:44" pos:end="183:46">src</name></expr></argument>, <argument pos:start="183:49" pos:end="183:61"><expr pos:start="183:49" pos:end="183:61"><name pos:start="183:49" pos:end="183:55">src_end</name> <operator pos:start="183:57" pos:end="183:57">-</operator> <name pos:start="183:59" pos:end="183:61">src</name></expr></argument>,

                    <argument pos:start="185:21" pos:end="185:32"><expr pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:21">c</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:32">jpeg_tile</name></name></expr></argument>, <argument pos:start="185:35" pos:end="185:48"><expr pos:start="185:35" pos:end="185:48"><name pos:start="185:35" pos:end="185:48"><name pos:start="185:35" pos:end="185:35">c</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:48">tile_stride</name></name></expr></argument>,

                    <argument pos:start="187:21" pos:end="187:34"><expr pos:start="187:21" pos:end="187:34"><name pos:start="187:21" pos:end="187:34"><name pos:start="187:21" pos:end="187:21">c</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:34">kempf_flags</name></name></expr></argument>, <argument pos:start="187:37" pos:end="187:43"><expr pos:start="187:37" pos:end="187:43"><name pos:start="187:37" pos:end="187:43">bstride</name></expr></argument>, <argument pos:start="187:46" pos:end="187:52"><expr pos:start="187:46" pos:end="187:52"><name pos:start="187:46" pos:end="187:52">nblocks</name></expr></argument>, <argument pos:start="187:55" pos:end="187:55"><expr pos:start="187:55" pos:end="187:55"><literal type="number" pos:start="187:55" pos:end="187:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="195:54"><expr pos:start="191:5" pos:end="195:53"><call pos:start="191:5" pos:end="195:53"><name pos:start="191:5" pos:end="191:21">kempf_restore_buf</name><argument_list pos:start="191:22" pos:end="195:53">(<argument pos:start="191:23" pos:end="191:34"><expr pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:23">c</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:34">kempf_buf</name></name></expr></argument>, <argument pos:start="191:37" pos:end="191:40"><expr pos:start="191:37" pos:end="191:40"><name pos:start="191:37" pos:end="191:40">dlen</name></expr></argument>, <argument pos:start="191:43" pos:end="191:45"><expr pos:start="191:43" pos:end="191:45"><name pos:start="191:43" pos:end="191:45">dst</name></expr></argument>, <argument pos:start="191:48" pos:end="191:65"><expr pos:start="191:48" pos:end="191:65"><name pos:start="191:48" pos:end="191:65"><name pos:start="191:48" pos:end="191:48">c</name><operator pos:start="191:49" pos:end="191:50">-&gt;</operator><name pos:start="191:51" pos:end="191:65">framebuf_stride</name></name></expr></argument>,

                      <argument pos:start="193:23" pos:end="193:34"><expr pos:start="193:23" pos:end="193:34"><name pos:start="193:23" pos:end="193:34"><name pos:start="193:23" pos:end="193:23">c</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:34">jpeg_tile</name></name></expr></argument>, <argument pos:start="193:37" pos:end="193:50"><expr pos:start="193:37" pos:end="193:50"><name pos:start="193:37" pos:end="193:50"><name pos:start="193:37" pos:end="193:37">c</name><operator pos:start="193:38" pos:end="193:39">-&gt;</operator><name pos:start="193:40" pos:end="193:50">tile_stride</name></name></expr></argument>,

                      <argument pos:start="195:23" pos:end="195:27"><expr pos:start="195:23" pos:end="195:27"><name pos:start="195:23" pos:end="195:27">width</name></expr></argument>, <argument pos:start="195:30" pos:end="195:35"><expr pos:start="195:30" pos:end="195:35"><name pos:start="195:30" pos:end="195:35">height</name></expr></argument>, <argument pos:start="195:38" pos:end="195:40"><expr pos:start="195:38" pos:end="195:40"><name pos:start="195:38" pos:end="195:40">pal</name></expr></argument>, <argument pos:start="195:43" pos:end="195:46"><expr pos:start="195:43" pos:end="195:46"><name pos:start="195:43" pos:end="195:46">npal</name></expr></argument>, <argument pos:start="195:49" pos:end="195:52"><expr pos:start="195:49" pos:end="195:52"><name pos:start="195:49" pos:end="195:52">tidx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
