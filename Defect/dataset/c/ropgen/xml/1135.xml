<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1135.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:16">grow_array</name><parameter_list pos:start="1:17" pos:end="1:69">(<parameter pos:start="1:18" pos:end="1:28"><decl pos:start="1:18" pos:end="1:28"><type pos:start="1:18" pos:end="1:28"><name pos:start="1:18" pos:end="1:21">void</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:28">array</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:43">elem_size</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:54"><decl pos:start="1:46" pos:end="1:54"><type pos:start="1:46" pos:end="1:54"><name pos:start="1:46" pos:end="1:48">int</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">size</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">new_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:17">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:40">(<expr pos:start="5:9" pos:end="5:39"><name pos:start="5:9" pos:end="5:16">new_size</name> <operator pos:start="5:18" pos:end="5:19">&gt;=</operator> <name pos:start="5:21" pos:end="5:27">INT_MAX</name> <operator pos:start="5:29" pos:end="5:29">/</operator> <name pos:start="5:31" pos:end="5:39">elem_size</name></expr>)</condition> <block pos:start="5:42" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:16">

        <expr_stmt pos:start="7:9" pos:end="7:55"><expr pos:start="7:9" pos:end="7:54"><call pos:start="7:9" pos:end="7:54"><name pos:start="7:9" pos:end="7:14">av_log</name><argument_list pos:start="7:15" pos:end="7:54">(<argument pos:start="7:16" pos:end="7:19"><expr pos:start="7:16" pos:end="7:19"><name pos:start="7:16" pos:end="7:19">NULL</name></expr></argument>, <argument pos:start="7:22" pos:end="7:33"><expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="7:36" pos:end="7:53"><expr pos:start="7:36" pos:end="7:53"><literal type="string" pos:start="7:36" pos:end="7:53">"Array too big.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:16"><expr pos:start="9:9" pos:end="9:15"><call pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:12">exit</name><argument_list pos:start="9:13" pos:end="9:15">(<argument pos:start="9:14" pos:end="9:14"><expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="31:5">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><operator pos:start="13:9" pos:end="13:9">*</operator><name pos:start="13:10" pos:end="13:13">size</name> <operator pos:start="13:15" pos:end="13:15">&lt;</operator> <name pos:start="13:17" pos:end="13:24">new_size</name></expr>)</condition> <block pos:start="13:27" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:19">

        <decl_stmt pos:start="15:9" pos:end="15:61"><decl pos:start="15:9" pos:end="15:60"><type pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:15">uint8_t</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:20">tmp</name> <init pos:start="15:22" pos:end="15:60">= <expr pos:start="15:24" pos:end="15:60"><call pos:start="15:24" pos:end="15:60"><name pos:start="15:24" pos:end="15:33">av_realloc</name><argument_list pos:start="15:34" pos:end="15:60">(<argument pos:start="15:35" pos:end="15:39"><expr pos:start="15:35" pos:end="15:39"><name pos:start="15:35" pos:end="15:39">array</name></expr></argument>, <argument pos:start="15:42" pos:end="15:59"><expr pos:start="15:42" pos:end="15:59"><name pos:start="15:42" pos:end="15:49">new_size</name><operator pos:start="15:50" pos:end="15:50">*</operator><name pos:start="15:51" pos:end="15:59">elem_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:16">tmp</name></expr>)</condition> <block pos:start="17:19" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:20">

            <expr_stmt pos:start="19:13" pos:end="19:68"><expr pos:start="19:13" pos:end="19:67"><call pos:start="19:13" pos:end="19:67"><name pos:start="19:13" pos:end="19:18">av_log</name><argument_list pos:start="19:19" pos:end="19:67">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">NULL</name></expr></argument>, <argument pos:start="19:26" pos:end="19:37"><expr pos:start="19:26" pos:end="19:37"><name pos:start="19:26" pos:end="19:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:40" pos:end="19:66"><expr pos:start="19:40" pos:end="19:66"><literal type="string" pos:start="19:40" pos:end="19:66">"Could not alloc buffer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:19"><call pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">exit</name><argument_list pos:start="21:17" pos:end="21:19">(<argument pos:start="21:18" pos:end="21:18"><expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:71"><expr pos:start="25:9" pos:end="25:70"><call pos:start="25:9" pos:end="25:70"><name pos:start="25:9" pos:end="25:14">memset</name><argument_list pos:start="25:15" pos:end="25:70">(<argument pos:start="25:16" pos:end="25:36"><expr pos:start="25:16" pos:end="25:36"><name pos:start="25:16" pos:end="25:18">tmp</name> <operator pos:start="25:20" pos:end="25:20">+</operator> <operator pos:start="25:22" pos:end="25:22">*</operator><name pos:start="25:23" pos:end="25:26">size</name><operator pos:start="25:27" pos:end="25:27">*</operator><name pos:start="25:28" pos:end="25:36">elem_size</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr></argument>, <argument pos:start="25:42" pos:end="25:69"><expr pos:start="25:42" pos:end="25:69"><operator pos:start="25:42" pos:end="25:42">(</operator><name pos:start="25:43" pos:end="25:50">new_size</name><operator pos:start="25:51" pos:end="25:51">-</operator><operator pos:start="25:52" pos:end="25:52">*</operator><name pos:start="25:53" pos:end="25:56">size</name><operator pos:start="25:57" pos:end="25:57">)</operator> <operator pos:start="25:59" pos:end="25:59">*</operator> <name pos:start="25:61" pos:end="25:69">elem_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:13">size</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:24">new_size</name></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">tmp</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="33:5" pos:end="33:17">return <expr pos:start="33:12" pos:end="33:16"><name pos:start="33:12" pos:end="33:16">array</name></expr>;</return>

</block_content>}</block></function>
</unit>
