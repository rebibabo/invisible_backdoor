<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9235.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">open_url</name><parameter_list pos:start="1:20" pos:end="3:74">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">pb</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><specifier pos:start="1:59" pos:end="1:63">const</specifier> <name pos:start="1:65" pos:end="1:68">char</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:73">url</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:38"><decl pos:start="3:21" pos:end="3:38"><type pos:start="3:21" pos:end="3:38"><name pos:start="3:21" pos:end="3:32">AVDictionary</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">opts</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:59"><decl pos:start="3:41" pos:end="3:59"><type pos:start="3:41" pos:end="3:59"><name pos:start="3:41" pos:end="3:52">AVDictionary</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">opts2</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:73"><decl pos:start="3:62" pos:end="3:73"><type pos:start="3:62" pos:end="3:73"><name pos:start="3:62" pos:end="3:64">int</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:73">is_http</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:15">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HLSContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">c</name> <init pos:start="7:19" pos:end="7:32">= <expr pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:32"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVDictionary</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">tmp</name> <init pos:start="9:23" pos:end="9:28">= <expr pos:start="9:25" pos:end="9:28"><name pos:start="9:25" pos:end="9:28">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:26">proto_name</name> <init pos:start="11:28" pos:end="11:33">= <expr pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><call pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:16">av_dict_copy</name><argument_list pos:start="17:17" pos:end="17:31">(<argument pos:start="17:18" pos:end="17:21"><expr pos:start="17:18" pos:end="17:21"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:21">tmp</name></expr></argument>, <argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">opts</name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:16">av_dict_copy</name><argument_list pos:start="19:17" pos:end="19:32">(<argument pos:start="19:18" pos:end="19:21"><expr pos:start="19:18" pos:end="19:21"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:21">tmp</name></expr></argument>, <argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:28">opts2</name></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:41">(<expr pos:start="23:9" pos:end="23:40"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:19">av_strstart</name><argument_list pos:start="23:20" pos:end="23:40">(<argument pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><name pos:start="23:21" pos:end="23:23">url</name></expr></argument>, <argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><literal type="string" pos:start="23:26" pos:end="23:33">"crypto"</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:43" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:58">

        <if_stmt pos:start="25:9" pos:end="27:58"><if pos:start="25:9" pos:end="27:58">if <condition pos:start="25:12" pos:end="25:43">(<expr pos:start="25:13" pos:end="25:42"><name pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:15">url</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">6</literal></expr>]</index></name> <operator pos:start="25:20" pos:end="25:21">==</operator> <literal type="char" pos:start="25:23" pos:end="25:25">'+'</literal> <operator pos:start="25:27" pos:end="25:28">||</operator> <name pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:32">url</name><index pos:start="25:33" pos:end="25:35">[<expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">6</literal></expr>]</index></name> <operator pos:start="25:37" pos:end="25:38">==</operator> <literal type="char" pos:start="25:40" pos:end="25:42">':'</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:58"><block_content pos:start="27:13" pos:end="27:58">

            <expr_stmt pos:start="27:13" pos:end="27:58"><expr pos:start="27:13" pos:end="27:57"><name pos:start="27:13" pos:end="27:22">proto_name</name> <operator pos:start="27:24" pos:end="27:24">=</operator> <call pos:start="27:26" pos:end="27:57"><name pos:start="27:26" pos:end="27:48">avio_find_protocol_name</name><argument_list pos:start="27:49" pos:end="27:57">(<argument pos:start="27:50" pos:end="27:56"><expr pos:start="27:50" pos:end="27:56"><name pos:start="27:50" pos:end="27:52">url</name> <operator pos:start="27:54" pos:end="27:54">+</operator> <literal type="number" pos:start="27:56" pos:end="27:56">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:50"><if pos:start="33:5" pos:end="35:50">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:19">proto_name</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:50"><block_content pos:start="35:9" pos:end="35:50">

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:18">proto_name</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:49"><name pos:start="35:22" pos:end="35:44">avio_find_protocol_name</name><argument_list pos:start="35:45" pos:end="35:49">(<argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:35"><if pos:start="39:5" pos:end="41:35">if <condition pos:start="39:8" pos:end="39:20">(<expr pos:start="39:9" pos:end="39:19"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:19">proto_name</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:35"><block_content pos:start="41:9" pos:end="41:35">

        <return pos:start="41:9" pos:end="41:35">return <expr pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="45:5" pos:end="45:38">// only http(s) &amp; file are allowed</comment>

    <if_stmt pos:start="47:5" pos:end="49:35"><if pos:start="47:5" pos:end="49:35">if <condition pos:start="47:8" pos:end="47:89">(<expr pos:start="47:9" pos:end="47:88"><operator pos:start="47:9" pos:end="47:9">!</operator><call pos:start="47:10" pos:end="47:46"><name pos:start="47:10" pos:end="47:20">av_strstart</name><argument_list pos:start="47:21" pos:end="47:46">(<argument pos:start="47:22" pos:end="47:31"><expr pos:start="47:22" pos:end="47:31"><name pos:start="47:22" pos:end="47:31">proto_name</name></expr></argument>, <argument pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><literal type="string" pos:start="47:34" pos:end="47:39">"http"</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:45"><expr pos:start="47:42" pos:end="47:45"><name pos:start="47:42" pos:end="47:45">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="47:48" pos:end="47:49">&amp;&amp;</operator> <operator pos:start="47:51" pos:end="47:51">!</operator><call pos:start="47:52" pos:end="47:88"><name pos:start="47:52" pos:end="47:62">av_strstart</name><argument_list pos:start="47:63" pos:end="47:88">(<argument pos:start="47:64" pos:end="47:73"><expr pos:start="47:64" pos:end="47:73"><name pos:start="47:64" pos:end="47:73">proto_name</name></expr></argument>, <argument pos:start="47:76" pos:end="47:81"><expr pos:start="47:76" pos:end="47:81"><literal type="string" pos:start="47:76" pos:end="47:81">"file"</literal></expr></argument>, <argument pos:start="47:84" pos:end="47:87"><expr pos:start="47:84" pos:end="47:87"><name pos:start="47:84" pos:end="47:87">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:35"><block_content pos:start="49:9" pos:end="49:35">

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="61:35"><if pos:start="51:5" pos:end="53:9">if <condition pos:start="51:8" pos:end="51:88">(<expr pos:start="51:9" pos:end="51:87"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:53"><name pos:start="51:10" pos:end="51:16">strncmp</name><argument_list pos:start="51:17" pos:end="51:53">(<argument pos:start="51:18" pos:end="51:27"><expr pos:start="51:18" pos:end="51:27"><name pos:start="51:18" pos:end="51:27">proto_name</name></expr></argument>, <argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">url</name></expr></argument>, <argument pos:start="51:35" pos:end="51:52"><expr pos:start="51:35" pos:end="51:52"><call pos:start="51:35" pos:end="51:52"><name pos:start="51:35" pos:end="51:40">strlen</name><argument_list pos:start="51:41" pos:end="51:52">(<argument pos:start="51:42" pos:end="51:51"><expr pos:start="51:42" pos:end="51:51"><name pos:start="51:42" pos:end="51:51">proto_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="51:55" pos:end="51:56">&amp;&amp;</operator> <name pos:start="51:58" pos:end="51:80"><name pos:start="51:58" pos:end="51:60">url</name><index pos:start="51:61" pos:end="51:80">[<expr pos:start="51:62" pos:end="51:79"><call pos:start="51:62" pos:end="51:79"><name pos:start="51:62" pos:end="51:67">strlen</name><argument_list pos:start="51:68" pos:end="51:79">(<argument pos:start="51:69" pos:end="51:78"><expr pos:start="51:69" pos:end="51:78"><name pos:start="51:69" pos:end="51:78">proto_name</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="51:82" pos:end="51:83">==</operator> <literal type="char" pos:start="51:85" pos:end="51:87">':'</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:9"><block_content pos:start="53:9" pos:end="53:9">

        <empty_stmt pos:start="53:9" pos:end="53:9">;</empty_stmt></block_content></block></if>

    <if type="elseif" pos:start="55:5" pos:end="57:9">else if <condition pos:start="55:13" pos:end="55:137">(<expr pos:start="55:14" pos:end="55:136"><call pos:start="55:14" pos:end="55:45"><name pos:start="55:14" pos:end="55:24">av_strstart</name><argument_list pos:start="55:25" pos:end="55:45">(<argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">url</name></expr></argument>, <argument pos:start="55:31" pos:end="55:38"><expr pos:start="55:31" pos:end="55:38"><literal type="string" pos:start="55:31" pos:end="55:38">"crypto"</literal></expr></argument>, <argument pos:start="55:41" pos:end="55:44"><expr pos:start="55:41" pos:end="55:44"><name pos:start="55:41" pos:end="55:44">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="55:47" pos:end="55:48">&amp;&amp;</operator> <operator pos:start="55:50" pos:end="55:50">!</operator><call pos:start="55:51" pos:end="55:98"><name pos:start="55:51" pos:end="55:57">strncmp</name><argument_list pos:start="55:58" pos:end="55:98">(<argument pos:start="55:59" pos:end="55:68"><expr pos:start="55:59" pos:end="55:68"><name pos:start="55:59" pos:end="55:68">proto_name</name></expr></argument>, <argument pos:start="55:71" pos:end="55:77"><expr pos:start="55:71" pos:end="55:77"><name pos:start="55:71" pos:end="55:73">url</name> <operator pos:start="55:75" pos:end="55:75">+</operator> <literal type="number" pos:start="55:77" pos:end="55:77">7</literal></expr></argument>, <argument pos:start="55:80" pos:end="55:97"><expr pos:start="55:80" pos:end="55:97"><call pos:start="55:80" pos:end="55:97"><name pos:start="55:80" pos:end="55:85">strlen</name><argument_list pos:start="55:86" pos:end="55:97">(<argument pos:start="55:87" pos:end="55:96"><expr pos:start="55:87" pos:end="55:96"><name pos:start="55:87" pos:end="55:96">proto_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="55:100" pos:end="55:101">&amp;&amp;</operator> <name pos:start="55:103" pos:end="55:129"><name pos:start="55:103" pos:end="55:105">url</name><index pos:start="55:106" pos:end="55:129">[<expr pos:start="55:107" pos:end="55:128"><literal type="number" pos:start="55:107" pos:end="55:109">7</literal> <operator pos:start="55:109" pos:end="55:109">+</operator> <call pos:start="55:111" pos:end="55:128"><name pos:start="55:111" pos:end="55:116">strlen</name><argument_list pos:start="55:117" pos:end="55:128">(<argument pos:start="55:118" pos:end="55:127"><expr pos:start="55:118" pos:end="55:127"><name pos:start="55:118" pos:end="55:127">proto_name</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="55:131" pos:end="55:132">==</operator> <literal type="char" pos:start="55:134" pos:end="55:136">':'</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:9"><block_content pos:start="57:9" pos:end="57:9">

        <empty_stmt pos:start="57:9" pos:end="57:9">;</empty_stmt></block_content></block></if>

    <if type="elseif" pos:start="59:5" pos:end="61:35">else if <condition pos:start="59:13" pos:end="59:69">(<expr pos:start="59:14" pos:end="59:68"><call pos:start="59:14" pos:end="59:39"><name pos:start="59:14" pos:end="59:19">strcmp</name><argument_list pos:start="59:20" pos:end="59:39">(<argument pos:start="59:21" pos:end="59:30"><expr pos:start="59:21" pos:end="59:30"><name pos:start="59:21" pos:end="59:30">proto_name</name></expr></argument>, <argument pos:start="59:33" pos:end="59:38"><expr pos:start="59:33" pos:end="59:38"><literal type="string" pos:start="59:33" pos:end="59:38">"file"</literal></expr></argument>)</argument_list></call> <operator pos:start="59:41" pos:end="59:42">||</operator> <operator pos:start="59:44" pos:end="59:44">!</operator><call pos:start="59:45" pos:end="59:68"><name pos:start="59:45" pos:end="59:51">strncmp</name><argument_list pos:start="59:52" pos:end="59:68">(<argument pos:start="59:53" pos:end="59:55"><expr pos:start="59:53" pos:end="59:55"><name pos:start="59:53" pos:end="59:55">url</name></expr></argument>, <argument pos:start="59:58" pos:end="59:64"><expr pos:start="59:58" pos:end="59:64"><literal type="string" pos:start="59:58" pos:end="59:64">"file,"</literal></expr></argument>, <argument pos:start="59:67" pos:end="59:67"><expr pos:start="59:67" pos:end="59:67"><literal type="number" pos:start="59:67" pos:end="59:67">5</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:35"><block_content pos:start="61:9" pos:end="61:35">

        <return pos:start="61:9" pos:end="61:35">return <expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:55"><expr pos:start="65:5" pos:end="65:54"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:54"><name pos:start="65:11" pos:end="65:20"><name pos:start="65:11" pos:end="65:11">s</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:20">io_open</name></name><argument_list pos:start="65:21" pos:end="65:54">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">s</name></expr></argument>, <argument pos:start="65:25" pos:end="65:26"><expr pos:start="65:25" pos:end="65:26"><name pos:start="65:25" pos:end="65:26">pb</name></expr></argument>, <argument pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:31">url</name></expr></argument>, <argument pos:start="65:34" pos:end="65:47"><expr pos:start="65:34" pos:end="65:47"><name pos:start="65:34" pos:end="65:47">AVIO_FLAG_READ</name></expr></argument>, <argument pos:start="65:50" pos:end="65:53"><expr pos:start="65:50" pos:end="65:53"><operator pos:start="65:50" pos:end="65:50">&amp;</operator><name pos:start="65:51" pos:end="65:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="93:5"><if pos:start="67:5" pos:end="93:5">if <condition pos:start="67:8" pos:end="67:17">(<expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:14">&gt;=</operator> <literal type="number" pos:start="67:16" pos:end="67:16">0</literal></expr>)</condition> <block pos:start="67:19" pos:end="93:5">{<block_content pos:start="71:9" pos:end="91:53">

        <comment type="line" pos:start="69:9" pos:end="69:59">// update cookies on http response with setcookies.</comment>

        <decl_stmt pos:start="71:9" pos:end="71:33"><decl pos:start="71:9" pos:end="71:32"><type pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:12">char</name> <modifier pos:start="71:14" pos:end="71:14">*</modifier></type><name pos:start="71:15" pos:end="71:25">new_cookies</name> <init pos:start="71:27" pos:end="71:32">= <expr pos:start="71:29" pos:end="71:32"><name pos:start="71:29" pos:end="71:32">NULL</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="75:9" pos:end="77:88"><if pos:start="75:9" pos:end="77:88">if <condition pos:start="75:12" pos:end="75:47">(<expr pos:start="75:13" pos:end="75:46"><operator pos:start="75:13" pos:end="75:13">!</operator><operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:22"><name pos:start="75:15" pos:end="75:15">s</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:22">flags</name></name> <operator pos:start="75:24" pos:end="75:24">&amp;</operator> <name pos:start="75:26" pos:end="75:45">AVFMT_FLAG_CUSTOM_IO</name><operator pos:start="75:46" pos:end="75:46">)</operator></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:88"><block_content pos:start="77:13" pos:end="77:88">

            <expr_stmt pos:start="77:13" pos:end="77:88"><expr pos:start="77:13" pos:end="77:87"><call pos:start="77:13" pos:end="77:87"><name pos:start="77:13" pos:end="77:22">av_opt_get</name><argument_list pos:start="77:23" pos:end="77:87">(<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><operator pos:start="77:24" pos:end="77:24">*</operator><name pos:start="77:25" pos:end="77:26">pb</name></expr></argument>, <argument pos:start="77:29" pos:end="77:37"><expr pos:start="77:29" pos:end="77:37"><literal type="string" pos:start="77:29" pos:end="77:37">"cookies"</literal></expr></argument>, <argument pos:start="77:40" pos:end="77:61"><expr pos:start="77:40" pos:end="77:61"><name pos:start="77:40" pos:end="77:61">AV_OPT_SEARCH_CHILDREN</name></expr></argument>, <argument pos:start="77:64" pos:end="77:86"><expr pos:start="77:64" pos:end="77:86"><operator pos:start="77:64" pos:end="77:64">(</operator><name pos:start="77:65" pos:end="77:71">uint8_t</name><operator pos:start="77:72" pos:end="77:72">*</operator><operator pos:start="77:73" pos:end="77:73">*</operator><operator pos:start="77:74" pos:end="77:74">)</operator><operator pos:start="77:75" pos:end="77:75">&amp;</operator><name pos:start="77:76" pos:end="77:86">new_cookies</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:24">(<expr pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:23">new_cookies</name></expr>)</condition> <block pos:start="81:26" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:37">

            <expr_stmt pos:start="83:13" pos:end="83:32"><expr pos:start="83:13" pos:end="83:31"><call pos:start="83:13" pos:end="83:31"><name pos:start="83:13" pos:end="83:19">av_free</name><argument_list pos:start="83:20" pos:end="83:31">(<argument pos:start="83:21" pos:end="83:30"><expr pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:21">c</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:30">cookies</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:13">c</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:22">cookies</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:36">new_cookies</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:53"><expr pos:start="91:9" pos:end="91:52"><call pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:19">av_dict_set</name><argument_list pos:start="91:20" pos:end="91:52">(<argument pos:start="91:21" pos:end="91:25"><expr pos:start="91:21" pos:end="91:25"><operator pos:start="91:21" pos:end="91:21">&amp;</operator><name pos:start="91:22" pos:end="91:25">opts</name></expr></argument>, <argument pos:start="91:28" pos:end="91:36"><expr pos:start="91:28" pos:end="91:36"><literal type="string" pos:start="91:28" pos:end="91:36">"cookies"</literal></expr></argument>, <argument pos:start="91:39" pos:end="91:48"><expr pos:start="91:39" pos:end="91:48"><name pos:start="91:39" pos:end="91:48"><name pos:start="91:39" pos:end="91:39">c</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:48">cookies</name></name></expr></argument>, <argument pos:start="91:51" pos:end="91:51"><expr pos:start="91:51" pos:end="91:51"><literal type="number" pos:start="91:51" pos:end="91:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:23"><expr pos:start="97:5" pos:end="97:22"><call pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:16">av_dict_free</name><argument_list pos:start="97:17" pos:end="97:22">(<argument pos:start="97:18" pos:end="97:21"><expr pos:start="97:18" pos:end="97:21"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:21">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="103:57"><if pos:start="101:5" pos:end="103:57">if <condition pos:start="101:8" pos:end="101:16">(<expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:15">is_http</name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:57"><block_content pos:start="103:9" pos:end="103:57">

        <expr_stmt pos:start="103:9" pos:end="103:57"><expr pos:start="103:9" pos:end="103:56"><operator pos:start="103:9" pos:end="103:9">*</operator><name pos:start="103:10" pos:end="103:16">is_http</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <call pos:start="103:20" pos:end="103:56"><name pos:start="103:20" pos:end="103:30">av_strstart</name><argument_list pos:start="103:31" pos:end="103:56">(<argument pos:start="103:32" pos:end="103:41"><expr pos:start="103:32" pos:end="103:41"><name pos:start="103:32" pos:end="103:41">proto_name</name></expr></argument>, <argument pos:start="103:44" pos:end="103:49"><expr pos:start="103:44" pos:end="103:49"><literal type="string" pos:start="103:44" pos:end="103:49">"http"</literal></expr></argument>, <argument pos:start="103:52" pos:end="103:55"><expr pos:start="103:52" pos:end="103:55"><name pos:start="103:52" pos:end="103:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="107:5" pos:end="107:15">return <expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
