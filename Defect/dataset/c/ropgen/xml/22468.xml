<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22468.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:40">decode_line</name><parameter_list pos:start="1:41" pos:end="5:67">(<parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:52">FFV1Context</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:62"><decl pos:start="1:58" pos:end="1:62"><type pos:start="1:58" pos:end="1:62"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:62">w</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:59"><decl pos:start="3:42" pos:end="3:59"><type pos:start="3:42" pos:end="3:56"><name pos:start="3:42" pos:end="3:48">int16_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:59"><name pos:start="3:51" pos:end="3:56">sample</name><index pos:start="3:57" pos:end="3:59">[<expr pos:start="3:58" pos:end="3:58"><literal type="number" pos:start="3:58" pos:end="3:58">2</literal></expr>]</index></name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:56"><decl pos:start="5:42" pos:end="5:56"><type pos:start="5:42" pos:end="5:56"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:56">plane_index</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:66"><decl pos:start="5:59" pos:end="5:66"><type pos:start="5:59" pos:end="5:66"><name pos:start="5:59" pos:end="5:61">int</name></type> <name pos:start="5:63" pos:end="5:66">bits</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="139:1">{<block_content pos:start="9:5" pos:end="137:29">

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:16">PlaneContext</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier><specifier pos:start="9:19" pos:end="9:23">const</specifier></type> <name pos:start="9:25" pos:end="9:25">p</name> <init pos:start="9:27" pos:end="9:50">= <expr pos:start="9:29" pos:end="9:50"><operator pos:start="9:29" pos:end="9:29">&amp;</operator><name pos:start="9:30" pos:end="9:50"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">plane</name><index pos:start="9:38" pos:end="9:50">[<expr pos:start="9:39" pos:end="9:49"><name pos:start="9:39" pos:end="9:49">plane_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:14">RangeCoder</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier><specifier pos:start="11:17" pos:end="11:21">const</specifier></type> <name pos:start="11:23" pos:end="11:23">c</name>   <init pos:start="11:27" pos:end="11:33">= <expr pos:start="11:29" pos:end="11:33"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:33"><name pos:start="11:30" pos:end="11:30">s</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:33">c</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">run_count</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">run_mode</name>  <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">run_index</name> <init pos:start="19:19" pos:end="19:32">= <expr pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:32"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:32">run_index</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="135:5">for <control pos:start="23:9" pos:end="23:27">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">x</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:17">x</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:21">w</name></expr>;</condition> <incr pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:24">x</name><operator pos:start="23:25" pos:end="23:26">++</operator></expr></incr>)</control> <block pos:start="23:29" pos:end="135:5">{<block_content pos:start="25:9" pos:end="133:41">

        <decl_stmt pos:start="25:9" pos:end="25:32"><decl pos:start="25:9" pos:end="25:16"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">diff</name></decl>, <decl pos:start="25:19" pos:end="25:25"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:19" pos:end="25:25">context</name></decl>, <decl pos:start="25:28" pos:end="25:31"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:28" pos:end="25:31">sign</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:78"><expr pos:start="29:9" pos:end="29:77"><name pos:start="29:9" pos:end="29:15">context</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:77"><name pos:start="29:19" pos:end="29:29">get_context</name><argument_list pos:start="29:30" pos:end="29:77">(<argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">p</name></expr></argument>, <argument pos:start="29:34" pos:end="29:46"><expr pos:start="29:34" pos:end="29:46"><name pos:start="29:34" pos:end="29:42"><name pos:start="29:34" pos:end="29:39">sample</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">1</literal></expr>]</index></name> <operator pos:start="29:44" pos:end="29:44">+</operator> <name pos:start="29:46" pos:end="29:46">x</name></expr></argument>, <argument pos:start="29:49" pos:end="29:61"><expr pos:start="29:49" pos:end="29:61"><name pos:start="29:49" pos:end="29:57"><name pos:start="29:49" pos:end="29:54">sample</name><index pos:start="29:55" pos:end="29:57">[<expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">0</literal></expr>]</index></name> <operator pos:start="29:59" pos:end="29:59">+</operator> <name pos:start="29:61" pos:end="29:61">x</name></expr></argument>, <argument pos:start="29:64" pos:end="29:76"><expr pos:start="29:64" pos:end="29:76"><name pos:start="29:64" pos:end="29:72"><name pos:start="29:64" pos:end="29:69">sample</name><index pos:start="29:70" pos:end="29:72">[<expr pos:start="29:71" pos:end="29:71"><literal type="number" pos:start="29:71" pos:end="29:71">1</literal></expr>]</index></name> <operator pos:start="29:74" pos:end="29:74">+</operator> <name pos:start="29:76" pos:end="29:76">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="39:21"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:24">(<expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:19">context</name> <operator pos:start="31:21" pos:end="31:21">&lt;</operator> <literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>)</condition> <block pos:start="31:26" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:24">

            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:19">context</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <operator pos:start="33:23" pos:end="33:23">-</operator><name pos:start="33:24" pos:end="33:30">context</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:24"><expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:16">sign</name>    <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="39:21">else<block type="pseudo" pos:start="39:13" pos:end="39:21"><block_content pos:start="39:13" pos:end="39:21">

            <expr_stmt pos:start="39:13" pos:end="39:21"><expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:16">sign</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><call pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:18">av_assert2</name><argument_list pos:start="43:19" pos:end="43:46">(<argument pos:start="43:20" pos:end="43:45"><expr pos:start="43:20" pos:end="43:45"><name pos:start="43:20" pos:end="43:26">context</name> <operator pos:start="43:28" pos:end="43:28">&lt;</operator> <name pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:30">p</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:45">context_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="121:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:18">(<expr pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:17">ac</name></name></expr>)</condition> <block pos:start="47:20" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:62">

            <expr_stmt pos:start="49:13" pos:end="49:62"><expr pos:start="49:13" pos:end="49:61"><name pos:start="49:13" pos:end="49:16">diff</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:61"><name pos:start="49:20" pos:end="49:36">get_symbol_inline</name><argument_list pos:start="49:37" pos:end="49:61">(<argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">c</name></expr></argument>, <argument pos:start="49:41" pos:end="49:57"><expr pos:start="49:41" pos:end="49:57"><name pos:start="49:41" pos:end="49:57"><name pos:start="49:41" pos:end="49:41">p</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:48">state</name><index pos:start="49:49" pos:end="49:57">[<expr pos:start="49:50" pos:end="49:56"><name pos:start="49:50" pos:end="49:56">context</name></expr>]</index></name></expr></argument>, <argument pos:start="49:60" pos:end="49:60"><expr pos:start="49:60" pos:end="49:60"><literal type="number" pos:start="49:60" pos:end="49:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="51:11" pos:end="121:9">else <block pos:start="51:16" pos:end="121:9">{<block_content pos:start="53:13" pos:end="119:79">

            <if_stmt pos:start="53:13" pos:end="55:29"><if pos:start="53:13" pos:end="55:29">if <condition pos:start="53:16" pos:end="53:46">(<expr pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:23">context</name> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="number" pos:start="53:28" pos:end="53:28">0</literal> <operator pos:start="53:30" pos:end="53:31">&amp;&amp;</operator> <name pos:start="53:33" pos:end="53:40">run_mode</name> <operator pos:start="53:42" pos:end="53:43">==</operator> <literal type="number" pos:start="53:45" pos:end="53:45">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:29"><block_content pos:start="55:17" pos:end="55:29">

                <expr_stmt pos:start="55:17" pos:end="55:29"><expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:24">run_mode</name> <operator pos:start="55:26" pos:end="55:26">=</operator> <literal type="number" pos:start="55:28" pos:end="55:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="113:76"><if pos:start="59:13" pos:end="111:13">if <condition pos:start="59:16" pos:end="59:25">(<expr pos:start="59:17" pos:end="59:24"><name pos:start="59:17" pos:end="59:24">run_mode</name></expr>)</condition> <block pos:start="59:27" pos:end="111:13">{<block_content pos:start="61:17" pos:end="109:29">

                <if_stmt pos:start="61:17" pos:end="89:17"><if pos:start="61:17" pos:end="89:17">if <condition pos:start="61:20" pos:end="61:52">(<expr pos:start="61:21" pos:end="61:51"><name pos:start="61:21" pos:end="61:29">run_count</name> <operator pos:start="61:31" pos:end="61:32">==</operator> <literal type="number" pos:start="61:34" pos:end="61:34">0</literal> <operator pos:start="61:36" pos:end="61:37">&amp;&amp;</operator> <name pos:start="61:39" pos:end="61:46">run_mode</name> <operator pos:start="61:48" pos:end="61:49">==</operator> <literal type="number" pos:start="61:51" pos:end="61:51">1</literal></expr>)</condition> <block pos:start="61:54" pos:end="89:17">{<block_content pos:start="63:21" pos:end="87:21">

                    <if_stmt pos:start="63:21" pos:end="87:21"><if pos:start="63:21" pos:end="71:21">if <condition pos:start="63:24" pos:end="63:42">(<expr pos:start="63:25" pos:end="63:41"><call pos:start="63:25" pos:end="63:41"><name pos:start="63:25" pos:end="63:33">get_bits1</name><argument_list pos:start="63:34" pos:end="63:41">(<argument pos:start="63:35" pos:end="63:40"><expr pos:start="63:35" pos:end="63:40"><operator pos:start="63:35" pos:end="63:35">&amp;</operator><name pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:36">s</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:40">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:44" pos:end="71:21">{<block_content pos:start="65:25" pos:end="69:40">

                        <expr_stmt pos:start="65:25" pos:end="65:64"><expr pos:start="65:25" pos:end="65:63"><name pos:start="65:25" pos:end="65:33">run_count</name> <operator pos:start="65:35" pos:end="65:35">=</operator> <literal type="number" pos:start="65:37" pos:end="65:37">1</literal> <operator pos:start="65:39" pos:end="65:40">&lt;&lt;</operator> <name pos:start="65:42" pos:end="65:63"><name pos:start="65:42" pos:end="65:52">ff_log2_run</name><index pos:start="65:53" pos:end="65:63">[<expr pos:start="65:54" pos:end="65:62"><name pos:start="65:54" pos:end="65:62">run_index</name></expr>]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="67:25" pos:end="69:40"><if pos:start="67:25" pos:end="69:40">if <condition pos:start="67:28" pos:end="67:47">(<expr pos:start="67:29" pos:end="67:46"><name pos:start="67:29" pos:end="67:29">x</name> <operator pos:start="67:31" pos:end="67:31">+</operator> <name pos:start="67:33" pos:end="67:41">run_count</name> <operator pos:start="67:43" pos:end="67:44">&lt;=</operator> <name pos:start="67:46" pos:end="67:46">w</name></expr>)</condition><block type="pseudo" pos:start="69:29" pos:end="69:40"><block_content pos:start="69:29" pos:end="69:40">

                            <expr_stmt pos:start="69:29" pos:end="69:40"><expr pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:37">run_index</name><operator pos:start="69:38" pos:end="69:39">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="71:23" pos:end="87:21">else <block pos:start="71:28" pos:end="87:21">{<block_content pos:start="73:25" pos:end="85:37">

                        <if_stmt pos:start="73:25" pos:end="79:42"><if pos:start="73:25" pos:end="75:81">if <condition pos:start="73:28" pos:end="73:51">(<expr pos:start="73:29" pos:end="73:50"><name pos:start="73:29" pos:end="73:50"><name pos:start="73:29" pos:end="73:39">ff_log2_run</name><index pos:start="73:40" pos:end="73:50">[<expr pos:start="73:41" pos:end="73:49"><name pos:start="73:41" pos:end="73:49">run_index</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="75:29" pos:end="75:81"><block_content pos:start="75:29" pos:end="75:81">

                            <expr_stmt pos:start="75:29" pos:end="75:81"><expr pos:start="75:29" pos:end="75:80"><name pos:start="75:29" pos:end="75:37">run_count</name> <operator pos:start="75:39" pos:end="75:39">=</operator> <call pos:start="75:41" pos:end="75:80"><name pos:start="75:41" pos:end="75:48">get_bits</name><argument_list pos:start="75:49" pos:end="75:80">(<argument pos:start="75:50" pos:end="75:55"><expr pos:start="75:50" pos:end="75:55"><operator pos:start="75:50" pos:end="75:50">&amp;</operator><name pos:start="75:51" pos:end="75:55"><name pos:start="75:51" pos:end="75:51">s</name><operator pos:start="75:52" pos:end="75:53">-&gt;</operator><name pos:start="75:54" pos:end="75:55">gb</name></name></expr></argument>, <argument pos:start="75:58" pos:end="75:79"><expr pos:start="75:58" pos:end="75:79"><name pos:start="75:58" pos:end="75:79"><name pos:start="75:58" pos:end="75:68">ff_log2_run</name><index pos:start="75:69" pos:end="75:79">[<expr pos:start="75:70" pos:end="75:78"><name pos:start="75:70" pos:end="75:78">run_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="77:25" pos:end="79:42">else<block type="pseudo" pos:start="79:29" pos:end="79:42"><block_content pos:start="79:29" pos:end="79:42">

                            <expr_stmt pos:start="79:29" pos:end="79:42"><expr pos:start="79:29" pos:end="79:41"><name pos:start="79:29" pos:end="79:37">run_count</name> <operator pos:start="79:39" pos:end="79:39">=</operator> <literal type="number" pos:start="79:41" pos:end="79:41">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <if_stmt pos:start="81:25" pos:end="83:40"><if pos:start="81:25" pos:end="83:40">if <condition pos:start="81:28" pos:end="81:38">(<expr pos:start="81:29" pos:end="81:37"><name pos:start="81:29" pos:end="81:37">run_index</name></expr>)</condition><block type="pseudo" pos:start="83:29" pos:end="83:40"><block_content pos:start="83:29" pos:end="83:40">

                            <expr_stmt pos:start="83:29" pos:end="83:40"><expr pos:start="83:29" pos:end="83:39"><name pos:start="83:29" pos:end="83:37">run_index</name><operator pos:start="83:38" pos:end="83:39">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="85:25" pos:end="85:37"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:32">run_mode</name> <operator pos:start="85:34" pos:end="85:34">=</operator> <literal type="number" pos:start="85:36" pos:end="85:36">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:28"><expr pos:start="91:17" pos:end="91:27"><name pos:start="91:17" pos:end="91:25">run_count</name><operator pos:start="91:26" pos:end="91:27">--</operator></expr>;</expr_stmt>

                <if_stmt pos:start="93:17" pos:end="109:29"><if pos:start="93:17" pos:end="107:17">if <condition pos:start="93:20" pos:end="93:34">(<expr pos:start="93:21" pos:end="93:33"><name pos:start="93:21" pos:end="93:29">run_count</name> <operator pos:start="93:31" pos:end="93:31">&lt;</operator> <literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr>)</condition> <block pos:start="93:36" pos:end="107:17">{<block_content pos:start="95:21" pos:end="105:31">

                    <expr_stmt pos:start="95:21" pos:end="95:34"><expr pos:start="95:21" pos:end="95:33"><name pos:start="95:21" pos:end="95:28">run_mode</name>  <operator pos:start="95:31" pos:end="95:31">=</operator> <literal type="number" pos:start="95:33" pos:end="95:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:34"><expr pos:start="97:21" pos:end="97:33"><name pos:start="97:21" pos:end="97:29">run_count</name> <operator pos:start="97:31" pos:end="97:31">=</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="101:53"><expr pos:start="99:21" pos:end="101:52"><name pos:start="99:21" pos:end="99:24">diff</name>      <operator pos:start="99:31" pos:end="99:31">=</operator> <call pos:start="99:33" pos:end="101:52"><name pos:start="99:33" pos:end="99:46">get_vlc_symbol</name><argument_list pos:start="99:47" pos:end="101:52">(<argument pos:start="99:48" pos:end="99:53"><expr pos:start="99:48" pos:end="99:53"><operator pos:start="99:48" pos:end="99:48">&amp;</operator><name pos:start="99:49" pos:end="99:53"><name pos:start="99:49" pos:end="99:49">s</name><operator pos:start="99:50" pos:end="99:51">-&gt;</operator><name pos:start="99:52" pos:end="99:53">gb</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:77"><expr pos:start="99:56" pos:end="99:77"><operator pos:start="99:56" pos:end="99:56">&amp;</operator><name pos:start="99:57" pos:end="99:77"><name pos:start="99:57" pos:end="99:57">p</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:68">vlc_state</name><index pos:start="99:69" pos:end="99:77">[<expr pos:start="99:70" pos:end="99:76"><name pos:start="99:70" pos:end="99:76">context</name></expr>]</index></name></expr></argument>,

                                               <argument pos:start="101:48" pos:end="101:51"><expr pos:start="101:48" pos:end="101:51"><name pos:start="101:48" pos:end="101:51">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="103:21" pos:end="105:31"><if pos:start="103:21" pos:end="105:31">if <condition pos:start="103:24" pos:end="103:34">(<expr pos:start="103:25" pos:end="103:33"><name pos:start="103:25" pos:end="103:28">diff</name> <operator pos:start="103:30" pos:end="103:31">&gt;=</operator> <literal type="number" pos:start="103:33" pos:end="103:33">0</literal></expr>)</condition><block type="pseudo" pos:start="105:25" pos:end="105:31"><block_content pos:start="105:25" pos:end="105:31">

                        <expr_stmt pos:start="105:25" pos:end="105:31"><expr pos:start="105:25" pos:end="105:30"><name pos:start="105:25" pos:end="105:28">diff</name><operator pos:start="105:29" pos:end="105:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="107:19" pos:end="109:29">else<block type="pseudo" pos:start="109:21" pos:end="109:29"><block_content pos:start="109:21" pos:end="109:29">

                    <expr_stmt pos:start="109:21" pos:end="109:29"><expr pos:start="109:21" pos:end="109:28"><name pos:start="109:21" pos:end="109:24">diff</name> <operator pos:start="109:26" pos:end="109:26">=</operator> <literal type="number" pos:start="109:28" pos:end="109:28">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="113:76">else<block type="pseudo" pos:start="113:17" pos:end="113:76"><block_content pos:start="113:17" pos:end="113:76">

                <expr_stmt pos:start="113:17" pos:end="113:76"><expr pos:start="113:17" pos:end="113:75"><name pos:start="113:17" pos:end="113:20">diff</name> <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:75"><name pos:start="113:24" pos:end="113:37">get_vlc_symbol</name><argument_list pos:start="113:38" pos:end="113:75">(<argument pos:start="113:39" pos:end="113:44"><expr pos:start="113:39" pos:end="113:44"><operator pos:start="113:39" pos:end="113:39">&amp;</operator><name pos:start="113:40" pos:end="113:44"><name pos:start="113:40" pos:end="113:40">s</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:44">gb</name></name></expr></argument>, <argument pos:start="113:47" pos:end="113:68"><expr pos:start="113:47" pos:end="113:68"><operator pos:start="113:47" pos:end="113:47">&amp;</operator><name pos:start="113:48" pos:end="113:68"><name pos:start="113:48" pos:end="113:48">p</name><operator pos:start="113:49" pos:end="113:50">-&gt;</operator><name pos:start="113:51" pos:end="113:59">vlc_state</name><index pos:start="113:60" pos:end="113:68">[<expr pos:start="113:61" pos:end="113:67"><name pos:start="113:61" pos:end="113:67">context</name></expr>]</index></name></expr></argument>, <argument pos:start="113:71" pos:end="113:74"><expr pos:start="113:71" pos:end="113:74"><name pos:start="113:71" pos:end="113:74">bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="119:79"><expr pos:start="117:13" pos:end="119:78"><call pos:start="117:13" pos:end="119:78"><name pos:start="117:13" pos:end="117:19">ff_dlog</name><argument_list pos:start="117:20" pos:end="119:78">(<argument pos:start="117:21" pos:end="117:28"><expr pos:start="117:21" pos:end="117:28"><name pos:start="117:21" pos:end="117:28"><name pos:start="117:21" pos:end="117:21">s</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:28">avctx</name></name></expr></argument>, <argument pos:start="117:31" pos:end="117:73"><expr pos:start="117:31" pos:end="117:73"><literal type="string" pos:start="117:31" pos:end="117:73">"count:%d index:%d, mode:%d, x:%d pos:%d\n"</literal></expr></argument>,

                    <argument pos:start="119:21" pos:end="119:29"><expr pos:start="119:21" pos:end="119:29"><name pos:start="119:21" pos:end="119:29">run_count</name></expr></argument>, <argument pos:start="119:32" pos:end="119:40"><expr pos:start="119:32" pos:end="119:40"><name pos:start="119:32" pos:end="119:40">run_index</name></expr></argument>, <argument pos:start="119:43" pos:end="119:50"><expr pos:start="119:43" pos:end="119:50"><name pos:start="119:43" pos:end="119:50">run_mode</name></expr></argument>, <argument pos:start="119:53" pos:end="119:53"><expr pos:start="119:53" pos:end="119:53"><name pos:start="119:53" pos:end="119:53">x</name></expr></argument>, <argument pos:start="119:56" pos:end="119:77"><expr pos:start="119:56" pos:end="119:77"><call pos:start="119:56" pos:end="119:77"><name pos:start="119:56" pos:end="119:69">get_bits_count</name><argument_list pos:start="119:70" pos:end="119:77">(<argument pos:start="119:71" pos:end="119:76"><expr pos:start="119:71" pos:end="119:76"><operator pos:start="119:71" pos:end="119:71">&amp;</operator><name pos:start="119:72" pos:end="119:76"><name pos:start="119:72" pos:end="119:72">s</name><operator pos:start="119:73" pos:end="119:74">-&gt;</operator><name pos:start="119:75" pos:end="119:76">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="125:9" pos:end="127:25"><if pos:start="125:9" pos:end="127:25">if <condition pos:start="125:12" pos:end="125:17">(<expr pos:start="125:13" pos:end="125:16"><name pos:start="125:13" pos:end="125:16">sign</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:25"><block_content pos:start="127:13" pos:end="127:25">

            <expr_stmt pos:start="127:13" pos:end="127:25"><expr pos:start="127:13" pos:end="127:24"><name pos:start="127:13" pos:end="127:16">diff</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <operator pos:start="127:20" pos:end="127:20">-</operator><name pos:start="127:21" pos:end="127:24">diff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="131:9" pos:end="133:41"><expr pos:start="131:9" pos:end="133:40"><name pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:14">sample</name><index pos:start="131:15" pos:end="131:17">[<expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">1</literal></expr>]</index><index pos:start="131:18" pos:end="131:20">[<expr pos:start="131:19" pos:end="131:19"><name pos:start="131:19" pos:end="131:19">x</name></expr>]</index></name> <operator pos:start="131:22" pos:end="131:22">=</operator> <operator pos:start="131:24" pos:end="131:24">(</operator><call pos:start="131:25" pos:end="131:61"><name pos:start="131:25" pos:end="131:31">predict</name><argument_list pos:start="131:32" pos:end="131:61">(<argument pos:start="131:33" pos:end="131:45"><expr pos:start="131:33" pos:end="131:45"><name pos:start="131:33" pos:end="131:41"><name pos:start="131:33" pos:end="131:38">sample</name><index pos:start="131:39" pos:end="131:41">[<expr pos:start="131:40" pos:end="131:40"><literal type="number" pos:start="131:40" pos:end="131:40">1</literal></expr>]</index></name> <operator pos:start="131:43" pos:end="131:43">+</operator> <name pos:start="131:45" pos:end="131:45">x</name></expr></argument>, <argument pos:start="131:48" pos:end="131:60"><expr pos:start="131:48" pos:end="131:60"><name pos:start="131:48" pos:end="131:56"><name pos:start="131:48" pos:end="131:53">sample</name><index pos:start="131:54" pos:end="131:56">[<expr pos:start="131:55" pos:end="131:55"><literal type="number" pos:start="131:55" pos:end="131:55">0</literal></expr>]</index></name> <operator pos:start="131:58" pos:end="131:58">+</operator> <name pos:start="131:60" pos:end="131:60">x</name></expr></argument>)</argument_list></call> <operator pos:start="131:63" pos:end="131:63">+</operator> <name pos:start="131:65" pos:end="131:68">diff</name><operator pos:start="131:69" pos:end="131:69">)</operator> <operator pos:start="131:71" pos:end="131:71">&amp;</operator>

                       <operator pos:start="133:24" pos:end="133:24">(</operator><operator pos:start="133:25" pos:end="133:25">(</operator><literal type="number" pos:start="133:26" pos:end="133:26">1</literal> <operator pos:start="133:28" pos:end="133:29">&lt;&lt;</operator> <name pos:start="133:31" pos:end="133:34">bits</name><operator pos:start="133:35" pos:end="133:35">)</operator> <operator pos:start="133:37" pos:end="133:37">-</operator> <literal type="number" pos:start="133:39" pos:end="133:39">1</literal><operator pos:start="133:40" pos:end="133:40">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="137:5" pos:end="137:29"><expr pos:start="137:5" pos:end="137:28"><name pos:start="137:5" pos:end="137:16"><name pos:start="137:5" pos:end="137:5">s</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:16">run_index</name></name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:28">run_index</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
