<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23198.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">msix_mmio_writel</name><parameter_list pos:start="1:29" pos:end="3:42">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint32_t</name></type> <name pos:start="3:39" pos:end="3:41">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="23:1">{<block_content pos:start="7:5" pos:end="21:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">PCIDevice</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">dev</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:23">offset</name> <init pos:start="9:25" pos:end="9:53">= <expr pos:start="9:27" pos:end="9:53"><name pos:start="9:27" pos:end="9:30">addr</name> <operator pos:start="9:32" pos:end="9:32">&amp;</operator> <operator pos:start="9:34" pos:end="9:34">(</operator><name pos:start="9:35" pos:end="9:48">MSIX_PAGE_SIZE</name> <operator pos:start="9:50" pos:end="9:50">-</operator> <literal type="number" pos:start="9:52" pos:end="9:52">1</literal><operator pos:start="9:53" pos:end="9:53">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">vector</name> <init pos:start="11:16" pos:end="11:41">= <expr pos:start="11:18" pos:end="11:41"><name pos:start="11:18" pos:end="11:23">offset</name> <operator pos:start="11:25" pos:end="11:25">/</operator> <name pos:start="11:27" pos:end="11:41">MSIX_ENTRY_SIZE</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:10">memcpy</name><argument_list pos:start="13:11" pos:end="13:50">(<argument pos:start="13:12" pos:end="13:40"><expr pos:start="13:12" pos:end="13:40"><name pos:start="13:12" pos:end="13:31"><name pos:start="13:12" pos:end="13:14">dev</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:31">msix_table_page</name></name> <operator pos:start="13:33" pos:end="13:33">+</operator> <name pos:start="13:35" pos:end="13:40">offset</name></expr></argument>, <argument pos:start="13:43" pos:end="13:46"><expr pos:start="13:43" pos:end="13:46"><operator pos:start="13:43" pos:end="13:43">&amp;</operator><name pos:start="13:44" pos:end="13:46">val</name></expr></argument>, <argument pos:start="13:49" pos:end="13:49"><expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:69">(<expr pos:start="15:9" pos:end="15:68"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:36"><name pos:start="15:10" pos:end="15:23">msix_is_masked</name><argument_list pos:start="15:24" pos:end="15:36">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">dev</name></expr></argument>, <argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">vector</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:39">&amp;&amp;</operator> <call pos:start="15:41" pos:end="15:68"><name pos:start="15:41" pos:end="15:55">msix_is_pending</name><argument_list pos:start="15:56" pos:end="15:68">(<argument pos:start="15:57" pos:end="15:59"><expr pos:start="15:57" pos:end="15:59"><name pos:start="15:57" pos:end="15:59">dev</name></expr></argument>, <argument pos:start="15:62" pos:end="15:67"><expr pos:start="15:62" pos:end="15:67"><name pos:start="15:62" pos:end="15:67">vector</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:71" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:33">

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><call pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:24">msix_clr_pending</name><argument_list pos:start="17:25" pos:end="17:37">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">dev</name></expr></argument>, <argument pos:start="17:31" pos:end="17:36"><expr pos:start="17:31" pos:end="17:36"><name pos:start="17:31" pos:end="17:36">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><call pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:19">msix_notify</name><argument_list pos:start="19:20" pos:end="19:32">(<argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><name pos:start="19:21" pos:end="19:23">dev</name></expr></argument>, <argument pos:start="19:26" pos:end="19:31"><expr pos:start="19:26" pos:end="19:31"><name pos:start="19:26" pos:end="19:31">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
