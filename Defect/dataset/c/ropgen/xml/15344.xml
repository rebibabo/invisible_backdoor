<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15344.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="1:87">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:34">NUTContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">nut</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:49">AVPacket</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">pkt</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:70">frame_code</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:86"><decl pos:start="1:73" pos:end="1:86"><type pos:start="1:73" pos:end="1:86"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:86">frame_type</name></decl></parameter>)</parameter_list><block pos:start="1:88" pos:end="181:1">{<block_content pos:start="3:5" pos:end="179:13">

    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:32"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">AVFormatContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:22">s</name><init pos:start="3:23" pos:end="3:32">= <expr pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:32"><name pos:start="3:25" pos:end="3:27">nut</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:32">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">StreamContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:25">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">bc</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name></decl>, <decl pos:start="9:15" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:19">flags</name></decl>, <decl pos:start="9:22" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:29">size_mul</name></decl>, <decl pos:start="9:32" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:39">size_lsb</name></decl>, <decl pos:start="9:42" pos:end="9:50"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:42" pos:end="9:50">stream_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">key_frame</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pts</name> <init pos:start="13:17" pos:end="13:19">= <expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:52"><decl pos:start="15:5" pos:end="15:51"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:24">prefix_len</name><init pos:start="15:25" pos:end="15:51">= <expr pos:start="15:27" pos:end="15:51"><ternary pos:start="15:27" pos:end="15:51"><condition pos:start="15:27" pos:end="15:43"><expr pos:start="15:27" pos:end="15:41"><name pos:start="15:27" pos:end="15:36">frame_type</name> <operator pos:start="15:38" pos:end="15:39">==</operator> <literal type="number" pos:start="15:41" pos:end="15:41">2</literal></expr> ?</condition><then pos:start="15:45" pos:end="15:47"> <expr pos:start="15:45" pos:end="15:47"><literal type="number" pos:start="15:45" pos:end="15:46">8</literal><operator pos:start="15:46" pos:end="15:46">+</operator><literal type="number" pos:start="15:47" pos:end="15:47">1</literal></expr> </then><else pos:start="15:49" pos:end="15:51">: <expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:58"><decl pos:start="17:5" pos:end="17:57"><type pos:start="17:5" pos:end="17:17"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">int64_t</name></type> <name pos:start="17:19" pos:end="17:29">frame_start</name><init pos:start="17:30" pos:end="17:57">= <expr pos:start="17:32" pos:end="17:57"><call pos:start="17:32" pos:end="17:44"><name pos:start="17:32" pos:end="17:40">url_ftell</name><argument_list pos:start="17:41" pos:end="17:44">(<argument pos:start="17:42" pos:end="17:43"><expr pos:start="17:42" pos:end="17:43"><name pos:start="17:42" pos:end="17:43">bc</name></expr></argument>)</argument_list></call> <operator pos:start="17:46" pos:end="17:46">-</operator> <name pos:start="17:48" pos:end="17:57">prefix_len</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:9">flags</name><operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:38"><name pos:start="21:12" pos:end="21:14">nut</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:26">frame_code</name><index pos:start="21:27" pos:end="21:38">[<expr pos:start="21:28" pos:end="21:37"><name pos:start="21:28" pos:end="21:37">frame_code</name></expr>]</index></name><operator pos:start="21:39" pos:end="21:39">.</operator><name pos:start="21:40" pos:end="21:44">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:12">size_mul</name><operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:41"><name pos:start="23:15" pos:end="23:17">nut</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:29">frame_code</name><index pos:start="23:30" pos:end="23:41">[<expr pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:40">frame_code</name></expr>]</index></name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:50">size_mul</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:12">size_lsb</name><operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:41"><name pos:start="25:15" pos:end="25:17">nut</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:29">frame_code</name><index pos:start="25:30" pos:end="25:41">[<expr pos:start="25:31" pos:end="25:40"><name pos:start="25:31" pos:end="25:40">frame_code</name></expr>]</index></name><operator pos:start="25:42" pos:end="25:42">.</operator><name pos:start="25:43" pos:end="25:50">size_lsb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:63"><expr pos:start="27:5" pos:end="27:62"><name pos:start="27:5" pos:end="27:13">stream_id</name><operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:42"><name pos:start="27:16" pos:end="27:18">nut</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:30">frame_code</name><index pos:start="27:31" pos:end="27:42">[<expr pos:start="27:32" pos:end="27:41"><name pos:start="27:32" pos:end="27:41">frame_code</name></expr>]</index></name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:58">stream_id_plus1</name> <operator pos:start="27:60" pos:end="27:60">-</operator> <literal type="number" pos:start="27:62" pos:end="27:62">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="43:5"><if pos:start="31:5" pos:end="43:5">if<condition pos:start="31:7" pos:end="31:31">(<expr pos:start="31:8" pos:end="31:30"><name pos:start="31:8" pos:end="31:12">flags</name> <operator pos:start="31:14" pos:end="31:14">&amp;</operator> <name pos:start="31:16" pos:end="31:30">FLAG_FRAME_TYPE</name></expr>)</condition><block pos:start="31:32" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:26">

        <expr_stmt pos:start="33:9" pos:end="33:17"><expr pos:start="33:9" pos:end="33:16"><call pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:13">reset</name><argument_list pos:start="33:14" pos:end="33:16">(<argument pos:start="33:15" pos:end="33:15"><expr pos:start="33:15" pos:end="33:15"><name pos:start="33:15" pos:end="33:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:22"><if pos:start="35:9" pos:end="37:22">if<condition pos:start="35:11" pos:end="35:56">(<expr pos:start="35:12" pos:end="35:55"><call pos:start="35:12" pos:end="35:51"><name pos:start="35:12" pos:end="35:27">get_packetheader</name><argument_list pos:start="35:28" pos:end="35:51">(<argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:31">nut</name></expr></argument>, <argument pos:start="35:34" pos:end="35:35"><expr pos:start="35:34" pos:end="35:35"><name pos:start="35:34" pos:end="35:35">bc</name></expr></argument>, <argument pos:start="35:38" pos:end="35:47"><expr pos:start="35:38" pos:end="35:47"><name pos:start="35:38" pos:end="35:47">prefix_len</name></expr></argument>, <argument pos:start="35:50" pos:end="35:50"><expr pos:start="35:50" pos:end="35:50"><literal type="number" pos:start="35:50" pos:end="35:50">0</literal></expr></argument>)</argument_list></call> <operator pos:start="35:53" pos:end="35:53">&lt;</operator> <literal type="number" pos:start="35:55" pos:end="35:55">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:22"><block_content pos:start="37:13" pos:end="37:22">

            <return pos:start="37:13" pos:end="37:22">return <expr pos:start="37:20" pos:end="37:21"><operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="41:26"><if pos:start="39:9" pos:end="41:26">if<condition pos:start="39:11" pos:end="39:25">(<expr pos:start="39:12" pos:end="39:24"><name pos:start="39:12" pos:end="39:21">frame_type</name><operator pos:start="39:22" pos:end="39:23">!=</operator><literal type="number" pos:start="39:24" pos:end="39:24">2</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:26"><block_content pos:start="41:13" pos:end="41:26">

            <expr_stmt pos:start="41:13" pos:end="41:26"><expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:22">frame_type</name><operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="number" pos:start="41:25" pos:end="41:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="49:29"><if pos:start="47:5" pos:end="49:29">if<condition pos:start="47:7" pos:end="47:21">(<expr pos:start="47:8" pos:end="47:20"><name pos:start="47:8" pos:end="47:16">stream_id</name><operator pos:start="47:17" pos:end="47:18">==</operator><operator pos:start="47:19" pos:end="47:19">-</operator><literal type="number" pos:start="47:20" pos:end="47:20">1</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:29"><block_content pos:start="49:9" pos:end="49:29">

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:17">stream_id</name><operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:28"><name pos:start="49:20" pos:end="49:24">get_v</name><argument_list pos:start="49:25" pos:end="49:28">(<argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><name pos:start="49:26" pos:end="49:27">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if<condition pos:start="51:7" pos:end="51:34">(<expr pos:start="51:8" pos:end="51:33"><name pos:start="51:8" pos:end="51:16">stream_id</name> <operator pos:start="51:18" pos:end="51:19">&gt;=</operator> <name pos:start="51:21" pos:end="51:33"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:33">nb_streams</name></name></expr>)</condition><block pos:start="51:35" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:18">

        <expr_stmt pos:start="53:9" pos:end="53:55"><expr pos:start="53:9" pos:end="53:54"><call pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:54">(<argument pos:start="53:16" pos:end="53:16"><expr pos:start="53:16" pos:end="53:16"><name pos:start="53:16" pos:end="53:16">s</name></expr></argument>, <argument pos:start="53:19" pos:end="53:30"><expr pos:start="53:19" pos:end="53:30"><name pos:start="53:19" pos:end="53:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:33" pos:end="53:53"><expr pos:start="53:33" pos:end="53:53"><literal type="string" pos:start="53:33" pos:end="53:53">"illegal stream_id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:18">return <expr pos:start="55:16" pos:end="55:17"><operator pos:start="55:16" pos:end="55:16">-</operator><literal type="number" pos:start="55:17" pos:end="55:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:10">stream</name><operator pos:start="59:11" pos:end="59:11">=</operator> <operator pos:start="59:13" pos:end="59:13">&amp;</operator><name pos:start="59:14" pos:end="59:35"><name pos:start="59:14" pos:end="59:16">nut</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:24">stream</name><index pos:start="59:25" pos:end="59:35">[<expr pos:start="59:26" pos:end="59:34"><name pos:start="59:26" pos:end="59:34">stream_id</name></expr>]</index></name></expr>;</expr_stmt>



<comment type="line" pos:start="63:1" pos:end="63:145">//    av_log(s, AV_LOG_DEBUG, "ft:%d ppts:%d %d %d\n", frame_type, stream-&gt;lru_pts_delta[0], stream-&gt;lru_pts_delta[1], stream-&gt;lru_pts_delta[2]);</comment>

    

    <if_stmt pos:start="67:5" pos:end="81:5"><if pos:start="67:5" pos:end="77:5">if<condition pos:start="67:7" pos:end="67:35">(<expr pos:start="67:8" pos:end="67:34"><name pos:start="67:8" pos:end="67:12">flags</name> <operator pos:start="67:14" pos:end="67:14">&amp;</operator> <name pos:start="67:16" pos:end="67:34">FLAG_PRED_KEY_FRAME</name></expr>)</condition><block pos:start="67:36" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:46">

        <if_stmt pos:start="69:9" pos:end="75:46"><if pos:start="69:9" pos:end="71:47">if<condition pos:start="69:11" pos:end="69:34">(<expr pos:start="69:12" pos:end="69:33"><name pos:start="69:12" pos:end="69:16">flags</name> <operator pos:start="69:18" pos:end="69:18">&amp;</operator> <name pos:start="69:20" pos:end="69:33">FLAG_KEY_FRAME</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:47"><block_content pos:start="71:13" pos:end="71:47">

            <expr_stmt pos:start="71:13" pos:end="71:47"><expr pos:start="71:13" pos:end="71:46"><name pos:start="71:13" pos:end="71:21">key_frame</name><operator pos:start="71:22" pos:end="71:22">=</operator> <operator pos:start="71:24" pos:end="71:24">!</operator><name pos:start="71:25" pos:end="71:46"><name pos:start="71:25" pos:end="71:30">stream</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:46">last_key_frame</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="73:9" pos:end="75:46">else<block type="pseudo" pos:start="75:13" pos:end="75:46"><block_content pos:start="75:13" pos:end="75:46">

            <expr_stmt pos:start="75:13" pos:end="75:46"><expr pos:start="75:13" pos:end="75:45"><name pos:start="75:13" pos:end="75:21">key_frame</name><operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:45"><name pos:start="75:24" pos:end="75:29">stream</name><operator pos:start="75:30" pos:end="75:31">-&gt;</operator><name pos:start="75:32" pos:end="75:45">last_key_frame</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if><else pos:start="77:6" pos:end="81:5">else<block pos:start="77:10" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:46">

        <expr_stmt pos:start="79:9" pos:end="79:46"><expr pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:17">key_frame</name><operator pos:start="79:18" pos:end="79:18">=</operator> <operator pos:start="79:20" pos:end="79:20">!</operator><operator pos:start="79:21" pos:end="79:21">!</operator><operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:27">flags</name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <name pos:start="79:31" pos:end="79:44">FLAG_KEY_FRAME</name><operator pos:start="79:45" pos:end="79:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="85:5" pos:end="125:5"><if pos:start="85:5" pos:end="121:5">if<condition pos:start="85:7" pos:end="85:24">(<expr pos:start="85:8" pos:end="85:23"><name pos:start="85:8" pos:end="85:12">flags</name> <operator pos:start="85:14" pos:end="85:14">&amp;</operator> <name pos:start="85:16" pos:end="85:23">FLAG_PTS</name></expr>)</condition><block pos:start="85:25" pos:end="121:5">{<block_content pos:start="87:9" pos:end="119:9">

        <if_stmt pos:start="87:9" pos:end="119:9"><if pos:start="87:9" pos:end="111:9">if<condition pos:start="87:11" pos:end="87:33">(<expr pos:start="87:12" pos:end="87:32"><name pos:start="87:12" pos:end="87:16">flags</name> <operator pos:start="87:18" pos:end="87:18">&amp;</operator> <name pos:start="87:20" pos:end="87:32">FLAG_FULL_PTS</name></expr>)</condition><block pos:start="87:34" pos:end="111:9">{<block_content pos:start="89:13" pos:end="109:13">

            <expr_stmt pos:start="89:13" pos:end="89:27"><expr pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:15">pts</name><operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:22">get_v</name><argument_list pos:start="89:23" pos:end="89:26">(<argument pos:start="89:24" pos:end="89:25"><expr pos:start="89:24" pos:end="89:25"><name pos:start="89:24" pos:end="89:25">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="109:13"><if pos:start="91:13" pos:end="109:13">if<condition pos:start="91:15" pos:end="91:39">(<expr pos:start="91:16" pos:end="91:38"><name pos:start="91:16" pos:end="91:25">frame_type</name> <operator pos:start="91:27" pos:end="91:28">&amp;&amp;</operator> <name pos:start="91:30" pos:end="91:38">key_frame</name></expr>)</condition><block pos:start="91:40" pos:end="109:13">{<block_content pos:start="93:17" pos:end="107:57">

                <expr_stmt pos:start="93:17" pos:end="103:38"><expr pos:start="93:17" pos:end="103:37"><call pos:start="93:17" pos:end="103:37"><name pos:start="93:17" pos:end="93:34">av_add_index_entry</name><argument_list pos:start="93:35" pos:end="103:37">(

                    <argument pos:start="95:21" pos:end="95:41"><expr pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:30">streams</name><index pos:start="95:31" pos:end="95:41">[<expr pos:start="95:32" pos:end="95:40"><name pos:start="95:32" pos:end="95:40">stream_id</name></expr>]</index></name></expr></argument>, 

                    <argument pos:start="97:21" pos:end="97:31"><expr pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:31">frame_start</name></expr></argument>, 

                    <argument pos:start="99:21" pos:end="99:23"><expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:23">pts</name></expr></argument>, 

                    <argument pos:start="101:21" pos:end="101:70"><expr pos:start="101:21" pos:end="101:70"><name pos:start="101:21" pos:end="101:31">frame_start</name> <operator pos:start="101:33" pos:end="101:33">-</operator> <name pos:start="101:35" pos:end="101:56"><name pos:start="101:35" pos:end="101:37">nut</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:45">stream</name><index pos:start="101:46" pos:end="101:56">[<expr pos:start="101:47" pos:end="101:55"><name pos:start="101:47" pos:end="101:55">stream_id</name></expr>]</index></name><operator pos:start="101:57" pos:end="101:57">.</operator><name pos:start="101:58" pos:end="101:70">last_sync_pos</name></expr></argument>,

                    <argument pos:start="103:21" pos:end="103:36"><expr pos:start="103:21" pos:end="103:36"><name pos:start="103:21" pos:end="103:36">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:66"><expr pos:start="105:17" pos:end="105:65"><name pos:start="105:17" pos:end="105:38"><name pos:start="105:17" pos:end="105:19">nut</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:27">stream</name><index pos:start="105:28" pos:end="105:38">[<expr pos:start="105:29" pos:end="105:37"><name pos:start="105:29" pos:end="105:37">stream_id</name></expr>]</index></name><operator pos:start="105:39" pos:end="105:39">.</operator><name pos:start="105:40" pos:end="105:52">last_sync_pos</name><operator pos:start="105:53" pos:end="105:53">=</operator> <name pos:start="105:55" pos:end="105:65">frame_start</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:57"><expr pos:start="107:17" pos:end="107:56"><call pos:start="107:17" pos:end="107:56"><name pos:start="107:17" pos:end="107:22">assert</name><argument_list pos:start="107:23" pos:end="107:56">(<argument pos:start="107:24" pos:end="107:55"><expr pos:start="107:24" pos:end="107:55"><name pos:start="107:24" pos:end="107:40"><name pos:start="107:24" pos:end="107:26">nut</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:40">packet_start</name></name> <operator pos:start="107:42" pos:end="107:43">==</operator> <name pos:start="107:45" pos:end="107:55">frame_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="111:10" pos:end="119:9">else<block pos:start="111:14" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:52">

            <decl_stmt pos:start="113:13" pos:end="113:62"><decl pos:start="113:13" pos:end="113:61"><type pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:19">int64_t</name></type> <name pos:start="113:21" pos:end="113:24">mask</name> <init pos:start="113:26" pos:end="113:61">= <expr pos:start="113:28" pos:end="113:61"><operator pos:start="113:28" pos:end="113:28">(</operator><literal type="number" pos:start="113:29" pos:end="113:29">1</literal><operator pos:start="113:30" pos:end="113:31">&lt;&lt;</operator><name pos:start="113:32" pos:end="113:58"><name pos:start="113:32" pos:end="113:37">stream</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:58">msb_timestamp_shift</name></name><operator pos:start="113:59" pos:end="113:59">)</operator><operator pos:start="113:60" pos:end="113:60">-</operator><literal type="number" pos:start="113:61" pos:end="113:61">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="115:13" pos:end="115:53"><decl pos:start="115:13" pos:end="115:52"><type pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:19">int64_t</name></type> <name pos:start="115:21" pos:end="115:25">delta</name><init pos:start="115:26" pos:end="115:52">= <expr pos:start="115:28" pos:end="115:52"><name pos:start="115:28" pos:end="115:43"><name pos:start="115:28" pos:end="115:33">stream</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:43">last_pts</name></name> <operator pos:start="115:45" pos:end="115:45">-</operator> <name pos:start="115:47" pos:end="115:50">mask</name><operator pos:start="115:51" pos:end="115:51">/</operator><literal type="number" pos:start="115:52" pos:end="115:52">2</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:52"><expr pos:start="117:13" pos:end="117:51"><name pos:start="117:13" pos:end="117:15">pts</name><operator pos:start="117:16" pos:end="117:16">=</operator> <operator pos:start="117:18" pos:end="117:18">(</operator><operator pos:start="117:19" pos:end="117:19">(</operator><call pos:start="117:20" pos:end="117:28"><name pos:start="117:20" pos:end="117:24">get_v</name><argument_list pos:start="117:25" pos:end="117:28">(<argument pos:start="117:26" pos:end="117:27"><expr pos:start="117:26" pos:end="117:27"><name pos:start="117:26" pos:end="117:27">bc</name></expr></argument>)</argument_list></call> <operator pos:start="117:30" pos:end="117:30">-</operator> <name pos:start="117:32" pos:end="117:36">delta</name><operator pos:start="117:37" pos:end="117:37">)</operator><operator pos:start="117:38" pos:end="117:38">&amp;</operator><name pos:start="117:39" pos:end="117:42">mask</name><operator pos:start="117:43" pos:end="117:43">)</operator> <operator pos:start="117:45" pos:end="117:45">+</operator> <name pos:start="117:47" pos:end="117:51">delta</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="121:6" pos:end="125:5">else<block pos:start="121:10" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:69">

        <expr_stmt pos:start="123:9" pos:end="123:69"><expr pos:start="123:9" pos:end="123:68"><name pos:start="123:9" pos:end="123:11">pts</name><operator pos:start="123:12" pos:end="123:12">=</operator> <name pos:start="123:14" pos:end="123:29"><name pos:start="123:14" pos:end="123:19">stream</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">last_pts</name></name> <operator pos:start="123:31" pos:end="123:31">+</operator> <name pos:start="123:33" pos:end="123:68"><name pos:start="123:33" pos:end="123:38">stream</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:53">lru_pts_delta</name><index pos:start="123:54" pos:end="123:68">[<expr pos:start="123:55" pos:end="123:67"><operator pos:start="123:55" pos:end="123:55">(</operator><name pos:start="123:56" pos:end="123:60">flags</name><operator pos:start="123:61" pos:end="123:61">&amp;</operator><literal type="number" pos:start="123:62" pos:end="123:63">12</literal><operator pos:start="123:64" pos:end="123:64">)</operator><operator pos:start="123:65" pos:end="123:66">&gt;&gt;</operator><literal type="number" pos:start="123:67" pos:end="123:67">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

  

    <if_stmt pos:start="129:5" pos:end="143:5"><if pos:start="129:5" pos:end="133:5">if<condition pos:start="129:7" pos:end="129:28">(<expr pos:start="129:8" pos:end="129:27"><name pos:start="129:8" pos:end="129:15">size_mul</name> <operator pos:start="129:17" pos:end="129:18">&lt;=</operator> <name pos:start="129:20" pos:end="129:27">size_lsb</name></expr>)</condition><block pos:start="129:29" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:52">

        <expr_stmt pos:start="131:9" pos:end="131:52"><expr pos:start="131:9" pos:end="131:51"><name pos:start="131:9" pos:end="131:12">size</name><operator pos:start="131:13" pos:end="131:13">=</operator> <name pos:start="131:15" pos:end="131:51"><name pos:start="131:15" pos:end="131:20">stream</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:30">lru_size</name><index pos:start="131:31" pos:end="131:51">[<expr pos:start="131:32" pos:end="131:50"><name pos:start="131:32" pos:end="131:39">size_lsb</name> <operator pos:start="131:41" pos:end="131:41">-</operator> <name pos:start="131:43" pos:end="131:50">size_mul</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="133:6" pos:end="143:5">else<block pos:start="133:10" pos:end="143:5">{<block_content pos:start="135:9" pos:end="141:27">

        <if_stmt pos:start="135:9" pos:end="141:27"><if pos:start="135:9" pos:end="137:48">if<condition pos:start="135:11" pos:end="135:34">(<expr pos:start="135:12" pos:end="135:33"><name pos:start="135:12" pos:end="135:16">flags</name> <operator pos:start="135:18" pos:end="135:18">&amp;</operator> <name pos:start="135:20" pos:end="135:33">FLAG_DATA_SIZE</name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:48"><block_content pos:start="137:13" pos:end="137:48">

            <expr_stmt pos:start="137:13" pos:end="137:48"><expr pos:start="137:13" pos:end="137:47"><name pos:start="137:13" pos:end="137:16">size</name><operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:26">size_mul</name><operator pos:start="137:27" pos:end="137:27">*</operator><call pos:start="137:28" pos:end="137:36"><name pos:start="137:28" pos:end="137:32">get_v</name><argument_list pos:start="137:33" pos:end="137:36">(<argument pos:start="137:34" pos:end="137:35"><expr pos:start="137:34" pos:end="137:35"><name pos:start="137:34" pos:end="137:35">bc</name></expr></argument>)</argument_list></call> <operator pos:start="137:38" pos:end="137:38">+</operator> <name pos:start="137:40" pos:end="137:47">size_lsb</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="139:9" pos:end="141:27">else<block type="pseudo" pos:start="141:13" pos:end="141:27"><block_content pos:start="141:13" pos:end="141:27">

            <expr_stmt pos:start="141:13" pos:end="141:27"><expr pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:16">size</name><operator pos:start="141:17" pos:end="141:17">=</operator> <name pos:start="141:19" pos:end="141:26">size_lsb</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

      

<comment type="line" pos:start="147:1" pos:end="147:133">//av_log(s, AV_LOG_DEBUG, "fs:%lld fc:%d ft:%d kf:%d pts:%lld size:%d\n", frame_start, frame_code, frame_type, key_frame, pts, size);</comment>



    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if<condition pos:start="151:7" pos:end="151:75">(<expr pos:start="151:8" pos:end="151:74"><call pos:start="151:8" pos:end="151:20"><name pos:start="151:8" pos:end="151:16">url_ftell</name><argument_list pos:start="151:17" pos:end="151:20">(<argument pos:start="151:18" pos:end="151:19"><expr pos:start="151:18" pos:end="151:19"><name pos:start="151:18" pos:end="151:19">bc</name></expr></argument>)</argument_list></call> <operator pos:start="151:22" pos:end="151:22">-</operator> <name pos:start="151:24" pos:end="151:40"><name pos:start="151:24" pos:end="151:26">nut</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:40">packet_start</name></name> <operator pos:start="151:42" pos:end="151:42">+</operator> <name pos:start="151:44" pos:end="151:47">size</name> <operator pos:start="151:49" pos:end="151:49">&gt;</operator> <name pos:start="151:51" pos:end="151:74"><name pos:start="151:51" pos:end="151:53">nut</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:74">written_packet_size</name></name></expr>)</condition><block pos:start="151:76" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:18">

        <expr_stmt pos:start="153:9" pos:end="153:58"><expr pos:start="153:9" pos:end="153:57"><call pos:start="153:9" pos:end="153:57"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="153:57">(<argument pos:start="153:16" pos:end="153:16"><expr pos:start="153:16" pos:end="153:16"><name pos:start="153:16" pos:end="153:16">s</name></expr></argument>, <argument pos:start="153:19" pos:end="153:30"><expr pos:start="153:19" pos:end="153:30"><name pos:start="153:19" pos:end="153:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:33" pos:end="153:56"><expr pos:start="153:33" pos:end="153:56"><literal type="string" pos:start="153:33" pos:end="153:56">"frame size too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="155:9" pos:end="155:18">return <expr pos:start="155:16" pos:end="155:17"><operator pos:start="155:16" pos:end="155:16">-</operator><literal type="number" pos:start="155:17" pos:end="155:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="161:5" pos:end="161:29"><expr pos:start="161:5" pos:end="161:28"><call pos:start="161:5" pos:end="161:28"><name pos:start="161:5" pos:end="161:17">av_new_packet</name><argument_list pos:start="161:18" pos:end="161:28">(<argument pos:start="161:19" pos:end="161:21"><expr pos:start="161:19" pos:end="161:21"><name pos:start="161:19" pos:end="161:21">pkt</name></expr></argument>, <argument pos:start="161:24" pos:end="161:27"><expr pos:start="161:24" pos:end="161:27"><name pos:start="161:24" pos:end="161:27">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:36"><expr pos:start="163:5" pos:end="163:35"><call pos:start="163:5" pos:end="163:35"><name pos:start="163:5" pos:end="163:14">get_buffer</name><argument_list pos:start="163:15" pos:end="163:35">(<argument pos:start="163:16" pos:end="163:17"><expr pos:start="163:16" pos:end="163:17"><name pos:start="163:16" pos:end="163:17">bc</name></expr></argument>, <argument pos:start="163:20" pos:end="163:28"><expr pos:start="163:20" pos:end="163:28"><name pos:start="163:20" pos:end="163:28"><name pos:start="163:20" pos:end="163:22">pkt</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:28">data</name></name></expr></argument>, <argument pos:start="163:31" pos:end="163:34"><expr pos:start="163:31" pos:end="163:34"><name pos:start="163:31" pos:end="163:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:34"><expr pos:start="165:5" pos:end="165:33"><name pos:start="165:5" pos:end="165:21"><name pos:start="165:5" pos:end="165:7">pkt</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:21">stream_index</name></name> <operator pos:start="165:23" pos:end="165:23">=</operator> <name pos:start="165:25" pos:end="165:33">stream_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="169:35"><if pos:start="167:5" pos:end="169:35">if <condition pos:start="167:8" pos:end="167:18">(<expr pos:start="167:9" pos:end="167:17"><name pos:start="167:9" pos:end="167:17">key_frame</name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:35"><block_content pos:start="169:9" pos:end="169:35">

	<expr_stmt pos:start="169:9" pos:end="169:35"><expr pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:18"><name pos:start="169:9" pos:end="169:11">pkt</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:18">flags</name></name> <operator pos:start="169:20" pos:end="169:21">|=</operator> <name pos:start="169:23" pos:end="169:34">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:72"><expr pos:start="171:5" pos:end="171:71"><name pos:start="171:5" pos:end="171:12"><name pos:start="171:5" pos:end="171:7">pkt</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:12">pts</name></name> <operator pos:start="171:14" pos:end="171:14">=</operator> <name pos:start="171:16" pos:end="171:18">pts</name> <operator pos:start="171:20" pos:end="171:20">*</operator> <name pos:start="171:22" pos:end="171:33">AV_TIME_BASE</name> <operator pos:start="171:35" pos:end="171:35">*</operator> <name pos:start="171:37" pos:end="171:52"><name pos:start="171:37" pos:end="171:42">stream</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:52">rate_den</name></name> <operator pos:start="171:54" pos:end="171:54">/</operator> <name pos:start="171:56" pos:end="171:71"><name pos:start="171:56" pos:end="171:61">stream</name><operator pos:start="171:62" pos:end="171:63">-&gt;</operator><name pos:start="171:64" pos:end="171:71">rate_num</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:86"><expr pos:start="175:5" pos:end="175:85"><call pos:start="175:5" pos:end="175:85"><name pos:start="175:5" pos:end="175:10">update</name><argument_list pos:start="175:11" pos:end="175:85">(<argument pos:start="175:12" pos:end="175:14"><expr pos:start="175:12" pos:end="175:14"><name pos:start="175:12" pos:end="175:14">nut</name></expr></argument>, <argument pos:start="175:17" pos:end="175:25"><expr pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:25">stream_id</name></expr></argument>, <argument pos:start="175:28" pos:end="175:38"><expr pos:start="175:28" pos:end="175:38"><name pos:start="175:28" pos:end="175:38">frame_start</name></expr></argument>, <argument pos:start="175:41" pos:end="175:50"><expr pos:start="175:41" pos:end="175:50"><name pos:start="175:41" pos:end="175:50">frame_type</name></expr></argument>, <argument pos:start="175:53" pos:end="175:62"><expr pos:start="175:53" pos:end="175:62"><name pos:start="175:53" pos:end="175:62">frame_code</name></expr></argument>, <argument pos:start="175:65" pos:end="175:73"><expr pos:start="175:65" pos:end="175:73"><name pos:start="175:65" pos:end="175:73">key_frame</name></expr></argument>, <argument pos:start="175:76" pos:end="175:79"><expr pos:start="175:76" pos:end="175:79"><name pos:start="175:76" pos:end="175:79">size</name></expr></argument>, <argument pos:start="175:82" pos:end="175:84"><expr pos:start="175:82" pos:end="175:84"><name pos:start="175:82" pos:end="175:84">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <return pos:start="179:5" pos:end="179:13">return <expr pos:start="179:12" pos:end="179:12"><literal type="number" pos:start="179:12" pos:end="179:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
