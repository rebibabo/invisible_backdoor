<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16106.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">writer_print_time</name><parameter_list pos:start="1:30" pos:end="3:87">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:43">WriterContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">wctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:61">char</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">key</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:37">int64_t</name></type> <name pos:start="3:39" pos:end="3:40">ts</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:69"><decl pos:start="3:43" pos:end="3:69"><type pos:start="3:43" pos:end="3:69"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:58">AVRational</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:69">time_base</name></decl></parameter>, <parameter pos:start="3:72" pos:end="3:86"><decl pos:start="3:72" pos:end="3:86"><type pos:start="3:72" pos:end="3:86"><name pos:start="3:72" pos:end="3:74">int</name></type> <name pos:start="3:76" pos:end="3:86">is_duration</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="31:1">{<block_content pos:start="7:5" pos:end="29:5">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:17">[<expr pos:start="7:14" pos:end="7:16"><literal type="number" pos:start="7:14" pos:end="7:16">128</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:75">(<expr pos:start="11:9" pos:end="11:74"><operator pos:start="11:9" pos:end="11:9">(</operator><operator pos:start="11:10" pos:end="11:10">!</operator><name pos:start="11:11" pos:end="11:21">is_duration</name> <operator pos:start="11:23" pos:end="11:24">&amp;&amp;</operator> <name pos:start="11:26" pos:end="11:27">ts</name> <operator pos:start="11:29" pos:end="11:30">==</operator> <name pos:start="11:32" pos:end="11:45">AV_NOPTS_VALUE</name><operator pos:start="11:46" pos:end="11:46">)</operator> <operator pos:start="11:48" pos:end="11:49">||</operator> <operator pos:start="11:51" pos:end="11:51">(</operator><name pos:start="11:52" pos:end="11:62">is_duration</name> <operator pos:start="11:64" pos:end="11:65">&amp;&amp;</operator> <name pos:start="11:67" pos:end="11:68">ts</name> <operator pos:start="11:70" pos:end="11:71">==</operator> <literal type="number" pos:start="11:73" pos:end="11:73">0</literal><operator pos:start="11:74" pos:end="11:74">)</operator></expr>)</condition> <block pos:start="11:77" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:49">

        <expr_stmt pos:start="13:9" pos:end="13:49"><expr pos:start="13:9" pos:end="13:48"><call pos:start="13:9" pos:end="13:48"><name pos:start="13:9" pos:end="13:27">writer_print_string</name><argument_list pos:start="13:28" pos:end="13:48">(<argument pos:start="13:29" pos:end="13:32"><expr pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:32">wctx</name></expr></argument>, <argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">key</name></expr></argument>, <argument pos:start="13:40" pos:end="13:44"><expr pos:start="13:40" pos:end="13:44"><literal type="string" pos:start="13:40" pos:end="13:44">"N/A"</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:47"><expr pos:start="13:47" pos:end="13:47"><literal type="number" pos:start="13:47" pos:end="13:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="29:5">else <block pos:start="15:12" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:47">

        <decl_stmt pos:start="17:9" pos:end="17:43"><decl pos:start="17:9" pos:end="17:42"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">double</name></type> <name pos:start="17:16" pos:end="17:16">d</name> <init pos:start="17:18" pos:end="17:42">= <expr pos:start="17:20" pos:end="17:42"><name pos:start="17:20" pos:end="17:21">ts</name> <operator pos:start="17:23" pos:end="17:23">*</operator> <call pos:start="17:25" pos:end="17:42"><name pos:start="17:25" pos:end="17:30">av_q2d</name><argument_list pos:start="17:31" pos:end="17:42">(<argument pos:start="17:32" pos:end="17:41"><expr pos:start="17:32" pos:end="17:41"><operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:41">time_base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:29"><decl pos:start="19:9" pos:end="19:28"><type pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:14">struct</name> <name pos:start="19:16" pos:end="19:25">unit_value</name></name></type> <name pos:start="19:27" pos:end="19:28">uv</name></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:10">uv</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:14">val</name><operator pos:start="21:15" pos:end="21:15">.</operator><name pos:start="21:16" pos:end="21:16">d</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:20">d</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:34"><expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:10">uv</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:15">unit</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:33">unit_second_str</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:20">value_string</name><argument_list pos:start="25:21" pos:end="25:42">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">buf</name></expr></argument>, <argument pos:start="25:27" pos:end="25:37"><expr pos:start="25:27" pos:end="25:37"><sizeof pos:start="25:27" pos:end="25:37">sizeof<argument_list pos:start="25:33" pos:end="25:37">(<argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:40" pos:end="25:41"><expr pos:start="25:40" pos:end="25:41"><name pos:start="25:40" pos:end="25:41">uv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><call pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:27">writer_print_string</name><argument_list pos:start="27:28" pos:end="27:46">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">wctx</name></expr></argument>, <argument pos:start="27:35" pos:end="27:37"><expr pos:start="27:35" pos:end="27:37"><name pos:start="27:35" pos:end="27:37">key</name></expr></argument>, <argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">buf</name></expr></argument>, <argument pos:start="27:45" pos:end="27:45"><expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
