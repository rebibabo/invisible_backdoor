<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1044.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">av_dict_set</name><parameter_list pos:start="1:16" pos:end="3:26">(<parameter pos:start="1:17" pos:end="1:33"><decl pos:start="1:17" pos:end="1:33"><type pos:start="1:17" pos:end="1:33"><name pos:start="1:17" pos:end="1:28">AVDictionary</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier><modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:33">pm</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">key</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">value</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:25"><decl pos:start="3:17" pos:end="3:25"><type pos:start="3:17" pos:end="3:25"><name pos:start="3:17" pos:end="3:19">int</name></type> <name pos:start="3:21" pos:end="3:25">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:13">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVDictionary</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">m</name> <init pos:start="7:21" pos:end="7:25">= <expr pos:start="7:23" pos:end="7:25"><operator pos:start="7:23" pos:end="7:23">*</operator><name pos:start="7:24" pos:end="7:25">pm</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">tag</name> <init pos:start="9:28" pos:end="9:61">= <expr pos:start="9:30" pos:end="9:61"><call pos:start="9:30" pos:end="9:61"><name pos:start="9:30" pos:end="9:40">av_dict_get</name><argument_list pos:start="9:41" pos:end="9:61">(<argument pos:start="9:42" pos:end="9:42"><expr pos:start="9:42" pos:end="9:42"><name pos:start="9:42" pos:end="9:42">m</name></expr></argument>, <argument pos:start="9:45" pos:end="9:47"><expr pos:start="9:45" pos:end="9:47"><name pos:start="9:45" pos:end="9:47">key</name></expr></argument>, <argument pos:start="9:50" pos:end="9:53"><expr pos:start="9:50" pos:end="9:53"><name pos:start="9:50" pos:end="9:53">NULL</name></expr></argument>, <argument pos:start="9:56" pos:end="9:60"><expr pos:start="9:56" pos:end="9:60"><name pos:start="9:56" pos:end="9:60">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">oldval</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:41"><if pos:start="15:5" pos:end="17:41">if <condition pos:start="15:8" pos:end="15:11">(<expr pos:start="15:9" pos:end="15:10"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:10">m</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:41"><block_content pos:start="17:9" pos:end="17:41">

        <expr_stmt pos:start="17:9" pos:end="17:41"><expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:9">m</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <operator pos:start="17:13" pos:end="17:13">*</operator><name pos:start="17:14" pos:end="17:15">pm</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:40"><name pos:start="17:19" pos:end="17:28">av_mallocz</name><argument_list pos:start="17:29" pos:end="17:40">(<argument pos:start="17:30" pos:end="17:39"><expr pos:start="17:30" pos:end="17:39"><sizeof pos:start="17:30" pos:end="17:39">sizeof<argument_list pos:start="17:36" pos:end="17:39">(<argument pos:start="17:37" pos:end="17:38"><expr pos:start="17:37" pos:end="17:38"><operator pos:start="17:37" pos:end="17:37">*</operator><name pos:start="17:38" pos:end="17:38">m</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="53:5"><if pos:start="21:5" pos:end="39:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">tag</name></expr>)</condition> <block pos:start="21:14" pos:end="39:5">{<block_content pos:start="23:9" pos:end="37:36">

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:43">(<expr pos:start="23:13" pos:end="23:42"><name pos:start="23:13" pos:end="23:17">flags</name> <operator pos:start="23:19" pos:end="23:19">&amp;</operator> <name pos:start="23:21" pos:end="23:42">AV_DICT_DONT_OVERWRITE</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="33:32"><if pos:start="27:9" pos:end="29:32">if <condition pos:start="27:12" pos:end="27:35">(<expr pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:17">flags</name> <operator pos:start="27:19" pos:end="27:19">&amp;</operator> <name pos:start="27:21" pos:end="27:34">AV_DICT_APPEND</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:32"><block_content pos:start="29:13" pos:end="29:32">

            <expr_stmt pos:start="29:13" pos:end="29:32"><expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:18">oldval</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:31"><name pos:start="29:22" pos:end="29:24">tag</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">value</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="31:9" pos:end="33:32">else<block type="pseudo" pos:start="33:13" pos:end="33:32"><block_content pos:start="33:13" pos:end="33:32">

            <expr_stmt pos:start="33:13" pos:end="33:32"><expr pos:start="33:13" pos:end="33:31"><call pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:19">av_free</name><argument_list pos:start="33:20" pos:end="33:31">(<argument pos:start="33:21" pos:end="33:30"><expr pos:start="33:21" pos:end="33:30"><name pos:start="33:21" pos:end="33:30"><name pos:start="33:21" pos:end="33:23">tag</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:30">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><call pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:15">av_free</name><argument_list pos:start="35:16" pos:end="35:25">(<argument pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:19">tag</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:24">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:12">tag</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:35"><name pos:start="37:16" pos:end="37:16">m</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">elems</name><index pos:start="37:24" pos:end="37:35">[<expr pos:start="37:25" pos:end="37:34"><operator pos:start="37:25" pos:end="37:26">--</operator><name pos:start="37:27" pos:end="37:34"><name pos:start="37:27" pos:end="37:27">m</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:34">count</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="53:5">else <block pos:start="39:12" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:35">

        <decl_stmt pos:start="41:9" pos:end="43:80"><decl pos:start="41:9" pos:end="43:79"><type pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:25">AVDictionaryEntry</name> <modifier pos:start="41:27" pos:end="41:27">*</modifier></type><name pos:start="41:28" pos:end="41:30">tmp</name> <init pos:start="41:32" pos:end="43:79">= <expr pos:start="41:34" pos:end="43:79"><call pos:start="41:34" pos:end="43:79"><name pos:start="41:34" pos:end="41:43">av_realloc</name><argument_list pos:start="41:44" pos:end="43:79">(<argument pos:start="41:45" pos:end="41:52"><expr pos:start="41:45" pos:end="41:52"><name pos:start="41:45" pos:end="41:52"><name pos:start="41:45" pos:end="41:45">m</name><operator pos:start="41:46" pos:end="41:47">-&gt;</operator><name pos:start="41:48" pos:end="41:52">elems</name></name></expr></argument>,

                                            <argument pos:start="43:45" pos:end="43:78"><expr pos:start="43:45" pos:end="43:78"><operator pos:start="43:45" pos:end="43:45">(</operator><name pos:start="43:46" pos:end="43:53"><name pos:start="43:46" pos:end="43:46">m</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:53">count</name></name> <operator pos:start="43:55" pos:end="43:55">+</operator> <literal type="number" pos:start="43:57" pos:end="43:57">1</literal><operator pos:start="43:58" pos:end="43:58">)</operator> <operator pos:start="43:60" pos:end="43:60">*</operator> <sizeof pos:start="43:62" pos:end="43:78">sizeof<argument_list pos:start="43:68" pos:end="43:78">(<argument pos:start="43:69" pos:end="43:77"><expr pos:start="43:69" pos:end="43:77"><operator pos:start="43:69" pos:end="43:69">*</operator><name pos:start="43:70" pos:end="43:77"><name pos:start="43:70" pos:end="43:70">m</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:77">elems</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="51:35"><if pos:start="45:9" pos:end="47:27">if <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">tmp</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:27"><block_content pos:start="47:13" pos:end="47:27">

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">m</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">elems</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:26">tmp</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="49:9" pos:end="51:35">else<block type="pseudo" pos:start="51:13" pos:end="51:35"><block_content pos:start="51:13" pos:end="51:35">

            <return pos:start="51:13" pos:end="51:35">return <expr pos:start="51:20" pos:end="51:34"><call pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:26">AVERROR</name><argument_list pos:start="51:27" pos:end="51:34">(<argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="55:5" pos:end="87:5"><if pos:start="55:5" pos:end="87:5">if <condition pos:start="55:8" pos:end="55:14">(<expr pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:13">value</name></expr>)</condition> <block pos:start="55:16" pos:end="87:5">{<block_content pos:start="57:9" pos:end="85:19">

        <if_stmt pos:start="57:9" pos:end="63:52"><if pos:start="57:9" pos:end="59:41">if <condition pos:start="57:12" pos:end="57:44">(<expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:17">flags</name> <operator pos:start="57:19" pos:end="57:19">&amp;</operator> <name pos:start="57:21" pos:end="57:43">AV_DICT_DONT_STRDUP_KEY</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:41"><block_content pos:start="59:13" pos:end="59:41">

            <expr_stmt pos:start="59:13" pos:end="59:41"><expr pos:start="59:13" pos:end="59:40"><name pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:13">m</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:20">elems</name><index pos:start="59:21" pos:end="59:30">[<expr pos:start="59:22" pos:end="59:29"><name pos:start="59:22" pos:end="59:29"><name pos:start="59:22" pos:end="59:22">m</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:29">count</name></name></expr>]</index></name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:34">key</name> <operator pos:start="59:36" pos:end="59:36">=</operator> <name pos:start="59:38" pos:end="59:40">key</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="61:9" pos:end="63:52">else<block type="pseudo" pos:start="63:13" pos:end="63:52"><block_content pos:start="63:13" pos:end="63:52">

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:13">m</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:20">elems</name><index pos:start="63:21" pos:end="63:30">[<expr pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:22">m</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:29">count</name></name></expr>]</index></name><operator pos:start="63:31" pos:end="63:31">.</operator><name pos:start="63:32" pos:end="63:34">key</name> <operator pos:start="63:36" pos:end="63:36">=</operator> <call pos:start="63:38" pos:end="63:51"><name pos:start="63:38" pos:end="63:46">av_strdup</name><argument_list pos:start="63:47" pos:end="63:51">(<argument pos:start="63:48" pos:end="63:50"><expr pos:start="63:48" pos:end="63:50"><name pos:start="63:48" pos:end="63:50">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="65:9" pos:end="83:56"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:44">(<expr pos:start="65:13" pos:end="65:43"><name pos:start="65:13" pos:end="65:17">flags</name> <operator pos:start="65:19" pos:end="65:19">&amp;</operator> <name pos:start="65:21" pos:end="65:43">AV_DICT_DONT_STRDUP_VAL</name></expr>)</condition> <block pos:start="65:46" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:45">

            <expr_stmt pos:start="67:13" pos:end="67:45"><expr pos:start="67:13" pos:end="67:44"><name pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:13">m</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:20">elems</name><index pos:start="67:21" pos:end="67:30">[<expr pos:start="67:22" pos:end="67:29"><name pos:start="67:22" pos:end="67:29"><name pos:start="67:22" pos:end="67:22">m</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:29">count</name></name></expr>]</index></name><operator pos:start="67:31" pos:end="67:31">.</operator><name pos:start="67:32" pos:end="67:36">value</name> <operator pos:start="67:38" pos:end="67:38">=</operator> <name pos:start="67:40" pos:end="67:44">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="69:11" pos:end="81:9">else if <condition pos:start="69:19" pos:end="69:52">(<expr pos:start="69:20" pos:end="69:51"><name pos:start="69:20" pos:end="69:25">oldval</name> <operator pos:start="69:27" pos:end="69:28">&amp;&amp;</operator> <name pos:start="69:30" pos:end="69:34">flags</name> <operator pos:start="69:36" pos:end="69:36">&amp;</operator> <name pos:start="69:38" pos:end="69:51">AV_DICT_APPEND</name></expr>)</condition> <block pos:start="69:54" pos:end="81:9">{<block_content pos:start="71:13" pos:end="79:46">

            <decl_stmt pos:start="71:13" pos:end="71:57"><decl pos:start="71:13" pos:end="71:56"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:19">len</name> <init pos:start="71:21" pos:end="71:56">= <expr pos:start="71:23" pos:end="71:56"><call pos:start="71:23" pos:end="71:36"><name pos:start="71:23" pos:end="71:28">strlen</name><argument_list pos:start="71:29" pos:end="71:36">(<argument pos:start="71:30" pos:end="71:35"><expr pos:start="71:30" pos:end="71:35"><name pos:start="71:30" pos:end="71:35">oldval</name></expr></argument>)</argument_list></call> <operator pos:start="71:38" pos:end="71:38">+</operator> <call pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:45">strlen</name><argument_list pos:start="71:46" pos:end="71:52">(<argument pos:start="71:47" pos:end="71:51"><expr pos:start="71:47" pos:end="71:51"><name pos:start="71:47" pos:end="71:51">value</name></expr></argument>)</argument_list></call> <operator pos:start="71:54" pos:end="71:54">+</operator> <literal type="number" pos:start="71:56" pos:end="71:56">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="73:13" pos:end="75:39"><if pos:start="73:13" pos:end="75:39">if <condition pos:start="73:16" pos:end="73:52">(<expr pos:start="73:17" pos:end="73:51"><operator pos:start="73:17" pos:end="73:17">!</operator><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:24">oldval</name> <operator pos:start="73:26" pos:end="73:26">=</operator> <call pos:start="73:28" pos:end="73:50"><name pos:start="73:28" pos:end="73:37">av_realloc</name><argument_list pos:start="73:38" pos:end="73:50">(<argument pos:start="73:39" pos:end="73:44"><expr pos:start="73:39" pos:end="73:44"><name pos:start="73:39" pos:end="73:44">oldval</name></expr></argument>, <argument pos:start="73:47" pos:end="73:49"><expr pos:start="73:47" pos:end="73:49"><name pos:start="73:47" pos:end="73:49">len</name></expr></argument>)</argument_list></call><operator pos:start="73:51" pos:end="73:51">)</operator></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:39"><block_content pos:start="75:17" pos:end="75:39">

                <return pos:start="75:17" pos:end="75:39">return <expr pos:start="75:24" pos:end="75:38"><call pos:start="75:24" pos:end="75:38"><name pos:start="75:24" pos:end="75:30">AVERROR</name><argument_list pos:start="75:31" pos:end="75:38">(<argument pos:start="75:32" pos:end="75:37"><expr pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:43"><expr pos:start="77:13" pos:end="77:42"><call pos:start="77:13" pos:end="77:42"><name pos:start="77:13" pos:end="77:22">av_strlcat</name><argument_list pos:start="77:23" pos:end="77:42">(<argument pos:start="77:24" pos:end="77:29"><expr pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:29">oldval</name></expr></argument>, <argument pos:start="77:32" pos:end="77:36"><expr pos:start="77:32" pos:end="77:36"><name pos:start="77:32" pos:end="77:36">value</name></expr></argument>, <argument pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:46"><expr pos:start="79:13" pos:end="79:45"><name pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:13">m</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:20">elems</name><index pos:start="79:21" pos:end="79:30">[<expr pos:start="79:22" pos:end="79:29"><name pos:start="79:22" pos:end="79:29"><name pos:start="79:22" pos:end="79:22">m</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:29">count</name></name></expr>]</index></name><operator pos:start="79:31" pos:end="79:31">.</operator><name pos:start="79:32" pos:end="79:36">value</name> <operator pos:start="79:38" pos:end="79:38">=</operator> <name pos:start="79:40" pos:end="79:45">oldval</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="83:56">else<block type="pseudo" pos:start="83:13" pos:end="83:56"><block_content pos:start="83:13" pos:end="83:56">

            <expr_stmt pos:start="83:13" pos:end="83:56"><expr pos:start="83:13" pos:end="83:55"><name pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:13">m</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:20">elems</name><index pos:start="83:21" pos:end="83:30">[<expr pos:start="83:22" pos:end="83:29"><name pos:start="83:22" pos:end="83:29"><name pos:start="83:22" pos:end="83:22">m</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:29">count</name></name></expr>]</index></name><operator pos:start="83:31" pos:end="83:31">.</operator><name pos:start="83:32" pos:end="83:36">value</name> <operator pos:start="83:38" pos:end="83:38">=</operator> <call pos:start="83:40" pos:end="83:55"><name pos:start="83:40" pos:end="83:48">av_strdup</name><argument_list pos:start="83:49" pos:end="83:55">(<argument pos:start="83:50" pos:end="83:54"><expr pos:start="83:50" pos:end="83:54"><name pos:start="83:50" pos:end="83:54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:19"><expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:16"><name pos:start="85:9" pos:end="85:9">m</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:16">count</name></name><operator pos:start="85:17" pos:end="85:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:17"><name pos:start="89:10" pos:end="89:10">m</name><operator pos:start="89:11" pos:end="89:12">-&gt;</operator><name pos:start="89:13" pos:end="89:17">count</name></name></expr>)</condition> <block pos:start="89:20" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:21">

        <expr_stmt pos:start="91:9" pos:end="91:26"><expr pos:start="91:9" pos:end="91:25"><call pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:15">av_free</name><argument_list pos:start="91:16" pos:end="91:25">(<argument pos:start="91:17" pos:end="91:24"><expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:17">m</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">elems</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:21"><expr pos:start="93:9" pos:end="93:20"><call pos:start="93:9" pos:end="93:20"><name pos:start="93:9" pos:end="93:16">av_freep</name><argument_list pos:start="93:17" pos:end="93:20">(<argument pos:start="93:18" pos:end="93:19"><expr pos:start="93:18" pos:end="93:19"><name pos:start="93:18" pos:end="93:19">pm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
