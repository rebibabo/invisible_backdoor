<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10643.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">cpu_dump_state</name><parameter_list pos:start="1:20" pos:end="5:30">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:28">CPUState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:42"><decl pos:start="1:36" pos:end="1:42"><type pos:start="1:36" pos:end="1:42"><name pos:start="1:36" pos:end="1:39">FILE</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">f</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:69"><function_decl pos:start="3:21" pos:end="3:69"><type pos:start="3:21" pos:end="3:23"><name pos:start="3:21" pos:end="3:23">int</name></type> (<modifier pos:start="3:26" pos:end="3:26">*</modifier><name pos:start="3:27" pos:end="3:37">cpu_fprintf</name>)<parameter_list pos:start="3:39" pos:end="3:69">(<parameter pos:start="3:40" pos:end="3:46"><decl pos:start="3:40" pos:end="3:46"><type pos:start="3:40" pos:end="3:46"><name pos:start="3:40" pos:end="3:43">FILE</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:46">f</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:63">fmt</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:68"><decl pos:start="3:66" pos:end="3:68"><type pos:start="3:66" pos:end="3:68"><modifier pos:start="3:66" pos:end="3:68">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:29"><decl pos:start="5:21" pos:end="5:29"><type pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:23">int</name></type> <name pos:start="5:25" pos:end="5:29">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="101:1">{<block_content pos:start="9:5" pos:end="99:52">

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">x</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:26"><expr pos:start="13:5" pos:end="15:25"><call pos:start="13:5" pos:end="15:25"><name pos:start="13:5" pos:end="13:15">cpu_fprintf</name><argument_list pos:start="13:16" pos:end="15:25">(<argument pos:start="13:17" pos:end="13:17"><expr pos:start="13:17" pos:end="13:17"><name pos:start="13:17" pos:end="13:17">f</name></expr></argument>, <argument pos:start="13:20" pos:end="13:68"><expr pos:start="13:20" pos:end="13:68"><literal type="string" pos:start="13:20" pos:end="13:25">"pc: "</literal> <name pos:start="13:27" pos:end="13:39">TARGET_FMT_lx</name> <literal type="string" pos:start="13:41" pos:end="13:49">"  npc: "</literal> <name pos:start="13:51" pos:end="13:63">TARGET_FMT_lx</name> <literal type="string" pos:start="13:65" pos:end="13:68">"\n"</literal></expr></argument>, <argument pos:start="13:71" pos:end="13:77"><expr pos:start="13:71" pos:end="13:77"><name pos:start="13:71" pos:end="13:77"><name pos:start="13:71" pos:end="13:73">env</name><operator pos:start="13:74" pos:end="13:75">-&gt;</operator><name pos:start="13:76" pos:end="13:77">pc</name></name></expr></argument>,

                <argument pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:19">env</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:24">npc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><call pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:15">cpu_fprintf</name><argument_list pos:start="17:16" pos:end="17:42">(<argument pos:start="17:17" pos:end="17:17"><expr pos:start="17:17" pos:end="17:17"><name pos:start="17:17" pos:end="17:17">f</name></expr></argument>, <argument pos:start="17:20" pos:end="17:41"><expr pos:start="17:20" pos:end="17:41"><literal type="string" pos:start="17:20" pos:end="17:41">"General Registers:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="21:77">for <control pos:start="19:9" pos:end="19:27">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <literal type="number" pos:start="19:21" pos:end="19:21">4</literal></expr>;</condition> <incr pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:24">i</name><operator pos:start="19:25" pos:end="19:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="21:77"><block_content pos:start="21:9" pos:end="21:77">

        <expr_stmt pos:start="21:9" pos:end="21:77"><expr pos:start="21:9" pos:end="21:76"><call pos:start="21:9" pos:end="21:76"><name pos:start="21:9" pos:end="21:19">cpu_fprintf</name><argument_list pos:start="21:20" pos:end="21:76">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><name pos:start="21:21" pos:end="21:21">f</name></expr></argument>, <argument pos:start="21:24" pos:end="21:51"><expr pos:start="21:24" pos:end="21:51"><literal type="string" pos:start="21:24" pos:end="21:32">"%%g%c: "</literal> <name pos:start="21:34" pos:end="21:46">TARGET_FMT_lx</name> <literal type="string" pos:start="21:48" pos:end="21:51">"\t"</literal></expr></argument>, <argument pos:start="21:54" pos:end="21:60"><expr pos:start="21:54" pos:end="21:60"><name pos:start="21:54" pos:end="21:54">i</name> <operator pos:start="21:56" pos:end="21:56">+</operator> <literal type="char" pos:start="21:58" pos:end="21:60">'0'</literal></expr></argument>, <argument pos:start="21:63" pos:end="21:75"><expr pos:start="21:63" pos:end="21:75"><name pos:start="21:63" pos:end="21:75"><name pos:start="21:63" pos:end="21:65">env</name><operator pos:start="21:66" pos:end="21:67">-&gt;</operator><name pos:start="21:68" pos:end="21:72">gregs</name><index pos:start="21:73" pos:end="21:75">[<expr pos:start="21:74" pos:end="21:74"><name pos:start="21:74" pos:end="21:74">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><call pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:15">cpu_fprintf</name><argument_list pos:start="23:16" pos:end="23:24">(<argument pos:start="23:17" pos:end="23:17"><expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">f</name></expr></argument>, <argument pos:start="23:20" pos:end="23:23"><expr pos:start="23:20" pos:end="23:23"><literal type="string" pos:start="23:20" pos:end="23:23">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="27:77">for <control pos:start="25:9" pos:end="25:22">(<init pos:start="25:10" pos:end="25:10">;</init> <condition pos:start="25:12" pos:end="25:17"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:12">i</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <literal type="number" pos:start="25:16" pos:end="25:16">8</literal></expr>;</condition> <incr pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:19">i</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="27:77"><block_content pos:start="27:9" pos:end="27:77">

        <expr_stmt pos:start="27:9" pos:end="27:77"><expr pos:start="27:9" pos:end="27:76"><call pos:start="27:9" pos:end="27:76"><name pos:start="27:9" pos:end="27:19">cpu_fprintf</name><argument_list pos:start="27:20" pos:end="27:76">(<argument pos:start="27:21" pos:end="27:21"><expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">f</name></expr></argument>, <argument pos:start="27:24" pos:end="27:51"><expr pos:start="27:24" pos:end="27:51"><literal type="string" pos:start="27:24" pos:end="27:32">"%%g%c: "</literal> <name pos:start="27:34" pos:end="27:46">TARGET_FMT_lx</name> <literal type="string" pos:start="27:48" pos:end="27:51">"\t"</literal></expr></argument>, <argument pos:start="27:54" pos:end="27:60"><expr pos:start="27:54" pos:end="27:60"><name pos:start="27:54" pos:end="27:54">i</name> <operator pos:start="27:56" pos:end="27:56">+</operator> <literal type="char" pos:start="27:58" pos:end="27:60">'0'</literal></expr></argument>, <argument pos:start="27:63" pos:end="27:75"><expr pos:start="27:63" pos:end="27:75"><name pos:start="27:63" pos:end="27:75"><name pos:start="27:63" pos:end="27:65">env</name><operator pos:start="27:66" pos:end="27:67">-&gt;</operator><name pos:start="27:68" pos:end="27:72">gregs</name><index pos:start="27:73" pos:end="27:75">[<expr pos:start="27:74" pos:end="27:74"><name pos:start="27:74" pos:end="27:74">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><call pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:15">cpu_fprintf</name><argument_list pos:start="29:16" pos:end="29:50">(<argument pos:start="29:17" pos:end="29:17"><expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">f</name></expr></argument>, <argument pos:start="29:20" pos:end="29:49"><expr pos:start="29:20" pos:end="29:49"><literal type="string" pos:start="29:20" pos:end="29:49">"\nCurrent Register Window:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="53:5">for <control pos:start="31:9" pos:end="31:27">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">x</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:21"><name pos:start="31:17" pos:end="31:17">x</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:21">3</literal></expr>;</condition> <incr pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:24">x</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr></incr>)</control> <block pos:start="31:29" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:29">

        <for pos:start="33:9" pos:end="39:45">for <control pos:start="33:13" pos:end="33:31">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:25">4</literal></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:13" pos:end="39:45"><block_content pos:start="35:13" pos:end="39:45">

            <expr_stmt pos:start="35:13" pos:end="39:45"><expr pos:start="35:13" pos:end="39:44"><call pos:start="35:13" pos:end="39:44"><name pos:start="35:13" pos:end="35:23">cpu_fprintf</name><argument_list pos:start="35:24" pos:end="39:44">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">f</name></expr></argument>, <argument pos:start="35:28" pos:end="35:56"><expr pos:start="35:28" pos:end="35:56"><literal type="string" pos:start="35:28" pos:end="35:37">"%%%c%d: "</literal> <name pos:start="35:39" pos:end="35:51">TARGET_FMT_lx</name> <literal type="string" pos:start="35:53" pos:end="35:56">"\t"</literal></expr></argument>,

                    <argument pos:start="37:21" pos:end="37:57"><expr pos:start="37:21" pos:end="37:57"><operator pos:start="37:21" pos:end="37:21">(</operator><ternary pos:start="37:22" pos:end="37:56"><condition pos:start="37:22" pos:end="37:29"><expr pos:start="37:22" pos:end="37:27"><name pos:start="37:22" pos:end="37:22">x</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <literal type="number" pos:start="37:27" pos:end="37:27">0</literal></expr> ?</condition><then pos:start="37:31" pos:end="37:33"> <expr pos:start="37:31" pos:end="37:33"><literal type="char" pos:start="37:31" pos:end="37:33">'o'</literal></expr> </then><else pos:start="37:35" pos:end="37:56">: <expr pos:start="37:37" pos:end="37:56"><operator pos:start="37:37" pos:end="37:37">(</operator><ternary pos:start="37:38" pos:end="37:55"><condition pos:start="37:38" pos:end="37:45"><expr pos:start="37:38" pos:end="37:43"><name pos:start="37:38" pos:end="37:38">x</name> <operator pos:start="37:40" pos:end="37:41">==</operator> <literal type="number" pos:start="37:43" pos:end="37:43">1</literal></expr> ?</condition><then pos:start="37:47" pos:end="37:49"> <expr pos:start="37:47" pos:end="37:49"><literal type="char" pos:start="37:47" pos:end="37:49">'l'</literal></expr> </then><else pos:start="37:51" pos:end="37:55">: <expr pos:start="37:53" pos:end="37:55"><literal type="char" pos:start="37:53" pos:end="37:55">'i'</literal></expr></else></ternary><operator pos:start="37:56" pos:end="37:56">)</operator></expr></else></ternary><operator pos:start="37:57" pos:end="37:57">)</operator></expr></argument>, <argument pos:start="37:60" pos:end="37:60"><expr pos:start="37:60" pos:end="37:60"><name pos:start="37:60" pos:end="37:60">i</name></expr></argument>,

                    <argument pos:start="39:21" pos:end="39:43"><expr pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:23">env</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:32">regwptr</name><index pos:start="39:33" pos:end="39:43">[<expr pos:start="39:34" pos:end="39:42"><name pos:start="39:34" pos:end="39:34">i</name> <operator pos:start="39:36" pos:end="39:36">+</operator> <name pos:start="39:38" pos:end="39:38">x</name> <operator pos:start="39:40" pos:end="39:40">*</operator> <literal type="number" pos:start="39:42" pos:end="39:42">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><call pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:19">cpu_fprintf</name><argument_list pos:start="41:20" pos:end="41:28">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">f</name></expr></argument>, <argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><literal type="string" pos:start="41:24" pos:end="41:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="43:9" pos:end="49:45">for <control pos:start="43:13" pos:end="43:26">(<init pos:start="43:14" pos:end="43:14">;</init> <condition pos:start="43:16" pos:end="43:21"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:16">i</name> <operator pos:start="43:18" pos:end="43:18">&lt;</operator> <literal type="number" pos:start="43:20" pos:end="43:20">8</literal></expr>;</condition> <incr pos:start="43:23" pos:end="43:25"><expr pos:start="43:23" pos:end="43:25"><name pos:start="43:23" pos:end="43:23">i</name><operator pos:start="43:24" pos:end="43:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:13" pos:end="49:45"><block_content pos:start="45:13" pos:end="49:45">

            <expr_stmt pos:start="45:13" pos:end="49:45"><expr pos:start="45:13" pos:end="49:44"><call pos:start="45:13" pos:end="49:44"><name pos:start="45:13" pos:end="45:23">cpu_fprintf</name><argument_list pos:start="45:24" pos:end="49:44">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">f</name></expr></argument>, <argument pos:start="45:28" pos:end="45:56"><expr pos:start="45:28" pos:end="45:56"><literal type="string" pos:start="45:28" pos:end="45:37">"%%%c%d: "</literal> <name pos:start="45:39" pos:end="45:51">TARGET_FMT_lx</name> <literal type="string" pos:start="45:53" pos:end="45:56">"\t"</literal></expr></argument>,

                    <argument pos:start="47:21" pos:end="47:55"><expr pos:start="47:21" pos:end="47:55"><operator pos:start="47:21" pos:end="47:21">(</operator><ternary pos:start="47:22" pos:end="47:54"><condition pos:start="47:22" pos:end="47:29"><expr pos:start="47:22" pos:end="47:27"><name pos:start="47:22" pos:end="47:22">x</name> <operator pos:start="47:24" pos:end="47:25">==</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr> ?</condition><then pos:start="47:31" pos:end="47:33"> <expr pos:start="47:31" pos:end="47:33"><literal type="char" pos:start="47:31" pos:end="47:33">'o'</literal></expr> </then><else pos:start="47:35" pos:end="47:54">: <expr pos:start="47:37" pos:end="47:54"><ternary pos:start="47:37" pos:end="47:54"><condition pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:37">x</name> <operator pos:start="47:39" pos:end="47:40">==</operator> <literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr> ?</condition><then pos:start="47:46" pos:end="47:48"> <expr pos:start="47:46" pos:end="47:48"><literal type="char" pos:start="47:46" pos:end="47:48">'l'</literal></expr> </then><else pos:start="47:50" pos:end="47:54">: <expr pos:start="47:52" pos:end="47:54"><literal type="char" pos:start="47:52" pos:end="47:54">'i'</literal></expr></else></ternary></expr></else></ternary><operator pos:start="47:55" pos:end="47:55">)</operator></expr></argument>, <argument pos:start="47:58" pos:end="47:58"><expr pos:start="47:58" pos:end="47:58"><name pos:start="47:58" pos:end="47:58">i</name></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:43"><expr pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:43"><name pos:start="49:21" pos:end="49:23">env</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:32">regwptr</name><index pos:start="49:33" pos:end="49:43">[<expr pos:start="49:34" pos:end="49:42"><name pos:start="49:34" pos:end="49:34">i</name> <operator pos:start="49:36" pos:end="49:36">+</operator> <name pos:start="49:38" pos:end="49:38">x</name> <operator pos:start="49:40" pos:end="49:40">*</operator> <literal type="number" pos:start="49:42" pos:end="49:42">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><call pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:19">cpu_fprintf</name><argument_list pos:start="51:20" pos:end="51:28">(<argument pos:start="51:21" pos:end="51:21"><expr pos:start="51:21" pos:end="51:21"><name pos:start="51:21" pos:end="51:21">f</name></expr></argument>, <argument pos:start="51:24" pos:end="51:27"><expr pos:start="51:24" pos:end="51:27"><literal type="string" pos:start="51:24" pos:end="51:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="55:5" pos:end="55:52"><expr pos:start="55:5" pos:end="55:51"><call pos:start="55:5" pos:end="55:51"><name pos:start="55:5" pos:end="55:15">cpu_fprintf</name><argument_list pos:start="55:16" pos:end="55:51">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">f</name></expr></argument>, <argument pos:start="55:20" pos:end="55:50"><expr pos:start="55:20" pos:end="55:50"><literal type="string" pos:start="55:20" pos:end="55:50">"\nFloating Point Registers:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="72:0">for <control pos:start="57:9" pos:end="57:28">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:23"><expr pos:start="57:17" pos:end="57:22"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:22">32</literal></expr>;</condition> <incr pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:25">i</name><operator pos:start="57:26" pos:end="57:27">++</operator></expr></incr>)</control> <block pos:start="57:30" pos:end="72:0">{<block_content pos:start="59:9" pos:end="67:33">

        <if_stmt pos:start="59:9" pos:end="61:42"><if pos:start="59:9" pos:end="61:42">if <condition pos:start="59:12" pos:end="59:25">(<expr pos:start="59:13" pos:end="59:24"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">&amp;</operator> <literal type="number" pos:start="59:18" pos:end="59:18">3</literal><operator pos:start="59:19" pos:end="59:19">)</operator> <operator pos:start="59:21" pos:end="59:22">==</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:42"><block_content pos:start="61:13" pos:end="61:42">

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><call pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:23">cpu_fprintf</name><argument_list pos:start="61:24" pos:end="61:41">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">f</name></expr></argument>, <argument pos:start="61:28" pos:end="61:37"><expr pos:start="61:28" pos:end="61:37"><literal type="string" pos:start="61:28" pos:end="61:37">"%%f%02d:"</literal></expr></argument>, <argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:47"><expr pos:start="63:9" pos:end="63:46"><call pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:19">cpu_fprintf</name><argument_list pos:start="63:20" pos:end="63:46">(<argument pos:start="63:21" pos:end="63:21"><expr pos:start="63:21" pos:end="63:21"><name pos:start="63:21" pos:end="63:21">f</name></expr></argument>, <argument pos:start="63:24" pos:end="63:32"><expr pos:start="63:24" pos:end="63:32"><literal type="string" pos:start="63:24" pos:end="63:32">" %016lf"</literal></expr></argument>, <argument pos:start="63:35" pos:end="63:45"><expr pos:start="63:35" pos:end="63:45"><name pos:start="63:35" pos:end="63:45"><name pos:start="63:35" pos:end="63:37">env</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:42">fpr</name><index pos:start="63:43" pos:end="63:45">[<expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:33"><if pos:start="65:9" pos:end="67:33">if <condition pos:start="65:12" pos:end="65:25">(<expr pos:start="65:13" pos:end="65:24"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:14">i</name> <operator pos:start="65:16" pos:end="65:16">&amp;</operator> <literal type="number" pos:start="65:18" pos:end="65:18">3</literal><operator pos:start="65:19" pos:end="65:19">)</operator> <operator pos:start="65:21" pos:end="65:22">==</operator> <literal type="number" pos:start="65:24" pos:end="65:24">3</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:33"><block_content pos:start="67:13" pos:end="67:33">

            <expr_stmt pos:start="67:13" pos:end="67:33"><expr pos:start="67:13" pos:end="67:32"><call pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:23">cpu_fprintf</name><argument_list pos:start="67:24" pos:end="67:32">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">f</name></expr></argument>, <argument pos:start="67:28" pos:end="67:31"><expr pos:start="67:28" pos:end="67:31"><literal type="string" pos:start="67:28" pos:end="67:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="71:1" pos:end="71:21">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:21">TARGET_SPARC64</name></cpp:ifdef>

    <expr_stmt pos:start="73:5" pos:end="75:73"><expr pos:start="73:5" pos:end="75:72"><call pos:start="73:5" pos:end="75:72"><name pos:start="73:5" pos:end="73:15">cpu_fprintf</name><argument_list pos:start="73:16" pos:end="75:72">(<argument pos:start="73:17" pos:end="73:17"><expr pos:start="73:17" pos:end="73:17"><name pos:start="73:17" pos:end="73:17">f</name></expr></argument>, <argument pos:start="73:20" pos:end="73:77"><expr pos:start="73:20" pos:end="73:77"><literal type="string" pos:start="73:20" pos:end="73:77">"pstate: 0x%08x ccr: 0x%02x asi: 0x%02x tl: %d fprs: %d\n"</literal></expr></argument>,

                <argument pos:start="75:17" pos:end="75:27"><expr pos:start="75:17" pos:end="75:27"><name pos:start="75:17" pos:end="75:27"><name pos:start="75:17" pos:end="75:19">env</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:27">pstate</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:41"><expr pos:start="75:30" pos:end="75:41"><call pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:36">GET_CCR</name><argument_list pos:start="75:37" pos:end="75:41">(<argument pos:start="75:38" pos:end="75:40"><expr pos:start="75:38" pos:end="75:40"><name pos:start="75:38" pos:end="75:40">env</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:44" pos:end="75:51"><expr pos:start="75:44" pos:end="75:51"><name pos:start="75:44" pos:end="75:51"><name pos:start="75:44" pos:end="75:46">env</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:51">asi</name></name></expr></argument>, <argument pos:start="75:54" pos:end="75:60"><expr pos:start="75:54" pos:end="75:60"><name pos:start="75:54" pos:end="75:60"><name pos:start="75:54" pos:end="75:56">env</name><operator pos:start="75:57" pos:end="75:58">-&gt;</operator><name pos:start="75:59" pos:end="75:60">tl</name></name></expr></argument>, <argument pos:start="75:63" pos:end="75:71"><expr pos:start="75:63" pos:end="75:71"><name pos:start="75:63" pos:end="75:71"><name pos:start="75:63" pos:end="75:65">env</name><operator pos:start="75:66" pos:end="75:67">-&gt;</operator><name pos:start="75:68" pos:end="75:71">fprs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="86:0"><expr pos:start="77:5" pos:end="83:60"><call pos:start="77:5" pos:end="83:60"><name pos:start="77:5" pos:end="77:15">cpu_fprintf</name><argument_list pos:start="77:16" pos:end="83:60">(<argument pos:start="77:17" pos:end="77:17"><expr pos:start="77:17" pos:end="77:17"><name pos:start="77:17" pos:end="77:17">f</name></expr></argument>, <argument pos:start="77:20" pos:end="79:38"><expr pos:start="77:20" pos:end="79:38"><literal type="string" pos:start="77:20" pos:end="77:71">"cansave: %d canrestore: %d otherwin: %d wstate %d "</literal>

                <literal type="string" pos:start="79:17" pos:end="79:38">"cleanwin %d cwp %d\n"</literal></expr></argument>,

                <argument pos:start="81:17" pos:end="81:28"><expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:19">env</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:28">cansave</name></name></expr></argument>, <argument pos:start="81:31" pos:end="81:45"><expr pos:start="81:31" pos:end="81:45"><name pos:start="81:31" pos:end="81:45"><name pos:start="81:31" pos:end="81:33">env</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:45">canrestore</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:60"><expr pos:start="81:48" pos:end="81:60"><name pos:start="81:48" pos:end="81:60"><name pos:start="81:48" pos:end="81:50">env</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:60">otherwin</name></name></expr></argument>, <argument pos:start="81:63" pos:end="81:73"><expr pos:start="81:63" pos:end="81:73"><name pos:start="81:63" pos:end="81:73"><name pos:start="81:63" pos:end="81:65">env</name><operator pos:start="81:66" pos:end="81:67">-&gt;</operator><name pos:start="81:68" pos:end="81:73">wstate</name></name></expr></argument>,

                <argument pos:start="83:17" pos:end="83:29"><expr pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:19">env</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:29">cleanwin</name></name></expr></argument>, <argument pos:start="83:32" pos:end="83:59"><expr pos:start="83:32" pos:end="83:59"><name pos:start="83:32" pos:end="83:44"><name pos:start="83:32" pos:end="83:34">env</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:44">nwindows</name></name> <operator pos:start="83:46" pos:end="83:46">-</operator> <literal type="number" pos:start="83:48" pos:end="83:50">1</literal> <operator pos:start="83:50" pos:end="83:50">-</operator> <name pos:start="83:52" pos:end="83:59"><name pos:start="83:52" pos:end="83:54">env</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:59">cwp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="85:1" pos:end="85:5">#<cpp:directive pos:start="85:2" pos:end="85:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="87:5" pos:end="98:0"><expr pos:start="87:5" pos:end="95:45"><call pos:start="87:5" pos:end="95:45"><name pos:start="87:5" pos:end="87:15">cpu_fprintf</name><argument_list pos:start="87:16" pos:end="95:45">(<argument pos:start="87:17" pos:end="87:17"><expr pos:start="87:17" pos:end="87:17"><name pos:start="87:17" pos:end="87:17">f</name></expr></argument>, <argument pos:start="87:20" pos:end="87:65"><expr pos:start="87:20" pos:end="87:65"><literal type="string" pos:start="87:20" pos:end="87:65">"psr: 0x%08x -&gt; %c%c%c%c %c%c%c wim: 0x%08x\n"</literal></expr></argument>,

                <argument pos:start="89:17" pos:end="89:28"><expr pos:start="89:17" pos:end="89:28"><call pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:23">GET_PSR</name><argument_list pos:start="89:24" pos:end="89:28">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">env</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:31" pos:end="89:53"><expr pos:start="89:31" pos:end="89:53"><call pos:start="89:31" pos:end="89:53"><name pos:start="89:31" pos:end="89:38">GET_FLAG</name><argument_list pos:start="89:39" pos:end="89:53">(<argument pos:start="89:40" pos:end="89:47"><expr pos:start="89:40" pos:end="89:47"><name pos:start="89:40" pos:end="89:47">PSR_ZERO</name></expr></argument>, <argument pos:start="89:50" pos:end="89:52"><expr pos:start="89:50" pos:end="89:52"><literal type="char" pos:start="89:50" pos:end="89:52">'Z'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:56" pos:end="89:77"><expr pos:start="89:56" pos:end="89:77"><call pos:start="89:56" pos:end="89:77"><name pos:start="89:56" pos:end="89:63">GET_FLAG</name><argument_list pos:start="89:64" pos:end="89:77">(<argument pos:start="89:65" pos:end="89:71"><expr pos:start="89:65" pos:end="89:71"><name pos:start="89:65" pos:end="89:71">PSR_OVF</name></expr></argument>, <argument pos:start="89:74" pos:end="89:76"><expr pos:start="89:74" pos:end="89:76"><literal type="char" pos:start="89:74" pos:end="89:76">'V'</literal></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="91:17" pos:end="91:38"><expr pos:start="91:17" pos:end="91:38"><call pos:start="91:17" pos:end="91:38"><name pos:start="91:17" pos:end="91:24">GET_FLAG</name><argument_list pos:start="91:25" pos:end="91:38">(<argument pos:start="91:26" pos:end="91:32"><expr pos:start="91:26" pos:end="91:32"><name pos:start="91:26" pos:end="91:32">PSR_NEG</name></expr></argument>, <argument pos:start="91:35" pos:end="91:37"><expr pos:start="91:35" pos:end="91:37"><literal type="char" pos:start="91:35" pos:end="91:37">'N'</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:41" pos:end="91:64"><expr pos:start="91:41" pos:end="91:64"><call pos:start="91:41" pos:end="91:64"><name pos:start="91:41" pos:end="91:48">GET_FLAG</name><argument_list pos:start="91:49" pos:end="91:64">(<argument pos:start="91:50" pos:end="91:58"><expr pos:start="91:50" pos:end="91:58"><name pos:start="91:50" pos:end="91:58">PSR_CARRY</name></expr></argument>, <argument pos:start="91:61" pos:end="91:63"><expr pos:start="91:61" pos:end="91:63"><literal type="char" pos:start="91:61" pos:end="91:63">'C'</literal></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="93:17" pos:end="93:33"><expr pos:start="93:17" pos:end="93:33"><ternary pos:start="93:17" pos:end="93:33"><condition pos:start="93:17" pos:end="93:26"><expr pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:25"><name pos:start="93:17" pos:end="93:19">env</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:25">psrs</name></name></expr>?</condition><then pos:start="93:27" pos:end="93:29"><expr pos:start="93:27" pos:end="93:29"><literal type="char" pos:start="93:27" pos:end="93:29">'S'</literal></expr></then><else pos:start="93:30" pos:end="93:33">:<expr pos:start="93:31" pos:end="93:33"><literal type="char" pos:start="93:31" pos:end="93:33">'-'</literal></expr></else></ternary></expr></argument>, <argument pos:start="93:36" pos:end="93:53"><expr pos:start="93:36" pos:end="93:53"><ternary pos:start="93:36" pos:end="93:53"><condition pos:start="93:36" pos:end="93:46"><expr pos:start="93:36" pos:end="93:45"><name pos:start="93:36" pos:end="93:45"><name pos:start="93:36" pos:end="93:38">env</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:45">psrps</name></name></expr>?</condition><then pos:start="93:47" pos:end="93:49"><expr pos:start="93:47" pos:end="93:49"><literal type="char" pos:start="93:47" pos:end="93:49">'P'</literal></expr></then><else pos:start="93:50" pos:end="93:53">:<expr pos:start="93:51" pos:end="93:53"><literal type="char" pos:start="93:51" pos:end="93:53">'-'</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="95:17" pos:end="95:34"><expr pos:start="95:17" pos:end="95:34"><ternary pos:start="95:17" pos:end="95:34"><condition pos:start="95:17" pos:end="95:27"><expr pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:19">env</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:26">psret</name></name></expr>?</condition><then pos:start="95:28" pos:end="95:30"><expr pos:start="95:28" pos:end="95:30"><literal type="char" pos:start="95:28" pos:end="95:30">'E'</literal></expr></then><else pos:start="95:31" pos:end="95:34">:<expr pos:start="95:32" pos:end="95:34"><literal type="char" pos:start="95:32" pos:end="95:34">'-'</literal></expr></else></ternary></expr></argument>, <argument pos:start="95:37" pos:end="95:44"><expr pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:39">env</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:44">wim</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="99:5" pos:end="99:52"><expr pos:start="99:5" pos:end="99:51"><call pos:start="99:5" pos:end="99:51"><name pos:start="99:5" pos:end="99:15">cpu_fprintf</name><argument_list pos:start="99:16" pos:end="99:51">(<argument pos:start="99:17" pos:end="99:17"><expr pos:start="99:17" pos:end="99:17"><name pos:start="99:17" pos:end="99:17">f</name></expr></argument>, <argument pos:start="99:20" pos:end="99:34"><expr pos:start="99:20" pos:end="99:34"><literal type="string" pos:start="99:20" pos:end="99:34">"fsr: 0x%08x\n"</literal></expr></argument>, <argument pos:start="99:37" pos:end="99:50"><expr pos:start="99:37" pos:end="99:50"><call pos:start="99:37" pos:end="99:50"><name pos:start="99:37" pos:end="99:45">GET_FSR32</name><argument_list pos:start="99:46" pos:end="99:50">(<argument pos:start="99:47" pos:end="99:49"><expr pos:start="99:47" pos:end="99:49"><name pos:start="99:47" pos:end="99:49">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
