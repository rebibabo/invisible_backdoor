<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1464.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_packet</name><parameter_list pos:start="1:24" pos:end="1:76">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:39">AVFormatContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:75"><decl pos:start="1:60" pos:end="1:75"><type pos:start="1:60" pos:end="1:75"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:75">stream_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:15">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVPacket</name></type> <name pos:start="5:14" pos:end="5:20">out_pkt</name> <init pos:start="5:22" pos:end="5:28">= <expr pos:start="5:24" pos:end="5:28"><block pos:start="5:24" pos:end="5:28">{ <expr pos:start="5:26" pos:end="5:26"><literal type="number" pos:start="5:26" pos:end="5:26">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="5:31" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:31" pos:end="5:39">flush_pkt</name> <init pos:start="5:41" pos:end="5:47">= <expr pos:start="5:43" pos:end="5:47"><block pos:start="5:43" pos:end="5:47">{ <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:43">= <expr pos:start="7:20" pos:end="7:43"><name pos:start="7:20" pos:end="7:43"><name pos:start="7:20" pos:end="7:20">s</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">streams</name><index pos:start="7:30" pos:end="7:43">[<expr pos:start="7:31" pos:end="7:42"><name pos:start="7:31" pos:end="7:42">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">data</name> <init pos:start="9:19" pos:end="9:42">= <expr pos:start="9:21" pos:end="9:42"><ternary pos:start="9:21" pos:end="9:42"><condition pos:start="9:21" pos:end="9:25"><expr pos:start="9:21" pos:end="9:23"><name pos:start="9:21" pos:end="9:23">pkt</name></expr> ?</condition><then pos:start="9:27" pos:end="9:35"> <expr pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:35"><name pos:start="9:27" pos:end="9:29">pkt</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:35">data</name></name></expr> </then><else pos:start="9:37" pos:end="9:42">: <expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name>      <init pos:start="11:19" pos:end="11:39">= <expr pos:start="11:21" pos:end="11:39"><ternary pos:start="11:21" pos:end="11:39"><condition pos:start="11:21" pos:end="11:25"><expr pos:start="11:21" pos:end="11:23"><name pos:start="11:21" pos:end="11:23">pkt</name></expr> ?</condition><then pos:start="11:27" pos:end="11:35"> <expr pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:35"><name pos:start="11:27" pos:end="11:29">pkt</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">size</name></name></expr> </then><else pos:start="11:37" pos:end="11:39">: <expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>, <decl pos:start="13:18" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:27">got_output</name> <init pos:start="13:29" pos:end="13:31">= <expr pos:start="13:31" pos:end="13:31"><literal type="number" pos:start="13:31" pos:end="13:31">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="31:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">pkt</name></expr>)</condition> <block pos:start="17:15" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:23">

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><call pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:22">av_init_packet</name><argument_list pos:start="19:23" pos:end="19:34">(<argument pos:start="19:24" pos:end="19:33"><expr pos:start="19:24" pos:end="19:33"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:33">flush_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">pkt</name>        <operator pos:start="21:20" pos:end="21:20">=</operator> <operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:31">flush_pkt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:18">got_output</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="31:5">else if <condition pos:start="25:15" pos:end="25:72">(<expr pos:start="25:16" pos:end="25:71"><operator pos:start="25:16" pos:end="25:16">!</operator><name pos:start="25:17" pos:end="25:20">size</name> <operator pos:start="25:22" pos:end="25:23">&amp;&amp;</operator> <name pos:start="25:25" pos:end="25:41"><name pos:start="25:25" pos:end="25:26">st</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:34">parser</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:41">flags</name></name> <operator pos:start="25:43" pos:end="25:43">&amp;</operator> <name pos:start="25:45" pos:end="25:71">PARSER_FLAG_COMPLETE_FRAMES</name></expr>)</condition> <block pos:start="25:74" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:83">

        <comment type="line" pos:start="27:9" pos:end="27:39">// preserve 0-size sync packets</comment>

        <expr_stmt pos:start="29:9" pos:end="29:83"><expr pos:start="29:9" pos:end="29:82"><call pos:start="29:9" pos:end="29:82"><name pos:start="29:9" pos:end="29:26">compute_pkt_fields</name><argument_list pos:start="29:27" pos:end="29:82">(<argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><name pos:start="29:28" pos:end="29:28">s</name></expr></argument>, <argument pos:start="29:31" pos:end="29:32"><expr pos:start="29:31" pos:end="29:32"><name pos:start="29:31" pos:end="29:32">st</name></expr></argument>, <argument pos:start="29:35" pos:end="29:44"><expr pos:start="29:35" pos:end="29:44"><name pos:start="29:35" pos:end="29:44"><name pos:start="29:35" pos:end="29:36">st</name><operator pos:start="29:37" pos:end="29:38">-&gt;</operator><name pos:start="29:39" pos:end="29:44">parser</name></name></expr></argument>, <argument pos:start="29:47" pos:end="29:49"><expr pos:start="29:47" pos:end="29:49"><name pos:start="29:47" pos:end="29:49">pkt</name></expr></argument>, <argument pos:start="29:52" pos:end="29:65"><expr pos:start="29:52" pos:end="29:65"><name pos:start="29:52" pos:end="29:65">AV_NOPTS_VALUE</name></expr></argument>, <argument pos:start="29:68" pos:end="29:81"><expr pos:start="29:68" pos:end="29:81"><name pos:start="29:68" pos:end="29:81">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="35:5" pos:end="163:5">while <condition pos:start="35:11" pos:end="35:57">(<expr pos:start="35:12" pos:end="35:56"><name pos:start="35:12" pos:end="35:15">size</name> <operator pos:start="35:17" pos:end="35:17">&gt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal> <operator pos:start="35:21" pos:end="35:22">||</operator> <operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:27">pkt</name> <operator pos:start="35:29" pos:end="35:30">==</operator> <operator pos:start="35:32" pos:end="35:32">&amp;</operator><name pos:start="35:33" pos:end="35:41">flush_pkt</name> <operator pos:start="35:43" pos:end="35:44">&amp;&amp;</operator> <name pos:start="35:46" pos:end="35:55">got_output</name><operator pos:start="35:56" pos:end="35:56">)</operator></expr>)</condition> <block pos:start="35:59" pos:end="163:5">{<block_content pos:start="37:9" pos:end="161:9">

        <decl_stmt pos:start="37:9" pos:end="37:16"><decl pos:start="37:9" pos:end="37:15"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:15">len</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:36"><decl pos:start="39:9" pos:end="39:35"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">int64_t</name></type> <name pos:start="39:17" pos:end="39:24">next_pts</name> <init pos:start="39:26" pos:end="39:35">= <expr pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:35"><name pos:start="39:28" pos:end="39:30">pkt</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:35">pts</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:36"><decl pos:start="41:9" pos:end="41:35"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">int64_t</name></type> <name pos:start="41:17" pos:end="41:24">next_dts</name> <init pos:start="41:26" pos:end="41:35">= <expr pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:35"><name pos:start="41:28" pos:end="41:30">pkt</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:35">dts</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:22">av_init_packet</name><argument_list pos:start="45:23" pos:end="45:32">(<argument pos:start="45:24" pos:end="45:31"><expr pos:start="45:24" pos:end="45:31"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:31">out_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="51:61"><expr pos:start="47:9" pos:end="51:60"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="51:60"><name pos:start="47:15" pos:end="47:30">av_parser_parse2</name><argument_list pos:start="47:31" pos:end="51:60">(<argument pos:start="47:32" pos:end="47:41"><expr pos:start="47:32" pos:end="47:41"><name pos:start="47:32" pos:end="47:41"><name pos:start="47:32" pos:end="47:33">st</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:41">parser</name></name></expr></argument>, <argument pos:start="47:44" pos:end="47:52"><expr pos:start="47:44" pos:end="47:52"><name pos:start="47:44" pos:end="47:52"><name pos:start="47:44" pos:end="47:45">st</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:52">codec</name></name></expr></argument>,

                               <argument pos:start="49:32" pos:end="49:44"><expr pos:start="49:32" pos:end="49:44"><operator pos:start="49:32" pos:end="49:32">&amp;</operator><name pos:start="49:33" pos:end="49:44"><name pos:start="49:33" pos:end="49:39">out_pkt</name><operator pos:start="49:40" pos:end="49:40">.</operator><name pos:start="49:41" pos:end="49:44">data</name></name></expr></argument>, <argument pos:start="49:47" pos:end="49:59"><expr pos:start="49:47" pos:end="49:59"><operator pos:start="49:47" pos:end="49:47">&amp;</operator><name pos:start="49:48" pos:end="49:59"><name pos:start="49:48" pos:end="49:54">out_pkt</name><operator pos:start="49:55" pos:end="49:55">.</operator><name pos:start="49:56" pos:end="49:59">size</name></name></expr></argument>, <argument pos:start="49:62" pos:end="49:65"><expr pos:start="49:62" pos:end="49:65"><name pos:start="49:62" pos:end="49:65">data</name></expr></argument>, <argument pos:start="49:68" pos:end="49:71"><expr pos:start="49:68" pos:end="49:71"><name pos:start="49:68" pos:end="49:71">size</name></expr></argument>,

                               <argument pos:start="51:32" pos:end="51:39"><expr pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:34">pkt</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:39">pts</name></name></expr></argument>, <argument pos:start="51:42" pos:end="51:49"><expr pos:start="51:42" pos:end="51:49"><name pos:start="51:42" pos:end="51:49"><name pos:start="51:42" pos:end="51:44">pkt</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:49">dts</name></name></expr></argument>, <argument pos:start="51:52" pos:end="51:59"><expr pos:start="51:52" pos:end="51:59"><name pos:start="51:52" pos:end="51:59"><name pos:start="51:52" pos:end="51:54">pkt</name><operator pos:start="51:55" pos:end="51:56">-&gt;</operator><name pos:start="51:57" pos:end="51:59">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">pts</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:22">pkt</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:27">dts</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:11">pkt</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:16">pos</name></name> <operator pos:start="57:18" pos:end="57:18">=</operator> <operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="59:9" pos:end="59:36">/* increment read pointer */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:20"><expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:12">data</name> <operator pos:start="61:14" pos:end="61:15">+=</operator> <name pos:start="61:17" pos:end="61:19">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:20"><expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:12">size</name> <operator pos:start="63:14" pos:end="63:15">-=</operator> <name pos:start="63:17" pos:end="63:19">len</name></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:18">got_output</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <operator pos:start="67:22" pos:end="67:22">!</operator><operator pos:start="67:23" pos:end="67:23">!</operator><name pos:start="67:24" pos:end="67:35"><name pos:start="67:24" pos:end="67:30">out_pkt</name><operator pos:start="67:31" pos:end="67:31">.</operator><name pos:start="67:32" pos:end="67:35">size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="71:9" pos:end="73:21"><if pos:start="71:9" pos:end="73:21">if <condition pos:start="71:12" pos:end="71:26">(<expr pos:start="71:13" pos:end="71:25"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:25"><name pos:start="71:14" pos:end="71:20">out_pkt</name><operator pos:start="71:21" pos:end="71:21">.</operator><name pos:start="71:22" pos:end="71:25">size</name></name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:21"><block_content pos:start="73:13" pos:end="73:21">

            <continue pos:start="73:13" pos:end="73:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:27">(<expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:15">pkt</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:26">side_data</name></name></expr>)</condition> <block pos:start="77:29" pos:end="87:9">{<block_content pos:start="79:13" pos:end="85:40">

            <expr_stmt pos:start="79:13" pos:end="79:53"><expr pos:start="79:13" pos:end="79:52"><name pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:19">out_pkt</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:29">side_data</name></name>       <operator pos:start="79:37" pos:end="79:37">=</operator> <name pos:start="79:39" pos:end="79:52"><name pos:start="79:39" pos:end="79:41">pkt</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:52">side_data</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:59"><expr pos:start="81:13" pos:end="81:58"><name pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:19">out_pkt</name><operator pos:start="81:20" pos:end="81:20">.</operator><name pos:start="81:21" pos:end="81:35">side_data_elems</name></name> <operator pos:start="81:37" pos:end="81:37">=</operator> <name pos:start="81:39" pos:end="81:58"><name pos:start="81:39" pos:end="81:41">pkt</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:58">side_data_elems</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:43"><expr pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:15">pkt</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:26">side_data</name></name>          <operator pos:start="83:37" pos:end="83:37">=</operator> <name pos:start="83:39" pos:end="83:42">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:40"><expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:15">pkt</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:32">side_data_elems</name></name>    <operator pos:start="85:37" pos:end="85:37">=</operator> <literal type="number" pos:start="85:39" pos:end="85:39">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="91:9" pos:end="91:30">/* set the duration */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:97"><expr pos:start="93:9" pos:end="93:96"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:15">out_pkt</name><operator pos:start="93:16" pos:end="93:16">.</operator><name pos:start="93:17" pos:end="93:24">duration</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <ternary pos:start="93:28" pos:end="93:96"><condition pos:start="93:28" pos:end="93:78"><expr pos:start="93:28" pos:end="93:76"><operator pos:start="93:28" pos:end="93:28">(</operator><name pos:start="93:29" pos:end="93:45"><name pos:start="93:29" pos:end="93:30">st</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:38">parser</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:45">flags</name></name> <operator pos:start="93:47" pos:end="93:47">&amp;</operator> <name pos:start="93:49" pos:end="93:75">PARSER_FLAG_COMPLETE_FRAMES</name><operator pos:start="93:76" pos:end="93:76">)</operator></expr> ?</condition><then pos:start="93:80" pos:end="93:92"> <expr pos:start="93:80" pos:end="93:92"><name pos:start="93:80" pos:end="93:92"><name pos:start="93:80" pos:end="93:82">pkt</name><operator pos:start="93:83" pos:end="93:84">-&gt;</operator><name pos:start="93:85" pos:end="93:92">duration</name></name></expr> </then><else pos:start="93:94" pos:end="93:96">: <expr pos:start="93:96" pos:end="93:96"><literal type="number" pos:start="93:96" pos:end="93:96">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="111:9"><if pos:start="95:9" pos:end="111:9">if <condition pos:start="95:12" pos:end="95:56">(<expr pos:start="95:13" pos:end="95:55"><name pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:14">st</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:21">codec</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:33">codec_type</name></name> <operator pos:start="95:35" pos:end="95:36">==</operator> <name pos:start="95:38" pos:end="95:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="95:58" pos:end="111:9">{<block_content pos:start="97:13" pos:end="109:13">

            <if_stmt pos:start="97:13" pos:end="109:13"><if pos:start="97:13" pos:end="109:13">if <condition pos:start="97:16" pos:end="97:43">(<expr pos:start="97:17" pos:end="97:42"><name pos:start="97:17" pos:end="97:38"><name pos:start="97:17" pos:end="97:18">st</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:25">codec</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:38">sample_rate</name></name> <operator pos:start="97:40" pos:end="97:40">&gt;</operator> <literal type="number" pos:start="97:42" pos:end="97:42">0</literal></expr>)</condition> <block pos:start="97:45" pos:end="109:13">{<block_content pos:start="99:17" pos:end="107:52">

                <expr_stmt pos:start="99:17" pos:end="107:52"><expr pos:start="99:17" pos:end="107:51"><name pos:start="99:17" pos:end="99:32"><name pos:start="99:17" pos:end="99:23">out_pkt</name><operator pos:start="99:24" pos:end="99:24">.</operator><name pos:start="99:25" pos:end="99:32">duration</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator>

                    <macro pos:start="101:21" pos:end="107:51"><name pos:start="101:21" pos:end="101:36">av_rescale_q_rnd</name><argument_list pos:start="101:37" pos:end="107:51">(<argument pos:start="101:38" pos:end="101:57">st-&gt;parser-&gt;duration</argument>,

                                     <argument pos:start="103:38" pos:end="103:53">(AVRational) { <literal type="number" pos:start="103:53" pos:end="103:53">1</literal></argument>, <argument pos:start="103:56" pos:end="103:79">st-&gt;codec-&gt;sample_rate }</argument>,

                                     <argument pos:start="105:38" pos:end="105:50">st-&gt;time_base</argument>,

                                     <argument pos:start="107:38" pos:end="107:50">AV_ROUND_DOWN</argument>)</argument_list></macro></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:15">out_pkt</name><operator pos:start="115:16" pos:end="115:16">.</operator><name pos:start="115:17" pos:end="115:28">stream_index</name></name> <operator pos:start="115:30" pos:end="115:30">=</operator> <name pos:start="115:32" pos:end="115:40"><name pos:start="115:32" pos:end="115:33">st</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:40">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:19"><name pos:start="117:9" pos:end="117:15">out_pkt</name><operator pos:start="117:16" pos:end="117:16">.</operator><name pos:start="117:17" pos:end="117:19">pts</name></name>          <operator pos:start="117:30" pos:end="117:30">=</operator> <name pos:start="117:32" pos:end="117:46"><name pos:start="117:32" pos:end="117:33">st</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:41">parser</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:46">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:47"><expr pos:start="119:9" pos:end="119:46"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:15">out_pkt</name><operator pos:start="119:16" pos:end="119:16">.</operator><name pos:start="119:17" pos:end="119:19">dts</name></name>          <operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:46"><name pos:start="119:32" pos:end="119:33">st</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:41">parser</name><operator pos:start="119:42" pos:end="119:43">-&gt;</operator><name pos:start="119:44" pos:end="119:46">dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:15">out_pkt</name><operator pos:start="121:16" pos:end="121:16">.</operator><name pos:start="121:17" pos:end="121:19">pos</name></name>          <operator pos:start="121:30" pos:end="121:30">=</operator> <name pos:start="121:32" pos:end="121:46"><name pos:start="121:32" pos:end="121:33">st</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:41">parser</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:46">pos</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="127:51"><if pos:start="125:9" pos:end="127:51">if <condition pos:start="125:12" pos:end="125:56">(<expr pos:start="125:13" pos:end="125:55"><name pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:14">st</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:28">need_parsing</name></name> <operator pos:start="125:30" pos:end="125:31">==</operator> <name pos:start="125:33" pos:end="125:55">AVSTREAM_PARSE_FULL_RAW</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:51"><block_content pos:start="127:13" pos:end="127:51">

            <expr_stmt pos:start="127:13" pos:end="127:51"><expr pos:start="127:13" pos:end="127:50"><name pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:19">out_pkt</name><operator pos:start="127:20" pos:end="127:20">.</operator><name pos:start="127:21" pos:end="127:23">pos</name></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:50"><name pos:start="127:27" pos:end="127:28">st</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:36">parser</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:50">frame_offset</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="137:45"><if pos:start="131:9" pos:end="137:45">if <condition pos:start="131:12" pos:end="135:57">(<expr pos:start="131:13" pos:end="135:56"><name pos:start="131:13" pos:end="131:33"><name pos:start="131:13" pos:end="131:14">st</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:22">parser</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:33">key_frame</name></name> <operator pos:start="131:35" pos:end="131:36">==</operator> <literal type="number" pos:start="131:38" pos:end="131:38">1</literal> <operator pos:start="131:40" pos:end="131:41">||</operator>

            <operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:34"><name pos:start="133:14" pos:end="133:15">st</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:23">parser</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:34">key_frame</name></name> <operator pos:start="133:36" pos:end="133:37">==</operator> <operator pos:start="133:39" pos:end="133:39">-</operator><literal type="number" pos:start="133:40" pos:end="133:40">1</literal> <operator pos:start="133:42" pos:end="133:43">&amp;&amp;</operator>

             <name pos:start="135:14" pos:end="135:34"><name pos:start="135:14" pos:end="135:15">st</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:23">parser</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:34">pict_type</name></name> <operator pos:start="135:36" pos:end="135:37">==</operator> <name pos:start="135:39" pos:end="135:55">AV_PICTURE_TYPE_I</name><operator pos:start="135:56" pos:end="135:56">)</operator></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:45"><block_content pos:start="137:13" pos:end="137:45">

            <expr_stmt pos:start="137:13" pos:end="137:45"><expr pos:start="137:13" pos:end="137:44"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:19">out_pkt</name><operator pos:start="137:20" pos:end="137:20">.</operator><name pos:start="137:21" pos:end="137:25">flags</name></name> <operator pos:start="137:27" pos:end="137:28">|=</operator> <name pos:start="137:30" pos:end="137:44">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="143:45"><if pos:start="141:9" pos:end="143:45">if <condition pos:start="141:12" pos:end="141:120">(<expr pos:start="141:13" pos:end="141:119"><name pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:14">st</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:22">parser</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:33">key_frame</name></name> <operator pos:start="141:35" pos:end="141:36">==</operator> <operator pos:start="141:38" pos:end="141:38">-</operator><literal type="number" pos:start="141:39" pos:end="141:39">1</literal> <operator pos:start="141:41" pos:end="141:42">&amp;&amp;</operator> <name pos:start="141:44" pos:end="141:64"><name pos:start="141:44" pos:end="141:45">st</name><operator pos:start="141:46" pos:end="141:47">-&gt;</operator><name pos:start="141:48" pos:end="141:53">parser</name><operator pos:start="141:54" pos:end="141:55">-&gt;</operator><name pos:start="141:56" pos:end="141:64">pict_type</name></name> <operator pos:start="141:66" pos:end="141:67">==</operator><name pos:start="141:68" pos:end="141:87">AV_PICTURE_TYPE_NONE</name> <operator pos:start="141:89" pos:end="141:90">&amp;&amp;</operator> <operator pos:start="141:92" pos:end="141:92">(</operator><name pos:start="141:93" pos:end="141:102"><name pos:start="141:93" pos:end="141:95">pkt</name><operator pos:start="141:96" pos:end="141:97">-&gt;</operator><name pos:start="141:98" pos:end="141:102">flags</name></name><operator pos:start="141:103" pos:end="141:103">&amp;</operator><name pos:start="141:104" pos:end="141:118">AV_PKT_FLAG_KEY</name><operator pos:start="141:119" pos:end="141:119">)</operator></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:45"><block_content pos:start="143:13" pos:end="143:45">

            <expr_stmt pos:start="143:13" pos:end="143:45"><expr pos:start="143:13" pos:end="143:44"><name pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:19">out_pkt</name><operator pos:start="143:20" pos:end="143:20">.</operator><name pos:start="143:21" pos:end="143:25">flags</name></name> <operator pos:start="143:27" pos:end="143:28">|=</operator> <name pos:start="143:30" pos:end="143:44">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:76"><expr pos:start="147:9" pos:end="147:75"><call pos:start="147:9" pos:end="147:75"><name pos:start="147:9" pos:end="147:26">compute_pkt_fields</name><argument_list pos:start="147:27" pos:end="147:75">(<argument pos:start="147:28" pos:end="147:28"><expr pos:start="147:28" pos:end="147:28"><name pos:start="147:28" pos:end="147:28">s</name></expr></argument>, <argument pos:start="147:31" pos:end="147:32"><expr pos:start="147:31" pos:end="147:32"><name pos:start="147:31" pos:end="147:32">st</name></expr></argument>, <argument pos:start="147:35" pos:end="147:44"><expr pos:start="147:35" pos:end="147:44"><name pos:start="147:35" pos:end="147:44"><name pos:start="147:35" pos:end="147:36">st</name><operator pos:start="147:37" pos:end="147:38">-&gt;</operator><name pos:start="147:39" pos:end="147:44">parser</name></name></expr></argument>, <argument pos:start="147:47" pos:end="147:54"><expr pos:start="147:47" pos:end="147:54"><operator pos:start="147:47" pos:end="147:47">&amp;</operator><name pos:start="147:48" pos:end="147:54">out_pkt</name></expr></argument>, <argument pos:start="147:57" pos:end="147:64"><expr pos:start="147:57" pos:end="147:64"><name pos:start="147:57" pos:end="147:64">next_dts</name></expr></argument>, <argument pos:start="147:67" pos:end="147:74"><expr pos:start="147:67" pos:end="147:74"><name pos:start="147:67" pos:end="147:74">next_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="151:9" pos:end="161:9"><if pos:start="151:9" pos:end="161:9">if <condition pos:start="151:12" pos:end="155:37">(<expr pos:start="151:13" pos:end="155:36"><operator pos:start="151:13" pos:end="151:13">(</operator><name pos:start="151:14" pos:end="151:16">ret</name> <operator pos:start="151:18" pos:end="151:18">=</operator> <call pos:start="151:20" pos:end="155:35"><name pos:start="151:20" pos:end="151:32">add_to_pktbuf</name><argument_list pos:start="151:33" pos:end="155:35">(<argument pos:start="151:34" pos:end="151:58"><expr pos:start="151:34" pos:end="151:58"><operator pos:start="151:34" pos:end="151:34">&amp;</operator><name pos:start="151:35" pos:end="151:58"><name pos:start="151:35" pos:end="151:35">s</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:45">internal</name><operator pos:start="151:46" pos:end="151:47">-&gt;</operator><name pos:start="151:48" pos:end="151:58">parse_queue</name></name></expr></argument>, <argument pos:start="151:61" pos:end="151:68"><expr pos:start="151:61" pos:end="151:68"><operator pos:start="151:61" pos:end="151:61">&amp;</operator><name pos:start="151:62" pos:end="151:68">out_pkt</name></expr></argument>,

                                 <argument pos:start="153:34" pos:end="153:62"><expr pos:start="153:34" pos:end="153:62"><operator pos:start="153:34" pos:end="153:34">&amp;</operator><name pos:start="153:35" pos:end="153:62"><name pos:start="153:35" pos:end="153:35">s</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:45">internal</name><operator pos:start="153:46" pos:end="153:47">-&gt;</operator><name pos:start="153:48" pos:end="153:62">parse_queue_end</name></name></expr></argument>,

                                 <argument pos:start="155:34" pos:end="155:34"><expr pos:start="155:34" pos:end="155:34"><literal type="number" pos:start="155:34" pos:end="155:34">1</literal></expr></argument>)</argument_list></call><operator pos:start="155:36" pos:end="155:36">)</operator></expr>)</condition> <block pos:start="155:39" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:22">

            <expr_stmt pos:start="157:13" pos:end="157:38"><expr pos:start="157:13" pos:end="157:37"><call pos:start="157:13" pos:end="157:37"><name pos:start="157:13" pos:end="157:27">av_packet_unref</name><argument_list pos:start="157:28" pos:end="157:37">(<argument pos:start="157:29" pos:end="157:36"><expr pos:start="157:29" pos:end="157:36"><operator pos:start="157:29" pos:end="157:29">&amp;</operator><name pos:start="157:30" pos:end="157:36">out_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="159:13" pos:end="159:22">goto <name pos:start="159:18" pos:end="159:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <comment type="block" pos:start="167:5" pos:end="167:56">/* end of the stream =&gt; close and free the parser */</comment>

    <if_stmt pos:start="169:5" pos:end="175:5"><if pos:start="169:5" pos:end="175:5">if <condition pos:start="169:8" pos:end="169:26">(<expr pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:11">pkt</name> <operator pos:start="169:13" pos:end="169:14">==</operator> <operator pos:start="169:16" pos:end="169:16">&amp;</operator><name pos:start="169:17" pos:end="169:25">flush_pkt</name></expr>)</condition> <block pos:start="169:28" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:26">

        <expr_stmt pos:start="171:9" pos:end="171:36"><expr pos:start="171:9" pos:end="171:35"><call pos:start="171:9" pos:end="171:35"><name pos:start="171:9" pos:end="171:23">av_parser_close</name><argument_list pos:start="171:24" pos:end="171:35">(<argument pos:start="171:25" pos:end="171:34"><expr pos:start="171:25" pos:end="171:34"><name pos:start="171:25" pos:end="171:34"><name pos:start="171:25" pos:end="171:26">st</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:34">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:26"><expr pos:start="173:9" pos:end="173:25"><name pos:start="173:9" pos:end="173:18"><name pos:start="173:9" pos:end="173:10">st</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:18">parser</name></name> <operator pos:start="173:20" pos:end="173:20">=</operator> <name pos:start="173:22" pos:end="173:25">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="179:1" pos:end="179:5"><name pos:start="179:1" pos:end="179:4">fail</name>:</label>

    <expr_stmt pos:start="181:5" pos:end="181:25"><expr pos:start="181:5" pos:end="181:24"><call pos:start="181:5" pos:end="181:24"><name pos:start="181:5" pos:end="181:19">av_packet_unref</name><argument_list pos:start="181:20" pos:end="181:24">(<argument pos:start="181:21" pos:end="181:23"><expr pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="183:5" pos:end="183:15">return <expr pos:start="183:12" pos:end="183:14"><name pos:start="183:12" pos:end="183:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
