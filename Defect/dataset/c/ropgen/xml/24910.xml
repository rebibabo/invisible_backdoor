<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24910.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">truemotion1_decode_header</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:55">TrueMotion1Context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="313:1">{<block_content pos:start="5:5" pos:end="311:30">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">width_shift</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">new_pix_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:23">frame_header</name></name></type> <name pos:start="11:25" pos:end="11:30">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:30"><name pos:start="13:13" pos:end="13:25">header_buffer</name><index pos:start="13:26" pos:end="13:30">[<expr pos:start="13:27" pos:end="13:29"><literal type="number" pos:start="13:27" pos:end="13:29">128</literal></expr>]</index></name></decl>;</decl_stmt>  <comment type="block" pos:start="13:34" pos:end="13:73">/* logical maximum size of the header */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:35">sel_vector_table</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:10">header</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:22">header_size</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <operator pos:start="19:26" pos:end="19:26">(</operator><operator pos:start="19:27" pos:end="19:27">(</operator><name pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:33">buf</name><index pos:start="19:34" pos:end="19:36">[<expr pos:start="19:35" pos:end="19:35"><literal type="number" pos:start="19:35" pos:end="19:35">0</literal></expr>]</index></name> <operator pos:start="19:38" pos:end="19:39">&gt;&gt;</operator> <literal type="number" pos:start="19:41" pos:end="19:41">5</literal><operator pos:start="19:42" pos:end="19:42">)</operator> <operator pos:start="19:44" pos:end="19:44">|</operator> <operator pos:start="19:46" pos:end="19:46">(</operator><name pos:start="19:47" pos:end="19:55"><name pos:start="19:47" pos:end="19:47">s</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:52">buf</name><index pos:start="19:53" pos:end="19:55">[<expr pos:start="19:54" pos:end="19:54"><literal type="number" pos:start="19:54" pos:end="19:54">0</literal></expr>]</index></name> <operator pos:start="19:57" pos:end="19:58">&lt;&lt;</operator> <literal type="number" pos:start="19:60" pos:end="19:60">3</literal><operator pos:start="19:61" pos:end="19:61">)</operator><operator pos:start="19:62" pos:end="19:62">)</operator> <operator pos:start="19:64" pos:end="19:64">&amp;</operator> <literal type="number" pos:start="19:66" pos:end="19:69">0x7f</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">buf</name><index pos:start="21:15" pos:end="21:17">[<expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>]</index></name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <literal type="number" pos:start="21:21" pos:end="21:24">0x10</literal></expr>)</condition>

    <block pos:start="23:5" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:80"><expr pos:start="25:9" pos:end="25:79"><call pos:start="25:9" pos:end="25:79"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:79">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:23">avctx</name></name></expr></argument>, <argument pos:start="25:26" pos:end="25:37"><expr pos:start="25:26" pos:end="25:37"><name pos:start="25:26" pos:end="25:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:67"><expr pos:start="25:40" pos:end="25:67"><literal type="string" pos:start="25:40" pos:end="25:67">"invalid header size (%d)\n"</literal></expr></argument>, <argument pos:start="25:70" pos:end="25:78"><expr pos:start="25:70" pos:end="25:78"><name pos:start="25:70" pos:end="25:78"><name pos:start="25:70" pos:end="25:70">s</name><operator pos:start="25:71" pos:end="25:72">-&gt;</operator><name pos:start="25:73" pos:end="25:75">buf</name><index pos:start="25:76" pos:end="25:78">[<expr pos:start="25:77" pos:end="25:77"><literal type="number" pos:start="25:77" pos:end="25:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:58">/* unscramble the header bytes with a XOR operation */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:10">memset</name><argument_list pos:start="35:11" pos:end="35:33">(<argument pos:start="35:12" pos:end="35:24"><expr pos:start="35:12" pos:end="35:24"><name pos:start="35:12" pos:end="35:24">header_buffer</name></expr></argument>, <argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">0</literal></expr></argument>, <argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><literal type="number" pos:start="35:30" pos:end="35:32">128</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="39:57">for <control pos:start="37:9" pos:end="37:44">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">1</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:39"><expr pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:38"><name pos:start="37:21" pos:end="37:26">header</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:38">header_size</name></name></expr>;</condition> <incr pos:start="37:41" pos:end="37:43"><expr pos:start="37:41" pos:end="37:43"><name pos:start="37:41" pos:end="37:41">i</name><operator pos:start="37:42" pos:end="37:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:9" pos:end="39:57"><block_content pos:start="39:9" pos:end="39:57">

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:21">header_buffer</name><index pos:start="39:22" pos:end="39:28">[<expr pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:23">i</name> <operator pos:start="39:25" pos:end="39:25">-</operator> <literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>]</index></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <name pos:start="39:32" pos:end="39:40"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:37">buf</name><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><name pos:start="39:39" pos:end="39:39">i</name></expr>]</index></name> <operator pos:start="39:42" pos:end="39:42">^</operator> <name pos:start="39:44" pos:end="39:56"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:49">buf</name><index pos:start="39:50" pos:end="39:56">[<expr pos:start="39:51" pos:end="39:55"><name pos:start="39:51" pos:end="39:51">i</name> <operator pos:start="39:53" pos:end="39:53">+</operator> <literal type="number" pos:start="39:55" pos:end="39:55">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:10">header</name><operator pos:start="43:11" pos:end="43:11">.</operator><name pos:start="43:12" pos:end="43:22">compression</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:41"><name pos:start="43:26" pos:end="43:38">header_buffer</name><index pos:start="43:39" pos:end="43:41">[<expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:10">header</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:19">deltaset</name></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:38"><name pos:start="45:23" pos:end="45:35">header_buffer</name><index pos:start="45:36" pos:end="45:38">[<expr pos:start="45:37" pos:end="45:37"><literal type="number" pos:start="45:37" pos:end="45:37">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:10">header</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:19">vectable</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:38"><name pos:start="47:23" pos:end="47:35">header_buffer</name><index pos:start="47:36" pos:end="47:38">[<expr pos:start="47:37" pos:end="47:37"><literal type="number" pos:start="47:37" pos:end="47:37">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:10">header</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:16">ysize</name></name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:45"><name pos:start="49:20" pos:end="49:26">AV_RL16</name><argument_list pos:start="49:27" pos:end="49:45">(<argument pos:start="49:28" pos:end="49:44"><expr pos:start="49:28" pos:end="49:44"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:44"><name pos:start="49:29" pos:end="49:41">header_buffer</name><index pos:start="49:42" pos:end="49:44">[<expr pos:start="49:43" pos:end="49:43"><literal type="number" pos:start="49:43" pos:end="49:43">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:10">header</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:16">xsize</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:45"><name pos:start="51:20" pos:end="51:26">AV_RL16</name><argument_list pos:start="51:27" pos:end="51:45">(<argument pos:start="51:28" pos:end="51:44"><expr pos:start="51:28" pos:end="51:44"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:44"><name pos:start="51:29" pos:end="51:41">header_buffer</name><index pos:start="51:42" pos:end="51:44">[<expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:49"><expr pos:start="53:5" pos:end="53:48"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:10">header</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:19">checksum</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <call pos:start="53:23" pos:end="53:48"><name pos:start="53:23" pos:end="53:29">AV_RL16</name><argument_list pos:start="53:30" pos:end="53:48">(<argument pos:start="53:31" pos:end="53:47"><expr pos:start="53:31" pos:end="53:47"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:47"><name pos:start="53:32" pos:end="53:44">header_buffer</name><index pos:start="53:45" pos:end="53:47">[<expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:10">header</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:18">version</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:37"><name pos:start="55:22" pos:end="55:34">header_buffer</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">9</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:10">header</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:22">header_type</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:38">header_buffer</name><index pos:start="57:39" pos:end="57:42">[<expr pos:start="57:40" pos:end="57:41"><literal type="number" pos:start="57:40" pos:end="57:41">10</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:37"><expr pos:start="59:5" pos:end="59:36"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:10">header</name><operator pos:start="59:11" pos:end="59:11">.</operator><name pos:start="59:12" pos:end="59:16">flags</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:36"><name pos:start="59:20" pos:end="59:32">header_buffer</name><index pos:start="59:33" pos:end="59:36">[<expr pos:start="59:34" pos:end="59:35"><literal type="number" pos:start="59:34" pos:end="59:35">11</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:10">header</name><operator pos:start="61:11" pos:end="61:11">.</operator><name pos:start="61:12" pos:end="61:18">control</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:38"><name pos:start="61:22" pos:end="61:34">header_buffer</name><index pos:start="61:35" pos:end="61:38">[<expr pos:start="61:36" pos:end="61:37"><literal type="number" pos:start="61:36" pos:end="61:37">12</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:19">/* Version 2 */</comment>

    <if_stmt pos:start="67:5" pos:end="93:33"><if pos:start="67:5" pos:end="91:5">if <condition pos:start="67:8" pos:end="67:28">(<expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:22"><name pos:start="67:9" pos:end="67:14">header</name><operator pos:start="67:15" pos:end="67:15">.</operator><name pos:start="67:16" pos:end="67:22">version</name></name> <operator pos:start="67:24" pos:end="67:25">&gt;=</operator> <literal type="number" pos:start="67:27" pos:end="67:27">2</literal></expr>)</condition>

    <block pos:start="69:5" pos:end="91:5">{<block_content pos:start="71:9" pos:end="89:37">

        <if_stmt pos:start="71:9" pos:end="89:37"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:35">(<expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:18">header</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:30">header_type</name></name> <operator pos:start="71:32" pos:end="71:32">&gt;</operator> <literal type="number" pos:start="71:34" pos:end="71:34">3</literal></expr>)</condition>

        <block pos:start="73:9" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:22">

            <expr_stmt pos:start="75:13" pos:end="75:93"><expr pos:start="75:13" pos:end="75:92"><call pos:start="75:13" pos:end="75:92"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:92">(<argument pos:start="75:20" pos:end="75:27"><expr pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:27"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:27">avctx</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:41"><expr pos:start="75:30" pos:end="75:41"><name pos:start="75:30" pos:end="75:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:44" pos:end="75:71"><expr pos:start="75:44" pos:end="75:71"><literal type="string" pos:start="75:44" pos:end="75:71">"invalid header type (%d)\n"</literal></expr></argument>, <argument pos:start="75:74" pos:end="75:91"><expr pos:start="75:74" pos:end="75:91"><name pos:start="75:74" pos:end="75:91"><name pos:start="75:74" pos:end="75:79">header</name><operator pos:start="75:80" pos:end="75:80">.</operator><name pos:start="75:81" pos:end="75:91">header_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:22">return <expr pos:start="77:20" pos:end="77:21"><operator pos:start="77:20" pos:end="77:20">-</operator><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="79:11" pos:end="87:9">else if <condition pos:start="79:19" pos:end="79:74">(<expr pos:start="79:20" pos:end="79:73"><operator pos:start="79:20" pos:end="79:20">(</operator><name pos:start="79:21" pos:end="79:38"><name pos:start="79:21" pos:end="79:26">header</name><operator pos:start="79:27" pos:end="79:27">.</operator><name pos:start="79:28" pos:end="79:38">header_type</name></name> <operator pos:start="79:40" pos:end="79:41">==</operator> <literal type="number" pos:start="79:43" pos:end="79:43">2</literal><operator pos:start="79:44" pos:end="79:44">)</operator> <operator pos:start="79:46" pos:end="79:47">||</operator> <operator pos:start="79:49" pos:end="79:49">(</operator><name pos:start="79:50" pos:end="79:67"><name pos:start="79:50" pos:end="79:55">header</name><operator pos:start="79:56" pos:end="79:56">.</operator><name pos:start="79:57" pos:end="79:67">header_type</name></name> <operator pos:start="79:69" pos:end="79:70">==</operator> <literal type="number" pos:start="79:72" pos:end="79:72">3</literal><operator pos:start="79:73" pos:end="79:73">)</operator></expr>)</condition> <block pos:start="79:76" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:42">

            <expr_stmt pos:start="81:13" pos:end="81:36"><expr pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:20">flags</name></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:35"><name pos:start="81:24" pos:end="81:29">header</name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:35">flags</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="85:42"><if pos:start="83:13" pos:end="85:42">if <condition pos:start="83:16" pos:end="83:46">(<expr pos:start="83:17" pos:end="83:45"><operator pos:start="83:17" pos:end="83:17">!</operator><operator pos:start="83:18" pos:end="83:18">(</operator><name pos:start="83:19" pos:end="83:26"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:26">flags</name></name> <operator pos:start="83:28" pos:end="83:28">&amp;</operator> <name pos:start="83:30" pos:end="83:44">FLAG_INTERFRAME</name><operator pos:start="83:45" pos:end="83:45">)</operator></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:42"><block_content pos:start="85:17" pos:end="85:42">

                <expr_stmt pos:start="85:17" pos:end="85:42"><expr pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:24"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:24">flags</name></name> <operator pos:start="85:26" pos:end="85:27">|=</operator> <name pos:start="85:29" pos:end="85:41">FLAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="87:11" pos:end="89:37">else<block type="pseudo" pos:start="89:13" pos:end="89:37"><block_content pos:start="89:13" pos:end="89:37">

            <expr_stmt pos:start="89:13" pos:end="89:37"><expr pos:start="89:13" pos:end="89:36"><name pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:20">flags</name></name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:36">FLAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="93:33">else<block type="pseudo" pos:start="93:9" pos:end="93:33"><block_content pos:start="93:9" pos:end="93:33"> <comment type="block" pos:start="91:12" pos:end="91:26">/* Version 1 */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">flags</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:32">FLAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="97:5" pos:end="139:5"><if pos:start="97:5" pos:end="119:5">if <condition pos:start="97:8" pos:end="97:31">(<expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:16">flags</name></name> <operator pos:start="97:18" pos:end="97:18">&amp;</operator> <name pos:start="97:20" pos:end="97:30">FLAG_SPRITE</name></expr>)</condition> <block pos:start="97:33" pos:end="119:5">{<block_content pos:start="99:9" pos:end="118:0">

        <expr_stmt pos:start="99:9" pos:end="114:0"><expr pos:start="99:9" pos:end="99:105"><call pos:start="99:9" pos:end="99:105"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:105">(<argument pos:start="99:16" pos:end="99:23"><expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">avctx</name></name></expr></argument>, <argument pos:start="99:26" pos:end="99:36"><expr pos:start="99:26" pos:end="99:36"><name pos:start="99:26" pos:end="99:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="99:39" pos:end="99:104"><expr pos:start="99:39" pos:end="99:104"><literal type="string" pos:start="99:39" pos:end="99:104">"SPRITE frame found, please report the sample to the developers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="101:9" pos:end="101:80">/* FIXME header.width, height, xoffset and yoffset aren't initialized */</comment>

<cpp:if pos:start="103:1" pos:end="103:5">#<cpp:directive pos:start="103:2" pos:end="103:3">if</cpp:directive> <expr pos:start="103:5" pos:end="103:5"><literal type="number" pos:start="103:5" pos:end="103:5">0</literal></expr></cpp:if>

        s-&gt;w = header.width;

        s-&gt;h = header.height;

        s-&gt;x = header.xoffset;

        s-&gt;y = header.yoffset;

<cpp:else pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:5">else</cpp:directive></cpp:else>

        <return pos:start="115:9" pos:end="118:0">return <expr pos:start="115:16" pos:end="115:17"><operator pos:start="115:16" pos:end="115:16">-</operator><literal type="number" pos:start="115:17" pos:end="115:17">1</literal></expr>;</return>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="139:5">else <block pos:start="119:12" pos:end="139:5">{<block_content pos:start="121:9" pos:end="137:9">

        <expr_stmt pos:start="121:9" pos:end="121:28"><expr pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:12"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:12">w</name></name> <operator pos:start="121:14" pos:end="121:14">=</operator> <name pos:start="121:16" pos:end="121:27"><name pos:start="121:16" pos:end="121:21">header</name><operator pos:start="121:22" pos:end="121:22">.</operator><name pos:start="121:23" pos:end="121:27">xsize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:28"><expr pos:start="123:9" pos:end="123:27"><name pos:start="123:9" pos:end="123:12"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:12">h</name></name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:27"><name pos:start="123:16" pos:end="123:21">header</name><operator pos:start="123:22" pos:end="123:22">.</operator><name pos:start="123:23" pos:end="123:27">ysize</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="137:9"><if pos:start="125:9" pos:end="137:9">if <condition pos:start="125:12" pos:end="125:35">(<expr pos:start="125:13" pos:end="125:34"><name pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:18">header</name><operator pos:start="125:19" pos:end="125:19">.</operator><name pos:start="125:20" pos:end="125:30">header_type</name></name> <operator pos:start="125:32" pos:end="125:32">&lt;</operator> <literal type="number" pos:start="125:34" pos:end="125:34">2</literal></expr>)</condition> <block pos:start="125:37" pos:end="137:9">{<block_content pos:start="127:13" pos:end="135:13">

            <if_stmt pos:start="127:13" pos:end="135:13"><if pos:start="127:13" pos:end="135:13">if <condition pos:start="127:16" pos:end="127:46">(<expr pos:start="127:17" pos:end="127:45"><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:21"><name pos:start="127:18" pos:end="127:18">s</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:21">w</name></name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:27">213</literal><operator pos:start="127:28" pos:end="127:28">)</operator> <operator pos:start="127:30" pos:end="127:31">&amp;&amp;</operator> <operator pos:start="127:33" pos:end="127:33">(</operator><name pos:start="127:34" pos:end="127:37"><name pos:start="127:34" pos:end="127:34">s</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:37">h</name></name> <operator pos:start="127:39" pos:end="127:40">&gt;=</operator> <literal type="number" pos:start="127:42" pos:end="127:44">176</literal><operator pos:start="127:45" pos:end="127:45">)</operator></expr>)</condition>

            <block pos:start="129:13" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:118">

                <expr_stmt pos:start="131:17" pos:end="131:46"><expr pos:start="131:17" pos:end="131:45"><name pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:24">flags</name></name> <operator pos:start="131:26" pos:end="131:27">|=</operator> <name pos:start="131:29" pos:end="131:45">FLAG_INTERPOLATED</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:118"><expr pos:start="133:17" pos:end="133:117"><call pos:start="133:17" pos:end="133:117"><name pos:start="133:17" pos:end="133:22">av_log</name><argument_list pos:start="133:23" pos:end="133:117">(<argument pos:start="133:24" pos:end="133:31"><expr pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:31"><name pos:start="133:24" pos:end="133:24">s</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:31">avctx</name></name></expr></argument>, <argument pos:start="133:34" pos:end="133:44"><expr pos:start="133:34" pos:end="133:44"><name pos:start="133:34" pos:end="133:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="133:47" pos:end="133:116"><expr pos:start="133:47" pos:end="133:116"><literal type="string" pos:start="133:47" pos:end="133:116">"INTERPOLATION selected, please report the sample to the developers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="143:5" pos:end="149:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:33">(<expr pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:14">header</name><operator pos:start="143:15" pos:end="143:15">.</operator><name pos:start="143:16" pos:end="143:26">compression</name></name> <operator pos:start="143:28" pos:end="143:29">&gt;=</operator> <literal type="number" pos:start="143:31" pos:end="143:32">17</literal></expr>)</condition> <block pos:start="143:35" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:18">

        <expr_stmt pos:start="145:9" pos:end="145:94"><expr pos:start="145:9" pos:end="145:93"><call pos:start="145:9" pos:end="145:93"><name pos:start="145:9" pos:end="145:14">av_log</name><argument_list pos:start="145:15" pos:end="145:93">(<argument pos:start="145:16" pos:end="145:23"><expr pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:23"><name pos:start="145:16" pos:end="145:16">s</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:23">avctx</name></name></expr></argument>, <argument pos:start="145:26" pos:end="145:37"><expr pos:start="145:26" pos:end="145:37"><name pos:start="145:26" pos:end="145:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="145:40" pos:end="145:72"><expr pos:start="145:40" pos:end="145:72"><literal type="string" pos:start="145:40" pos:end="145:72">"invalid compression type (%d)\n"</literal></expr></argument>, <argument pos:start="145:75" pos:end="145:92"><expr pos:start="145:75" pos:end="145:92"><name pos:start="145:75" pos:end="145:92"><name pos:start="145:75" pos:end="145:80">header</name><operator pos:start="145:81" pos:end="145:81">.</operator><name pos:start="145:82" pos:end="145:92">compression</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="157:48"><if pos:start="153:5" pos:end="157:48">if <condition pos:start="153:8" pos:end="155:46">(<expr pos:start="153:9" pos:end="155:45"><operator pos:start="153:9" pos:end="153:9">(</operator><name pos:start="153:10" pos:end="153:24"><name pos:start="153:10" pos:end="153:15">header</name><operator pos:start="153:16" pos:end="153:16">.</operator><name pos:start="153:17" pos:end="153:24">deltaset</name></name> <operator pos:start="153:26" pos:end="153:27">!=</operator> <name pos:start="153:29" pos:end="153:44"><name pos:start="153:29" pos:end="153:29">s</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:44">last_deltaset</name></name><operator pos:start="153:45" pos:end="153:45">)</operator> <operator pos:start="153:47" pos:end="153:48">||</operator>

        <operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:24"><name pos:start="155:10" pos:end="155:15">header</name><operator pos:start="155:16" pos:end="155:16">.</operator><name pos:start="155:17" pos:end="155:24">vectable</name></name> <operator pos:start="155:26" pos:end="155:27">!=</operator> <name pos:start="155:29" pos:end="155:44"><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:44">last_vectable</name></name><operator pos:start="155:45" pos:end="155:45">)</operator></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:48"><block_content pos:start="157:9" pos:end="157:48">

        <expr_stmt pos:start="157:9" pos:end="157:48"><expr pos:start="157:9" pos:end="157:47"><call pos:start="157:9" pos:end="157:47"><name pos:start="157:9" pos:end="157:27">select_delta_tables</name><argument_list pos:start="157:28" pos:end="157:47">(<argument pos:start="157:29" pos:end="157:29"><expr pos:start="157:29" pos:end="157:29"><name pos:start="157:29" pos:end="157:29">s</name></expr></argument>, <argument pos:start="157:32" pos:end="157:46"><expr pos:start="157:32" pos:end="157:46"><name pos:start="157:32" pos:end="157:46"><name pos:start="157:32" pos:end="157:37">header</name><operator pos:start="157:38" pos:end="157:38">.</operator><name pos:start="157:39" pos:end="157:46">deltaset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="179:5"><if pos:start="161:5" pos:end="163:35">if <condition pos:start="161:8" pos:end="161:55">(<expr pos:start="161:9" pos:end="161:54"><operator pos:start="161:9" pos:end="161:9">(</operator><name pos:start="161:10" pos:end="161:27"><name pos:start="161:10" pos:end="161:15">header</name><operator pos:start="161:16" pos:end="161:16">.</operator><name pos:start="161:17" pos:end="161:27">compression</name></name> <operator pos:start="161:29" pos:end="161:29">&amp;</operator> <literal type="number" pos:start="161:31" pos:end="161:31">1</literal><operator pos:start="161:32" pos:end="161:32">)</operator> <operator pos:start="161:34" pos:end="161:35">&amp;&amp;</operator> <name pos:start="161:37" pos:end="161:54"><name pos:start="161:37" pos:end="161:42">header</name><operator pos:start="161:43" pos:end="161:43">.</operator><name pos:start="161:44" pos:end="161:54">header_type</name></name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:35"><block_content pos:start="163:9" pos:end="163:35">

        <expr_stmt pos:start="163:9" pos:end="163:35"><expr pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:24">sel_vector_table</name> <operator pos:start="163:26" pos:end="163:26">=</operator> <name pos:start="163:28" pos:end="163:34">pc_tbl2</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="165:5" pos:end="179:5">else <block pos:start="165:10" pos:end="179:5">{<block_content pos:start="167:9" pos:end="177:9">

        <if_stmt pos:start="167:9" pos:end="177:9"><if pos:start="167:9" pos:end="169:59">if <condition pos:start="167:12" pos:end="167:32">(<expr pos:start="167:13" pos:end="167:31"><name pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:18">header</name><operator pos:start="167:19" pos:end="167:19">.</operator><name pos:start="167:20" pos:end="167:27">vectable</name></name> <operator pos:start="167:29" pos:end="167:29">&lt;</operator> <literal type="number" pos:start="167:31" pos:end="167:31">4</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:59"><block_content pos:start="169:13" pos:end="169:59">

            <expr_stmt pos:start="169:13" pos:end="169:59"><expr pos:start="169:13" pos:end="169:58"><name pos:start="169:13" pos:end="169:28">sel_vector_table</name> <operator pos:start="169:30" pos:end="169:30">=</operator> <name pos:start="169:32" pos:end="169:58"><name pos:start="169:32" pos:end="169:37">tables</name><index pos:start="169:38" pos:end="169:58">[<expr pos:start="169:39" pos:end="169:57"><name pos:start="169:39" pos:end="169:53"><name pos:start="169:39" pos:end="169:44">header</name><operator pos:start="169:45" pos:end="169:45">.</operator><name pos:start="169:46" pos:end="169:53">vectable</name></name> <operator pos:start="169:55" pos:end="169:55">-</operator> <literal type="number" pos:start="169:57" pos:end="169:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="171:9" pos:end="177:9">else <block pos:start="171:14" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:22">

            <expr_stmt pos:start="173:13" pos:end="173:94"><expr pos:start="173:13" pos:end="173:93"><call pos:start="173:13" pos:end="173:93"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:93">(<argument pos:start="173:20" pos:end="173:27"><expr pos:start="173:20" pos:end="173:27"><name pos:start="173:20" pos:end="173:27"><name pos:start="173:20" pos:end="173:20">s</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:27">avctx</name></name></expr></argument>, <argument pos:start="173:30" pos:end="173:41"><expr pos:start="173:30" pos:end="173:41"><name pos:start="173:30" pos:end="173:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:44" pos:end="173:75"><expr pos:start="173:44" pos:end="173:75"><literal type="string" pos:start="173:44" pos:end="173:75">"invalid vector table id (%d)\n"</literal></expr></argument>, <argument pos:start="173:78" pos:end="173:92"><expr pos:start="173:78" pos:end="173:92"><name pos:start="173:78" pos:end="173:92"><name pos:start="173:78" pos:end="173:83">header</name><operator pos:start="173:84" pos:end="173:84">.</operator><name pos:start="173:85" pos:end="173:92">vectable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:22">return <expr pos:start="175:20" pos:end="175:21"><operator pos:start="175:20" pos:end="175:20">-</operator><literal type="number" pos:start="175:21" pos:end="175:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="183:5" pos:end="191:37"><if pos:start="183:5" pos:end="189:5">if <condition pos:start="183:8" pos:end="183:71">(<expr pos:start="183:9" pos:end="183:70"><name pos:start="183:9" pos:end="183:45"><name pos:start="183:9" pos:end="183:25">compression_types</name><index pos:start="183:26" pos:end="183:45">[<expr pos:start="183:27" pos:end="183:44"><name pos:start="183:27" pos:end="183:44"><name pos:start="183:27" pos:end="183:32">header</name><operator pos:start="183:33" pos:end="183:33">.</operator><name pos:start="183:34" pos:end="183:44">compression</name></name></expr>]</index></name><operator pos:start="183:46" pos:end="183:46">.</operator><name pos:start="183:47" pos:end="183:55">algorithm</name> <operator pos:start="183:57" pos:end="183:58">==</operator> <name pos:start="183:60" pos:end="183:70">ALGO_RGB24H</name></expr>)</condition> <block pos:start="183:73" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:24">

        <expr_stmt pos:start="185:9" pos:end="185:36"><expr pos:start="185:9" pos:end="185:35"><name pos:start="185:9" pos:end="185:19">new_pix_fmt</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:35">PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:24"><expr pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:19">width_shift</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <literal type="number" pos:start="187:23" pos:end="187:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="191:37">else<block type="pseudo" pos:start="191:9" pos:end="191:37"><block_content pos:start="191:9" pos:end="191:37">

        <expr_stmt pos:start="191:9" pos:end="191:37"><expr pos:start="191:9" pos:end="191:36"><name pos:start="191:9" pos:end="191:19">new_pix_fmt</name> <operator pos:start="191:21" pos:end="191:21">=</operator> <name pos:start="191:23" pos:end="191:36">PIX_FMT_RGB555</name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="191:39" pos:end="191:68">// RGB565 is supported as well</comment>



    <expr_stmt pos:start="195:5" pos:end="195:25"><expr pos:start="195:5" pos:end="195:24"><name pos:start="195:5" pos:end="195:8"><name pos:start="195:5" pos:end="195:5">s</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:8">w</name></name> <operator pos:start="195:10" pos:end="195:12">&gt;&gt;=</operator> <name pos:start="195:14" pos:end="195:24">width_shift</name></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="199:18"><if pos:start="197:5" pos:end="199:18">if <condition pos:start="197:8" pos:end="197:57">(<expr pos:start="197:9" pos:end="197:56"><call pos:start="197:9" pos:end="197:52"><name pos:start="197:9" pos:end="197:27">av_image_check_size</name><argument_list pos:start="197:28" pos:end="197:52">(<argument pos:start="197:29" pos:end="197:32"><expr pos:start="197:29" pos:end="197:32"><name pos:start="197:29" pos:end="197:32"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:32">w</name></name></expr></argument>, <argument pos:start="197:35" pos:end="197:38"><expr pos:start="197:35" pos:end="197:38"><name pos:start="197:35" pos:end="197:38"><name pos:start="197:35" pos:end="197:35">s</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:38">h</name></name></expr></argument>, <argument pos:start="197:41" pos:end="197:41"><expr pos:start="197:41" pos:end="197:41"><literal type="number" pos:start="197:41" pos:end="197:41">0</literal></expr></argument>, <argument pos:start="197:44" pos:end="197:51"><expr pos:start="197:44" pos:end="197:51"><name pos:start="197:44" pos:end="197:51"><name pos:start="197:44" pos:end="197:44">s</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:51">avctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="197:54" pos:end="197:54">&lt;</operator> <literal type="number" pos:start="197:56" pos:end="197:56">0</literal></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:18"><block_content pos:start="199:9" pos:end="199:18">

        <return pos:start="199:9" pos:end="199:18">return <expr pos:start="199:16" pos:end="199:17"><operator pos:start="199:16" pos:end="199:16">-</operator><literal type="number" pos:start="199:17" pos:end="199:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="203:5" pos:end="219:5"><if pos:start="203:5" pos:end="219:5">if <condition pos:start="203:8" pos:end="205:41">(<expr pos:start="203:9" pos:end="205:40"><name pos:start="203:9" pos:end="203:12"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:12">w</name></name> <operator pos:start="203:14" pos:end="203:15">!=</operator> <name pos:start="203:17" pos:end="203:31"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:24">avctx</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:31">width</name></name> <operator pos:start="203:33" pos:end="203:34">||</operator> <name pos:start="203:36" pos:end="203:39"><name pos:start="203:36" pos:end="203:36">s</name><operator pos:start="203:37" pos:end="203:38">-&gt;</operator><name pos:start="203:39" pos:end="203:39">h</name></name> <operator pos:start="203:41" pos:end="203:42">!=</operator> <name pos:start="203:44" pos:end="203:59"><name pos:start="203:44" pos:end="203:44">s</name><operator pos:start="203:45" pos:end="203:46">-&gt;</operator><name pos:start="203:47" pos:end="203:51">avctx</name><operator pos:start="203:52" pos:end="203:53">-&gt;</operator><name pos:start="203:54" pos:end="203:59">height</name></name> <operator pos:start="203:61" pos:end="203:62">||</operator>

        <name pos:start="205:9" pos:end="205:19">new_pix_fmt</name> <operator pos:start="205:21" pos:end="205:22">!=</operator> <name pos:start="205:24" pos:end="205:40"><name pos:start="205:24" pos:end="205:24">s</name><operator pos:start="205:25" pos:end="205:26">-&gt;</operator><name pos:start="205:27" pos:end="205:31">avctx</name><operator pos:start="205:32" pos:end="205:33">-&gt;</operator><name pos:start="205:34" pos:end="205:40">pix_fmt</name></name></expr>)</condition> <block pos:start="205:43" pos:end="219:5">{<block_content pos:start="207:9" pos:end="217:98">

        <if_stmt pos:start="207:9" pos:end="209:58"><if pos:start="207:9" pos:end="209:58">if <condition pos:start="207:12" pos:end="207:29">(<expr pos:start="207:13" pos:end="207:28"><name pos:start="207:13" pos:end="207:28"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:20">frame</name><operator pos:start="207:21" pos:end="207:21">.</operator><name pos:start="207:22" pos:end="207:25">data</name><index pos:start="207:26" pos:end="207:28">[<expr pos:start="207:27" pos:end="207:27"><literal type="number" pos:start="207:27" pos:end="207:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:58"><block_content pos:start="209:13" pos:end="209:58">

            <expr_stmt pos:start="209:13" pos:end="209:58"><expr pos:start="209:13" pos:end="209:57"><call pos:start="209:13" pos:end="209:57"><name pos:start="209:13" pos:end="209:36"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">avctx</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:36">release_buffer</name></name><argument_list pos:start="209:37" pos:end="209:57">(<argument pos:start="209:38" pos:end="209:45"><expr pos:start="209:38" pos:end="209:45"><name pos:start="209:38" pos:end="209:45"><name pos:start="209:38" pos:end="209:38">s</name><operator pos:start="209:39" pos:end="209:40">-&gt;</operator><name pos:start="209:41" pos:end="209:45">avctx</name></name></expr></argument>, <argument pos:start="209:48" pos:end="209:56"><expr pos:start="209:48" pos:end="209:56"><operator pos:start="209:48" pos:end="209:48">&amp;</operator><name pos:start="209:49" pos:end="209:56"><name pos:start="209:49" pos:end="209:49">s</name><operator pos:start="209:50" pos:end="209:51">-&gt;</operator><name pos:start="209:52" pos:end="209:56">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:76"><expr pos:start="211:9" pos:end="211:75"><name pos:start="211:9" pos:end="211:37"><name pos:start="211:9" pos:end="211:9">s</name><operator pos:start="211:10" pos:end="211:11">-&gt;</operator><name pos:start="211:12" pos:end="211:16">avctx</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:37">sample_aspect_ratio</name></name> <operator pos:start="211:39" pos:end="211:39">=</operator> <operator pos:start="211:41" pos:end="211:41">(</operator><name pos:start="211:42" pos:end="211:51">AVRational</name><operator pos:start="211:52" pos:end="211:52">)</operator><block pos:start="211:53" pos:end="211:75">{ <expr pos:start="211:55" pos:end="211:70"><literal type="number" pos:start="211:55" pos:end="211:55">1</literal> <operator pos:start="211:57" pos:end="211:58">&lt;&lt;</operator> <name pos:start="211:60" pos:end="211:70">width_shift</name></expr>, <expr pos:start="211:73" pos:end="211:73"><literal type="number" pos:start="211:73" pos:end="211:73">1</literal></expr> }</block></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:40"><expr pos:start="213:9" pos:end="213:39"><name pos:start="213:9" pos:end="213:25"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:16">avctx</name><operator pos:start="213:17" pos:end="213:18">-&gt;</operator><name pos:start="213:19" pos:end="213:25">pix_fmt</name></name> <operator pos:start="213:27" pos:end="213:27">=</operator> <name pos:start="213:29" pos:end="213:39">new_pix_fmt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:53"><expr pos:start="215:9" pos:end="215:52"><call pos:start="215:9" pos:end="215:52"><name pos:start="215:9" pos:end="215:30">avcodec_set_dimensions</name><argument_list pos:start="215:31" pos:end="215:52">(<argument pos:start="215:32" pos:end="215:39"><expr pos:start="215:32" pos:end="215:39"><name pos:start="215:32" pos:end="215:39"><name pos:start="215:32" pos:end="215:32">s</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:39">avctx</name></name></expr></argument>, <argument pos:start="215:42" pos:end="215:45"><expr pos:start="215:42" pos:end="215:45"><name pos:start="215:42" pos:end="215:45"><name pos:start="215:42" pos:end="215:42">s</name><operator pos:start="215:43" pos:end="215:44">-&gt;</operator><name pos:start="215:45" pos:end="215:45">w</name></name></expr></argument>, <argument pos:start="215:48" pos:end="215:51"><expr pos:start="215:48" pos:end="215:51"><name pos:start="215:48" pos:end="215:51"><name pos:start="215:48" pos:end="215:48">s</name><operator pos:start="215:49" pos:end="215:50">-&gt;</operator><name pos:start="215:51" pos:end="215:51">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:98"><expr pos:start="217:9" pos:end="217:97"><call pos:start="217:9" pos:end="217:97"><name pos:start="217:9" pos:end="217:22">av_fast_malloc</name><argument_list pos:start="217:23" pos:end="217:97">(<argument pos:start="217:24" pos:end="217:36"><expr pos:start="217:24" pos:end="217:36"><operator pos:start="217:24" pos:end="217:24">&amp;</operator><name pos:start="217:25" pos:end="217:36"><name pos:start="217:25" pos:end="217:25">s</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:36">vert_pred</name></name></expr></argument>, <argument pos:start="217:39" pos:end="217:56"><expr pos:start="217:39" pos:end="217:56"><operator pos:start="217:39" pos:end="217:39">&amp;</operator><name pos:start="217:40" pos:end="217:56"><name pos:start="217:40" pos:end="217:40">s</name><operator pos:start="217:41" pos:end="217:42">-&gt;</operator><name pos:start="217:43" pos:end="217:56">vert_pred_size</name></name></expr></argument>, <argument pos:start="217:59" pos:end="217:96"><expr pos:start="217:59" pos:end="217:96"><name pos:start="217:59" pos:end="217:73"><name pos:start="217:59" pos:end="217:59">s</name><operator pos:start="217:60" pos:end="217:61">-&gt;</operator><name pos:start="217:62" pos:end="217:66">avctx</name><operator pos:start="217:67" pos:end="217:68">-&gt;</operator><name pos:start="217:69" pos:end="217:73">width</name></name> <operator pos:start="217:75" pos:end="217:75">*</operator> sizeof<operator pos:start="217:83" pos:end="217:83">(</operator><name pos:start="217:84" pos:end="217:91">unsigned</name> <name pos:start="217:93" pos:end="217:95">int</name><operator pos:start="217:96" pos:end="217:96">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="227:44">/* There is 1 change bit per 4 pixels, so each change byte represents

     * 32 pixels; divide width by 4 to obtain the number of change bits and

     * then round up to the nearest byte. */</comment>

    <expr_stmt pos:start="229:5" pos:end="229:83"><expr pos:start="229:5" pos:end="229:82"><name pos:start="229:5" pos:end="229:30"><name pos:start="229:5" pos:end="229:5">s</name><operator pos:start="229:6" pos:end="229:7">-&gt;</operator><name pos:start="229:8" pos:end="229:30">mb_change_bits_row_size</name></name> <operator pos:start="229:32" pos:end="229:32">=</operator> <operator pos:start="229:34" pos:end="229:34">(</operator><operator pos:start="229:35" pos:end="229:35">(</operator><name pos:start="229:36" pos:end="229:50"><name pos:start="229:36" pos:end="229:36">s</name><operator pos:start="229:37" pos:end="229:38">-&gt;</operator><name pos:start="229:39" pos:end="229:43">avctx</name><operator pos:start="229:44" pos:end="229:45">-&gt;</operator><name pos:start="229:46" pos:end="229:50">width</name></name> <operator pos:start="229:52" pos:end="229:53">&gt;&gt;</operator> <operator pos:start="229:55" pos:end="229:55">(</operator><literal type="number" pos:start="229:56" pos:end="229:58">2</literal> <operator pos:start="229:58" pos:end="229:58">-</operator> <name pos:start="229:60" pos:end="229:70">width_shift</name><operator pos:start="229:71" pos:end="229:71">)</operator><operator pos:start="229:72" pos:end="229:72">)</operator> <operator pos:start="229:74" pos:end="229:74">+</operator> <literal type="number" pos:start="229:76" pos:end="229:76">7</literal><operator pos:start="229:77" pos:end="229:77">)</operator> <operator pos:start="229:79" pos:end="229:80">&gt;&gt;</operator> <literal type="number" pos:start="229:82" pos:end="229:82">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="233:5" pos:end="251:5"><if pos:start="233:5" pos:end="251:5">if <condition pos:start="233:8" pos:end="233:87">(<expr pos:start="233:9" pos:end="233:86"><operator pos:start="233:9" pos:end="233:9">(</operator><name pos:start="233:10" pos:end="233:24"><name pos:start="233:10" pos:end="233:15">header</name><operator pos:start="233:16" pos:end="233:16">.</operator><name pos:start="233:17" pos:end="233:24">deltaset</name></name> <operator pos:start="233:26" pos:end="233:27">!=</operator> <name pos:start="233:29" pos:end="233:44"><name pos:start="233:29" pos:end="233:29">s</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:44">last_deltaset</name></name><operator pos:start="233:45" pos:end="233:45">)</operator> <operator pos:start="233:47" pos:end="233:48">||</operator> <operator pos:start="233:50" pos:end="233:50">(</operator><name pos:start="233:51" pos:end="233:65"><name pos:start="233:51" pos:end="233:56">header</name><operator pos:start="233:57" pos:end="233:57">.</operator><name pos:start="233:58" pos:end="233:65">vectable</name></name> <operator pos:start="233:67" pos:end="233:68">!=</operator> <name pos:start="233:70" pos:end="233:85"><name pos:start="233:70" pos:end="233:70">s</name><operator pos:start="233:71" pos:end="233:72">-&gt;</operator><name pos:start="233:73" pos:end="233:85">last_vectable</name></name><operator pos:start="233:86" pos:end="233:86">)</operator></expr>)</condition>

    <block pos:start="235:5" pos:end="251:5">{<block_content pos:start="237:9" pos:end="249:52">

        <if_stmt pos:start="237:9" pos:end="249:52"><if pos:start="237:9" pos:end="239:52">if <condition pos:start="237:12" pos:end="237:75">(<expr pos:start="237:13" pos:end="237:74"><name pos:start="237:13" pos:end="237:49"><name pos:start="237:13" pos:end="237:29">compression_types</name><index pos:start="237:30" pos:end="237:49">[<expr pos:start="237:31" pos:end="237:48"><name pos:start="237:31" pos:end="237:48"><name pos:start="237:31" pos:end="237:36">header</name><operator pos:start="237:37" pos:end="237:37">.</operator><name pos:start="237:38" pos:end="237:48">compression</name></name></expr>]</index></name><operator pos:start="237:50" pos:end="237:50">.</operator><name pos:start="237:51" pos:end="237:59">algorithm</name> <operator pos:start="237:61" pos:end="237:62">==</operator> <name pos:start="237:64" pos:end="237:74">ALGO_RGB24H</name></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:52"><block_content pos:start="239:13" pos:end="239:52">

            <expr_stmt pos:start="239:13" pos:end="239:52"><expr pos:start="239:13" pos:end="239:51"><call pos:start="239:13" pos:end="239:51"><name pos:start="239:13" pos:end="239:30">gen_vector_table24</name><argument_list pos:start="239:31" pos:end="239:51">(<argument pos:start="239:32" pos:end="239:32"><expr pos:start="239:32" pos:end="239:32"><name pos:start="239:32" pos:end="239:32">s</name></expr></argument>, <argument pos:start="239:35" pos:end="239:50"><expr pos:start="239:35" pos:end="239:50"><name pos:start="239:35" pos:end="239:50">sel_vector_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="241:9" pos:end="245:52">else

        if <condition pos:start="243:12" pos:end="243:48">(<expr pos:start="243:13" pos:end="243:47"><name pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:13">s</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:20">avctx</name><operator pos:start="243:21" pos:end="243:22">-&gt;</operator><name pos:start="243:23" pos:end="243:29">pix_fmt</name></name> <operator pos:start="243:31" pos:end="243:32">==</operator> <name pos:start="243:34" pos:end="243:47">PIX_FMT_RGB555</name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:52"><block_content pos:start="245:13" pos:end="245:52">

            <expr_stmt pos:start="245:13" pos:end="245:52"><expr pos:start="245:13" pos:end="245:51"><call pos:start="245:13" pos:end="245:51"><name pos:start="245:13" pos:end="245:30">gen_vector_table15</name><argument_list pos:start="245:31" pos:end="245:51">(<argument pos:start="245:32" pos:end="245:32"><expr pos:start="245:32" pos:end="245:32"><name pos:start="245:32" pos:end="245:32">s</name></expr></argument>, <argument pos:start="245:35" pos:end="245:50"><expr pos:start="245:35" pos:end="245:50"><name pos:start="245:35" pos:end="245:50">sel_vector_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="247:9" pos:end="249:52">else<block type="pseudo" pos:start="249:13" pos:end="249:52"><block_content pos:start="249:13" pos:end="249:52">

            <expr_stmt pos:start="249:13" pos:end="249:52"><expr pos:start="249:13" pos:end="249:51"><call pos:start="249:13" pos:end="249:51"><name pos:start="249:13" pos:end="249:30">gen_vector_table16</name><argument_list pos:start="249:31" pos:end="249:51">(<argument pos:start="249:32" pos:end="249:32"><expr pos:start="249:32" pos:end="249:32"><name pos:start="249:32" pos:end="249:32">s</name></expr></argument>, <argument pos:start="249:35" pos:end="249:50"><expr pos:start="249:35" pos:end="249:50"><name pos:start="249:35" pos:end="249:50">sel_vector_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="255:5" pos:end="255:54">/* set up pointers to the other key data chunks */</comment>

    <expr_stmt pos:start="257:5" pos:end="257:52"><expr pos:start="257:5" pos:end="257:51"><name pos:start="257:5" pos:end="257:21"><name pos:start="257:5" pos:end="257:5">s</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:21">mb_change_bits</name></name> <operator pos:start="257:23" pos:end="257:23">=</operator> <name pos:start="257:25" pos:end="257:30"><name pos:start="257:25" pos:end="257:25">s</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:30">buf</name></name> <operator pos:start="257:32" pos:end="257:32">+</operator> <name pos:start="257:34" pos:end="257:51"><name pos:start="257:34" pos:end="257:39">header</name><operator pos:start="257:40" pos:end="257:40">.</operator><name pos:start="257:41" pos:end="257:51">header_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="259:5" pos:end="273:5"><if pos:start="259:5" pos:end="265:5">if <condition pos:start="259:8" pos:end="259:33">(<expr pos:start="259:9" pos:end="259:32"><name pos:start="259:9" pos:end="259:16"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:16">flags</name></name> <operator pos:start="259:18" pos:end="259:18">&amp;</operator> <name pos:start="259:20" pos:end="259:32">FLAG_KEYFRAME</name></expr>)</condition> <block pos:start="259:35" pos:end="265:5">{<block_content pos:start="263:9" pos:end="263:44">

        <comment type="block" pos:start="261:9" pos:end="261:71">/* no change bits specified for a keyframe; only index bytes */</comment>

        <expr_stmt pos:start="263:9" pos:end="263:44"><expr pos:start="263:9" pos:end="263:43"><name pos:start="263:9" pos:end="263:23"><name pos:start="263:9" pos:end="263:9">s</name><operator pos:start="263:10" pos:end="263:11">-&gt;</operator><name pos:start="263:12" pos:end="263:23">index_stream</name></name> <operator pos:start="263:25" pos:end="263:25">=</operator> <name pos:start="263:27" pos:end="263:43"><name pos:start="263:27" pos:end="263:27">s</name><operator pos:start="263:28" pos:end="263:29">-&gt;</operator><name pos:start="263:30" pos:end="263:43">mb_change_bits</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="265:7" pos:end="273:5">else <block pos:start="265:12" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:67">

        <comment type="block" pos:start="267:9" pos:end="267:42">/* one change bit per 4x4 block */</comment>

        <expr_stmt pos:start="269:9" pos:end="271:67"><expr pos:start="269:9" pos:end="271:66"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:9">s</name><operator pos:start="269:10" pos:end="269:11">-&gt;</operator><name pos:start="269:12" pos:end="269:23">index_stream</name></name> <operator pos:start="269:25" pos:end="269:25">=</operator> <name pos:start="269:27" pos:end="269:43"><name pos:start="269:27" pos:end="269:27">s</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:43">mb_change_bits</name></name> <operator pos:start="269:45" pos:end="269:45">+</operator>

            <operator pos:start="271:13" pos:end="271:13">(</operator><name pos:start="271:14" pos:end="271:39"><name pos:start="271:14" pos:end="271:14">s</name><operator pos:start="271:15" pos:end="271:16">-&gt;</operator><name pos:start="271:17" pos:end="271:39">mb_change_bits_row_size</name></name> <operator pos:start="271:41" pos:end="271:41">*</operator> <operator pos:start="271:43" pos:end="271:43">(</operator><name pos:start="271:44" pos:end="271:59"><name pos:start="271:44" pos:end="271:44">s</name><operator pos:start="271:45" pos:end="271:46">-&gt;</operator><name pos:start="271:47" pos:end="271:51">avctx</name><operator pos:start="271:52" pos:end="271:53">-&gt;</operator><name pos:start="271:54" pos:end="271:59">height</name></name> <operator pos:start="271:61" pos:end="271:62">&gt;&gt;</operator> <literal type="number" pos:start="271:64" pos:end="271:64">2</literal><operator pos:start="271:65" pos:end="271:65">)</operator><operator pos:start="271:66" pos:end="271:66">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:64"><expr pos:start="275:5" pos:end="275:63"><name pos:start="275:5" pos:end="275:24"><name pos:start="275:5" pos:end="275:5">s</name><operator pos:start="275:6" pos:end="275:7">-&gt;</operator><name pos:start="275:8" pos:end="275:24">index_stream_size</name></name> <operator pos:start="275:26" pos:end="275:26">=</operator> <name pos:start="275:28" pos:end="275:34"><name pos:start="275:28" pos:end="275:28">s</name><operator pos:start="275:29" pos:end="275:30">-&gt;</operator><name pos:start="275:31" pos:end="275:34">size</name></name> <operator pos:start="275:36" pos:end="275:36">-</operator> <operator pos:start="275:38" pos:end="275:38">(</operator><name pos:start="275:39" pos:end="275:53"><name pos:start="275:39" pos:end="275:39">s</name><operator pos:start="275:40" pos:end="275:41">-&gt;</operator><name pos:start="275:42" pos:end="275:53">index_stream</name></name> <operator pos:start="275:55" pos:end="275:55">-</operator> <name pos:start="275:57" pos:end="275:62"><name pos:start="275:57" pos:end="275:57">s</name><operator pos:start="275:58" pos:end="275:59">-&gt;</operator><name pos:start="275:60" pos:end="275:62">buf</name></name><operator pos:start="275:63" pos:end="275:63">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="279:5" pos:end="279:39"><expr pos:start="279:5" pos:end="279:38"><name pos:start="279:5" pos:end="279:20"><name pos:start="279:5" pos:end="279:5">s</name><operator pos:start="279:6" pos:end="279:7">-&gt;</operator><name pos:start="279:8" pos:end="279:20">last_deltaset</name></name> <operator pos:start="279:22" pos:end="279:22">=</operator> <name pos:start="279:24" pos:end="279:38"><name pos:start="279:24" pos:end="279:29">header</name><operator pos:start="279:30" pos:end="279:30">.</operator><name pos:start="279:31" pos:end="279:38">deltaset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:39"><expr pos:start="281:5" pos:end="281:38"><name pos:start="281:5" pos:end="281:20"><name pos:start="281:5" pos:end="281:5">s</name><operator pos:start="281:6" pos:end="281:7">-&gt;</operator><name pos:start="281:8" pos:end="281:20">last_vectable</name></name> <operator pos:start="281:22" pos:end="281:22">=</operator> <name pos:start="281:24" pos:end="281:38"><name pos:start="281:24" pos:end="281:29">header</name><operator pos:start="281:30" pos:end="281:30">.</operator><name pos:start="281:31" pos:end="281:38">vectable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:40"><expr pos:start="283:5" pos:end="283:39"><name pos:start="283:5" pos:end="283:18"><name pos:start="283:5" pos:end="283:5">s</name><operator pos:start="283:6" pos:end="283:7">-&gt;</operator><name pos:start="283:8" pos:end="283:18">compression</name></name> <operator pos:start="283:20" pos:end="283:20">=</operator> <name pos:start="283:22" pos:end="283:39"><name pos:start="283:22" pos:end="283:27">header</name><operator pos:start="283:28" pos:end="283:28">.</operator><name pos:start="283:29" pos:end="283:39">compression</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:71"><expr pos:start="285:5" pos:end="285:70"><name pos:start="285:5" pos:end="285:18"><name pos:start="285:5" pos:end="285:5">s</name><operator pos:start="285:6" pos:end="285:7">-&gt;</operator><name pos:start="285:8" pos:end="285:18">block_width</name></name> <operator pos:start="285:20" pos:end="285:20">=</operator> <name pos:start="285:22" pos:end="285:58"><name pos:start="285:22" pos:end="285:38">compression_types</name><index pos:start="285:39" pos:end="285:58">[<expr pos:start="285:40" pos:end="285:57"><name pos:start="285:40" pos:end="285:57"><name pos:start="285:40" pos:end="285:45">header</name><operator pos:start="285:46" pos:end="285:46">.</operator><name pos:start="285:47" pos:end="285:57">compression</name></name></expr>]</index></name><operator pos:start="285:59" pos:end="285:59">.</operator><name pos:start="285:60" pos:end="285:70">block_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:73"><expr pos:start="287:5" pos:end="287:72"><name pos:start="287:5" pos:end="287:19"><name pos:start="287:5" pos:end="287:5">s</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:19">block_height</name></name> <operator pos:start="287:21" pos:end="287:21">=</operator> <name pos:start="287:23" pos:end="287:59"><name pos:start="287:23" pos:end="287:39">compression_types</name><index pos:start="287:40" pos:end="287:59">[<expr pos:start="287:41" pos:end="287:58"><name pos:start="287:41" pos:end="287:58"><name pos:start="287:41" pos:end="287:46">header</name><operator pos:start="287:47" pos:end="287:47">.</operator><name pos:start="287:48" pos:end="287:58">compression</name></name></expr>]</index></name><operator pos:start="287:60" pos:end="287:60">.</operator><name pos:start="287:61" pos:end="287:72">block_height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="289:5" pos:end="289:69"><expr pos:start="289:5" pos:end="289:68"><name pos:start="289:5" pos:end="289:17"><name pos:start="289:5" pos:end="289:5">s</name><operator pos:start="289:6" pos:end="289:7">-&gt;</operator><name pos:start="289:8" pos:end="289:17">block_type</name></name> <operator pos:start="289:19" pos:end="289:19">=</operator> <name pos:start="289:21" pos:end="289:57"><name pos:start="289:21" pos:end="289:37">compression_types</name><index pos:start="289:38" pos:end="289:57">[<expr pos:start="289:39" pos:end="289:56"><name pos:start="289:39" pos:end="289:56"><name pos:start="289:39" pos:end="289:44">header</name><operator pos:start="289:45" pos:end="289:45">.</operator><name pos:start="289:46" pos:end="289:56">compression</name></name></expr>]</index></name><operator pos:start="289:58" pos:end="289:58">.</operator><name pos:start="289:59" pos:end="289:68">block_type</name></expr>;</expr_stmt>



    <if_stmt pos:start="293:5" pos:end="307:61"><if pos:start="293:5" pos:end="307:61">if <condition pos:start="293:8" pos:end="293:45">(<expr pos:start="293:9" pos:end="293:44"><name pos:start="293:9" pos:end="293:23"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:16">avctx</name><operator pos:start="293:17" pos:end="293:18">-&gt;</operator><name pos:start="293:19" pos:end="293:23">debug</name></name> <operator pos:start="293:25" pos:end="293:25">&amp;</operator> <name pos:start="293:27" pos:end="293:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="295:9" pos:end="307:61"><block_content pos:start="295:9" pos:end="307:61">

        <expr_stmt pos:start="295:9" pos:end="307:61"><expr pos:start="295:9" pos:end="307:60"><call pos:start="295:9" pos:end="307:60"><name pos:start="295:9" pos:end="295:14">av_log</name><argument_list pos:start="295:15" pos:end="307:60">(<argument pos:start="295:16" pos:end="295:23"><expr pos:start="295:16" pos:end="295:23"><name pos:start="295:16" pos:end="295:23"><name pos:start="295:16" pos:end="295:16">s</name><operator pos:start="295:17" pos:end="295:18">-&gt;</operator><name pos:start="295:19" pos:end="295:23">avctx</name></name></expr></argument>, <argument pos:start="295:26" pos:end="295:36"><expr pos:start="295:26" pos:end="295:36"><name pos:start="295:26" pos:end="295:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="295:39" pos:end="295:82"><expr pos:start="295:39" pos:end="295:82"><literal type="string" pos:start="295:39" pos:end="295:82">"tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\n"</literal></expr></argument>,

            <argument pos:start="297:13" pos:end="297:28"><expr pos:start="297:13" pos:end="297:28"><name pos:start="297:13" pos:end="297:28"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:28">last_deltaset</name></name></expr></argument>, <argument pos:start="297:31" pos:end="297:46"><expr pos:start="297:31" pos:end="297:46"><name pos:start="297:31" pos:end="297:46"><name pos:start="297:31" pos:end="297:31">s</name><operator pos:start="297:32" pos:end="297:33">-&gt;</operator><name pos:start="297:34" pos:end="297:46">last_vectable</name></name></expr></argument>, <argument pos:start="297:49" pos:end="297:62"><expr pos:start="297:49" pos:end="297:62"><name pos:start="297:49" pos:end="297:62"><name pos:start="297:49" pos:end="297:49">s</name><operator pos:start="297:50" pos:end="297:51">-&gt;</operator><name pos:start="297:52" pos:end="297:62">compression</name></name></expr></argument>, <argument pos:start="297:65" pos:end="297:78"><expr pos:start="297:65" pos:end="297:78"><name pos:start="297:65" pos:end="297:78"><name pos:start="297:65" pos:end="297:65">s</name><operator pos:start="297:66" pos:end="297:67">-&gt;</operator><name pos:start="297:68" pos:end="297:78">block_width</name></name></expr></argument>,

            <argument pos:start="299:13" pos:end="299:27"><expr pos:start="299:13" pos:end="299:27"><name pos:start="299:13" pos:end="299:27"><name pos:start="299:13" pos:end="299:13">s</name><operator pos:start="299:14" pos:end="299:15">-&gt;</operator><name pos:start="299:16" pos:end="299:27">block_height</name></name></expr></argument>, <argument pos:start="299:30" pos:end="299:42"><expr pos:start="299:30" pos:end="299:42"><name pos:start="299:30" pos:end="299:42"><name pos:start="299:30" pos:end="299:30">s</name><operator pos:start="299:31" pos:end="299:32">-&gt;</operator><name pos:start="299:33" pos:end="299:42">block_type</name></name></expr></argument>,

            <argument pos:start="301:13" pos:end="301:50"><expr pos:start="301:13" pos:end="301:50"><ternary pos:start="301:13" pos:end="301:50"><condition pos:start="301:13" pos:end="301:38"><expr pos:start="301:13" pos:end="301:36"><name pos:start="301:13" pos:end="301:20"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:20">flags</name></name> <operator pos:start="301:22" pos:end="301:22">&amp;</operator> <name pos:start="301:24" pos:end="301:36">FLAG_KEYFRAME</name></expr> ?</condition><then pos:start="301:40" pos:end="301:45"> <expr pos:start="301:40" pos:end="301:45"><literal type="string" pos:start="301:40" pos:end="301:45">" KEY"</literal></expr> </then><else pos:start="301:47" pos:end="301:50">: <expr pos:start="301:49" pos:end="301:50"><literal type="string" pos:start="301:49" pos:end="301:50">""</literal></expr></else></ternary></expr></argument>,

            <argument pos:start="303:13" pos:end="303:54"><expr pos:start="303:13" pos:end="303:54"><ternary pos:start="303:13" pos:end="303:54"><condition pos:start="303:13" pos:end="303:40"><expr pos:start="303:13" pos:end="303:38"><name pos:start="303:13" pos:end="303:20"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:20">flags</name></name> <operator pos:start="303:22" pos:end="303:22">&amp;</operator> <name pos:start="303:24" pos:end="303:38">FLAG_INTERFRAME</name></expr> ?</condition><then pos:start="303:42" pos:end="303:49"> <expr pos:start="303:42" pos:end="303:49"><literal type="string" pos:start="303:42" pos:end="303:49">" INTER"</literal></expr> </then><else pos:start="303:51" pos:end="303:54">: <expr pos:start="303:53" pos:end="303:54"><literal type="string" pos:start="303:53" pos:end="303:54">""</literal></expr></else></ternary></expr></argument>,

            <argument pos:start="305:13" pos:end="305:51"><expr pos:start="305:13" pos:end="305:51"><ternary pos:start="305:13" pos:end="305:51"><condition pos:start="305:13" pos:end="305:36"><expr pos:start="305:13" pos:end="305:34"><name pos:start="305:13" pos:end="305:20"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:20">flags</name></name> <operator pos:start="305:22" pos:end="305:22">&amp;</operator> <name pos:start="305:24" pos:end="305:34">FLAG_SPRITE</name></expr> ?</condition><then pos:start="305:38" pos:end="305:46"> <expr pos:start="305:38" pos:end="305:46"><literal type="string" pos:start="305:38" pos:end="305:46">" SPRITE"</literal></expr> </then><else pos:start="305:48" pos:end="305:51">: <expr pos:start="305:50" pos:end="305:51"><literal type="string" pos:start="305:50" pos:end="305:51">""</literal></expr></else></ternary></expr></argument>,

            <argument pos:start="307:13" pos:end="307:59"><expr pos:start="307:13" pos:end="307:59"><ternary pos:start="307:13" pos:end="307:59"><condition pos:start="307:13" pos:end="307:42"><expr pos:start="307:13" pos:end="307:40"><name pos:start="307:13" pos:end="307:20"><name pos:start="307:13" pos:end="307:13">s</name><operator pos:start="307:14" pos:end="307:15">-&gt;</operator><name pos:start="307:16" pos:end="307:20">flags</name></name> <operator pos:start="307:22" pos:end="307:22">&amp;</operator> <name pos:start="307:24" pos:end="307:40">FLAG_INTERPOLATED</name></expr> ?</condition><then pos:start="307:44" pos:end="307:54"> <expr pos:start="307:44" pos:end="307:54"><literal type="string" pos:start="307:44" pos:end="307:54">" INTERPOL"</literal></expr> </then><else pos:start="307:56" pos:end="307:59">: <expr pos:start="307:58" pos:end="307:59"><literal type="string" pos:start="307:58" pos:end="307:59">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="311:5" pos:end="311:30">return <expr pos:start="311:12" pos:end="311:29"><name pos:start="311:12" pos:end="311:29"><name pos:start="311:12" pos:end="311:17">header</name><operator pos:start="311:18" pos:end="311:18">.</operator><name pos:start="311:19" pos:end="311:29">header_size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
