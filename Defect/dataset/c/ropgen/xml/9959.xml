<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9959.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">do_eject</name><parameter_list pos:start="1:21" pos:end="1:49">(<parameter pos:start="1:22" pos:end="1:29"><decl pos:start="1:22" pos:end="1:29"><type pos:start="1:22" pos:end="1:29"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:29">argc</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier><modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:48">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:28">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">BlockDriverState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">parg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">force</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:8">parg</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <name pos:start="13:12" pos:end="13:15">argv</name> <operator pos:start="13:17" pos:end="13:17">+</operator> <literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">*</operator><name pos:start="15:11" pos:end="15:14">parg</name></expr>)</condition> <block pos:start="15:17" pos:end="23:5">{<block_content pos:start="17:5" pos:end="21:15">

    <label pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:8">fail</name>:</label>

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><call pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:16">help_cmd</name><argument_list pos:start="19:17" pos:end="19:25">(<argument pos:start="19:18" pos:end="19:24"><expr pos:start="19:18" pos:end="19:24"><name pos:start="19:18" pos:end="19:24"><name pos:start="19:18" pos:end="19:21">argv</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:9">force</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:28"><name pos:start="27:10" pos:end="27:15">strcmp</name><argument_list pos:start="27:16" pos:end="27:28">(<argument pos:start="27:17" pos:end="27:21"><expr pos:start="27:17" pos:end="27:21"><operator pos:start="27:17" pos:end="27:17">*</operator><name pos:start="27:18" pos:end="27:21">parg</name></expr></argument>, <argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><literal type="string" pos:start="27:24" pos:end="27:27">"-f"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:31" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:15">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13">force</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:15"><expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:12">parg</name><operator pos:start="31:13" pos:end="31:14">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">*</operator><name pos:start="35:11" pos:end="35:14">parg</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:26"><expr pos:start="39:5" pos:end="39:25"><name pos:start="39:5" pos:end="39:6">bs</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:25"><name pos:start="39:10" pos:end="39:18">bdrv_find</name><argument_list pos:start="39:19" pos:end="39:25">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><operator pos:start="39:20" pos:end="39:20">*</operator><name pos:start="39:21" pos:end="39:24">parg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:11">bs</name></expr>)</condition> <block pos:start="41:14" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:19">term_printf</name><argument_list pos:start="43:20" pos:end="43:41">(<argument pos:start="43:21" pos:end="43:40"><expr pos:start="43:21" pos:end="43:40"><literal type="string" pos:start="43:21" pos:end="43:40">"device not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:28"><expr pos:start="49:5" pos:end="49:27"><call pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:16">eject_device</name><argument_list pos:start="49:17" pos:end="49:27">(<argument pos:start="49:18" pos:end="49:19"><expr pos:start="49:18" pos:end="49:19"><name pos:start="49:18" pos:end="49:19">bs</name></expr></argument>, <argument pos:start="49:22" pos:end="49:26"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:26">force</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
