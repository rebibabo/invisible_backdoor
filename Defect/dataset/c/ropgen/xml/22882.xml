<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22882.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">jpeg2000_decode_packet</name><parameter_list pos:start="1:34" pos:end="7:73">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:56">Jpeg2000DecoderContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:79"><decl pos:start="1:62" pos:end="1:79"><type pos:start="1:62" pos:end="1:79"><name pos:start="1:62" pos:end="1:73">Jpeg2000Tile</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">tile</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:94"><decl pos:start="1:82" pos:end="1:94"><type pos:start="1:82" pos:end="1:94"><name pos:start="1:82" pos:end="1:84">int</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:94">tp_index</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:61"><decl pos:start="3:35" pos:end="3:61"><type pos:start="3:35" pos:end="3:61"><name pos:start="3:35" pos:end="3:53">Jpeg2000CodingStyle</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:61">codsty</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:58"><decl pos:start="5:35" pos:end="5:58"><type pos:start="5:35" pos:end="5:58"><name pos:start="5:35" pos:end="5:50">Jpeg2000ResLevel</name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:58">rlevel</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:70"><decl pos:start="5:61" pos:end="5:70"><type pos:start="5:61" pos:end="5:70"><name pos:start="5:61" pos:end="5:63">int</name></type> <name pos:start="5:65" pos:end="5:70">precno</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:43"><decl pos:start="7:35" pos:end="7:43"><type pos:start="7:35" pos:end="7:43"><name pos:start="7:35" pos:end="7:37">int</name></type> <name pos:start="7:39" pos:end="7:43">layno</name></decl></parameter>, <parameter pos:start="7:46" pos:end="7:58"><decl pos:start="7:46" pos:end="7:58"><type pos:start="7:46" pos:end="7:58"><name pos:start="7:46" pos:end="7:52">uint8_t</name> <modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:58">expn</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:72"><decl pos:start="7:61" pos:end="7:72"><type pos:start="7:61" pos:end="7:72"><name pos:start="7:61" pos:end="7:63">int</name></type> <name pos:start="7:65" pos:end="7:72">numgbits</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="279:1">{<block_content pos:start="11:5" pos:end="277:13">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">bandno</name></decl>, <decl pos:start="11:17" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:22">cblkno</name></decl>, <decl pos:start="11:25" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:27">ret</name></decl>, <decl pos:start="11:30" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:43">nb_code_blocks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">cwsno</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:68">(<expr pos:start="17:9" pos:end="17:67"><call pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:34">bytestream2_get_bytes_left</name><argument_list pos:start="17:35" pos:end="17:41">(<argument pos:start="17:36" pos:end="17:40"><expr pos:start="17:36" pos:end="17:40"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:37">s</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:40">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:43" pos:end="17:44">==</operator> <literal type="number" pos:start="17:46" pos:end="17:46">0</literal> <operator pos:start="17:48" pos:end="17:49">&amp;&amp;</operator> <name pos:start="17:51" pos:end="17:62"><name pos:start="17:51" pos:end="17:51">s</name><operator pos:start="17:52" pos:end="17:53">-&gt;</operator><name pos:start="17:54" pos:end="17:62">bit_index</name></name> <operator pos:start="17:64" pos:end="17:65">==</operator> <literal type="number" pos:start="17:67" pos:end="17:67">8</literal></expr>)</condition> <block pos:start="17:70" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:9">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:60">(<expr pos:start="19:13" pos:end="19:59"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:21">tp_index</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <call pos:start="19:25" pos:end="19:55"><name pos:start="19:25" pos:end="19:38">FF_ARRAY_ELEMS</name><argument_list pos:start="19:39" pos:end="19:55">(<argument pos:start="19:40" pos:end="19:54"><expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:43">tile</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:54">tile_part</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:57" pos:end="19:57">-</operator> <literal type="number" pos:start="19:59" pos:end="19:59">1</literal></expr>)</condition> <block pos:start="19:62" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:54">

            <expr_stmt pos:start="21:13" pos:end="21:54"><expr pos:start="21:13" pos:end="21:53"><name pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:16">g</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:49"><name pos:start="21:20" pos:end="21:23">tile</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:34">tile_part</name><index pos:start="21:35" pos:end="21:49">[<expr pos:start="21:36" pos:end="21:48"><operator pos:start="21:36" pos:end="21:37">++</operator><operator pos:start="21:38" pos:end="21:38">(</operator><operator pos:start="21:39" pos:end="21:39">*</operator><name pos:start="21:40" pos:end="21:47">tp_index</name><operator pos:start="21:48" pos:end="21:48">)</operator></expr>]</index></name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:53">tpg</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:35"><if pos:start="29:5" pos:end="31:35">if <condition pos:start="29:8" pos:end="29:51">(<expr pos:start="29:9" pos:end="29:50"><call pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:29">bytestream2_peek_be32</name><argument_list pos:start="29:30" pos:end="29:36">(<argument pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:35">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:38" pos:end="29:39">==</operator> <literal type="number" pos:start="29:41" pos:end="29:50">0xFF910004</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:35"><block_content pos:start="31:9" pos:end="31:35">

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:24">bytestream2_skip</name><argument_list pos:start="31:25" pos:end="31:34">(<argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:27">s</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:30">g</name></name></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="43:19"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:32">(<expr pos:start="35:9" pos:end="35:31"><operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:13">ret</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:24">get_bits</name><argument_list pos:start="35:25" pos:end="35:30">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><name pos:start="35:26" pos:end="35:26">s</name></expr></argument>, <argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">1</literal></expr></argument>)</argument_list></call><operator pos:start="35:31" pos:end="35:31">)</operator></expr>)</condition> <block pos:start="35:34" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><call pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:22">jpeg2000_flush</name><argument_list pos:start="37:23" pos:end="37:25">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="43:19">else if <condition pos:start="41:15" pos:end="41:23">(<expr pos:start="41:16" pos:end="41:22"><name pos:start="41:16" pos:end="41:18">ret</name> <operator pos:start="41:20" pos:end="41:20">&lt;</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="47:5" pos:end="197:5">for <control pos:start="47:9" pos:end="47:55">(<init pos:start="47:10" pos:end="47:20"><expr pos:start="47:10" pos:end="47:19"><name pos:start="47:10" pos:end="47:15">bandno</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>;</init> <condition pos:start="47:22" pos:end="47:45"><expr pos:start="47:22" pos:end="47:44"><name pos:start="47:22" pos:end="47:27">bandno</name> <operator pos:start="47:29" pos:end="47:29">&lt;</operator> <name pos:start="47:31" pos:end="47:44"><name pos:start="47:31" pos:end="47:36">rlevel</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:44">nbands</name></name></expr>;</condition> <incr pos:start="47:47" pos:end="47:54"><expr pos:start="47:47" pos:end="47:54"><name pos:start="47:47" pos:end="47:52">bandno</name><operator pos:start="47:53" pos:end="47:54">++</operator></expr></incr>)</control> <block pos:start="47:57" pos:end="197:5">{<block_content pos:start="49:9" pos:end="195:9">

        <decl_stmt pos:start="49:9" pos:end="49:51"><decl pos:start="49:9" pos:end="49:50"><type pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:20">Jpeg2000Band</name> <modifier pos:start="49:22" pos:end="49:22">*</modifier></type><name pos:start="49:23" pos:end="49:26">band</name> <init pos:start="49:28" pos:end="49:50">= <expr pos:start="49:30" pos:end="49:50"><name pos:start="49:30" pos:end="49:41"><name pos:start="49:30" pos:end="49:35">rlevel</name><operator pos:start="49:36" pos:end="49:37">-&gt;</operator><name pos:start="49:38" pos:end="49:41">band</name></name> <operator pos:start="49:43" pos:end="49:43">+</operator> <name pos:start="49:45" pos:end="49:50">bandno</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:49"><decl pos:start="51:9" pos:end="51:48"><type pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:20">Jpeg2000Prec</name> <modifier pos:start="51:22" pos:end="51:22">*</modifier></type><name pos:start="51:23" pos:end="51:26">prec</name> <init pos:start="51:28" pos:end="51:48">= <expr pos:start="51:30" pos:end="51:48"><name pos:start="51:30" pos:end="51:39"><name pos:start="51:30" pos:end="51:33">band</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:39">prec</name></name> <operator pos:start="51:41" pos:end="51:41">+</operator> <name pos:start="51:43" pos:end="51:48">precno</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="59:21"><if pos:start="55:9" pos:end="59:21">if <condition pos:start="55:12" pos:end="57:51">(<expr pos:start="55:13" pos:end="57:50"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:16">band</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">coord</name><index pos:start="55:24" pos:end="55:26">[<expr pos:start="55:25" pos:end="55:25"><literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>]</index><index pos:start="55:27" pos:end="55:29">[<expr pos:start="55:28" pos:end="55:28"><literal type="number" pos:start="55:28" pos:end="55:28">0</literal></expr>]</index></name> <operator pos:start="55:31" pos:end="55:32">==</operator> <name pos:start="55:34" pos:end="55:50"><name pos:start="55:34" pos:end="55:37">band</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:44">coord</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr>]</index><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">1</literal></expr>]</index></name> <operator pos:start="55:52" pos:end="55:53">||</operator>

            <name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:16">band</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">coord</name><index pos:start="57:24" pos:end="57:26">[<expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>]</index><index pos:start="57:27" pos:end="57:29">[<expr pos:start="57:28" pos:end="57:28"><literal type="number" pos:start="57:28" pos:end="57:28">0</literal></expr>]</index></name> <operator pos:start="57:31" pos:end="57:32">==</operator> <name pos:start="57:34" pos:end="57:50"><name pos:start="57:34" pos:end="57:37">band</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:44">coord</name><index pos:start="57:45" pos:end="57:47">[<expr pos:start="57:46" pos:end="57:46"><literal type="number" pos:start="57:46" pos:end="57:46">1</literal></expr>]</index><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><literal type="number" pos:start="57:49" pos:end="57:49">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:21"><block_content pos:start="59:13" pos:end="59:21">

            <continue pos:start="59:13" pos:end="59:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="63:52"><expr pos:start="61:9" pos:end="63:51"><name pos:start="61:9" pos:end="61:22">nb_code_blocks</name> <operator pos:start="61:24" pos:end="61:24">=</operator>  <name pos:start="61:27" pos:end="61:52"><name pos:start="61:27" pos:end="61:30">prec</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:52">nb_codeblocks_height</name></name> <operator pos:start="61:54" pos:end="61:54">*</operator>

                          <name pos:start="63:27" pos:end="63:51"><name pos:start="63:27" pos:end="63:30">prec</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:51">nb_codeblocks_width</name></name></expr>;</expr_stmt>

        <for pos:start="65:9" pos:end="195:9">for <control pos:start="65:13" pos:end="65:59">(<init pos:start="65:14" pos:end="65:24"><expr pos:start="65:14" pos:end="65:23"><name pos:start="65:14" pos:end="65:19">cblkno</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>;</init> <condition pos:start="65:26" pos:end="65:49"><expr pos:start="65:26" pos:end="65:48"><name pos:start="65:26" pos:end="65:31">cblkno</name> <operator pos:start="65:33" pos:end="65:33">&lt;</operator> <name pos:start="65:35" pos:end="65:48">nb_code_blocks</name></expr>;</condition> <incr pos:start="65:51" pos:end="65:58"><expr pos:start="65:51" pos:end="65:58"><name pos:start="65:51" pos:end="65:56">cblkno</name><operator pos:start="65:57" pos:end="65:58">++</operator></expr></incr>)</control> <block pos:start="65:61" pos:end="195:9">{<block_content pos:start="67:13" pos:end="193:31">

            <decl_stmt pos:start="67:13" pos:end="67:53"><decl pos:start="67:13" pos:end="67:52"><type pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:24">Jpeg2000Cblk</name> <modifier pos:start="67:26" pos:end="67:26">*</modifier></type><name pos:start="67:27" pos:end="67:30">cblk</name> <init pos:start="67:32" pos:end="67:52">= <expr pos:start="67:34" pos:end="67:52"><name pos:start="67:34" pos:end="67:43"><name pos:start="67:34" pos:end="67:37">prec</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:43">cblk</name></name> <operator pos:start="67:45" pos:end="67:45">+</operator> <name pos:start="67:47" pos:end="67:52">cblkno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:38"><decl pos:start="69:13" pos:end="69:20"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:20">incl</name></decl>, <decl pos:start="69:23" pos:end="69:31"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:23" pos:end="69:31">newpasses</name></decl>, <decl pos:start="69:34" pos:end="69:37"><type ref="prev" pos:start="69:13" pos:end="69:15"/><name pos:start="69:34" pos:end="69:37">llen</name></decl>;</decl_stmt>



            <if_stmt pos:start="73:13" pos:end="79:87"><if pos:start="73:13" pos:end="75:38">if <condition pos:start="73:16" pos:end="73:30">(<expr pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:20">cblk</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:29">npasses</name></name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:38"><block_content pos:start="75:17" pos:end="75:38">

                <expr_stmt pos:start="75:17" pos:end="75:38"><expr pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:20">incl</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:37"><name pos:start="75:24" pos:end="75:31">get_bits</name><argument_list pos:start="75:32" pos:end="75:37">(<argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">s</name></expr></argument>, <argument pos:start="75:36" pos:end="75:36"><expr pos:start="75:36" pos:end="75:36"><literal type="number" pos:start="75:36" pos:end="75:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="77:13" pos:end="79:87">else<block type="pseudo" pos:start="79:17" pos:end="79:87"><block_content pos:start="79:17" pos:end="79:87">

                <expr_stmt pos:start="79:17" pos:end="79:87"><expr pos:start="79:17" pos:end="79:86"><name pos:start="79:17" pos:end="79:20">incl</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:77"><name pos:start="79:24" pos:end="79:38">tag_tree_decode</name><argument_list pos:start="79:39" pos:end="79:77">(<argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><name pos:start="79:40" pos:end="79:40">s</name></expr></argument>, <argument pos:start="79:43" pos:end="79:65"><expr pos:start="79:43" pos:end="79:65"><name pos:start="79:43" pos:end="79:56"><name pos:start="79:43" pos:end="79:46">prec</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:56">cblkincl</name></name> <operator pos:start="79:58" pos:end="79:58">+</operator> <name pos:start="79:60" pos:end="79:65">cblkno</name></expr></argument>, <argument pos:start="79:68" pos:end="79:76"><expr pos:start="79:68" pos:end="79:76"><name pos:start="79:68" pos:end="79:72">layno</name> <operator pos:start="79:74" pos:end="79:74">+</operator> <literal type="number" pos:start="79:76" pos:end="79:76">1</literal></expr></argument>)</argument_list></call> <operator pos:start="79:79" pos:end="79:80">==</operator> <name pos:start="79:82" pos:end="79:86">layno</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="81:13" pos:end="87:28"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:22">(<expr pos:start="81:17" pos:end="81:21"><operator pos:start="81:17" pos:end="81:17">!</operator><name pos:start="81:18" pos:end="81:21">incl</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <continue pos:start="83:17" pos:end="83:25">continue;</continue></block_content></block></if>

            <if type="elseif" pos:start="85:13" pos:end="87:28">else if <condition pos:start="85:21" pos:end="85:30">(<expr pos:start="85:22" pos:end="85:29"><name pos:start="85:22" pos:end="85:25">incl</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <literal type="number" pos:start="85:29" pos:end="85:29">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:28"><block_content pos:start="87:17" pos:end="87:28">

                <return pos:start="87:17" pos:end="87:28">return <expr pos:start="87:24" pos:end="87:27"><name pos:start="87:24" pos:end="87:27">incl</name></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="91:13" pos:end="109:13"><if pos:start="91:13" pos:end="109:13">if <condition pos:start="91:16" pos:end="91:31">(<expr pos:start="91:17" pos:end="91:30"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:30"><name pos:start="91:18" pos:end="91:21">cblk</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:30">npasses</name></name></expr>)</condition> <block pos:start="91:33" pos:end="109:13">{<block_content pos:start="93:17" pos:end="107:38">

                <decl_stmt pos:start="93:17" pos:end="95:73"><decl pos:start="93:17" pos:end="95:72"><type pos:start="93:17" pos:end="93:19"><name pos:start="93:17" pos:end="93:19">int</name></type> <name pos:start="93:21" pos:end="93:21">v</name> <init pos:start="93:23" pos:end="95:72">= <expr pos:start="93:25" pos:end="95:72"><name pos:start="93:25" pos:end="93:36"><name pos:start="93:25" pos:end="93:28">expn</name><index pos:start="93:29" pos:end="93:36">[<expr pos:start="93:30" pos:end="93:35"><name pos:start="93:30" pos:end="93:35">bandno</name></expr>]</index></name> <operator pos:start="93:38" pos:end="93:38">+</operator> <name pos:start="93:40" pos:end="93:47">numgbits</name> <operator pos:start="93:49" pos:end="93:49">-</operator> <literal type="number" pos:start="93:51" pos:end="93:53">1</literal> <operator pos:start="93:53" pos:end="93:53">-</operator>

                        <call pos:start="95:25" pos:end="95:72"><name pos:start="95:25" pos:end="95:39">tag_tree_decode</name><argument_list pos:start="95:40" pos:end="95:72">(<argument pos:start="95:41" pos:end="95:41"><expr pos:start="95:41" pos:end="95:41"><name pos:start="95:41" pos:end="95:41">s</name></expr></argument>, <argument pos:start="95:44" pos:end="95:66"><expr pos:start="95:44" pos:end="95:66"><name pos:start="95:44" pos:end="95:57"><name pos:start="95:44" pos:end="95:47">prec</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:57">zerobits</name></name> <operator pos:start="95:59" pos:end="95:59">+</operator> <name pos:start="95:61" pos:end="95:66">cblkno</name></expr></argument>, <argument pos:start="95:69" pos:end="95:71"><expr pos:start="95:69" pos:end="95:71"><literal type="number" pos:start="95:69" pos:end="95:71">100</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="97:17" pos:end="105:17"><if pos:start="97:17" pos:end="105:17">if <condition pos:start="97:20" pos:end="97:26">(<expr pos:start="97:21" pos:end="97:25"><name pos:start="97:21" pos:end="97:21">v</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <literal type="number" pos:start="97:25" pos:end="97:25">0</literal></expr>)</condition> <block pos:start="97:28" pos:end="105:17">{<block_content pos:start="99:21" pos:end="103:47">

                    <expr_stmt pos:start="99:21" pos:end="101:58"><expr pos:start="99:21" pos:end="101:57"><call pos:start="99:21" pos:end="101:57"><name pos:start="99:21" pos:end="99:26">av_log</name><argument_list pos:start="99:27" pos:end="101:57">(<argument pos:start="99:28" pos:end="99:35"><expr pos:start="99:28" pos:end="99:35"><name pos:start="99:28" pos:end="99:35"><name pos:start="99:28" pos:end="99:28">s</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:35">avctx</name></name></expr></argument>, <argument pos:start="99:38" pos:end="99:49"><expr pos:start="99:38" pos:end="99:49"><name pos:start="99:38" pos:end="99:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="101:28" pos:end="101:53"><expr pos:start="101:28" pos:end="101:53"><literal type="string" pos:start="101:28" pos:end="101:53">"nonzerobits %d invalid\n"</literal></expr></argument>, <argument pos:start="101:56" pos:end="101:56"><expr pos:start="101:56" pos:end="101:56"><name pos:start="101:56" pos:end="101:56">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="103:21" pos:end="103:47">return <expr pos:start="103:28" pos:end="103:46"><name pos:start="103:28" pos:end="103:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:38"><expr pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:33"><name pos:start="107:17" pos:end="107:20">cblk</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:33">nonzerobits</name></name> <operator pos:start="107:35" pos:end="107:35">=</operator> <name pos:start="107:37" pos:end="107:37">v</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="111:13" pos:end="113:33"><if pos:start="111:13" pos:end="113:33">if <condition pos:start="111:16" pos:end="111:48">(<expr pos:start="111:17" pos:end="111:47"><operator pos:start="111:17" pos:end="111:17">(</operator><name pos:start="111:18" pos:end="111:26">newpasses</name> <operator pos:start="111:28" pos:end="111:28">=</operator> <call pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:39">getnpasses</name><argument_list pos:start="111:40" pos:end="111:42">(<argument pos:start="111:41" pos:end="111:41"><expr pos:start="111:41" pos:end="111:41"><name pos:start="111:41" pos:end="111:41">s</name></expr></argument>)</argument_list></call><operator pos:start="111:43" pos:end="111:43">)</operator> <operator pos:start="111:45" pos:end="111:45">&lt;</operator> <literal type="number" pos:start="111:47" pos:end="111:47">0</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:33"><block_content pos:start="113:17" pos:end="113:33">

                <return pos:start="113:17" pos:end="113:33">return <expr pos:start="113:24" pos:end="113:32"><name pos:start="113:24" pos:end="113:32">newpasses</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:38"><expr pos:start="115:13" pos:end="115:37"><call pos:start="115:13" pos:end="115:37"><name pos:start="115:13" pos:end="115:22">av_assert2</name><argument_list pos:start="115:23" pos:end="115:37">(<argument pos:start="115:24" pos:end="115:36"><expr pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:32">newpasses</name> <operator pos:start="115:34" pos:end="115:34">&gt;</operator> <literal type="number" pos:start="115:36" pos:end="115:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="123:13"><if pos:start="117:13" pos:end="123:13">if <condition pos:start="117:16" pos:end="117:65">(<expr pos:start="117:17" pos:end="117:64"><name pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:20">cblk</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:29">npasses</name></name> <operator pos:start="117:31" pos:end="117:31">+</operator> <name pos:start="117:33" pos:end="117:41">newpasses</name> <operator pos:start="117:43" pos:end="117:44">&gt;=</operator> <name pos:start="117:46" pos:end="117:64">JPEG2000_MAX_PASSES</name></expr>)</condition> <block pos:start="117:67" pos:end="123:13">{<block_content pos:start="119:17" pos:end="121:44">

                <expr_stmt pos:start="119:17" pos:end="119:69"><expr pos:start="119:17" pos:end="119:68"><call pos:start="119:17" pos:end="119:68"><name pos:start="119:17" pos:end="119:37">avpriv_request_sample</name><argument_list pos:start="119:38" pos:end="119:68">(<argument pos:start="119:39" pos:end="119:46"><expr pos:start="119:39" pos:end="119:46"><name pos:start="119:39" pos:end="119:46"><name pos:start="119:39" pos:end="119:39">s</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:46">avctx</name></name></expr></argument>, <argument pos:start="119:49" pos:end="119:67"><expr pos:start="119:49" pos:end="119:67"><literal type="string" pos:start="119:49" pos:end="119:67">"Too many passes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="121:17" pos:end="121:44">return <expr pos:start="121:24" pos:end="121:43"><name pos:start="121:24" pos:end="121:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="125:13" pos:end="127:28"><if pos:start="125:13" pos:end="127:28">if <condition pos:start="125:16" pos:end="125:45">(<expr pos:start="125:17" pos:end="125:44"><operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:21">llen</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <call pos:start="125:25" pos:end="125:39"><name pos:start="125:25" pos:end="125:36">getlblockinc</name><argument_list pos:start="125:37" pos:end="125:39">(<argument pos:start="125:38" pos:end="125:38"><expr pos:start="125:38" pos:end="125:38"><name pos:start="125:38" pos:end="125:38">s</name></expr></argument>)</argument_list></call><operator pos:start="125:40" pos:end="125:40">)</operator> <operator pos:start="125:42" pos:end="125:42">&lt;</operator> <literal type="number" pos:start="125:44" pos:end="125:44">0</literal></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:28"><block_content pos:start="127:17" pos:end="127:28">

                <return pos:start="127:17" pos:end="127:28">return <expr pos:start="127:24" pos:end="127:27"><name pos:start="127:24" pos:end="127:27">llen</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="129:13" pos:end="137:13"><if pos:start="129:13" pos:end="137:13">if <condition pos:start="129:16" pos:end="129:62">(<expr pos:start="129:17" pos:end="129:61"><name pos:start="129:17" pos:end="129:28"><name pos:start="129:17" pos:end="129:20">cblk</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:28">lblock</name></name> <operator pos:start="129:30" pos:end="129:30">+</operator> <name pos:start="129:32" pos:end="129:35">llen</name> <operator pos:start="129:37" pos:end="129:37">+</operator> <call pos:start="129:39" pos:end="129:56"><name pos:start="129:39" pos:end="129:45">av_log2</name><argument_list pos:start="129:46" pos:end="129:56">(<argument pos:start="129:47" pos:end="129:55"><expr pos:start="129:47" pos:end="129:55"><name pos:start="129:47" pos:end="129:55">newpasses</name></expr></argument>)</argument_list></call> <operator pos:start="129:58" pos:end="129:58">&gt;</operator> <literal type="number" pos:start="129:60" pos:end="129:61">16</literal></expr>)</condition> <block pos:start="129:64" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:44">

                <expr_stmt pos:start="131:17" pos:end="133:76"><expr pos:start="131:17" pos:end="133:75"><call pos:start="131:17" pos:end="133:75"><name pos:start="131:17" pos:end="131:37">avpriv_request_sample</name><argument_list pos:start="131:38" pos:end="133:75">(<argument pos:start="131:39" pos:end="131:46"><expr pos:start="131:39" pos:end="131:46"><name pos:start="131:39" pos:end="131:46"><name pos:start="131:39" pos:end="131:39">s</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:46">avctx</name></name></expr></argument>,

                                      <argument pos:start="133:39" pos:end="133:74"><expr pos:start="133:39" pos:end="133:74"><literal type="string" pos:start="133:39" pos:end="133:74">"Block with length beyond 16 bits\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="135:17" pos:end="135:44">return <expr pos:start="135:24" pos:end="135:43"><name pos:start="135:24" pos:end="135:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="141:13" pos:end="141:33"><expr pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:16">cblk</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:24">lblock</name></name> <operator pos:start="141:26" pos:end="141:27">+=</operator> <name pos:start="141:29" pos:end="141:32">llen</name></expr>;</expr_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:35"><expr pos:start="145:13" pos:end="145:34"><name pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:16">cblk</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:30">nb_lengthinc</name></name> <operator pos:start="145:32" pos:end="145:32">=</operator> <literal type="number" pos:start="145:34" pos:end="145:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:41"><expr pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:36"><name pos:start="147:13" pos:end="147:16">cblk</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:36">nb_terminationsinc</name></name> <operator pos:start="147:38" pos:end="147:38">=</operator> <literal type="number" pos:start="147:40" pos:end="147:40">0</literal></expr>;</expr_stmt>

            <do pos:start="149:13" pos:end="193:31">do <block pos:start="149:16" pos:end="193:13">{<block_content pos:start="151:17" pos:end="191:40">

                <decl_stmt pos:start="151:17" pos:end="151:35"><decl pos:start="151:17" pos:end="151:34"><type pos:start="151:17" pos:end="151:19"><name pos:start="151:17" pos:end="151:19">int</name></type> <name pos:start="151:21" pos:end="151:30">newpasses1</name> <init pos:start="151:32" pos:end="151:34">= <expr pos:start="151:34" pos:end="151:34"><literal type="number" pos:start="151:34" pos:end="151:34">0</literal></expr></init></decl>;</decl_stmt>



                <while pos:start="155:17" pos:end="167:17">while <condition pos:start="155:23" pos:end="155:46">(<expr pos:start="155:24" pos:end="155:45"><name pos:start="155:24" pos:end="155:33">newpasses1</name> <operator pos:start="155:35" pos:end="155:35">&lt;</operator> <name pos:start="155:37" pos:end="155:45">newpasses</name></expr>)</condition> <block pos:start="155:48" pos:end="167:17">{<block_content pos:start="157:21" pos:end="165:21">

                    <expr_stmt pos:start="157:21" pos:end="157:34"><expr pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:30">newpasses1</name> <operator pos:start="157:32" pos:end="157:33">++</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="159:21" pos:end="165:21"><if pos:start="159:21" pos:end="165:21">if <condition pos:start="159:24" pos:end="159:94">(<expr pos:start="159:25" pos:end="159:93"><call pos:start="159:25" pos:end="159:93"><name pos:start="159:25" pos:end="159:41">needs_termination</name><argument_list pos:start="159:42" pos:end="159:93">(<argument pos:start="159:43" pos:end="159:60"><expr pos:start="159:43" pos:end="159:60"><name pos:start="159:43" pos:end="159:60"><name pos:start="159:43" pos:end="159:48">codsty</name><operator pos:start="159:49" pos:end="159:50">-&gt;</operator><name pos:start="159:51" pos:end="159:60">cblk_style</name></name></expr></argument>, <argument pos:start="159:63" pos:end="159:92"><expr pos:start="159:63" pos:end="159:92"><name pos:start="159:63" pos:end="159:75"><name pos:start="159:63" pos:end="159:66">cblk</name><operator pos:start="159:67" pos:end="159:68">-&gt;</operator><name pos:start="159:69" pos:end="159:75">npasses</name></name> <operator pos:start="159:77" pos:end="159:77">+</operator> <name pos:start="159:79" pos:end="159:88">newpasses1</name> <operator pos:start="159:90" pos:end="159:90">-</operator> <literal type="number" pos:start="159:92" pos:end="159:92">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:96" pos:end="165:21">{<block_content pos:start="161:25" pos:end="163:30">

                        <expr_stmt pos:start="161:25" pos:end="161:52"><expr pos:start="161:25" pos:end="161:51"><name pos:start="161:25" pos:end="161:48"><name pos:start="161:25" pos:end="161:28">cblk</name><operator pos:start="161:29" pos:end="161:30">-&gt;</operator><name pos:start="161:31" pos:end="161:48">nb_terminationsinc</name></name> <operator pos:start="161:50" pos:end="161:51">++</operator></expr>;</expr_stmt>

                        <break pos:start="163:25" pos:end="163:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></while>



                <if_stmt pos:start="171:17" pos:end="173:31"><if pos:start="171:17" pos:end="173:31">if <condition pos:start="171:20" pos:end="171:80">(<expr pos:start="171:21" pos:end="171:79"><operator pos:start="171:21" pos:end="171:21">(</operator><name pos:start="171:22" pos:end="171:24">ret</name> <operator pos:start="171:26" pos:end="171:26">=</operator> <call pos:start="171:28" pos:end="171:74"><name pos:start="171:28" pos:end="171:35">get_bits</name><argument_list pos:start="171:36" pos:end="171:74">(<argument pos:start="171:37" pos:end="171:37"><expr pos:start="171:37" pos:end="171:37"><name pos:start="171:37" pos:end="171:37">s</name></expr></argument>, <argument pos:start="171:40" pos:end="171:73"><expr pos:start="171:40" pos:end="171:73"><call pos:start="171:40" pos:end="171:58"><name pos:start="171:40" pos:end="171:46">av_log2</name><argument_list pos:start="171:47" pos:end="171:58">(<argument pos:start="171:48" pos:end="171:57"><expr pos:start="171:48" pos:end="171:57"><name pos:start="171:48" pos:end="171:57">newpasses1</name></expr></argument>)</argument_list></call> <operator pos:start="171:60" pos:end="171:60">+</operator> <name pos:start="171:62" pos:end="171:73"><name pos:start="171:62" pos:end="171:65">cblk</name><operator pos:start="171:66" pos:end="171:67">-&gt;</operator><name pos:start="171:68" pos:end="171:73">lblock</name></name></expr></argument>)</argument_list></call><operator pos:start="171:75" pos:end="171:75">)</operator> <operator pos:start="171:77" pos:end="171:77">&lt;</operator> <literal type="number" pos:start="171:79" pos:end="171:79">0</literal></expr>)</condition><block type="pseudo" pos:start="173:21" pos:end="173:31"><block_content pos:start="173:21" pos:end="173:31">

                    <return pos:start="173:21" pos:end="173:31">return <expr pos:start="173:28" pos:end="173:30"><name pos:start="173:28" pos:end="173:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="175:17" pos:end="185:17"><if pos:start="175:17" pos:end="185:17">if <condition pos:start="175:20" pos:end="175:45">(<expr pos:start="175:21" pos:end="175:44"><name pos:start="175:21" pos:end="175:23">ret</name> <operator pos:start="175:25" pos:end="175:25">&gt;</operator> <sizeof pos:start="175:27" pos:end="175:44">sizeof<argument_list pos:start="175:33" pos:end="175:44">(<argument pos:start="175:34" pos:end="175:43"><expr pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:37">cblk</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:43">data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="175:47" pos:end="185:17">{<block_content pos:start="177:21" pos:end="183:48">

                    <expr_stmt pos:start="177:21" pos:end="181:60"><expr pos:start="177:21" pos:end="181:59"><call pos:start="177:21" pos:end="181:59"><name pos:start="177:21" pos:end="177:41">avpriv_request_sample</name><argument_list pos:start="177:42" pos:end="181:59">(<argument pos:start="177:43" pos:end="177:50"><expr pos:start="177:43" pos:end="177:50"><name pos:start="177:43" pos:end="177:50"><name pos:start="177:43" pos:end="177:43">s</name><operator pos:start="177:44" pos:end="177:45">-&gt;</operator><name pos:start="177:46" pos:end="177:50">avctx</name></name></expr></argument>,

                                        <argument pos:start="179:41" pos:end="179:93"><expr pos:start="179:41" pos:end="179:93"><literal type="string" pos:start="179:41" pos:end="179:77">"Block with lengthinc greater than %"</literal><name pos:start="179:78" pos:end="179:91">SIZE_SPECIFIER</name><literal type="string" pos:start="179:92" pos:end="179:93">""</literal></expr></argument>,

                                        <argument pos:start="181:41" pos:end="181:58"><expr pos:start="181:41" pos:end="181:58"><sizeof pos:start="181:41" pos:end="181:58">sizeof<argument_list pos:start="181:47" pos:end="181:58">(<argument pos:start="181:48" pos:end="181:57"><expr pos:start="181:48" pos:end="181:57"><name pos:start="181:48" pos:end="181:57"><name pos:start="181:48" pos:end="181:51">cblk</name><operator pos:start="181:52" pos:end="181:53">-&gt;</operator><name pos:start="181:54" pos:end="181:57">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="183:21" pos:end="183:48">return <expr pos:start="183:28" pos:end="183:47"><name pos:start="183:28" pos:end="183:47">AVERROR_PATCHWELCOME</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:60"><expr pos:start="187:17" pos:end="187:59"><name pos:start="187:17" pos:end="187:53"><name pos:start="187:17" pos:end="187:20">cblk</name><operator pos:start="187:21" pos:end="187:22">-&gt;</operator><name pos:start="187:23" pos:end="187:31">lengthinc</name><index pos:start="187:32" pos:end="187:53">[<expr pos:start="187:33" pos:end="187:52"><name pos:start="187:33" pos:end="187:50"><name pos:start="187:33" pos:end="187:36">cblk</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:50">nb_lengthinc</name></name><operator pos:start="187:51" pos:end="187:52">++</operator></expr>]</index></name> <operator pos:start="187:55" pos:end="187:55">=</operator> <name pos:start="187:57" pos:end="187:59">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:45"><expr pos:start="189:17" pos:end="189:44"><name pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:20">cblk</name><operator pos:start="189:21" pos:end="189:22">-&gt;</operator><name pos:start="189:23" pos:end="189:29">npasses</name></name>  <operator pos:start="189:32" pos:end="189:33">+=</operator> <name pos:start="189:35" pos:end="189:44">newpasses1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:40"><expr pos:start="191:17" pos:end="191:39"><name pos:start="191:17" pos:end="191:25">newpasses</name> <operator pos:start="191:27" pos:end="191:28">-=</operator> <name pos:start="191:30" pos:end="191:39">newpasses1</name></expr>;</expr_stmt>

            </block_content>}</block> while<condition pos:start="193:20" pos:end="193:30">(<expr pos:start="193:21" pos:end="193:29"><name pos:start="193:21" pos:end="193:29">newpasses</name></expr>)</condition>;</do>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="199:5" pos:end="199:22"><expr pos:start="199:5" pos:end="199:21"><call pos:start="199:5" pos:end="199:21"><name pos:start="199:5" pos:end="199:18">jpeg2000_flush</name><argument_list pos:start="199:19" pos:end="199:21">(<argument pos:start="199:20" pos:end="199:20"><expr pos:start="199:20" pos:end="199:20"><name pos:start="199:20" pos:end="199:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="203:5" pos:end="213:5"><if pos:start="203:5" pos:end="213:5">if <condition pos:start="203:8" pos:end="203:41">(<expr pos:start="203:9" pos:end="203:40"><name pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:14">codsty</name><operator pos:start="203:15" pos:end="203:16">-&gt;</operator><name pos:start="203:17" pos:end="203:20">csty</name></name> <operator pos:start="203:22" pos:end="203:22">&amp;</operator> <name pos:start="203:24" pos:end="203:40">JPEG2000_CSTY_EPH</name></expr>)</condition> <block pos:start="203:43" pos:end="213:5">{<block_content pos:start="205:9" pos:end="211:70">

        <if_stmt pos:start="205:9" pos:end="211:70"><if pos:start="205:9" pos:end="207:39">if <condition pos:start="205:12" pos:end="205:57">(<expr pos:start="205:13" pos:end="205:56"><call pos:start="205:13" pos:end="205:40"><name pos:start="205:13" pos:end="205:33">bytestream2_peek_be16</name><argument_list pos:start="205:34" pos:end="205:40">(<argument pos:start="205:35" pos:end="205:39"><expr pos:start="205:35" pos:end="205:39"><operator pos:start="205:35" pos:end="205:35">&amp;</operator><name pos:start="205:36" pos:end="205:39"><name pos:start="205:36" pos:end="205:36">s</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:39">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="205:42" pos:end="205:43">==</operator> <name pos:start="205:45" pos:end="205:56">JPEG2000_EPH</name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:39"><block_content pos:start="207:13" pos:end="207:39">

            <expr_stmt pos:start="207:13" pos:end="207:39"><expr pos:start="207:13" pos:end="207:38"><call pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:28">bytestream2_skip</name><argument_list pos:start="207:29" pos:end="207:38">(<argument pos:start="207:30" pos:end="207:34"><expr pos:start="207:30" pos:end="207:34"><operator pos:start="207:30" pos:end="207:30">&amp;</operator><name pos:start="207:31" pos:end="207:34"><name pos:start="207:31" pos:end="207:31">s</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:34">g</name></name></expr></argument>, <argument pos:start="207:37" pos:end="207:37"><expr pos:start="207:37" pos:end="207:37"><literal type="number" pos:start="207:37" pos:end="207:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="209:9" pos:end="211:70">else<block type="pseudo" pos:start="211:13" pos:end="211:70"><block_content pos:start="211:13" pos:end="211:70">

            <expr_stmt pos:start="211:13" pos:end="211:70"><expr pos:start="211:13" pos:end="211:69"><call pos:start="211:13" pos:end="211:69"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="211:69">(<argument pos:start="211:20" pos:end="211:27"><expr pos:start="211:20" pos:end="211:27"><name pos:start="211:20" pos:end="211:27"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:27">avctx</name></name></expr></argument>, <argument pos:start="211:30" pos:end="211:41"><expr pos:start="211:30" pos:end="211:41"><name pos:start="211:30" pos:end="211:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:44" pos:end="211:68"><expr pos:start="211:44" pos:end="211:68"><literal type="string" pos:start="211:44" pos:end="211:68">"EPH marker not found.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="217:5" pos:end="275:5">for <control pos:start="217:9" pos:end="217:55">(<init pos:start="217:10" pos:end="217:20"><expr pos:start="217:10" pos:end="217:19"><name pos:start="217:10" pos:end="217:15">bandno</name> <operator pos:start="217:17" pos:end="217:17">=</operator> <literal type="number" pos:start="217:19" pos:end="217:19">0</literal></expr>;</init> <condition pos:start="217:22" pos:end="217:45"><expr pos:start="217:22" pos:end="217:44"><name pos:start="217:22" pos:end="217:27">bandno</name> <operator pos:start="217:29" pos:end="217:29">&lt;</operator> <name pos:start="217:31" pos:end="217:44"><name pos:start="217:31" pos:end="217:36">rlevel</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:44">nbands</name></name></expr>;</condition> <incr pos:start="217:47" pos:end="217:54"><expr pos:start="217:47" pos:end="217:54"><name pos:start="217:47" pos:end="217:52">bandno</name><operator pos:start="217:53" pos:end="217:54">++</operator></expr></incr>)</control> <block pos:start="217:57" pos:end="275:5">{<block_content pos:start="219:9" pos:end="273:9">

        <decl_stmt pos:start="219:9" pos:end="219:51"><decl pos:start="219:9" pos:end="219:50"><type pos:start="219:9" pos:end="219:22"><name pos:start="219:9" pos:end="219:20">Jpeg2000Band</name> <modifier pos:start="219:22" pos:end="219:22">*</modifier></type><name pos:start="219:23" pos:end="219:26">band</name> <init pos:start="219:28" pos:end="219:50">= <expr pos:start="219:30" pos:end="219:50"><name pos:start="219:30" pos:end="219:41"><name pos:start="219:30" pos:end="219:35">rlevel</name><operator pos:start="219:36" pos:end="219:37">-&gt;</operator><name pos:start="219:38" pos:end="219:41">band</name></name> <operator pos:start="219:43" pos:end="219:43">+</operator> <name pos:start="219:45" pos:end="219:50">bandno</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="221:9" pos:end="221:49"><decl pos:start="221:9" pos:end="221:48"><type pos:start="221:9" pos:end="221:22"><name pos:start="221:9" pos:end="221:20">Jpeg2000Prec</name> <modifier pos:start="221:22" pos:end="221:22">*</modifier></type><name pos:start="221:23" pos:end="221:26">prec</name> <init pos:start="221:28" pos:end="221:48">= <expr pos:start="221:30" pos:end="221:48"><name pos:start="221:30" pos:end="221:39"><name pos:start="221:30" pos:end="221:33">band</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:39">prec</name></name> <operator pos:start="221:41" pos:end="221:41">+</operator> <name pos:start="221:43" pos:end="221:48">precno</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:80"><expr pos:start="225:9" pos:end="225:79"><name pos:start="225:9" pos:end="225:22">nb_code_blocks</name> <operator pos:start="225:24" pos:end="225:24">=</operator> <name pos:start="225:26" pos:end="225:51"><name pos:start="225:26" pos:end="225:29">prec</name><operator pos:start="225:30" pos:end="225:31">-&gt;</operator><name pos:start="225:32" pos:end="225:51">nb_codeblocks_height</name></name> <operator pos:start="225:53" pos:end="225:53">*</operator> <name pos:start="225:55" pos:end="225:79"><name pos:start="225:55" pos:end="225:58">prec</name><operator pos:start="225:59" pos:end="225:60">-&gt;</operator><name pos:start="225:61" pos:end="225:79">nb_codeblocks_width</name></name></expr>;</expr_stmt>

        <for pos:start="227:9" pos:end="273:9">for <control pos:start="227:13" pos:end="227:59">(<init pos:start="227:14" pos:end="227:24"><expr pos:start="227:14" pos:end="227:23"><name pos:start="227:14" pos:end="227:19">cblkno</name> <operator pos:start="227:21" pos:end="227:21">=</operator> <literal type="number" pos:start="227:23" pos:end="227:23">0</literal></expr>;</init> <condition pos:start="227:26" pos:end="227:49"><expr pos:start="227:26" pos:end="227:48"><name pos:start="227:26" pos:end="227:31">cblkno</name> <operator pos:start="227:33" pos:end="227:33">&lt;</operator> <name pos:start="227:35" pos:end="227:48">nb_code_blocks</name></expr>;</condition> <incr pos:start="227:51" pos:end="227:58"><expr pos:start="227:51" pos:end="227:58"><name pos:start="227:51" pos:end="227:56">cblkno</name><operator pos:start="227:57" pos:end="227:58">++</operator></expr></incr>)</control> <block pos:start="227:61" pos:end="273:9">{<block_content pos:start="229:13" pos:end="271:13">

            <decl_stmt pos:start="229:13" pos:end="229:53"><decl pos:start="229:13" pos:end="229:52"><type pos:start="229:13" pos:end="229:26"><name pos:start="229:13" pos:end="229:24">Jpeg2000Cblk</name> <modifier pos:start="229:26" pos:end="229:26">*</modifier></type><name pos:start="229:27" pos:end="229:30">cblk</name> <init pos:start="229:32" pos:end="229:52">= <expr pos:start="229:34" pos:end="229:52"><name pos:start="229:34" pos:end="229:43"><name pos:start="229:34" pos:end="229:37">prec</name><operator pos:start="229:38" pos:end="229:39">-&gt;</operator><name pos:start="229:40" pos:end="229:43">cblk</name></name> <operator pos:start="229:45" pos:end="229:45">+</operator> <name pos:start="229:47" pos:end="229:52">cblkno</name></expr></init></decl>;</decl_stmt>

            <for pos:start="231:13" pos:end="271:13">for <control pos:start="231:17" pos:end="231:65">(<init pos:start="231:18" pos:end="231:27"><expr pos:start="231:18" pos:end="231:26"><name pos:start="231:18" pos:end="231:22">cwsno</name> <operator pos:start="231:24" pos:end="231:24">=</operator> <literal type="number" pos:start="231:26" pos:end="231:26">0</literal></expr>;</init> <condition pos:start="231:29" pos:end="231:55"><expr pos:start="231:29" pos:end="231:54"><name pos:start="231:29" pos:end="231:33">cwsno</name> <operator pos:start="231:35" pos:end="231:35">&lt;</operator> <name pos:start="231:37" pos:end="231:54"><name pos:start="231:37" pos:end="231:40">cblk</name><operator pos:start="231:41" pos:end="231:42">-&gt;</operator><name pos:start="231:43" pos:end="231:54">nb_lengthinc</name></name></expr>;</condition> <incr pos:start="231:57" pos:end="231:64"><expr pos:start="231:57" pos:end="231:64"><name pos:start="231:57" pos:end="231:61">cwsno</name> <operator pos:start="231:63" pos:end="231:64">++</operator></expr></incr>)</control> <block pos:start="231:67" pos:end="271:13">{<block_content pos:start="233:17" pos:end="269:17">

                <if_stmt pos:start="233:17" pos:end="247:17"><if pos:start="233:17" pos:end="247:17">if <condition pos:start="233:20" pos:end="237:17">(   <expr pos:start="233:24" pos:end="235:85"><call pos:start="233:24" pos:end="233:56"><name pos:start="233:24" pos:end="233:49">bytestream2_get_bytes_left</name><argument_list pos:start="233:50" pos:end="233:56">(<argument pos:start="233:51" pos:end="233:55"><expr pos:start="233:51" pos:end="233:55"><operator pos:start="233:51" pos:end="233:51">&amp;</operator><name pos:start="233:52" pos:end="233:55"><name pos:start="233:52" pos:end="233:52">s</name><operator pos:start="233:53" pos:end="233:54">-&gt;</operator><name pos:start="233:55" pos:end="233:55">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="233:58" pos:end="233:58">&lt;</operator> <name pos:start="233:60" pos:end="233:81"><name pos:start="233:60" pos:end="233:63">cblk</name><operator pos:start="233:64" pos:end="233:65">-&gt;</operator><name pos:start="233:66" pos:end="233:74">lengthinc</name><index pos:start="233:75" pos:end="233:81">[<expr pos:start="233:76" pos:end="233:80"><name pos:start="233:76" pos:end="233:80">cwsno</name></expr>]</index></name>

                    <operator pos:start="235:21" pos:end="235:22">||</operator> <sizeof pos:start="235:24" pos:end="235:41">sizeof<argument_list pos:start="235:30" pos:end="235:41">(<argument pos:start="235:31" pos:end="235:40"><expr pos:start="235:31" pos:end="235:40"><name pos:start="235:31" pos:end="235:40"><name pos:start="235:31" pos:end="235:34">cblk</name><operator pos:start="235:35" pos:end="235:36">-&gt;</operator><name pos:start="235:37" pos:end="235:40">data</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="235:43" pos:end="235:43">&lt;</operator> <name pos:start="235:45" pos:end="235:56"><name pos:start="235:45" pos:end="235:48">cblk</name><operator pos:start="235:49" pos:end="235:50">-&gt;</operator><name pos:start="235:51" pos:end="235:56">length</name></name> <operator pos:start="235:58" pos:end="235:58">+</operator> <name pos:start="235:60" pos:end="235:81"><name pos:start="235:60" pos:end="235:63">cblk</name><operator pos:start="235:64" pos:end="235:65">-&gt;</operator><name pos:start="235:66" pos:end="235:74">lengthinc</name><index pos:start="235:75" pos:end="235:81">[<expr pos:start="235:76" pos:end="235:80"><name pos:start="235:76" pos:end="235:80">cwsno</name></expr>]</index></name> <operator pos:start="235:83" pos:end="235:83">+</operator> <literal type="number" pos:start="235:85" pos:end="235:85">4</literal></expr>

                )</condition> <block pos:start="237:19" pos:end="247:17">{<block_content pos:start="239:21" pos:end="245:47">

                    <expr_stmt pos:start="239:21" pos:end="243:97"><expr pos:start="239:21" pos:end="243:96"><call pos:start="239:21" pos:end="243:96"><name pos:start="239:21" pos:end="239:26">av_log</name><argument_list pos:start="239:27" pos:end="243:96">(<argument pos:start="239:28" pos:end="239:35"><expr pos:start="239:28" pos:end="239:35"><name pos:start="239:28" pos:end="239:35"><name pos:start="239:28" pos:end="239:28">s</name><operator pos:start="239:29" pos:end="239:30">-&gt;</operator><name pos:start="239:31" pos:end="239:35">avctx</name></name></expr></argument>, <argument pos:start="239:38" pos:end="239:49"><expr pos:start="239:38" pos:end="239:49"><name pos:start="239:38" pos:end="239:49">AV_LOG_ERROR</name></expr></argument>,

                        <argument pos:start="241:25" pos:end="241:88"><expr pos:start="241:25" pos:end="241:88"><literal type="string" pos:start="241:25" pos:end="241:40">"Block length %"</literal><name pos:start="241:41" pos:end="241:46">PRIu16</name><literal type="string" pos:start="241:47" pos:end="241:88">" or lengthinc %d is too large, left %d\n"</literal></expr></argument>,

                        <argument pos:start="243:25" pos:end="243:36"><expr pos:start="243:25" pos:end="243:36"><name pos:start="243:25" pos:end="243:36"><name pos:start="243:25" pos:end="243:28">cblk</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:36">length</name></name></expr></argument>, <argument pos:start="243:39" pos:end="243:60"><expr pos:start="243:39" pos:end="243:60"><name pos:start="243:39" pos:end="243:60"><name pos:start="243:39" pos:end="243:42">cblk</name><operator pos:start="243:43" pos:end="243:44">-&gt;</operator><name pos:start="243:45" pos:end="243:53">lengthinc</name><index pos:start="243:54" pos:end="243:60">[<expr pos:start="243:55" pos:end="243:59"><name pos:start="243:55" pos:end="243:59">cwsno</name></expr>]</index></name></expr></argument>, <argument pos:start="243:63" pos:end="243:95"><expr pos:start="243:63" pos:end="243:95"><call pos:start="243:63" pos:end="243:95"><name pos:start="243:63" pos:end="243:88">bytestream2_get_bytes_left</name><argument_list pos:start="243:89" pos:end="243:95">(<argument pos:start="243:90" pos:end="243:94"><expr pos:start="243:90" pos:end="243:94"><operator pos:start="243:90" pos:end="243:90">&amp;</operator><name pos:start="243:91" pos:end="243:94"><name pos:start="243:91" pos:end="243:91">s</name><operator pos:start="243:92" pos:end="243:93">-&gt;</operator><name pos:start="243:94" pos:end="243:94">g</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="245:21" pos:end="245:47">return <expr pos:start="245:28" pos:end="245:46"><name pos:start="245:28" pos:end="245:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="251:17" pos:end="251:98"><expr pos:start="251:17" pos:end="251:97"><call pos:start="251:17" pos:end="251:97"><name pos:start="251:17" pos:end="251:39">bytestream2_get_bufferu</name><argument_list pos:start="251:40" pos:end="251:97">(<argument pos:start="251:41" pos:end="251:45"><expr pos:start="251:41" pos:end="251:45"><operator pos:start="251:41" pos:end="251:41">&amp;</operator><name pos:start="251:42" pos:end="251:45"><name pos:start="251:42" pos:end="251:42">s</name><operator pos:start="251:43" pos:end="251:44">-&gt;</operator><name pos:start="251:45" pos:end="251:45">g</name></name></expr></argument>, <argument pos:start="251:48" pos:end="251:72"><expr pos:start="251:48" pos:end="251:72"><name pos:start="251:48" pos:end="251:57"><name pos:start="251:48" pos:end="251:51">cblk</name><operator pos:start="251:52" pos:end="251:53">-&gt;</operator><name pos:start="251:54" pos:end="251:57">data</name></name> <operator pos:start="251:59" pos:end="251:59">+</operator> <name pos:start="251:61" pos:end="251:72"><name pos:start="251:61" pos:end="251:64">cblk</name><operator pos:start="251:65" pos:end="251:66">-&gt;</operator><name pos:start="251:67" pos:end="251:72">length</name></name></expr></argument>, <argument pos:start="251:75" pos:end="251:96"><expr pos:start="251:75" pos:end="251:96"><name pos:start="251:75" pos:end="251:96"><name pos:start="251:75" pos:end="251:78">cblk</name><operator pos:start="251:79" pos:end="251:80">-&gt;</operator><name pos:start="251:81" pos:end="251:89">lengthinc</name><index pos:start="251:90" pos:end="251:96">[<expr pos:start="251:91" pos:end="251:95"><name pos:start="251:91" pos:end="251:95">cwsno</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:57"><expr pos:start="253:17" pos:end="253:56"><name pos:start="253:17" pos:end="253:28"><name pos:start="253:17" pos:end="253:20">cblk</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:28">length</name></name>   <operator pos:start="253:32" pos:end="253:33">+=</operator> <name pos:start="253:35" pos:end="253:56"><name pos:start="253:35" pos:end="253:38">cblk</name><operator pos:start="253:39" pos:end="253:40">-&gt;</operator><name pos:start="253:41" pos:end="253:49">lengthinc</name><index pos:start="253:50" pos:end="253:56">[<expr pos:start="253:51" pos:end="253:55"><name pos:start="253:51" pos:end="253:55">cwsno</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:43"><expr pos:start="255:17" pos:end="255:42"><name pos:start="255:17" pos:end="255:38"><name pos:start="255:17" pos:end="255:20">cblk</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:31">lengthinc</name><index pos:start="255:32" pos:end="255:38">[<expr pos:start="255:33" pos:end="255:37"><name pos:start="255:33" pos:end="255:37">cwsno</name></expr>]</index></name> <operator pos:start="255:40" pos:end="255:40">=</operator> <literal type="number" pos:start="255:42" pos:end="255:42">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="257:17" pos:end="269:17"><if pos:start="257:17" pos:end="269:17">if <condition pos:start="257:20" pos:end="257:45">(<expr pos:start="257:21" pos:end="257:44"><name pos:start="257:21" pos:end="257:44"><name pos:start="257:21" pos:end="257:24">cblk</name><operator pos:start="257:25" pos:end="257:26">-&gt;</operator><name pos:start="257:27" pos:end="257:44">nb_terminationsinc</name></name></expr>)</condition> <block pos:start="257:47" pos:end="269:17">{<block_content pos:start="259:21" pos:end="267:75">

                    <expr_stmt pos:start="259:21" pos:end="259:47"><expr pos:start="259:21" pos:end="259:46"><name pos:start="259:21" pos:end="259:44"><name pos:start="259:21" pos:end="259:24">cblk</name><operator pos:start="259:25" pos:end="259:26">-&gt;</operator><name pos:start="259:27" pos:end="259:44">nb_terminationsinc</name></name><operator pos:start="259:45" pos:end="259:46">--</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:44"><expr pos:start="261:21" pos:end="261:43"><name pos:start="261:21" pos:end="261:41"><name pos:start="261:21" pos:end="261:24">cblk</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:41">nb_terminations</name></name><operator pos:start="261:42" pos:end="261:43">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="263:54"><expr pos:start="263:21" pos:end="263:53"><name pos:start="263:21" pos:end="263:46"><name pos:start="263:21" pos:end="263:24">cblk</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:30">data</name><index pos:start="263:31" pos:end="263:46">[<expr pos:start="263:32" pos:end="263:45"><name pos:start="263:32" pos:end="263:43"><name pos:start="263:32" pos:end="263:35">cblk</name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:43">length</name></name><operator pos:start="263:44" pos:end="263:45">++</operator></expr>]</index></name> <operator pos:start="263:48" pos:end="263:48">=</operator> <literal type="number" pos:start="263:50" pos:end="263:53">0xFF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="265:21" pos:end="265:54"><expr pos:start="265:21" pos:end="265:53"><name pos:start="265:21" pos:end="265:46"><name pos:start="265:21" pos:end="265:24">cblk</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:30">data</name><index pos:start="265:31" pos:end="265:46">[<expr pos:start="265:32" pos:end="265:45"><name pos:start="265:32" pos:end="265:43"><name pos:start="265:32" pos:end="265:35">cblk</name><operator pos:start="265:36" pos:end="265:37">-&gt;</operator><name pos:start="265:38" pos:end="265:43">length</name></name><operator pos:start="265:44" pos:end="265:45">++</operator></expr>]</index></name> <operator pos:start="265:48" pos:end="265:48">=</operator> <literal type="number" pos:start="265:50" pos:end="265:53">0xFF</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:75"><expr pos:start="267:21" pos:end="267:74"><name pos:start="267:21" pos:end="267:59"><name pos:start="267:21" pos:end="267:24">cblk</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:36">data_start</name><index pos:start="267:37" pos:end="267:59">[<expr pos:start="267:38" pos:end="267:58"><name pos:start="267:38" pos:end="267:58"><name pos:start="267:38" pos:end="267:41">cblk</name><operator pos:start="267:42" pos:end="267:43">-&gt;</operator><name pos:start="267:44" pos:end="267:58">nb_terminations</name></name></expr>]</index></name> <operator pos:start="267:61" pos:end="267:61">=</operator> <name pos:start="267:63" pos:end="267:74"><name pos:start="267:63" pos:end="267:66">cblk</name><operator pos:start="267:67" pos:end="267:68">-&gt;</operator><name pos:start="267:69" pos:end="267:74">length</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="277:5" pos:end="277:13">return <expr pos:start="277:12" pos:end="277:12"><literal type="number" pos:start="277:12" pos:end="277:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
