<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20630.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">fic_decode_block</name><parameter_list pos:start="1:28" pos:end="3:80">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:38">FICContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:58">GetBitContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">gb</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">dst</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:52"><decl pos:start="3:43" pos:end="3:52"><type pos:start="3:43" pos:end="3:52"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:52">stride</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:68"><decl pos:start="3:55" pos:end="3:68"><type pos:start="3:55" pos:end="3:68"><name pos:start="3:55" pos:end="3:61">int16_t</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">block</name></decl></parameter>, <parameter pos:start="3:71" pos:end="3:79"><decl pos:start="3:71" pos:end="3:79"><type pos:start="3:71" pos:end="3:79"><name pos:start="3:71" pos:end="3:73">int</name> <modifier pos:start="3:75" pos:end="3:75">*</modifier></type><name pos:start="3:76" pos:end="3:79">is_p</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:20">num_coeff</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:29">/* Is it a skip block? */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><call pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:17">get_bits1</name><argument_list pos:start="13:18" pos:end="13:21">(<argument pos:start="13:19" pos:end="13:20"><expr pos:start="13:19" pos:end="13:20"><name pos:start="13:19" pos:end="13:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:24" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><operator pos:start="15:9" pos:end="15:9">*</operator><name pos:start="15:10" pos:end="15:13">is_p</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:41">(<argument pos:start="23:12" pos:end="23:16"><expr pos:start="23:12" pos:end="23:16"><name pos:start="23:12" pos:end="23:16">block</name></expr></argument>, <argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr></argument>, <argument pos:start="23:22" pos:end="23:40"><expr pos:start="23:22" pos:end="23:40"><sizeof pos:start="23:22" pos:end="23:35">sizeof<argument_list pos:start="23:28" pos:end="23:35">(<argument pos:start="23:29" pos:end="23:34"><expr pos:start="23:29" pos:end="23:34"><operator pos:start="23:29" pos:end="23:29">*</operator><name pos:start="23:30" pos:end="23:34">block</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:37" pos:end="23:37">*</operator> <literal type="number" pos:start="23:39" pos:end="23:40">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:13">num_coeff</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:24">get_bits</name><argument_list pos:start="27:25" pos:end="27:31">(<argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><name pos:start="27:26" pos:end="27:27">gb</name></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:35"><if pos:start="29:5" pos:end="31:35">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:17">num_coeff</name> <operator pos:start="29:19" pos:end="29:19">&gt;</operator> <literal type="number" pos:start="29:21" pos:end="29:22">64</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:35"><block_content pos:start="31:9" pos:end="31:35">

        <return pos:start="31:9" pos:end="31:35">return <expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="35:5" pos:end="39:68">for <control pos:start="35:9" pos:end="35:35">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:30"><expr pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:29">num_coeff</name></expr>;</condition> <incr pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:32">i</name><operator pos:start="35:33" pos:end="35:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="39:68"><block_content pos:start="37:9" pos:end="39:68">

        <expr_stmt pos:start="37:9" pos:end="39:68"><expr pos:start="37:9" pos:end="39:67"><name pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:13">block</name><index pos:start="37:14" pos:end="37:34">[<expr pos:start="37:15" pos:end="37:33"><name pos:start="37:15" pos:end="37:33"><name pos:start="37:15" pos:end="37:30">ff_zigzag_direct</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="37:36" pos:end="37:36">=</operator> <call pos:start="37:38" pos:end="37:54"><name pos:start="37:38" pos:end="37:50">get_se_golomb</name><argument_list pos:start="37:51" pos:end="37:54">(<argument pos:start="37:52" pos:end="37:53"><expr pos:start="37:52" pos:end="37:53"><name pos:start="37:52" pos:end="37:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="37:56" pos:end="37:56">*</operator>

                                     <name pos:start="39:38" pos:end="39:67"><name pos:start="39:38" pos:end="39:40">ctx</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:46">qmat</name><index pos:start="39:47" pos:end="39:67">[<expr pos:start="39:48" pos:end="39:66"><name pos:start="39:48" pos:end="39:66"><name pos:start="39:48" pos:end="39:63">ff_zigzag_direct</name><index pos:start="39:64" pos:end="39:66">[<expr pos:start="39:65" pos:end="39:65"><name pos:start="39:65" pos:end="39:65">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><call pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:16">fic_idct_put</name><argument_list pos:start="43:17" pos:end="43:36">(<argument pos:start="43:18" pos:end="43:20"><expr pos:start="43:18" pos:end="43:20"><name pos:start="43:18" pos:end="43:20">dst</name></expr></argument>, <argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><name pos:start="43:23" pos:end="43:28">stride</name></expr></argument>, <argument pos:start="43:31" pos:end="43:35"><expr pos:start="43:31" pos:end="43:35"><name pos:start="43:31" pos:end="43:35">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
