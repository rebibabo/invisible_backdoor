<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16120.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:44">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">got_frame</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="223:1">{<block_content pos:start="9:5" pos:end="221:20">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AnsiContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">s</name> <init pos:start="9:20" pos:end="9:37">= <expr pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:26">avctx</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name> <init pos:start="13:18" pos:end="13:30">= <expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:24">avpkt</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:26">buf_end</name>   <init pos:start="15:30" pos:end="15:43">= <expr pos:start="15:32" pos:end="15:43"><name pos:start="15:32" pos:end="15:34">buf</name><operator pos:start="15:35" pos:end="15:35">+</operator><name pos:start="15:36" pos:end="15:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>, <decl pos:start="17:14" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:14">i</name></decl>, <decl pos:start="17:17" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:17" pos:end="17:21">count</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:53">(<expr pos:start="21:9" pos:end="21:52"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:47"><name pos:start="21:16" pos:end="21:30">ff_reget_buffer</name><argument_list pos:start="21:31" pos:end="21:47">(<argument pos:start="21:32" pos:end="21:36"><expr pos:start="21:32" pos:end="21:36"><name pos:start="21:32" pos:end="21:36">avctx</name></expr></argument>, <argument pos:start="21:39" pos:end="21:46"><expr pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:39">s</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:46">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="21:48" pos:end="21:48">)</operator> <operator pos:start="21:50" pos:end="21:50">&lt;</operator> <literal type="number" pos:start="21:52" pos:end="21:52">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:28"><name pos:start="25:10" pos:end="25:14">avctx</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:28">frame_number</name></name></expr>)</condition> <block pos:start="25:31" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:53">

        <for pos:start="27:9" pos:end="29:80">for <control pos:start="27:13" pos:end="27:39">(<init pos:start="27:14" pos:end="27:17"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:14">i</name><operator pos:start="27:15" pos:end="27:15">=</operator><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</init> <condition pos:start="27:19" pos:end="27:34"><expr pos:start="27:19" pos:end="27:33"><name pos:start="27:19" pos:end="27:19">i</name><operator pos:start="27:20" pos:end="27:20">&lt;</operator><name pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:25">avctx</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:33">height</name></name></expr>;</condition> <incr pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:36">i</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:80"><block_content pos:start="29:13" pos:end="29:80">

            <expr_stmt pos:start="29:13" pos:end="29:80"><expr pos:start="29:13" pos:end="29:79"><call pos:start="29:13" pos:end="29:79"><name pos:start="29:13" pos:end="29:18">memset</name><argument_list pos:start="29:19" pos:end="29:79">(<argument pos:start="29:20" pos:end="29:61"><expr pos:start="29:20" pos:end="29:61"><name pos:start="29:20" pos:end="29:36"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">frame</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:33">data</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><literal type="number" pos:start="29:35" pos:end="29:35">0</literal></expr>]</index></name><operator pos:start="29:37" pos:end="29:37">+</operator> <name pos:start="29:39" pos:end="29:39">i</name><operator pos:start="29:40" pos:end="29:40">*</operator><name pos:start="29:41" pos:end="29:61"><name pos:start="29:41" pos:end="29:41">s</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:48">frame</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:58">linesize</name><index pos:start="29:59" pos:end="29:61">[<expr pos:start="29:60" pos:end="29:60"><literal type="number" pos:start="29:60" pos:end="29:60">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:64" pos:end="29:64"><expr pos:start="29:64" pos:end="29:64"><literal type="number" pos:start="29:64" pos:end="29:64">0</literal></expr></argument>, <argument pos:start="29:67" pos:end="29:78"><expr pos:start="29:67" pos:end="29:78"><name pos:start="29:67" pos:end="29:78"><name pos:start="29:67" pos:end="29:71">avctx</name><operator pos:start="29:72" pos:end="29:73">-&gt;</operator><name pos:start="29:74" pos:end="29:78">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="31:9" pos:end="31:53"><expr pos:start="31:9" pos:end="31:52"><call pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:14">memset</name><argument_list pos:start="31:15" pos:end="31:52">(<argument pos:start="31:16" pos:end="31:32"><expr pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">frame</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">data</name><index pos:start="31:30" pos:end="31:32">[<expr pos:start="31:31" pos:end="31:31"><literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr></argument>, <argument pos:start="31:38" pos:end="31:51"><expr pos:start="31:38" pos:end="31:51"><name pos:start="31:38" pos:end="31:51">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">frame</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:23">pict_type</name></name>           <operator pos:start="37:35" pos:end="37:35">=</operator> <name pos:start="37:37" pos:end="37:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:33"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">frame</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:33">palette_has_changed</name></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <literal type="number" pos:start="39:37" pos:end="39:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:47"><expr pos:start="41:5" pos:end="41:46"><call pos:start="41:5" pos:end="41:46"><name pos:start="41:5" pos:end="41:15">set_palette</name><argument_list pos:start="41:16" pos:end="41:46">(<argument pos:start="41:17" pos:end="41:45"><expr pos:start="41:17" pos:end="41:45"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:25">uint32_t</name> <operator pos:start="41:27" pos:end="41:27">*</operator><operator pos:start="41:28" pos:end="41:28">)</operator><name pos:start="41:29" pos:end="41:45"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:36">frame</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:42">data</name><index pos:start="41:43" pos:end="41:45">[<expr pos:start="41:44" pos:end="41:44"><literal type="number" pos:start="41:44" pos:end="41:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:23"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:23">first_frame</name></name></expr>)</condition> <block pos:start="43:26" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:27">

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:20">erase_screen</name><argument_list pos:start="45:21" pos:end="45:27">(<argument pos:start="45:22" pos:end="45:26"><expr pos:start="45:22" pos:end="45:26"><name pos:start="45:22" pos:end="45:26">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">first_frame</name></name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="53:5" pos:end="211:5">while<condition pos:start="53:10" pos:end="53:24">(<expr pos:start="53:11" pos:end="53:23"><name pos:start="53:11" pos:end="53:13">buf</name> <operator pos:start="53:15" pos:end="53:15">&lt;</operator> <name pos:start="53:17" pos:end="53:23">buf_end</name></expr>)</condition> <block pos:start="53:26" pos:end="211:5">{<block_content pos:start="55:9" pos:end="209:14">

        <switch pos:start="55:9" pos:end="207:9">switch<condition pos:start="55:15" pos:end="55:24">(<expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:16">s</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">state</name></name></expr>)</condition> <block pos:start="55:26" pos:end="207:9">{<block_content pos:start="57:9" pos:end="205:18">

        <case pos:start="57:9" pos:end="57:26">case <expr pos:start="57:14" pos:end="57:25"><name pos:start="57:14" pos:end="57:25">STATE_NORMAL</name></expr>:</case>

            <switch pos:start="59:13" pos:end="115:13">switch <condition pos:start="59:20" pos:end="59:27">(<expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:23">buf</name><index pos:start="59:24" pos:end="59:26">[<expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="59:29" pos:end="115:13">{<block_content pos:start="61:13" pos:end="113:41">

            <case pos:start="61:13" pos:end="61:22">case <expr pos:start="61:18" pos:end="61:21"><literal type="number" pos:start="61:18" pos:end="61:21">0x00</literal></expr>:</case> <comment type="line" pos:start="61:24" pos:end="61:28">//NUL</comment>

            <case pos:start="63:13" pos:end="63:22">case <expr pos:start="63:18" pos:end="63:21"><literal type="number" pos:start="63:18" pos:end="63:21">0x07</literal></expr>:</case> <comment type="line" pos:start="63:24" pos:end="63:28">//BEL</comment>

            <case pos:start="65:13" pos:end="65:22">case <expr pos:start="65:18" pos:end="65:21"><literal type="number" pos:start="65:18" pos:end="65:21">0x1A</literal></expr>:</case> <comment type="line" pos:start="65:24" pos:end="65:28">//SUB</comment>

                <comment type="block" pos:start="67:17" pos:end="67:28">/* ignore */</comment>

                <break pos:start="69:17" pos:end="69:22">break;</break>

            <case pos:start="71:13" pos:end="71:22">case <expr pos:start="71:18" pos:end="71:21"><literal type="number" pos:start="71:18" pos:end="71:21">0x08</literal></expr>:</case> <comment type="line" pos:start="71:24" pos:end="71:27">//BS</comment>

                <expr_stmt pos:start="73:17" pos:end="73:42"><expr pos:start="73:17" pos:end="73:41"><name pos:start="73:17" pos:end="73:20"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:20">x</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:41"><name pos:start="73:24" pos:end="73:28">FFMAX</name><argument_list pos:start="73:29" pos:end="73:41">(<argument pos:start="73:30" pos:end="73:37"><expr pos:start="73:30" pos:end="73:37"><name pos:start="73:30" pos:end="73:33"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:33">x</name></name> <operator pos:start="73:35" pos:end="73:35">-</operator> <literal type="number" pos:start="73:37" pos:end="73:37">1</literal></expr></argument>, <argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="75:17" pos:end="75:22">break;</break>

            <case pos:start="77:13" pos:end="77:22">case <expr pos:start="77:18" pos:end="77:21"><literal type="number" pos:start="77:18" pos:end="77:21">0x09</literal></expr>:</case> <comment type="line" pos:start="77:24" pos:end="77:27">//HT</comment>

                <expr_stmt pos:start="79:17" pos:end="79:38"><expr pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:24"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:24">x</name></name> <operator pos:start="79:26" pos:end="79:26">/</operator> <name pos:start="79:28" pos:end="79:37">FONT_WIDTH</name></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:43"><expr pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:21">count</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <operator pos:start="81:25" pos:end="81:25">(</operator><operator pos:start="81:26" pos:end="81:26">(</operator><name pos:start="81:27" pos:end="81:27">i</name> <operator pos:start="81:29" pos:end="81:29">+</operator> <literal type="number" pos:start="81:31" pos:end="81:31">8</literal><operator pos:start="81:32" pos:end="81:32">)</operator> <operator pos:start="81:34" pos:end="81:34">&amp;</operator> <operator pos:start="81:36" pos:end="81:36">~</operator><literal type="number" pos:start="81:37" pos:end="81:37">7</literal><operator pos:start="81:38" pos:end="81:38">)</operator> <operator pos:start="81:40" pos:end="81:40">-</operator> <name pos:start="81:42" pos:end="81:42">i</name></expr>;</expr_stmt>

                <for pos:start="83:17" pos:end="85:42">for <control pos:start="83:21" pos:end="83:43">(<init pos:start="83:22" pos:end="83:27"><expr pos:start="83:22" pos:end="83:26"><name pos:start="83:22" pos:end="83:22">i</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <literal type="number" pos:start="83:26" pos:end="83:26">0</literal></expr>;</init> <condition pos:start="83:29" pos:end="83:38"><expr pos:start="83:29" pos:end="83:37"><name pos:start="83:29" pos:end="83:29">i</name> <operator pos:start="83:31" pos:end="83:31">&lt;</operator> <name pos:start="83:33" pos:end="83:37">count</name></expr>;</condition> <incr pos:start="83:40" pos:end="83:42"><expr pos:start="83:40" pos:end="83:42"><name pos:start="83:40" pos:end="83:40">i</name><operator pos:start="83:41" pos:end="83:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="85:21" pos:end="85:42"><block_content pos:start="85:21" pos:end="85:42">

                    <expr_stmt pos:start="85:21" pos:end="85:42"><expr pos:start="85:21" pos:end="85:41"><call pos:start="85:21" pos:end="85:41"><name pos:start="85:21" pos:end="85:29">draw_char</name><argument_list pos:start="85:30" pos:end="85:41">(<argument pos:start="85:31" pos:end="85:35"><expr pos:start="85:31" pos:end="85:35"><name pos:start="85:31" pos:end="85:35">avctx</name></expr></argument>, <argument pos:start="85:38" pos:end="85:40"><expr pos:start="85:38" pos:end="85:40"><literal type="char" pos:start="85:38" pos:end="85:40">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="87:17" pos:end="87:22">break;</break>

            <case pos:start="89:13" pos:end="89:22">case <expr pos:start="89:18" pos:end="89:21"><literal type="number" pos:start="89:18" pos:end="89:21">0x0A</literal></expr>:</case> <comment type="line" pos:start="89:24" pos:end="89:27">//LF</comment>

                <expr_stmt pos:start="91:17" pos:end="91:31"><expr pos:start="91:17" pos:end="91:30"><call pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:23">hscroll</name><argument_list pos:start="91:24" pos:end="91:30">(<argument pos:start="91:25" pos:end="91:29"><expr pos:start="91:25" pos:end="91:29"><name pos:start="91:25" pos:end="91:29">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <case pos:start="93:13" pos:end="93:22">case <expr pos:start="93:18" pos:end="93:21"><literal type="number" pos:start="93:18" pos:end="93:21">0x0D</literal></expr>:</case> <comment type="line" pos:start="93:24" pos:end="93:27">//CR</comment>

                <expr_stmt pos:start="95:17" pos:end="95:25"><expr pos:start="95:17" pos:end="95:24"><name pos:start="95:17" pos:end="95:20"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:20">x</name></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr>;</expr_stmt>

                <break pos:start="97:17" pos:end="97:22">break;</break>

            <case pos:start="99:13" pos:end="99:22">case <expr pos:start="99:18" pos:end="99:21"><literal type="number" pos:start="99:18" pos:end="99:21">0x0C</literal></expr>:</case> <comment type="line" pos:start="99:24" pos:end="99:27">//FF</comment>

                <expr_stmt pos:start="101:17" pos:end="101:36"><expr pos:start="101:17" pos:end="101:35"><call pos:start="101:17" pos:end="101:35"><name pos:start="101:17" pos:end="101:28">erase_screen</name><argument_list pos:start="101:29" pos:end="101:35">(<argument pos:start="101:30" pos:end="101:34"><expr pos:start="101:30" pos:end="101:34"><name pos:start="101:30" pos:end="101:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:22">case <expr pos:start="105:18" pos:end="105:21"><literal type="number" pos:start="105:18" pos:end="105:21">0x1B</literal></expr>:</case> <comment type="line" pos:start="105:24" pos:end="105:28">//ESC</comment>

                <expr_stmt pos:start="107:17" pos:end="107:40"><expr pos:start="107:17" pos:end="107:39"><name pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">state</name></name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:39">STATE_ESCAPE</name></expr>;</expr_stmt>

                <break pos:start="109:17" pos:end="109:22">break;</break>

            <default pos:start="111:13" pos:end="111:20">default:</default>

                <expr_stmt pos:start="113:17" pos:end="113:41"><expr pos:start="113:17" pos:end="113:40"><call pos:start="113:17" pos:end="113:40"><name pos:start="113:17" pos:end="113:25">draw_char</name><argument_list pos:start="113:26" pos:end="113:40">(<argument pos:start="113:27" pos:end="113:31"><expr pos:start="113:27" pos:end="113:31"><name pos:start="113:27" pos:end="113:31">avctx</name></expr></argument>, <argument pos:start="113:34" pos:end="113:39"><expr pos:start="113:34" pos:end="113:39"><name pos:start="113:34" pos:end="113:39"><name pos:start="113:34" pos:end="113:36">buf</name><index pos:start="113:37" pos:end="113:39">[<expr pos:start="113:38" pos:end="113:38"><literal type="number" pos:start="113:38" pos:end="113:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:26">case <expr pos:start="119:14" pos:end="119:25"><name pos:start="119:14" pos:end="119:25">STATE_ESCAPE</name></expr>:</case>

            <if_stmt pos:start="121:13" pos:end="137:13"><if pos:start="121:13" pos:end="129:13">if <condition pos:start="121:16" pos:end="121:30">(<expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:19">buf</name><index pos:start="121:20" pos:end="121:22">[<expr pos:start="121:21" pos:end="121:21"><literal type="number" pos:start="121:21" pos:end="121:21">0</literal></expr>]</index></name> <operator pos:start="121:24" pos:end="121:25">==</operator> <literal type="char" pos:start="121:27" pos:end="121:29">'['</literal></expr>)</condition> <block pos:start="121:32" pos:end="129:13">{<block_content pos:start="123:17" pos:end="127:32">

                <expr_stmt pos:start="123:17" pos:end="123:40"><expr pos:start="123:17" pos:end="123:39"><name pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">state</name></name>   <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:39">STATE_CODE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:31"><expr pos:start="125:17" pos:end="125:30"><name pos:start="125:17" pos:end="125:26"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:26">nb_args</name></name> <operator pos:start="125:28" pos:end="125:28">=</operator> <literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:32"><expr pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:26"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:23">args</name><index pos:start="127:24" pos:end="127:26">[<expr pos:start="127:25" pos:end="127:25"><literal type="number" pos:start="127:25" pos:end="127:25">0</literal></expr>]</index></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <operator pos:start="127:30" pos:end="127:30">-</operator><literal type="number" pos:start="127:31" pos:end="127:31">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="129:15" pos:end="137:13">else <block pos:start="129:20" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:25">

                <expr_stmt pos:start="131:17" pos:end="131:40"><expr pos:start="131:17" pos:end="131:39"><name pos:start="131:17" pos:end="131:24"><name pos:start="131:17" pos:end="131:17">s</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:24">state</name></name> <operator pos:start="131:26" pos:end="131:26">=</operator> <name pos:start="131:28" pos:end="131:39">STATE_NORMAL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:39"><expr pos:start="133:17" pos:end="133:38"><call pos:start="133:17" pos:end="133:38"><name pos:start="133:17" pos:end="133:25">draw_char</name><argument_list pos:start="133:26" pos:end="133:38">(<argument pos:start="133:27" pos:end="133:31"><expr pos:start="133:27" pos:end="133:31"><name pos:start="133:27" pos:end="133:31">avctx</name></expr></argument>, <argument pos:start="133:34" pos:end="133:37"><expr pos:start="133:34" pos:end="133:37"><literal type="number" pos:start="133:34" pos:end="133:37">0x1B</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="135:17" pos:end="135:25">continue;</continue>

            </block_content>}</block></else></if_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:24">case <expr pos:start="141:14" pos:end="141:23"><name pos:start="141:14" pos:end="141:23">STATE_CODE</name></expr>:</case>

            <switch pos:start="143:13" pos:end="193:13">switch<condition pos:start="143:19" pos:end="143:26">(<expr pos:start="143:20" pos:end="143:25"><name pos:start="143:20" pos:end="143:25"><name pos:start="143:20" pos:end="143:22">buf</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="143:28" pos:end="193:13">{<block_content pos:start="145:13" pos:end="191:40">

            <case pos:start="145:13" pos:end="145:21">case <expr pos:start="145:18" pos:end="145:20"><literal type="char" pos:start="145:18" pos:end="145:20">'0'</literal></expr>:</case> <case pos:start="145:23" pos:end="145:31">case <expr pos:start="145:28" pos:end="145:30"><literal type="char" pos:start="145:28" pos:end="145:30">'1'</literal></expr>:</case> <case pos:start="145:33" pos:end="145:41">case <expr pos:start="145:38" pos:end="145:40"><literal type="char" pos:start="145:38" pos:end="145:40">'2'</literal></expr>:</case> <case pos:start="145:43" pos:end="145:51">case <expr pos:start="145:48" pos:end="145:50"><literal type="char" pos:start="145:48" pos:end="145:50">'3'</literal></expr>:</case> <case pos:start="145:53" pos:end="145:61">case <expr pos:start="145:58" pos:end="145:60"><literal type="char" pos:start="145:58" pos:end="145:60">'4'</literal></expr>:</case>

            <case pos:start="147:13" pos:end="147:21">case <expr pos:start="147:18" pos:end="147:20"><literal type="char" pos:start="147:18" pos:end="147:20">'5'</literal></expr>:</case> <case pos:start="147:23" pos:end="147:31">case <expr pos:start="147:28" pos:end="147:30"><literal type="char" pos:start="147:28" pos:end="147:30">'6'</literal></expr>:</case> <case pos:start="147:33" pos:end="147:41">case <expr pos:start="147:38" pos:end="147:40"><literal type="char" pos:start="147:38" pos:end="147:40">'7'</literal></expr>:</case> <case pos:start="147:43" pos:end="147:51">case <expr pos:start="147:48" pos:end="147:50"><literal type="char" pos:start="147:48" pos:end="147:50">'8'</literal></expr>:</case> <case pos:start="147:53" pos:end="147:61">case <expr pos:start="147:58" pos:end="147:60"><literal type="char" pos:start="147:58" pos:end="147:60">'9'</literal></expr>:</case>

                <if_stmt pos:start="149:17" pos:end="151:92"><if pos:start="149:17" pos:end="151:92">if <condition pos:start="149:20" pos:end="149:45">(<expr pos:start="149:21" pos:end="149:44"><name pos:start="149:21" pos:end="149:30"><name pos:start="149:21" pos:end="149:21">s</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:30">nb_args</name></name> <operator pos:start="149:32" pos:end="149:32">&lt;</operator> <name pos:start="149:34" pos:end="149:44">MAX_NB_ARGS</name></expr>)</condition><block type="pseudo" pos:start="151:21" pos:end="151:92"><block_content pos:start="151:21" pos:end="151:92">

                    <expr_stmt pos:start="151:21" pos:end="151:92"><expr pos:start="151:21" pos:end="151:91"><name pos:start="151:21" pos:end="151:39"><name pos:start="151:21" pos:end="151:21">s</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:27">args</name><index pos:start="151:28" pos:end="151:39">[<expr pos:start="151:29" pos:end="151:38"><name pos:start="151:29" pos:end="151:38"><name pos:start="151:29" pos:end="151:29">s</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:38">nb_args</name></name></expr>]</index></name> <operator pos:start="151:41" pos:end="151:41">=</operator> <call pos:start="151:43" pos:end="151:71"><name pos:start="151:43" pos:end="151:47">FFMAX</name><argument_list pos:start="151:48" pos:end="151:71">(<argument pos:start="151:49" pos:end="151:67"><expr pos:start="151:49" pos:end="151:67"><name pos:start="151:49" pos:end="151:67"><name pos:start="151:49" pos:end="151:49">s</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:55">args</name><index pos:start="151:56" pos:end="151:67">[<expr pos:start="151:57" pos:end="151:66"><name pos:start="151:57" pos:end="151:66"><name pos:start="151:57" pos:end="151:57">s</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:66">nb_args</name></name></expr>]</index></name></expr></argument>, <argument pos:start="151:70" pos:end="151:70"><expr pos:start="151:70" pos:end="151:70"><literal type="number" pos:start="151:70" pos:end="151:70">0</literal></expr></argument>)</argument_list></call> <operator pos:start="151:73" pos:end="151:73">*</operator> <literal type="number" pos:start="151:75" pos:end="151:78">10</literal> <operator pos:start="151:78" pos:end="151:78">+</operator> <name pos:start="151:80" pos:end="151:85"><name pos:start="151:80" pos:end="151:82">buf</name><index pos:start="151:83" pos:end="151:85">[<expr pos:start="151:84" pos:end="151:84"><literal type="number" pos:start="151:84" pos:end="151:84">0</literal></expr>]</index></name> <operator pos:start="151:87" pos:end="151:87">-</operator> <literal type="char" pos:start="151:89" pos:end="151:91">'0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="153:17" pos:end="153:22">break;</break>

            <case pos:start="155:13" pos:end="155:21">case <expr pos:start="155:18" pos:end="155:20"><literal type="char" pos:start="155:18" pos:end="155:20">';'</literal></expr>:</case>

                <expr_stmt pos:start="157:17" pos:end="157:29"><expr pos:start="157:17" pos:end="157:28"><name pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:17">s</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:26">nb_args</name></name><operator pos:start="157:27" pos:end="157:28">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="161:44"><if pos:start="159:17" pos:end="161:44">if <condition pos:start="159:20" pos:end="159:45">(<expr pos:start="159:21" pos:end="159:44"><name pos:start="159:21" pos:end="159:30"><name pos:start="159:21" pos:end="159:21">s</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:30">nb_args</name></name> <operator pos:start="159:32" pos:end="159:32">&lt;</operator> <name pos:start="159:34" pos:end="159:44">MAX_NB_ARGS</name></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:44"><block_content pos:start="161:21" pos:end="161:44">

                    <expr_stmt pos:start="161:21" pos:end="161:44"><expr pos:start="161:21" pos:end="161:43"><name pos:start="161:21" pos:end="161:39"><name pos:start="161:21" pos:end="161:21">s</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:27">args</name><index pos:start="161:28" pos:end="161:39">[<expr pos:start="161:29" pos:end="161:38"><name pos:start="161:29" pos:end="161:38"><name pos:start="161:29" pos:end="161:29">s</name><operator pos:start="161:30" pos:end="161:31">-&gt;</operator><name pos:start="161:32" pos:end="161:38">nb_args</name></name></expr>]</index></name> <operator pos:start="161:41" pos:end="161:41">=</operator> <literal type="number" pos:start="161:43" pos:end="161:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <break pos:start="163:17" pos:end="163:22">break;</break>

            <case pos:start="165:13" pos:end="165:21">case <expr pos:start="165:18" pos:end="165:20"><literal type="char" pos:start="165:18" pos:end="165:20">'M'</literal></expr>:</case>

                <expr_stmt pos:start="167:17" pos:end="167:48"><expr pos:start="167:17" pos:end="167:47"><name pos:start="167:17" pos:end="167:24"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:24">state</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <name pos:start="167:28" pos:end="167:47">STATE_MUSIC_PREAMBLE</name></expr>;</expr_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            <case pos:start="171:13" pos:end="171:21">case <expr pos:start="171:18" pos:end="171:20"><literal type="char" pos:start="171:18" pos:end="171:20">'='</literal></expr>:</case> <case pos:start="171:23" pos:end="171:31">case <expr pos:start="171:28" pos:end="171:30"><literal type="char" pos:start="171:28" pos:end="171:30">'?'</literal></expr>:</case>

                <comment type="block" pos:start="173:17" pos:end="173:28">/* ignore */</comment>

                <break pos:start="175:17" pos:end="175:22">break;</break>

            <default pos:start="177:13" pos:end="177:20">default:</default>

                <if_stmt pos:start="179:17" pos:end="181:86"><if pos:start="179:17" pos:end="181:86">if <condition pos:start="179:20" pos:end="179:45">(<expr pos:start="179:21" pos:end="179:44"><name pos:start="179:21" pos:end="179:30"><name pos:start="179:21" pos:end="179:21">s</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:30">nb_args</name></name> <operator pos:start="179:32" pos:end="179:32">&gt;</operator> <name pos:start="179:34" pos:end="179:44">MAX_NB_ARGS</name></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:86"><block_content pos:start="181:21" pos:end="181:86">

                    <expr_stmt pos:start="181:21" pos:end="181:86"><expr pos:start="181:21" pos:end="181:85"><call pos:start="181:21" pos:end="181:85"><name pos:start="181:21" pos:end="181:26">av_log</name><argument_list pos:start="181:27" pos:end="181:85">(<argument pos:start="181:28" pos:end="181:32"><expr pos:start="181:28" pos:end="181:32"><name pos:start="181:28" pos:end="181:32">avctx</name></expr></argument>, <argument pos:start="181:35" pos:end="181:48"><expr pos:start="181:35" pos:end="181:48"><name pos:start="181:35" pos:end="181:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="181:51" pos:end="181:72"><expr pos:start="181:51" pos:end="181:72"><literal type="string" pos:start="181:51" pos:end="181:72">"args overflow (%i)\n"</literal></expr></argument>, <argument pos:start="181:75" pos:end="181:84"><expr pos:start="181:75" pos:end="181:84"><name pos:start="181:75" pos:end="181:84"><name pos:start="181:75" pos:end="181:75">s</name><operator pos:start="181:76" pos:end="181:77">-&gt;</operator><name pos:start="181:78" pos:end="181:84">nb_args</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="183:17" pos:end="185:33"><if pos:start="183:17" pos:end="185:33">if <condition pos:start="183:20" pos:end="183:73">(<expr pos:start="183:21" pos:end="183:72"><name pos:start="183:21" pos:end="183:30"><name pos:start="183:21" pos:end="183:21">s</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:30">nb_args</name></name> <operator pos:start="183:32" pos:end="183:32">&lt;</operator> <name pos:start="183:34" pos:end="183:44">MAX_NB_ARGS</name> <operator pos:start="183:46" pos:end="183:47">&amp;&amp;</operator> <name pos:start="183:49" pos:end="183:67"><name pos:start="183:49" pos:end="183:49">s</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:55">args</name><index pos:start="183:56" pos:end="183:67">[<expr pos:start="183:57" pos:end="183:66"><name pos:start="183:57" pos:end="183:66"><name pos:start="183:57" pos:end="183:57">s</name><operator pos:start="183:58" pos:end="183:59">-&gt;</operator><name pos:start="183:60" pos:end="183:66">nb_args</name></name></expr>]</index></name> <operator pos:start="183:69" pos:end="183:70">&gt;=</operator> <literal type="number" pos:start="183:72" pos:end="183:72">0</literal></expr>)</condition><block type="pseudo" pos:start="185:21" pos:end="185:33"><block_content pos:start="185:21" pos:end="185:33">

                    <expr_stmt pos:start="185:21" pos:end="185:33"><expr pos:start="185:21" pos:end="185:32"><name pos:start="185:21" pos:end="185:30"><name pos:start="185:21" pos:end="185:21">s</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:30">nb_args</name></name><operator pos:start="185:31" pos:end="185:32">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="187:17" pos:end="189:31"><if pos:start="187:17" pos:end="189:31">if <condition pos:start="187:20" pos:end="187:60">(<expr pos:start="187:21" pos:end="187:59"><operator pos:start="187:21" pos:end="187:21">(</operator><name pos:start="187:22" pos:end="187:24">ret</name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:54"><name pos:start="187:28" pos:end="187:39">execute_code</name><argument_list pos:start="187:40" pos:end="187:54">(<argument pos:start="187:41" pos:end="187:45"><expr pos:start="187:41" pos:end="187:45"><name pos:start="187:41" pos:end="187:45">avctx</name></expr></argument>, <argument pos:start="187:48" pos:end="187:53"><expr pos:start="187:48" pos:end="187:53"><name pos:start="187:48" pos:end="187:53"><name pos:start="187:48" pos:end="187:50">buf</name><index pos:start="187:51" pos:end="187:53">[<expr pos:start="187:52" pos:end="187:52"><literal type="number" pos:start="187:52" pos:end="187:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="187:55" pos:end="187:55">)</operator> <operator pos:start="187:57" pos:end="187:57">&lt;</operator> <literal type="number" pos:start="187:59" pos:end="187:59">0</literal></expr>)</condition><block type="pseudo" pos:start="189:21" pos:end="189:31"><block_content pos:start="189:21" pos:end="189:31">

                    <return pos:start="189:21" pos:end="189:31">return <expr pos:start="189:28" pos:end="189:30"><name pos:start="189:28" pos:end="189:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:40"><expr pos:start="191:17" pos:end="191:39"><name pos:start="191:17" pos:end="191:24"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:24">state</name></name> <operator pos:start="191:26" pos:end="191:26">=</operator> <name pos:start="191:28" pos:end="191:39">STATE_NORMAL</name></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:34">case <expr pos:start="197:14" pos:end="197:33"><name pos:start="197:14" pos:end="197:33">STATE_MUSIC_PREAMBLE</name></expr>:</case>

            <if_stmt pos:start="199:13" pos:end="201:40"><if pos:start="199:13" pos:end="201:40">if <condition pos:start="199:16" pos:end="199:49">(<expr pos:start="199:17" pos:end="199:48"><name pos:start="199:17" pos:end="199:22"><name pos:start="199:17" pos:end="199:19">buf</name><index pos:start="199:20" pos:end="199:22">[<expr pos:start="199:21" pos:end="199:21"><literal type="number" pos:start="199:21" pos:end="199:21">0</literal></expr>]</index></name> <operator pos:start="199:24" pos:end="199:25">==</operator> <literal type="number" pos:start="199:27" pos:end="199:30">0x0E</literal> <operator pos:start="199:32" pos:end="199:33">||</operator> <name pos:start="199:35" pos:end="199:40"><name pos:start="199:35" pos:end="199:37">buf</name><index pos:start="199:38" pos:end="199:40">[<expr pos:start="199:39" pos:end="199:39"><literal type="number" pos:start="199:39" pos:end="199:39">0</literal></expr>]</index></name> <operator pos:start="199:42" pos:end="199:43">==</operator> <literal type="number" pos:start="199:45" pos:end="199:48">0x1B</literal></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:40"><block_content pos:start="201:17" pos:end="201:40">

                <expr_stmt pos:start="201:17" pos:end="201:40"><expr pos:start="201:17" pos:end="201:39"><name pos:start="201:17" pos:end="201:24"><name pos:start="201:17" pos:end="201:17">s</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:24">state</name></name> <operator pos:start="201:26" pos:end="201:26">=</operator> <name pos:start="201:28" pos:end="201:39">STATE_NORMAL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="203:13" pos:end="203:35">/* ignore music data */</comment>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="209:9" pos:end="209:14"><expr pos:start="209:9" pos:end="209:13"><name pos:start="209:9" pos:end="209:11">buf</name><operator pos:start="209:12" pos:end="209:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="215:5" pos:end="215:19"><expr pos:start="215:5" pos:end="215:18"><operator pos:start="215:5" pos:end="215:5">*</operator><name pos:start="215:6" pos:end="215:14">got_frame</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <literal type="number" pos:start="215:18" pos:end="215:18">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="217:5" pos:end="219:19"><if pos:start="217:5" pos:end="219:19">if <condition pos:start="217:8" pos:end="217:49">(<expr pos:start="217:9" pos:end="217:48"><operator pos:start="217:9" pos:end="217:9">(</operator><name pos:start="217:10" pos:end="217:12">ret</name> <operator pos:start="217:14" pos:end="217:14">=</operator> <call pos:start="217:16" pos:end="217:43"><name pos:start="217:16" pos:end="217:27">av_frame_ref</name><argument_list pos:start="217:28" pos:end="217:43">(<argument pos:start="217:29" pos:end="217:32"><expr pos:start="217:29" pos:end="217:32"><name pos:start="217:29" pos:end="217:32">data</name></expr></argument>, <argument pos:start="217:35" pos:end="217:42"><expr pos:start="217:35" pos:end="217:42"><name pos:start="217:35" pos:end="217:42"><name pos:start="217:35" pos:end="217:35">s</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:42">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="217:44" pos:end="217:44">)</operator> <operator pos:start="217:46" pos:end="217:46">&lt;</operator> <literal type="number" pos:start="217:48" pos:end="217:48">0</literal></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="219:19"><block_content pos:start="219:9" pos:end="219:19">

        <return pos:start="219:9" pos:end="219:19">return <expr pos:start="219:16" pos:end="219:18"><name pos:start="219:16" pos:end="219:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="221:5" pos:end="221:20">return <expr pos:start="221:12" pos:end="221:19"><name pos:start="221:12" pos:end="221:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
