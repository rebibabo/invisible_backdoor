<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14062.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">QObject</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:29">parse_literal</name><parameter_list pos:start="1:30" pos:end="1:54">(<parameter pos:start="1:31" pos:end="1:53"><decl pos:start="1:31" pos:end="1:53"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:47">JSONParserContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">ctxt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:16">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">token</name></decl>, <decl pos:start="5:21" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">JSONParserContext</name></type> <name pos:start="7:23" pos:end="7:32">saved_ctxt</name> <init pos:start="7:34" pos:end="7:60">= <expr pos:start="7:36" pos:end="7:60"><call pos:start="7:36" pos:end="7:60"><name pos:start="7:36" pos:end="7:54">parser_context_save</name><argument_list pos:start="7:55" pos:end="7:60">(<argument pos:start="7:56" pos:end="7:59"><expr pos:start="7:56" pos:end="7:59"><name pos:start="7:56" pos:end="7:59">ctxt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:9">token</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:42"><name pos:start="11:13" pos:end="11:36">parser_context_pop_token</name><argument_list pos:start="11:37" pos:end="11:42">(<argument pos:start="11:38" pos:end="11:41"><expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:13">token</name> <operator pos:start="13:15" pos:end="13:16">==</operator> <name pos:start="13:18" pos:end="13:21">NULL</name></expr>)</condition> <block pos:start="13:24" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <goto pos:start="15:9" pos:end="15:17">goto <name pos:start="15:14" pos:end="15:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="47:5">switch <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><call pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:26">token_get_type</name><argument_list pos:start="21:27" pos:end="21:33">(<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">token</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:36" pos:end="47:5">{<block_content pos:start="23:5" pos:end="45:17">

    <case pos:start="23:5" pos:end="23:21">case <expr pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:20">JSON_STRING</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:61"><expr pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:11">obj</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:60"><name pos:start="25:15" pos:end="25:21">QOBJECT</name><argument_list pos:start="25:22" pos:end="25:60">(<argument pos:start="25:23" pos:end="25:59"><expr pos:start="25:23" pos:end="25:59"><call pos:start="25:23" pos:end="25:59"><name pos:start="25:23" pos:end="25:46">qstring_from_escaped_str</name><argument_list pos:start="25:47" pos:end="25:59">(<argument pos:start="25:48" pos:end="25:51"><expr pos:start="25:48" pos:end="25:51"><name pos:start="25:48" pos:end="25:51">ctxt</name></expr></argument>, <argument pos:start="25:54" pos:end="25:58"><expr pos:start="25:54" pos:end="25:58"><name pos:start="25:54" pos:end="25:58">token</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:22">case <expr pos:start="29:10" pos:end="29:21"><name pos:start="29:10" pos:end="29:21">JSON_INTEGER</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:80"><expr pos:start="31:9" pos:end="31:79"><name pos:start="31:9" pos:end="31:11">obj</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:79"><name pos:start="31:15" pos:end="31:21">QOBJECT</name><argument_list pos:start="31:22" pos:end="31:79">(<argument pos:start="31:23" pos:end="31:78"><expr pos:start="31:23" pos:end="31:78"><call pos:start="31:23" pos:end="31:78"><name pos:start="31:23" pos:end="31:35">qint_from_int</name><argument_list pos:start="31:36" pos:end="31:78">(<argument pos:start="31:37" pos:end="31:77"><expr pos:start="31:37" pos:end="31:77"><call pos:start="31:37" pos:end="31:77"><name pos:start="31:37" pos:end="31:43">strtoll</name><argument_list pos:start="31:44" pos:end="31:77">(<argument pos:start="31:45" pos:end="31:66"><expr pos:start="31:45" pos:end="31:66"><call pos:start="31:45" pos:end="31:66"><name pos:start="31:45" pos:end="31:59">token_get_value</name><argument_list pos:start="31:60" pos:end="31:66">(<argument pos:start="31:61" pos:end="31:65"><expr pos:start="31:61" pos:end="31:65"><name pos:start="31:61" pos:end="31:65">token</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:69" pos:end="31:72"><expr pos:start="31:69" pos:end="31:72"><name pos:start="31:69" pos:end="31:72">NULL</name></expr></argument>, <argument pos:start="31:75" pos:end="31:76"><expr pos:start="31:75" pos:end="31:76"><literal type="number" pos:start="31:75" pos:end="31:76">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:20">case <expr pos:start="35:10" pos:end="35:19"><name pos:start="35:10" pos:end="35:19">JSON_FLOAT</name></expr>:</case>

        <comment type="block" pos:start="37:9" pos:end="37:39">/* FIXME dependent on locale */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:80"><expr pos:start="39:9" pos:end="39:79"><name pos:start="39:9" pos:end="39:11">obj</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:79"><name pos:start="39:15" pos:end="39:21">QOBJECT</name><argument_list pos:start="39:22" pos:end="39:79">(<argument pos:start="39:23" pos:end="39:78"><expr pos:start="39:23" pos:end="39:78"><call pos:start="39:23" pos:end="39:78"><name pos:start="39:23" pos:end="39:40">qfloat_from_double</name><argument_list pos:start="39:41" pos:end="39:78">(<argument pos:start="39:42" pos:end="39:77"><expr pos:start="39:42" pos:end="39:77"><call pos:start="39:42" pos:end="39:77"><name pos:start="39:42" pos:end="39:47">strtod</name><argument_list pos:start="39:48" pos:end="39:77">(<argument pos:start="39:49" pos:end="39:70"><expr pos:start="39:49" pos:end="39:70"><call pos:start="39:49" pos:end="39:70"><name pos:start="39:49" pos:end="39:63">token_get_value</name><argument_list pos:start="39:64" pos:end="39:70">(<argument pos:start="39:65" pos:end="39:69"><expr pos:start="39:65" pos:end="39:69"><name pos:start="39:65" pos:end="39:69">token</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:73" pos:end="39:76"><expr pos:start="39:73" pos:end="39:76"><name pos:start="39:73" pos:end="39:76">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <default pos:start="43:5" pos:end="43:12">default:</default>

        <goto pos:start="45:9" pos:end="45:17">goto <name pos:start="45:14" pos:end="45:16">out</name>;</goto>

    </block_content>}</block></switch>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">obj</name></expr>;</return>



<label pos:start="55:1" pos:end="55:4"><name pos:start="55:1" pos:end="55:3">out</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><call pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:26">parser_context_restore</name><argument_list pos:start="57:27" pos:end="57:44">(<argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">ctxt</name></expr></argument>, <argument pos:start="57:34" pos:end="57:43"><expr pos:start="57:34" pos:end="57:43"><name pos:start="57:34" pos:end="57:43">saved_ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:16">return <expr pos:start="61:12" pos:end="61:15"><name pos:start="61:12" pos:end="61:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
