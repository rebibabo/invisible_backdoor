<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7774.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">msnwc_tcp_read_packet</name><parameter_list pos:start="1:33" pos:end="1:69">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">ctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:63">AVPacket</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:30">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:29">= <expr pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:25">ctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:21">keyframe</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">size</name></decl>, <decl pos:start="9:20" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:20" pos:end="9:28">timestamp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><call pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:13">avio_skip</name><argument_list pos:start="13:14" pos:end="13:20">(<argument pos:start="13:15" pos:end="13:16"><expr pos:start="13:15" pos:end="13:16"><name pos:start="13:15" pos:end="13:16">pb</name></expr></argument>, <argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:23" pos:end="13:56">/* one byte has been read ahead */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><call pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:13">avio_skip</name><argument_list pos:start="15:14" pos:end="15:20">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>, <argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:13">avio_skip</name><argument_list pos:start="17:14" pos:end="17:20">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">pb</name></expr></argument>, <argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:12">keyframe</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:24">avio_rl16</name><argument_list pos:start="19:25" pos:end="19:28">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><name pos:start="19:26" pos:end="19:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:8">size</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="21:24"><name pos:start="21:12" pos:end="21:20">avio_rl32</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:13">avio_skip</name><argument_list pos:start="23:14" pos:end="23:20">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">pb</name></expr></argument>, <argument pos:start="23:19" pos:end="23:19"><expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><call pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:13">avio_skip</name><argument_list pos:start="25:14" pos:end="25:20">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:13">timestamp</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:25">avio_rl32</name><argument_list pos:start="27:26" pos:end="27:29">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:18"><if pos:start="31:5" pos:end="33:18">if<condition pos:start="31:7" pos:end="31:53">(<expr pos:start="31:8" pos:end="31:52"><operator pos:start="31:8" pos:end="31:8">!</operator><name pos:start="31:9" pos:end="31:12">size</name> <operator pos:start="31:14" pos:end="31:15">||</operator> <call pos:start="31:17" pos:end="31:44"><name pos:start="31:17" pos:end="31:29">av_get_packet</name><argument_list pos:start="31:30" pos:end="31:44">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">pb</name></expr></argument>, <argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">pkt</name></expr></argument>, <argument pos:start="31:40" pos:end="31:43"><expr pos:start="31:40" pos:end="31:43"><name pos:start="31:40" pos:end="31:43">size</name></expr></argument>)</argument_list></call> <operator pos:start="31:46" pos:end="31:47">!=</operator> <name pos:start="31:49" pos:end="31:52">size</name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><call pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:13">avio_skip</name><argument_list pos:start="37:14" pos:end="37:20">(<argument pos:start="37:15" pos:end="37:16"><expr pos:start="37:15" pos:end="37:16"><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:23" pos:end="37:79">/* Read ahead one byte of struct size like read_header */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:7">pkt</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:12">pts</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:24">timestamp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:25"><expr pos:start="43:5" pos:end="43:24"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:7">pkt</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:12">dts</name></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:24">timestamp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:26"><expr pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:7">pkt</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:21">stream_index</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="51:68">/* Some aMsn generated videos (or was it Mercury Messenger?) don't set

     * this bit and rely on the codec to get keyframe information */</comment>

    <if_stmt pos:start="53:5" pos:end="55:38"><if pos:start="53:5" pos:end="55:38">if<condition pos:start="53:7" pos:end="53:18">(<expr pos:start="53:8" pos:end="53:17"><name pos:start="53:8" pos:end="53:15">keyframe</name><operator pos:start="53:16" pos:end="53:16">&amp;</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:38"><block_content pos:start="55:9" pos:end="55:38">

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">flags</name></name> <operator pos:start="55:20" pos:end="55:21">|=</operator> <name pos:start="55:23" pos:end="55:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:30">return <expr pos:start="59:12" pos:end="59:29"><name pos:start="59:12" pos:end="59:22">HEADER_SIZE</name> <operator pos:start="59:24" pos:end="59:24">+</operator> <name pos:start="59:26" pos:end="59:29">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
