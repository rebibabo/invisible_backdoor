<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19454.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:33">fimd_swap_data</name><parameter_list pos:start="1:34" pos:end="1:72">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:42">unsigned</name> <name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:55">swap_ctl</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:65">uint64_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:14">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:14">x</name> <init pos:start="9:16" pos:end="9:22">= <expr pos:start="9:18" pos:end="9:22"><operator pos:start="9:18" pos:end="9:18">*</operator><name pos:start="9:19" pos:end="9:22">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:41">(<expr pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:16">swap_ctl</name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <name pos:start="13:20" pos:end="13:40">FIMD_WINCON_SWAP_BITS</name></expr>)</condition> <block pos:start="13:43" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:16">

        <expr_stmt pos:start="15:9" pos:end="15:16"><expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">res</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</expr_stmt>

        <for pos:start="17:9" pos:end="25:9">for <control pos:start="17:13" pos:end="17:32">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:27"><expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <literal type="number" pos:start="17:25" pos:end="17:26">64</literal></expr>;</condition> <incr pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:29">i</name><operator pos:start="17:30" pos:end="17:31">++</operator></expr></incr>)</control> <block pos:start="17:34" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:13">

            <if_stmt pos:start="19:13" pos:end="23:13"><if pos:start="19:13" pos:end="23:13">if <condition pos:start="19:16" pos:end="19:39">(<expr pos:start="19:17" pos:end="19:38"><name pos:start="19:17" pos:end="19:17">x</name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <operator pos:start="19:21" pos:end="19:21">(</operator><literal type="number" pos:start="19:22" pos:end="19:25">1ULL</literal> <operator pos:start="19:27" pos:end="19:28">&lt;&lt;</operator> <operator pos:start="19:30" pos:end="19:30">(</operator><literal type="number" pos:start="19:31" pos:end="19:34">64</literal> <operator pos:start="19:34" pos:end="19:34">-</operator> <name pos:start="19:36" pos:end="19:36">i</name><operator pos:start="19:37" pos:end="19:37">)</operator><operator pos:start="19:38" pos:end="19:38">)</operator></expr>)</condition> <block pos:start="19:41" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:35">

                <expr_stmt pos:start="21:17" pos:end="21:35"><expr pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:19">res</name> <operator pos:start="21:21" pos:end="21:22">|=</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><literal type="number" pos:start="21:25" pos:end="21:28">1ULL</literal> <operator pos:start="21:30" pos:end="21:31">&lt;&lt;</operator> <name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:34">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">x</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:15">res</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:41">(<expr pos:start="33:9" pos:end="33:40"><name pos:start="33:9" pos:end="33:16">swap_ctl</name> <operator pos:start="33:18" pos:end="33:18">&amp;</operator> <name pos:start="33:20" pos:end="33:40">FIMD_WINCON_SWAP_BYTE</name></expr>)</condition> <block pos:start="33:43" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <expr_stmt pos:start="35:9" pos:end="35:23"><expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">x</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:19">bswap64</name><argument_list pos:start="35:20" pos:end="35:22">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:42">(<expr pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:16">swap_ctl</name> <operator pos:start="41:18" pos:end="41:18">&amp;</operator> <name pos:start="41:20" pos:end="41:41">FIMD_WINCON_SWAP_HWORD</name></expr>)</condition> <block pos:start="41:44" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:48">

        <expr_stmt pos:start="43:9" pos:end="49:48"><expr pos:start="43:9" pos:end="49:47"><name pos:start="43:9" pos:end="43:9">x</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <operator pos:start="43:13" pos:end="43:13">(</operator><operator pos:start="43:14" pos:end="43:14">(</operator><name pos:start="43:15" pos:end="43:15">x</name> <operator pos:start="43:17" pos:end="43:17">&amp;</operator> <literal type="number" pos:start="43:19" pos:end="43:39">0x000000000000FFFFULL</literal><operator pos:start="43:40" pos:end="43:40">)</operator> <operator pos:start="43:42" pos:end="43:43">&lt;&lt;</operator> <literal type="number" pos:start="43:45" pos:end="43:46">48</literal><operator pos:start="43:47" pos:end="43:47">)</operator> <operator pos:start="43:49" pos:end="43:49">|</operator>

            <operator pos:start="45:13" pos:end="45:13">(</operator><operator pos:start="45:14" pos:end="45:14">(</operator><name pos:start="45:15" pos:end="45:15">x</name> <operator pos:start="45:17" pos:end="45:17">&amp;</operator> <literal type="number" pos:start="45:19" pos:end="45:39">0x00000000FFFF0000ULL</literal><operator pos:start="45:40" pos:end="45:40">)</operator> <operator pos:start="45:42" pos:end="45:43">&lt;&lt;</operator> <literal type="number" pos:start="45:45" pos:end="45:46">16</literal><operator pos:start="45:47" pos:end="45:47">)</operator> <operator pos:start="45:49" pos:end="45:49">|</operator>

            <operator pos:start="47:13" pos:end="47:13">(</operator><operator pos:start="47:14" pos:end="47:14">(</operator><name pos:start="47:15" pos:end="47:15">x</name> <operator pos:start="47:17" pos:end="47:17">&amp;</operator> <literal type="number" pos:start="47:19" pos:end="47:39">0x0000FFFF00000000ULL</literal><operator pos:start="47:40" pos:end="47:40">)</operator> <operator pos:start="47:42" pos:end="47:43">&gt;&gt;</operator> <literal type="number" pos:start="47:45" pos:end="47:46">16</literal><operator pos:start="47:47" pos:end="47:47">)</operator> <operator pos:start="47:49" pos:end="47:49">|</operator>

            <operator pos:start="49:13" pos:end="49:13">(</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:15">x</name> <operator pos:start="49:17" pos:end="49:17">&amp;</operator> <literal type="number" pos:start="49:19" pos:end="49:39">0xFFFF000000000000ULL</literal><operator pos:start="49:40" pos:end="49:40">)</operator> <operator pos:start="49:42" pos:end="49:43">&gt;&gt;</operator> <literal type="number" pos:start="49:45" pos:end="49:46">48</literal><operator pos:start="49:47" pos:end="49:47">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:41">(<expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:16">swap_ctl</name> <operator pos:start="55:18" pos:end="55:18">&amp;</operator> <name pos:start="55:20" pos:end="55:40">FIMD_WINCON_SWAP_WORD</name></expr>)</condition> <block pos:start="55:43" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:48">

        <expr_stmt pos:start="57:9" pos:end="59:48"><expr pos:start="57:9" pos:end="59:47"><name pos:start="57:9" pos:end="57:9">x</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <operator pos:start="57:13" pos:end="57:13">(</operator><operator pos:start="57:14" pos:end="57:14">(</operator><name pos:start="57:15" pos:end="57:15">x</name> <operator pos:start="57:17" pos:end="57:17">&amp;</operator> <literal type="number" pos:start="57:19" pos:end="57:39">0x00000000FFFFFFFFULL</literal><operator pos:start="57:40" pos:end="57:40">)</operator> <operator pos:start="57:42" pos:end="57:43">&lt;&lt;</operator> <literal type="number" pos:start="57:45" pos:end="57:46">32</literal><operator pos:start="57:47" pos:end="57:47">)</operator> <operator pos:start="57:49" pos:end="57:49">|</operator>

            <operator pos:start="59:13" pos:end="59:13">(</operator><operator pos:start="59:14" pos:end="59:14">(</operator><name pos:start="59:15" pos:end="59:15">x</name> <operator pos:start="59:17" pos:end="59:17">&amp;</operator> <literal type="number" pos:start="59:19" pos:end="59:39">0xFFFFFFFF00000000ULL</literal><operator pos:start="59:40" pos:end="59:40">)</operator> <operator pos:start="59:42" pos:end="59:43">&gt;&gt;</operator> <literal type="number" pos:start="59:45" pos:end="59:46">32</literal><operator pos:start="59:47" pos:end="59:47">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:14"><expr pos:start="65:5" pos:end="65:13"><operator pos:start="65:5" pos:end="65:5">*</operator><name pos:start="65:6" pos:end="65:9">data</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:13">x</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
