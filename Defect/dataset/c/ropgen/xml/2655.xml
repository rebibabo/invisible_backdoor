<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2655.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">decode_plane_bitstream</name><parameter_list pos:start="1:35" pos:end="1:72">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:46">HYuvContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:60"><decl pos:start="1:52" pos:end="1:60"><type pos:start="1:52" pos:end="1:60"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:60">count</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:71">plane</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:15"><expr pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:9">count</name> <operator pos:start="9:11" pos:end="9:12">/=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">2</literal></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="81:5"><if pos:start="13:5" pos:end="37:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">bps</name></name> <operator pos:start="13:16" pos:end="13:17">&lt;=</operator> <literal type="number" pos:start="13:19" pos:end="13:19">8</literal></expr>)</condition> <block pos:start="13:22" pos:end="37:5">{<block_content pos:start="15:9" pos:end="35:33">

        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><call pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:19">OPEN_READER</name><argument_list pos:start="15:20" pos:end="15:31">(<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><name pos:start="15:21" pos:end="15:22">re</name></expr></argument>, <argument pos:start="15:25" pos:end="15:30"><expr pos:start="15:25" pos:end="15:30"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="33:9"><if pos:start="17:9" pos:end="25:9">if <condition pos:start="17:12" pos:end="17:56">(<expr pos:start="17:13" pos:end="17:55"><name pos:start="17:13" pos:end="17:17">count</name> <operator pos:start="17:19" pos:end="17:20">&gt;=</operator> <operator pos:start="17:22" pos:end="17:22">(</operator><call pos:start="17:23" pos:end="17:43"><name pos:start="17:23" pos:end="17:35">get_bits_left</name><argument_list pos:start="17:36" pos:end="17:43">(<argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:42"><name pos:start="17:38" pos:end="17:38">s</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="17:44" pos:end="17:44">)</operator> <operator pos:start="17:46" pos:end="17:46">/</operator> <operator pos:start="17:48" pos:end="17:48">(</operator><literal type="number" pos:start="17:49" pos:end="17:50">32</literal> <operator pos:start="17:52" pos:end="17:52">*</operator> <literal type="number" pos:start="17:54" pos:end="17:54">2</literal><operator pos:start="17:55" pos:end="17:55">)</operator></expr>)</condition> <block pos:start="17:58" pos:end="25:9">{<block_content pos:start="19:13" pos:end="23:13">

            <for pos:start="19:13" pos:end="23:13">for <control pos:start="19:17" pos:end="19:68">(<init pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:18">i</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</init> <condition pos:start="19:25" pos:end="19:63"><expr pos:start="19:25" pos:end="19:62"><name pos:start="19:25" pos:end="19:60"><name pos:start="19:25" pos:end="19:25">i</name> <argument_list type="generic" pos:start="19:27" pos:end="19:60">&lt; <argument pos:start="19:29" pos:end="19:58"><expr pos:start="19:29" pos:end="19:58"><name pos:start="19:29" pos:end="19:33">count</name> <operator pos:start="19:35" pos:end="19:36">&amp;&amp;</operator> <name pos:start="19:38" pos:end="19:50">get_bits_left</name><operator pos:start="19:51" pos:end="19:51">(</operator><operator pos:start="19:52" pos:end="19:52">&amp;</operator><name pos:start="19:53" pos:end="19:57"><name pos:start="19:53" pos:end="19:53">s</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:57">gb</name></name><operator pos:start="19:58" pos:end="19:58">)</operator></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="19:62" pos:end="19:62">0</literal></expr>;</condition> <incr pos:start="19:65" pos:end="19:67"><expr pos:start="19:65" pos:end="19:67"><name pos:start="19:65" pos:end="19:65">i</name><operator pos:start="19:66" pos:end="19:67">++</operator></expr></incr>)</control> <block pos:start="19:70" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:90">

                <expr_stmt pos:start="21:17" pos:end="21:90"><expr pos:start="21:17" pos:end="21:89"><call pos:start="21:17" pos:end="21:89"><name pos:start="21:17" pos:end="21:31">READ_2PIX_PLANE</name><argument_list pos:start="21:32" pos:end="21:89">(<argument pos:start="21:33" pos:end="21:49"><expr pos:start="21:33" pos:end="21:49"><name pos:start="21:33" pos:end="21:49"><name pos:start="21:33" pos:end="21:33">s</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">temp</name><index pos:start="21:40" pos:end="21:42">[<expr pos:start="21:41" pos:end="21:41"><literal type="number" pos:start="21:41" pos:end="21:41">0</literal></expr>]</index><index pos:start="21:43" pos:end="21:49">[<expr pos:start="21:44" pos:end="21:48"><literal type="number" pos:start="21:44" pos:end="21:44">2</literal> <operator pos:start="21:46" pos:end="21:46">*</operator> <name pos:start="21:48" pos:end="21:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="21:52" pos:end="21:72"><expr pos:start="21:52" pos:end="21:72"><name pos:start="21:52" pos:end="21:72"><name pos:start="21:52" pos:end="21:52">s</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:58">temp</name><index pos:start="21:59" pos:end="21:61">[<expr pos:start="21:60" pos:end="21:60"><literal type="number" pos:start="21:60" pos:end="21:60">0</literal></expr>]</index><index pos:start="21:62" pos:end="21:72">[<expr pos:start="21:63" pos:end="21:71"><literal type="number" pos:start="21:63" pos:end="21:63">2</literal> <operator pos:start="21:65" pos:end="21:65">*</operator> <name pos:start="21:67" pos:end="21:67">i</name> <operator pos:start="21:69" pos:end="21:69">+</operator> <literal type="number" pos:start="21:71" pos:end="21:71">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="21:75" pos:end="21:79"><expr pos:start="21:75" pos:end="21:79"><name pos:start="21:75" pos:end="21:79">plane</name></expr></argument>, <argument pos:start="21:82" pos:end="21:88"><expr pos:start="21:82" pos:end="21:88"><name pos:start="21:82" pos:end="21:88">OP8bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="33:9">else <block pos:start="25:16" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:13">

            <for pos:start="27:13" pos:end="31:13">for<control pos:start="27:16" pos:end="27:34">(<init pos:start="27:17" pos:end="27:20"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:17">i</name><operator pos:start="27:18" pos:end="27:18">=</operator><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:29"><expr pos:start="27:22" pos:end="27:28"><name pos:start="27:22" pos:end="27:22">i</name><operator pos:start="27:23" pos:end="27:23">&lt;</operator><name pos:start="27:24" pos:end="27:28">count</name></expr>;</condition> <incr pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:31">i</name><operator pos:start="27:32" pos:end="27:33">++</operator></expr></incr>)</control><block pos:start="27:35" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:90">

                <expr_stmt pos:start="29:17" pos:end="29:90"><expr pos:start="29:17" pos:end="29:89"><call pos:start="29:17" pos:end="29:89"><name pos:start="29:17" pos:end="29:31">READ_2PIX_PLANE</name><argument_list pos:start="29:32" pos:end="29:89">(<argument pos:start="29:33" pos:end="29:49"><expr pos:start="29:33" pos:end="29:49"><name pos:start="29:33" pos:end="29:49"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:39">temp</name><index pos:start="29:40" pos:end="29:42">[<expr pos:start="29:41" pos:end="29:41"><literal type="number" pos:start="29:41" pos:end="29:41">0</literal></expr>]</index><index pos:start="29:43" pos:end="29:49">[<expr pos:start="29:44" pos:end="29:48"><literal type="number" pos:start="29:44" pos:end="29:44">2</literal> <operator pos:start="29:46" pos:end="29:46">*</operator> <name pos:start="29:48" pos:end="29:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:52" pos:end="29:72"><expr pos:start="29:52" pos:end="29:72"><name pos:start="29:52" pos:end="29:72"><name pos:start="29:52" pos:end="29:52">s</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:58">temp</name><index pos:start="29:59" pos:end="29:61">[<expr pos:start="29:60" pos:end="29:60"><literal type="number" pos:start="29:60" pos:end="29:60">0</literal></expr>]</index><index pos:start="29:62" pos:end="29:72">[<expr pos:start="29:63" pos:end="29:71"><literal type="number" pos:start="29:63" pos:end="29:63">2</literal> <operator pos:start="29:65" pos:end="29:65">*</operator> <name pos:start="29:67" pos:end="29:67">i</name> <operator pos:start="29:69" pos:end="29:69">+</operator> <literal type="number" pos:start="29:71" pos:end="29:71">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:75" pos:end="29:79"><expr pos:start="29:75" pos:end="29:79"><name pos:start="29:75" pos:end="29:79">plane</name></expr></argument>, <argument pos:start="29:82" pos:end="29:88"><expr pos:start="29:82" pos:end="29:88"><name pos:start="29:82" pos:end="29:88">OP8bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:20">CLOSE_READER</name><argument_list pos:start="35:21" pos:end="35:32">(<argument pos:start="35:22" pos:end="35:23"><expr pos:start="35:22" pos:end="35:23"><name pos:start="35:22" pos:end="35:23">re</name></expr></argument>, <argument pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:31"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="61:5">else if <condition pos:start="37:15" pos:end="37:28">(<expr pos:start="37:16" pos:end="37:27"><name pos:start="37:16" pos:end="37:21"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">bps</name></name> <operator pos:start="37:23" pos:end="37:24">&lt;=</operator> <literal type="number" pos:start="37:26" pos:end="37:27">14</literal></expr>)</condition> <block pos:start="37:30" pos:end="61:5">{<block_content pos:start="39:9" pos:end="59:33">

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><call pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:19">OPEN_READER</name><argument_list pos:start="39:20" pos:end="39:31">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">re</name></expr></argument>, <argument pos:start="39:25" pos:end="39:30"><expr pos:start="39:25" pos:end="39:30"><operator pos:start="39:25" pos:end="39:25">&amp;</operator><name pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="57:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:56">(<expr pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:17">count</name> <operator pos:start="41:19" pos:end="41:20">&gt;=</operator> <operator pos:start="41:22" pos:end="41:22">(</operator><call pos:start="41:23" pos:end="41:43"><name pos:start="41:23" pos:end="41:35">get_bits_left</name><argument_list pos:start="41:36" pos:end="41:43">(<argument pos:start="41:37" pos:end="41:42"><expr pos:start="41:37" pos:end="41:42"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:42"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="41:44" pos:end="41:44">)</operator> <operator pos:start="41:46" pos:end="41:46">/</operator> <operator pos:start="41:48" pos:end="41:48">(</operator><literal type="number" pos:start="41:49" pos:end="41:50">32</literal> <operator pos:start="41:52" pos:end="41:52">*</operator> <literal type="number" pos:start="41:54" pos:end="41:54">2</literal><operator pos:start="41:55" pos:end="41:55">)</operator></expr>)</condition> <block pos:start="41:58" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:13">

            <for pos:start="43:13" pos:end="47:13">for <control pos:start="43:17" pos:end="43:68">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">i</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:63"><expr pos:start="43:25" pos:end="43:62"><name pos:start="43:25" pos:end="43:60"><name pos:start="43:25" pos:end="43:25">i</name> <argument_list type="generic" pos:start="43:27" pos:end="43:60">&lt; <argument pos:start="43:29" pos:end="43:58"><expr pos:start="43:29" pos:end="43:58"><name pos:start="43:29" pos:end="43:33">count</name> <operator pos:start="43:35" pos:end="43:36">&amp;&amp;</operator> <name pos:start="43:38" pos:end="43:50">get_bits_left</name><operator pos:start="43:51" pos:end="43:51">(</operator><operator pos:start="43:52" pos:end="43:52">&amp;</operator><name pos:start="43:53" pos:end="43:57"><name pos:start="43:53" pos:end="43:53">s</name><operator pos:start="43:54" pos:end="43:55">-&gt;</operator><name pos:start="43:56" pos:end="43:57">gb</name></name><operator pos:start="43:58" pos:end="43:58">)</operator></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="43:62" pos:end="43:62">0</literal></expr>;</condition> <incr pos:start="43:65" pos:end="43:67"><expr pos:start="43:65" pos:end="43:67"><name pos:start="43:65" pos:end="43:65">i</name><operator pos:start="43:66" pos:end="43:67">++</operator></expr></incr>)</control> <block pos:start="43:70" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:95">

                <expr_stmt pos:start="45:17" pos:end="45:95"><expr pos:start="45:17" pos:end="45:94"><call pos:start="45:17" pos:end="45:94"><name pos:start="45:17" pos:end="45:31">READ_2PIX_PLANE</name><argument_list pos:start="45:32" pos:end="45:94">(<argument pos:start="45:33" pos:end="45:51"><expr pos:start="45:33" pos:end="45:51"><name pos:start="45:33" pos:end="45:51"><name pos:start="45:33" pos:end="45:33">s</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:41">temp16</name><index pos:start="45:42" pos:end="45:44">[<expr pos:start="45:43" pos:end="45:43"><literal type="number" pos:start="45:43" pos:end="45:43">0</literal></expr>]</index><index pos:start="45:45" pos:end="45:51">[<expr pos:start="45:46" pos:end="45:50"><literal type="number" pos:start="45:46" pos:end="45:46">2</literal> <operator pos:start="45:48" pos:end="45:48">*</operator> <name pos:start="45:50" pos:end="45:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="45:54" pos:end="45:76"><expr pos:start="45:54" pos:end="45:76"><name pos:start="45:54" pos:end="45:76"><name pos:start="45:54" pos:end="45:54">s</name><operator pos:start="45:55" pos:end="45:56">-&gt;</operator><name pos:start="45:57" pos:end="45:62">temp16</name><index pos:start="45:63" pos:end="45:65">[<expr pos:start="45:64" pos:end="45:64"><literal type="number" pos:start="45:64" pos:end="45:64">0</literal></expr>]</index><index pos:start="45:66" pos:end="45:76">[<expr pos:start="45:67" pos:end="45:75"><literal type="number" pos:start="45:67" pos:end="45:67">2</literal> <operator pos:start="45:69" pos:end="45:69">*</operator> <name pos:start="45:71" pos:end="45:71">i</name> <operator pos:start="45:73" pos:end="45:73">+</operator> <literal type="number" pos:start="45:75" pos:end="45:75">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="45:79" pos:end="45:83"><expr pos:start="45:79" pos:end="45:83"><name pos:start="45:79" pos:end="45:83">plane</name></expr></argument>, <argument pos:start="45:86" pos:end="45:93"><expr pos:start="45:86" pos:end="45:93"><name pos:start="45:86" pos:end="45:93">OP14bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="49:11" pos:end="57:9">else <block pos:start="49:16" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:13">

            <for pos:start="51:13" pos:end="55:13">for<control pos:start="51:16" pos:end="51:34">(<init pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:17">i</name><operator pos:start="51:18" pos:end="51:18">=</operator><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</init> <condition pos:start="51:22" pos:end="51:29"><expr pos:start="51:22" pos:end="51:28"><name pos:start="51:22" pos:end="51:22">i</name><operator pos:start="51:23" pos:end="51:23">&lt;</operator><name pos:start="51:24" pos:end="51:28">count</name></expr>;</condition> <incr pos:start="51:31" pos:end="51:33"><expr pos:start="51:31" pos:end="51:33"><name pos:start="51:31" pos:end="51:31">i</name><operator pos:start="51:32" pos:end="51:33">++</operator></expr></incr>)</control><block pos:start="51:35" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:95">

                <expr_stmt pos:start="53:17" pos:end="53:95"><expr pos:start="53:17" pos:end="53:94"><call pos:start="53:17" pos:end="53:94"><name pos:start="53:17" pos:end="53:31">READ_2PIX_PLANE</name><argument_list pos:start="53:32" pos:end="53:94">(<argument pos:start="53:33" pos:end="53:51"><expr pos:start="53:33" pos:end="53:51"><name pos:start="53:33" pos:end="53:51"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:41">temp16</name><index pos:start="53:42" pos:end="53:44">[<expr pos:start="53:43" pos:end="53:43"><literal type="number" pos:start="53:43" pos:end="53:43">0</literal></expr>]</index><index pos:start="53:45" pos:end="53:51">[<expr pos:start="53:46" pos:end="53:50"><literal type="number" pos:start="53:46" pos:end="53:46">2</literal> <operator pos:start="53:48" pos:end="53:48">*</operator> <name pos:start="53:50" pos:end="53:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:54" pos:end="53:76"><expr pos:start="53:54" pos:end="53:76"><name pos:start="53:54" pos:end="53:76"><name pos:start="53:54" pos:end="53:54">s</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:62">temp16</name><index pos:start="53:63" pos:end="53:65">[<expr pos:start="53:64" pos:end="53:64"><literal type="number" pos:start="53:64" pos:end="53:64">0</literal></expr>]</index><index pos:start="53:66" pos:end="53:76">[<expr pos:start="53:67" pos:end="53:75"><literal type="number" pos:start="53:67" pos:end="53:67">2</literal> <operator pos:start="53:69" pos:end="53:69">*</operator> <name pos:start="53:71" pos:end="53:71">i</name> <operator pos:start="53:73" pos:end="53:73">+</operator> <literal type="number" pos:start="53:75" pos:end="53:75">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:79" pos:end="53:83"><expr pos:start="53:79" pos:end="53:83"><name pos:start="53:79" pos:end="53:83">plane</name></expr></argument>, <argument pos:start="53:86" pos:end="53:93"><expr pos:start="53:86" pos:end="53:93"><name pos:start="53:86" pos:end="53:93">OP14bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><call pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:20">CLOSE_READER</name><argument_list pos:start="59:21" pos:end="59:32">(<argument pos:start="59:22" pos:end="59:23"><expr pos:start="59:22" pos:end="59:23"><name pos:start="59:22" pos:end="59:23">re</name></expr></argument>, <argument pos:start="59:26" pos:end="59:31"><expr pos:start="59:26" pos:end="59:31"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:31"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="81:5">else <block pos:start="61:12" pos:end="81:5">{<block_content pos:start="63:9" pos:end="79:9">

        <if_stmt pos:start="63:9" pos:end="79:9"><if pos:start="63:9" pos:end="71:9">if <condition pos:start="63:12" pos:end="63:56">(<expr pos:start="63:13" pos:end="63:55"><name pos:start="63:13" pos:end="63:17">count</name> <operator pos:start="63:19" pos:end="63:20">&gt;=</operator> <operator pos:start="63:22" pos:end="63:22">(</operator><call pos:start="63:23" pos:end="63:43"><name pos:start="63:23" pos:end="63:35">get_bits_left</name><argument_list pos:start="63:36" pos:end="63:43">(<argument pos:start="63:37" pos:end="63:42"><expr pos:start="63:37" pos:end="63:42"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:42"><name pos:start="63:38" pos:end="63:38">s</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:42">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="63:44" pos:end="63:44">)</operator> <operator pos:start="63:46" pos:end="63:46">/</operator> <operator pos:start="63:48" pos:end="63:48">(</operator><literal type="number" pos:start="63:49" pos:end="63:50">32</literal> <operator pos:start="63:52" pos:end="63:52">*</operator> <literal type="number" pos:start="63:54" pos:end="63:54">2</literal><operator pos:start="63:55" pos:end="63:55">)</operator></expr>)</condition> <block pos:start="63:58" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:13">

            <for pos:start="65:13" pos:end="69:13">for <control pos:start="65:17" pos:end="65:68">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:63"><expr pos:start="65:25" pos:end="65:62"><name pos:start="65:25" pos:end="65:60"><name pos:start="65:25" pos:end="65:25">i</name> <argument_list type="generic" pos:start="65:27" pos:end="65:60">&lt; <argument pos:start="65:29" pos:end="65:58"><expr pos:start="65:29" pos:end="65:58"><name pos:start="65:29" pos:end="65:33">count</name> <operator pos:start="65:35" pos:end="65:36">&amp;&amp;</operator> <name pos:start="65:38" pos:end="65:50">get_bits_left</name><operator pos:start="65:51" pos:end="65:51">(</operator><operator pos:start="65:52" pos:end="65:52">&amp;</operator><name pos:start="65:53" pos:end="65:57"><name pos:start="65:53" pos:end="65:53">s</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:57">gb</name></name><operator pos:start="65:58" pos:end="65:58">)</operator></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="65:62" pos:end="65:62">0</literal></expr>;</condition> <incr pos:start="65:65" pos:end="65:67"><expr pos:start="65:65" pos:end="65:67"><name pos:start="65:65" pos:end="65:65">i</name><operator pos:start="65:66" pos:end="65:67">++</operator></expr></incr>)</control> <block pos:start="65:70" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:87">

                <expr_stmt pos:start="67:17" pos:end="67:87"><expr pos:start="67:17" pos:end="67:86"><call pos:start="67:17" pos:end="67:86"><name pos:start="67:17" pos:end="67:33">READ_2PIX_PLANE16</name><argument_list pos:start="67:34" pos:end="67:86">(<argument pos:start="67:35" pos:end="67:53"><expr pos:start="67:35" pos:end="67:53"><name pos:start="67:35" pos:end="67:53"><name pos:start="67:35" pos:end="67:35">s</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:43">temp16</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr>]</index><index pos:start="67:47" pos:end="67:53">[<expr pos:start="67:48" pos:end="67:52"><literal type="number" pos:start="67:48" pos:end="67:48">2</literal> <operator pos:start="67:50" pos:end="67:50">*</operator> <name pos:start="67:52" pos:end="67:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="67:56" pos:end="67:78"><expr pos:start="67:56" pos:end="67:78"><name pos:start="67:56" pos:end="67:78"><name pos:start="67:56" pos:end="67:56">s</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:64">temp16</name><index pos:start="67:65" pos:end="67:67">[<expr pos:start="67:66" pos:end="67:66"><literal type="number" pos:start="67:66" pos:end="67:66">0</literal></expr>]</index><index pos:start="67:68" pos:end="67:78">[<expr pos:start="67:69" pos:end="67:77"><literal type="number" pos:start="67:69" pos:end="67:69">2</literal> <operator pos:start="67:71" pos:end="67:71">*</operator> <name pos:start="67:73" pos:end="67:73">i</name> <operator pos:start="67:75" pos:end="67:75">+</operator> <literal type="number" pos:start="67:77" pos:end="67:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:81" pos:end="67:85"><expr pos:start="67:81" pos:end="67:85"><name pos:start="67:81" pos:end="67:85">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="79:9">else <block pos:start="71:16" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:13">

            <for pos:start="73:13" pos:end="77:13">for<control pos:start="73:16" pos:end="73:34">(<init pos:start="73:17" pos:end="73:20"><expr pos:start="73:17" pos:end="73:19"><name pos:start="73:17" pos:end="73:17">i</name><operator pos:start="73:18" pos:end="73:18">=</operator><literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>;</init> <condition pos:start="73:22" pos:end="73:29"><expr pos:start="73:22" pos:end="73:28"><name pos:start="73:22" pos:end="73:22">i</name><operator pos:start="73:23" pos:end="73:23">&lt;</operator><name pos:start="73:24" pos:end="73:28">count</name></expr>;</condition> <incr pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:31">i</name><operator pos:start="73:32" pos:end="73:33">++</operator></expr></incr>)</control><block pos:start="73:35" pos:end="77:13">{<block_content pos:start="75:17" pos:end="75:87">

                <expr_stmt pos:start="75:17" pos:end="75:87"><expr pos:start="75:17" pos:end="75:86"><call pos:start="75:17" pos:end="75:86"><name pos:start="75:17" pos:end="75:33">READ_2PIX_PLANE16</name><argument_list pos:start="75:34" pos:end="75:86">(<argument pos:start="75:35" pos:end="75:53"><expr pos:start="75:35" pos:end="75:53"><name pos:start="75:35" pos:end="75:53"><name pos:start="75:35" pos:end="75:35">s</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:43">temp16</name><index pos:start="75:44" pos:end="75:46">[<expr pos:start="75:45" pos:end="75:45"><literal type="number" pos:start="75:45" pos:end="75:45">0</literal></expr>]</index><index pos:start="75:47" pos:end="75:53">[<expr pos:start="75:48" pos:end="75:52"><literal type="number" pos:start="75:48" pos:end="75:48">2</literal> <operator pos:start="75:50" pos:end="75:50">*</operator> <name pos:start="75:52" pos:end="75:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="75:56" pos:end="75:78"><expr pos:start="75:56" pos:end="75:78"><name pos:start="75:56" pos:end="75:78"><name pos:start="75:56" pos:end="75:56">s</name><operator pos:start="75:57" pos:end="75:58">-&gt;</operator><name pos:start="75:59" pos:end="75:64">temp16</name><index pos:start="75:65" pos:end="75:67">[<expr pos:start="75:66" pos:end="75:66"><literal type="number" pos:start="75:66" pos:end="75:66">0</literal></expr>]</index><index pos:start="75:68" pos:end="75:78">[<expr pos:start="75:69" pos:end="75:77"><literal type="number" pos:start="75:69" pos:end="75:69">2</literal> <operator pos:start="75:71" pos:end="75:71">*</operator> <name pos:start="75:73" pos:end="75:73">i</name> <operator pos:start="75:75" pos:end="75:75">+</operator> <literal type="number" pos:start="75:77" pos:end="75:77">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:81" pos:end="75:85"><expr pos:start="75:81" pos:end="75:85"><name pos:start="75:81" pos:end="75:85">plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
