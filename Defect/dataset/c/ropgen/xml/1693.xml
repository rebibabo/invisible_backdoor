<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1693.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">test_visitor_in_alternate_number</name><parameter_list pos:start="1:45" pos:end="3:64">(<parameter pos:start="1:46" pos:end="1:71"><decl pos:start="1:46" pos:end="1:71"><type pos:start="1:46" pos:end="1:71"><name pos:start="1:46" pos:end="1:65">TestInputVisitorData</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">data</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:63"><decl pos:start="3:46" pos:end="3:63"><type pos:start="3:46" pos:end="3:63"><specifier pos:start="3:46" pos:end="3:50">const</specifier> <name pos:start="3:52" pos:end="3:55">void</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:63">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="215:1">{<block_content pos:start="7:5" pos:end="213:39">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Visitor</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">AltStrBool</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">asb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AltStrNum</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">asn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AltNumStr</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:18">ans</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">AltStrInt</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:18">asi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">AltIntNum</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:18">ain</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:13">AltNumInt</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:18">ani</name></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:24">/* Parsing an int */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:44"><expr pos:start="29:5" pos:end="29:43"><name pos:start="29:5" pos:end="29:5">v</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:31">visitor_input_test_init</name><argument_list pos:start="29:32" pos:end="29:43">(<argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">data</name></expr></argument>, <argument pos:start="29:39" pos:end="29:42"><expr pos:start="29:39" pos:end="29:42"><literal type="string" pos:start="29:39" pos:end="29:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><call pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:25">visit_type_AltStrBool</name><argument_list pos:start="31:26" pos:end="31:46">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">v</name></expr></argument>, <argument pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:33">asb</name></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">NULL</name></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><call pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:12">g_assert</name><argument_list pos:start="33:13" pos:end="33:17">(<argument pos:start="33:14" pos:end="33:16"><expr pos:start="33:14" pos:end="33:16"><name pos:start="33:14" pos:end="33:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><call pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:14">error_free</name><argument_list pos:start="35:15" pos:end="35:19">(<argument pos:start="35:16" pos:end="35:18"><expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:15"><expr pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:7">err</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:24">qapi_free_AltStrBool</name><argument_list pos:start="39:25" pos:end="39:29">(<argument pos:start="39:26" pos:end="39:28"><expr pos:start="39:26" pos:end="39:28"><name pos:start="39:26" pos:end="39:28">asb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><call pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:26">visitor_input_teardown</name><argument_list pos:start="41:27" pos:end="41:38">(<argument pos:start="41:28" pos:end="41:31"><expr pos:start="41:28" pos:end="41:31"><name pos:start="41:28" pos:end="41:31">data</name></expr></argument>, <argument pos:start="41:34" pos:end="41:37"><expr pos:start="41:34" pos:end="41:37"><name pos:start="41:34" pos:end="41:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="47:31">/* FIXME: Order of alternate should not affect semantics; asn should

     * parse the same as ans */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:44"><expr pos:start="49:5" pos:end="49:43"><name pos:start="49:5" pos:end="49:5">v</name> <operator pos:start="49:7" pos:end="49:7">=</operator> <call pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:31">visitor_input_test_init</name><argument_list pos:start="49:32" pos:end="49:43">(<argument pos:start="49:33" pos:end="49:36"><expr pos:start="49:33" pos:end="49:36"><name pos:start="49:33" pos:end="49:36">data</name></expr></argument>, <argument pos:start="49:39" pos:end="49:42"><expr pos:start="49:39" pos:end="49:42"><literal type="string" pos:start="49:39" pos:end="49:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><call pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:24">visit_type_AltStrNum</name><argument_list pos:start="51:25" pos:end="51:45">(<argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><name pos:start="51:26" pos:end="51:26">v</name></expr></argument>, <argument pos:start="51:29" pos:end="51:32"><expr pos:start="51:29" pos:end="51:32"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:32">asn</name></expr></argument>, <argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">NULL</name></expr></argument>, <argument pos:start="51:41" pos:end="51:44"><expr pos:start="51:41" pos:end="51:44"><operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:66">/* FIXME g_assert_cmpint(asn-&gt;kind, == ALT_STR_NUM_KIND_N); */</comment>

    <comment type="block" pos:start="55:5" pos:end="55:50">/* FIXME g_assert_cmpfloat(asn-&gt;n, ==, 42); */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><call pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:12">g_assert</name><argument_list pos:start="57:13" pos:end="57:17">(<argument pos:start="57:14" pos:end="57:16"><expr pos:start="57:14" pos:end="57:16"><name pos:start="57:14" pos:end="57:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:20"><expr pos:start="59:5" pos:end="59:19"><call pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:14">error_free</name><argument_list pos:start="59:15" pos:end="59:19">(<argument pos:start="59:16" pos:end="59:18"><expr pos:start="59:16" pos:end="59:18"><name pos:start="59:16" pos:end="59:18">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:15"><expr pos:start="61:5" pos:end="61:14"><name pos:start="61:5" pos:end="61:7">err</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <name pos:start="61:11" pos:end="61:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><call pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:23">qapi_free_AltStrNum</name><argument_list pos:start="63:24" pos:end="63:28">(<argument pos:start="63:25" pos:end="63:27"><expr pos:start="63:25" pos:end="63:27"><name pos:start="63:25" pos:end="63:27">asn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:39"><expr pos:start="65:5" pos:end="65:38"><call pos:start="65:5" pos:end="65:38"><name pos:start="65:5" pos:end="65:26">visitor_input_teardown</name><argument_list pos:start="65:27" pos:end="65:38">(<argument pos:start="65:28" pos:end="65:31"><expr pos:start="65:28" pos:end="65:31"><name pos:start="65:28" pos:end="65:31">data</name></expr></argument>, <argument pos:start="65:34" pos:end="65:37"><expr pos:start="65:34" pos:end="65:37"><name pos:start="65:34" pos:end="65:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:44"><expr pos:start="69:5" pos:end="69:43"><name pos:start="69:5" pos:end="69:5">v</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:31">visitor_input_test_init</name><argument_list pos:start="69:32" pos:end="69:43">(<argument pos:start="69:33" pos:end="69:36"><expr pos:start="69:33" pos:end="69:36"><name pos:start="69:33" pos:end="69:36">data</name></expr></argument>, <argument pos:start="69:39" pos:end="69:42"><expr pos:start="69:39" pos:end="69:42"><literal type="string" pos:start="69:39" pos:end="69:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><call pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:24">visit_type_AltNumStr</name><argument_list pos:start="71:25" pos:end="71:53">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">v</name></expr></argument>, <argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:32">ans</name></expr></argument>, <argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><name pos:start="71:35" pos:end="71:38">NULL</name></expr></argument>, <argument pos:start="71:41" pos:end="71:52"><expr pos:start="71:41" pos:end="71:52"><operator pos:start="71:41" pos:end="71:41">&amp;</operator><name pos:start="71:42" pos:end="71:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:19">g_assert_cmpint</name><argument_list pos:start="73:20" pos:end="73:54">(<argument pos:start="73:21" pos:end="73:29"><expr pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:23">ans</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:29">kind</name></name></expr></argument>, <argument pos:start="73:32" pos:end="73:33"><expr pos:start="73:32" pos:end="73:33"><operator pos:start="73:32" pos:end="73:33">==</operator></expr></argument>, <argument pos:start="73:36" pos:end="73:53"><expr pos:start="73:36" pos:end="73:53"><name pos:start="73:36" pos:end="73:53">ALT_NUM_STR_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><call pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:21">g_assert_cmpfloat</name><argument_list pos:start="75:22" pos:end="75:37">(<argument pos:start="75:23" pos:end="75:28"><expr pos:start="75:23" pos:end="75:28"><name pos:start="75:23" pos:end="75:28"><name pos:start="75:23" pos:end="75:25">ans</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:28">n</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:32"><expr pos:start="75:31" pos:end="75:32"><operator pos:start="75:31" pos:end="75:32">==</operator></expr></argument>, <argument pos:start="75:35" pos:end="75:36"><expr pos:start="75:35" pos:end="75:36"><literal type="number" pos:start="75:35" pos:end="75:36">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><call pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:23">qapi_free_AltNumStr</name><argument_list pos:start="77:24" pos:end="77:28">(<argument pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:27">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><call pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:26">visitor_input_teardown</name><argument_list pos:start="79:27" pos:end="79:38">(<argument pos:start="79:28" pos:end="79:31"><expr pos:start="79:28" pos:end="79:31"><name pos:start="79:28" pos:end="79:31">data</name></expr></argument>, <argument pos:start="79:34" pos:end="79:37"><expr pos:start="79:34" pos:end="79:37"><name pos:start="79:34" pos:end="79:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:44"><expr pos:start="83:5" pos:end="83:43"><name pos:start="83:5" pos:end="83:5">v</name> <operator pos:start="83:7" pos:end="83:7">=</operator> <call pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:31">visitor_input_test_init</name><argument_list pos:start="83:32" pos:end="83:43">(<argument pos:start="83:33" pos:end="83:36"><expr pos:start="83:33" pos:end="83:36"><name pos:start="83:33" pos:end="83:36">data</name></expr></argument>, <argument pos:start="83:39" pos:end="83:42"><expr pos:start="83:39" pos:end="83:42"><literal type="string" pos:start="83:39" pos:end="83:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:54"><expr pos:start="85:5" pos:end="85:53"><call pos:start="85:5" pos:end="85:53"><name pos:start="85:5" pos:end="85:24">visit_type_AltStrInt</name><argument_list pos:start="85:25" pos:end="85:53">(<argument pos:start="85:26" pos:end="85:26"><expr pos:start="85:26" pos:end="85:26"><name pos:start="85:26" pos:end="85:26">v</name></expr></argument>, <argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><operator pos:start="85:29" pos:end="85:29">&amp;</operator><name pos:start="85:30" pos:end="85:32">asi</name></expr></argument>, <argument pos:start="85:35" pos:end="85:38"><expr pos:start="85:35" pos:end="85:38"><name pos:start="85:35" pos:end="85:38">NULL</name></expr></argument>, <argument pos:start="85:41" pos:end="85:52"><expr pos:start="85:41" pos:end="85:52"><operator pos:start="85:41" pos:end="85:41">&amp;</operator><name pos:start="85:42" pos:end="85:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:55"><expr pos:start="87:5" pos:end="87:54"><call pos:start="87:5" pos:end="87:54"><name pos:start="87:5" pos:end="87:19">g_assert_cmpint</name><argument_list pos:start="87:20" pos:end="87:54">(<argument pos:start="87:21" pos:end="87:29"><expr pos:start="87:21" pos:end="87:29"><name pos:start="87:21" pos:end="87:29"><name pos:start="87:21" pos:end="87:23">asi</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:29">kind</name></name></expr></argument>, <argument pos:start="87:32" pos:end="87:33"><expr pos:start="87:32" pos:end="87:33"><operator pos:start="87:32" pos:end="87:33">==</operator></expr></argument>, <argument pos:start="87:36" pos:end="87:53"><expr pos:start="87:36" pos:end="87:53"><name pos:start="87:36" pos:end="87:53">ALT_STR_INT_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:36"><expr pos:start="89:5" pos:end="89:35"><call pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:19">g_assert_cmpint</name><argument_list pos:start="89:20" pos:end="89:35">(<argument pos:start="89:21" pos:end="89:26"><expr pos:start="89:21" pos:end="89:26"><name pos:start="89:21" pos:end="89:26"><name pos:start="89:21" pos:end="89:23">asi</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:26">i</name></name></expr></argument>, <argument pos:start="89:29" pos:end="89:30"><expr pos:start="89:29" pos:end="89:30"><operator pos:start="89:29" pos:end="89:30">==</operator></expr></argument>, <argument pos:start="89:33" pos:end="89:34"><expr pos:start="89:33" pos:end="89:34"><literal type="number" pos:start="89:33" pos:end="89:34">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:29"><expr pos:start="91:5" pos:end="91:28"><call pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:23">qapi_free_AltStrInt</name><argument_list pos:start="91:24" pos:end="91:28">(<argument pos:start="91:25" pos:end="91:27"><expr pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:27">asi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><call pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:26">visitor_input_teardown</name><argument_list pos:start="93:27" pos:end="93:38">(<argument pos:start="93:28" pos:end="93:31"><expr pos:start="93:28" pos:end="93:31"><name pos:start="93:28" pos:end="93:31">data</name></expr></argument>, <argument pos:start="93:34" pos:end="93:37"><expr pos:start="93:34" pos:end="93:37"><name pos:start="93:34" pos:end="93:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:44"><expr pos:start="97:5" pos:end="97:43"><name pos:start="97:5" pos:end="97:5">v</name> <operator pos:start="97:7" pos:end="97:7">=</operator> <call pos:start="97:9" pos:end="97:43"><name pos:start="97:9" pos:end="97:31">visitor_input_test_init</name><argument_list pos:start="97:32" pos:end="97:43">(<argument pos:start="97:33" pos:end="97:36"><expr pos:start="97:33" pos:end="97:36"><name pos:start="97:33" pos:end="97:36">data</name></expr></argument>, <argument pos:start="97:39" pos:end="97:42"><expr pos:start="97:39" pos:end="97:42"><literal type="string" pos:start="97:39" pos:end="97:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:54"><expr pos:start="99:5" pos:end="99:53"><call pos:start="99:5" pos:end="99:53"><name pos:start="99:5" pos:end="99:24">visit_type_AltIntNum</name><argument_list pos:start="99:25" pos:end="99:53">(<argument pos:start="99:26" pos:end="99:26"><expr pos:start="99:26" pos:end="99:26"><name pos:start="99:26" pos:end="99:26">v</name></expr></argument>, <argument pos:start="99:29" pos:end="99:32"><expr pos:start="99:29" pos:end="99:32"><operator pos:start="99:29" pos:end="99:29">&amp;</operator><name pos:start="99:30" pos:end="99:32">ain</name></expr></argument>, <argument pos:start="99:35" pos:end="99:38"><expr pos:start="99:35" pos:end="99:38"><name pos:start="99:35" pos:end="99:38">NULL</name></expr></argument>, <argument pos:start="99:41" pos:end="99:52"><expr pos:start="99:41" pos:end="99:52"><operator pos:start="99:41" pos:end="99:41">&amp;</operator><name pos:start="99:42" pos:end="99:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:55"><expr pos:start="101:5" pos:end="101:54"><call pos:start="101:5" pos:end="101:54"><name pos:start="101:5" pos:end="101:19">g_assert_cmpint</name><argument_list pos:start="101:20" pos:end="101:54">(<argument pos:start="101:21" pos:end="101:29"><expr pos:start="101:21" pos:end="101:29"><name pos:start="101:21" pos:end="101:29"><name pos:start="101:21" pos:end="101:23">ain</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:29">kind</name></name></expr></argument>, <argument pos:start="101:32" pos:end="101:33"><expr pos:start="101:32" pos:end="101:33"><operator pos:start="101:32" pos:end="101:33">==</operator></expr></argument>, <argument pos:start="101:36" pos:end="101:53"><expr pos:start="101:36" pos:end="101:53"><name pos:start="101:36" pos:end="101:53">ALT_INT_NUM_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:36"><expr pos:start="103:5" pos:end="103:35"><call pos:start="103:5" pos:end="103:35"><name pos:start="103:5" pos:end="103:19">g_assert_cmpint</name><argument_list pos:start="103:20" pos:end="103:35">(<argument pos:start="103:21" pos:end="103:26"><expr pos:start="103:21" pos:end="103:26"><name pos:start="103:21" pos:end="103:26"><name pos:start="103:21" pos:end="103:23">ain</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:26">i</name></name></expr></argument>, <argument pos:start="103:29" pos:end="103:30"><expr pos:start="103:29" pos:end="103:30"><operator pos:start="103:29" pos:end="103:30">==</operator></expr></argument>, <argument pos:start="103:33" pos:end="103:34"><expr pos:start="103:33" pos:end="103:34"><literal type="number" pos:start="103:33" pos:end="103:34">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><call pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:23">qapi_free_AltIntNum</name><argument_list pos:start="105:24" pos:end="105:28">(<argument pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">ain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:39"><expr pos:start="107:5" pos:end="107:38"><call pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:26">visitor_input_teardown</name><argument_list pos:start="107:27" pos:end="107:38">(<argument pos:start="107:28" pos:end="107:31"><expr pos:start="107:28" pos:end="107:31"><name pos:start="107:28" pos:end="107:31">data</name></expr></argument>, <argument pos:start="107:34" pos:end="107:37"><expr pos:start="107:34" pos:end="107:37"><name pos:start="107:34" pos:end="107:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:44"><expr pos:start="111:5" pos:end="111:43"><name pos:start="111:5" pos:end="111:5">v</name> <operator pos:start="111:7" pos:end="111:7">=</operator> <call pos:start="111:9" pos:end="111:43"><name pos:start="111:9" pos:end="111:31">visitor_input_test_init</name><argument_list pos:start="111:32" pos:end="111:43">(<argument pos:start="111:33" pos:end="111:36"><expr pos:start="111:33" pos:end="111:36"><name pos:start="111:33" pos:end="111:36">data</name></expr></argument>, <argument pos:start="111:39" pos:end="111:42"><expr pos:start="111:39" pos:end="111:42"><literal type="string" pos:start="111:39" pos:end="111:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:54"><expr pos:start="113:5" pos:end="113:53"><call pos:start="113:5" pos:end="113:53"><name pos:start="113:5" pos:end="113:24">visit_type_AltNumInt</name><argument_list pos:start="113:25" pos:end="113:53">(<argument pos:start="113:26" pos:end="113:26"><expr pos:start="113:26" pos:end="113:26"><name pos:start="113:26" pos:end="113:26">v</name></expr></argument>, <argument pos:start="113:29" pos:end="113:32"><expr pos:start="113:29" pos:end="113:32"><operator pos:start="113:29" pos:end="113:29">&amp;</operator><name pos:start="113:30" pos:end="113:32">ani</name></expr></argument>, <argument pos:start="113:35" pos:end="113:38"><expr pos:start="113:35" pos:end="113:38"><name pos:start="113:35" pos:end="113:38">NULL</name></expr></argument>, <argument pos:start="113:41" pos:end="113:52"><expr pos:start="113:41" pos:end="113:52"><operator pos:start="113:41" pos:end="113:41">&amp;</operator><name pos:start="113:42" pos:end="113:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:55"><expr pos:start="115:5" pos:end="115:54"><call pos:start="115:5" pos:end="115:54"><name pos:start="115:5" pos:end="115:19">g_assert_cmpint</name><argument_list pos:start="115:20" pos:end="115:54">(<argument pos:start="115:21" pos:end="115:29"><expr pos:start="115:21" pos:end="115:29"><name pos:start="115:21" pos:end="115:29"><name pos:start="115:21" pos:end="115:23">ani</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:29">kind</name></name></expr></argument>, <argument pos:start="115:32" pos:end="115:33"><expr pos:start="115:32" pos:end="115:33"><operator pos:start="115:32" pos:end="115:33">==</operator></expr></argument>, <argument pos:start="115:36" pos:end="115:53"><expr pos:start="115:36" pos:end="115:53"><name pos:start="115:36" pos:end="115:53">ALT_NUM_INT_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:36"><expr pos:start="117:5" pos:end="117:35"><call pos:start="117:5" pos:end="117:35"><name pos:start="117:5" pos:end="117:19">g_assert_cmpint</name><argument_list pos:start="117:20" pos:end="117:35">(<argument pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:26"><name pos:start="117:21" pos:end="117:23">ani</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:26">i</name></name></expr></argument>, <argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><operator pos:start="117:29" pos:end="117:30">==</operator></expr></argument>, <argument pos:start="117:33" pos:end="117:34"><expr pos:start="117:33" pos:end="117:34"><literal type="number" pos:start="117:33" pos:end="117:34">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:29"><expr pos:start="119:5" pos:end="119:28"><call pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:23">qapi_free_AltNumInt</name><argument_list pos:start="119:24" pos:end="119:28">(<argument pos:start="119:25" pos:end="119:27"><expr pos:start="119:25" pos:end="119:27"><name pos:start="119:25" pos:end="119:27">ani</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:39"><expr pos:start="121:5" pos:end="121:38"><call pos:start="121:5" pos:end="121:38"><name pos:start="121:5" pos:end="121:26">visitor_input_teardown</name><argument_list pos:start="121:27" pos:end="121:38">(<argument pos:start="121:28" pos:end="121:31"><expr pos:start="121:28" pos:end="121:31"><name pos:start="121:28" pos:end="121:31">data</name></expr></argument>, <argument pos:start="121:34" pos:end="121:37"><expr pos:start="121:34" pos:end="121:37"><name pos:start="121:34" pos:end="121:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:26">/* Parsing a double */</comment>



    <expr_stmt pos:start="129:5" pos:end="129:46"><expr pos:start="129:5" pos:end="129:45"><name pos:start="129:5" pos:end="129:5">v</name> <operator pos:start="129:7" pos:end="129:7">=</operator> <call pos:start="129:9" pos:end="129:45"><name pos:start="129:9" pos:end="129:31">visitor_input_test_init</name><argument_list pos:start="129:32" pos:end="129:45">(<argument pos:start="129:33" pos:end="129:36"><expr pos:start="129:33" pos:end="129:36"><name pos:start="129:33" pos:end="129:36">data</name></expr></argument>, <argument pos:start="129:39" pos:end="129:44"><expr pos:start="129:39" pos:end="129:44"><literal type="string" pos:start="129:39" pos:end="129:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:47"><expr pos:start="131:5" pos:end="131:46"><call pos:start="131:5" pos:end="131:46"><name pos:start="131:5" pos:end="131:25">visit_type_AltStrBool</name><argument_list pos:start="131:26" pos:end="131:46">(<argument pos:start="131:27" pos:end="131:27"><expr pos:start="131:27" pos:end="131:27"><name pos:start="131:27" pos:end="131:27">v</name></expr></argument>, <argument pos:start="131:30" pos:end="131:33"><expr pos:start="131:30" pos:end="131:33"><operator pos:start="131:30" pos:end="131:30">&amp;</operator><name pos:start="131:31" pos:end="131:33">asb</name></expr></argument>, <argument pos:start="131:36" pos:end="131:39"><expr pos:start="131:36" pos:end="131:39"><name pos:start="131:36" pos:end="131:39">NULL</name></expr></argument>, <argument pos:start="131:42" pos:end="131:45"><expr pos:start="131:42" pos:end="131:45"><operator pos:start="131:42" pos:end="131:42">&amp;</operator><name pos:start="131:43" pos:end="131:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:18"><expr pos:start="133:5" pos:end="133:17"><call pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:12">g_assert</name><argument_list pos:start="133:13" pos:end="133:17">(<argument pos:start="133:14" pos:end="133:16"><expr pos:start="133:14" pos:end="133:16"><name pos:start="133:14" pos:end="133:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:20"><expr pos:start="135:5" pos:end="135:19"><call pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:14">error_free</name><argument_list pos:start="135:15" pos:end="135:19">(<argument pos:start="135:16" pos:end="135:18"><expr pos:start="135:16" pos:end="135:18"><name pos:start="135:16" pos:end="135:18">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:15"><expr pos:start="137:5" pos:end="137:14"><name pos:start="137:5" pos:end="137:7">err</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <name pos:start="137:11" pos:end="137:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:30"><expr pos:start="139:5" pos:end="139:29"><call pos:start="139:5" pos:end="139:29"><name pos:start="139:5" pos:end="139:24">qapi_free_AltStrBool</name><argument_list pos:start="139:25" pos:end="139:29">(<argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">asb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:39"><expr pos:start="141:5" pos:end="141:38"><call pos:start="141:5" pos:end="141:38"><name pos:start="141:5" pos:end="141:26">visitor_input_teardown</name><argument_list pos:start="141:27" pos:end="141:38">(<argument pos:start="141:28" pos:end="141:31"><expr pos:start="141:28" pos:end="141:31"><name pos:start="141:28" pos:end="141:31">data</name></expr></argument>, <argument pos:start="141:34" pos:end="141:37"><expr pos:start="141:34" pos:end="141:37"><name pos:start="141:34" pos:end="141:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:46"><expr pos:start="145:5" pos:end="145:45"><name pos:start="145:5" pos:end="145:5">v</name> <operator pos:start="145:7" pos:end="145:7">=</operator> <call pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:31">visitor_input_test_init</name><argument_list pos:start="145:32" pos:end="145:45">(<argument pos:start="145:33" pos:end="145:36"><expr pos:start="145:33" pos:end="145:36"><name pos:start="145:33" pos:end="145:36">data</name></expr></argument>, <argument pos:start="145:39" pos:end="145:44"><expr pos:start="145:39" pos:end="145:44"><literal type="string" pos:start="145:39" pos:end="145:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:54"><expr pos:start="147:5" pos:end="147:53"><call pos:start="147:5" pos:end="147:53"><name pos:start="147:5" pos:end="147:24">visit_type_AltStrNum</name><argument_list pos:start="147:25" pos:end="147:53">(<argument pos:start="147:26" pos:end="147:26"><expr pos:start="147:26" pos:end="147:26"><name pos:start="147:26" pos:end="147:26">v</name></expr></argument>, <argument pos:start="147:29" pos:end="147:32"><expr pos:start="147:29" pos:end="147:32"><operator pos:start="147:29" pos:end="147:29">&amp;</operator><name pos:start="147:30" pos:end="147:32">asn</name></expr></argument>, <argument pos:start="147:35" pos:end="147:38"><expr pos:start="147:35" pos:end="147:38"><name pos:start="147:35" pos:end="147:38">NULL</name></expr></argument>, <argument pos:start="147:41" pos:end="147:52"><expr pos:start="147:41" pos:end="147:52"><operator pos:start="147:41" pos:end="147:41">&amp;</operator><name pos:start="147:42" pos:end="147:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:55"><expr pos:start="149:5" pos:end="149:54"><call pos:start="149:5" pos:end="149:54"><name pos:start="149:5" pos:end="149:19">g_assert_cmpint</name><argument_list pos:start="149:20" pos:end="149:54">(<argument pos:start="149:21" pos:end="149:29"><expr pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:23">asn</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">kind</name></name></expr></argument>, <argument pos:start="149:32" pos:end="149:33"><expr pos:start="149:32" pos:end="149:33"><operator pos:start="149:32" pos:end="149:33">==</operator></expr></argument>, <argument pos:start="149:36" pos:end="149:53"><expr pos:start="149:36" pos:end="149:53"><name pos:start="149:36" pos:end="149:53">ALT_STR_NUM_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:40"><expr pos:start="151:5" pos:end="151:39"><call pos:start="151:5" pos:end="151:39"><name pos:start="151:5" pos:end="151:21">g_assert_cmpfloat</name><argument_list pos:start="151:22" pos:end="151:39">(<argument pos:start="151:23" pos:end="151:28"><expr pos:start="151:23" pos:end="151:28"><name pos:start="151:23" pos:end="151:28"><name pos:start="151:23" pos:end="151:25">asn</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:28">n</name></name></expr></argument>, <argument pos:start="151:31" pos:end="151:32"><expr pos:start="151:31" pos:end="151:32"><operator pos:start="151:31" pos:end="151:32">==</operator></expr></argument>, <argument pos:start="151:35" pos:end="151:38"><expr pos:start="151:35" pos:end="151:38"><literal type="number" pos:start="151:35" pos:end="151:38">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:29"><expr pos:start="153:5" pos:end="153:28"><call pos:start="153:5" pos:end="153:28"><name pos:start="153:5" pos:end="153:23">qapi_free_AltStrNum</name><argument_list pos:start="153:24" pos:end="153:28">(<argument pos:start="153:25" pos:end="153:27"><expr pos:start="153:25" pos:end="153:27"><name pos:start="153:25" pos:end="153:27">asn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:39"><expr pos:start="155:5" pos:end="155:38"><call pos:start="155:5" pos:end="155:38"><name pos:start="155:5" pos:end="155:26">visitor_input_teardown</name><argument_list pos:start="155:27" pos:end="155:38">(<argument pos:start="155:28" pos:end="155:31"><expr pos:start="155:28" pos:end="155:31"><name pos:start="155:28" pos:end="155:31">data</name></expr></argument>, <argument pos:start="155:34" pos:end="155:37"><expr pos:start="155:34" pos:end="155:37"><name pos:start="155:34" pos:end="155:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:46"><expr pos:start="159:5" pos:end="159:45"><name pos:start="159:5" pos:end="159:5">v</name> <operator pos:start="159:7" pos:end="159:7">=</operator> <call pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:31">visitor_input_test_init</name><argument_list pos:start="159:32" pos:end="159:45">(<argument pos:start="159:33" pos:end="159:36"><expr pos:start="159:33" pos:end="159:36"><name pos:start="159:33" pos:end="159:36">data</name></expr></argument>, <argument pos:start="159:39" pos:end="159:44"><expr pos:start="159:39" pos:end="159:44"><literal type="string" pos:start="159:39" pos:end="159:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:54"><expr pos:start="161:5" pos:end="161:53"><call pos:start="161:5" pos:end="161:53"><name pos:start="161:5" pos:end="161:24">visit_type_AltNumStr</name><argument_list pos:start="161:25" pos:end="161:53">(<argument pos:start="161:26" pos:end="161:26"><expr pos:start="161:26" pos:end="161:26"><name pos:start="161:26" pos:end="161:26">v</name></expr></argument>, <argument pos:start="161:29" pos:end="161:32"><expr pos:start="161:29" pos:end="161:32"><operator pos:start="161:29" pos:end="161:29">&amp;</operator><name pos:start="161:30" pos:end="161:32">ans</name></expr></argument>, <argument pos:start="161:35" pos:end="161:38"><expr pos:start="161:35" pos:end="161:38"><name pos:start="161:35" pos:end="161:38">NULL</name></expr></argument>, <argument pos:start="161:41" pos:end="161:52"><expr pos:start="161:41" pos:end="161:52"><operator pos:start="161:41" pos:end="161:41">&amp;</operator><name pos:start="161:42" pos:end="161:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:55"><expr pos:start="163:5" pos:end="163:54"><call pos:start="163:5" pos:end="163:54"><name pos:start="163:5" pos:end="163:19">g_assert_cmpint</name><argument_list pos:start="163:20" pos:end="163:54">(<argument pos:start="163:21" pos:end="163:29"><expr pos:start="163:21" pos:end="163:29"><name pos:start="163:21" pos:end="163:29"><name pos:start="163:21" pos:end="163:23">ans</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:29">kind</name></name></expr></argument>, <argument pos:start="163:32" pos:end="163:33"><expr pos:start="163:32" pos:end="163:33"><operator pos:start="163:32" pos:end="163:33">==</operator></expr></argument>, <argument pos:start="163:36" pos:end="163:53"><expr pos:start="163:36" pos:end="163:53"><name pos:start="163:36" pos:end="163:53">ALT_NUM_STR_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:40"><expr pos:start="165:5" pos:end="165:39"><call pos:start="165:5" pos:end="165:39"><name pos:start="165:5" pos:end="165:21">g_assert_cmpfloat</name><argument_list pos:start="165:22" pos:end="165:39">(<argument pos:start="165:23" pos:end="165:28"><expr pos:start="165:23" pos:end="165:28"><name pos:start="165:23" pos:end="165:28"><name pos:start="165:23" pos:end="165:25">ans</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:28">n</name></name></expr></argument>, <argument pos:start="165:31" pos:end="165:32"><expr pos:start="165:31" pos:end="165:32"><operator pos:start="165:31" pos:end="165:32">==</operator></expr></argument>, <argument pos:start="165:35" pos:end="165:38"><expr pos:start="165:35" pos:end="165:38"><literal type="number" pos:start="165:35" pos:end="165:38">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:29"><expr pos:start="167:5" pos:end="167:28"><call pos:start="167:5" pos:end="167:28"><name pos:start="167:5" pos:end="167:23">qapi_free_AltNumStr</name><argument_list pos:start="167:24" pos:end="167:28">(<argument pos:start="167:25" pos:end="167:27"><expr pos:start="167:25" pos:end="167:27"><name pos:start="167:25" pos:end="167:27">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:39"><expr pos:start="169:5" pos:end="169:38"><call pos:start="169:5" pos:end="169:38"><name pos:start="169:5" pos:end="169:26">visitor_input_teardown</name><argument_list pos:start="169:27" pos:end="169:38">(<argument pos:start="169:28" pos:end="169:31"><expr pos:start="169:28" pos:end="169:31"><name pos:start="169:28" pos:end="169:31">data</name></expr></argument>, <argument pos:start="169:34" pos:end="169:37"><expr pos:start="169:34" pos:end="169:37"><name pos:start="169:34" pos:end="169:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:46"><expr pos:start="173:5" pos:end="173:45"><name pos:start="173:5" pos:end="173:5">v</name> <operator pos:start="173:7" pos:end="173:7">=</operator> <call pos:start="173:9" pos:end="173:45"><name pos:start="173:9" pos:end="173:31">visitor_input_test_init</name><argument_list pos:start="173:32" pos:end="173:45">(<argument pos:start="173:33" pos:end="173:36"><expr pos:start="173:33" pos:end="173:36"><name pos:start="173:33" pos:end="173:36">data</name></expr></argument>, <argument pos:start="173:39" pos:end="173:44"><expr pos:start="173:39" pos:end="173:44"><literal type="string" pos:start="173:39" pos:end="173:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:46"><expr pos:start="175:5" pos:end="175:45"><call pos:start="175:5" pos:end="175:45"><name pos:start="175:5" pos:end="175:24">visit_type_AltStrInt</name><argument_list pos:start="175:25" pos:end="175:45">(<argument pos:start="175:26" pos:end="175:26"><expr pos:start="175:26" pos:end="175:26"><name pos:start="175:26" pos:end="175:26">v</name></expr></argument>, <argument pos:start="175:29" pos:end="175:32"><expr pos:start="175:29" pos:end="175:32"><operator pos:start="175:29" pos:end="175:29">&amp;</operator><name pos:start="175:30" pos:end="175:32">asi</name></expr></argument>, <argument pos:start="175:35" pos:end="175:38"><expr pos:start="175:35" pos:end="175:38"><name pos:start="175:35" pos:end="175:38">NULL</name></expr></argument>, <argument pos:start="175:41" pos:end="175:44"><expr pos:start="175:41" pos:end="175:44"><operator pos:start="175:41" pos:end="175:41">&amp;</operator><name pos:start="175:42" pos:end="175:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:18"><expr pos:start="177:5" pos:end="177:17"><call pos:start="177:5" pos:end="177:17"><name pos:start="177:5" pos:end="177:12">g_assert</name><argument_list pos:start="177:13" pos:end="177:17">(<argument pos:start="177:14" pos:end="177:16"><expr pos:start="177:14" pos:end="177:16"><name pos:start="177:14" pos:end="177:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:20"><expr pos:start="179:5" pos:end="179:19"><call pos:start="179:5" pos:end="179:19"><name pos:start="179:5" pos:end="179:14">error_free</name><argument_list pos:start="179:15" pos:end="179:19">(<argument pos:start="179:16" pos:end="179:18"><expr pos:start="179:16" pos:end="179:18"><name pos:start="179:16" pos:end="179:18">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:15"><expr pos:start="181:5" pos:end="181:14"><name pos:start="181:5" pos:end="181:7">err</name> <operator pos:start="181:9" pos:end="181:9">=</operator> <name pos:start="181:11" pos:end="181:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:29"><expr pos:start="183:5" pos:end="183:28"><call pos:start="183:5" pos:end="183:28"><name pos:start="183:5" pos:end="183:23">qapi_free_AltStrInt</name><argument_list pos:start="183:24" pos:end="183:28">(<argument pos:start="183:25" pos:end="183:27"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:27">asi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:39"><expr pos:start="185:5" pos:end="185:38"><call pos:start="185:5" pos:end="185:38"><name pos:start="185:5" pos:end="185:26">visitor_input_teardown</name><argument_list pos:start="185:27" pos:end="185:38">(<argument pos:start="185:28" pos:end="185:31"><expr pos:start="185:28" pos:end="185:31"><name pos:start="185:28" pos:end="185:31">data</name></expr></argument>, <argument pos:start="185:34" pos:end="185:37"><expr pos:start="185:34" pos:end="185:37"><name pos:start="185:34" pos:end="185:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:46"><expr pos:start="189:5" pos:end="189:45"><name pos:start="189:5" pos:end="189:5">v</name> <operator pos:start="189:7" pos:end="189:7">=</operator> <call pos:start="189:9" pos:end="189:45"><name pos:start="189:9" pos:end="189:31">visitor_input_test_init</name><argument_list pos:start="189:32" pos:end="189:45">(<argument pos:start="189:33" pos:end="189:36"><expr pos:start="189:33" pos:end="189:36"><name pos:start="189:33" pos:end="189:36">data</name></expr></argument>, <argument pos:start="189:39" pos:end="189:44"><expr pos:start="189:39" pos:end="189:44"><literal type="string" pos:start="189:39" pos:end="189:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:54"><expr pos:start="191:5" pos:end="191:53"><call pos:start="191:5" pos:end="191:53"><name pos:start="191:5" pos:end="191:24">visit_type_AltIntNum</name><argument_list pos:start="191:25" pos:end="191:53">(<argument pos:start="191:26" pos:end="191:26"><expr pos:start="191:26" pos:end="191:26"><name pos:start="191:26" pos:end="191:26">v</name></expr></argument>, <argument pos:start="191:29" pos:end="191:32"><expr pos:start="191:29" pos:end="191:32"><operator pos:start="191:29" pos:end="191:29">&amp;</operator><name pos:start="191:30" pos:end="191:32">ain</name></expr></argument>, <argument pos:start="191:35" pos:end="191:38"><expr pos:start="191:35" pos:end="191:38"><name pos:start="191:35" pos:end="191:38">NULL</name></expr></argument>, <argument pos:start="191:41" pos:end="191:52"><expr pos:start="191:41" pos:end="191:52"><operator pos:start="191:41" pos:end="191:41">&amp;</operator><name pos:start="191:42" pos:end="191:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:55"><expr pos:start="193:5" pos:end="193:54"><call pos:start="193:5" pos:end="193:54"><name pos:start="193:5" pos:end="193:19">g_assert_cmpint</name><argument_list pos:start="193:20" pos:end="193:54">(<argument pos:start="193:21" pos:end="193:29"><expr pos:start="193:21" pos:end="193:29"><name pos:start="193:21" pos:end="193:29"><name pos:start="193:21" pos:end="193:23">ain</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:29">kind</name></name></expr></argument>, <argument pos:start="193:32" pos:end="193:33"><expr pos:start="193:32" pos:end="193:33"><operator pos:start="193:32" pos:end="193:33">==</operator></expr></argument>, <argument pos:start="193:36" pos:end="193:53"><expr pos:start="193:36" pos:end="193:53"><name pos:start="193:36" pos:end="193:53">ALT_INT_NUM_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:40"><expr pos:start="195:5" pos:end="195:39"><call pos:start="195:5" pos:end="195:39"><name pos:start="195:5" pos:end="195:21">g_assert_cmpfloat</name><argument_list pos:start="195:22" pos:end="195:39">(<argument pos:start="195:23" pos:end="195:28"><expr pos:start="195:23" pos:end="195:28"><name pos:start="195:23" pos:end="195:28"><name pos:start="195:23" pos:end="195:25">ain</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:28">n</name></name></expr></argument>, <argument pos:start="195:31" pos:end="195:32"><expr pos:start="195:31" pos:end="195:32"><operator pos:start="195:31" pos:end="195:32">==</operator></expr></argument>, <argument pos:start="195:35" pos:end="195:38"><expr pos:start="195:35" pos:end="195:38"><literal type="number" pos:start="195:35" pos:end="195:38">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:29"><expr pos:start="197:5" pos:end="197:28"><call pos:start="197:5" pos:end="197:28"><name pos:start="197:5" pos:end="197:23">qapi_free_AltIntNum</name><argument_list pos:start="197:24" pos:end="197:28">(<argument pos:start="197:25" pos:end="197:27"><expr pos:start="197:25" pos:end="197:27"><name pos:start="197:25" pos:end="197:27">ain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:39"><expr pos:start="199:5" pos:end="199:38"><call pos:start="199:5" pos:end="199:38"><name pos:start="199:5" pos:end="199:26">visitor_input_teardown</name><argument_list pos:start="199:27" pos:end="199:38">(<argument pos:start="199:28" pos:end="199:31"><expr pos:start="199:28" pos:end="199:31"><name pos:start="199:28" pos:end="199:31">data</name></expr></argument>, <argument pos:start="199:34" pos:end="199:37"><expr pos:start="199:34" pos:end="199:37"><name pos:start="199:34" pos:end="199:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="203:46"><expr pos:start="203:5" pos:end="203:45"><name pos:start="203:5" pos:end="203:5">v</name> <operator pos:start="203:7" pos:end="203:7">=</operator> <call pos:start="203:9" pos:end="203:45"><name pos:start="203:9" pos:end="203:31">visitor_input_test_init</name><argument_list pos:start="203:32" pos:end="203:45">(<argument pos:start="203:33" pos:end="203:36"><expr pos:start="203:33" pos:end="203:36"><name pos:start="203:33" pos:end="203:36">data</name></expr></argument>, <argument pos:start="203:39" pos:end="203:44"><expr pos:start="203:39" pos:end="203:44"><literal type="string" pos:start="203:39" pos:end="203:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:54"><expr pos:start="205:5" pos:end="205:53"><call pos:start="205:5" pos:end="205:53"><name pos:start="205:5" pos:end="205:24">visit_type_AltNumInt</name><argument_list pos:start="205:25" pos:end="205:53">(<argument pos:start="205:26" pos:end="205:26"><expr pos:start="205:26" pos:end="205:26"><name pos:start="205:26" pos:end="205:26">v</name></expr></argument>, <argument pos:start="205:29" pos:end="205:32"><expr pos:start="205:29" pos:end="205:32"><operator pos:start="205:29" pos:end="205:29">&amp;</operator><name pos:start="205:30" pos:end="205:32">ani</name></expr></argument>, <argument pos:start="205:35" pos:end="205:38"><expr pos:start="205:35" pos:end="205:38"><name pos:start="205:35" pos:end="205:38">NULL</name></expr></argument>, <argument pos:start="205:41" pos:end="205:52"><expr pos:start="205:41" pos:end="205:52"><operator pos:start="205:41" pos:end="205:41">&amp;</operator><name pos:start="205:42" pos:end="205:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:55"><expr pos:start="207:5" pos:end="207:54"><call pos:start="207:5" pos:end="207:54"><name pos:start="207:5" pos:end="207:19">g_assert_cmpint</name><argument_list pos:start="207:20" pos:end="207:54">(<argument pos:start="207:21" pos:end="207:29"><expr pos:start="207:21" pos:end="207:29"><name pos:start="207:21" pos:end="207:29"><name pos:start="207:21" pos:end="207:23">ani</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:29">kind</name></name></expr></argument>, <argument pos:start="207:32" pos:end="207:33"><expr pos:start="207:32" pos:end="207:33"><operator pos:start="207:32" pos:end="207:33">==</operator></expr></argument>, <argument pos:start="207:36" pos:end="207:53"><expr pos:start="207:36" pos:end="207:53"><name pos:start="207:36" pos:end="207:53">ALT_NUM_INT_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:40"><expr pos:start="209:5" pos:end="209:39"><call pos:start="209:5" pos:end="209:39"><name pos:start="209:5" pos:end="209:21">g_assert_cmpfloat</name><argument_list pos:start="209:22" pos:end="209:39">(<argument pos:start="209:23" pos:end="209:28"><expr pos:start="209:23" pos:end="209:28"><name pos:start="209:23" pos:end="209:28"><name pos:start="209:23" pos:end="209:25">ani</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:28">n</name></name></expr></argument>, <argument pos:start="209:31" pos:end="209:32"><expr pos:start="209:31" pos:end="209:32"><operator pos:start="209:31" pos:end="209:32">==</operator></expr></argument>, <argument pos:start="209:35" pos:end="209:38"><expr pos:start="209:35" pos:end="209:38"><literal type="number" pos:start="209:35" pos:end="209:38">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:29"><expr pos:start="211:5" pos:end="211:28"><call pos:start="211:5" pos:end="211:28"><name pos:start="211:5" pos:end="211:23">qapi_free_AltNumInt</name><argument_list pos:start="211:24" pos:end="211:28">(<argument pos:start="211:25" pos:end="211:27"><expr pos:start="211:25" pos:end="211:27"><name pos:start="211:25" pos:end="211:27">ani</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:39"><expr pos:start="213:5" pos:end="213:38"><call pos:start="213:5" pos:end="213:38"><name pos:start="213:5" pos:end="213:26">visitor_input_teardown</name><argument_list pos:start="213:27" pos:end="213:38">(<argument pos:start="213:28" pos:end="213:31"><expr pos:start="213:28" pos:end="213:31"><name pos:start="213:28" pos:end="213:31">data</name></expr></argument>, <argument pos:start="213:34" pos:end="213:37"><expr pos:start="213:34" pos:end="213:37"><name pos:start="213:34" pos:end="213:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
