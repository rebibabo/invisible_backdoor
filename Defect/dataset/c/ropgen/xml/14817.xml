<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14817.c" pos:tabs="8"><function pos:start="1:1" pos:end="379:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:33">parse_nal_units</name><parameter_list pos:start="1:34" pos:end="3:63">(<parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:54">AVCodecParserContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:77"><decl pos:start="1:60" pos:end="1:77"><type pos:start="1:60" pos:end="1:77"><specifier pos:start="1:60" pos:end="1:64">const</specifier> <name pos:start="1:66" pos:end="1:72">uint8_t</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">buf</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:39">buf_size</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:62"><decl pos:start="3:42" pos:end="3:62"><type pos:start="3:42" pos:end="3:62"><name pos:start="3:42" pos:end="3:55">AVCodecContext</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:62">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="379:1">{<block_content pos:start="7:5" pos:end="377:14">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">HEVCParserContext</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">ctx</name> <init pos:start="7:28" pos:end="7:41">= <expr pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:41"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:15">HEVCContext</name>       <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">h</name>   <init pos:start="9:28" pos:end="9:36">= <expr pos:start="9:30" pos:end="9:36"><operator pos:start="9:30" pos:end="9:30">&amp;</operator><name pos:start="9:31" pos:end="9:36"><name pos:start="9:31" pos:end="9:33">ctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:36">h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:17">GetBitContext</name>      <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:15">SliceHeader</name>        <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:26">sh</name> <init pos:start="13:28" pos:end="13:35">= <expr pos:start="13:30" pos:end="13:35"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:35"><name pos:start="13:31" pos:end="13:31">h</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:35">sh</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">HEVCParamSets</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:21">ps</name> <init pos:start="15:23" pos:end="15:30">= <expr pos:start="15:25" pos:end="15:30"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:30"><name pos:start="15:26" pos:end="15:26">h</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:30">ps</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:14">HEVCPacket</name>   <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:21">pkt</name> <init pos:start="17:23" pos:end="17:33">= <expr pos:start="17:25" pos:end="17:33"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:28">ctx</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:33">pkt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:26">buf_end</name> <init pos:start="19:28" pos:end="19:43">= <expr pos:start="19:30" pos:end="19:43"><name pos:start="19:30" pos:end="19:32">buf</name> <operator pos:start="19:34" pos:end="19:34">+</operator> <name pos:start="19:36" pos:end="19:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">state</name> <init pos:start="21:15" pos:end="21:18">= <expr pos:start="21:17" pos:end="21:18"><operator pos:start="21:17" pos:end="21:17">-</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr></init></decl>, <decl pos:start="21:21" pos:end="21:21"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:21" pos:end="21:21">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">HEVCNAL</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:16">nal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:44"><decl pos:start="25:5" pos:end="25:43"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:17">is_global</name> <init pos:start="25:19" pos:end="25:43">= <expr pos:start="25:21" pos:end="25:43"><name pos:start="25:21" pos:end="25:23">buf</name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:32">avctx</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:43">extradata</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="31:57"><if pos:start="29:5" pos:end="31:57">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:18"><name pos:start="29:10" pos:end="29:10">h</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">HEVClc</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:57"><block_content pos:start="31:9" pos:end="31:57">

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:9">h</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">HEVClc</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:56"><name pos:start="31:21" pos:end="31:30">av_mallocz</name><argument_list pos:start="31:31" pos:end="31:56">(<argument pos:start="31:32" pos:end="31:55"><expr pos:start="31:32" pos:end="31:55"><sizeof pos:start="31:32" pos:end="31:55">sizeof<argument_list pos:start="31:38" pos:end="31:55">(<argument pos:start="31:39" pos:end="31:54"><expr pos:start="31:39" pos:end="31:54"><name pos:start="31:39" pos:end="31:54">HEVCLocalContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="35:31"><if pos:start="33:5" pos:end="35:31">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:10">h</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:18">HEVClc</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:31"><block_content pos:start="35:9" pos:end="35:31">

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:6">gb</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <operator pos:start="39:10" pos:end="39:10">&amp;</operator><name pos:start="39:11" pos:end="39:23"><name pos:start="39:11" pos:end="39:11">h</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:19">HEVClc</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:23">gb</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:38">/* set some sane default values */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:16">pict_type</name></name>         <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">key_frame</name></name>         <operator pos:start="47:26" pos:end="47:26">=</operator> <literal type="number" pos:start="47:28" pos:end="47:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:56"><expr pos:start="49:5" pos:end="49:55"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:24">picture_structure</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:55">AV_PICTURE_STRUCTURE_UNKNOWN</name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:5">h</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:12">avctx</name></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:20">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="59:17"><if pos:start="57:5" pos:end="59:17">if <condition pos:start="57:8" pos:end="57:18">(<expr pos:start="57:9" pos:end="57:17"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:17"><block_content pos:start="59:9" pos:end="59:17">

        <return pos:start="59:9" pos:end="59:17">return <expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="77:5"><if pos:start="63:5" pos:end="77:5">if <condition pos:start="63:8" pos:end="63:32">(<expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:11">pkt</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:27">nals_allocated</name></name> <operator pos:start="63:29" pos:end="63:29">&lt;</operator> <literal type="number" pos:start="63:31" pos:end="63:31">1</literal></expr>)</condition> <block pos:start="63:34" pos:end="77:5">{<block_content pos:start="65:9" pos:end="75:32">

        <decl_stmt pos:start="65:9" pos:end="65:68"><decl pos:start="65:9" pos:end="65:67"><type pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:15">HEVCNAL</name> <modifier pos:start="65:17" pos:end="65:17">*</modifier></type><name pos:start="65:18" pos:end="65:20">tmp</name> <init pos:start="65:22" pos:end="65:67">= <expr pos:start="65:24" pos:end="65:67"><call pos:start="65:24" pos:end="65:67"><name pos:start="65:24" pos:end="65:39">av_realloc_array</name><argument_list pos:start="65:40" pos:end="65:67">(<argument pos:start="65:41" pos:end="65:49"><expr pos:start="65:41" pos:end="65:49"><name pos:start="65:41" pos:end="65:49"><name pos:start="65:41" pos:end="65:43">pkt</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:49">nals</name></name></expr></argument>, <argument pos:start="65:52" pos:end="65:52"><expr pos:start="65:52" pos:end="65:52"><literal type="number" pos:start="65:52" pos:end="65:52">1</literal></expr></argument>, <argument pos:start="65:55" pos:end="65:66"><expr pos:start="65:55" pos:end="65:66"><sizeof pos:start="65:55" pos:end="65:66">sizeof<argument_list pos:start="65:61" pos:end="65:66">(<argument pos:start="65:62" pos:end="65:65"><expr pos:start="65:62" pos:end="65:65"><operator pos:start="65:62" pos:end="65:62">*</operator><name pos:start="65:63" pos:end="65:65">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="67:9" pos:end="69:35"><if pos:start="67:9" pos:end="69:35">if <condition pos:start="67:12" pos:end="67:17">(<expr pos:start="67:13" pos:end="67:16"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:16">tmp</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:35"><block_content pos:start="69:13" pos:end="69:35">

            <return pos:start="69:13" pos:end="69:35">return <expr pos:start="69:20" pos:end="69:34"><call pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:34">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:24"><expr pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:11">pkt</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:17">nals</name></name> <operator pos:start="71:19" pos:end="71:19">=</operator> <name pos:start="71:21" pos:end="71:23">tmp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:43"><expr pos:start="73:9" pos:end="73:42"><call pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:14">memset</name><argument_list pos:start="73:15" pos:end="73:42">(<argument pos:start="73:16" pos:end="73:24"><expr pos:start="73:16" pos:end="73:24"><name pos:start="73:16" pos:end="73:24"><name pos:start="73:16" pos:end="73:18">pkt</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:24">nals</name></name></expr></argument>, <argument pos:start="73:27" pos:end="73:27"><expr pos:start="73:27" pos:end="73:27"><literal type="number" pos:start="73:27" pos:end="73:27">0</literal></expr></argument>, <argument pos:start="73:30" pos:end="73:41"><expr pos:start="73:30" pos:end="73:41"><sizeof pos:start="73:30" pos:end="73:41">sizeof<argument_list pos:start="73:36" pos:end="73:41">(<argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><operator pos:start="73:37" pos:end="73:37">*</operator><name pos:start="73:38" pos:end="73:40">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:32"><expr pos:start="75:9" pos:end="75:31"><name pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:11">pkt</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:27">nals_allocated</name></name> <operator pos:start="75:29" pos:end="75:29">=</operator> <literal type="number" pos:start="75:31" pos:end="75:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:7">nal</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <operator pos:start="81:11" pos:end="81:11">&amp;</operator><name pos:start="81:12" pos:end="81:23"><name pos:start="81:12" pos:end="81:14">pkt</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:20">nals</name><index pos:start="81:21" pos:end="81:23">[<expr pos:start="81:22" pos:end="81:22"><literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="85:5" pos:end="369:5">for <control pos:start="85:9" pos:end="85:12">(<init pos:start="85:10" pos:end="85:10">;</init><condition pos:start="85:11" pos:end="85:11">;</condition><incr/>)</control> <block pos:start="85:14" pos:end="369:5">{<block_content pos:start="87:9" pos:end="367:24">

        <decl_stmt pos:start="87:9" pos:end="87:33"><decl pos:start="87:9" pos:end="87:22"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:22">src_length</name></decl>, <decl pos:start="87:25" pos:end="87:32"><type ref="prev" pos:start="87:9" pos:end="87:11"/><name pos:start="87:25" pos:end="87:32">consumed</name></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:59"><expr pos:start="89:9" pos:end="89:58"><name pos:start="89:9" pos:end="89:11">buf</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:58"><name pos:start="89:15" pos:end="89:36">avpriv_find_start_code</name><argument_list pos:start="89:37" pos:end="89:58">(<argument pos:start="89:38" pos:end="89:40"><expr pos:start="89:38" pos:end="89:40"><name pos:start="89:38" pos:end="89:40">buf</name></expr></argument>, <argument pos:start="89:43" pos:end="89:49"><expr pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:49">buf_end</name></expr></argument>, <argument pos:start="89:52" pos:end="89:57"><expr pos:start="89:52" pos:end="89:57"><operator pos:start="89:52" pos:end="89:52">&amp;</operator><name pos:start="89:53" pos:end="89:57">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:18"><if pos:start="91:9" pos:end="93:18">if <condition pos:start="91:12" pos:end="91:33">(<expr pos:start="91:13" pos:end="91:32"><operator pos:start="91:13" pos:end="91:14">--</operator><name pos:start="91:15" pos:end="91:17">buf</name> <operator pos:start="91:19" pos:end="91:19">+</operator> <literal type="number" pos:start="91:21" pos:end="91:21">2</literal> <operator pos:start="91:23" pos:end="91:24">&gt;=</operator> <name pos:start="91:26" pos:end="91:32">buf_end</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:18"><block_content pos:start="93:13" pos:end="93:18">

            <break pos:start="93:13" pos:end="93:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:35"><expr pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:18">src_length</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <name pos:start="95:22" pos:end="95:28">buf_end</name> <operator pos:start="95:30" pos:end="95:30">-</operator> <name pos:start="95:32" pos:end="95:34">buf</name></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:46"><expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:9">h</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:24">nal_unit_type</name></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <operator pos:start="99:28" pos:end="99:28">(</operator><operator pos:start="99:29" pos:end="99:29">*</operator><name pos:start="99:30" pos:end="99:32">buf</name> <operator pos:start="99:34" pos:end="99:35">&gt;&gt;</operator> <literal type="number" pos:start="99:37" pos:end="99:37">1</literal><operator pos:start="99:38" pos:end="99:38">)</operator> <operator pos:start="99:40" pos:end="99:40">&amp;</operator> <literal type="number" pos:start="99:42" pos:end="99:45">0x3f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:51"><expr pos:start="101:9" pos:end="101:50"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:9">h</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:22">temporal_id</name></name>   <operator pos:start="101:26" pos:end="101:26">=</operator> <operator pos:start="101:28" pos:end="101:28">(</operator><operator pos:start="101:29" pos:end="101:29">*</operator><operator pos:start="101:30" pos:end="101:30">(</operator><name pos:start="101:31" pos:end="101:33">buf</name> <operator pos:start="101:35" pos:end="101:35">+</operator> <literal type="number" pos:start="101:37" pos:end="101:37">1</literal><operator pos:start="101:38" pos:end="101:38">)</operator> <operator pos:start="101:40" pos:end="101:40">&amp;</operator> <literal type="number" pos:start="101:42" pos:end="101:45">0x07</literal><operator pos:start="101:46" pos:end="101:46">)</operator> <operator pos:start="101:48" pos:end="101:48">-</operator> <literal type="number" pos:start="101:50" pos:end="101:50">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="111:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="103:44">(<expr pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:13">h</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:28">nal_unit_type</name></name> <operator pos:start="103:30" pos:end="103:31">&lt;=</operator> <name pos:start="103:33" pos:end="103:43">NAL_CRA_NUT</name></expr>)</condition> <block pos:start="103:46" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:32">

            <comment type="line" pos:start="105:13" pos:end="105:79">// Do not walk the whole buffer just to decode slice segment header</comment>

            <if_stmt pos:start="107:13" pos:end="109:32"><if pos:start="107:13" pos:end="109:32">if <condition pos:start="107:16" pos:end="107:32">(<expr pos:start="107:17" pos:end="107:31"><name pos:start="107:17" pos:end="107:26">src_length</name> <operator pos:start="107:28" pos:end="107:28">&gt;</operator> <literal type="number" pos:start="107:30" pos:end="107:31">20</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:32"><block_content pos:start="109:17" pos:end="109:32">

                <expr_stmt pos:start="109:17" pos:end="109:32"><expr pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:26">src_length</name> <operator pos:start="109:28" pos:end="109:28">=</operator> <literal type="number" pos:start="109:30" pos:end="109:31">20</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:68"><expr pos:start="115:9" pos:end="115:67"><name pos:start="115:9" pos:end="115:16">consumed</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:67"><name pos:start="115:20" pos:end="115:39">ff_hevc_extract_rbsp</name><argument_list pos:start="115:40" pos:end="115:67">(<argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><name pos:start="115:41" pos:end="115:44">NULL</name></expr></argument>, <argument pos:start="115:47" pos:end="115:49"><expr pos:start="115:47" pos:end="115:49"><name pos:start="115:47" pos:end="115:49">buf</name></expr></argument>, <argument pos:start="115:52" pos:end="115:61"><expr pos:start="115:52" pos:end="115:61"><name pos:start="115:52" pos:end="115:61">src_length</name></expr></argument>, <argument pos:start="115:64" pos:end="115:66"><expr pos:start="115:64" pos:end="115:66"><name pos:start="115:64" pos:end="115:66">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:28"><if pos:start="117:9" pos:end="119:28">if <condition pos:start="117:12" pos:end="117:25">(<expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:20">consumed</name> <operator pos:start="117:22" pos:end="117:22">&lt;</operator> <literal type="number" pos:start="117:24" pos:end="117:24">0</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:28"><block_content pos:start="119:13" pos:end="119:28">

            <return pos:start="119:13" pos:end="119:28">return <expr pos:start="119:20" pos:end="119:27"><name pos:start="119:20" pos:end="119:27">consumed</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:53"><expr pos:start="123:9" pos:end="123:52"><call pos:start="123:9" pos:end="123:52"><name pos:start="123:9" pos:end="123:22">init_get_bits8</name><argument_list pos:start="123:23" pos:end="123:52">(<argument pos:start="123:24" pos:end="123:25"><expr pos:start="123:24" pos:end="123:25"><name pos:start="123:24" pos:end="123:25">gb</name></expr></argument>, <argument pos:start="123:28" pos:end="123:40"><expr pos:start="123:28" pos:end="123:40"><name pos:start="123:28" pos:end="123:36"><name pos:start="123:28" pos:end="123:30">nal</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:36">data</name></name> <operator pos:start="123:38" pos:end="123:38">+</operator> <literal type="number" pos:start="123:40" pos:end="123:40">2</literal></expr></argument>, <argument pos:start="123:43" pos:end="123:51"><expr pos:start="123:43" pos:end="123:51"><name pos:start="123:43" pos:end="123:51"><name pos:start="123:43" pos:end="123:45">nal</name><operator pos:start="123:46" pos:end="123:47">-&gt;</operator><name pos:start="123:48" pos:end="123:51">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="125:9" pos:end="365:9">switch <condition pos:start="125:16" pos:end="125:33">(<expr pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:17">h</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:32">nal_unit_type</name></name></expr>)</condition> <block pos:start="125:35" pos:end="365:9">{<block_content pos:start="127:9" pos:end="363:21">

        <case pos:start="127:9" pos:end="127:21">case <expr pos:start="127:14" pos:end="127:20"><name pos:start="127:14" pos:end="127:20">NAL_VPS</name></expr>:</case>

            <expr_stmt pos:start="129:13" pos:end="129:50"><expr pos:start="129:13" pos:end="129:49"><call pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:34">ff_hevc_decode_nal_vps</name><argument_list pos:start="129:35" pos:end="129:49">(<argument pos:start="129:36" pos:end="129:37"><expr pos:start="129:36" pos:end="129:37"><name pos:start="129:36" pos:end="129:37">gb</name></expr></argument>, <argument pos:start="129:40" pos:end="129:44"><expr pos:start="129:40" pos:end="129:44"><name pos:start="129:40" pos:end="129:44">avctx</name></expr></argument>, <argument pos:start="129:47" pos:end="129:48"><expr pos:start="129:47" pos:end="129:48"><name pos:start="129:47" pos:end="129:48">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        <case pos:start="133:9" pos:end="133:21">case <expr pos:start="133:14" pos:end="133:20"><name pos:start="133:14" pos:end="133:20">NAL_SPS</name></expr>:</case>

            <expr_stmt pos:start="135:13" pos:end="135:53"><expr pos:start="135:13" pos:end="135:52"><call pos:start="135:13" pos:end="135:52"><name pos:start="135:13" pos:end="135:34">ff_hevc_decode_nal_sps</name><argument_list pos:start="135:35" pos:end="135:52">(<argument pos:start="135:36" pos:end="135:37"><expr pos:start="135:36" pos:end="135:37"><name pos:start="135:36" pos:end="135:37">gb</name></expr></argument>, <argument pos:start="135:40" pos:end="135:44"><expr pos:start="135:40" pos:end="135:44"><name pos:start="135:40" pos:end="135:44">avctx</name></expr></argument>, <argument pos:start="135:47" pos:end="135:48"><expr pos:start="135:47" pos:end="135:48"><name pos:start="135:47" pos:end="135:48">ps</name></expr></argument>, <argument pos:start="135:51" pos:end="135:51"><expr pos:start="135:51" pos:end="135:51"><literal type="number" pos:start="135:51" pos:end="135:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:21">case <expr pos:start="139:14" pos:end="139:20"><name pos:start="139:14" pos:end="139:20">NAL_PPS</name></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:50"><expr pos:start="141:13" pos:end="141:49"><call pos:start="141:13" pos:end="141:49"><name pos:start="141:13" pos:end="141:34">ff_hevc_decode_nal_pps</name><argument_list pos:start="141:35" pos:end="141:49">(<argument pos:start="141:36" pos:end="141:37"><expr pos:start="141:36" pos:end="141:37"><name pos:start="141:36" pos:end="141:37">gb</name></expr></argument>, <argument pos:start="141:40" pos:end="141:44"><expr pos:start="141:40" pos:end="141:44"><name pos:start="141:40" pos:end="141:44">avctx</name></expr></argument>, <argument pos:start="141:47" pos:end="141:48"><expr pos:start="141:47" pos:end="141:48"><name pos:start="141:47" pos:end="141:48">ps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:28">case <expr pos:start="145:14" pos:end="145:27"><name pos:start="145:14" pos:end="145:27">NAL_SEI_PREFIX</name></expr>:</case>

        <case pos:start="147:9" pos:end="147:28">case <expr pos:start="147:14" pos:end="147:27"><name pos:start="147:14" pos:end="147:27">NAL_SEI_SUFFIX</name></expr>:</case>

            <expr_stmt pos:start="149:13" pos:end="149:38"><expr pos:start="149:13" pos:end="149:37"><call pos:start="149:13" pos:end="149:37"><name pos:start="149:13" pos:end="149:34">ff_hevc_decode_nal_sei</name><argument_list pos:start="149:35" pos:end="149:37">(<argument pos:start="149:36" pos:end="149:36"><expr pos:start="149:36" pos:end="149:36"><name pos:start="149:36" pos:end="149:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:25">case <expr pos:start="153:14" pos:end="153:24"><name pos:start="153:14" pos:end="153:24">NAL_TRAIL_N</name></expr>:</case>

        <case pos:start="155:9" pos:end="155:25">case <expr pos:start="155:14" pos:end="155:24"><name pos:start="155:14" pos:end="155:24">NAL_TRAIL_R</name></expr>:</case>

        <case pos:start="157:9" pos:end="157:23">case <expr pos:start="157:14" pos:end="157:22"><name pos:start="157:14" pos:end="157:22">NAL_TSA_N</name></expr>:</case>

        <case pos:start="159:9" pos:end="159:23">case <expr pos:start="159:14" pos:end="159:22"><name pos:start="159:14" pos:end="159:22">NAL_TSA_R</name></expr>:</case>

        <case pos:start="161:9" pos:end="161:24">case <expr pos:start="161:14" pos:end="161:23"><name pos:start="161:14" pos:end="161:23">NAL_STSA_N</name></expr>:</case>

        <case pos:start="163:9" pos:end="163:24">case <expr pos:start="163:14" pos:end="163:23"><name pos:start="163:14" pos:end="163:23">NAL_STSA_R</name></expr>:</case>

        <case pos:start="165:9" pos:end="165:24">case <expr pos:start="165:14" pos:end="165:23"><name pos:start="165:14" pos:end="165:23">NAL_RADL_N</name></expr>:</case>

        <case pos:start="167:9" pos:end="167:24">case <expr pos:start="167:14" pos:end="167:23"><name pos:start="167:14" pos:end="167:23">NAL_RADL_R</name></expr>:</case>

        <case pos:start="169:9" pos:end="169:24">case <expr pos:start="169:14" pos:end="169:23"><name pos:start="169:14" pos:end="169:23">NAL_RASL_N</name></expr>:</case>

        <case pos:start="171:9" pos:end="171:24">case <expr pos:start="171:14" pos:end="171:23"><name pos:start="171:14" pos:end="171:23">NAL_RASL_R</name></expr>:</case>

        <case pos:start="173:9" pos:end="173:26">case <expr pos:start="173:14" pos:end="173:25"><name pos:start="173:14" pos:end="173:25">NAL_BLA_W_LP</name></expr>:</case>

        <case pos:start="175:9" pos:end="175:28">case <expr pos:start="175:14" pos:end="175:27"><name pos:start="175:14" pos:end="175:27">NAL_BLA_W_RADL</name></expr>:</case>

        <case pos:start="177:9" pos:end="177:26">case <expr pos:start="177:14" pos:end="177:25"><name pos:start="177:14" pos:end="177:25">NAL_BLA_N_LP</name></expr>:</case>

        <case pos:start="179:9" pos:end="179:28">case <expr pos:start="179:14" pos:end="179:27"><name pos:start="179:14" pos:end="179:27">NAL_IDR_W_RADL</name></expr>:</case>

        <case pos:start="181:9" pos:end="181:26">case <expr pos:start="181:14" pos:end="181:25"><name pos:start="181:14" pos:end="181:25">NAL_IDR_N_LP</name></expr>:</case>

        <case pos:start="183:9" pos:end="183:25">case <expr pos:start="183:14" pos:end="183:24"><name pos:start="183:14" pos:end="183:24">NAL_CRA_NUT</name></expr>:</case>



            <if_stmt pos:start="187:13" pos:end="193:13"><if pos:start="187:13" pos:end="193:13">if <condition pos:start="187:16" pos:end="187:26">(<expr pos:start="187:17" pos:end="187:25"><name pos:start="187:17" pos:end="187:25">is_global</name></expr>)</condition> <block pos:start="187:28" pos:end="193:13">{<block_content pos:start="189:17" pos:end="191:43">

                <expr_stmt pos:start="189:17" pos:end="189:88"><expr pos:start="189:17" pos:end="189:87"><call pos:start="189:17" pos:end="189:87"><name pos:start="189:17" pos:end="189:22">av_log</name><argument_list pos:start="189:23" pos:end="189:87">(<argument pos:start="189:24" pos:end="189:28"><expr pos:start="189:24" pos:end="189:28"><name pos:start="189:24" pos:end="189:28">avctx</name></expr></argument>, <argument pos:start="189:31" pos:end="189:42"><expr pos:start="189:31" pos:end="189:42"><name pos:start="189:31" pos:end="189:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:45" pos:end="189:68"><expr pos:start="189:45" pos:end="189:68"><literal type="string" pos:start="189:45" pos:end="189:68">"Invalid NAL unit: %d\n"</literal></expr></argument>, <argument pos:start="189:71" pos:end="189:86"><expr pos:start="189:71" pos:end="189:86"><name pos:start="189:71" pos:end="189:86"><name pos:start="189:71" pos:end="189:71">h</name><operator pos:start="189:72" pos:end="189:73">-&gt;</operator><name pos:start="189:74" pos:end="189:86">nal_unit_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="191:17" pos:end="191:43">return <expr pos:start="191:24" pos:end="191:42"><name pos:start="191:24" pos:end="191:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:56"><expr pos:start="197:13" pos:end="197:55"><name pos:start="197:13" pos:end="197:39"><name pos:start="197:13" pos:end="197:14">sh</name><operator pos:start="197:15" pos:end="197:16">-&gt;</operator><name pos:start="197:17" pos:end="197:39">first_slice_in_pic_flag</name></name> <operator pos:start="197:41" pos:end="197:41">=</operator> <call pos:start="197:43" pos:end="197:55"><name pos:start="197:43" pos:end="197:51">get_bits1</name><argument_list pos:start="197:52" pos:end="197:55">(<argument pos:start="197:53" pos:end="197:54"><expr pos:start="197:53" pos:end="197:54"><name pos:start="197:53" pos:end="197:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:53"><expr pos:start="199:13" pos:end="199:52"><name pos:start="199:13" pos:end="199:32"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:32">picture_structure</name></name> <operator pos:start="199:34" pos:end="199:34">=</operator> <name pos:start="199:36" pos:end="199:52"><name pos:start="199:36" pos:end="199:36">h</name><operator pos:start="199:37" pos:end="199:38">-&gt;</operator><name pos:start="199:39" pos:end="199:52">picture_struct</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:47"><expr pos:start="201:13" pos:end="201:46"><name pos:start="201:13" pos:end="201:26"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:26">field_order</name></name> <operator pos:start="201:28" pos:end="201:28">=</operator> <name pos:start="201:30" pos:end="201:46"><name pos:start="201:30" pos:end="201:30">h</name><operator pos:start="201:31" pos:end="201:32">-&gt;</operator><name pos:start="201:33" pos:end="201:46">picture_struct</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="205:13" pos:end="211:13"><if pos:start="205:13" pos:end="211:13">if <condition pos:start="205:16" pos:end="205:27">(<expr pos:start="205:17" pos:end="205:26"><call pos:start="205:17" pos:end="205:26"><name pos:start="205:17" pos:end="205:23">IS_IRAP</name><argument_list pos:start="205:24" pos:end="205:26">(<argument pos:start="205:25" pos:end="205:25"><expr pos:start="205:25" pos:end="205:25"><name pos:start="205:25" pos:end="205:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="205:29" pos:end="211:13">{<block_content pos:start="207:17" pos:end="209:65">

                <expr_stmt pos:start="207:17" pos:end="207:33"><expr pos:start="207:17" pos:end="207:32"><name pos:start="207:17" pos:end="207:28"><name pos:start="207:17" pos:end="207:17">s</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:28">key_frame</name></name> <operator pos:start="207:30" pos:end="207:30">=</operator> <literal type="number" pos:start="207:32" pos:end="207:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:65"><expr pos:start="209:17" pos:end="209:64"><name pos:start="209:17" pos:end="209:48"><name pos:start="209:17" pos:end="209:18">sh</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:48">no_output_of_prior_pics_flag</name></name> <operator pos:start="209:50" pos:end="209:50">=</operator> <call pos:start="209:52" pos:end="209:64"><name pos:start="209:52" pos:end="209:60">get_bits1</name><argument_list pos:start="209:61" pos:end="209:64">(<argument pos:start="209:62" pos:end="209:63"><expr pos:start="209:62" pos:end="209:63"><name pos:start="209:62" pos:end="209:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="215:13" pos:end="215:43"><expr pos:start="215:13" pos:end="215:42"><name pos:start="215:13" pos:end="215:22"><name pos:start="215:13" pos:end="215:14">sh</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:22">pps_id</name></name> <operator pos:start="215:24" pos:end="215:24">=</operator> <call pos:start="215:26" pos:end="215:42"><name pos:start="215:26" pos:end="215:38">get_ue_golomb</name><argument_list pos:start="215:39" pos:end="215:42">(<argument pos:start="215:40" pos:end="215:41"><expr pos:start="215:40" pos:end="215:41"><name pos:start="215:40" pos:end="215:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="217:13" pos:end="223:13"><if pos:start="217:13" pos:end="223:13">if <condition pos:start="217:16" pos:end="217:73">(<expr pos:start="217:17" pos:end="217:72"><name pos:start="217:17" pos:end="217:26"><name pos:start="217:17" pos:end="217:18">sh</name><operator pos:start="217:19" pos:end="217:20">-&gt;</operator><name pos:start="217:21" pos:end="217:26">pps_id</name></name> <operator pos:start="217:28" pos:end="217:29">&gt;=</operator> <name pos:start="217:31" pos:end="217:43">MAX_PPS_COUNT</name> <operator pos:start="217:45" pos:end="217:46">||</operator> <operator pos:start="217:48" pos:end="217:48">!</operator><name pos:start="217:49" pos:end="217:72"><name pos:start="217:49" pos:end="217:50">ps</name><operator pos:start="217:51" pos:end="217:52">-&gt;</operator><name pos:start="217:53" pos:end="217:60">pps_list</name><index pos:start="217:61" pos:end="217:72">[<expr pos:start="217:62" pos:end="217:71"><name pos:start="217:62" pos:end="217:71"><name pos:start="217:62" pos:end="217:63">sh</name><operator pos:start="217:64" pos:end="217:65">-&gt;</operator><name pos:start="217:66" pos:end="217:71">pps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="217:75" pos:end="223:13">{<block_content pos:start="219:17" pos:end="221:43">

                <expr_stmt pos:start="219:17" pos:end="219:85"><expr pos:start="219:17" pos:end="219:84"><call pos:start="219:17" pos:end="219:84"><name pos:start="219:17" pos:end="219:22">av_log</name><argument_list pos:start="219:23" pos:end="219:84">(<argument pos:start="219:24" pos:end="219:28"><expr pos:start="219:24" pos:end="219:28"><name pos:start="219:24" pos:end="219:28">avctx</name></expr></argument>, <argument pos:start="219:31" pos:end="219:42"><expr pos:start="219:31" pos:end="219:42"><name pos:start="219:31" pos:end="219:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:45" pos:end="219:71"><expr pos:start="219:45" pos:end="219:71"><literal type="string" pos:start="219:45" pos:end="219:71">"PPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="219:74" pos:end="219:83"><expr pos:start="219:74" pos:end="219:83"><name pos:start="219:74" pos:end="219:83"><name pos:start="219:74" pos:end="219:75">sh</name><operator pos:start="219:76" pos:end="219:77">-&gt;</operator><name pos:start="219:78" pos:end="219:83">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="221:17" pos:end="221:43">return <expr pos:start="221:24" pos:end="221:42"><name pos:start="221:24" pos:end="221:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:63"><expr pos:start="225:13" pos:end="225:62"><name pos:start="225:13" pos:end="225:19"><name pos:start="225:13" pos:end="225:14">ps</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:19">pps</name></name> <operator pos:start="225:21" pos:end="225:21">=</operator> <operator pos:start="225:23" pos:end="225:23">(</operator><name pos:start="225:24" pos:end="225:30">HEVCPPS</name><operator pos:start="225:31" pos:end="225:31">*</operator><operator pos:start="225:32" pos:end="225:32">)</operator><name pos:start="225:33" pos:end="225:56"><name pos:start="225:33" pos:end="225:34">ps</name><operator pos:start="225:35" pos:end="225:36">-&gt;</operator><name pos:start="225:37" pos:end="225:44">pps_list</name><index pos:start="225:45" pos:end="225:56">[<expr pos:start="225:46" pos:end="225:55"><name pos:start="225:46" pos:end="225:55"><name pos:start="225:46" pos:end="225:47">sh</name><operator pos:start="225:48" pos:end="225:49">-&gt;</operator><name pos:start="225:50" pos:end="225:55">pps_id</name></name></expr>]</index></name><operator pos:start="225:57" pos:end="225:58">-&gt;</operator><name pos:start="225:59" pos:end="225:62">data</name></expr>;</expr_stmt>



            <if_stmt pos:start="229:13" pos:end="235:13"><if pos:start="229:13" pos:end="235:13">if <condition pos:start="229:16" pos:end="229:83">(<expr pos:start="229:17" pos:end="229:82"><name pos:start="229:17" pos:end="229:31"><name pos:start="229:17" pos:end="229:18">ps</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:23">pps</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:31">sps_id</name></name> <operator pos:start="229:33" pos:end="229:34">&gt;=</operator> <name pos:start="229:36" pos:end="229:48">MAX_SPS_COUNT</name> <operator pos:start="229:50" pos:end="229:51">||</operator> <operator pos:start="229:53" pos:end="229:53">!</operator><name pos:start="229:54" pos:end="229:82"><name pos:start="229:54" pos:end="229:55">ps</name><operator pos:start="229:56" pos:end="229:57">-&gt;</operator><name pos:start="229:58" pos:end="229:65">sps_list</name><index pos:start="229:66" pos:end="229:82">[<expr pos:start="229:67" pos:end="229:81"><name pos:start="229:67" pos:end="229:81"><name pos:start="229:67" pos:end="229:68">ps</name><operator pos:start="229:69" pos:end="229:70">-&gt;</operator><name pos:start="229:71" pos:end="229:73">pps</name><operator pos:start="229:74" pos:end="229:75">-&gt;</operator><name pos:start="229:76" pos:end="229:81">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="229:85" pos:end="235:13">{<block_content pos:start="231:17" pos:end="233:43">

                <expr_stmt pos:start="231:17" pos:end="231:90"><expr pos:start="231:17" pos:end="231:89"><call pos:start="231:17" pos:end="231:89"><name pos:start="231:17" pos:end="231:22">av_log</name><argument_list pos:start="231:23" pos:end="231:89">(<argument pos:start="231:24" pos:end="231:28"><expr pos:start="231:24" pos:end="231:28"><name pos:start="231:24" pos:end="231:28">avctx</name></expr></argument>, <argument pos:start="231:31" pos:end="231:42"><expr pos:start="231:31" pos:end="231:42"><name pos:start="231:31" pos:end="231:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="231:45" pos:end="231:71"><expr pos:start="231:45" pos:end="231:71"><literal type="string" pos:start="231:45" pos:end="231:71">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="231:74" pos:end="231:88"><expr pos:start="231:74" pos:end="231:88"><name pos:start="231:74" pos:end="231:88"><name pos:start="231:74" pos:end="231:75">ps</name><operator pos:start="231:76" pos:end="231:77">-&gt;</operator><name pos:start="231:78" pos:end="231:80">pps</name><operator pos:start="231:81" pos:end="231:82">-&gt;</operator><name pos:start="231:83" pos:end="231:88">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="233:17" pos:end="233:43">return <expr pos:start="233:24" pos:end="233:42"><name pos:start="233:24" pos:end="233:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="237:13" pos:end="243:13"><if pos:start="237:13" pos:end="243:13">if <condition pos:start="237:16" pos:end="237:73">(<expr pos:start="237:17" pos:end="237:72"><name pos:start="237:17" pos:end="237:23"><name pos:start="237:17" pos:end="237:18">ps</name><operator pos:start="237:19" pos:end="237:20">-&gt;</operator><name pos:start="237:21" pos:end="237:23">sps</name></name> <operator pos:start="237:25" pos:end="237:26">!=</operator> <operator pos:start="237:28" pos:end="237:28">(</operator><name pos:start="237:29" pos:end="237:35">HEVCSPS</name><operator pos:start="237:36" pos:end="237:36">*</operator><operator pos:start="237:37" pos:end="237:37">)</operator><name pos:start="237:38" pos:end="237:66"><name pos:start="237:38" pos:end="237:39">ps</name><operator pos:start="237:40" pos:end="237:41">-&gt;</operator><name pos:start="237:42" pos:end="237:49">sps_list</name><index pos:start="237:50" pos:end="237:66">[<expr pos:start="237:51" pos:end="237:65"><name pos:start="237:51" pos:end="237:65"><name pos:start="237:51" pos:end="237:52">ps</name><operator pos:start="237:53" pos:end="237:54">-&gt;</operator><name pos:start="237:55" pos:end="237:57">pps</name><operator pos:start="237:58" pos:end="237:59">-&gt;</operator><name pos:start="237:60" pos:end="237:65">sps_id</name></name></expr>]</index></name><operator pos:start="237:67" pos:end="237:68">-&gt;</operator><name pos:start="237:69" pos:end="237:72">data</name></expr>)</condition> <block pos:start="237:75" pos:end="243:13">{<block_content pos:start="239:17" pos:end="241:72">

                <expr_stmt pos:start="239:17" pos:end="239:72"><expr pos:start="239:17" pos:end="239:71"><name pos:start="239:17" pos:end="239:23"><name pos:start="239:17" pos:end="239:18">ps</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:23">sps</name></name> <operator pos:start="239:25" pos:end="239:25">=</operator> <operator pos:start="239:27" pos:end="239:27">(</operator><name pos:start="239:28" pos:end="239:34">HEVCSPS</name><operator pos:start="239:35" pos:end="239:35">*</operator><operator pos:start="239:36" pos:end="239:36">)</operator><name pos:start="239:37" pos:end="239:65"><name pos:start="239:37" pos:end="239:38">ps</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:48">sps_list</name><index pos:start="239:49" pos:end="239:65">[<expr pos:start="239:50" pos:end="239:64"><name pos:start="239:50" pos:end="239:64"><name pos:start="239:50" pos:end="239:51">ps</name><operator pos:start="239:52" pos:end="239:53">-&gt;</operator><name pos:start="239:54" pos:end="239:56">pps</name><operator pos:start="239:57" pos:end="239:58">-&gt;</operator><name pos:start="239:59" pos:end="239:64">sps_id</name></name></expr>]</index></name><operator pos:start="239:66" pos:end="239:67">-&gt;</operator><name pos:start="239:68" pos:end="239:71">data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:72"><expr pos:start="241:17" pos:end="241:71"><name pos:start="241:17" pos:end="241:23"><name pos:start="241:17" pos:end="241:18">ps</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:23">vps</name></name> <operator pos:start="241:25" pos:end="241:25">=</operator> <operator pos:start="241:27" pos:end="241:27">(</operator><name pos:start="241:28" pos:end="241:34">HEVCVPS</name><operator pos:start="241:35" pos:end="241:35">*</operator><operator pos:start="241:36" pos:end="241:36">)</operator><name pos:start="241:37" pos:end="241:65"><name pos:start="241:37" pos:end="241:38">ps</name><operator pos:start="241:39" pos:end="241:40">-&gt;</operator><name pos:start="241:41" pos:end="241:48">vps_list</name><index pos:start="241:49" pos:end="241:65">[<expr pos:start="241:50" pos:end="241:64"><name pos:start="241:50" pos:end="241:64"><name pos:start="241:50" pos:end="241:51">ps</name><operator pos:start="241:52" pos:end="241:53">-&gt;</operator><name pos:start="241:54" pos:end="241:56">sps</name><operator pos:start="241:57" pos:end="241:58">-&gt;</operator><name pos:start="241:59" pos:end="241:64">vps_id</name></name></expr>]</index></name><operator pos:start="241:66" pos:end="241:67">-&gt;</operator><name pos:start="241:68" pos:end="241:71">data</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="247:13" pos:end="281:53"><if pos:start="247:13" pos:end="279:13">if <condition pos:start="247:16" pos:end="247:45">(<expr pos:start="247:17" pos:end="247:44"><operator pos:start="247:17" pos:end="247:17">!</operator><name pos:start="247:18" pos:end="247:44"><name pos:start="247:18" pos:end="247:19">sh</name><operator pos:start="247:20" pos:end="247:21">-&gt;</operator><name pos:start="247:22" pos:end="247:44">first_slice_in_pic_flag</name></name></expr>)</condition> <block pos:start="247:47" pos:end="279:13">{<block_content pos:start="249:17" pos:end="277:17">

                <decl_stmt pos:start="249:17" pos:end="249:41"><decl pos:start="249:17" pos:end="249:40"><type pos:start="249:17" pos:end="249:19"><name pos:start="249:17" pos:end="249:19">int</name></type> <name pos:start="249:21" pos:end="249:40">slice_address_length</name></decl>;</decl_stmt>



                <if_stmt pos:start="253:17" pos:end="259:57"><if pos:start="253:17" pos:end="255:69">if <condition pos:start="253:20" pos:end="253:67">(<expr pos:start="253:21" pos:end="253:66"><name pos:start="253:21" pos:end="253:66"><name pos:start="253:21" pos:end="253:22">ps</name><operator pos:start="253:23" pos:end="253:24">-&gt;</operator><name pos:start="253:25" pos:end="253:27">pps</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:66">dependent_slice_segments_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="255:21" pos:end="255:69"><block_content pos:start="255:21" pos:end="255:69">

                    <expr_stmt pos:start="255:21" pos:end="255:69"><expr pos:start="255:21" pos:end="255:68"><name pos:start="255:21" pos:end="255:52"><name pos:start="255:21" pos:end="255:22">sh</name><operator pos:start="255:23" pos:end="255:24">-&gt;</operator><name pos:start="255:25" pos:end="255:52">dependent_slice_segment_flag</name></name> <operator pos:start="255:54" pos:end="255:54">=</operator> <call pos:start="255:56" pos:end="255:68"><name pos:start="255:56" pos:end="255:64">get_bits1</name><argument_list pos:start="255:65" pos:end="255:68">(<argument pos:start="255:66" pos:end="255:67"><expr pos:start="255:66" pos:end="255:67"><name pos:start="255:66" pos:end="255:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="257:17" pos:end="259:57">else<block type="pseudo" pos:start="259:21" pos:end="259:57"><block_content pos:start="259:21" pos:end="259:57">

                    <expr_stmt pos:start="259:21" pos:end="259:57"><expr pos:start="259:21" pos:end="259:56"><name pos:start="259:21" pos:end="259:52"><name pos:start="259:21" pos:end="259:22">sh</name><operator pos:start="259:23" pos:end="259:24">-&gt;</operator><name pos:start="259:25" pos:end="259:52">dependent_slice_segment_flag</name></name> <operator pos:start="259:54" pos:end="259:54">=</operator> <literal type="number" pos:start="259:56" pos:end="259:56">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="263:17" pos:end="265:75"><expr pos:start="263:17" pos:end="265:74"><name pos:start="263:17" pos:end="263:36">slice_address_length</name> <operator pos:start="263:38" pos:end="263:38">=</operator> <call pos:start="263:40" pos:end="265:74"><name pos:start="263:40" pos:end="263:53">av_ceil_log2_c</name><argument_list pos:start="263:54" pos:end="265:74">(<argument pos:start="263:55" pos:end="265:73"><expr pos:start="263:55" pos:end="265:73"><name pos:start="263:55" pos:end="263:72"><name pos:start="263:55" pos:end="263:56">ps</name><operator pos:start="263:57" pos:end="263:58">-&gt;</operator><name pos:start="263:59" pos:end="263:61">sps</name><operator pos:start="263:62" pos:end="263:63">-&gt;</operator><name pos:start="263:64" pos:end="263:72">ctb_width</name></name> <operator pos:start="263:74" pos:end="263:74">*</operator>

                                                      <name pos:start="265:55" pos:end="265:73"><name pos:start="265:55" pos:end="265:56">ps</name><operator pos:start="265:57" pos:end="265:58">-&gt;</operator><name pos:start="265:59" pos:end="265:61">sps</name><operator pos:start="265:62" pos:end="265:63">-&gt;</operator><name pos:start="265:64" pos:end="265:73">ctb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:103"><expr pos:start="267:17" pos:end="267:102"><name pos:start="267:17" pos:end="267:38"><name pos:start="267:17" pos:end="267:18">sh</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:38">slice_segment_addr</name></name> <operator pos:start="267:40" pos:end="267:40">=</operator> <ternary pos:start="267:42" pos:end="267:102"><condition pos:start="267:42" pos:end="267:63"><expr pos:start="267:42" pos:end="267:61"><name pos:start="267:42" pos:end="267:61">slice_address_length</name></expr> ?</condition><then pos:start="267:65" pos:end="267:98"> <expr pos:start="267:65" pos:end="267:98"><call pos:start="267:65" pos:end="267:98"><name pos:start="267:65" pos:end="267:72">get_bits</name><argument_list pos:start="267:73" pos:end="267:98">(<argument pos:start="267:74" pos:end="267:75"><expr pos:start="267:74" pos:end="267:75"><name pos:start="267:74" pos:end="267:75">gb</name></expr></argument>, <argument pos:start="267:78" pos:end="267:97"><expr pos:start="267:78" pos:end="267:97"><name pos:start="267:78" pos:end="267:97">slice_address_length</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="267:100" pos:end="267:102">: <expr pos:start="267:102" pos:end="267:102"><literal type="number" pos:start="267:102" pos:end="267:102">0</literal></expr></else></ternary></expr>;</expr_stmt>

                <if_stmt pos:start="269:17" pos:end="277:17"><if pos:start="269:17" pos:end="277:17">if <condition pos:start="269:20" pos:end="269:87">(<expr pos:start="269:21" pos:end="269:86"><name pos:start="269:21" pos:end="269:42"><name pos:start="269:21" pos:end="269:22">sh</name><operator pos:start="269:23" pos:end="269:24">-&gt;</operator><name pos:start="269:25" pos:end="269:42">slice_segment_addr</name></name> <operator pos:start="269:44" pos:end="269:45">&gt;=</operator> <name pos:start="269:47" pos:end="269:64"><name pos:start="269:47" pos:end="269:48">ps</name><operator pos:start="269:49" pos:end="269:50">-&gt;</operator><name pos:start="269:51" pos:end="269:53">sps</name><operator pos:start="269:54" pos:end="269:55">-&gt;</operator><name pos:start="269:56" pos:end="269:64">ctb_width</name></name> <operator pos:start="269:66" pos:end="269:66">*</operator> <name pos:start="269:68" pos:end="269:86"><name pos:start="269:68" pos:end="269:69">ps</name><operator pos:start="269:70" pos:end="269:71">-&gt;</operator><name pos:start="269:72" pos:end="269:74">sps</name><operator pos:start="269:75" pos:end="269:76">-&gt;</operator><name pos:start="269:77" pos:end="269:86">ctb_height</name></name></expr>)</condition> <block pos:start="269:89" pos:end="277:17">{<block_content pos:start="271:21" pos:end="275:47">

                    <expr_stmt pos:start="271:21" pos:end="273:51"><expr pos:start="271:21" pos:end="273:50"><call pos:start="271:21" pos:end="273:50"><name pos:start="271:21" pos:end="271:26">av_log</name><argument_list pos:start="271:27" pos:end="273:50">(<argument pos:start="271:28" pos:end="271:32"><expr pos:start="271:28" pos:end="271:32"><name pos:start="271:28" pos:end="271:32">avctx</name></expr></argument>, <argument pos:start="271:35" pos:end="271:46"><expr pos:start="271:35" pos:end="271:46"><name pos:start="271:35" pos:end="271:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:49" pos:end="271:86"><expr pos:start="271:49" pos:end="271:86"><literal type="string" pos:start="271:49" pos:end="271:86">"Invalid slice segment address: %u.\n"</literal></expr></argument>,

                           <argument pos:start="273:28" pos:end="273:49"><expr pos:start="273:28" pos:end="273:49"><name pos:start="273:28" pos:end="273:49"><name pos:start="273:28" pos:end="273:29">sh</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:49">slice_segment_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="275:21" pos:end="275:47">return <expr pos:start="275:28" pos:end="275:46"><name pos:start="275:28" pos:end="275:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="279:15" pos:end="281:53">else<block type="pseudo" pos:start="281:17" pos:end="281:53"><block_content pos:start="281:17" pos:end="281:53">

                <expr_stmt pos:start="281:17" pos:end="281:53"><expr pos:start="281:17" pos:end="281:52"><name pos:start="281:17" pos:end="281:48"><name pos:start="281:17" pos:end="281:18">sh</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:48">dependent_slice_segment_flag</name></name> <operator pos:start="281:50" pos:end="281:50">=</operator> <literal type="number" pos:start="281:52" pos:end="281:52">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="285:13" pos:end="287:22"><if pos:start="285:13" pos:end="287:22">if <condition pos:start="285:16" pos:end="285:49">(<expr pos:start="285:17" pos:end="285:48"><name pos:start="285:17" pos:end="285:48"><name pos:start="285:17" pos:end="285:18">sh</name><operator pos:start="285:19" pos:end="285:20">-&gt;</operator><name pos:start="285:21" pos:end="285:48">dependent_slice_segment_flag</name></name></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:22"><block_content pos:start="287:17" pos:end="287:22">

                <break pos:start="287:17" pos:end="287:22">break;</break></block_content></block></if></if_stmt>



            <for pos:start="291:13" pos:end="293:33">for <control pos:start="291:17" pos:end="291:70">(<init pos:start="291:18" pos:end="291:23"><expr pos:start="291:18" pos:end="291:22"><name pos:start="291:18" pos:end="291:18">i</name> <operator pos:start="291:20" pos:end="291:20">=</operator> <literal type="number" pos:start="291:22" pos:end="291:22">0</literal></expr>;</init> <condition pos:start="291:25" pos:end="291:65"><expr pos:start="291:25" pos:end="291:64"><name pos:start="291:25" pos:end="291:25">i</name> <operator pos:start="291:27" pos:end="291:27">&lt;</operator> <name pos:start="291:29" pos:end="291:64"><name pos:start="291:29" pos:end="291:30">ps</name><operator pos:start="291:31" pos:end="291:32">-&gt;</operator><name pos:start="291:33" pos:end="291:35">pps</name><operator pos:start="291:36" pos:end="291:37">-&gt;</operator><name pos:start="291:38" pos:end="291:64">num_extra_slice_header_bits</name></name></expr>;</condition> <incr pos:start="291:67" pos:end="291:69"><expr pos:start="291:67" pos:end="291:69"><name pos:start="291:67" pos:end="291:67">i</name><operator pos:start="291:68" pos:end="291:69">++</operator></expr></incr>)</control><block type="pseudo" pos:start="293:17" pos:end="293:33"><block_content pos:start="293:17" pos:end="293:33">

                <expr_stmt pos:start="293:17" pos:end="293:33"><expr pos:start="293:17" pos:end="293:32"><call pos:start="293:17" pos:end="293:32"><name pos:start="293:17" pos:end="293:25">skip_bits</name><argument_list pos:start="293:26" pos:end="293:32">(<argument pos:start="293:27" pos:end="293:28"><expr pos:start="293:27" pos:end="293:28"><name pos:start="293:27" pos:end="293:28">gb</name></expr></argument>, <argument pos:start="293:31" pos:end="293:31"><expr pos:start="293:31" pos:end="293:31"><literal type="number" pos:start="293:31" pos:end="293:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="293:35" pos:end="293:71">// slice_reserved_undetermined_flag[]</comment>



            <expr_stmt pos:start="297:13" pos:end="297:47"><expr pos:start="297:13" pos:end="297:46"><name pos:start="297:13" pos:end="297:26"><name pos:start="297:13" pos:end="297:14">sh</name><operator pos:start="297:15" pos:end="297:16">-&gt;</operator><name pos:start="297:17" pos:end="297:26">slice_type</name></name> <operator pos:start="297:28" pos:end="297:28">=</operator> <call pos:start="297:30" pos:end="297:46"><name pos:start="297:30" pos:end="297:42">get_ue_golomb</name><argument_list pos:start="297:43" pos:end="297:46">(<argument pos:start="297:44" pos:end="297:45"><expr pos:start="297:44" pos:end="297:45"><name pos:start="297:44" pos:end="297:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="299:13" pos:end="309:13"><if pos:start="299:13" pos:end="309:13">if <condition pos:start="299:16" pos:end="301:45">(<expr pos:start="299:17" pos:end="301:44"><operator pos:start="299:17" pos:end="299:17">!</operator><operator pos:start="299:18" pos:end="299:18">(</operator><name pos:start="299:19" pos:end="299:32"><name pos:start="299:19" pos:end="299:20">sh</name><operator pos:start="299:21" pos:end="299:22">-&gt;</operator><name pos:start="299:23" pos:end="299:32">slice_type</name></name> <operator pos:start="299:34" pos:end="299:35">==</operator> <name pos:start="299:37" pos:end="299:43">I_SLICE</name> <operator pos:start="299:45" pos:end="299:46">||</operator> <name pos:start="299:48" pos:end="299:61"><name pos:start="299:48" pos:end="299:49">sh</name><operator pos:start="299:50" pos:end="299:51">-&gt;</operator><name pos:start="299:52" pos:end="299:61">slice_type</name></name> <operator pos:start="299:63" pos:end="299:64">==</operator> <name pos:start="299:66" pos:end="299:72">P_SLICE</name> <operator pos:start="299:74" pos:end="299:75">||</operator>

                  <name pos:start="301:19" pos:end="301:32"><name pos:start="301:19" pos:end="301:20">sh</name><operator pos:start="301:21" pos:end="301:22">-&gt;</operator><name pos:start="301:23" pos:end="301:32">slice_type</name></name> <operator pos:start="301:34" pos:end="301:35">==</operator> <name pos:start="301:37" pos:end="301:43">B_SLICE</name><operator pos:start="301:44" pos:end="301:44">)</operator></expr>)</condition> <block pos:start="301:47" pos:end="309:13">{<block_content pos:start="303:17" pos:end="307:43">

                <expr_stmt pos:start="303:17" pos:end="305:39"><expr pos:start="303:17" pos:end="305:38"><call pos:start="303:17" pos:end="305:38"><name pos:start="303:17" pos:end="303:22">av_log</name><argument_list pos:start="303:23" pos:end="305:38">(<argument pos:start="303:24" pos:end="303:28"><expr pos:start="303:24" pos:end="303:28"><name pos:start="303:24" pos:end="303:28">avctx</name></expr></argument>, <argument pos:start="303:31" pos:end="303:42"><expr pos:start="303:31" pos:end="303:42"><name pos:start="303:31" pos:end="303:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="303:45" pos:end="303:71"><expr pos:start="303:45" pos:end="303:71"><literal type="string" pos:start="303:45" pos:end="303:71">"Unknown slice type: %d.\n"</literal></expr></argument>,

                       <argument pos:start="305:24" pos:end="305:37"><expr pos:start="305:24" pos:end="305:37"><name pos:start="305:24" pos:end="305:37"><name pos:start="305:24" pos:end="305:25">sh</name><operator pos:start="305:26" pos:end="305:27">-&gt;</operator><name pos:start="305:28" pos:end="305:37">slice_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="307:17" pos:end="307:43">return <expr pos:start="307:24" pos:end="307:42"><name pos:start="307:24" pos:end="307:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="311:13" pos:end="315:73"><expr pos:start="311:13" pos:end="315:72"><name pos:start="311:13" pos:end="311:24"><name pos:start="311:13" pos:end="311:13">s</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:24">pict_type</name></name> <operator pos:start="311:26" pos:end="311:26">=</operator> <ternary pos:start="311:28" pos:end="315:72"><condition pos:start="311:28" pos:end="311:54"><expr pos:start="311:28" pos:end="311:52"><name pos:start="311:28" pos:end="311:41"><name pos:start="311:28" pos:end="311:29">sh</name><operator pos:start="311:30" pos:end="311:31">-&gt;</operator><name pos:start="311:32" pos:end="311:41">slice_type</name></name> <operator pos:start="311:43" pos:end="311:44">==</operator> <name pos:start="311:46" pos:end="311:52">B_SLICE</name></expr> ?</condition><then pos:start="311:56" pos:end="311:72"> <expr pos:start="311:56" pos:end="311:72"><name pos:start="311:56" pos:end="311:72">AV_PICTURE_TYPE_B</name></expr> </then><else pos:start="311:74" pos:end="315:72">:

                           <expr pos:start="313:28" pos:end="315:72"><ternary pos:start="313:28" pos:end="315:72"><condition pos:start="313:28" pos:end="313:54"><expr pos:start="313:28" pos:end="313:52"><name pos:start="313:28" pos:end="313:41"><name pos:start="313:28" pos:end="313:29">sh</name><operator pos:start="313:30" pos:end="313:31">-&gt;</operator><name pos:start="313:32" pos:end="313:41">slice_type</name></name> <operator pos:start="313:43" pos:end="313:44">==</operator> <name pos:start="313:46" pos:end="313:52">P_SLICE</name></expr> ?</condition><then pos:start="313:56" pos:end="313:72"> <expr pos:start="313:56" pos:end="313:72"><name pos:start="313:56" pos:end="313:72">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="313:74" pos:end="315:72">:

                                                       <expr pos:start="315:56" pos:end="315:72"><name pos:start="315:56" pos:end="315:72">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



            <if_stmt pos:start="319:13" pos:end="321:52"><if pos:start="319:13" pos:end="321:52">if <condition pos:start="319:16" pos:end="319:50">(<expr pos:start="319:17" pos:end="319:49"><name pos:start="319:17" pos:end="319:49"><name pos:start="319:17" pos:end="319:18">ps</name><operator pos:start="319:19" pos:end="319:20">-&gt;</operator><name pos:start="319:21" pos:end="319:23">pps</name><operator pos:start="319:24" pos:end="319:25">-&gt;</operator><name pos:start="319:26" pos:end="319:49">output_flag_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="321:17" pos:end="321:52"><block_content pos:start="321:17" pos:end="321:52">

                <expr_stmt pos:start="321:17" pos:end="321:52"><expr pos:start="321:17" pos:end="321:51"><name pos:start="321:17" pos:end="321:35"><name pos:start="321:17" pos:end="321:18">sh</name><operator pos:start="321:19" pos:end="321:20">-&gt;</operator><name pos:start="321:21" pos:end="321:35">pic_output_flag</name></name> <operator pos:start="321:37" pos:end="321:37">=</operator> <call pos:start="321:39" pos:end="321:51"><name pos:start="321:39" pos:end="321:47">get_bits1</name><argument_list pos:start="321:48" pos:end="321:51">(<argument pos:start="321:49" pos:end="321:50"><expr pos:start="321:49" pos:end="321:50"><name pos:start="321:49" pos:end="321:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="325:13" pos:end="327:54"><if pos:start="325:13" pos:end="327:54">if <condition pos:start="325:16" pos:end="325:52">(<expr pos:start="325:17" pos:end="325:51"><name pos:start="325:17" pos:end="325:51"><name pos:start="325:17" pos:end="325:18">ps</name><operator pos:start="325:19" pos:end="325:20">-&gt;</operator><name pos:start="325:21" pos:end="325:23">sps</name><operator pos:start="325:24" pos:end="325:25">-&gt;</operator><name pos:start="325:26" pos:end="325:51">separate_colour_plane_flag</name></name></expr>)</condition><block type="pseudo" pos:start="327:17" pos:end="327:54"><block_content pos:start="327:17" pos:end="327:54">

                <expr_stmt pos:start="327:17" pos:end="327:54"><expr pos:start="327:17" pos:end="327:53"><name pos:start="327:17" pos:end="327:35"><name pos:start="327:17" pos:end="327:18">sh</name><operator pos:start="327:19" pos:end="327:20">-&gt;</operator><name pos:start="327:21" pos:end="327:35">colour_plane_id</name></name> <operator pos:start="327:37" pos:end="327:37">=</operator> <call pos:start="327:39" pos:end="327:53"><name pos:start="327:39" pos:end="327:46">get_bits</name><argument_list pos:start="327:47" pos:end="327:53">(<argument pos:start="327:48" pos:end="327:49"><expr pos:start="327:48" pos:end="327:49"><name pos:start="327:48" pos:end="327:49">gb</name></expr></argument>, <argument pos:start="327:52" pos:end="327:52"><expr pos:start="327:52" pos:end="327:52"><literal type="number" pos:start="327:52" pos:end="327:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="331:13" pos:end="339:54"><if pos:start="331:13" pos:end="337:13">if <condition pos:start="331:16" pos:end="331:27">(<expr pos:start="331:17" pos:end="331:26"><operator pos:start="331:17" pos:end="331:17">!</operator><call pos:start="331:18" pos:end="331:26"><name pos:start="331:18" pos:end="331:23">IS_IDR</name><argument_list pos:start="331:24" pos:end="331:26">(<argument pos:start="331:25" pos:end="331:25"><expr pos:start="331:25" pos:end="331:25"><name pos:start="331:25" pos:end="331:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:29" pos:end="337:13">{<block_content pos:start="333:17" pos:end="335:98">

                <expr_stmt pos:start="333:17" pos:end="333:80"><expr pos:start="333:17" pos:end="333:79"><name pos:start="333:17" pos:end="333:37"><name pos:start="333:17" pos:end="333:18">sh</name><operator pos:start="333:19" pos:end="333:20">-&gt;</operator><name pos:start="333:21" pos:end="333:37">pic_order_cnt_lsb</name></name> <operator pos:start="333:39" pos:end="333:39">=</operator> <call pos:start="333:41" pos:end="333:79"><name pos:start="333:41" pos:end="333:48">get_bits</name><argument_list pos:start="333:49" pos:end="333:79">(<argument pos:start="333:50" pos:end="333:51"><expr pos:start="333:50" pos:end="333:51"><name pos:start="333:50" pos:end="333:51">gb</name></expr></argument>, <argument pos:start="333:54" pos:end="333:78"><expr pos:start="333:54" pos:end="333:78"><name pos:start="333:54" pos:end="333:78"><name pos:start="333:54" pos:end="333:55">ps</name><operator pos:start="333:56" pos:end="333:57">-&gt;</operator><name pos:start="333:58" pos:end="333:60">sps</name><operator pos:start="333:61" pos:end="333:62">-&gt;</operator><name pos:start="333:63" pos:end="333:78">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:98"><expr pos:start="335:17" pos:end="335:97"><name pos:start="335:17" pos:end="335:40"><name pos:start="335:17" pos:end="335:17">s</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:40">output_picture_number</name></name> <operator pos:start="335:42" pos:end="335:42">=</operator> <name pos:start="335:44" pos:end="335:49"><name pos:start="335:44" pos:end="335:44">h</name><operator pos:start="335:45" pos:end="335:46">-&gt;</operator><name pos:start="335:47" pos:end="335:49">poc</name></name> <operator pos:start="335:51" pos:end="335:51">=</operator> <call pos:start="335:53" pos:end="335:97"><name pos:start="335:53" pos:end="335:71">ff_hevc_compute_poc</name><argument_list pos:start="335:72" pos:end="335:97">(<argument pos:start="335:73" pos:end="335:73"><expr pos:start="335:73" pos:end="335:73"><name pos:start="335:73" pos:end="335:73">h</name></expr></argument>, <argument pos:start="335:76" pos:end="335:96"><expr pos:start="335:76" pos:end="335:96"><name pos:start="335:76" pos:end="335:96"><name pos:start="335:76" pos:end="335:77">sh</name><operator pos:start="335:78" pos:end="335:79">-&gt;</operator><name pos:start="335:80" pos:end="335:96">pic_order_cnt_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="337:15" pos:end="339:54">else<block type="pseudo" pos:start="339:17" pos:end="339:54"><block_content pos:start="339:17" pos:end="339:54">

                <expr_stmt pos:start="339:17" pos:end="339:54"><expr pos:start="339:17" pos:end="339:53"><name pos:start="339:17" pos:end="339:40"><name pos:start="339:17" pos:end="339:17">s</name><operator pos:start="339:18" pos:end="339:19">-&gt;</operator><name pos:start="339:20" pos:end="339:40">output_picture_number</name></name> <operator pos:start="339:42" pos:end="339:42">=</operator> <name pos:start="339:44" pos:end="339:49"><name pos:start="339:44" pos:end="339:44">h</name><operator pos:start="339:45" pos:end="339:46">-&gt;</operator><name pos:start="339:47" pos:end="339:49">poc</name></name> <operator pos:start="339:51" pos:end="339:51">=</operator> <literal type="number" pos:start="339:53" pos:end="339:53">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="343:13" pos:end="359:36"><if pos:start="343:13" pos:end="359:36">if <condition pos:start="343:16" pos:end="357:47">(<expr pos:start="343:17" pos:end="357:46"><name pos:start="343:17" pos:end="343:30"><name pos:start="343:17" pos:end="343:17">h</name><operator pos:start="343:18" pos:end="343:19">-&gt;</operator><name pos:start="343:20" pos:end="343:30">temporal_id</name></name> <operator pos:start="343:32" pos:end="343:33">==</operator> <literal type="number" pos:start="343:35" pos:end="343:35">0</literal> <operator pos:start="343:37" pos:end="343:38">&amp;&amp;</operator>

                <name pos:start="345:17" pos:end="345:32"><name pos:start="345:17" pos:end="345:17">h</name><operator pos:start="345:18" pos:end="345:19">-&gt;</operator><name pos:start="345:20" pos:end="345:32">nal_unit_type</name></name> <operator pos:start="345:34" pos:end="345:35">!=</operator> <name pos:start="345:37" pos:end="345:47">NAL_TRAIL_N</name> <operator pos:start="345:49" pos:end="345:50">&amp;&amp;</operator>

                <name pos:start="347:17" pos:end="347:32"><name pos:start="347:17" pos:end="347:17">h</name><operator pos:start="347:18" pos:end="347:19">-&gt;</operator><name pos:start="347:20" pos:end="347:32">nal_unit_type</name></name> <operator pos:start="347:34" pos:end="347:35">!=</operator> <name pos:start="347:37" pos:end="347:45">NAL_TSA_N</name> <operator pos:start="347:47" pos:end="347:48">&amp;&amp;</operator>

                <name pos:start="349:17" pos:end="349:32"><name pos:start="349:17" pos:end="349:17">h</name><operator pos:start="349:18" pos:end="349:19">-&gt;</operator><name pos:start="349:20" pos:end="349:32">nal_unit_type</name></name> <operator pos:start="349:34" pos:end="349:35">!=</operator> <name pos:start="349:37" pos:end="349:46">NAL_STSA_N</name> <operator pos:start="349:48" pos:end="349:49">&amp;&amp;</operator>

                <name pos:start="351:17" pos:end="351:32"><name pos:start="351:17" pos:end="351:17">h</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:32">nal_unit_type</name></name> <operator pos:start="351:34" pos:end="351:35">!=</operator> <name pos:start="351:37" pos:end="351:46">NAL_RADL_N</name> <operator pos:start="351:48" pos:end="351:49">&amp;&amp;</operator>

                <name pos:start="353:17" pos:end="353:32"><name pos:start="353:17" pos:end="353:17">h</name><operator pos:start="353:18" pos:end="353:19">-&gt;</operator><name pos:start="353:20" pos:end="353:32">nal_unit_type</name></name> <operator pos:start="353:34" pos:end="353:35">!=</operator> <name pos:start="353:37" pos:end="353:46">NAL_RASL_N</name> <operator pos:start="353:48" pos:end="353:49">&amp;&amp;</operator>

                <name pos:start="355:17" pos:end="355:32"><name pos:start="355:17" pos:end="355:17">h</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:32">nal_unit_type</name></name> <operator pos:start="355:34" pos:end="355:35">!=</operator> <name pos:start="355:37" pos:end="355:46">NAL_RADL_R</name> <operator pos:start="355:48" pos:end="355:49">&amp;&amp;</operator>

                <name pos:start="357:17" pos:end="357:32"><name pos:start="357:17" pos:end="357:17">h</name><operator pos:start="357:18" pos:end="357:19">-&gt;</operator><name pos:start="357:20" pos:end="357:32">nal_unit_type</name></name> <operator pos:start="357:34" pos:end="357:35">!=</operator> <name pos:start="357:37" pos:end="357:46">NAL_RASL_R</name></expr>)</condition><block type="pseudo" pos:start="359:17" pos:end="359:36"><block_content pos:start="359:17" pos:end="359:36">

                <expr_stmt pos:start="359:17" pos:end="359:36"><expr pos:start="359:17" pos:end="359:35"><name pos:start="359:17" pos:end="359:26"><name pos:start="359:17" pos:end="359:17">h</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:26">pocTid0</name></name> <operator pos:start="359:28" pos:end="359:28">=</operator> <name pos:start="359:30" pos:end="359:35"><name pos:start="359:30" pos:end="359:30">h</name><operator pos:start="359:31" pos:end="359:32">-&gt;</operator><name pos:start="359:33" pos:end="359:35">poc</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <return pos:start="363:13" pos:end="363:21">return <expr pos:start="363:20" pos:end="363:20"><literal type="number" pos:start="363:20" pos:end="363:20">0</literal></expr>;</return> <comment type="block" pos:start="363:23" pos:end="363:56">/* no need to evaluate the rest */</comment>

        </block_content>}</block></switch>

        <expr_stmt pos:start="367:9" pos:end="367:24"><expr pos:start="367:9" pos:end="367:23"><name pos:start="367:9" pos:end="367:11">buf</name> <operator pos:start="367:13" pos:end="367:14">+=</operator> <name pos:start="367:16" pos:end="367:23">consumed</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="371:5" pos:end="371:32">/* didn't find a picture! */</comment>

    <if_stmt pos:start="373:5" pos:end="375:75"><if pos:start="373:5" pos:end="375:75">if <condition pos:start="373:8" pos:end="373:19">(<expr pos:start="373:9" pos:end="373:18"><operator pos:start="373:9" pos:end="373:9">!</operator><name pos:start="373:10" pos:end="373:18">is_global</name></expr>)</condition><block type="pseudo" pos:start="375:9" pos:end="375:75"><block_content pos:start="375:9" pos:end="375:75">

        <expr_stmt pos:start="375:9" pos:end="375:75"><expr pos:start="375:9" pos:end="375:74"><call pos:start="375:9" pos:end="375:74"><name pos:start="375:9" pos:end="375:14">av_log</name><argument_list pos:start="375:15" pos:end="375:74">(<argument pos:start="375:16" pos:end="375:23"><expr pos:start="375:16" pos:end="375:23"><name pos:start="375:16" pos:end="375:23"><name pos:start="375:16" pos:end="375:16">h</name><operator pos:start="375:17" pos:end="375:18">-&gt;</operator><name pos:start="375:19" pos:end="375:23">avctx</name></name></expr></argument>, <argument pos:start="375:26" pos:end="375:37"><expr pos:start="375:26" pos:end="375:37"><name pos:start="375:26" pos:end="375:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="375:40" pos:end="375:73"><expr pos:start="375:40" pos:end="375:73"><literal type="string" pos:start="375:40" pos:end="375:73">"missing picture in access unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="377:5" pos:end="377:14">return <expr pos:start="377:12" pos:end="377:13"><operator pos:start="377:12" pos:end="377:12">-</operator><literal type="number" pos:start="377:13" pos:end="377:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
