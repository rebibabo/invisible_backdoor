<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17379.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">uint8_t</name></type> <name pos:start="1:16" pos:end="1:40">usb_linux_get_alt_setting</name><parameter_list pos:start="1:41" pos:end="3:45">(<parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:54">USBHostDevice</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:25"><type pos:start="3:5" pos:end="3:25"><name pos:start="3:5" pos:end="3:11">uint8_t</name></type> <name pos:start="3:13" pos:end="3:25">configuration</name></decl></parameter>, <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:34">uint8_t</name></type> <name pos:start="3:36" pos:end="3:44">interface</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:23">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:24"><name pos:start="7:10" pos:end="7:20">device_name</name><index pos:start="7:21" pos:end="7:24">[<expr pos:start="7:22" pos:end="7:23"><literal type="number" pos:start="7:22" pos:end="7:23">64</literal></expr>]</index></name></decl>, <decl pos:start="7:27" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:27" pos:end="7:36"><name pos:start="7:27" pos:end="7:30">line</name><index pos:start="7:31" pos:end="7:36">[<expr pos:start="7:32" pos:end="7:35"><literal type="number" pos:start="7:32" pos:end="7:35">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">alt_setting</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="15:48"><expr pos:start="13:5" pos:end="15:47"><call pos:start="13:5" pos:end="15:47"><name pos:start="13:5" pos:end="13:11">sprintf</name><argument_list pos:start="13:12" pos:end="15:47">(<argument pos:start="13:13" pos:end="13:23"><expr pos:start="13:13" pos:end="13:23"><name pos:start="13:13" pos:end="13:23">device_name</name></expr></argument>, <argument pos:start="13:26" pos:end="13:38"><expr pos:start="13:26" pos:end="13:38"><literal type="string" pos:start="13:26" pos:end="13:38">"%d-%s:%d.%d"</literal></expr></argument>, <argument pos:start="13:41" pos:end="13:50"><expr pos:start="13:41" pos:end="13:50"><name pos:start="13:41" pos:end="13:50"><name pos:start="13:41" pos:end="13:41">s</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:50">bus_num</name></name></expr></argument>, <argument pos:start="13:53" pos:end="13:59"><expr pos:start="13:53" pos:end="13:59"><name pos:start="13:53" pos:end="13:59"><name pos:start="13:53" pos:end="13:53">s</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:59">port</name></name></expr></argument>,

            <argument pos:start="15:13" pos:end="15:30"><expr pos:start="15:13" pos:end="15:30"><operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:16">int</name><operator pos:start="15:17" pos:end="15:17">)</operator><name pos:start="15:18" pos:end="15:30">configuration</name></expr></argument>, <argument pos:start="15:33" pos:end="15:46"><expr pos:start="15:33" pos:end="15:46"><operator pos:start="15:33" pos:end="15:33">(</operator><name pos:start="15:34" pos:end="15:36">int</name><operator pos:start="15:37" pos:end="15:37">)</operator><name pos:start="15:38" pos:end="15:46">interface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="21:41">(<expr pos:start="19:9" pos:end="21:40"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="21:40"><name pos:start="19:10" pos:end="19:27">usb_host_read_file</name><argument_list pos:start="19:28" pos:end="21:40">(<argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">line</name></expr></argument>, <argument pos:start="19:35" pos:end="19:46"><expr pos:start="19:35" pos:end="19:46"><sizeof pos:start="19:35" pos:end="19:46">sizeof<argument_list pos:start="19:41" pos:end="19:46">(<argument pos:start="19:42" pos:end="19:45"><expr pos:start="19:42" pos:end="19:45"><name pos:start="19:42" pos:end="19:45">line</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="19:49" pos:end="19:67"><expr pos:start="19:49" pos:end="19:67"><literal type="string" pos:start="19:49" pos:end="19:67">"bAlternateSetting"</literal></expr></argument>,

                            <argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39">device_name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:43" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <comment type="block" pos:start="23:9" pos:end="23:35">/* Assume alt 0 on error */</comment>

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:46">(<expr pos:start="29:9" pos:end="29:45"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:14">sscanf</name><argument_list pos:start="29:15" pos:end="29:40">(<argument pos:start="29:16" pos:end="29:19"><expr pos:start="29:16" pos:end="29:19"><name pos:start="29:16" pos:end="29:19">line</name></expr></argument>, <argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><literal type="string" pos:start="29:22" pos:end="29:25">"%d"</literal></expr></argument>, <argument pos:start="29:28" pos:end="29:39"><expr pos:start="29:28" pos:end="29:39"><operator pos:start="29:28" pos:end="29:28">&amp;</operator><name pos:start="29:29" pos:end="29:39">alt_setting</name></expr></argument>)</argument_list></call> <operator pos:start="29:42" pos:end="29:43">!=</operator> <literal type="number" pos:start="29:45" pos:end="29:45">1</literal></expr>)</condition> <block pos:start="29:48" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <comment type="block" pos:start="31:9" pos:end="31:35">/* Assume alt 0 on error */</comment>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="37:5" pos:end="37:23">return <expr pos:start="37:12" pos:end="37:22"><name pos:start="37:12" pos:end="37:22">alt_setting</name></expr>;</return>

</block_content>}</block></function>
</unit>
