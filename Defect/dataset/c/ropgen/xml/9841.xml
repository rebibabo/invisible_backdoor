<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9841.c" pos:tabs="8"><function pos:start="1:1" pos:end="297:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">encode_picture_ls</name><parameter_list pos:start="1:29" pos:end="3:66">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">pict</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:53">int</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:65">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="297:1">{<block_content pos:start="7:5" pos:end="295:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">AVFrame</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier><specifier pos:start="7:20" pos:end="7:24">const</specifier></type> <name pos:start="7:26" pos:end="7:26">p</name> <init pos:start="7:28" pos:end="7:33">= <expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">pict</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:18">near</name>         <init pos:start="9:28" pos:end="9:53">= <expr pos:start="9:30" pos:end="9:53"><name pos:start="9:30" pos:end="9:53"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:53">prediction_method</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">PutBitContext</name></type> <name pos:start="11:19" pos:end="11:20">pb</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:17"/><name pos:start="11:23" pos:end="11:25">pb2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">buf2</name></decl>, <decl pos:start="15:20" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:24">zero</name></decl>, <decl pos:start="15:27" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:27" pos:end="15:27">*</modifier></type><name pos:start="15:28" pos:end="15:30">cur</name></decl>, <decl pos:start="15:33" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:33" pos:end="15:33">*</modifier></type><name pos:start="15:34" pos:end="15:37">last</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">JLSState</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:19">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:15">size</name></decl>, <decl pos:start="19:18" pos:end="19:20"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:18" pos:end="19:20">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">comps</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="33:18"><if pos:start="25:5" pos:end="29:18">if <condition pos:start="25:8" pos:end="27:44">(<expr pos:start="25:9" pos:end="27:43"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">pix_fmt</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:42">AV_PIX_FMT_GRAY8</name> <operator pos:start="25:44" pos:end="25:45">||</operator>

        <name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">pix_fmt</name></name> <operator pos:start="27:24" pos:end="27:25">==</operator> <name pos:start="27:27" pos:end="27:43">AV_PIX_FMT_GRAY16</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13">comps</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="31:5" pos:end="33:18">else<block type="pseudo" pos:start="33:9" pos:end="33:18"><block_content pos:start="33:9" pos:end="33:18">

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">comps</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="39:56">(<expr pos:start="37:9" pos:end="39:55"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:12">ret</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="39:50"><name pos:start="37:16" pos:end="37:30">ff_alloc_packet</name><argument_list pos:start="37:31" pos:end="39:50">(<argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">pkt</name></expr></argument>, <argument pos:start="37:37" pos:end="39:49"><expr pos:start="37:37" pos:end="39:49"><name pos:start="37:37" pos:end="37:48"><name pos:start="37:37" pos:end="37:41">avctx</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:48">width</name></name> <operator pos:start="37:50" pos:end="37:50">*</operator> <name pos:start="37:52" pos:end="37:64"><name pos:start="37:52" pos:end="37:56">avctx</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:64">height</name></name> <operator pos:start="37:66" pos:end="37:66">*</operator> <name pos:start="37:68" pos:end="37:72">comps</name> <operator pos:start="37:74" pos:end="37:74">*</operator> <literal type="number" pos:start="37:76" pos:end="37:78">4</literal> <operator pos:start="37:78" pos:end="37:78">+</operator>

                               <name pos:start="39:32" pos:end="39:49">FF_MIN_BUFFER_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="39:51" pos:end="39:51">)</operator> <operator pos:start="39:53" pos:end="39:53">&lt;</operator> <literal type="number" pos:start="39:55" pos:end="39:55">0</literal></expr>)</condition> <block pos:start="39:58" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:19">

        <expr_stmt pos:start="41:9" pos:end="41:70"><expr pos:start="41:9" pos:end="41:69"><call pos:start="41:9" pos:end="41:69"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:69">(<argument pos:start="41:16" pos:end="41:20"><expr pos:start="41:16" pos:end="41:20"><name pos:start="41:16" pos:end="41:20">avctx</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><name pos:start="41:23" pos:end="41:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:37" pos:end="41:68"><expr pos:start="41:37" pos:end="41:68"><literal type="string" pos:start="41:37" pos:end="41:68">"Error getting output packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:32"><expr pos:start="49:5" pos:end="49:31"><name pos:start="49:5" pos:end="49:8">buf2</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <call pos:start="49:12" pos:end="49:31"><name pos:start="49:12" pos:end="49:20">av_malloc</name><argument_list pos:start="49:21" pos:end="49:31">(<argument pos:start="49:22" pos:end="49:30"><expr pos:start="49:22" pos:end="49:30"><name pos:start="49:22" pos:end="49:30"><name pos:start="49:22" pos:end="49:24">pkt</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:30">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><call pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:17">init_put_bits</name><argument_list pos:start="53:18" pos:end="53:44">(<argument pos:start="53:19" pos:end="53:21"><expr pos:start="53:19" pos:end="53:21"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:21">pb</name></expr></argument>, <argument pos:start="53:24" pos:end="53:32"><expr pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:26">pkt</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:32">data</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:43"><expr pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:37">pkt</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:41"><expr pos:start="55:5" pos:end="55:40"><call pos:start="55:5" pos:end="55:40"><name pos:start="55:5" pos:end="55:17">init_put_bits</name><argument_list pos:start="55:18" pos:end="55:40">(<argument pos:start="55:19" pos:end="55:22"><expr pos:start="55:19" pos:end="55:22"><operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:22">pb2</name></expr></argument>, <argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">buf2</name></expr></argument>, <argument pos:start="55:31" pos:end="55:39"><expr pos:start="55:31" pos:end="55:39"><name pos:start="55:31" pos:end="55:39"><name pos:start="55:31" pos:end="55:33">pkt</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:39">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:67">/* write our own JPEG header, can't use mjpeg_picture_header */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:14">put_marker</name><argument_list pos:start="61:15" pos:end="61:24">(<argument pos:start="61:16" pos:end="61:18"><expr pos:start="61:16" pos:end="61:18"><operator pos:start="61:16" pos:end="61:16">&amp;</operator><name pos:start="61:17" pos:end="61:18">pb</name></expr></argument>, <argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">SOI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:14">put_marker</name><argument_list pos:start="63:15" pos:end="63:26">(<argument pos:start="63:16" pos:end="63:18"><expr pos:start="63:16" pos:end="63:18"><operator pos:start="63:16" pos:end="63:16">&amp;</operator><name pos:start="63:17" pos:end="63:18">pb</name></expr></argument>, <argument pos:start="63:21" pos:end="63:25"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:25">SOF48</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:37"><expr pos:start="65:5" pos:end="65:36"><call pos:start="65:5" pos:end="65:36"><name pos:start="65:5" pos:end="65:12">put_bits</name><argument_list pos:start="65:13" pos:end="65:36">(<argument pos:start="65:14" pos:end="65:16"><expr pos:start="65:14" pos:end="65:16"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>, <argument pos:start="65:19" pos:end="65:20"><expr pos:start="65:19" pos:end="65:20"><literal type="number" pos:start="65:19" pos:end="65:20">16</literal></expr></argument>, <argument pos:start="65:23" pos:end="65:35"><expr pos:start="65:23" pos:end="65:35"><literal type="number" pos:start="65:23" pos:end="65:25">8</literal> <operator pos:start="65:25" pos:end="65:25">+</operator> <name pos:start="65:27" pos:end="65:31">comps</name> <operator pos:start="65:33" pos:end="65:33">*</operator> <literal type="number" pos:start="65:35" pos:end="65:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="65:39" pos:end="65:74">// header size depends on components</comment>

    <expr_stmt pos:start="67:5" pos:end="67:69"><expr pos:start="67:5" pos:end="67:68"><call pos:start="67:5" pos:end="67:68"><name pos:start="67:5" pos:end="67:12">put_bits</name><argument_list pos:start="67:13" pos:end="67:68">(<argument pos:start="67:14" pos:end="67:16"><expr pos:start="67:14" pos:end="67:16"><operator pos:start="67:14" pos:end="67:14">&amp;</operator><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>, <argument pos:start="67:19" pos:end="67:19"><expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">8</literal></expr></argument>, <argument pos:start="67:22" pos:end="67:67"><expr pos:start="67:22" pos:end="67:67"><ternary pos:start="67:22" pos:end="67:67"><condition pos:start="67:22" pos:end="67:60"><expr pos:start="67:22" pos:end="67:58"><operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:36"><name pos:start="67:23" pos:end="67:27">avctx</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:36">pix_fmt</name></name> <operator pos:start="67:38" pos:end="67:39">==</operator> <name pos:start="67:41" pos:end="67:57">AV_PIX_FMT_GRAY16</name><operator pos:start="67:58" pos:end="67:58">)</operator></expr> ?</condition><then pos:start="67:62" pos:end="67:63"> <expr pos:start="67:62" pos:end="67:63"><literal type="number" pos:start="67:62" pos:end="67:63">16</literal></expr> </then><else pos:start="67:65" pos:end="67:67">: <expr pos:start="67:67" pos:end="67:67"><literal type="number" pos:start="67:67" pos:end="67:67">8</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="67:72" pos:end="67:77">// bpp</comment>

    <expr_stmt pos:start="69:5" pos:end="69:37"><expr pos:start="69:5" pos:end="69:36"><call pos:start="69:5" pos:end="69:36"><name pos:start="69:5" pos:end="69:12">put_bits</name><argument_list pos:start="69:13" pos:end="69:36">(<argument pos:start="69:14" pos:end="69:16"><expr pos:start="69:14" pos:end="69:16"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:16">pb</name></expr></argument>, <argument pos:start="69:19" pos:end="69:20"><expr pos:start="69:19" pos:end="69:20"><literal type="number" pos:start="69:19" pos:end="69:20">16</literal></expr></argument>, <argument pos:start="69:23" pos:end="69:35"><expr pos:start="69:23" pos:end="69:35"><name pos:start="69:23" pos:end="69:35"><name pos:start="69:23" pos:end="69:27">avctx</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:35">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><call pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:12">put_bits</name><argument_list pos:start="71:13" pos:end="71:35">(<argument pos:start="71:14" pos:end="71:16"><expr pos:start="71:14" pos:end="71:16"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:16">pb</name></expr></argument>, <argument pos:start="71:19" pos:end="71:20"><expr pos:start="71:19" pos:end="71:20"><literal type="number" pos:start="71:19" pos:end="71:20">16</literal></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:27">avctx</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:34">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><call pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:12">put_bits</name><argument_list pos:start="73:13" pos:end="73:27">(<argument pos:start="73:14" pos:end="73:16"><expr pos:start="73:14" pos:end="73:16"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>, <argument pos:start="73:19" pos:end="73:19"><expr pos:start="73:19" pos:end="73:19"><literal type="number" pos:start="73:19" pos:end="73:19">8</literal></expr></argument>, <argument pos:start="73:22" pos:end="73:26"><expr pos:start="73:22" pos:end="73:26"><name pos:start="73:22" pos:end="73:26">comps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>          <comment type="line" pos:start="73:39" pos:end="73:51">// components</comment>

    <for pos:start="75:5" pos:end="83:5">for <control pos:start="75:9" pos:end="75:32">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">1</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:27"><expr pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:20">&lt;=</operator> <name pos:start="75:22" pos:end="75:26">comps</name></expr>;</condition> <incr pos:start="75:29" pos:end="75:31"><expr pos:start="75:29" pos:end="75:31"><name pos:start="75:29" pos:end="75:29">i</name><operator pos:start="75:30" pos:end="75:31">++</operator></expr></incr>)</control> <block pos:start="75:34" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:28">

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:16">put_bits</name><argument_list pos:start="77:17" pos:end="77:27">(<argument pos:start="77:18" pos:end="77:20"><expr pos:start="77:18" pos:end="77:20"><operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:20">pb</name></expr></argument>, <argument pos:start="77:23" pos:end="77:23"><expr pos:start="77:23" pos:end="77:23"><literal type="number" pos:start="77:23" pos:end="77:23">8</literal></expr></argument>, <argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="77:34" pos:end="77:48">// component ID</comment>

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><call pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:16">put_bits</name><argument_list pos:start="79:17" pos:end="79:30">(<argument pos:start="79:18" pos:end="79:20"><expr pos:start="79:18" pos:end="79:20"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:20">pb</name></expr></argument>, <argument pos:start="79:23" pos:end="79:23"><expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">8</literal></expr></argument>, <argument pos:start="79:26" pos:end="79:29"><expr pos:start="79:26" pos:end="79:29"><literal type="number" pos:start="79:26" pos:end="79:29">0x11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="79:34" pos:end="79:53">// subsampling: none</comment>

        <expr_stmt pos:start="81:9" pos:end="81:28"><expr pos:start="81:9" pos:end="81:27"><call pos:start="81:9" pos:end="81:27"><name pos:start="81:9" pos:end="81:16">put_bits</name><argument_list pos:start="81:17" pos:end="81:27">(<argument pos:start="81:18" pos:end="81:20"><expr pos:start="81:18" pos:end="81:20"><operator pos:start="81:18" pos:end="81:18">&amp;</operator><name pos:start="81:19" pos:end="81:20">pb</name></expr></argument>, <argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><literal type="number" pos:start="81:23" pos:end="81:23">8</literal></expr></argument>, <argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="81:34" pos:end="81:60">// Tiq, used by JPEG-LS ext</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="87:5" pos:end="87:25"><expr pos:start="87:5" pos:end="87:24"><call pos:start="87:5" pos:end="87:24"><name pos:start="87:5" pos:end="87:14">put_marker</name><argument_list pos:start="87:15" pos:end="87:24">(<argument pos:start="87:16" pos:end="87:18"><expr pos:start="87:16" pos:end="87:18"><operator pos:start="87:16" pos:end="87:16">&amp;</operator><name pos:start="87:17" pos:end="87:18">pb</name></expr></argument>, <argument pos:start="87:21" pos:end="87:23"><expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:23">SOS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:37"><expr pos:start="89:5" pos:end="89:36"><call pos:start="89:5" pos:end="89:36"><name pos:start="89:5" pos:end="89:12">put_bits</name><argument_list pos:start="89:13" pos:end="89:36">(<argument pos:start="89:14" pos:end="89:16"><expr pos:start="89:14" pos:end="89:16"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:16">pb</name></expr></argument>, <argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><literal type="number" pos:start="89:19" pos:end="89:20">16</literal></expr></argument>, <argument pos:start="89:23" pos:end="89:35"><expr pos:start="89:23" pos:end="89:35"><literal type="number" pos:start="89:23" pos:end="89:25">6</literal> <operator pos:start="89:25" pos:end="89:25">+</operator> <name pos:start="89:27" pos:end="89:31">comps</name> <operator pos:start="89:33" pos:end="89:33">*</operator> <literal type="number" pos:start="89:35" pos:end="89:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><call pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:12">put_bits</name><argument_list pos:start="91:13" pos:end="91:27">(<argument pos:start="91:14" pos:end="91:16"><expr pos:start="91:14" pos:end="91:16"><operator pos:start="91:14" pos:end="91:14">&amp;</operator><name pos:start="91:15" pos:end="91:16">pb</name></expr></argument>, <argument pos:start="91:19" pos:end="91:19"><expr pos:start="91:19" pos:end="91:19"><literal type="number" pos:start="91:19" pos:end="91:19">8</literal></expr></argument>, <argument pos:start="91:22" pos:end="91:26"><expr pos:start="91:22" pos:end="91:26"><name pos:start="91:22" pos:end="91:26">comps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="99:5">for <control pos:start="93:9" pos:end="93:32">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">1</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:27"><expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:20">&lt;=</operator> <name pos:start="93:22" pos:end="93:26">comps</name></expr>;</condition> <incr pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:29">i</name><operator pos:start="93:30" pos:end="93:31">++</operator></expr></incr>)</control> <block pos:start="93:34" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:28">

        <expr_stmt pos:start="95:9" pos:end="95:28"><expr pos:start="95:9" pos:end="95:27"><call pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:16">put_bits</name><argument_list pos:start="95:17" pos:end="95:27">(<argument pos:start="95:18" pos:end="95:20"><expr pos:start="95:18" pos:end="95:20"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:20">pb</name></expr></argument>, <argument pos:start="95:23" pos:end="95:23"><expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">8</literal></expr></argument>, <argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><name pos:start="95:26" pos:end="95:26">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="95:32" pos:end="95:46">// component ID</comment>

        <expr_stmt pos:start="97:9" pos:end="97:28"><expr pos:start="97:9" pos:end="97:27"><call pos:start="97:9" pos:end="97:27"><name pos:start="97:9" pos:end="97:16">put_bits</name><argument_list pos:start="97:17" pos:end="97:27">(<argument pos:start="97:18" pos:end="97:20"><expr pos:start="97:18" pos:end="97:20"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:20">pb</name></expr></argument>, <argument pos:start="97:23" pos:end="97:23"><expr pos:start="97:23" pos:end="97:23"><literal type="number" pos:start="97:23" pos:end="97:23">8</literal></expr></argument>, <argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="97:32" pos:end="97:53">// mapping index: none</comment>

    </block_content>}</block></for>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><call pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:12">put_bits</name><argument_list pos:start="101:13" pos:end="101:26">(<argument pos:start="101:14" pos:end="101:16"><expr pos:start="101:14" pos:end="101:16"><operator pos:start="101:14" pos:end="101:14">&amp;</operator><name pos:start="101:15" pos:end="101:16">pb</name></expr></argument>, <argument pos:start="101:19" pos:end="101:19"><expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">8</literal></expr></argument>, <argument pos:start="101:22" pos:end="101:25"><expr pos:start="101:22" pos:end="101:25"><name pos:start="101:22" pos:end="101:25">near</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:42"><expr pos:start="103:5" pos:end="103:41"><call pos:start="103:5" pos:end="103:41"><name pos:start="103:5" pos:end="103:12">put_bits</name><argument_list pos:start="103:13" pos:end="103:41">(<argument pos:start="103:14" pos:end="103:16"><expr pos:start="103:14" pos:end="103:16"><operator pos:start="103:14" pos:end="103:14">&amp;</operator><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:19"><expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">8</literal></expr></argument>, <argument pos:start="103:22" pos:end="103:40"><expr pos:start="103:22" pos:end="103:40"><ternary pos:start="103:22" pos:end="103:40"><condition pos:start="103:22" pos:end="103:34"><expr pos:start="103:22" pos:end="103:32"><operator pos:start="103:22" pos:end="103:22">(</operator><name pos:start="103:23" pos:end="103:27">comps</name> <operator pos:start="103:29" pos:end="103:29">&gt;</operator> <literal type="number" pos:start="103:31" pos:end="103:31">1</literal><operator pos:start="103:32" pos:end="103:32">)</operator></expr> ?</condition><then pos:start="103:36" pos:end="103:36"> <expr pos:start="103:36" pos:end="103:36"><literal type="number" pos:start="103:36" pos:end="103:36">1</literal></expr> </then><else pos:start="103:38" pos:end="103:40">: <expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="103:45" pos:end="103:80">// interleaving: 0 - plane, 1 - line</comment>

    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><call pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:12">put_bits</name><argument_list pos:start="105:13" pos:end="105:23">(<argument pos:start="105:14" pos:end="105:16"><expr pos:start="105:14" pos:end="105:16"><operator pos:start="105:14" pos:end="105:14">&amp;</operator><name pos:start="105:15" pos:end="105:16">pb</name></expr></argument>, <argument pos:start="105:19" pos:end="105:19"><expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">8</literal></expr></argument>, <argument pos:start="105:22" pos:end="105:22"><expr pos:start="105:22" pos:end="105:22"><literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="105:27" pos:end="105:50">// point transform: none</comment>



    <expr_stmt pos:start="109:5" pos:end="109:41"><expr pos:start="109:5" pos:end="109:40"><name pos:start="109:5" pos:end="109:9">state</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <call pos:start="109:13" pos:end="109:40"><name pos:start="109:13" pos:end="109:22">av_mallocz</name><argument_list pos:start="109:23" pos:end="109:40">(<argument pos:start="109:24" pos:end="109:39"><expr pos:start="109:24" pos:end="109:39"><sizeof pos:start="109:24" pos:end="109:39">sizeof<argument_list pos:start="109:30" pos:end="109:39">(<argument pos:start="109:31" pos:end="109:38"><expr pos:start="109:31" pos:end="109:38"><name pos:start="109:31" pos:end="109:38">JLSState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="111:5" pos:end="111:55">/* initialize JPEG-LS state from JPEG parameters */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:9">state</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:15">near</name></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:22">near</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:65"><expr pos:start="115:5" pos:end="115:64"><name pos:start="115:5" pos:end="115:14"><name pos:start="115:5" pos:end="115:9">state</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:14">bpp</name></name>  <operator pos:start="115:17" pos:end="115:17">=</operator> <ternary pos:start="115:19" pos:end="115:64"><condition pos:start="115:19" pos:end="115:57"><expr pos:start="115:19" pos:end="115:55"><operator pos:start="115:19" pos:end="115:19">(</operator><name pos:start="115:20" pos:end="115:33"><name pos:start="115:20" pos:end="115:24">avctx</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:33">pix_fmt</name></name> <operator pos:start="115:35" pos:end="115:36">==</operator> <name pos:start="115:38" pos:end="115:54">AV_PIX_FMT_GRAY16</name><operator pos:start="115:55" pos:end="115:55">)</operator></expr> ?</condition><then pos:start="115:59" pos:end="115:60"> <expr pos:start="115:59" pos:end="115:60"><literal type="number" pos:start="115:59" pos:end="115:60">16</literal></expr> </then><else pos:start="115:62" pos:end="115:64">: <expr pos:start="115:64" pos:end="115:64"><literal type="number" pos:start="115:64" pos:end="115:64">8</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:48"><expr pos:start="117:5" pos:end="117:47"><call pos:start="117:5" pos:end="117:47"><name pos:start="117:5" pos:end="117:37">ff_jpegls_reset_coding_parameters</name><argument_list pos:start="117:38" pos:end="117:47">(<argument pos:start="117:39" pos:end="117:43"><expr pos:start="117:39" pos:end="117:43"><name pos:start="117:39" pos:end="117:43">state</name></expr></argument>, <argument pos:start="117:46" pos:end="117:46"><expr pos:start="117:46" pos:end="117:46"><literal type="number" pos:start="117:46" pos:end="117:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:32"><expr pos:start="119:5" pos:end="119:31"><call pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:24">ff_jpegls_init_state</name><argument_list pos:start="119:25" pos:end="119:31">(<argument pos:start="119:26" pos:end="119:30"><expr pos:start="119:26" pos:end="119:30"><name pos:start="119:26" pos:end="119:30">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:29"><expr pos:start="123:5" pos:end="123:28"><call pos:start="123:5" pos:end="123:28"><name pos:start="123:5" pos:end="123:16">ls_store_lse</name><argument_list pos:start="123:17" pos:end="123:28">(<argument pos:start="123:18" pos:end="123:22"><expr pos:start="123:18" pos:end="123:22"><name pos:start="123:18" pos:end="123:22">state</name></expr></argument>, <argument pos:start="123:25" pos:end="123:27"><expr pos:start="123:25" pos:end="123:27"><operator pos:start="123:25" pos:end="123:25">&amp;</operator><name pos:start="123:26" pos:end="123:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:38"><expr pos:start="127:5" pos:end="127:37"><name pos:start="127:5" pos:end="127:8">zero</name> <operator pos:start="127:10" pos:end="127:10">=</operator> <call pos:start="127:12" pos:end="127:37"><name pos:start="127:12" pos:end="127:21">av_mallocz</name><argument_list pos:start="127:22" pos:end="127:37">(<argument pos:start="127:23" pos:end="127:36"><expr pos:start="127:23" pos:end="127:36"><name pos:start="127:23" pos:end="127:36"><name pos:start="127:23" pos:end="127:23">p</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:33">linesize</name><index pos:start="127:34" pos:end="127:36">[<expr pos:start="127:35" pos:end="127:35"><literal type="number" pos:start="127:35" pos:end="127:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:16"><expr pos:start="129:5" pos:end="129:15"><name pos:start="129:5" pos:end="129:8">last</name> <operator pos:start="129:10" pos:end="129:10">=</operator> <name pos:start="129:12" pos:end="129:15">zero</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:22"><expr pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:7">cur</name>  <operator pos:start="131:10" pos:end="131:10">=</operator> <name pos:start="131:12" pos:end="131:21"><name pos:start="131:12" pos:end="131:12">p</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:18">data</name><index pos:start="131:19" pos:end="131:21">[<expr pos:start="131:20" pos:end="131:20"><literal type="number" pos:start="131:20" pos:end="131:20">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="225:5"><if pos:start="133:5" pos:end="151:5">if <condition pos:start="133:8" pos:end="133:43">(<expr pos:start="133:9" pos:end="133:42"><name pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:13">avctx</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">pix_fmt</name></name> <operator pos:start="133:24" pos:end="133:25">==</operator> <name pos:start="133:27" pos:end="133:42">AV_PIX_FMT_GRAY8</name></expr>)</condition> <block pos:start="133:45" pos:end="151:5">{<block_content pos:start="135:9" pos:end="149:9">

        <decl_stmt pos:start="135:9" pos:end="135:18"><decl pos:start="135:9" pos:end="135:17"><type pos:start="135:9" pos:end="135:11"><name pos:start="135:9" pos:end="135:11">int</name></type> <name pos:start="135:13" pos:end="135:13">t</name> <init pos:start="135:15" pos:end="135:17">= <expr pos:start="135:17" pos:end="135:17"><literal type="number" pos:start="135:17" pos:end="135:17">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="139:9" pos:end="149:9">for <control pos:start="139:13" pos:end="139:43">(<init pos:start="139:14" pos:end="139:19"><expr pos:start="139:14" pos:end="139:18"><name pos:start="139:14" pos:end="139:14">i</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <literal type="number" pos:start="139:18" pos:end="139:18">0</literal></expr>;</init> <condition pos:start="139:21" pos:end="139:38"><expr pos:start="139:21" pos:end="139:37"><name pos:start="139:21" pos:end="139:21">i</name> <operator pos:start="139:23" pos:end="139:23">&lt;</operator> <name pos:start="139:25" pos:end="139:37"><name pos:start="139:25" pos:end="139:29">avctx</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:37">height</name></name></expr>;</condition> <incr pos:start="139:40" pos:end="139:42"><expr pos:start="139:40" pos:end="139:42"><name pos:start="139:40" pos:end="139:40">i</name><operator pos:start="139:41" pos:end="139:42">++</operator></expr></incr>)</control> <block pos:start="139:45" pos:end="149:9">{<block_content pos:start="141:13" pos:end="147:34">

            <expr_stmt pos:start="141:13" pos:end="141:77"><expr pos:start="141:13" pos:end="141:76"><call pos:start="141:13" pos:end="141:76"><name pos:start="141:13" pos:end="141:26">ls_encode_line</name><argument_list pos:start="141:27" pos:end="141:76">(<argument pos:start="141:28" pos:end="141:32"><expr pos:start="141:28" pos:end="141:32"><name pos:start="141:28" pos:end="141:32">state</name></expr></argument>, <argument pos:start="141:35" pos:end="141:38"><expr pos:start="141:35" pos:end="141:38"><operator pos:start="141:35" pos:end="141:35">&amp;</operator><name pos:start="141:36" pos:end="141:38">pb2</name></expr></argument>, <argument pos:start="141:41" pos:end="141:44"><expr pos:start="141:41" pos:end="141:44"><name pos:start="141:41" pos:end="141:44">last</name></expr></argument>, <argument pos:start="141:47" pos:end="141:49"><expr pos:start="141:47" pos:end="141:49"><name pos:start="141:47" pos:end="141:49">cur</name></expr></argument>, <argument pos:start="141:52" pos:end="141:52"><expr pos:start="141:52" pos:end="141:52"><name pos:start="141:52" pos:end="141:52">t</name></expr></argument>, <argument pos:start="141:55" pos:end="141:66"><expr pos:start="141:55" pos:end="141:66"><name pos:start="141:55" pos:end="141:66"><name pos:start="141:55" pos:end="141:59">avctx</name><operator pos:start="141:60" pos:end="141:61">-&gt;</operator><name pos:start="141:62" pos:end="141:66">width</name></name></expr></argument>, <argument pos:start="141:69" pos:end="141:69"><expr pos:start="141:69" pos:end="141:69"><literal type="number" pos:start="141:69" pos:end="141:69">1</literal></expr></argument>, <argument pos:start="141:72" pos:end="141:72"><expr pos:start="141:72" pos:end="141:72"><literal type="number" pos:start="141:72" pos:end="141:72">0</literal></expr></argument>, <argument pos:start="141:75" pos:end="141:75"><expr pos:start="141:75" pos:end="141:75"><literal type="number" pos:start="141:75" pos:end="141:75">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:27"><expr pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:13">t</name>    <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:26"><name pos:start="143:20" pos:end="143:23">last</name><index pos:start="143:24" pos:end="143:26">[<expr pos:start="143:25" pos:end="143:25"><literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:23"><expr pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:16">last</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:34"><expr pos:start="147:13" pos:end="147:33"><name pos:start="147:13" pos:end="147:15">cur</name> <operator pos:start="147:17" pos:end="147:18">+=</operator> <name pos:start="147:20" pos:end="147:33"><name pos:start="147:20" pos:end="147:20">p</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:30">linesize</name><index pos:start="147:31" pos:end="147:33">[<expr pos:start="147:32" pos:end="147:32"><literal type="number" pos:start="147:32" pos:end="147:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="151:7" pos:end="169:5">else if <condition pos:start="151:15" pos:end="151:51">(<expr pos:start="151:16" pos:end="151:50"><name pos:start="151:16" pos:end="151:29"><name pos:start="151:16" pos:end="151:20">avctx</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:29">pix_fmt</name></name> <operator pos:start="151:31" pos:end="151:32">==</operator> <name pos:start="151:34" pos:end="151:50">AV_PIX_FMT_GRAY16</name></expr>)</condition> <block pos:start="151:53" pos:end="169:5">{<block_content pos:start="153:9" pos:end="167:9">

        <decl_stmt pos:start="153:9" pos:end="153:18"><decl pos:start="153:9" pos:end="153:17"><type pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">int</name></type> <name pos:start="153:13" pos:end="153:13">t</name> <init pos:start="153:15" pos:end="153:17">= <expr pos:start="153:17" pos:end="153:17"><literal type="number" pos:start="153:17" pos:end="153:17">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="157:9" pos:end="167:9">for <control pos:start="157:13" pos:end="157:43">(<init pos:start="157:14" pos:end="157:19"><expr pos:start="157:14" pos:end="157:18"><name pos:start="157:14" pos:end="157:14">i</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <literal type="number" pos:start="157:18" pos:end="157:18">0</literal></expr>;</init> <condition pos:start="157:21" pos:end="157:38"><expr pos:start="157:21" pos:end="157:37"><name pos:start="157:21" pos:end="157:21">i</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:37"><name pos:start="157:25" pos:end="157:29">avctx</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:37">height</name></name></expr>;</condition> <incr pos:start="157:40" pos:end="157:42"><expr pos:start="157:40" pos:end="157:42"><name pos:start="157:40" pos:end="157:40">i</name><operator pos:start="157:41" pos:end="157:42">++</operator></expr></incr>)</control> <block pos:start="157:45" pos:end="167:9">{<block_content pos:start="159:13" pos:end="165:34">

            <expr_stmt pos:start="159:13" pos:end="159:78"><expr pos:start="159:13" pos:end="159:77"><call pos:start="159:13" pos:end="159:77"><name pos:start="159:13" pos:end="159:26">ls_encode_line</name><argument_list pos:start="159:27" pos:end="159:77">(<argument pos:start="159:28" pos:end="159:32"><expr pos:start="159:28" pos:end="159:32"><name pos:start="159:28" pos:end="159:32">state</name></expr></argument>, <argument pos:start="159:35" pos:end="159:38"><expr pos:start="159:35" pos:end="159:38"><operator pos:start="159:35" pos:end="159:35">&amp;</operator><name pos:start="159:36" pos:end="159:38">pb2</name></expr></argument>, <argument pos:start="159:41" pos:end="159:44"><expr pos:start="159:41" pos:end="159:44"><name pos:start="159:41" pos:end="159:44">last</name></expr></argument>, <argument pos:start="159:47" pos:end="159:49"><expr pos:start="159:47" pos:end="159:49"><name pos:start="159:47" pos:end="159:49">cur</name></expr></argument>, <argument pos:start="159:52" pos:end="159:52"><expr pos:start="159:52" pos:end="159:52"><name pos:start="159:52" pos:end="159:52">t</name></expr></argument>, <argument pos:start="159:55" pos:end="159:66"><expr pos:start="159:55" pos:end="159:66"><name pos:start="159:55" pos:end="159:66"><name pos:start="159:55" pos:end="159:59">avctx</name><operator pos:start="159:60" pos:end="159:61">-&gt;</operator><name pos:start="159:62" pos:end="159:66">width</name></name></expr></argument>, <argument pos:start="159:69" pos:end="159:69"><expr pos:start="159:69" pos:end="159:69"><literal type="number" pos:start="159:69" pos:end="159:69">1</literal></expr></argument>, <argument pos:start="159:72" pos:end="159:72"><expr pos:start="159:72" pos:end="159:72"><literal type="number" pos:start="159:72" pos:end="159:72">0</literal></expr></argument>, <argument pos:start="159:75" pos:end="159:76"><expr pos:start="159:75" pos:end="159:76"><literal type="number" pos:start="159:75" pos:end="159:76">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:39"><expr pos:start="161:13" pos:end="161:38"><name pos:start="161:13" pos:end="161:13">t</name>    <operator pos:start="161:18" pos:end="161:18">=</operator> <operator pos:start="161:20" pos:end="161:20">*</operator><operator pos:start="161:21" pos:end="161:21">(</operator><operator pos:start="161:22" pos:end="161:22">(</operator><name pos:start="161:23" pos:end="161:30">uint16_t</name> <operator pos:start="161:32" pos:end="161:32">*</operator><operator pos:start="161:33" pos:end="161:33">)</operator><name pos:start="161:34" pos:end="161:37">last</name><operator pos:start="161:38" pos:end="161:38">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:23"><expr pos:start="163:13" pos:end="163:22"><name pos:start="163:13" pos:end="163:16">last</name> <operator pos:start="163:18" pos:end="163:18">=</operator> <name pos:start="163:20" pos:end="163:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:34"><expr pos:start="165:13" pos:end="165:33"><name pos:start="165:13" pos:end="165:15">cur</name> <operator pos:start="165:17" pos:end="165:18">+=</operator> <name pos:start="165:20" pos:end="165:33"><name pos:start="165:20" pos:end="165:20">p</name><operator pos:start="165:21" pos:end="165:22">-&gt;</operator><name pos:start="165:23" pos:end="165:30">linesize</name><index pos:start="165:31" pos:end="165:33">[<expr pos:start="165:32" pos:end="165:32"><literal type="number" pos:start="165:32" pos:end="165:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="169:7" pos:end="197:5">else if <condition pos:start="169:15" pos:end="169:50">(<expr pos:start="169:16" pos:end="169:49"><name pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:20">avctx</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:29">pix_fmt</name></name> <operator pos:start="169:31" pos:end="169:32">==</operator> <name pos:start="169:34" pos:end="169:49">AV_PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="169:52" pos:end="197:5">{<block_content pos:start="171:9" pos:end="195:9">

        <decl_stmt pos:start="171:9" pos:end="171:21"><decl pos:start="171:9" pos:end="171:13"><type pos:start="171:9" pos:end="171:11"><name pos:start="171:9" pos:end="171:11">int</name></type> <name pos:start="171:13" pos:end="171:13">j</name></decl>, <decl pos:start="171:16" pos:end="171:20"><type ref="prev" pos:start="171:9" pos:end="171:11"/><name pos:start="171:16" pos:end="171:20">width</name></decl>;</decl_stmt>

        <decl_stmt pos:start="173:9" pos:end="173:32"><decl pos:start="173:9" pos:end="173:31"><type pos:start="173:9" pos:end="173:11"><name pos:start="173:9" pos:end="173:11">int</name></type> <name pos:start="173:13" pos:end="173:17"><name pos:start="173:13" pos:end="173:14">Rc</name><index pos:start="173:15" pos:end="173:17">[<expr pos:start="173:16" pos:end="173:16"><literal type="number" pos:start="173:16" pos:end="173:16">3</literal></expr>]</index></name> <init pos:start="173:19" pos:end="173:31">= <expr pos:start="173:21" pos:end="173:31"><block pos:start="173:21" pos:end="173:31">{ <expr pos:start="173:23" pos:end="173:23"><literal type="number" pos:start="173:23" pos:end="173:23">0</literal></expr>, <expr pos:start="173:26" pos:end="173:26"><literal type="number" pos:start="173:26" pos:end="173:26">0</literal></expr>, <expr pos:start="173:29" pos:end="173:29"><literal type="number" pos:start="173:29" pos:end="173:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:33"><expr pos:start="177:9" pos:end="177:32"><name pos:start="177:9" pos:end="177:13">width</name> <operator pos:start="177:15" pos:end="177:15">=</operator> <name pos:start="177:17" pos:end="177:28"><name pos:start="177:17" pos:end="177:21">avctx</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:28">width</name></name> <operator pos:start="177:30" pos:end="177:30">*</operator> <literal type="number" pos:start="177:32" pos:end="177:32">3</literal></expr>;</expr_stmt>

        <for pos:start="179:9" pos:end="195:9">for <control pos:start="179:13" pos:end="179:43">(<init pos:start="179:14" pos:end="179:19"><expr pos:start="179:14" pos:end="179:18"><name pos:start="179:14" pos:end="179:14">i</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>;</init> <condition pos:start="179:21" pos:end="179:38"><expr pos:start="179:21" pos:end="179:37"><name pos:start="179:21" pos:end="179:21">i</name> <operator pos:start="179:23" pos:end="179:23">&lt;</operator> <name pos:start="179:25" pos:end="179:37"><name pos:start="179:25" pos:end="179:29">avctx</name><operator pos:start="179:30" pos:end="179:31">-&gt;</operator><name pos:start="179:32" pos:end="179:37">height</name></name></expr>;</condition> <incr pos:start="179:40" pos:end="179:42"><expr pos:start="179:40" pos:end="179:42"><name pos:start="179:40" pos:end="179:40">i</name><operator pos:start="179:41" pos:end="179:42">++</operator></expr></incr>)</control> <block pos:start="179:45" pos:end="195:9">{<block_content pos:start="181:13" pos:end="193:34">

            <for pos:start="181:13" pos:end="189:13">for <control pos:start="181:17" pos:end="181:35">(<init pos:start="181:18" pos:end="181:23"><expr pos:start="181:18" pos:end="181:22"><name pos:start="181:18" pos:end="181:18">j</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>;</init> <condition pos:start="181:25" pos:end="181:30"><expr pos:start="181:25" pos:end="181:29"><name pos:start="181:25" pos:end="181:25">j</name> <operator pos:start="181:27" pos:end="181:27">&lt;</operator> <literal type="number" pos:start="181:29" pos:end="181:29">3</literal></expr>;</condition> <incr pos:start="181:32" pos:end="181:34"><expr pos:start="181:32" pos:end="181:34"><name pos:start="181:32" pos:end="181:32">j</name><operator pos:start="181:33" pos:end="181:34">++</operator></expr></incr>)</control> <block pos:start="181:37" pos:end="189:13">{<block_content pos:start="183:17" pos:end="187:32">

                <expr_stmt pos:start="183:17" pos:end="185:47"><expr pos:start="183:17" pos:end="185:46"><call pos:start="183:17" pos:end="185:46"><name pos:start="183:17" pos:end="183:30">ls_encode_line</name><argument_list pos:start="183:31" pos:end="185:46">(<argument pos:start="183:32" pos:end="183:36"><expr pos:start="183:32" pos:end="183:36"><name pos:start="183:32" pos:end="183:36">state</name></expr></argument>, <argument pos:start="183:39" pos:end="183:42"><expr pos:start="183:39" pos:end="183:42"><operator pos:start="183:39" pos:end="183:39">&amp;</operator><name pos:start="183:40" pos:end="183:42">pb2</name></expr></argument>, <argument pos:start="183:45" pos:end="183:52"><expr pos:start="183:45" pos:end="183:52"><name pos:start="183:45" pos:end="183:48">last</name> <operator pos:start="183:50" pos:end="183:50">+</operator> <name pos:start="183:52" pos:end="183:52">j</name></expr></argument>, <argument pos:start="183:55" pos:end="183:61"><expr pos:start="183:55" pos:end="183:61"><name pos:start="183:55" pos:end="183:57">cur</name> <operator pos:start="183:59" pos:end="183:59">+</operator> <name pos:start="183:61" pos:end="183:61">j</name></expr></argument>, <argument pos:start="183:64" pos:end="183:68"><expr pos:start="183:64" pos:end="183:68"><name pos:start="183:64" pos:end="183:68"><name pos:start="183:64" pos:end="183:65">Rc</name><index pos:start="183:66" pos:end="183:68">[<expr pos:start="183:67" pos:end="183:67"><name pos:start="183:67" pos:end="183:67">j</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="185:32" pos:end="185:36"><expr pos:start="185:32" pos:end="185:36"><name pos:start="185:32" pos:end="185:36">width</name></expr></argument>, <argument pos:start="185:39" pos:end="185:39"><expr pos:start="185:39" pos:end="185:39"><literal type="number" pos:start="185:39" pos:end="185:39">3</literal></expr></argument>, <argument pos:start="185:42" pos:end="185:42"><expr pos:start="185:42" pos:end="185:42"><name pos:start="185:42" pos:end="185:42">j</name></expr></argument>, <argument pos:start="185:45" pos:end="185:45"><expr pos:start="185:45" pos:end="185:45"><literal type="number" pos:start="185:45" pos:end="185:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:32"><expr pos:start="187:17" pos:end="187:31"><name pos:start="187:17" pos:end="187:21"><name pos:start="187:17" pos:end="187:18">Rc</name><index pos:start="187:19" pos:end="187:21">[<expr pos:start="187:20" pos:end="187:20"><name pos:start="187:20" pos:end="187:20">j</name></expr>]</index></name> <operator pos:start="187:23" pos:end="187:23">=</operator> <name pos:start="187:25" pos:end="187:31"><name pos:start="187:25" pos:end="187:28">last</name><index pos:start="187:29" pos:end="187:31">[<expr pos:start="187:30" pos:end="187:30"><name pos:start="187:30" pos:end="187:30">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="191:13" pos:end="191:23"><expr pos:start="191:13" pos:end="191:22"><name pos:start="191:13" pos:end="191:16">last</name> <operator pos:start="191:18" pos:end="191:18">=</operator> <name pos:start="191:20" pos:end="191:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:34"><expr pos:start="193:13" pos:end="193:33"><name pos:start="193:13" pos:end="193:15">cur</name> <operator pos:start="193:17" pos:end="193:18">+=</operator> <name pos:start="193:20" pos:end="193:33"><name pos:start="193:20" pos:end="193:20">p</name><operator pos:start="193:21" pos:end="193:22">-&gt;</operator><name pos:start="193:23" pos:end="193:30">linesize</name><index pos:start="193:31" pos:end="193:33">[<expr pos:start="193:32" pos:end="193:32"><literal type="number" pos:start="193:32" pos:end="193:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="197:7" pos:end="225:5">else if <condition pos:start="197:15" pos:end="197:50">(<expr pos:start="197:16" pos:end="197:49"><name pos:start="197:16" pos:end="197:29"><name pos:start="197:16" pos:end="197:20">avctx</name><operator pos:start="197:21" pos:end="197:22">-&gt;</operator><name pos:start="197:23" pos:end="197:29">pix_fmt</name></name> <operator pos:start="197:31" pos:end="197:32">==</operator> <name pos:start="197:34" pos:end="197:49">AV_PIX_FMT_BGR24</name></expr>)</condition> <block pos:start="197:52" pos:end="225:5">{<block_content pos:start="199:9" pos:end="223:9">

        <decl_stmt pos:start="199:9" pos:end="199:21"><decl pos:start="199:9" pos:end="199:13"><type pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">int</name></type> <name pos:start="199:13" pos:end="199:13">j</name></decl>, <decl pos:start="199:16" pos:end="199:20"><type ref="prev" pos:start="199:9" pos:end="199:11"/><name pos:start="199:16" pos:end="199:20">width</name></decl>;</decl_stmt>

        <decl_stmt pos:start="201:9" pos:end="201:32"><decl pos:start="201:9" pos:end="201:31"><type pos:start="201:9" pos:end="201:11"><name pos:start="201:9" pos:end="201:11">int</name></type> <name pos:start="201:13" pos:end="201:17"><name pos:start="201:13" pos:end="201:14">Rc</name><index pos:start="201:15" pos:end="201:17">[<expr pos:start="201:16" pos:end="201:16"><literal type="number" pos:start="201:16" pos:end="201:16">3</literal></expr>]</index></name> <init pos:start="201:19" pos:end="201:31">= <expr pos:start="201:21" pos:end="201:31"><block pos:start="201:21" pos:end="201:31">{ <expr pos:start="201:23" pos:end="201:23"><literal type="number" pos:start="201:23" pos:end="201:23">0</literal></expr>, <expr pos:start="201:26" pos:end="201:26"><literal type="number" pos:start="201:26" pos:end="201:26">0</literal></expr>, <expr pos:start="201:29" pos:end="201:29"><literal type="number" pos:start="201:29" pos:end="201:29">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="205:9" pos:end="205:33"><expr pos:start="205:9" pos:end="205:32"><name pos:start="205:9" pos:end="205:13">width</name> <operator pos:start="205:15" pos:end="205:15">=</operator> <name pos:start="205:17" pos:end="205:28"><name pos:start="205:17" pos:end="205:21">avctx</name><operator pos:start="205:22" pos:end="205:23">-&gt;</operator><name pos:start="205:24" pos:end="205:28">width</name></name> <operator pos:start="205:30" pos:end="205:30">*</operator> <literal type="number" pos:start="205:32" pos:end="205:32">3</literal></expr>;</expr_stmt>

        <for pos:start="207:9" pos:end="223:9">for <control pos:start="207:13" pos:end="207:43">(<init pos:start="207:14" pos:end="207:19"><expr pos:start="207:14" pos:end="207:18"><name pos:start="207:14" pos:end="207:14">i</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <literal type="number" pos:start="207:18" pos:end="207:18">0</literal></expr>;</init> <condition pos:start="207:21" pos:end="207:38"><expr pos:start="207:21" pos:end="207:37"><name pos:start="207:21" pos:end="207:21">i</name> <operator pos:start="207:23" pos:end="207:23">&lt;</operator> <name pos:start="207:25" pos:end="207:37"><name pos:start="207:25" pos:end="207:29">avctx</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:37">height</name></name></expr>;</condition> <incr pos:start="207:40" pos:end="207:42"><expr pos:start="207:40" pos:end="207:42"><name pos:start="207:40" pos:end="207:40">i</name><operator pos:start="207:41" pos:end="207:42">++</operator></expr></incr>)</control> <block pos:start="207:45" pos:end="223:9">{<block_content pos:start="209:13" pos:end="221:34">

            <for pos:start="209:13" pos:end="217:13">for <control pos:start="209:17" pos:end="209:36">(<init pos:start="209:18" pos:end="209:23"><expr pos:start="209:18" pos:end="209:22"><name pos:start="209:18" pos:end="209:18">j</name> <operator pos:start="209:20" pos:end="209:20">=</operator> <literal type="number" pos:start="209:22" pos:end="209:22">2</literal></expr>;</init> <condition pos:start="209:25" pos:end="209:31"><expr pos:start="209:25" pos:end="209:30"><name pos:start="209:25" pos:end="209:25">j</name> <operator pos:start="209:27" pos:end="209:28">&gt;=</operator> <literal type="number" pos:start="209:30" pos:end="209:30">0</literal></expr>;</condition> <incr pos:start="209:33" pos:end="209:35"><expr pos:start="209:33" pos:end="209:35"><name pos:start="209:33" pos:end="209:33">j</name><operator pos:start="209:34" pos:end="209:35">--</operator></expr></incr>)</control> <block pos:start="209:38" pos:end="217:13">{<block_content pos:start="211:17" pos:end="215:32">

                <expr_stmt pos:start="211:17" pos:end="213:47"><expr pos:start="211:17" pos:end="213:46"><call pos:start="211:17" pos:end="213:46"><name pos:start="211:17" pos:end="211:30">ls_encode_line</name><argument_list pos:start="211:31" pos:end="213:46">(<argument pos:start="211:32" pos:end="211:36"><expr pos:start="211:32" pos:end="211:36"><name pos:start="211:32" pos:end="211:36">state</name></expr></argument>, <argument pos:start="211:39" pos:end="211:42"><expr pos:start="211:39" pos:end="211:42"><operator pos:start="211:39" pos:end="211:39">&amp;</operator><name pos:start="211:40" pos:end="211:42">pb2</name></expr></argument>, <argument pos:start="211:45" pos:end="211:52"><expr pos:start="211:45" pos:end="211:52"><name pos:start="211:45" pos:end="211:48">last</name> <operator pos:start="211:50" pos:end="211:50">+</operator> <name pos:start="211:52" pos:end="211:52">j</name></expr></argument>, <argument pos:start="211:55" pos:end="211:61"><expr pos:start="211:55" pos:end="211:61"><name pos:start="211:55" pos:end="211:57">cur</name> <operator pos:start="211:59" pos:end="211:59">+</operator> <name pos:start="211:61" pos:end="211:61">j</name></expr></argument>, <argument pos:start="211:64" pos:end="211:68"><expr pos:start="211:64" pos:end="211:68"><name pos:start="211:64" pos:end="211:68"><name pos:start="211:64" pos:end="211:65">Rc</name><index pos:start="211:66" pos:end="211:68">[<expr pos:start="211:67" pos:end="211:67"><name pos:start="211:67" pos:end="211:67">j</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="213:32" pos:end="213:36"><expr pos:start="213:32" pos:end="213:36"><name pos:start="213:32" pos:end="213:36">width</name></expr></argument>, <argument pos:start="213:39" pos:end="213:39"><expr pos:start="213:39" pos:end="213:39"><literal type="number" pos:start="213:39" pos:end="213:39">3</literal></expr></argument>, <argument pos:start="213:42" pos:end="213:42"><expr pos:start="213:42" pos:end="213:42"><name pos:start="213:42" pos:end="213:42">j</name></expr></argument>, <argument pos:start="213:45" pos:end="213:45"><expr pos:start="213:45" pos:end="213:45"><literal type="number" pos:start="213:45" pos:end="213:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:32"><expr pos:start="215:17" pos:end="215:31"><name pos:start="215:17" pos:end="215:21"><name pos:start="215:17" pos:end="215:18">Rc</name><index pos:start="215:19" pos:end="215:21">[<expr pos:start="215:20" pos:end="215:20"><name pos:start="215:20" pos:end="215:20">j</name></expr>]</index></name> <operator pos:start="215:23" pos:end="215:23">=</operator> <name pos:start="215:25" pos:end="215:31"><name pos:start="215:25" pos:end="215:28">last</name><index pos:start="215:29" pos:end="215:31">[<expr pos:start="215:30" pos:end="215:30"><name pos:start="215:30" pos:end="215:30">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="219:13" pos:end="219:23"><expr pos:start="219:13" pos:end="219:22"><name pos:start="219:13" pos:end="219:16">last</name> <operator pos:start="219:18" pos:end="219:18">=</operator> <name pos:start="219:20" pos:end="219:22">cur</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:34"><expr pos:start="221:13" pos:end="221:33"><name pos:start="221:13" pos:end="221:15">cur</name> <operator pos:start="221:17" pos:end="221:18">+=</operator> <name pos:start="221:20" pos:end="221:33"><name pos:start="221:20" pos:end="221:20">p</name><operator pos:start="221:21" pos:end="221:22">-&gt;</operator><name pos:start="221:23" pos:end="221:30">linesize</name><index pos:start="221:31" pos:end="221:33">[<expr pos:start="221:32" pos:end="221:32"><literal type="number" pos:start="221:32" pos:end="221:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:18"><expr pos:start="229:5" pos:end="229:17"><call pos:start="229:5" pos:end="229:17"><name pos:start="229:5" pos:end="229:11">av_free</name><argument_list pos:start="229:12" pos:end="229:17">(<argument pos:start="229:13" pos:end="229:16"><expr pos:start="229:13" pos:end="229:16"><name pos:start="229:13" pos:end="229:16">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:19"><expr pos:start="231:5" pos:end="231:18"><call pos:start="231:5" pos:end="231:18"><name pos:start="231:5" pos:end="231:11">av_free</name><argument_list pos:start="231:12" pos:end="231:18">(<argument pos:start="231:13" pos:end="231:17"><expr pos:start="231:13" pos:end="231:17"><name pos:start="231:13" pos:end="231:17">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="235:5" pos:end="239:34">/* the specification says that after doing 0xff escaping unused bits in

     * the last byte must be set to 0, so just append 7 "optional" zero-bits

     * to avoid special-casing. */</comment>

    <expr_stmt pos:start="241:5" pos:end="241:25"><expr pos:start="241:5" pos:end="241:24"><call pos:start="241:5" pos:end="241:24"><name pos:start="241:5" pos:end="241:12">put_bits</name><argument_list pos:start="241:13" pos:end="241:24">(<argument pos:start="241:14" pos:end="241:17"><expr pos:start="241:14" pos:end="241:17"><operator pos:start="241:14" pos:end="241:14">&amp;</operator><name pos:start="241:15" pos:end="241:17">pb2</name></expr></argument>, <argument pos:start="241:20" pos:end="241:20"><expr pos:start="241:20" pos:end="241:20"><literal type="number" pos:start="241:20" pos:end="241:20">7</literal></expr></argument>, <argument pos:start="241:23" pos:end="241:23"><expr pos:start="241:23" pos:end="241:23"><literal type="number" pos:start="241:23" pos:end="241:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:32"><expr pos:start="243:5" pos:end="243:31"><name pos:start="243:5" pos:end="243:8">size</name> <operator pos:start="243:10" pos:end="243:10">=</operator> <call pos:start="243:12" pos:end="243:31"><name pos:start="243:12" pos:end="243:25">put_bits_count</name><argument_list pos:start="243:26" pos:end="243:31">(<argument pos:start="243:27" pos:end="243:30"><expr pos:start="243:27" pos:end="243:30"><operator pos:start="243:27" pos:end="243:27">&amp;</operator><name pos:start="243:28" pos:end="243:30">pb2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:25"><expr pos:start="245:5" pos:end="245:24"><call pos:start="245:5" pos:end="245:24"><name pos:start="245:5" pos:end="245:18">flush_put_bits</name><argument_list pos:start="245:19" pos:end="245:24">(<argument pos:start="245:20" pos:end="245:23"><expr pos:start="245:20" pos:end="245:23"><operator pos:start="245:20" pos:end="245:20">&amp;</operator><name pos:start="245:21" pos:end="245:23">pb2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="247:5" pos:end="247:26">/* do escape coding */</comment>

    <expr_stmt pos:start="249:5" pos:end="249:35"><expr pos:start="249:5" pos:end="249:34"><call pos:start="249:5" pos:end="249:34"><name pos:start="249:5" pos:end="249:17">init_get_bits</name><argument_list pos:start="249:18" pos:end="249:34">(<argument pos:start="249:19" pos:end="249:21"><expr pos:start="249:19" pos:end="249:21"><operator pos:start="249:19" pos:end="249:19">&amp;</operator><name pos:start="249:20" pos:end="249:21">gb</name></expr></argument>, <argument pos:start="249:24" pos:end="249:27"><expr pos:start="249:24" pos:end="249:27"><name pos:start="249:24" pos:end="249:27">buf2</name></expr></argument>, <argument pos:start="249:30" pos:end="249:33"><expr pos:start="249:30" pos:end="249:33"><name pos:start="249:30" pos:end="249:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:14"><expr pos:start="251:5" pos:end="251:13"><name pos:start="251:5" pos:end="251:8">size</name> <operator pos:start="251:10" pos:end="251:11">-=</operator> <literal type="number" pos:start="251:13" pos:end="251:13">7</literal></expr>;</expr_stmt>

    <while pos:start="253:5" pos:end="269:5">while <condition pos:start="253:11" pos:end="253:38">(<expr pos:start="253:12" pos:end="253:37"><call pos:start="253:12" pos:end="253:30"><name pos:start="253:12" pos:end="253:25">get_bits_count</name><argument_list pos:start="253:26" pos:end="253:30">(<argument pos:start="253:27" pos:end="253:29"><expr pos:start="253:27" pos:end="253:29"><operator pos:start="253:27" pos:end="253:27">&amp;</operator><name pos:start="253:28" pos:end="253:29">gb</name></expr></argument>)</argument_list></call> <operator pos:start="253:32" pos:end="253:32">&lt;</operator> <name pos:start="253:34" pos:end="253:37">size</name></expr>)</condition> <block pos:start="253:40" pos:end="269:5">{<block_content pos:start="255:9" pos:end="267:9">

        <decl_stmt pos:start="255:9" pos:end="255:14"><decl pos:start="255:9" pos:end="255:13"><type pos:start="255:9" pos:end="255:11"><name pos:start="255:9" pos:end="255:11">int</name></type> <name pos:start="255:13" pos:end="255:13">v</name></decl>;</decl_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:29"><expr pos:start="257:9" pos:end="257:28"><name pos:start="257:9" pos:end="257:9">v</name> <operator pos:start="257:11" pos:end="257:11">=</operator> <call pos:start="257:13" pos:end="257:28"><name pos:start="257:13" pos:end="257:20">get_bits</name><argument_list pos:start="257:21" pos:end="257:28">(<argument pos:start="257:22" pos:end="257:24"><expr pos:start="257:22" pos:end="257:24"><operator pos:start="257:22" pos:end="257:22">&amp;</operator><name pos:start="257:23" pos:end="257:24">gb</name></expr></argument>, <argument pos:start="257:27" pos:end="257:27"><expr pos:start="257:27" pos:end="257:27"><literal type="number" pos:start="257:27" pos:end="257:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:28"><expr pos:start="259:9" pos:end="259:27"><call pos:start="259:9" pos:end="259:27"><name pos:start="259:9" pos:end="259:16">put_bits</name><argument_list pos:start="259:17" pos:end="259:27">(<argument pos:start="259:18" pos:end="259:20"><expr pos:start="259:18" pos:end="259:20"><operator pos:start="259:18" pos:end="259:18">&amp;</operator><name pos:start="259:19" pos:end="259:20">pb</name></expr></argument>, <argument pos:start="259:23" pos:end="259:23"><expr pos:start="259:23" pos:end="259:23"><literal type="number" pos:start="259:23" pos:end="259:23">8</literal></expr></argument>, <argument pos:start="259:26" pos:end="259:26"><expr pos:start="259:26" pos:end="259:26"><name pos:start="259:26" pos:end="259:26">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="261:9" pos:end="267:9"><if pos:start="261:9" pos:end="267:9">if <condition pos:start="261:12" pos:end="261:22">(<expr pos:start="261:13" pos:end="261:21"><name pos:start="261:13" pos:end="261:13">v</name> <operator pos:start="261:15" pos:end="261:16">==</operator> <literal type="number" pos:start="261:18" pos:end="261:21">0xFF</literal></expr>)</condition> <block pos:start="261:24" pos:end="267:9">{<block_content pos:start="263:13" pos:end="265:32">

            <expr_stmt pos:start="263:13" pos:end="263:33"><expr pos:start="263:13" pos:end="263:32"><name pos:start="263:13" pos:end="263:13">v</name> <operator pos:start="263:15" pos:end="263:15">=</operator> <call pos:start="263:17" pos:end="263:32"><name pos:start="263:17" pos:end="263:24">get_bits</name><argument_list pos:start="263:25" pos:end="263:32">(<argument pos:start="263:26" pos:end="263:28"><expr pos:start="263:26" pos:end="263:28"><operator pos:start="263:26" pos:end="263:26">&amp;</operator><name pos:start="263:27" pos:end="263:28">gb</name></expr></argument>, <argument pos:start="263:31" pos:end="263:31"><expr pos:start="263:31" pos:end="263:31"><literal type="number" pos:start="263:31" pos:end="263:31">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:32"><expr pos:start="265:13" pos:end="265:31"><call pos:start="265:13" pos:end="265:31"><name pos:start="265:13" pos:end="265:20">put_bits</name><argument_list pos:start="265:21" pos:end="265:31">(<argument pos:start="265:22" pos:end="265:24"><expr pos:start="265:22" pos:end="265:24"><operator pos:start="265:22" pos:end="265:22">&amp;</operator><name pos:start="265:23" pos:end="265:24">pb</name></expr></argument>, <argument pos:start="265:27" pos:end="265:27"><expr pos:start="265:27" pos:end="265:27"><literal type="number" pos:start="265:27" pos:end="265:27">8</literal></expr></argument>, <argument pos:start="265:30" pos:end="265:30"><expr pos:start="265:30" pos:end="265:30"><name pos:start="265:30" pos:end="265:30">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="271:5" pos:end="271:31"><expr pos:start="271:5" pos:end="271:30"><call pos:start="271:5" pos:end="271:30"><name pos:start="271:5" pos:end="271:25">avpriv_align_put_bits</name><argument_list pos:start="271:26" pos:end="271:30">(<argument pos:start="271:27" pos:end="271:29"><expr pos:start="271:27" pos:end="271:29"><operator pos:start="271:27" pos:end="271:27">&amp;</operator><name pos:start="271:28" pos:end="271:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:18"><expr pos:start="273:5" pos:end="273:17"><call pos:start="273:5" pos:end="273:17"><name pos:start="273:5" pos:end="273:11">av_free</name><argument_list pos:start="273:12" pos:end="273:17">(<argument pos:start="273:13" pos:end="273:16"><expr pos:start="273:13" pos:end="273:16"><name pos:start="273:13" pos:end="273:16">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="277:5" pos:end="277:22">/* End of image */</comment>

    <expr_stmt pos:start="279:5" pos:end="279:25"><expr pos:start="279:5" pos:end="279:24"><call pos:start="279:5" pos:end="279:24"><name pos:start="279:5" pos:end="279:14">put_marker</name><argument_list pos:start="279:15" pos:end="279:24">(<argument pos:start="279:16" pos:end="279:18"><expr pos:start="279:16" pos:end="279:18"><operator pos:start="279:16" pos:end="279:16">&amp;</operator><name pos:start="279:17" pos:end="279:18">pb</name></expr></argument>, <argument pos:start="279:21" pos:end="279:23"><expr pos:start="279:21" pos:end="279:23"><name pos:start="279:21" pos:end="279:23">EOI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:24"><expr pos:start="281:5" pos:end="281:23"><call pos:start="281:5" pos:end="281:23"><name pos:start="281:5" pos:end="281:18">flush_put_bits</name><argument_list pos:start="281:19" pos:end="281:23">(<argument pos:start="281:20" pos:end="281:22"><expr pos:start="281:20" pos:end="281:22"><operator pos:start="281:20" pos:end="281:20">&amp;</operator><name pos:start="281:21" pos:end="281:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="285:5" pos:end="285:13"><expr pos:start="285:5" pos:end="285:12"><call pos:start="285:5" pos:end="285:12"><name pos:start="285:5" pos:end="285:10">emms_c</name><argument_list pos:start="285:11" pos:end="285:12">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="289:5" pos:end="289:43"><expr pos:start="289:5" pos:end="289:42"><name pos:start="289:5" pos:end="289:13"><name pos:start="289:5" pos:end="289:7">pkt</name><operator pos:start="289:8" pos:end="289:9">-&gt;</operator><name pos:start="289:10" pos:end="289:13">size</name></name>   <operator pos:start="289:17" pos:end="289:17">=</operator> <call pos:start="289:19" pos:end="289:37"><name pos:start="289:19" pos:end="289:32">put_bits_count</name><argument_list pos:start="289:33" pos:end="289:37">(<argument pos:start="289:34" pos:end="289:36"><expr pos:start="289:34" pos:end="289:36"><operator pos:start="289:34" pos:end="289:34">&amp;</operator><name pos:start="289:35" pos:end="289:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="289:39" pos:end="289:40">&gt;&gt;</operator> <literal type="number" pos:start="289:42" pos:end="289:42">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="291:5" pos:end="291:34"><expr pos:start="291:5" pos:end="291:33"><name pos:start="291:5" pos:end="291:14"><name pos:start="291:5" pos:end="291:7">pkt</name><operator pos:start="291:8" pos:end="291:9">-&gt;</operator><name pos:start="291:10" pos:end="291:14">flags</name></name> <operator pos:start="291:16" pos:end="291:17">|=</operator> <name pos:start="291:19" pos:end="291:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:20"><expr pos:start="293:5" pos:end="293:19"><operator pos:start="293:5" pos:end="293:5">*</operator><name pos:start="293:6" pos:end="293:15">got_packet</name> <operator pos:start="293:17" pos:end="293:17">=</operator> <literal type="number" pos:start="293:19" pos:end="293:19">1</literal></expr>;</expr_stmt>

    <return pos:start="295:5" pos:end="295:13">return <expr pos:start="295:12" pos:end="295:12"><literal type="number" pos:start="295:12" pos:end="295:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
