<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9957.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">ide_init2</name><parameter_list pos:start="1:15" pos:end="3:28">(<parameter pos:start="1:16" pos:end="1:26"><decl pos:start="1:16" pos:end="1:26"><type pos:start="1:16" pos:end="1:26"><name pos:start="1:16" pos:end="1:21">IDEBus</name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:26">bus</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:37">DriveInfo</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">hd0</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:53">DriveInfo</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">hd1</name></decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:27"><decl pos:start="3:16" pos:end="3:27"><type pos:start="3:16" pos:end="3:27"><name pos:start="3:16" pos:end="3:23">qemu_irq</name></type> <name pos:start="3:25" pos:end="3:27">irq</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:19">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:14"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <name pos:start="9:12" pos:end="9:14">int</name></type> <name pos:start="9:16" pos:end="9:27">drive_serial</name> <init pos:start="9:29" pos:end="9:31">= <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:20">cylinders</name></decl>, <decl pos:start="11:23" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:27">heads</name></decl>, <decl pos:start="11:30" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:33">secs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:23">nb_sectors</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="91:5">for<control pos:start="17:8" pos:end="17:26">(<init pos:start="17:9" pos:end="17:14"><expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">i</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</init> <condition pos:start="17:16" pos:end="17:21"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:16">i</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <literal type="number" pos:start="17:20" pos:end="17:20">2</literal></expr>;</condition> <incr pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:23">i</name><operator pos:start="17:24" pos:end="17:25">++</operator></expr></incr>)</control> <block pos:start="17:28" pos:end="91:5">{<block_content pos:start="19:9" pos:end="89:21">

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:9">s</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">bus</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:20">ifs</name></name> <operator pos:start="19:22" pos:end="19:22">+</operator> <name pos:start="19:24" pos:end="19:24">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:21"><expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">bus</name></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:20">bus</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:20"><expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">unit</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <name pos:start="23:19" pos:end="23:19">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:30"><if pos:start="25:9" pos:end="27:30">if <condition pos:start="25:12" pos:end="25:26">(<expr pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:13">i</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal> <operator pos:start="25:20" pos:end="25:21">&amp;&amp;</operator> <name pos:start="25:23" pos:end="25:25">hd0</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:30"><block_content pos:start="27:13" pos:end="27:30">

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:17">bs</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:29"><name pos:start="27:21" pos:end="27:23">hd0</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:29">bdrv</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:30"><if pos:start="29:9" pos:end="31:30">if <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:16">==</operator> <literal type="number" pos:start="29:18" pos:end="29:18">1</literal> <operator pos:start="29:20" pos:end="29:21">&amp;&amp;</operator> <name pos:start="29:23" pos:end="29:25">hd1</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:30"><block_content pos:start="31:13" pos:end="31:30">

            <expr_stmt pos:start="31:13" pos:end="31:30"><expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:17">bs</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:23">hd1</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">bdrv</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:75"><expr pos:start="33:9" pos:end="33:74"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">io_buffer</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:74"><name pos:start="33:24" pos:end="33:38">qemu_blockalign</name><argument_list pos:start="33:39" pos:end="33:74">(<argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:40">s</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:44">bs</name></name></expr></argument>, <argument pos:start="33:47" pos:end="33:73"><expr pos:start="33:47" pos:end="33:73"><name pos:start="33:47" pos:end="33:65">IDE_DMA_BUF_SECTORS</name><operator pos:start="33:66" pos:end="33:66">*</operator><literal type="number" pos:start="33:67" pos:end="33:71">512</literal> <operator pos:start="33:71" pos:end="33:71">+</operator> <literal type="number" pos:start="33:73" pos:end="33:73">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="71:9"><if pos:start="35:9" pos:end="71:9">if <condition pos:start="35:12" pos:end="35:18">(<expr pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:17"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:17">bs</name></name></expr>)</condition> <block pos:start="35:20" pos:end="71:9">{<block_content pos:start="37:13" pos:end="69:13">

            <expr_stmt pos:start="37:13" pos:end="37:50"><expr pos:start="37:13" pos:end="37:49"><call pos:start="37:13" pos:end="37:49"><name pos:start="37:13" pos:end="37:29">bdrv_get_geometry</name><argument_list pos:start="37:30" pos:end="37:49">(<argument pos:start="37:31" pos:end="37:35"><expr pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:35">bs</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:48"><expr pos:start="37:38" pos:end="37:48"><operator pos:start="37:38" pos:end="37:38">&amp;</operator><name pos:start="37:39" pos:end="37:48">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:66"><expr pos:start="39:13" pos:end="39:65"><call pos:start="39:13" pos:end="39:65"><name pos:start="39:13" pos:end="39:31">bdrv_guess_geometry</name><argument_list pos:start="39:32" pos:end="39:65">(<argument pos:start="39:33" pos:end="39:37"><expr pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:37">bs</name></name></expr></argument>, <argument pos:start="39:40" pos:end="39:49"><expr pos:start="39:40" pos:end="39:49"><operator pos:start="39:40" pos:end="39:40">&amp;</operator><name pos:start="39:41" pos:end="39:49">cylinders</name></expr></argument>, <argument pos:start="39:52" pos:end="39:57"><expr pos:start="39:52" pos:end="39:57"><operator pos:start="39:52" pos:end="39:52">&amp;</operator><name pos:start="39:53" pos:end="39:57">heads</name></expr></argument>, <argument pos:start="39:60" pos:end="39:64"><expr pos:start="39:60" pos:end="39:64"><operator pos:start="39:60" pos:end="39:60">&amp;</operator><name pos:start="39:61" pos:end="39:64">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:37"><expr pos:start="41:13" pos:end="41:36"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:24">cylinders</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:36">cylinders</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">heads</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:28">heads</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:22">sectors</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:29">secs</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:25">nb_sectors</name></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:38">nb_sectors</name></expr>;</expr_stmt>

	    <comment type="block" pos:start="49:13" pos:end="51:35">/* The SMART values should be preserved across power cycles

	       but they aren't.  */</comment>

	    <expr_stmt pos:start="53:13" pos:end="53:33"><expr pos:start="53:13" pos:end="53:32"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:28">smart_enabled</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:29">smart_autosave</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="57:13" pos:end="57:32"><expr pos:start="57:13" pos:end="57:31"><name pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:27">smart_errors</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:35"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:35">smart_selftest_count</name></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <literal type="number" pos:start="59:39" pos:end="59:39">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="61:13" pos:end="61:65"><expr pos:start="61:13" pos:end="61:64"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:34">smart_selftest_data</name></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <call pos:start="61:38" pos:end="61:64"><name pos:start="61:38" pos:end="61:52">qemu_blockalign</name><argument_list pos:start="61:53" pos:end="61:64">(<argument pos:start="61:54" pos:end="61:58"><expr pos:start="61:54" pos:end="61:58"><name pos:start="61:54" pos:end="61:58"><name pos:start="61:54" pos:end="61:54">s</name><operator pos:start="61:55" pos:end="61:56">-&gt;</operator><name pos:start="61:57" pos:end="61:58">bs</name></name></expr></argument>, <argument pos:start="61:61" pos:end="61:63"><expr pos:start="61:61" pos:end="61:63"><literal type="number" pos:start="61:61" pos:end="61:63">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:61">(<expr pos:start="63:17" pos:end="63:60"><call pos:start="63:17" pos:end="63:41"><name pos:start="63:17" pos:end="63:34">bdrv_get_type_hint</name><argument_list pos:start="63:35" pos:end="63:41">(<argument pos:start="63:36" pos:end="63:40"><expr pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:40"><name pos:start="63:36" pos:end="63:36">s</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:40">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:43" pos:end="63:44">==</operator> <name pos:start="63:46" pos:end="63:60">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="63:63" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:62">

                <expr_stmt pos:start="65:17" pos:end="65:32"><expr pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:27"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:27">is_cdrom</name></name> <operator pos:start="65:29" pos:end="65:29">=</operator> <literal type="number" pos:start="65:31" pos:end="65:31">1</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="67:17" pos:end="67:62"><expr pos:start="67:17" pos:end="67:61"><call pos:start="67:17" pos:end="67:61"><name pos:start="67:17" pos:end="67:34">bdrv_set_change_cb</name><argument_list pos:start="67:35" pos:end="67:61">(<argument pos:start="67:36" pos:end="67:40"><expr pos:start="67:36" pos:end="67:40"><name pos:start="67:36" pos:end="67:40"><name pos:start="67:36" pos:end="67:36">s</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:40">bs</name></name></expr></argument>, <argument pos:start="67:43" pos:end="67:57"><expr pos:start="67:43" pos:end="67:57"><name pos:start="67:43" pos:end="67:57">cdrom_change_cb</name></expr></argument>, <argument pos:start="67:60" pos:end="67:60"><expr pos:start="67:60" pos:end="67:60"><name pos:start="67:60" pos:end="67:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:41"><expr pos:start="73:9" pos:end="73:40"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:23">drive_serial</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:38">drive_serial</name><operator pos:start="73:39" pos:end="73:40">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="77:45"><expr pos:start="75:9" pos:end="77:44"><call pos:start="75:9" pos:end="77:44"><name pos:start="75:9" pos:end="75:15">strncpy</name><argument_list pos:start="75:16" pos:end="77:44">(<argument pos:start="75:17" pos:end="75:35"><expr pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:35">drive_serial_str</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:60"><expr pos:start="75:38" pos:end="75:60"><call pos:start="75:38" pos:end="75:60"><name pos:start="75:38" pos:end="75:53">drive_get_serial</name><argument_list pos:start="75:54" pos:end="75:60">(<argument pos:start="75:55" pos:end="75:59"><expr pos:start="75:55" pos:end="75:59"><name pos:start="75:55" pos:end="75:59"><name pos:start="75:55" pos:end="75:55">s</name><operator pos:start="75:56" pos:end="75:57">-&gt;</operator><name pos:start="75:58" pos:end="75:59">bs</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="77:17" pos:end="77:43"><expr pos:start="77:17" pos:end="77:43"><sizeof pos:start="77:17" pos:end="77:43">sizeof<argument_list pos:start="77:23" pos:end="77:43">(<argument pos:start="77:24" pos:end="77:42"><expr pos:start="77:24" pos:end="77:42"><name pos:start="77:24" pos:end="77:42"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:42">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="83:47"><if pos:start="79:9" pos:end="83:47">if <condition pos:start="79:12" pos:end="79:45">(<expr pos:start="79:13" pos:end="79:44"><call pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:18">strlen</name><argument_list pos:start="79:19" pos:end="79:39">(<argument pos:start="79:20" pos:end="79:38"><expr pos:start="79:20" pos:end="79:38"><name pos:start="79:20" pos:end="79:38"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:38">drive_serial_str</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:41" pos:end="79:42">==</operator> <literal type="number" pos:start="79:44" pos:end="79:44">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="83:47"><block_content pos:start="81:13" pos:end="83:47">

            <expr_stmt pos:start="81:13" pos:end="83:47"><expr pos:start="81:13" pos:end="83:46"><call pos:start="81:13" pos:end="83:46"><name pos:start="81:13" pos:end="81:20">snprintf</name><argument_list pos:start="81:21" pos:end="83:46">(<argument pos:start="81:22" pos:end="81:40"><expr pos:start="81:22" pos:end="81:40"><name pos:start="81:22" pos:end="81:40"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:40">drive_serial_str</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:69"><expr pos:start="81:43" pos:end="81:69"><sizeof pos:start="81:43" pos:end="81:69">sizeof<argument_list pos:start="81:49" pos:end="81:69">(<argument pos:start="81:50" pos:end="81:68"><expr pos:start="81:50" pos:end="81:68"><name pos:start="81:50" pos:end="81:68"><name pos:start="81:50" pos:end="81:50">s</name><operator pos:start="81:51" pos:end="81:52">-&gt;</operator><name pos:start="81:53" pos:end="81:68">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="83:21" pos:end="83:28"><expr pos:start="83:21" pos:end="83:28"><literal type="string" pos:start="83:21" pos:end="83:28">"QM%05d"</literal></expr></argument>, <argument pos:start="83:31" pos:end="83:45"><expr pos:start="83:31" pos:end="83:45"><name pos:start="83:31" pos:end="83:45"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:45">drive_serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="87:77"><expr pos:start="85:9" pos:end="87:76"><name pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:29">sector_write_timer</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <call pos:start="85:33" pos:end="87:76"><name pos:start="85:33" pos:end="85:46">qemu_new_timer</name><argument_list pos:start="85:47" pos:end="87:76">(<argument pos:start="85:48" pos:end="85:55"><expr pos:start="85:48" pos:end="85:55"><name pos:start="85:48" pos:end="85:55">vm_clock</name></expr></argument>,

                                               <argument pos:start="87:48" pos:end="87:72"><expr pos:start="87:48" pos:end="87:72"><name pos:start="87:48" pos:end="87:72">ide_sector_write_timer_cb</name></expr></argument>, <argument pos:start="87:75" pos:end="87:75"><expr pos:start="87:75" pos:end="87:75"><name pos:start="87:75" pos:end="87:75">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><call pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:17">ide_reset</name><argument_list pos:start="89:18" pos:end="89:20">(<argument pos:start="89:19" pos:end="89:19"><expr pos:start="89:19" pos:end="89:19"><name pos:start="89:19" pos:end="89:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="93:5" pos:end="93:19"><expr pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:12"><name pos:start="93:5" pos:end="93:7">bus</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:12">irq</name></name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:18">irq</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
