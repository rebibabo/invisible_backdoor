<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12655.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">filter_mb</name><parameter_list pos:start="1:22" pos:end="1:108">( <parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">H264Context</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">h</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:47"><decl pos:start="1:40" pos:end="1:47"><type pos:start="1:40" pos:end="1:47"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:47">mb_x</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:57">mb_y</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">img_y</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:90"><decl pos:start="1:76" pos:end="1:90"><type pos:start="1:76" pos:end="1:90"><name pos:start="1:76" pos:end="1:82">uint8_t</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:90">img_cb</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:107"><decl pos:start="1:93" pos:end="1:107"><type pos:start="1:93" pos:end="1:107"><name pos:start="1:93" pos:end="1:99">uint8_t</name> <modifier pos:start="1:101" pos:end="1:101">*</modifier></type><name pos:start="1:102" pos:end="1:107">img_cr</name></decl></parameter>)</parameter_list> <block pos:start="1:110" pos:end="173:1">{<block_content pos:start="3:5" pos:end="171:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:19">mb_xy</name><init pos:start="5:20" pos:end="5:45">= <expr pos:start="5:22" pos:end="5:45"><name pos:start="5:22" pos:end="5:25">mb_x</name> <operator pos:start="5:27" pos:end="5:27">+</operator> <name pos:start="5:29" pos:end="5:32">mb_y</name><operator pos:start="5:33" pos:end="5:33">*</operator><name pos:start="5:34" pos:end="5:45"><name pos:start="5:34" pos:end="5:34">s</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:16">linesize</name></decl>, <decl pos:start="7:19" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:28">uvlinesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">dir</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:56">/* FIXME Implement deblocking filter for field MB */</comment>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if<condition pos:start="15:7" pos:end="15:23">( <expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:9">h</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">sps</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:21">mb_aff</name></name></expr> )</condition> <block pos:start="15:25" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:12">linesize</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:26"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:26">linesize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:14">uvlinesize</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:30">uvlinesize</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:56">/* dir : 0 -&gt; vertical edge, 1 -&gt; horizontal edge */</comment>

    <for pos:start="29:5" pos:end="171:5">for<control pos:start="29:8" pos:end="29:34">( <init pos:start="29:10" pos:end="29:17"><expr pos:start="29:10" pos:end="29:16"><name pos:start="29:10" pos:end="29:12">dir</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</init> <condition pos:start="29:19" pos:end="29:26"><expr pos:start="29:19" pos:end="29:25"><name pos:start="29:19" pos:end="29:21">dir</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">2</literal></expr>;</condition> <incr pos:start="29:28" pos:end="29:32"><expr pos:start="29:28" pos:end="29:32"><name pos:start="29:28" pos:end="29:30">dir</name><operator pos:start="29:31" pos:end="29:32">++</operator></expr></incr> )</control>

    <block pos:start="31:5" pos:end="171:5">{<block_content pos:start="33:9" pos:end="169:9">

        <decl_stmt pos:start="33:9" pos:end="33:17"><decl pos:start="33:9" pos:end="33:16"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:16">edge</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:70"><decl pos:start="35:9" pos:end="35:69"><type pos:start="35:9" pos:end="35:17"><specifier pos:start="35:9" pos:end="35:13">const</specifier> <name pos:start="35:15" pos:end="35:17">int</name></type> <name pos:start="35:19" pos:end="35:24">mbm_xy</name> <init pos:start="35:26" pos:end="35:69">= <expr pos:start="35:28" pos:end="35:69"><ternary pos:start="35:28" pos:end="35:69"><condition pos:start="35:28" pos:end="35:37"><expr pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:30">dir</name> <operator pos:start="35:32" pos:end="35:33">==</operator> <literal type="number" pos:start="35:35" pos:end="35:35">0</literal></expr> ?</condition><then pos:start="35:39" pos:end="35:46"> <expr pos:start="35:39" pos:end="35:46"><name pos:start="35:39" pos:end="35:43">mb_xy</name> <operator pos:start="35:45" pos:end="35:45">-</operator><literal type="number" pos:start="35:46" pos:end="35:46">1</literal></expr> </then><else pos:start="35:48" pos:end="35:69">: <expr pos:start="35:50" pos:end="35:69"><name pos:start="35:50" pos:end="35:54">mb_xy</name> <operator pos:start="35:56" pos:end="35:56">-</operator> <name pos:start="35:58" pos:end="35:69"><name pos:start="35:58" pos:end="35:58">s</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:69">mb_stride</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:58"><decl pos:start="37:9" pos:end="37:57"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:17">start</name> <init pos:start="37:19" pos:end="37:57">= <expr pos:start="37:21" pos:end="37:57"><ternary pos:start="37:21" pos:end="37:57"><condition pos:start="37:21" pos:end="37:51"><expr pos:start="37:21" pos:end="37:49"><name pos:start="37:21" pos:end="37:42"><name pos:start="37:21" pos:end="37:21">h</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:34">slice_table</name><index pos:start="37:35" pos:end="37:42">[<expr pos:start="37:36" pos:end="37:41"><name pos:start="37:36" pos:end="37:41">mbm_xy</name></expr>]</index></name> <operator pos:start="37:44" pos:end="37:45">==</operator> <literal type="number" pos:start="37:47" pos:end="37:49">255</literal></expr> ?</condition><then pos:start="37:53" pos:end="37:53"> <expr pos:start="37:53" pos:end="37:53"><literal type="number" pos:start="37:53" pos:end="37:53">1</literal></expr> </then><else pos:start="37:55" pos:end="37:57">: <expr pos:start="37:57" pos:end="37:57"><literal type="number" pos:start="37:57" pos:end="37:57">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="43:22"><if pos:start="41:9" pos:end="43:22">if <condition pos:start="41:12" pos:end="41:87">(<expr pos:start="41:13" pos:end="41:86"><name pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:13">h</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:32">deblocking_filter</name></name><operator pos:start="41:33" pos:end="41:34">==</operator><literal type="number" pos:start="41:35" pos:end="41:35">2</literal> <operator pos:start="41:37" pos:end="41:38">&amp;&amp;</operator> <name pos:start="41:40" pos:end="41:61"><name pos:start="41:40" pos:end="41:40">h</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:53">slice_table</name><index pos:start="41:54" pos:end="41:61">[<expr pos:start="41:55" pos:end="41:60"><name pos:start="41:55" pos:end="41:60">mbm_xy</name></expr>]</index></name> <operator pos:start="41:63" pos:end="41:64">!=</operator> <name pos:start="41:66" pos:end="41:86"><name pos:start="41:66" pos:end="41:66">h</name><operator pos:start="41:67" pos:end="41:68">-&gt;</operator><name pos:start="41:69" pos:end="41:79">slice_table</name><index pos:start="41:80" pos:end="41:86">[<expr pos:start="41:81" pos:end="41:85"><name pos:start="41:81" pos:end="41:85">mb_xy</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:22"><block_content pos:start="43:13" pos:end="43:22">

            <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:17">start</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:26">/* Calculate bS */</comment>

        <for pos:start="49:9" pos:end="169:9">for<control pos:start="49:12" pos:end="49:45">( <init pos:start="49:14" pos:end="49:26"><expr pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:17">edge</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:25">start</name></expr>;</init> <condition pos:start="49:28" pos:end="49:36"><expr pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:31">edge</name> <operator pos:start="49:33" pos:end="49:33">&lt;</operator> <literal type="number" pos:start="49:35" pos:end="49:35">4</literal></expr>;</condition> <incr pos:start="49:38" pos:end="49:43"><expr pos:start="49:38" pos:end="49:43"><name pos:start="49:38" pos:end="49:41">edge</name><operator pos:start="49:42" pos:end="49:43">++</operator></expr></incr> )</control> <block pos:start="49:47" pos:end="169:9">{<block_content pos:start="53:13" pos:end="167:13">

            <comment type="block" pos:start="51:13" pos:end="51:75">/* mbn_xy: neighbour macroblock (how that works for field ?) */</comment>

            <decl_stmt pos:start="53:13" pos:end="53:51"><decl pos:start="53:13" pos:end="53:50"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:22">mbn_xy</name> <init pos:start="53:24" pos:end="53:50">= <expr pos:start="53:26" pos:end="53:50"><ternary pos:start="53:26" pos:end="53:50"><condition pos:start="53:26" pos:end="53:35"><expr pos:start="53:26" pos:end="53:33"><name pos:start="53:26" pos:end="53:29">edge</name> <operator pos:start="53:31" pos:end="53:31">&gt;</operator> <literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr> ?</condition><then pos:start="53:37" pos:end="53:41"> <expr pos:start="53:37" pos:end="53:41"><name pos:start="53:37" pos:end="53:41">mb_xy</name></expr> </then><else pos:start="53:43" pos:end="53:50">: <expr pos:start="53:45" pos:end="53:50"><name pos:start="53:45" pos:end="53:50">mbm_xy</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:22"><decl pos:start="55:13" pos:end="55:21"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:18">bS</name><index pos:start="55:19" pos:end="55:21">[<expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:19"><decl pos:start="57:13" pos:end="57:18"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:18">qp</name></decl>;</decl_stmt>



            <if_stmt pos:start="61:13" pos:end="121:13"><if pos:start="61:13" pos:end="67:13">if<condition pos:start="61:15" pos:end="63:64">( <expr pos:start="61:17" pos:end="63:62"><call pos:start="61:17" pos:end="61:61"><name pos:start="61:17" pos:end="61:24">IS_INTRA</name><argument_list pos:start="61:25" pos:end="61:61">( <argument pos:start="61:27" pos:end="61:59"><expr pos:start="61:27" pos:end="61:59"><name pos:start="61:27" pos:end="61:59"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:44">current_picture</name><operator pos:start="61:45" pos:end="61:45">.</operator><name pos:start="61:46" pos:end="61:52">mb_type</name><index pos:start="61:53" pos:end="61:59">[<expr pos:start="61:54" pos:end="61:58"><name pos:start="61:54" pos:end="61:58">mb_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="61:63" pos:end="61:64">||</operator>

                <call pos:start="63:17" pos:end="63:62"><name pos:start="63:17" pos:end="63:24">IS_INTRA</name><argument_list pos:start="63:25" pos:end="63:62">( <argument pos:start="63:27" pos:end="63:60"><expr pos:start="63:27" pos:end="63:60"><name pos:start="63:27" pos:end="63:60"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:44">current_picture</name><operator pos:start="63:45" pos:end="63:45">.</operator><name pos:start="63:46" pos:end="63:52">mb_type</name><index pos:start="63:53" pos:end="63:60">[<expr pos:start="63:54" pos:end="63:59"><name pos:start="63:54" pos:end="63:59">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="63:66" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:70">

                <expr_stmt pos:start="65:17" pos:end="65:70"><expr pos:start="65:17" pos:end="65:69"><name pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:18">bS</name><index pos:start="65:19" pos:end="65:21">[<expr pos:start="65:20" pos:end="65:20"><literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>]</index></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:29"><name pos:start="65:25" pos:end="65:26">bS</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">1</literal></expr>]</index></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:37"><name pos:start="65:33" pos:end="65:34">bS</name><index pos:start="65:35" pos:end="65:37">[<expr pos:start="65:36" pos:end="65:36"><literal type="number" pos:start="65:36" pos:end="65:36">2</literal></expr>]</index></name> <operator pos:start="65:39" pos:end="65:39">=</operator> <name pos:start="65:41" pos:end="65:45"><name pos:start="65:41" pos:end="65:42">bS</name><index pos:start="65:43" pos:end="65:45">[<expr pos:start="65:44" pos:end="65:44"><literal type="number" pos:start="65:44" pos:end="65:44">3</literal></expr>]</index></name> <operator pos:start="65:47" pos:end="65:47">=</operator> <operator pos:start="65:49" pos:end="65:49">(</operator> <ternary pos:start="65:51" pos:end="65:67"><condition pos:start="65:51" pos:end="65:61"><expr pos:start="65:51" pos:end="65:59"><name pos:start="65:51" pos:end="65:54">edge</name> <operator pos:start="65:56" pos:end="65:57">==</operator> <literal type="number" pos:start="65:59" pos:end="65:59">0</literal></expr> ?</condition><then pos:start="65:63" pos:end="65:63"> <expr pos:start="65:63" pos:end="65:63"><literal type="number" pos:start="65:63" pos:end="65:63">4</literal></expr> </then><else pos:start="65:65" pos:end="65:67">: <expr pos:start="65:67" pos:end="65:67"><literal type="number" pos:start="65:67" pos:end="65:67">3</literal></expr></else></ternary> <operator pos:start="65:69" pos:end="65:69">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="67:15" pos:end="121:13">else <block pos:start="67:20" pos:end="121:13">{<block_content pos:start="69:17" pos:end="119:29">

                <decl_stmt pos:start="69:17" pos:end="69:22"><decl pos:start="69:17" pos:end="69:21"><type pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">int</name></type> <name pos:start="69:21" pos:end="69:21">i</name></decl>;</decl_stmt>

                <for pos:start="71:17" pos:end="113:17">for<control pos:start="71:20" pos:end="71:40">( <init pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:26"><name pos:start="71:22" pos:end="71:22">i</name> <operator pos:start="71:24" pos:end="71:24">=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>;</init> <condition pos:start="71:29" pos:end="71:34"><expr pos:start="71:29" pos:end="71:33"><name pos:start="71:29" pos:end="71:29">i</name> <operator pos:start="71:31" pos:end="71:31">&lt;</operator> <literal type="number" pos:start="71:33" pos:end="71:33">4</literal></expr>;</condition> <incr pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><name pos:start="71:36" pos:end="71:36">i</name><operator pos:start="71:37" pos:end="71:38">++</operator></expr></incr> )</control> <block pos:start="71:42" pos:end="113:17">{<block_content pos:start="73:21" pos:end="111:21">

                    <decl_stmt pos:start="73:21" pos:end="73:48"><decl pos:start="73:21" pos:end="73:47"><type pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">int</name></type> <name pos:start="73:25" pos:end="73:25">x</name> <init pos:start="73:27" pos:end="73:47">= <expr pos:start="73:29" pos:end="73:47"><ternary pos:start="73:29" pos:end="73:47"><condition pos:start="73:29" pos:end="73:38"><expr pos:start="73:29" pos:end="73:36"><name pos:start="73:29" pos:end="73:31">dir</name> <operator pos:start="73:33" pos:end="73:34">==</operator> <literal type="number" pos:start="73:36" pos:end="73:36">0</literal></expr> ?</condition><then pos:start="73:40" pos:end="73:43"> <expr pos:start="73:40" pos:end="73:43"><name pos:start="73:40" pos:end="73:43">edge</name></expr> </then><else pos:start="73:45" pos:end="73:47">: <expr pos:start="73:47" pos:end="73:47"><name pos:start="73:47" pos:end="73:47">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="75:21" pos:end="75:51"><decl pos:start="75:21" pos:end="75:50"><type pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:23">int</name></type> <name pos:start="75:25" pos:end="75:25">y</name> <init pos:start="75:27" pos:end="75:50">= <expr pos:start="75:29" pos:end="75:50"><ternary pos:start="75:29" pos:end="75:50"><condition pos:start="75:29" pos:end="75:38"><expr pos:start="75:29" pos:end="75:36"><name pos:start="75:29" pos:end="75:31">dir</name> <operator pos:start="75:33" pos:end="75:34">==</operator> <literal type="number" pos:start="75:36" pos:end="75:36">0</literal></expr> ?</condition><then pos:start="75:40" pos:end="75:40"> <expr pos:start="75:40" pos:end="75:40"><name pos:start="75:40" pos:end="75:40">i</name></expr>    </then><else pos:start="75:45" pos:end="75:50">: <expr pos:start="75:47" pos:end="75:50"><name pos:start="75:47" pos:end="75:50">edge</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="77:21" pos:end="77:47"><decl pos:start="77:21" pos:end="77:46"><type pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">int</name></type> <name pos:start="77:25" pos:end="77:29">b_idx</name><init pos:start="77:30" pos:end="77:46">= <expr pos:start="77:32" pos:end="77:46"><literal type="number" pos:start="77:32" pos:end="77:34">8</literal> <operator pos:start="77:34" pos:end="77:34">+</operator> <literal type="number" pos:start="77:36" pos:end="77:38">4</literal> <operator pos:start="77:38" pos:end="77:38">+</operator> <name pos:start="77:40" pos:end="77:40">x</name> <operator pos:start="77:42" pos:end="77:42">+</operator> <literal type="number" pos:start="77:44" pos:end="77:44">8</literal><operator pos:start="77:45" pos:end="77:45">*</operator><name pos:start="77:46" pos:end="77:46">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="79:21" pos:end="79:52"><decl pos:start="79:21" pos:end="79:51"><type pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">int</name></type> <name pos:start="79:25" pos:end="79:30">bn_idx</name><init pos:start="79:31" pos:end="79:51">= <expr pos:start="79:33" pos:end="79:51"><name pos:start="79:33" pos:end="79:37">b_idx</name> <operator pos:start="79:39" pos:end="79:39">-</operator> <operator pos:start="79:41" pos:end="79:41">(</operator><ternary pos:start="79:42" pos:end="79:50"><condition pos:start="79:42" pos:end="79:46"><expr pos:start="79:42" pos:end="79:44"><name pos:start="79:42" pos:end="79:44">dir</name></expr> ?</condition><then pos:start="79:48" pos:end="79:48"> <expr pos:start="79:48" pos:end="79:48"><literal type="number" pos:start="79:48" pos:end="79:48">8</literal></expr></then><else pos:start="79:49" pos:end="79:50">:<expr pos:start="79:50" pos:end="79:50"><literal type="number" pos:start="79:50" pos:end="79:50">1</literal></expr></else></ternary><operator pos:start="79:51" pos:end="79:51">)</operator></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="83:21" pos:end="111:21"><if pos:start="83:21" pos:end="89:21">if<condition pos:start="83:23" pos:end="85:62">( <expr pos:start="83:25" pos:end="85:60"><name pos:start="83:25" pos:end="83:54"><name pos:start="83:25" pos:end="83:25">h</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:47">non_zero_count_cache</name><index pos:start="83:48" pos:end="83:54">[<expr pos:start="83:49" pos:end="83:53"><name pos:start="83:49" pos:end="83:53">b_idx</name></expr>]</index></name> <operator pos:start="83:56" pos:end="83:57">!=</operator> <literal type="number" pos:start="83:59" pos:end="83:59">0</literal> <operator pos:start="83:61" pos:end="83:62">||</operator>

                        <name pos:start="85:25" pos:end="85:55"><name pos:start="85:25" pos:end="85:25">h</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:47">non_zero_count_cache</name><index pos:start="85:48" pos:end="85:55">[<expr pos:start="85:49" pos:end="85:54"><name pos:start="85:49" pos:end="85:54">bn_idx</name></expr>]</index></name> <operator pos:start="85:57" pos:end="85:58">!=</operator> <literal type="number" pos:start="85:60" pos:end="85:60">0</literal></expr> )</condition> <block pos:start="85:64" pos:end="89:21">{<block_content pos:start="87:25" pos:end="87:34">

                        <expr_stmt pos:start="87:25" pos:end="87:34"><expr pos:start="87:25" pos:end="87:33"><name pos:start="87:25" pos:end="87:29"><name pos:start="87:25" pos:end="87:26">bS</name><index pos:start="87:27" pos:end="87:29">[<expr pos:start="87:28" pos:end="87:28"><name pos:start="87:28" pos:end="87:28">i</name></expr>]</index></name> <operator pos:start="87:31" pos:end="87:31">=</operator> <literal type="number" pos:start="87:33" pos:end="87:33">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <if type="elseif" pos:start="91:21" pos:end="105:21">else if<condition pos:start="91:28" pos:end="91:54">( <expr pos:start="91:30" pos:end="91:52"><name pos:start="91:30" pos:end="91:42"><name pos:start="91:30" pos:end="91:30">h</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:42">slice_type</name></name> <operator pos:start="91:44" pos:end="91:45">==</operator> <name pos:start="91:47" pos:end="91:52">P_TYPE</name></expr> )</condition> <block pos:start="91:56" pos:end="105:21">{<block_content pos:start="93:25" pos:end="103:38">

                        <if_stmt pos:start="93:25" pos:end="103:38"><if pos:start="93:25" pos:end="99:38">if<condition pos:start="93:27" pos:end="97:94">( <expr pos:start="93:29" pos:end="97:92"><name pos:start="93:29" pos:end="93:50"><name pos:start="93:29" pos:end="93:29">h</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:40">ref_cache</name><index pos:start="93:41" pos:end="93:43">[<expr pos:start="93:42" pos:end="93:42"><literal type="number" pos:start="93:42" pos:end="93:42">0</literal></expr>]</index><index pos:start="93:44" pos:end="93:50">[<expr pos:start="93:45" pos:end="93:49"><name pos:start="93:45" pos:end="93:49">b_idx</name></expr>]</index></name> <operator pos:start="93:52" pos:end="93:53">!=</operator> <name pos:start="93:55" pos:end="93:77"><name pos:start="93:55" pos:end="93:55">h</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:66">ref_cache</name><index pos:start="93:67" pos:end="93:69">[<expr pos:start="93:68" pos:end="93:68"><literal type="number" pos:start="93:68" pos:end="93:68">0</literal></expr>]</index><index pos:start="93:70" pos:end="93:77">[<expr pos:start="93:71" pos:end="93:76"><name pos:start="93:71" pos:end="93:76">bn_idx</name></expr>]</index></name> <operator pos:start="93:79" pos:end="93:80">||</operator>

                            <call pos:start="95:29" pos:end="95:87"><name pos:start="95:29" pos:end="95:31">ABS</name><argument_list pos:start="95:32" pos:end="95:87">( <argument pos:start="95:34" pos:end="95:85"><expr pos:start="95:34" pos:end="95:85"><name pos:start="95:34" pos:end="95:57"><name pos:start="95:34" pos:end="95:34">h</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:44">mv_cache</name><index pos:start="95:45" pos:end="95:47">[<expr pos:start="95:46" pos:end="95:46"><literal type="number" pos:start="95:46" pos:end="95:46">0</literal></expr>]</index><index pos:start="95:48" pos:end="95:54">[<expr pos:start="95:49" pos:end="95:53"><name pos:start="95:49" pos:end="95:53">b_idx</name></expr>]</index><index pos:start="95:55" pos:end="95:57">[<expr pos:start="95:56" pos:end="95:56"><literal type="number" pos:start="95:56" pos:end="95:56">0</literal></expr>]</index></name> <operator pos:start="95:59" pos:end="95:59">-</operator> <name pos:start="95:61" pos:end="95:85"><name pos:start="95:61" pos:end="95:61">h</name><operator pos:start="95:62" pos:end="95:63">-&gt;</operator><name pos:start="95:64" pos:end="95:71">mv_cache</name><index pos:start="95:72" pos:end="95:74">[<expr pos:start="95:73" pos:end="95:73"><literal type="number" pos:start="95:73" pos:end="95:73">0</literal></expr>]</index><index pos:start="95:75" pos:end="95:82">[<expr pos:start="95:76" pos:end="95:81"><name pos:start="95:76" pos:end="95:81">bn_idx</name></expr>]</index><index pos:start="95:83" pos:end="95:85">[<expr pos:start="95:84" pos:end="95:84"><literal type="number" pos:start="95:84" pos:end="95:84">0</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="95:89" pos:end="95:90">&gt;=</operator> <literal type="number" pos:start="95:92" pos:end="95:92">4</literal> <operator pos:start="95:94" pos:end="95:95">||</operator>

                            <call pos:start="97:29" pos:end="97:87"><name pos:start="97:29" pos:end="97:31">ABS</name><argument_list pos:start="97:32" pos:end="97:87">( <argument pos:start="97:34" pos:end="97:85"><expr pos:start="97:34" pos:end="97:85"><name pos:start="97:34" pos:end="97:57"><name pos:start="97:34" pos:end="97:34">h</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:44">mv_cache</name><index pos:start="97:45" pos:end="97:47">[<expr pos:start="97:46" pos:end="97:46"><literal type="number" pos:start="97:46" pos:end="97:46">0</literal></expr>]</index><index pos:start="97:48" pos:end="97:54">[<expr pos:start="97:49" pos:end="97:53"><name pos:start="97:49" pos:end="97:53">b_idx</name></expr>]</index><index pos:start="97:55" pos:end="97:57">[<expr pos:start="97:56" pos:end="97:56"><literal type="number" pos:start="97:56" pos:end="97:56">1</literal></expr>]</index></name> <operator pos:start="97:59" pos:end="97:59">-</operator> <name pos:start="97:61" pos:end="97:85"><name pos:start="97:61" pos:end="97:61">h</name><operator pos:start="97:62" pos:end="97:63">-&gt;</operator><name pos:start="97:64" pos:end="97:71">mv_cache</name><index pos:start="97:72" pos:end="97:74">[<expr pos:start="97:73" pos:end="97:73"><literal type="number" pos:start="97:73" pos:end="97:73">0</literal></expr>]</index><index pos:start="97:75" pos:end="97:82">[<expr pos:start="97:76" pos:end="97:81"><name pos:start="97:76" pos:end="97:81">bn_idx</name></expr>]</index><index pos:start="97:83" pos:end="97:85">[<expr pos:start="97:84" pos:end="97:84"><literal type="number" pos:start="97:84" pos:end="97:84">1</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="97:89" pos:end="97:90">&gt;=</operator> <literal type="number" pos:start="97:92" pos:end="97:92">4</literal></expr> )</condition><block type="pseudo" pos:start="99:29" pos:end="99:38"><block_content pos:start="99:29" pos:end="99:38">

                            <expr_stmt pos:start="99:29" pos:end="99:38"><expr pos:start="99:29" pos:end="99:37"><name pos:start="99:29" pos:end="99:33"><name pos:start="99:29" pos:end="99:30">bS</name><index pos:start="99:31" pos:end="99:33">[<expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">i</name></expr>]</index></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="101:25" pos:end="103:38">else<block type="pseudo" pos:start="103:29" pos:end="103:38"><block_content pos:start="103:29" pos:end="103:38">

                            <expr_stmt pos:start="103:29" pos:end="103:38"><expr pos:start="103:29" pos:end="103:37"><name pos:start="103:29" pos:end="103:33"><name pos:start="103:29" pos:end="103:30">bS</name><index pos:start="103:31" pos:end="103:33">[<expr pos:start="103:32" pos:end="103:32"><name pos:start="103:32" pos:end="103:32">i</name></expr>]</index></name> <operator pos:start="103:35" pos:end="103:35">=</operator> <literal type="number" pos:start="103:37" pos:end="103:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="105:23" pos:end="111:21">else <block pos:start="105:28" pos:end="111:21">{<block_content pos:start="109:25" pos:end="109:31">

                        <comment type="block" pos:start="107:25" pos:end="107:59">/* FIXME Add support for B frame */</comment>

                        <return pos:start="109:25" pos:end="109:31">return;</return>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>



                <if_stmt pos:start="117:17" pos:end="119:29"><if pos:start="117:17" pos:end="119:29">if<condition pos:start="117:19" pos:end="117:48">(<expr pos:start="117:20" pos:end="117:47"><name pos:start="117:20" pos:end="117:24"><name pos:start="117:20" pos:end="117:21">bS</name><index pos:start="117:22" pos:end="117:24">[<expr pos:start="117:23" pos:end="117:23"><literal type="number" pos:start="117:23" pos:end="117:23">0</literal></expr>]</index></name><operator pos:start="117:25" pos:end="117:25">+</operator><name pos:start="117:26" pos:end="117:30"><name pos:start="117:26" pos:end="117:27">bS</name><index pos:start="117:28" pos:end="117:30">[<expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">1</literal></expr>]</index></name><operator pos:start="117:31" pos:end="117:31">+</operator><name pos:start="117:32" pos:end="117:36"><name pos:start="117:32" pos:end="117:33">bS</name><index pos:start="117:34" pos:end="117:36">[<expr pos:start="117:35" pos:end="117:35"><literal type="number" pos:start="117:35" pos:end="117:35">2</literal></expr>]</index></name><operator pos:start="117:37" pos:end="117:37">+</operator><name pos:start="117:38" pos:end="117:42"><name pos:start="117:38" pos:end="117:39">bS</name><index pos:start="117:40" pos:end="117:42">[<expr pos:start="117:41" pos:end="117:41"><literal type="number" pos:start="117:41" pos:end="117:41">3</literal></expr>]</index></name> <operator pos:start="117:44" pos:end="117:45">==</operator> <literal type="number" pos:start="117:47" pos:end="117:47">0</literal></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:29"><block_content pos:start="119:21" pos:end="119:29">

                    <continue pos:start="119:21" pos:end="119:29">continue;</continue></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="125:13" pos:end="125:29">/* Filter edge */</comment>

            <comment type="line" pos:start="127:13" pos:end="127:81">// Do not use s-&gt;qscale as luma quantiser because it has not the same</comment>

            <comment type="line" pos:start="129:13" pos:end="129:41">// value in IPCM macroblocks.</comment>

            <expr_stmt pos:start="131:13" pos:end="131:111"><expr pos:start="131:13" pos:end="131:110"><name pos:start="131:13" pos:end="131:14">qp</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <operator pos:start="131:18" pos:end="131:18">(</operator> <name pos:start="131:20" pos:end="131:57"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:37">current_picture</name><operator pos:start="131:38" pos:end="131:38">.</operator><name pos:start="131:39" pos:end="131:50">qscale_table</name><index pos:start="131:51" pos:end="131:57">[<expr pos:start="131:52" pos:end="131:56"><name pos:start="131:52" pos:end="131:56">mb_xy</name></expr>]</index></name> <operator pos:start="131:59" pos:end="131:59">+</operator> <name pos:start="131:61" pos:end="131:99"><name pos:start="131:61" pos:end="131:61">s</name><operator pos:start="131:62" pos:end="131:63">-&gt;</operator><name pos:start="131:64" pos:end="131:78">current_picture</name><operator pos:start="131:79" pos:end="131:79">.</operator><name pos:start="131:80" pos:end="131:91">qscale_table</name><index pos:start="131:92" pos:end="131:99">[<expr pos:start="131:93" pos:end="131:98"><name pos:start="131:93" pos:end="131:98">mbn_xy</name></expr>]</index></name> <operator pos:start="131:101" pos:end="131:101">+</operator> <literal type="number" pos:start="131:103" pos:end="131:103">1</literal> <operator pos:start="131:105" pos:end="131:105">)</operator> <operator pos:start="131:107" pos:end="131:108">&gt;&gt;</operator> <literal type="number" pos:start="131:110" pos:end="131:110">1</literal></expr>;</expr_stmt>

            <comment type="line" pos:start="133:13" pos:end="133:165">//tprintf("filter mb:%d/%d dir:%d edge:%d, QPy:%d, QPc:%d, QPcn:%d\n", mb_x, mb_y, dir, edge, qp, h-&gt;chroma_qp, s-&gt;current_picture.qscale_table[mbn_xy]);</comment>

            <if_stmt pos:start="135:13" pos:end="167:13"><if pos:start="135:13" pos:end="151:13">if<condition pos:start="135:15" pos:end="135:26">( <expr pos:start="135:17" pos:end="135:24"><name pos:start="135:17" pos:end="135:19">dir</name> <operator pos:start="135:21" pos:end="135:22">==</operator> <literal type="number" pos:start="135:24" pos:end="135:24">0</literal></expr> )</condition> <block pos:start="135:28" pos:end="151:13">{<block_content pos:start="137:17" pos:end="149:17">

                <expr_stmt pos:start="137:17" pos:end="137:71"><expr pos:start="137:17" pos:end="137:70"><call pos:start="137:17" pos:end="137:70"><name pos:start="137:17" pos:end="137:31">filter_mb_edgev</name><argument_list pos:start="137:32" pos:end="137:70">( <argument pos:start="137:34" pos:end="137:34"><expr pos:start="137:34" pos:end="137:34"><name pos:start="137:34" pos:end="137:34">h</name></expr></argument>, <argument pos:start="137:37" pos:end="137:50"><expr pos:start="137:37" pos:end="137:50"><operator pos:start="137:37" pos:end="137:37">&amp;</operator><name pos:start="137:38" pos:end="137:50"><name pos:start="137:38" pos:end="137:42">img_y</name><index pos:start="137:43" pos:end="137:50">[<expr pos:start="137:44" pos:end="137:49"><literal type="number" pos:start="137:44" pos:end="137:44">4</literal><operator pos:start="137:45" pos:end="137:45">*</operator><name pos:start="137:46" pos:end="137:49">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="137:53" pos:end="137:60"><expr pos:start="137:53" pos:end="137:60"><name pos:start="137:53" pos:end="137:60">linesize</name></expr></argument>, <argument pos:start="137:63" pos:end="137:64"><expr pos:start="137:63" pos:end="137:64"><name pos:start="137:63" pos:end="137:64">bS</name></expr></argument>, <argument pos:start="137:67" pos:end="137:68"><expr pos:start="137:67" pos:end="137:68"><name pos:start="137:67" pos:end="137:68">qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="139:17" pos:end="149:17"><if pos:start="139:17" pos:end="149:17">if<condition pos:start="139:19" pos:end="139:35">( <expr pos:start="139:21" pos:end="139:33"><operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:25">edge</name><operator pos:start="139:26" pos:end="139:26">&amp;</operator><literal type="number" pos:start="139:27" pos:end="139:27">1</literal><operator pos:start="139:28" pos:end="139:28">)</operator> <operator pos:start="139:30" pos:end="139:31">==</operator> <literal type="number" pos:start="139:33" pos:end="139:33">0</literal></expr> )</condition> <block pos:start="139:37" pos:end="149:17">{<block_content pos:start="141:21" pos:end="147:86">

                    <decl_stmt pos:start="141:21" pos:end="143:109"><decl pos:start="141:21" pos:end="143:108"><type pos:start="141:21" pos:end="141:23"><name pos:start="141:21" pos:end="141:23">int</name></type> <name pos:start="141:25" pos:end="141:33">chroma_qp</name> <init pos:start="141:35" pos:end="143:108">= <expr pos:start="141:37" pos:end="143:108"><operator pos:start="141:37" pos:end="141:37">(</operator> <name pos:start="141:39" pos:end="141:50"><name pos:start="141:39" pos:end="141:39">h</name><operator pos:start="141:40" pos:end="141:41">-&gt;</operator><name pos:start="141:42" pos:end="141:50">chroma_qp</name></name> <operator pos:start="141:52" pos:end="141:52">+</operator>

                                      <call pos:start="143:39" pos:end="143:97"><name pos:start="143:39" pos:end="143:51">get_chroma_qp</name><argument_list pos:start="143:52" pos:end="143:97">( <argument pos:start="143:54" pos:end="143:54"><expr pos:start="143:54" pos:end="143:54"><name pos:start="143:54" pos:end="143:54">h</name></expr></argument>, <argument pos:start="143:57" pos:end="143:95"><expr pos:start="143:57" pos:end="143:95"><name pos:start="143:57" pos:end="143:95"><name pos:start="143:57" pos:end="143:57">s</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:74">current_picture</name><operator pos:start="143:75" pos:end="143:75">.</operator><name pos:start="143:76" pos:end="143:87">qscale_table</name><index pos:start="143:88" pos:end="143:95">[<expr pos:start="143:89" pos:end="143:94"><name pos:start="143:89" pos:end="143:94">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="143:99" pos:end="143:99">+</operator> <literal type="number" pos:start="143:101" pos:end="143:101">1</literal> <operator pos:start="143:103" pos:end="143:103">)</operator> <operator pos:start="143:105" pos:end="143:106">&gt;&gt;</operator> <literal type="number" pos:start="143:108" pos:end="143:108">1</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="145:21" pos:end="145:86"><expr pos:start="145:21" pos:end="145:85"><call pos:start="145:21" pos:end="145:85"><name pos:start="145:21" pos:end="145:36">filter_mb_edgecv</name><argument_list pos:start="145:37" pos:end="145:85">( <argument pos:start="145:39" pos:end="145:39"><expr pos:start="145:39" pos:end="145:39"><name pos:start="145:39" pos:end="145:39">h</name></expr></argument>, <argument pos:start="145:42" pos:end="145:56"><expr pos:start="145:42" pos:end="145:56"><operator pos:start="145:42" pos:end="145:42">&amp;</operator><name pos:start="145:43" pos:end="145:56"><name pos:start="145:43" pos:end="145:48">img_cb</name><index pos:start="145:49" pos:end="145:56">[<expr pos:start="145:50" pos:end="145:55"><literal type="number" pos:start="145:50" pos:end="145:50">2</literal><operator pos:start="145:51" pos:end="145:51">*</operator><name pos:start="145:52" pos:end="145:55">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="145:59" pos:end="145:68"><expr pos:start="145:59" pos:end="145:68"><name pos:start="145:59" pos:end="145:68">uvlinesize</name></expr></argument>, <argument pos:start="145:71" pos:end="145:72"><expr pos:start="145:71" pos:end="145:72"><name pos:start="145:71" pos:end="145:72">bS</name></expr></argument>, <argument pos:start="145:75" pos:end="145:83"><expr pos:start="145:75" pos:end="145:83"><name pos:start="145:75" pos:end="145:83">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="147:86"><expr pos:start="147:21" pos:end="147:85"><call pos:start="147:21" pos:end="147:85"><name pos:start="147:21" pos:end="147:36">filter_mb_edgecv</name><argument_list pos:start="147:37" pos:end="147:85">( <argument pos:start="147:39" pos:end="147:39"><expr pos:start="147:39" pos:end="147:39"><name pos:start="147:39" pos:end="147:39">h</name></expr></argument>, <argument pos:start="147:42" pos:end="147:56"><expr pos:start="147:42" pos:end="147:56"><operator pos:start="147:42" pos:end="147:42">&amp;</operator><name pos:start="147:43" pos:end="147:56"><name pos:start="147:43" pos:end="147:48">img_cr</name><index pos:start="147:49" pos:end="147:56">[<expr pos:start="147:50" pos:end="147:55"><literal type="number" pos:start="147:50" pos:end="147:50">2</literal><operator pos:start="147:51" pos:end="147:51">*</operator><name pos:start="147:52" pos:end="147:55">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="147:59" pos:end="147:68"><expr pos:start="147:59" pos:end="147:68"><name pos:start="147:59" pos:end="147:68">uvlinesize</name></expr></argument>, <argument pos:start="147:71" pos:end="147:72"><expr pos:start="147:71" pos:end="147:72"><name pos:start="147:71" pos:end="147:72">bS</name></expr></argument>, <argument pos:start="147:75" pos:end="147:83"><expr pos:start="147:75" pos:end="147:83"><name pos:start="147:75" pos:end="147:83">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="151:15" pos:end="167:13">else <block pos:start="151:20" pos:end="167:13">{<block_content pos:start="153:17" pos:end="165:17">

                <expr_stmt pos:start="153:17" pos:end="153:80"><expr pos:start="153:17" pos:end="153:79"><call pos:start="153:17" pos:end="153:79"><name pos:start="153:17" pos:end="153:31">filter_mb_edgeh</name><argument_list pos:start="153:32" pos:end="153:79">( <argument pos:start="153:34" pos:end="153:34"><expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">h</name></expr></argument>, <argument pos:start="153:37" pos:end="153:59"><expr pos:start="153:37" pos:end="153:59"><operator pos:start="153:37" pos:end="153:37">&amp;</operator><name pos:start="153:38" pos:end="153:59"><name pos:start="153:38" pos:end="153:42">img_y</name><index pos:start="153:43" pos:end="153:59">[<expr pos:start="153:44" pos:end="153:58"><literal type="number" pos:start="153:44" pos:end="153:44">4</literal><operator pos:start="153:45" pos:end="153:45">*</operator><name pos:start="153:46" pos:end="153:49">edge</name><operator pos:start="153:50" pos:end="153:50">*</operator><name pos:start="153:51" pos:end="153:58">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="153:62" pos:end="153:69"><expr pos:start="153:62" pos:end="153:69"><name pos:start="153:62" pos:end="153:69">linesize</name></expr></argument>, <argument pos:start="153:72" pos:end="153:73"><expr pos:start="153:72" pos:end="153:73"><name pos:start="153:72" pos:end="153:73">bS</name></expr></argument>, <argument pos:start="153:76" pos:end="153:77"><expr pos:start="153:76" pos:end="153:77"><name pos:start="153:76" pos:end="153:77">qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="165:17"><if pos:start="155:17" pos:end="165:17">if<condition pos:start="155:19" pos:end="155:35">( <expr pos:start="155:21" pos:end="155:33"><operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:25">edge</name><operator pos:start="155:26" pos:end="155:26">&amp;</operator><literal type="number" pos:start="155:27" pos:end="155:27">1</literal><operator pos:start="155:28" pos:end="155:28">)</operator> <operator pos:start="155:30" pos:end="155:31">==</operator> <literal type="number" pos:start="155:33" pos:end="155:33">0</literal></expr> )</condition> <block pos:start="155:37" pos:end="165:17">{<block_content pos:start="157:21" pos:end="163:97">

                    <decl_stmt pos:start="157:21" pos:end="159:109"><decl pos:start="157:21" pos:end="159:108"><type pos:start="157:21" pos:end="157:23"><name pos:start="157:21" pos:end="157:23">int</name></type> <name pos:start="157:25" pos:end="157:33">chroma_qp</name> <init pos:start="157:35" pos:end="159:108">= <expr pos:start="157:37" pos:end="159:108"><operator pos:start="157:37" pos:end="157:37">(</operator> <name pos:start="157:39" pos:end="157:50"><name pos:start="157:39" pos:end="157:39">h</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:50">chroma_qp</name></name> <operator pos:start="157:52" pos:end="157:52">+</operator>

                                      <call pos:start="159:39" pos:end="159:97"><name pos:start="159:39" pos:end="159:51">get_chroma_qp</name><argument_list pos:start="159:52" pos:end="159:97">( <argument pos:start="159:54" pos:end="159:54"><expr pos:start="159:54" pos:end="159:54"><name pos:start="159:54" pos:end="159:54">h</name></expr></argument>, <argument pos:start="159:57" pos:end="159:95"><expr pos:start="159:57" pos:end="159:95"><name pos:start="159:57" pos:end="159:95"><name pos:start="159:57" pos:end="159:57">s</name><operator pos:start="159:58" pos:end="159:59">-&gt;</operator><name pos:start="159:60" pos:end="159:74">current_picture</name><operator pos:start="159:75" pos:end="159:75">.</operator><name pos:start="159:76" pos:end="159:87">qscale_table</name><index pos:start="159:88" pos:end="159:95">[<expr pos:start="159:89" pos:end="159:94"><name pos:start="159:89" pos:end="159:94">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="159:99" pos:end="159:99">+</operator> <literal type="number" pos:start="159:101" pos:end="159:101">1</literal> <operator pos:start="159:103" pos:end="159:103">)</operator> <operator pos:start="159:105" pos:end="159:106">&gt;&gt;</operator> <literal type="number" pos:start="159:108" pos:end="159:108">1</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="161:21" pos:end="161:97"><expr pos:start="161:21" pos:end="161:96"><call pos:start="161:21" pos:end="161:96"><name pos:start="161:21" pos:end="161:36">filter_mb_edgech</name><argument_list pos:start="161:37" pos:end="161:96">( <argument pos:start="161:39" pos:end="161:39"><expr pos:start="161:39" pos:end="161:39"><name pos:start="161:39" pos:end="161:39">h</name></expr></argument>, <argument pos:start="161:42" pos:end="161:67"><expr pos:start="161:42" pos:end="161:67"><operator pos:start="161:42" pos:end="161:42">&amp;</operator><name pos:start="161:43" pos:end="161:67"><name pos:start="161:43" pos:end="161:48">img_cb</name><index pos:start="161:49" pos:end="161:67">[<expr pos:start="161:50" pos:end="161:66"><literal type="number" pos:start="161:50" pos:end="161:50">2</literal><operator pos:start="161:51" pos:end="161:51">*</operator><name pos:start="161:52" pos:end="161:55">edge</name><operator pos:start="161:56" pos:end="161:56">*</operator><name pos:start="161:57" pos:end="161:66">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="161:70" pos:end="161:79"><expr pos:start="161:70" pos:end="161:79"><name pos:start="161:70" pos:end="161:79">uvlinesize</name></expr></argument>, <argument pos:start="161:82" pos:end="161:83"><expr pos:start="161:82" pos:end="161:83"><name pos:start="161:82" pos:end="161:83">bS</name></expr></argument>, <argument pos:start="161:86" pos:end="161:94"><expr pos:start="161:86" pos:end="161:94"><name pos:start="161:86" pos:end="161:94">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:97"><expr pos:start="163:21" pos:end="163:96"><call pos:start="163:21" pos:end="163:96"><name pos:start="163:21" pos:end="163:36">filter_mb_edgech</name><argument_list pos:start="163:37" pos:end="163:96">( <argument pos:start="163:39" pos:end="163:39"><expr pos:start="163:39" pos:end="163:39"><name pos:start="163:39" pos:end="163:39">h</name></expr></argument>, <argument pos:start="163:42" pos:end="163:67"><expr pos:start="163:42" pos:end="163:67"><operator pos:start="163:42" pos:end="163:42">&amp;</operator><name pos:start="163:43" pos:end="163:67"><name pos:start="163:43" pos:end="163:48">img_cr</name><index pos:start="163:49" pos:end="163:67">[<expr pos:start="163:50" pos:end="163:66"><literal type="number" pos:start="163:50" pos:end="163:50">2</literal><operator pos:start="163:51" pos:end="163:51">*</operator><name pos:start="163:52" pos:end="163:55">edge</name><operator pos:start="163:56" pos:end="163:56">*</operator><name pos:start="163:57" pos:end="163:66">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="163:70" pos:end="163:79"><expr pos:start="163:70" pos:end="163:79"><name pos:start="163:70" pos:end="163:79">uvlinesize</name></expr></argument>, <argument pos:start="163:82" pos:end="163:83"><expr pos:start="163:82" pos:end="163:83"><name pos:start="163:82" pos:end="163:83">bS</name></expr></argument>, <argument pos:start="163:86" pos:end="163:94"><expr pos:start="163:86" pos:end="163:94"><name pos:start="163:86" pos:end="163:94">chroma_qp</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
