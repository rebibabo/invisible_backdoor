<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15153.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">bdrv_pdiscard</name><parameter_list pos:start="1:18" pos:end="1:66">(<parameter pos:start="1:19" pos:end="1:38"><decl pos:start="1:19" pos:end="1:38"><type pos:start="1:19" pos:end="1:38"><name pos:start="1:19" pos:end="1:34">BlockDriverState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">bs</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">int64_t</name></type> <name pos:start="1:49" pos:end="1:54">offset</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:65"><decl pos:start="1:57" pos:end="1:65"><type pos:start="1:57" pos:end="1:65"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:65">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:20">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">Coroutine</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="17:6"><decl pos:start="7:5" pos:end="17:5"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">DiscardCo</name></type> <name pos:start="7:15" pos:end="7:18">rwco</name> <init pos:start="7:20" pos:end="17:5">= <expr pos:start="7:22" pos:end="17:5"><block pos:start="7:22" pos:end="17:5">{

        <expr pos:start="9:9" pos:end="9:16"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:11">bs</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:16">bs</name></expr>,

        <expr pos:start="11:9" pos:end="11:24"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:15">offset</name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:24">offset</name></expr>,

        <expr pos:start="13:9" pos:end="13:22"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:14">count</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <name pos:start="13:18" pos:end="13:22">count</name></expr>,

        <expr pos:start="15:9" pos:end="15:23"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">ret</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:23">NOT_DONE</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:28">(<expr pos:start="21:9" pos:end="21:27"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:25">qemu_in_coroutine</name><argument_list pos:start="21:26" pos:end="21:27">()</argument_list></call></expr>)</condition> <block pos:start="21:30" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:38">

        <comment type="block" pos:start="23:9" pos:end="23:55">/* Fast-path if already in coroutine context */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:30">bdrv_pdiscard_co_entry</name><argument_list pos:start="25:31" pos:end="25:37">(<argument pos:start="25:32" pos:end="25:36"><expr pos:start="25:32" pos:end="25:36"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:36">rwco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else <block pos:start="27:12" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:50">

        <expr_stmt pos:start="29:9" pos:end="29:66"><expr pos:start="29:9" pos:end="29:65"><name pos:start="29:9" pos:end="29:10">co</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:65"><name pos:start="29:14" pos:end="29:34">qemu_coroutine_create</name><argument_list pos:start="29:35" pos:end="29:65">(<argument pos:start="29:36" pos:end="29:57"><expr pos:start="29:36" pos:end="29:57"><name pos:start="29:36" pos:end="29:57">bdrv_pdiscard_co_entry</name></expr></argument>, <argument pos:start="29:60" pos:end="29:64"><expr pos:start="29:60" pos:end="29:64"><operator pos:start="29:60" pos:end="29:60">&amp;</operator><name pos:start="29:61" pos:end="29:64">rwco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><call pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:28">qemu_coroutine_enter</name><argument_list pos:start="31:29" pos:end="31:32">(<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">co</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:23">BDRV_POLL_WHILE</name><argument_list pos:start="33:24" pos:end="33:49">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">bs</name></expr></argument>, <argument pos:start="33:29" pos:end="33:48"><expr pos:start="33:29" pos:end="33:48"><name pos:start="33:29" pos:end="33:36"><name pos:start="33:29" pos:end="33:32">rwco</name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:36">ret</name></name> <operator pos:start="33:38" pos:end="33:39">==</operator> <name pos:start="33:41" pos:end="33:48">NOT_DONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="39:5" pos:end="39:20">return <expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:15">rwco</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:19">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
