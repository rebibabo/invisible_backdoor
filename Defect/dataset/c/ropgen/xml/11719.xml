<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11719.c" pos:tabs="8"><function pos:start="1:1" pos:end="56:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">scsi_hot_add</name><parameter_list pos:start="1:24" pos:end="3:56">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:31">Monitor</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">mon</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:58">adapter</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:40"><decl pos:start="3:25" pos:end="3:40"><type pos:start="3:25" pos:end="3:40"><name pos:start="3:25" pos:end="3:33">DriveInfo</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:40">dinfo</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:55">printinfo</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="56:13">{<block_content pos:start="7:5" pos:end="56:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">SCSIBus</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:20">scsibus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">SCSIDevice</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">scsidev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:73"><expr pos:start="13:5" pos:end="13:72"><name pos:start="13:5" pos:end="13:11">scsibus</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="13:72"><name pos:start="13:15" pos:end="13:23">DO_UPCAST</name><argument_list pos:start="13:24" pos:end="13:72">(<argument pos:start="13:25" pos:end="13:31"><expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31">SCSIBus</name></expr></argument>, <argument pos:start="13:34" pos:end="13:37"><expr pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:37">qbus</name></expr></argument>, <argument pos:start="13:40" pos:end="13:71"><expr pos:start="13:40" pos:end="13:71"><call pos:start="13:40" pos:end="13:71"><name pos:start="13:40" pos:end="13:50">QLIST_FIRST</name><argument_list pos:start="13:51" pos:end="13:71">(<argument pos:start="13:52" pos:end="13:70"><expr pos:start="13:52" pos:end="13:70"><operator pos:start="13:52" pos:end="13:52">&amp;</operator><name pos:start="13:53" pos:end="13:70"><name pos:start="13:53" pos:end="13:59">adapter</name><operator pos:start="13:60" pos:end="13:61">-&gt;</operator><name pos:start="13:62" pos:end="13:70">child_bus</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="56:13"><if pos:start="15:5" pos:end="56:13">if <condition pos:start="15:8" pos:end="15:66">(<expr pos:start="15:9" pos:end="15:65"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:16">scsibus</name> <operator pos:start="15:18" pos:end="15:19">||</operator> <call pos:start="15:21" pos:end="15:60"><name pos:start="15:21" pos:end="15:26">strcmp</name><argument_list pos:start="15:27" pos:end="15:60">(<argument pos:start="15:28" pos:end="15:51"><expr pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:51"><name pos:start="15:28" pos:end="15:34">scsibus</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:40">qbus</name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:45">info</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:51">name</name></name></expr></argument>, <argument pos:start="15:54" pos:end="15:59"><expr pos:start="15:54" pos:end="15:59"><literal type="string" pos:start="15:54" pos:end="15:59">"SCSI"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:62" pos:end="15:63">!=</operator> <literal type="number" pos:start="15:65" pos:end="15:65">0</literal></expr>)</condition> <block pos:start="15:68" pos:end="56:13">{<block_content pos:start="17:9" pos:end="56:13">

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><call pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:20">error_report</name><argument_list pos:start="17:21" pos:end="17:52">(<argument pos:start="17:22" pos:end="17:51"><expr pos:start="17:22" pos:end="17:51"><literal type="string" pos:start="17:22" pos:end="17:51">"Device is not a SCSI adapter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="23:5" pos:end="37:7">/*

     * drive_init() tries to find a default for dinfo-&gt;unit.  Doesn't

     * work at all for hotplug though as we assign the device to a

     * specific bus instead of the first bus with spare scsi ids.

     *

     * Ditch the calculated value and reload from option string (if

     * specified).

     */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:63"><expr pos:start="39:5" pos:end="39:62"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:9">dinfo</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">unit</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:62"><name pos:start="39:19" pos:end="39:37">qemu_opt_get_number</name><argument_list pos:start="39:38" pos:end="39:62">(<argument pos:start="39:39" pos:end="39:49"><expr pos:start="39:39" pos:end="39:49"><name pos:start="39:39" pos:end="39:49"><name pos:start="39:39" pos:end="39:43">dinfo</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:49">opts</name></name></expr></argument>, <argument pos:start="39:52" pos:end="39:57"><expr pos:start="39:52" pos:end="39:57"><literal type="string" pos:start="39:52" pos:end="39:57">"unit"</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:61"><expr pos:start="39:60" pos:end="39:61"><operator pos:start="39:60" pos:end="39:60">-</operator><literal type="number" pos:start="39:61" pos:end="39:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:69"><expr pos:start="41:5" pos:end="41:68"><name pos:start="41:5" pos:end="41:11">scsidev</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:68"><name pos:start="41:15" pos:end="41:39">scsi_bus_legacy_add_drive</name><argument_list pos:start="41:40" pos:end="41:68">(<argument pos:start="41:41" pos:end="41:47"><expr pos:start="41:41" pos:end="41:47"><name pos:start="41:41" pos:end="41:47">scsibus</name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><name pos:start="41:50" pos:end="41:54">dinfo</name></expr></argument>, <argument pos:start="41:57" pos:end="41:67"><expr pos:start="41:57" pos:end="41:67"><name pos:start="41:57" pos:end="41:67"><name pos:start="41:57" pos:end="41:61">dinfo</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:67">unit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="46:5" pos:end="46:30"><expr pos:start="46:5" pos:end="46:29"><name pos:start="46:5" pos:end="46:15"><name pos:start="46:5" pos:end="46:9">dinfo</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:15">unit</name></name> <operator pos:start="46:17" pos:end="46:17">=</operator> <name pos:start="46:19" pos:end="46:29"><name pos:start="46:19" pos:end="46:25">scsidev</name><operator pos:start="46:26" pos:end="46:27">-&gt;</operator><name pos:start="46:28" pos:end="46:29">id</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="50:5" pos:end="54:52"><if pos:start="50:5" pos:end="54:52">if <condition pos:start="50:8" pos:end="50:18">(<expr pos:start="50:9" pos:end="50:17"><name pos:start="50:9" pos:end="50:17">printinfo</name></expr>)</condition><block type="pseudo" pos:start="52:9" pos:end="54:52"><block_content pos:start="52:9" pos:end="54:52">

        <expr_stmt pos:start="52:9" pos:end="54:52"><expr pos:start="52:9" pos:end="54:51"><call pos:start="52:9" pos:end="54:51"><name pos:start="52:9" pos:end="52:22">monitor_printf</name><argument_list pos:start="52:23" pos:end="54:51">(<argument pos:start="52:24" pos:end="52:26"><expr pos:start="52:24" pos:end="52:26"><name pos:start="52:24" pos:end="52:26">mon</name></expr></argument>, <argument pos:start="52:29" pos:end="52:50"><expr pos:start="52:29" pos:end="52:50"><literal type="string" pos:start="52:29" pos:end="52:50">"OK bus %d, unit %d\n"</literal></expr></argument>,

                       <argument pos:start="54:24" pos:end="54:37"><expr pos:start="54:24" pos:end="54:37"><name pos:start="54:24" pos:end="54:37"><name pos:start="54:24" pos:end="54:30">scsibus</name><operator pos:start="54:31" pos:end="54:32">-&gt;</operator><name pos:start="54:33" pos:end="54:37">busnr</name></name></expr></argument>, <argument pos:start="54:40" pos:end="54:50"><expr pos:start="54:40" pos:end="54:50"><name pos:start="54:40" pos:end="54:50"><name pos:start="54:40" pos:end="54:46">scsidev</name><operator pos:start="54:47" pos:end="54:48">-&gt;</operator><name pos:start="54:49" pos:end="54:50">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="56:5" pos:end="56:13">return <expr pos:start="56:12" pos:end="56:12"><literal type="number" pos:start="56:12" pos:end="56:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></function>
</unit>
