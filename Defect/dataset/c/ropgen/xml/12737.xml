<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12737.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:26">SocketAddressLegacy</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:44">sd_server_config</name><parameter_list pos:start="1:45" pos:end="1:74">(<parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:50">QDict</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">options</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:66">Error</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:17">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">QDict</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:17">server</name> <init pos:start="5:19" pos:end="5:24">= <expr pos:start="5:21" pos:end="5:24"><name pos:start="5:21" pos:end="5:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:28">crumpled_server</name> <init pos:start="7:30" pos:end="7:35">= <expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">iv</name> <init pos:start="9:17" pos:end="9:22">= <expr pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">SocketAddress</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:29">saddr_flat</name> <init pos:start="11:31" pos:end="11:36">= <expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:23">SocketAddressLegacy</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:30">saddr</name> <init pos:start="13:32" pos:end="13:37">= <expr pos:start="13:34" pos:end="13:37"><name pos:start="13:34" pos:end="13:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:26">qdict_extract_subqdict</name><argument_list pos:start="19:27" pos:end="19:55">(<argument pos:start="19:28" pos:end="19:34"><expr pos:start="19:28" pos:end="19:34"><name pos:start="19:28" pos:end="19:34">options</name></expr></argument>, <argument pos:start="19:37" pos:end="19:43"><expr pos:start="19:37" pos:end="19:43"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:43">server</name></expr></argument>, <argument pos:start="19:46" pos:end="19:54"><expr pos:start="19:46" pos:end="19:54"><literal type="string" pos:start="19:46" pos:end="19:54">"server."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:19">crumpled_server</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:49"><name pos:start="23:23" pos:end="23:35">qdict_crumple</name><argument_list pos:start="23:36" pos:end="23:49">(<argument pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:42">server</name></expr></argument>, <argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:48">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:24">crumpled_server</name></expr>)</condition> <block pos:start="25:27" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="47:7">/*

     * FIXME .numeric, .to, .ipv4 or .ipv6 don't work with -drive

     * server.type=inet.  .to doesn't matter, it's ignored anyway.

     * That's because when @options come from -blockdev or

     * blockdev_add, members are typed according to the QAPI schema,

     * but when they come from -drive, they're all QString.  The

     * visitor expects the former.

     */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:52"><expr pos:start="49:5" pos:end="49:51"><name pos:start="49:5" pos:end="49:6">iv</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <call pos:start="49:10" pos:end="49:51"><name pos:start="49:10" pos:end="49:34">qobject_input_visitor_new</name><argument_list pos:start="49:35" pos:end="49:51">(<argument pos:start="49:36" pos:end="49:50"><expr pos:start="49:36" pos:end="49:50"><name pos:start="49:36" pos:end="49:50">crumpled_server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:64"><expr pos:start="51:5" pos:end="51:63"><call pos:start="51:5" pos:end="51:63"><name pos:start="51:5" pos:end="51:28">visit_type_SocketAddress</name><argument_list pos:start="51:29" pos:end="51:63">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">iv</name></expr></argument>, <argument pos:start="51:34" pos:end="51:37"><expr pos:start="51:34" pos:end="51:37"><name pos:start="51:34" pos:end="51:37">NULL</name></expr></argument>, <argument pos:start="51:40" pos:end="51:50"><expr pos:start="51:40" pos:end="51:50"><operator pos:start="51:40" pos:end="51:40">&amp;</operator><name pos:start="51:41" pos:end="51:50">saddr_flat</name></expr></argument>, <argument pos:start="51:53" pos:end="51:62"><expr pos:start="51:53" pos:end="51:62"><operator pos:start="51:53" pos:end="51:53">&amp;</operator><name pos:start="51:54" pos:end="51:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:18">(<expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:17">local_err</name></expr>)</condition> <block pos:start="53:20" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><call pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:23">error_propagate</name><argument_list pos:start="55:24" pos:end="55:40">(<argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">errp</name></expr></argument>, <argument pos:start="55:31" pos:end="55:39"><expr pos:start="55:31" pos:end="55:39"><name pos:start="55:31" pos:end="55:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:18">goto <name pos:start="57:14" pos:end="57:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:9">saddr</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:46"><name pos:start="63:13" pos:end="63:34">socket_address_crumple</name><argument_list pos:start="63:35" pos:end="63:46">(<argument pos:start="63:36" pos:end="63:45"><expr pos:start="63:36" pos:end="63:45"><name pos:start="63:36" pos:end="63:45">saddr_flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="67:1" pos:end="67:5"><name pos:start="67:1" pos:end="67:4">done</name>:</label>

    <expr_stmt pos:start="69:5" pos:end="69:40"><expr pos:start="69:5" pos:end="69:39"><call pos:start="69:5" pos:end="69:39"><name pos:start="69:5" pos:end="69:27">qapi_free_SocketAddress</name><argument_list pos:start="69:28" pos:end="69:39">(<argument pos:start="69:29" pos:end="69:38"><expr pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:38">saddr_flat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:19"><expr pos:start="71:5" pos:end="71:18"><call pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:14">visit_free</name><argument_list pos:start="71:15" pos:end="71:18">(<argument pos:start="71:16" pos:end="71:17"><expr pos:start="71:16" pos:end="71:17"><name pos:start="71:16" pos:end="71:17">iv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><call pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:18">qobject_decref</name><argument_list pos:start="73:19" pos:end="73:35">(<argument pos:start="73:20" pos:end="73:34"><expr pos:start="73:20" pos:end="73:34"><name pos:start="73:20" pos:end="73:34">crumpled_server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:20"><expr pos:start="75:5" pos:end="75:19"><call pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:11">QDECREF</name><argument_list pos:start="75:12" pos:end="75:19">(<argument pos:start="75:13" pos:end="75:18"><expr pos:start="75:13" pos:end="75:18"><name pos:start="75:13" pos:end="75:18">server</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:17">return <expr pos:start="77:12" pos:end="77:16"><name pos:start="77:12" pos:end="77:16">saddr</name></expr>;</return>

</block_content>}</block></function>
</unit>
