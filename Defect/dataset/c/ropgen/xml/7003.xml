<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7003.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">virtio_gpu_resource_create_2d</name><parameter_list pos:start="1:42" pos:end="3:78">(<parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:51">VirtIOGPU</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">g</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:77"><decl pos:start="3:43" pos:end="3:77"><type pos:start="3:43" pos:end="3:77"><name pos:start="3:43" pos:end="3:72"><name pos:start="3:43" pos:end="3:48">struct</name> <name pos:start="3:50" pos:end="3:72">virtio_gpu_ctrl_command</name></name> <modifier pos:start="3:74" pos:end="3:74">*</modifier></type><name pos:start="3:75" pos:end="3:77">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="115:1">{<block_content pos:start="7:5" pos:end="113:47">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24">pixman_format_code_t</name></type> <name pos:start="7:26" pos:end="7:32">pformat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:39"><name pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:37">virtio_gpu_simple_resource</name></name> <modifier pos:start="9:39" pos:end="9:39">*</modifier></type><name pos:start="9:40" pos:end="9:42">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:40">virtio_gpu_resource_create_2d</name></name></type> <name pos:start="11:42" pos:end="11:44">c2d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:23">VIRTIO_GPU_FILL_CMD</name><argument_list pos:start="15:24" pos:end="15:28">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">c2d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:62"><expr pos:start="17:5" pos:end="19:61"><call pos:start="17:5" pos:end="19:61"><name pos:start="17:5" pos:end="17:38">trace_virtio_gpu_cmd_res_create_2d</name><argument_list pos:start="17:39" pos:end="19:61">(<argument pos:start="17:40" pos:end="17:54"><expr pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:42">c2d</name><operator pos:start="17:43" pos:end="17:43">.</operator><name pos:start="17:44" pos:end="17:54">resource_id</name></name></expr></argument>, <argument pos:start="17:57" pos:end="17:66"><expr pos:start="17:57" pos:end="17:66"><name pos:start="17:57" pos:end="17:66"><name pos:start="17:57" pos:end="17:59">c2d</name><operator pos:start="17:60" pos:end="17:60">.</operator><name pos:start="17:61" pos:end="17:66">format</name></name></expr></argument>,

                                       <argument pos:start="19:40" pos:end="19:48"><expr pos:start="19:40" pos:end="19:48"><name pos:start="19:40" pos:end="19:48"><name pos:start="19:40" pos:end="19:42">c2d</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:48">width</name></name></expr></argument>, <argument pos:start="19:51" pos:end="19:60"><expr pos:start="19:51" pos:end="19:60"><name pos:start="19:51" pos:end="19:60"><name pos:start="19:51" pos:end="19:53">c2d</name><operator pos:start="19:54" pos:end="19:54">.</operator><name pos:start="19:55" pos:end="19:60">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:29">(<expr pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">c2d</name><operator pos:start="23:12" pos:end="23:12">.</operator><name pos:start="23:13" pos:end="23:23">resource_id</name></name> <operator pos:start="23:25" pos:end="23:26">==</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>)</condition> <block pos:start="23:31" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:15">

        <expr_stmt pos:start="25:9" pos:end="27:32"><expr pos:start="25:9" pos:end="27:31"><call pos:start="25:9" pos:end="27:31"><name pos:start="25:9" pos:end="25:21">qemu_log_mask</name><argument_list pos:start="25:22" pos:end="27:31">(<argument pos:start="25:23" pos:end="25:37"><expr pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="25:40" pos:end="25:75"><expr pos:start="25:40" pos:end="25:75"><literal type="string" pos:start="25:40" pos:end="25:75">"%s: resource id 0 is not allowed\n"</literal></expr></argument>,

                      <argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:61"><expr pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:11">cmd</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:18">error</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:60">VIRTIO_GPU_RESP_ERR_INVALID_RESOURCE_ID</name></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:55"><expr pos:start="37:5" pos:end="37:54"><name pos:start="37:5" pos:end="37:7">res</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:54"><name pos:start="37:11" pos:end="37:34">virtio_gpu_find_resource</name><argument_list pos:start="37:35" pos:end="37:54">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">g</name></expr></argument>, <argument pos:start="37:39" pos:end="37:53"><expr pos:start="37:39" pos:end="37:53"><name pos:start="37:39" pos:end="37:53"><name pos:start="37:39" pos:end="37:41">c2d</name><operator pos:start="37:42" pos:end="37:42">.</operator><name pos:start="37:43" pos:end="37:53">resource_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">res</name></expr>)</condition> <block pos:start="39:14" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:15">

        <expr_stmt pos:start="41:9" pos:end="43:49"><expr pos:start="41:9" pos:end="43:48"><call pos:start="41:9" pos:end="43:48"><name pos:start="41:9" pos:end="41:21">qemu_log_mask</name><argument_list pos:start="41:22" pos:end="43:48">(<argument pos:start="41:23" pos:end="41:37"><expr pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="41:40" pos:end="41:73"><expr pos:start="41:40" pos:end="41:73"><literal type="string" pos:start="41:40" pos:end="41:73">"%s: resource already exists %d\n"</literal></expr></argument>,

                      <argument pos:start="43:23" pos:end="43:30"><expr pos:start="43:23" pos:end="43:30"><name pos:start="43:23" pos:end="43:30">__func__</name></expr></argument>, <argument pos:start="43:33" pos:end="43:47"><expr pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:35">c2d</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:47">resource_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:61"><expr pos:start="45:9" pos:end="45:60"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">cmd</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:18">error</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:60">VIRTIO_GPU_RESP_ERR_INVALID_RESOURCE_ID</name></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:55"><expr pos:start="53:5" pos:end="53:54"><name pos:start="53:5" pos:end="53:7">res</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:54"><name pos:start="53:11" pos:end="53:16">g_new0</name><argument_list pos:start="53:17" pos:end="53:54">(<argument pos:start="53:18" pos:end="53:50"><expr pos:start="53:18" pos:end="53:50">struct <name pos:start="53:25" pos:end="53:50">virtio_gpu_simple_resource</name></expr></argument>, <argument pos:start="53:53" pos:end="53:53"><expr pos:start="53:53" pos:end="53:53"><literal type="number" pos:start="53:53" pos:end="53:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:7">res</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:14">width</name></name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:26"><name pos:start="57:18" pos:end="57:20">c2d</name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:26">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:7">res</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:15">height</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:28"><name pos:start="59:19" pos:end="59:21">c2d</name><operator pos:start="59:22" pos:end="59:22">.</operator><name pos:start="59:23" pos:end="59:28">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:29"><expr pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:7">res</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:15">format</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:28"><name pos:start="61:19" pos:end="61:21">c2d</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:28">format</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:7">res</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:20">resource_id</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:26">c2d</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:38">resource_id</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:44"><expr pos:start="67:5" pos:end="67:43"><name pos:start="67:5" pos:end="67:11">pformat</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:43"><name pos:start="67:15" pos:end="67:31">get_pixman_format</name><argument_list pos:start="67:32" pos:end="67:43">(<argument pos:start="67:33" pos:end="67:42"><expr pos:start="67:33" pos:end="67:42"><name pos:start="67:33" pos:end="67:42"><name pos:start="67:33" pos:end="67:35">c2d</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:42">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:17">(<expr pos:start="69:9" pos:end="69:16"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:16">pformat</name></expr>)</condition> <block pos:start="69:19" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:15">

        <expr_stmt pos:start="71:9" pos:end="75:44"><expr pos:start="71:9" pos:end="75:43"><call pos:start="71:9" pos:end="75:43"><name pos:start="71:9" pos:end="71:21">qemu_log_mask</name><argument_list pos:start="71:22" pos:end="75:43">(<argument pos:start="71:23" pos:end="71:37"><expr pos:start="71:23" pos:end="71:37"><name pos:start="71:23" pos:end="71:37">LOG_GUEST_ERROR</name></expr></argument>,

                      <argument pos:start="73:23" pos:end="73:66"><expr pos:start="73:23" pos:end="73:66"><literal type="string" pos:start="73:23" pos:end="73:66">"%s: host couldn't handle guest format %d\n"</literal></expr></argument>,

                      <argument pos:start="75:23" pos:end="75:30"><expr pos:start="75:23" pos:end="75:30"><name pos:start="75:23" pos:end="75:30">__func__</name></expr></argument>, <argument pos:start="75:33" pos:end="75:42"><expr pos:start="75:33" pos:end="75:42"><name pos:start="75:33" pos:end="75:42"><name pos:start="75:33" pos:end="75:35">c2d</name><operator pos:start="75:36" pos:end="75:36">.</operator><name pos:start="75:37" pos:end="75:42">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:20"><expr pos:start="77:9" pos:end="77:19"><call pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:14">g_free</name><argument_list pos:start="77:15" pos:end="77:19">(<argument pos:start="77:16" pos:end="77:18"><expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:59"><expr pos:start="79:9" pos:end="79:58"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:11">cmd</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:18">error</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:58">VIRTIO_GPU_RESP_ERR_INVALID_PARAMETER</name></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="91:51"><expr pos:start="85:5" pos:end="91:50"><name pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:7">res</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:14">image</name></name> <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="91:50"><name pos:start="85:18" pos:end="85:41">pixman_image_create_bits</name><argument_list pos:start="85:42" pos:end="91:50">(<argument pos:start="85:43" pos:end="85:49"><expr pos:start="85:43" pos:end="85:49"><name pos:start="85:43" pos:end="85:49">pformat</name></expr></argument>,

                                          <argument pos:start="87:43" pos:end="87:51"><expr pos:start="87:43" pos:end="87:51"><name pos:start="87:43" pos:end="87:51"><name pos:start="87:43" pos:end="87:45">c2d</name><operator pos:start="87:46" pos:end="87:46">.</operator><name pos:start="87:47" pos:end="87:51">width</name></name></expr></argument>,

                                          <argument pos:start="89:43" pos:end="89:52"><expr pos:start="89:43" pos:end="89:52"><name pos:start="89:43" pos:end="89:52"><name pos:start="89:43" pos:end="89:45">c2d</name><operator pos:start="89:46" pos:end="89:46">.</operator><name pos:start="89:47" pos:end="89:52">height</name></name></expr></argument>,

                                          <argument pos:start="91:43" pos:end="91:46"><expr pos:start="91:43" pos:end="91:46"><name pos:start="91:43" pos:end="91:46">NULL</name></expr></argument>, <argument pos:start="91:49" pos:end="91:49"><expr pos:start="91:49" pos:end="91:49"><literal type="number" pos:start="91:49" pos:end="91:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="109:5"><if pos:start="95:5" pos:end="109:5">if <condition pos:start="95:8" pos:end="95:20">(<expr pos:start="95:9" pos:end="95:19"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:19"><name pos:start="95:10" pos:end="95:12">res</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:19">image</name></name></expr>)</condition> <block pos:start="95:22" pos:end="109:5">{<block_content pos:start="97:9" pos:end="107:15">

        <expr_stmt pos:start="97:9" pos:end="101:72"><expr pos:start="97:9" pos:end="101:71"><call pos:start="97:9" pos:end="101:71"><name pos:start="97:9" pos:end="97:21">qemu_log_mask</name><argument_list pos:start="97:22" pos:end="101:71">(<argument pos:start="97:23" pos:end="97:37"><expr pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:37">LOG_GUEST_ERROR</name></expr></argument>,

                      <argument pos:start="99:23" pos:end="99:63"><expr pos:start="99:23" pos:end="99:63"><literal type="string" pos:start="99:23" pos:end="99:63">"%s: resource creation failed %d %d %d\n"</literal></expr></argument>,

                      <argument pos:start="101:23" pos:end="101:30"><expr pos:start="101:23" pos:end="101:30"><name pos:start="101:23" pos:end="101:30">__func__</name></expr></argument>, <argument pos:start="101:33" pos:end="101:47"><expr pos:start="101:33" pos:end="101:47"><name pos:start="101:33" pos:end="101:47"><name pos:start="101:33" pos:end="101:35">c2d</name><operator pos:start="101:36" pos:end="101:36">.</operator><name pos:start="101:37" pos:end="101:47">resource_id</name></name></expr></argument>, <argument pos:start="101:50" pos:end="101:58"><expr pos:start="101:50" pos:end="101:58"><name pos:start="101:50" pos:end="101:58"><name pos:start="101:50" pos:end="101:52">c2d</name><operator pos:start="101:53" pos:end="101:53">.</operator><name pos:start="101:54" pos:end="101:58">width</name></name></expr></argument>, <argument pos:start="101:61" pos:end="101:70"><expr pos:start="101:61" pos:end="101:70"><name pos:start="101:61" pos:end="101:70"><name pos:start="101:61" pos:end="101:63">c2d</name><operator pos:start="101:64" pos:end="101:64">.</operator><name pos:start="101:65" pos:end="101:70">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><call pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:14">g_free</name><argument_list pos:start="103:15" pos:end="103:19">(<argument pos:start="103:16" pos:end="103:18"><expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:55"><expr pos:start="105:9" pos:end="105:54"><name pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:11">cmd</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:18">error</name></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:54">VIRTIO_GPU_RESP_ERR_OUT_OF_MEMORY</name></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:47"><expr pos:start="113:5" pos:end="113:46"><call pos:start="113:5" pos:end="113:46"><name pos:start="113:5" pos:end="113:22">QTAILQ_INSERT_HEAD</name><argument_list pos:start="113:23" pos:end="113:46">(<argument pos:start="113:24" pos:end="113:34"><expr pos:start="113:24" pos:end="113:34"><operator pos:start="113:24" pos:end="113:24">&amp;</operator><name pos:start="113:25" pos:end="113:34"><name pos:start="113:25" pos:end="113:25">g</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:34">reslist</name></name></expr></argument>, <argument pos:start="113:37" pos:end="113:39"><expr pos:start="113:37" pos:end="113:39"><name pos:start="113:37" pos:end="113:39">res</name></expr></argument>, <argument pos:start="113:42" pos:end="113:45"><expr pos:start="113:42" pos:end="113:45"><name pos:start="113:42" pos:end="113:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
