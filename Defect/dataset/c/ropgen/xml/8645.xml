<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8645.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:37">omap_tipb_bridge_read</name><parameter_list pos:start="1:38" pos:end="3:52">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:75"><decl pos:start="1:53" pos:end="1:75"><type pos:start="1:53" pos:end="1:75"><name pos:start="1:53" pos:end="1:70">target_phys_addr_t</name></type> <name pos:start="1:72" pos:end="1:75">addr</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:51"><decl pos:start="3:39" pos:end="3:51"><type pos:start="3:39" pos:end="3:51"><name pos:start="3:39" pos:end="3:46">unsigned</name></type> <name pos:start="3:48" pos:end="3:51">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:13">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">omap_tipb_bridge_s</name></name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:32">s</name> <init pos:start="7:34" pos:end="7:71">= <expr pos:start="7:36" pos:end="7:71"><operator pos:start="7:36" pos:end="7:36">(</operator>struct <name pos:start="7:44" pos:end="7:61">omap_tipb_bridge_s</name> <operator pos:start="7:63" pos:end="7:63">*</operator><operator pos:start="7:64" pos:end="7:64">)</operator> <name pos:start="7:66" pos:end="7:71">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:14">&lt;</operator> <literal type="number" pos:start="11:16" pos:end="11:16">2</literal></expr>)</condition> <block pos:start="11:19" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:50">

        <return pos:start="13:9" pos:end="13:50">return <expr pos:start="13:16" pos:end="13:49"><call pos:start="13:16" pos:end="13:49"><name pos:start="13:16" pos:end="13:35">omap_badwidth_read16</name><argument_list pos:start="13:36" pos:end="13:49">(<argument pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><name pos:start="13:37" pos:end="13:42">opaque</name></expr></argument>, <argument pos:start="13:45" pos:end="13:48"><expr pos:start="13:45" pos:end="13:48"><name pos:start="13:45" pos:end="13:48">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="19:5" pos:end="49:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="49:5">{<block_content pos:start="21:5" pos:end="47:22">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="21:17" pos:end="21:31">/* TIPB_CNTL */</comment>

        <return pos:start="23:9" pos:end="23:26">return <expr pos:start="23:16" pos:end="23:25"><name pos:start="23:16" pos:end="23:25"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:25">control</name></name></expr>;</return>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="25:17" pos:end="25:36">/* TIPB_BUS_ALLOC */</comment>

        <return pos:start="27:9" pos:end="27:24">return <expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">alloc</name></name></expr>;</return>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="29:17" pos:end="29:35">/* MPU_TIPB_CNTL */</comment>

        <return pos:start="31:9" pos:end="31:25">return <expr pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:24"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:24">buffer</name></name></expr>;</return>

    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x0c</literal></expr>:</case>	<comment type="block" pos:start="33:17" pos:end="33:40">/* ENHANCED_TIPB_CNTL */</comment>

        <return pos:start="35:9" pos:end="35:30">return <expr pos:start="35:16" pos:end="35:29"><name pos:start="35:16" pos:end="35:29"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:29">enh_control</name></name></expr>;</return>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="37:17" pos:end="37:33">/* ADDRESS_DBG */</comment>

    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="39:17" pos:end="39:36">/* DATA_DEBUG_LOW */</comment>

    <case pos:start="41:5" pos:end="41:14">case <expr pos:start="41:10" pos:end="41:13"><literal type="number" pos:start="41:10" pos:end="41:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="41:17" pos:end="41:37">/* DATA_DEBUG_HIGH */</comment>

        <return pos:start="43:9" pos:end="43:22">return <expr pos:start="43:16" pos:end="43:21"><literal type="number" pos:start="43:16" pos:end="43:21">0xffff</literal></expr>;</return>

    <case pos:start="45:5" pos:end="45:14">case <expr pos:start="45:10" pos:end="45:13"><literal type="number" pos:start="45:10" pos:end="45:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="45:17" pos:end="45:36">/* DEBUG_CNTR_SIG */</comment>

        <return pos:start="47:9" pos:end="47:22">return <expr pos:start="47:16" pos:end="47:21"><literal type="number" pos:start="47:16" pos:end="47:21">0x00f8</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><call pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:16">OMAP_BAD_REG</name><argument_list pos:start="53:17" pos:end="53:22">(<argument pos:start="53:18" pos:end="53:21"><expr pos:start="53:18" pos:end="53:21"><name pos:start="53:18" pos:end="53:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
