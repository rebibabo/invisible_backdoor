<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3692.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:37"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">pc_dimm_plug</name><parameter_list pos:start="1:25" pos:end="2:56">(<parameter pos:start="1:26" pos:end="1:52"><decl pos:start="1:26" pos:end="1:52"><type pos:start="1:26" pos:end="1:52"><name pos:start="1:26" pos:end="1:39">HotplugHandler</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:52">hotplug_dev</name></decl></parameter>,
                         <parameter pos:start="2:26" pos:end="2:41"><decl pos:start="2:26" pos:end="2:41"><type pos:start="2:26" pos:end="2:41"><name pos:start="2:26" pos:end="2:36">DeviceState</name> <modifier pos:start="2:38" pos:end="2:38">*</modifier></type><name pos:start="2:39" pos:end="2:41">dev</name></decl></parameter>, <parameter pos:start="2:44" pos:end="2:55"><decl pos:start="2:44" pos:end="2:55"><type pos:start="2:44" pos:end="2:55"><name pos:start="2:44" pos:end="2:48">Error</name> <modifier pos:start="2:50" pos:end="2:50">*</modifier><modifier pos:start="2:51" pos:end="2:51">*</modifier></type><name pos:start="2:52" pos:end="2:55">errp</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="40:37">{<block_content pos:start="4:5" pos:end="40:37">
    <decl_stmt pos:start="4:5" pos:end="4:13"><decl pos:start="4:5" pos:end="4:12"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:12">slot</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">HotplugHandlerClass</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:28">hhc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:27"><type pos:start="6:5" pos:end="6:11"><name pos:start="6:5" pos:end="6:9">Error</name> <modifier pos:start="6:11" pos:end="6:11">*</modifier></type><name pos:start="6:12" pos:end="6:20">local_err</name> <init pos:start="6:22" pos:end="6:27">= <expr pos:start="6:24" pos:end="6:27"><name pos:start="6:24" pos:end="6:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCMachineState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">pcms</name> <init pos:start="7:26" pos:end="7:50">= <expr pos:start="7:28" pos:end="7:50"><call pos:start="7:28" pos:end="7:50"><name pos:start="7:28" pos:end="7:37">PC_MACHINE</name><argument_list pos:start="7:38" pos:end="7:50">(<argument pos:start="7:39" pos:end="7:49"><expr pos:start="7:39" pos:end="7:49"><name pos:start="7:39" pos:end="7:49">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:49"><decl pos:start="8:5" pos:end="8:48"><type pos:start="8:5" pos:end="8:18"><name pos:start="8:5" pos:end="8:16">MachineState</name> <modifier pos:start="8:18" pos:end="8:18">*</modifier></type><name pos:start="8:19" pos:end="8:25">machine</name> <init pos:start="8:27" pos:end="8:48">= <expr pos:start="8:29" pos:end="8:48"><call pos:start="8:29" pos:end="8:48"><name pos:start="8:29" pos:end="8:35">MACHINE</name><argument_list pos:start="8:36" pos:end="8:48">(<argument pos:start="8:37" pos:end="8:47"><expr pos:start="8:37" pos:end="8:47"><name pos:start="8:37" pos:end="8:47">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">PCDIMMDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">dimm</name> <init pos:start="9:24" pos:end="9:37">= <expr pos:start="9:26" pos:end="9:37"><call pos:start="9:26" pos:end="9:37"><name pos:start="9:26" pos:end="9:32">PC_DIMM</name><argument_list pos:start="9:33" pos:end="9:37">(<argument pos:start="9:34" pos:end="9:36"><expr pos:start="9:34" pos:end="9:36"><name pos:start="9:34" pos:end="9:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:53"><decl pos:start="10:5" pos:end="10:52"><type pos:start="10:5" pos:end="10:23"><name pos:start="10:5" pos:end="10:21">PCDIMMDeviceClass</name> <modifier pos:start="10:23" pos:end="10:23">*</modifier></type><name pos:start="10:24" pos:end="10:26">ddc</name> <init pos:start="10:28" pos:end="10:52">= <expr pos:start="10:30" pos:end="10:52"><call pos:start="10:30" pos:end="10:52"><name pos:start="10:30" pos:end="10:46">PC_DIMM_GET_CLASS</name><argument_list pos:start="10:47" pos:end="10:52">(<argument pos:start="10:48" pos:end="10:51"><expr pos:start="10:48" pos:end="10:51"><name pos:start="10:48" pos:end="10:51">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">MemoryRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">mr</name> <init pos:start="11:22" pos:end="11:51">= <expr pos:start="11:24" pos:end="11:51"><call pos:start="11:24" pos:end="11:51"><name pos:start="11:24" pos:end="11:45"><name pos:start="11:24" pos:end="11:26">ddc</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:45">get_memory_region</name></name><argument_list pos:start="11:46" pos:end="11:51">(<argument pos:start="11:47" pos:end="11:50"><expr pos:start="11:47" pos:end="11:50"><name pos:start="11:47" pos:end="11:50">dimm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="13:56"><decl pos:start="12:5" pos:end="13:55"><type pos:start="12:5" pos:end="12:12"><name pos:start="12:5" pos:end="12:12">uint64_t</name></type> <name pos:start="12:14" pos:end="12:17">addr</name> <init pos:start="12:19" pos:end="13:55">= <expr pos:start="12:21" pos:end="13:55"><call pos:start="12:21" pos:end="13:55"><name pos:start="12:21" pos:end="12:43">object_property_get_int</name><argument_list pos:start="12:44" pos:end="13:55">(<argument pos:start="12:45" pos:end="12:56"><expr pos:start="12:45" pos:end="12:56"><call pos:start="12:45" pos:end="12:56"><name pos:start="12:45" pos:end="12:50">OBJECT</name><argument_list pos:start="12:51" pos:end="12:56">(<argument pos:start="12:52" pos:end="12:55"><expr pos:start="12:52" pos:end="12:55"><name pos:start="12:52" pos:end="12:55">dimm</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="12:59" pos:end="12:75"><expr pos:start="12:59" pos:end="12:75"><name pos:start="12:59" pos:end="12:75">PC_DIMM_ADDR_PROP</name></expr></argument>,
                                            <argument pos:start="13:45" pos:end="13:54"><expr pos:start="13:45" pos:end="13:54"><operator pos:start="13:45" pos:end="13:45">&amp;</operator><name pos:start="13:46" pos:end="13:54">local_err</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="14:5" pos:end="40:37"><if pos:start="14:5" pos:end="40:37">if <condition pos:start="14:8" pos:end="14:18">(<expr pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:17">local_err</name></expr>)</condition> <block pos:start="14:20" pos:end="40:37">{<block_content pos:start="15:5" pos:end="40:37">
    <expr_stmt pos:start="15:5" pos:end="18:69"><expr pos:start="15:5" pos:end="18:68"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="18:68"><name pos:start="15:12" pos:end="15:32">pc_dimm_get_free_addr</name><argument_list pos:start="15:33" pos:end="18:68">(<argument pos:start="15:34" pos:end="15:58"><expr pos:start="15:34" pos:end="15:58"><name pos:start="15:34" pos:end="15:58"><name pos:start="15:34" pos:end="15:37">pcms</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:58">hotplug_memory_base</name></name></expr></argument>,
                                 <argument pos:start="16:34" pos:end="16:74"><expr pos:start="16:34" pos:end="16:74"><call pos:start="16:34" pos:end="16:74"><name pos:start="16:34" pos:end="16:51">memory_region_size</name><argument_list pos:start="16:52" pos:end="16:74">(<argument pos:start="16:53" pos:end="16:73"><expr pos:start="16:53" pos:end="16:73"><operator pos:start="16:53" pos:end="16:53">&amp;</operator><name pos:start="16:54" pos:end="16:73"><name pos:start="16:54" pos:end="16:57">pcms</name><operator pos:start="16:58" pos:end="16:59">-&gt;</operator><name pos:start="16:60" pos:end="16:73">hotplug_memory</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                 <argument pos:start="17:34" pos:end="17:53"><expr pos:start="17:34" pos:end="17:53"><ternary pos:start="17:34" pos:end="17:53"><condition pos:start="17:34" pos:end="17:40"><expr pos:start="17:34" pos:end="17:38"><operator pos:start="17:34" pos:end="17:34">!</operator><name pos:start="17:35" pos:end="17:38">addr</name></expr> ?</condition><then pos:start="17:42" pos:end="17:45"> <expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">NULL</name></expr> </then><else pos:start="17:47" pos:end="17:53">: <expr pos:start="17:49" pos:end="17:53"><operator pos:start="17:49" pos:end="17:49">&amp;</operator><name pos:start="17:50" pos:end="17:53">addr</name></expr></else></ternary></expr></argument>,
                                 <argument pos:start="18:34" pos:end="18:55"><expr pos:start="18:34" pos:end="18:55"><call pos:start="18:34" pos:end="18:55"><name pos:start="18:34" pos:end="18:51">memory_region_size</name><argument_list pos:start="18:52" pos:end="18:55">(<argument pos:start="18:53" pos:end="18:54"><expr pos:start="18:53" pos:end="18:54"><name pos:start="18:53" pos:end="18:54">mr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="18:58" pos:end="18:67"><expr pos:start="18:58" pos:end="18:67"><operator pos:start="18:58" pos:end="18:58">&amp;</operator><name pos:start="18:59" pos:end="18:67">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="40:37"><if pos:start="19:5" pos:end="40:37">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:17">local_err</name></expr>)</condition> <block pos:start="19:20" pos:end="40:37">{<block_content pos:start="20:5" pos:end="40:37">
    <expr_stmt pos:start="20:5" pos:end="20:78"><expr pos:start="20:5" pos:end="20:77"><call pos:start="20:5" pos:end="20:77"><name pos:start="20:5" pos:end="20:27">object_property_set_int</name><argument_list pos:start="20:28" pos:end="20:77">(<argument pos:start="20:29" pos:end="20:39"><expr pos:start="20:29" pos:end="20:39"><call pos:start="20:29" pos:end="20:39"><name pos:start="20:29" pos:end="20:34">OBJECT</name><argument_list pos:start="20:35" pos:end="20:39">(<argument pos:start="20:36" pos:end="20:38"><expr pos:start="20:36" pos:end="20:38"><name pos:start="20:36" pos:end="20:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="20:42" pos:end="20:45"><expr pos:start="20:42" pos:end="20:45"><name pos:start="20:42" pos:end="20:45">addr</name></expr></argument>, <argument pos:start="20:48" pos:end="20:64"><expr pos:start="20:48" pos:end="20:64"><name pos:start="20:48" pos:end="20:64">PC_DIMM_ADDR_PROP</name></expr></argument>, <argument pos:start="20:67" pos:end="20:76"><expr pos:start="20:67" pos:end="20:76"><operator pos:start="20:67" pos:end="20:67">&amp;</operator><name pos:start="20:68" pos:end="20:76">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="40:37"><if pos:start="21:5" pos:end="40:37">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17">local_err</name></expr>)</condition> <block pos:start="21:20" pos:end="40:37">{<block_content pos:start="22:5" pos:end="40:37">
    <expr_stmt pos:start="22:5" pos:end="22:45"><expr pos:start="22:5" pos:end="22:44"><call pos:start="22:5" pos:end="22:44"><name pos:start="22:5" pos:end="22:38">trace_mhp_pc_dimm_assigned_address</name><argument_list pos:start="22:39" pos:end="22:44">(<argument pos:start="22:40" pos:end="22:43"><expr pos:start="22:40" pos:end="22:43"><name pos:start="22:40" pos:end="22:43">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:79"><expr pos:start="23:5" pos:end="23:78"><name pos:start="23:5" pos:end="23:8">slot</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:78"><name pos:start="23:12" pos:end="23:34">object_property_get_int</name><argument_list pos:start="23:35" pos:end="23:78">(<argument pos:start="23:36" pos:end="23:46"><expr pos:start="23:36" pos:end="23:46"><call pos:start="23:36" pos:end="23:46"><name pos:start="23:36" pos:end="23:41">OBJECT</name><argument_list pos:start="23:42" pos:end="23:46">(<argument pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:45">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:49" pos:end="23:65"><expr pos:start="23:49" pos:end="23:65"><name pos:start="23:49" pos:end="23:65">PC_DIMM_SLOT_PROP</name></expr></argument>, <argument pos:start="23:68" pos:end="23:77"><expr pos:start="23:68" pos:end="23:77"><operator pos:start="23:68" pos:end="23:68">&amp;</operator><name pos:start="23:69" pos:end="23:77">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="40:37"><if pos:start="24:5" pos:end="40:37">if <condition pos:start="24:8" pos:end="24:18">(<expr pos:start="24:9" pos:end="24:17"><name pos:start="24:9" pos:end="24:17">local_err</name></expr>)</condition> <block pos:start="24:20" pos:end="40:37">{<block_content pos:start="25:5" pos:end="40:37">
    <expr_stmt pos:start="25:5" pos:end="26:65"><expr pos:start="25:5" pos:end="26:64"><name pos:start="25:5" pos:end="25:8">slot</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="26:64"><name pos:start="25:12" pos:end="25:32">pc_dimm_get_free_slot</name><argument_list pos:start="25:33" pos:end="26:64">(<argument pos:start="25:34" pos:end="25:79"><expr pos:start="25:34" pos:end="25:79"><ternary pos:start="25:34" pos:end="25:79"><condition pos:start="25:34" pos:end="25:66"><expr pos:start="25:34" pos:end="25:64"><name pos:start="25:34" pos:end="25:37">slot</name> <operator pos:start="25:39" pos:end="25:40">==</operator> <name pos:start="25:42" pos:end="25:64">PC_DIMM_UNASSIGNED_SLOT</name></expr> ?</condition><then pos:start="25:68" pos:end="25:71"> <expr pos:start="25:68" pos:end="25:71"><name pos:start="25:68" pos:end="25:71">NULL</name></expr> </then><else pos:start="25:73" pos:end="25:79">: <expr pos:start="25:75" pos:end="25:79"><operator pos:start="25:75" pos:end="25:75">&amp;</operator><name pos:start="25:76" pos:end="25:79">slot</name></expr></else></ternary></expr></argument>,
                                 <argument pos:start="26:34" pos:end="26:51"><expr pos:start="26:34" pos:end="26:51"><name pos:start="26:34" pos:end="26:51"><name pos:start="26:34" pos:end="26:40">machine</name><operator pos:start="26:41" pos:end="26:42">-&gt;</operator><name pos:start="26:43" pos:end="26:51">ram_slots</name></name></expr></argument>, <argument pos:start="26:54" pos:end="26:63"><expr pos:start="26:54" pos:end="26:63"><operator pos:start="26:54" pos:end="26:54">&amp;</operator><name pos:start="26:55" pos:end="26:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="40:37"><if pos:start="27:5" pos:end="40:37">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17">local_err</name></expr>)</condition> <block pos:start="27:20" pos:end="40:37">{<block_content pos:start="28:5" pos:end="40:37">
    <expr_stmt pos:start="28:5" pos:end="28:78"><expr pos:start="28:5" pos:end="28:77"><call pos:start="28:5" pos:end="28:77"><name pos:start="28:5" pos:end="28:27">object_property_set_int</name><argument_list pos:start="28:28" pos:end="28:77">(<argument pos:start="28:29" pos:end="28:39"><expr pos:start="28:29" pos:end="28:39"><call pos:start="28:29" pos:end="28:39"><name pos:start="28:29" pos:end="28:34">OBJECT</name><argument_list pos:start="28:35" pos:end="28:39">(<argument pos:start="28:36" pos:end="28:38"><expr pos:start="28:36" pos:end="28:38"><name pos:start="28:36" pos:end="28:38">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="28:42" pos:end="28:45"><expr pos:start="28:42" pos:end="28:45"><name pos:start="28:42" pos:end="28:45">slot</name></expr></argument>, <argument pos:start="28:48" pos:end="28:64"><expr pos:start="28:48" pos:end="28:64"><name pos:start="28:48" pos:end="28:64">PC_DIMM_SLOT_PROP</name></expr></argument>, <argument pos:start="28:67" pos:end="28:76"><expr pos:start="28:67" pos:end="28:76"><operator pos:start="28:67" pos:end="28:67">&amp;</operator><name pos:start="28:68" pos:end="28:76">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="29:5" pos:end="40:37"><if pos:start="29:5" pos:end="40:37">if <condition pos:start="29:8" pos:end="29:18">(<expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:17">local_err</name></expr>)</condition> <block pos:start="29:20" pos:end="40:37">{<block_content pos:start="30:5" pos:end="40:37">
    <expr_stmt pos:start="30:5" pos:end="30:42"><expr pos:start="30:5" pos:end="30:41"><call pos:start="30:5" pos:end="30:41"><name pos:start="30:5" pos:end="30:35">trace_mhp_pc_dimm_assigned_slot</name><argument_list pos:start="30:36" pos:end="30:41">(<argument pos:start="30:37" pos:end="30:40"><expr pos:start="30:37" pos:end="30:40"><name pos:start="30:37" pos:end="30:40">slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="40:37"><if pos:start="31:5" pos:end="40:37">if <condition pos:start="31:8" pos:end="31:24">(<expr pos:start="31:9" pos:end="31:23"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:23"><name pos:start="31:10" pos:end="31:13">pcms</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:23">acpi_dev</name></name></expr>)</condition> <block pos:start="31:26" pos:end="40:37">{<block_content pos:start="32:9" pos:end="40:37">
        <expr_stmt pos:start="32:9" pos:end="33:73"><expr pos:start="32:9" pos:end="33:72"><call pos:start="32:9" pos:end="33:72"><name pos:start="32:9" pos:end="32:18">error_setg</name><argument_list pos:start="32:19" pos:end="33:72">(<argument pos:start="32:20" pos:end="32:29"><expr pos:start="32:20" pos:end="32:29"><operator pos:start="32:20" pos:end="32:20">&amp;</operator><name pos:start="32:21" pos:end="32:29">local_err</name></expr></argument>,
                   <argument pos:start="33:20" pos:end="33:71"><expr pos:start="33:20" pos:end="33:71"><literal type="string" pos:start="33:20" pos:end="33:71">"memory hotplug is not enabled: missing acpi device"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="35:70"><expr pos:start="34:5" pos:end="35:69"><call pos:start="34:5" pos:end="35:69"><name pos:start="34:5" pos:end="34:31">memory_region_add_subregion</name><argument_list pos:start="34:32" pos:end="35:69">(<argument pos:start="34:33" pos:end="34:53"><expr pos:start="34:33" pos:end="34:53"><operator pos:start="34:33" pos:end="34:33">&amp;</operator><name pos:start="34:34" pos:end="34:53"><name pos:start="34:34" pos:end="34:37">pcms</name><operator pos:start="34:38" pos:end="34:39">-&gt;</operator><name pos:start="34:40" pos:end="34:53">hotplug_memory</name></name></expr></argument>,
                                <argument pos:start="35:33" pos:end="35:64"><expr pos:start="35:33" pos:end="35:64"><name pos:start="35:33" pos:end="35:36">addr</name> <operator pos:start="35:38" pos:end="35:38">-</operator> <name pos:start="35:40" pos:end="35:64"><name pos:start="35:40" pos:end="35:43">pcms</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:64">hotplug_memory_base</name></name></expr></argument>, <argument pos:start="35:67" pos:end="35:68"><expr pos:start="35:67" pos:end="35:68"><name pos:start="35:67" pos:end="35:68">mr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:34"><expr pos:start="36:5" pos:end="36:33"><call pos:start="36:5" pos:end="36:33"><name pos:start="36:5" pos:end="36:24">vmstate_register_ram</name><argument_list pos:start="36:25" pos:end="36:33">(<argument pos:start="36:26" pos:end="36:27"><expr pos:start="36:26" pos:end="36:27"><name pos:start="36:26" pos:end="36:27">mr</name></expr></argument>, <argument pos:start="36:30" pos:end="36:32"><expr pos:start="36:30" pos:end="36:32"><name pos:start="36:30" pos:end="36:32">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:7">hhc</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:51"><name pos:start="37:11" pos:end="37:35">HOTPLUG_HANDLER_GET_CLASS</name><argument_list pos:start="37:36" pos:end="37:51">(<argument pos:start="37:37" pos:end="37:50"><expr pos:start="37:37" pos:end="37:50"><name pos:start="37:37" pos:end="37:50"><name pos:start="37:37" pos:end="37:40">pcms</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:50">acpi_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:64"><expr pos:start="38:5" pos:end="38:63"><call pos:start="38:5" pos:end="38:63"><name pos:start="38:5" pos:end="38:13"><name pos:start="38:5" pos:end="38:7">hhc</name><operator pos:start="38:8" pos:end="38:9">-&gt;</operator><name pos:start="38:10" pos:end="38:13">plug</name></name><argument_list pos:start="38:14" pos:end="38:63">(<argument pos:start="38:15" pos:end="38:45"><expr pos:start="38:15" pos:end="38:45"><call pos:start="38:15" pos:end="38:45"><name pos:start="38:15" pos:end="38:29">HOTPLUG_HANDLER</name><argument_list pos:start="38:30" pos:end="38:45">(<argument pos:start="38:31" pos:end="38:44"><expr pos:start="38:31" pos:end="38:44"><name pos:start="38:31" pos:end="38:44"><name pos:start="38:31" pos:end="38:34">pcms</name><operator pos:start="38:35" pos:end="38:36">-&gt;</operator><name pos:start="38:37" pos:end="38:44">acpi_dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="38:48" pos:end="38:50"><expr pos:start="38:48" pos:end="38:50"><name pos:start="38:48" pos:end="38:50">dev</name></expr></argument>, <argument pos:start="38:53" pos:end="38:62"><expr pos:start="38:53" pos:end="38:62"><operator pos:start="38:53" pos:end="38:53">&amp;</operator><name pos:start="38:54" pos:end="38:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="39:1" pos:end="39:4"><name pos:start="39:1" pos:end="39:3">out</name>:</label>
    <expr_stmt pos:start="40:5" pos:end="40:37"><expr pos:start="40:5" pos:end="40:36"><call pos:start="40:5" pos:end="40:36"><name pos:start="40:5" pos:end="40:19">error_propagate</name><argument_list pos:start="40:20" pos:end="40:36">(<argument pos:start="40:21" pos:end="40:24"><expr pos:start="40:21" pos:end="40:24"><name pos:start="40:21" pos:end="40:24">errp</name></expr></argument>, <argument pos:start="40:27" pos:end="40:35"><expr pos:start="40:27" pos:end="40:35"><name pos:start="40:27" pos:end="40:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
