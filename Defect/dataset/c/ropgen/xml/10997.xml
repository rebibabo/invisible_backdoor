<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10997.c" pos:tabs="8"><function pos:start="1:1" pos:end="929:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">avi_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="929:1">{<block_content pos:start="5:5" pos:end="927:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:20">tag</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:23" pos:end="9:26">tag1</name></decl>, <decl pos:start="9:29" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:29" pos:end="9:35">handler</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">codec_type</name></decl>, <decl pos:start="11:21" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:32">stream_index</name></decl>, <decl pos:start="11:35" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:35" pos:end="11:46">frame_period</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">AVIStream</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:18">ast</name>      <init pos:start="19:25" pos:end="19:30">= <expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">avih_width</name>      <init pos:start="21:25" pos:end="21:27">= <expr pos:start="21:27" pos:end="21:27"><literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr></init></decl>, <decl pos:start="21:30" pos:end="21:44"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:30" pos:end="21:40">avih_height</name> <init pos:start="21:42" pos:end="21:44">= <expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:23">amv_file_format</name> <init pos:start="23:25" pos:end="23:27">= <expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:21">list_end</name>   <init pos:start="25:25" pos:end="25:27">= <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:7">avi</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:21">stream_index</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <operator pos:start="31:25" pos:end="31:25">-</operator><literal type="number" pos:start="31:26" pos:end="31:26">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:7">ret</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:25"><name pos:start="35:11" pos:end="35:18">get_riff</name><argument_list pos:start="35:19" pos:end="35:25">(<argument pos:start="35:20" pos:end="35:20"><expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">s</name></expr></argument>, <argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:19"><if pos:start="37:5" pos:end="39:19">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">&lt;</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:19"><block_content pos:start="39:9" pos:end="39:19">

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:7">avi</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:14">fsize</name></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:26">avio_size</name><argument_list pos:start="43:27" pos:end="43:30">(<argument pos:start="43:28" pos:end="43:29"><expr pos:start="43:28" pos:end="43:29"><name pos:start="43:28" pos:end="43:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:68"><if pos:start="45:5" pos:end="47:68">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">avi</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:18">fsize</name></name> <operator pos:start="45:20" pos:end="45:21">&lt;=</operator> <literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:68"><block_content pos:start="47:9" pos:end="47:68">

        <expr_stmt pos:start="47:9" pos:end="47:68"><expr pos:start="47:9" pos:end="47:67"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:11">avi</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:18">fsize</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <ternary pos:start="47:22" pos:end="47:67"><condition pos:start="47:22" pos:end="47:41"><expr pos:start="47:22" pos:end="47:39"><name pos:start="47:22" pos:end="47:34"><name pos:start="47:22" pos:end="47:24">avi</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:34">riff_end</name></name> <operator pos:start="47:36" pos:end="47:37">==</operator> <literal type="number" pos:start="47:39" pos:end="47:39">8</literal></expr> ?</condition><then pos:start="47:43" pos:end="47:51"> <expr pos:start="47:43" pos:end="47:51"><name pos:start="47:43" pos:end="47:51">INT64_MAX</name></expr> </then><else pos:start="47:53" pos:end="47:67">: <expr pos:start="47:55" pos:end="47:67"><name pos:start="47:55" pos:end="47:67"><name pos:start="47:55" pos:end="47:57">avi</name><operator pos:start="47:58" pos:end="47:59">-&gt;</operator><name pos:start="47:60" pos:end="47:67">riff_end</name></name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:24">/* first list tag */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:22"><expr pos:start="53:5" pos:end="53:21"><name pos:start="53:5" pos:end="53:16">stream_index</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:14">codec_type</name>   <operator pos:start="55:18" pos:end="55:18">=</operator> <operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:16">frame_period</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="861:5">for <control pos:start="59:9" pos:end="59:12">(<init pos:start="59:10" pos:end="59:10">;</init><condition pos:start="59:11" pos:end="59:11">;</condition><incr/>)</control> <block pos:start="59:14" pos:end="861:5">{<block_content pos:start="61:9" pos:end="859:9">

        <if_stmt pos:start="61:9" pos:end="63:22"><if pos:start="61:9" pos:end="63:22">if <condition pos:start="61:12" pos:end="61:28">(<expr pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:14">pb</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:27">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:22"><block_content pos:start="63:13" pos:end="63:22">

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:11">tag</name>  <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:28"><name pos:start="65:16" pos:end="65:24">avio_rl32</name><argument_list pos:start="65:25" pos:end="65:28">(<argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><name pos:start="65:26" pos:end="65:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:12">size</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:28"><name pos:start="67:16" pos:end="67:24">avio_rl32</name><argument_list pos:start="67:25" pos:end="67:28">(<argument pos:start="67:26" pos:end="67:27"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><call pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:17">print_tag</name><argument_list pos:start="71:18" pos:end="71:35">(<argument pos:start="71:19" pos:end="71:23"><expr pos:start="71:19" pos:end="71:23"><literal type="string" pos:start="71:19" pos:end="71:23">"tag"</literal></expr></argument>, <argument pos:start="71:26" pos:end="71:28"><expr pos:start="71:26" pos:end="71:28"><name pos:start="71:26" pos:end="71:28">tag</name></expr></argument>, <argument pos:start="71:31" pos:end="71:34"><expr pos:start="71:31" pos:end="71:34"><name pos:start="71:31" pos:end="71:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="75:9" pos:end="859:9">switch <condition pos:start="75:16" pos:end="75:20">(<expr pos:start="75:17" pos:end="75:19"><name pos:start="75:17" pos:end="75:19">tag</name></expr>)</condition> <block pos:start="75:22" pos:end="859:9">{<block_content pos:start="77:9" pos:end="857:18">

        <case pos:start="77:9" pos:end="77:39">case <expr pos:start="77:14" pos:end="77:38"><call pos:start="77:14" pos:end="77:38"><name pos:start="77:14" pos:end="77:18">MKTAG</name><argument_list pos:start="77:19" pos:end="77:38">(<argument pos:start="77:20" pos:end="77:22"><expr pos:start="77:20" pos:end="77:22"><literal type="char" pos:start="77:20" pos:end="77:22">'L'</literal></expr></argument>, <argument pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><literal type="char" pos:start="77:25" pos:end="77:27">'I'</literal></expr></argument>, <argument pos:start="77:30" pos:end="77:32"><expr pos:start="77:30" pos:end="77:32"><literal type="char" pos:start="77:30" pos:end="77:32">'S'</literal></expr></argument>, <argument pos:start="77:35" pos:end="77:37"><expr pos:start="77:35" pos:end="77:37"><literal type="char" pos:start="77:35" pos:end="77:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:44"><expr pos:start="79:13" pos:end="79:43"><name pos:start="79:13" pos:end="79:20">list_end</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:32">avio_tell</name><argument_list pos:start="79:33" pos:end="79:36">(<argument pos:start="79:34" pos:end="79:35"><expr pos:start="79:34" pos:end="79:35"><name pos:start="79:34" pos:end="79:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="79:38" pos:end="79:38">+</operator> <name pos:start="79:40" pos:end="79:43">size</name></expr>;</expr_stmt>

            <comment type="block" pos:start="81:13" pos:end="81:60">/* Ignored, except at start of video packets. */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:33"><expr pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:16">tag1</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:32"><name pos:start="83:20" pos:end="83:28">avio_rl32</name><argument_list pos:start="83:29" pos:end="83:32">(<argument pos:start="83:30" pos:end="83:31"><expr pos:start="83:30" pos:end="83:31"><name pos:start="83:30" pos:end="83:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:39"><expr pos:start="87:13" pos:end="87:38"><call pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:21">print_tag</name><argument_list pos:start="87:22" pos:end="87:38">(<argument pos:start="87:23" pos:end="87:28"><expr pos:start="87:23" pos:end="87:28"><literal type="string" pos:start="87:23" pos:end="87:28">"list"</literal></expr></argument>, <argument pos:start="87:31" pos:end="87:34"><expr pos:start="87:31" pos:end="87:34"><name pos:start="87:31" pos:end="87:34">tag1</name></expr></argument>, <argument pos:start="87:37" pos:end="87:37"><expr pos:start="87:37" pos:end="87:37"><literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="91:13" pos:end="113:44"><if pos:start="91:13" pos:end="107:13">if <condition pos:start="91:16" pos:end="91:50">(<expr pos:start="91:17" pos:end="91:49"><name pos:start="91:17" pos:end="91:20">tag1</name> <operator pos:start="91:22" pos:end="91:23">==</operator> <call pos:start="91:25" pos:end="91:49"><name pos:start="91:25" pos:end="91:29">MKTAG</name><argument_list pos:start="91:30" pos:end="91:49">(<argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><literal type="char" pos:start="91:31" pos:end="91:33">'m'</literal></expr></argument>, <argument pos:start="91:36" pos:end="91:38"><expr pos:start="91:36" pos:end="91:38"><literal type="char" pos:start="91:36" pos:end="91:38">'o'</literal></expr></argument>, <argument pos:start="91:41" pos:end="91:43"><expr pos:start="91:41" pos:end="91:43"><literal type="char" pos:start="91:41" pos:end="91:43">'v'</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><literal type="char" pos:start="91:46" pos:end="91:48">'i'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:52" pos:end="107:13">{<block_content pos:start="93:17" pos:end="105:35">

                <expr_stmt pos:start="93:17" pos:end="93:51"><expr pos:start="93:17" pos:end="93:50"><name pos:start="93:17" pos:end="93:30"><name pos:start="93:17" pos:end="93:19">avi</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:30">movi_list</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <call pos:start="93:34" pos:end="93:46"><name pos:start="93:34" pos:end="93:42">avio_tell</name><argument_list pos:start="93:43" pos:end="93:46">(<argument pos:start="93:44" pos:end="93:45"><expr pos:start="93:44" pos:end="93:45"><name pos:start="93:44" pos:end="93:45">pb</name></expr></argument>)</argument_list></call> <operator pos:start="93:48" pos:end="93:48">-</operator> <literal type="number" pos:start="93:50" pos:end="93:50">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="95:17" pos:end="101:50"><if pos:start="95:17" pos:end="97:71">if <condition pos:start="95:20" pos:end="95:25">(<expr pos:start="95:21" pos:end="95:24"><name pos:start="95:21" pos:end="95:24">size</name></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:71"><block_content pos:start="97:21" pos:end="97:71">

                    <expr_stmt pos:start="97:21" pos:end="97:71"><expr pos:start="97:21" pos:end="97:70"><name pos:start="97:21" pos:end="97:33"><name pos:start="97:21" pos:end="97:23">avi</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:33">movi_end</name></name> <operator pos:start="97:35" pos:end="97:35">=</operator> <name pos:start="97:37" pos:end="97:50"><name pos:start="97:37" pos:end="97:39">avi</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:50">movi_list</name></name> <operator pos:start="97:52" pos:end="97:52">+</operator> <name pos:start="97:54" pos:end="97:57">size</name> <operator pos:start="97:59" pos:end="97:59">+</operator> <operator pos:start="97:61" pos:end="97:61">(</operator><name pos:start="97:62" pos:end="97:65">size</name> <operator pos:start="97:67" pos:end="97:67">&amp;</operator> <literal type="number" pos:start="97:69" pos:end="97:69">1</literal><operator pos:start="97:70" pos:end="97:70">)</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="99:17" pos:end="101:50">else<block type="pseudo" pos:start="101:21" pos:end="101:50"><block_content pos:start="101:21" pos:end="101:50">

                    <expr_stmt pos:start="101:21" pos:end="101:50"><expr pos:start="101:21" pos:end="101:49"><name pos:start="101:21" pos:end="101:33"><name pos:start="101:21" pos:end="101:23">avi</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:33">movi_end</name></name> <operator pos:start="101:35" pos:end="101:35">=</operator> <call pos:start="101:37" pos:end="101:49"><name pos:start="101:37" pos:end="101:45">avio_size</name><argument_list pos:start="101:46" pos:end="101:49">(<argument pos:start="101:47" pos:end="101:48"><expr pos:start="101:47" pos:end="101:48"><name pos:start="101:47" pos:end="101:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:69"><expr pos:start="103:17" pos:end="103:68"><call pos:start="103:17" pos:end="103:68"><name pos:start="103:17" pos:end="103:23">av_dlog</name><argument_list pos:start="103:24" pos:end="103:68">(<argument pos:start="103:25" pos:end="103:28"><expr pos:start="103:25" pos:end="103:28"><name pos:start="103:25" pos:end="103:28">NULL</name></expr></argument>, <argument pos:start="103:31" pos:end="103:52"><expr pos:start="103:31" pos:end="103:52"><literal type="string" pos:start="103:31" pos:end="103:42">"movi end=%"</literal><name pos:start="103:43" pos:end="103:48">PRIx64</name><literal type="string" pos:start="103:49" pos:end="103:52">"\n"</literal></expr></argument>, <argument pos:start="103:55" pos:end="103:67"><expr pos:start="103:55" pos:end="103:67"><name pos:start="103:55" pos:end="103:67"><name pos:start="103:55" pos:end="103:57">avi</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:67">movi_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="105:17" pos:end="105:35">goto <name pos:start="105:22" pos:end="105:34">end_of_header</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="107:15" pos:end="109:47">else if <condition pos:start="107:23" pos:end="107:57">(<expr pos:start="107:24" pos:end="107:56"><name pos:start="107:24" pos:end="107:27">tag1</name> <operator pos:start="107:29" pos:end="107:30">==</operator> <call pos:start="107:32" pos:end="107:56"><name pos:start="107:32" pos:end="107:36">MKTAG</name><argument_list pos:start="107:37" pos:end="107:56">(<argument pos:start="107:38" pos:end="107:40"><expr pos:start="107:38" pos:end="107:40"><literal type="char" pos:start="107:38" pos:end="107:40">'I'</literal></expr></argument>, <argument pos:start="107:43" pos:end="107:45"><expr pos:start="107:43" pos:end="107:45"><literal type="char" pos:start="107:43" pos:end="107:45">'N'</literal></expr></argument>, <argument pos:start="107:48" pos:end="107:50"><expr pos:start="107:48" pos:end="107:50"><literal type="char" pos:start="107:48" pos:end="107:50">'F'</literal></expr></argument>, <argument pos:start="107:53" pos:end="107:55"><expr pos:start="107:53" pos:end="107:55"><literal type="char" pos:start="107:53" pos:end="107:55">'O'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:47"><block_content pos:start="109:17" pos:end="109:47">

                <expr_stmt pos:start="109:17" pos:end="109:47"><expr pos:start="109:17" pos:end="109:46"><call pos:start="109:17" pos:end="109:46"><name pos:start="109:17" pos:end="109:33">ff_read_riff_info</name><argument_list pos:start="109:34" pos:end="109:46">(<argument pos:start="109:35" pos:end="109:35"><expr pos:start="109:35" pos:end="109:35"><name pos:start="109:35" pos:end="109:35">s</name></expr></argument>, <argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><name pos:start="109:38" pos:end="109:41">size</name> <operator pos:start="109:43" pos:end="109:43">-</operator> <literal type="number" pos:start="109:45" pos:end="109:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="111:13" pos:end="113:44">else if <condition pos:start="111:21" pos:end="111:55">(<expr pos:start="111:22" pos:end="111:54"><name pos:start="111:22" pos:end="111:25">tag1</name> <operator pos:start="111:27" pos:end="111:28">==</operator> <call pos:start="111:30" pos:end="111:54"><name pos:start="111:30" pos:end="111:34">MKTAG</name><argument_list pos:start="111:35" pos:end="111:54">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><literal type="char" pos:start="111:36" pos:end="111:38">'n'</literal></expr></argument>, <argument pos:start="111:41" pos:end="111:43"><expr pos:start="111:41" pos:end="111:43"><literal type="char" pos:start="111:41" pos:end="111:43">'c'</literal></expr></argument>, <argument pos:start="111:46" pos:end="111:48"><expr pos:start="111:46" pos:end="111:48"><literal type="char" pos:start="111:46" pos:end="111:48">'d'</literal></expr></argument>, <argument pos:start="111:51" pos:end="111:53"><expr pos:start="111:51" pos:end="111:53"><literal type="char" pos:start="111:51" pos:end="111:53">'t'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:44"><block_content pos:start="113:17" pos:end="113:44">

                <expr_stmt pos:start="113:17" pos:end="113:44"><expr pos:start="113:17" pos:end="113:43"><call pos:start="113:17" pos:end="113:43"><name pos:start="113:17" pos:end="113:30">avi_read_nikon</name><argument_list pos:start="113:31" pos:end="113:43">(<argument pos:start="113:32" pos:end="113:32"><expr pos:start="113:32" pos:end="113:32"><name pos:start="113:32" pos:end="113:32">s</name></expr></argument>, <argument pos:start="113:35" pos:end="113:42"><expr pos:start="113:35" pos:end="113:42"><name pos:start="113:35" pos:end="113:42">list_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:39">case <expr pos:start="119:14" pos:end="119:38"><call pos:start="119:14" pos:end="119:38"><name pos:start="119:14" pos:end="119:18">MKTAG</name><argument_list pos:start="119:19" pos:end="119:38">(<argument pos:start="119:20" pos:end="119:22"><expr pos:start="119:20" pos:end="119:22"><literal type="char" pos:start="119:20" pos:end="119:22">'I'</literal></expr></argument>, <argument pos:start="119:25" pos:end="119:27"><expr pos:start="119:25" pos:end="119:27"><literal type="char" pos:start="119:25" pos:end="119:27">'D'</literal></expr></argument>, <argument pos:start="119:30" pos:end="119:32"><expr pos:start="119:30" pos:end="119:32"><literal type="char" pos:start="119:30" pos:end="119:32">'I'</literal></expr></argument>, <argument pos:start="119:35" pos:end="119:37"><expr pos:start="119:35" pos:end="119:37"><literal type="char" pos:start="119:35" pos:end="119:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

        <block pos:start="121:9" pos:end="135:9">{<block_content pos:start="123:13" pos:end="133:18">

            <decl_stmt pos:start="123:13" pos:end="123:43"><decl pos:start="123:13" pos:end="123:42"><type pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:20">unsigned</name> <name pos:start="123:22" pos:end="123:25">char</name></type> <name pos:start="123:27" pos:end="123:34"><name pos:start="123:27" pos:end="123:30">date</name><index pos:start="123:31" pos:end="123:34">[<expr pos:start="123:32" pos:end="123:33"><literal type="number" pos:start="123:32" pos:end="123:33">64</literal></expr>]</index></name> <init pos:start="123:36" pos:end="123:42">= <expr pos:start="123:38" pos:end="123:42"><block pos:start="123:38" pos:end="123:42">{ <expr pos:start="123:40" pos:end="123:40"><literal type="number" pos:start="123:40" pos:end="123:40">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:31"><expr pos:start="125:13" pos:end="125:30"><name pos:start="125:13" pos:end="125:16">size</name> <operator pos:start="125:18" pos:end="125:19">+=</operator> <operator pos:start="125:21" pos:end="125:21">(</operator><name pos:start="125:22" pos:end="125:25">size</name> <operator pos:start="125:27" pos:end="125:27">&amp;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">1</literal><operator pos:start="125:30" pos:end="125:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:71"><expr pos:start="127:13" pos:end="127:70"><name pos:start="127:13" pos:end="127:16">size</name> <operator pos:start="127:18" pos:end="127:19">-=</operator> <call pos:start="127:21" pos:end="127:70"><name pos:start="127:21" pos:end="127:29">avio_read</name><argument_list pos:start="127:30" pos:end="127:70">(<argument pos:start="127:31" pos:end="127:32"><expr pos:start="127:31" pos:end="127:32"><name pos:start="127:31" pos:end="127:32">pb</name></expr></argument>, <argument pos:start="127:35" pos:end="127:38"><expr pos:start="127:35" pos:end="127:38"><name pos:start="127:35" pos:end="127:38">date</name></expr></argument>, <argument pos:start="127:41" pos:end="127:69"><expr pos:start="127:41" pos:end="127:69"><call pos:start="127:41" pos:end="127:69"><name pos:start="127:41" pos:end="127:45">FFMIN</name><argument_list pos:start="127:46" pos:end="127:69">(<argument pos:start="127:47" pos:end="127:50"><expr pos:start="127:47" pos:end="127:50"><name pos:start="127:47" pos:end="127:50">size</name></expr></argument>, <argument pos:start="127:53" pos:end="127:68"><expr pos:start="127:53" pos:end="127:68"><sizeof pos:start="127:53" pos:end="127:64">sizeof<argument_list pos:start="127:59" pos:end="127:64">(<argument pos:start="127:60" pos:end="127:63"><expr pos:start="127:60" pos:end="127:63"><name pos:start="127:60" pos:end="127:63">date</name></expr></argument>)</argument_list></sizeof> <operator pos:start="127:66" pos:end="127:66">-</operator> <literal type="number" pos:start="127:68" pos:end="127:68">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:32"><expr pos:start="129:13" pos:end="129:31"><call pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:21">avio_skip</name><argument_list pos:start="129:22" pos:end="129:31">(<argument pos:start="129:23" pos:end="129:24"><expr pos:start="129:23" pos:end="129:24"><name pos:start="129:23" pos:end="129:24">pb</name></expr></argument>, <argument pos:start="129:27" pos:end="129:30"><expr pos:start="129:27" pos:end="129:30"><name pos:start="129:27" pos:end="129:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:59"><expr pos:start="131:13" pos:end="131:58"><call pos:start="131:13" pos:end="131:58"><name pos:start="131:13" pos:end="131:38">avi_metadata_creation_time</name><argument_list pos:start="131:39" pos:end="131:58">(<argument pos:start="131:40" pos:end="131:51"><expr pos:start="131:40" pos:end="131:51"><operator pos:start="131:40" pos:end="131:40">&amp;</operator><name pos:start="131:41" pos:end="131:51"><name pos:start="131:41" pos:end="131:41">s</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:51">metadata</name></name></expr></argument>, <argument pos:start="131:54" pos:end="131:57"><expr pos:start="131:54" pos:end="131:57"><name pos:start="131:54" pos:end="131:57">date</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        </block_content>}</block>

        <case pos:start="137:9" pos:end="137:39">case <expr pos:start="137:14" pos:end="137:38"><call pos:start="137:14" pos:end="137:38"><name pos:start="137:14" pos:end="137:18">MKTAG</name><argument_list pos:start="137:19" pos:end="137:38">(<argument pos:start="137:20" pos:end="137:22"><expr pos:start="137:20" pos:end="137:22"><literal type="char" pos:start="137:20" pos:end="137:22">'d'</literal></expr></argument>, <argument pos:start="137:25" pos:end="137:27"><expr pos:start="137:25" pos:end="137:27"><literal type="char" pos:start="137:25" pos:end="137:27">'m'</literal></expr></argument>, <argument pos:start="137:30" pos:end="137:32"><expr pos:start="137:30" pos:end="137:32"><literal type="char" pos:start="137:30" pos:end="137:32">'l'</literal></expr></argument>, <argument pos:start="137:35" pos:end="137:37"><expr pos:start="137:35" pos:end="137:37"><literal type="char" pos:start="137:35" pos:end="137:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:29"><expr pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:24"><name pos:start="139:13" pos:end="139:15">avi</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:24">is_odml</name></name> <operator pos:start="139:26" pos:end="139:26">=</operator> <literal type="number" pos:start="139:28" pos:end="139:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:45"><expr pos:start="141:13" pos:end="141:44"><call pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:21">avio_skip</name><argument_list pos:start="141:22" pos:end="141:44">(<argument pos:start="141:23" pos:end="141:24"><expr pos:start="141:23" pos:end="141:24"><name pos:start="141:23" pos:end="141:24">pb</name></expr></argument>, <argument pos:start="141:27" pos:end="141:43"><expr pos:start="141:27" pos:end="141:43"><name pos:start="141:27" pos:end="141:30">size</name> <operator pos:start="141:32" pos:end="141:32">+</operator> <operator pos:start="141:34" pos:end="141:34">(</operator><name pos:start="141:35" pos:end="141:38">size</name> <operator pos:start="141:40" pos:end="141:40">&amp;</operator> <literal type="number" pos:start="141:42" pos:end="141:42">1</literal><operator pos:start="141:43" pos:end="141:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:39">case <expr pos:start="145:14" pos:end="145:38"><call pos:start="145:14" pos:end="145:38"><name pos:start="145:14" pos:end="145:18">MKTAG</name><argument_list pos:start="145:19" pos:end="145:38">(<argument pos:start="145:20" pos:end="145:22"><expr pos:start="145:20" pos:end="145:22"><literal type="char" pos:start="145:20" pos:end="145:22">'a'</literal></expr></argument>, <argument pos:start="145:25" pos:end="145:27"><expr pos:start="145:25" pos:end="145:27"><literal type="char" pos:start="145:25" pos:end="145:27">'m'</literal></expr></argument>, <argument pos:start="145:30" pos:end="145:32"><expr pos:start="145:30" pos:end="145:32"><literal type="char" pos:start="145:30" pos:end="145:32">'v'</literal></expr></argument>, <argument pos:start="145:35" pos:end="145:37"><expr pos:start="145:35" pos:end="145:37"><literal type="char" pos:start="145:35" pos:end="145:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="147:13" pos:end="147:32"><expr pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:27">amv_file_format</name> <operator pos:start="147:29" pos:end="147:29">=</operator> <literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>;</expr_stmt>

        <case pos:start="149:9" pos:end="149:39">case <expr pos:start="149:14" pos:end="149:38"><call pos:start="149:14" pos:end="149:38"><name pos:start="149:14" pos:end="149:18">MKTAG</name><argument_list pos:start="149:19" pos:end="149:38">(<argument pos:start="149:20" pos:end="149:22"><expr pos:start="149:20" pos:end="149:22"><literal type="char" pos:start="149:20" pos:end="149:22">'a'</literal></expr></argument>, <argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><literal type="char" pos:start="149:25" pos:end="149:27">'v'</literal></expr></argument>, <argument pos:start="149:30" pos:end="149:32"><expr pos:start="149:30" pos:end="149:32"><literal type="char" pos:start="149:30" pos:end="149:32">'i'</literal></expr></argument>, <argument pos:start="149:35" pos:end="149:37"><expr pos:start="149:35" pos:end="149:37"><literal type="char" pos:start="149:35" pos:end="149:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="151:13" pos:end="151:28">/* AVI header */</comment>

            <comment type="block" pos:start="153:13" pos:end="153:48">/* using frame_period is bad idea */</comment>

            <expr_stmt pos:start="155:13" pos:end="155:41"><expr pos:start="155:13" pos:end="155:40"><name pos:start="155:13" pos:end="155:24">frame_period</name> <operator pos:start="155:26" pos:end="155:26">=</operator> <call pos:start="155:28" pos:end="155:40"><name pos:start="155:28" pos:end="155:36">avio_rl32</name><argument_list pos:start="155:37" pos:end="155:40">(<argument pos:start="155:38" pos:end="155:39"><expr pos:start="155:38" pos:end="155:39"><name pos:start="155:38" pos:end="155:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:29"><expr pos:start="157:13" pos:end="157:28"><call pos:start="157:13" pos:end="157:28"><name pos:start="157:13" pos:end="157:21">avio_skip</name><argument_list pos:start="157:22" pos:end="157:28">(<argument pos:start="157:23" pos:end="157:24"><expr pos:start="157:23" pos:end="157:24"><name pos:start="157:23" pos:end="157:24">pb</name></expr></argument>, <argument pos:start="157:27" pos:end="157:27"><expr pos:start="157:27" pos:end="157:27"><literal type="number" pos:start="157:27" pos:end="157:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:26"><expr pos:start="159:13" pos:end="159:25"><call pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:21">avio_rl32</name><argument_list pos:start="159:22" pos:end="159:25">(<argument pos:start="159:23" pos:end="159:24"><expr pos:start="159:23" pos:end="159:24"><name pos:start="159:23" pos:end="159:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:70"><expr pos:start="161:13" pos:end="161:69"><name pos:start="161:13" pos:end="161:32"><name pos:start="161:13" pos:end="161:15">avi</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:32">non_interleaved</name></name> <operator pos:start="161:34" pos:end="161:35">|=</operator> <call pos:start="161:37" pos:end="161:49"><name pos:start="161:37" pos:end="161:45">avio_rl32</name><argument_list pos:start="161:46" pos:end="161:49">(<argument pos:start="161:47" pos:end="161:48"><expr pos:start="161:47" pos:end="161:48"><name pos:start="161:47" pos:end="161:48">pb</name></expr></argument>)</argument_list></call> <operator pos:start="161:51" pos:end="161:51">&amp;</operator> <name pos:start="161:53" pos:end="161:69">AVIF_MUSTUSEINDEX</name></expr>;</expr_stmt>



            <expr_stmt pos:start="165:13" pos:end="165:33"><expr pos:start="165:13" pos:end="165:32"><call pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:21">avio_skip</name><argument_list pos:start="165:22" pos:end="165:32">(<argument pos:start="165:23" pos:end="165:24"><expr pos:start="165:23" pos:end="165:24"><name pos:start="165:23" pos:end="165:24">pb</name></expr></argument>, <argument pos:start="165:27" pos:end="165:31"><expr pos:start="165:27" pos:end="165:31"><literal type="number" pos:start="165:27" pos:end="165:27">2</literal> <operator pos:start="165:29" pos:end="165:29">*</operator> <literal type="number" pos:start="165:31" pos:end="165:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:26"><expr pos:start="167:13" pos:end="167:25"><call pos:start="167:13" pos:end="167:25"><name pos:start="167:13" pos:end="167:21">avio_rl32</name><argument_list pos:start="167:22" pos:end="167:25">(<argument pos:start="167:23" pos:end="167:24"><expr pos:start="167:23" pos:end="167:24"><name pos:start="167:23" pos:end="167:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:26"><expr pos:start="169:13" pos:end="169:25"><call pos:start="169:13" pos:end="169:25"><name pos:start="169:13" pos:end="169:21">avio_rl32</name><argument_list pos:start="169:22" pos:end="169:25">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:40"><expr pos:start="171:13" pos:end="171:39"><name pos:start="171:13" pos:end="171:22">avih_width</name>  <operator pos:start="171:25" pos:end="171:25">=</operator> <call pos:start="171:27" pos:end="171:39"><name pos:start="171:27" pos:end="171:35">avio_rl32</name><argument_list pos:start="171:36" pos:end="171:39">(<argument pos:start="171:37" pos:end="171:38"><expr pos:start="171:37" pos:end="171:38"><name pos:start="171:37" pos:end="171:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:40"><expr pos:start="173:13" pos:end="173:39"><name pos:start="173:13" pos:end="173:23">avih_height</name> <operator pos:start="173:25" pos:end="173:25">=</operator> <call pos:start="173:27" pos:end="173:39"><name pos:start="173:27" pos:end="173:35">avio_rl32</name><argument_list pos:start="173:36" pos:end="173:39">(<argument pos:start="173:37" pos:end="173:38"><expr pos:start="173:37" pos:end="173:38"><name pos:start="173:37" pos:end="173:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="177:13" pos:end="177:41"><expr pos:start="177:13" pos:end="177:40"><call pos:start="177:13" pos:end="177:40"><name pos:start="177:13" pos:end="177:21">avio_skip</name><argument_list pos:start="177:22" pos:end="177:40">(<argument pos:start="177:23" pos:end="177:24"><expr pos:start="177:23" pos:end="177:24"><name pos:start="177:23" pos:end="177:24">pb</name></expr></argument>, <argument pos:start="177:27" pos:end="177:39"><expr pos:start="177:27" pos:end="177:39"><name pos:start="177:27" pos:end="177:30">size</name> <operator pos:start="177:32" pos:end="177:32">-</operator> <literal type="number" pos:start="177:34" pos:end="177:35">10</literal> <operator pos:start="177:37" pos:end="177:37">*</operator> <literal type="number" pos:start="177:39" pos:end="177:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:39">case <expr pos:start="181:14" pos:end="181:38"><call pos:start="181:14" pos:end="181:38"><name pos:start="181:14" pos:end="181:18">MKTAG</name><argument_list pos:start="181:19" pos:end="181:38">(<argument pos:start="181:20" pos:end="181:22"><expr pos:start="181:20" pos:end="181:22"><literal type="char" pos:start="181:20" pos:end="181:22">'s'</literal></expr></argument>, <argument pos:start="181:25" pos:end="181:27"><expr pos:start="181:25" pos:end="181:27"><literal type="char" pos:start="181:25" pos:end="181:27">'t'</literal></expr></argument>, <argument pos:start="181:30" pos:end="181:32"><expr pos:start="181:30" pos:end="181:32"><literal type="char" pos:start="181:30" pos:end="181:32">'r'</literal></expr></argument>, <argument pos:start="181:35" pos:end="181:37"><expr pos:start="181:35" pos:end="181:37"><literal type="char" pos:start="181:35" pos:end="181:37">'h'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="183:13" pos:end="183:31">/* stream header */</comment>



            <expr_stmt pos:start="187:13" pos:end="187:36"><expr pos:start="187:13" pos:end="187:35"><name pos:start="187:13" pos:end="187:16">tag1</name>    <operator pos:start="187:21" pos:end="187:21">=</operator> <call pos:start="187:23" pos:end="187:35"><name pos:start="187:23" pos:end="187:31">avio_rl32</name><argument_list pos:start="187:32" pos:end="187:35">(<argument pos:start="187:33" pos:end="187:34"><expr pos:start="187:33" pos:end="187:34"><name pos:start="187:33" pos:end="187:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:36"><expr pos:start="189:13" pos:end="189:35"><name pos:start="189:13" pos:end="189:19">handler</name> <operator pos:start="189:21" pos:end="189:21">=</operator> <call pos:start="189:23" pos:end="189:35"><name pos:start="189:23" pos:end="189:31">avio_rl32</name><argument_list pos:start="189:32" pos:end="189:35">(<argument pos:start="189:33" pos:end="189:34"><expr pos:start="189:33" pos:end="189:34"><name pos:start="189:33" pos:end="189:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="189:38" pos:end="189:52">/* codec tag */</comment>



            <if_stmt pos:start="193:13" pos:end="221:13"><if pos:start="193:13" pos:end="199:13">if <condition pos:start="193:16" pos:end="193:50">(<expr pos:start="193:17" pos:end="193:49"><name pos:start="193:17" pos:end="193:20">tag1</name> <operator pos:start="193:22" pos:end="193:23">==</operator> <call pos:start="193:25" pos:end="193:49"><name pos:start="193:25" pos:end="193:29">MKTAG</name><argument_list pos:start="193:30" pos:end="193:49">(<argument pos:start="193:31" pos:end="193:33"><expr pos:start="193:31" pos:end="193:33"><literal type="char" pos:start="193:31" pos:end="193:33">'p'</literal></expr></argument>, <argument pos:start="193:36" pos:end="193:38"><expr pos:start="193:36" pos:end="193:38"><literal type="char" pos:start="193:36" pos:end="193:38">'a'</literal></expr></argument>, <argument pos:start="193:41" pos:end="193:43"><expr pos:start="193:41" pos:end="193:43"><literal type="char" pos:start="193:41" pos:end="193:43">'d'</literal></expr></argument>, <argument pos:start="193:46" pos:end="193:48"><expr pos:start="193:46" pos:end="193:48"><literal type="char" pos:start="193:46" pos:end="193:48">'s'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="193:52" pos:end="199:13">{<block_content pos:start="195:17" pos:end="197:22">

                <expr_stmt pos:start="195:17" pos:end="195:40"><expr pos:start="195:17" pos:end="195:39"><call pos:start="195:17" pos:end="195:39"><name pos:start="195:17" pos:end="195:25">avio_skip</name><argument_list pos:start="195:26" pos:end="195:39">(<argument pos:start="195:27" pos:end="195:28"><expr pos:start="195:27" pos:end="195:28"><name pos:start="195:27" pos:end="195:28">pb</name></expr></argument>, <argument pos:start="195:31" pos:end="195:38"><expr pos:start="195:31" pos:end="195:38"><name pos:start="195:31" pos:end="195:34">size</name> <operator pos:start="195:36" pos:end="195:36">-</operator> <literal type="number" pos:start="195:38" pos:end="195:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="197:17" pos:end="197:22">break;</break>

            </block_content>}</block></if> <else pos:start="199:15" pos:end="221:13">else <block pos:start="199:20" pos:end="221:13">{<block_content pos:start="201:17" pos:end="219:36">

                <expr_stmt pos:start="201:17" pos:end="201:31"><expr pos:start="201:17" pos:end="201:30"><name pos:start="201:17" pos:end="201:28">stream_index</name><operator pos:start="201:29" pos:end="201:30">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:50"><expr pos:start="203:17" pos:end="203:49"><name pos:start="203:17" pos:end="203:18">st</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <call pos:start="203:22" pos:end="203:49"><name pos:start="203:22" pos:end="203:40">avformat_new_stream</name><argument_list pos:start="203:41" pos:end="203:49">(<argument pos:start="203:42" pos:end="203:42"><expr pos:start="203:42" pos:end="203:42"><name pos:start="203:42" pos:end="203:42">s</name></expr></argument>, <argument pos:start="203:45" pos:end="203:48"><expr pos:start="203:45" pos:end="203:48"><name pos:start="203:45" pos:end="203:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="205:17" pos:end="207:30"><if pos:start="205:17" pos:end="207:30">if <condition pos:start="205:20" pos:end="205:24">(<expr pos:start="205:21" pos:end="205:23"><operator pos:start="205:21" pos:end="205:21">!</operator><name pos:start="205:22" pos:end="205:23">st</name></expr>)</condition><block type="pseudo" pos:start="207:21" pos:end="207:30"><block_content pos:start="207:21" pos:end="207:30">

                    <goto pos:start="207:21" pos:end="207:30">goto <name pos:start="207:26" pos:end="207:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <expr_stmt pos:start="211:17" pos:end="211:38"><expr pos:start="211:17" pos:end="211:37"><name pos:start="211:17" pos:end="211:22"><name pos:start="211:17" pos:end="211:18">st</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:22">id</name></name> <operator pos:start="211:24" pos:end="211:24">=</operator> <name pos:start="211:26" pos:end="211:37">stream_index</name></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:55"><expr pos:start="213:17" pos:end="213:54"><name pos:start="213:17" pos:end="213:19">ast</name>    <operator pos:start="213:24" pos:end="213:24">=</operator> <call pos:start="213:26" pos:end="213:54"><name pos:start="213:26" pos:end="213:35">av_mallocz</name><argument_list pos:start="213:36" pos:end="213:54">(<argument pos:start="213:37" pos:end="213:53"><expr pos:start="213:37" pos:end="213:53"><sizeof pos:start="213:37" pos:end="213:53">sizeof<argument_list pos:start="213:43" pos:end="213:53">(<argument pos:start="213:44" pos:end="213:52"><expr pos:start="213:44" pos:end="213:52"><name pos:start="213:44" pos:end="213:52">AVIStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="215:17" pos:end="217:30"><if pos:start="215:17" pos:end="217:30">if <condition pos:start="215:20" pos:end="215:25">(<expr pos:start="215:21" pos:end="215:24"><operator pos:start="215:21" pos:end="215:21">!</operator><name pos:start="215:22" pos:end="215:24">ast</name></expr>)</condition><block type="pseudo" pos:start="217:21" pos:end="217:30"><block_content pos:start="217:21" pos:end="217:30">

                    <goto pos:start="217:21" pos:end="217:30">goto <name pos:start="217:26" pos:end="217:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:36"><expr pos:start="219:17" pos:end="219:35"><name pos:start="219:17" pos:end="219:29"><name pos:start="219:17" pos:end="219:18">st</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:29">priv_data</name></name> <operator pos:start="219:31" pos:end="219:31">=</operator> <name pos:start="219:33" pos:end="219:35">ast</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="223:13" pos:end="227:64"><if pos:start="223:13" pos:end="227:64">if <condition pos:start="223:16" pos:end="223:32">(<expr pos:start="223:17" pos:end="223:31"><name pos:start="223:17" pos:end="223:31">amv_file_format</name></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="227:64"><block_content pos:start="225:17" pos:end="227:64">

                <expr_stmt pos:start="225:17" pos:end="227:64"><expr pos:start="225:17" pos:end="227:63"><name pos:start="225:17" pos:end="225:20">tag1</name> <operator pos:start="225:22" pos:end="225:22">=</operator> <ternary pos:start="225:24" pos:end="227:63"><condition pos:start="225:24" pos:end="225:37"><expr pos:start="225:24" pos:end="225:35"><name pos:start="225:24" pos:end="225:35">stream_index</name></expr> ?</condition><then pos:start="225:39" pos:end="225:63"> <expr pos:start="225:39" pos:end="225:63"><call pos:start="225:39" pos:end="225:63"><name pos:start="225:39" pos:end="225:43">MKTAG</name><argument_list pos:start="225:44" pos:end="225:63">(<argument pos:start="225:45" pos:end="225:47"><expr pos:start="225:45" pos:end="225:47"><literal type="char" pos:start="225:45" pos:end="225:47">'a'</literal></expr></argument>, <argument pos:start="225:50" pos:end="225:52"><expr pos:start="225:50" pos:end="225:52"><literal type="char" pos:start="225:50" pos:end="225:52">'u'</literal></expr></argument>, <argument pos:start="225:55" pos:end="225:57"><expr pos:start="225:55" pos:end="225:57"><literal type="char" pos:start="225:55" pos:end="225:57">'d'</literal></expr></argument>, <argument pos:start="225:60" pos:end="225:62"><expr pos:start="225:60" pos:end="225:62"><literal type="char" pos:start="225:60" pos:end="225:62">'s'</literal></expr></argument>)</argument_list></call></expr>

                                    </then><else pos:start="227:37" pos:end="227:63">: <expr pos:start="227:39" pos:end="227:63"><call pos:start="227:39" pos:end="227:63"><name pos:start="227:39" pos:end="227:43">MKTAG</name><argument_list pos:start="227:44" pos:end="227:63">(<argument pos:start="227:45" pos:end="227:47"><expr pos:start="227:45" pos:end="227:47"><literal type="char" pos:start="227:45" pos:end="227:47">'v'</literal></expr></argument>, <argument pos:start="227:50" pos:end="227:52"><expr pos:start="227:50" pos:end="227:52"><literal type="char" pos:start="227:50" pos:end="227:52">'i'</literal></expr></argument>, <argument pos:start="227:55" pos:end="227:57"><expr pos:start="227:55" pos:end="227:57"><literal type="char" pos:start="227:55" pos:end="227:57">'d'</literal></expr></argument>, <argument pos:start="227:60" pos:end="227:62"><expr pos:start="227:60" pos:end="227:62"><literal type="char" pos:start="227:60" pos:end="227:62">'s'</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="231:13" pos:end="231:40"><expr pos:start="231:13" pos:end="231:39"><call pos:start="231:13" pos:end="231:39"><name pos:start="231:13" pos:end="231:21">print_tag</name><argument_list pos:start="231:22" pos:end="231:39">(<argument pos:start="231:23" pos:end="231:28"><expr pos:start="231:23" pos:end="231:28"><literal type="string" pos:start="231:23" pos:end="231:28">"strh"</literal></expr></argument>, <argument pos:start="231:31" pos:end="231:34"><expr pos:start="231:31" pos:end="231:34"><name pos:start="231:31" pos:end="231:34">tag1</name></expr></argument>, <argument pos:start="231:37" pos:end="231:38"><expr pos:start="231:37" pos:end="231:38"><operator pos:start="231:37" pos:end="231:37">-</operator><literal type="number" pos:start="231:38" pos:end="231:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="235:13" pos:end="321:13"><if pos:start="235:13" pos:end="321:13">if <condition pos:start="235:16" pos:end="237:50">(<expr pos:start="235:17" pos:end="237:49"><name pos:start="235:17" pos:end="235:20">tag1</name> <operator pos:start="235:22" pos:end="235:23">==</operator> <call pos:start="235:25" pos:end="235:49"><name pos:start="235:25" pos:end="235:29">MKTAG</name><argument_list pos:start="235:30" pos:end="235:49">(<argument pos:start="235:31" pos:end="235:33"><expr pos:start="235:31" pos:end="235:33"><literal type="char" pos:start="235:31" pos:end="235:33">'i'</literal></expr></argument>, <argument pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><literal type="char" pos:start="235:36" pos:end="235:38">'a'</literal></expr></argument>, <argument pos:start="235:41" pos:end="235:43"><expr pos:start="235:41" pos:end="235:43"><literal type="char" pos:start="235:41" pos:end="235:43">'v'</literal></expr></argument>, <argument pos:start="235:46" pos:end="235:48"><expr pos:start="235:46" pos:end="235:48"><literal type="char" pos:start="235:46" pos:end="235:48">'s'</literal></expr></argument>)</argument_list></call> <operator pos:start="235:51" pos:end="235:52">||</operator>

                <name pos:start="237:17" pos:end="237:20">tag1</name> <operator pos:start="237:22" pos:end="237:23">==</operator> <call pos:start="237:25" pos:end="237:49"><name pos:start="237:25" pos:end="237:29">MKTAG</name><argument_list pos:start="237:30" pos:end="237:49">(<argument pos:start="237:31" pos:end="237:33"><expr pos:start="237:31" pos:end="237:33"><literal type="char" pos:start="237:31" pos:end="237:33">'i'</literal></expr></argument>, <argument pos:start="237:36" pos:end="237:38"><expr pos:start="237:36" pos:end="237:38"><literal type="char" pos:start="237:36" pos:end="237:38">'v'</literal></expr></argument>, <argument pos:start="237:41" pos:end="237:43"><expr pos:start="237:41" pos:end="237:43"><literal type="char" pos:start="237:41" pos:end="237:43">'a'</literal></expr></argument>, <argument pos:start="237:46" pos:end="237:48"><expr pos:start="237:46" pos:end="237:48"><literal type="char" pos:start="237:46" pos:end="237:48">'s'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="237:52" pos:end="321:13">{<block_content pos:start="239:17" pos:end="319:22">

                <decl_stmt pos:start="239:17" pos:end="239:31"><decl pos:start="239:17" pos:end="239:30"><type pos:start="239:17" pos:end="239:23"><name pos:start="239:17" pos:end="239:23">int64_t</name></type> <name pos:start="239:25" pos:end="239:30">dv_dur</name></decl>;</decl_stmt>



                <comment type="block" pos:start="243:17" pos:end="245:68">/* After some consideration -- I don't think we

                 * have to support anything but DV in type1 AVIs. */</comment>

                <if_stmt pos:start="247:17" pos:end="249:30"><if pos:start="247:17" pos:end="249:30">if <condition pos:start="247:20" pos:end="247:39">(<expr pos:start="247:21" pos:end="247:38"><name pos:start="247:21" pos:end="247:33"><name pos:start="247:21" pos:end="247:21">s</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:33">nb_streams</name></name> <operator pos:start="247:35" pos:end="247:36">!=</operator> <literal type="number" pos:start="247:38" pos:end="247:38">1</literal></expr>)</condition><block type="pseudo" pos:start="249:21" pos:end="249:30"><block_content pos:start="249:21" pos:end="249:30">

                    <goto pos:start="249:21" pos:end="249:30">goto <name pos:start="249:26" pos:end="249:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <if_stmt pos:start="253:17" pos:end="259:30"><if pos:start="253:17" pos:end="259:30">if <condition pos:start="253:20" pos:end="257:57">(<expr pos:start="253:21" pos:end="257:56"><name pos:start="253:21" pos:end="253:27">handler</name> <operator pos:start="253:29" pos:end="253:30">!=</operator> <call pos:start="253:32" pos:end="253:56"><name pos:start="253:32" pos:end="253:36">MKTAG</name><argument_list pos:start="253:37" pos:end="253:56">(<argument pos:start="253:38" pos:end="253:40"><expr pos:start="253:38" pos:end="253:40"><literal type="char" pos:start="253:38" pos:end="253:40">'d'</literal></expr></argument>, <argument pos:start="253:43" pos:end="253:45"><expr pos:start="253:43" pos:end="253:45"><literal type="char" pos:start="253:43" pos:end="253:45">'v'</literal></expr></argument>, <argument pos:start="253:48" pos:end="253:50"><expr pos:start="253:48" pos:end="253:50"><literal type="char" pos:start="253:48" pos:end="253:50">'s'</literal></expr></argument>, <argument pos:start="253:53" pos:end="253:55"><expr pos:start="253:53" pos:end="253:55"><literal type="char" pos:start="253:53" pos:end="253:55">'d'</literal></expr></argument>)</argument_list></call> <operator pos:start="253:58" pos:end="253:59">&amp;&amp;</operator>

                    <name pos:start="255:21" pos:end="255:27">handler</name> <operator pos:start="255:29" pos:end="255:30">!=</operator> <call pos:start="255:32" pos:end="255:56"><name pos:start="255:32" pos:end="255:36">MKTAG</name><argument_list pos:start="255:37" pos:end="255:56">(<argument pos:start="255:38" pos:end="255:40"><expr pos:start="255:38" pos:end="255:40"><literal type="char" pos:start="255:38" pos:end="255:40">'d'</literal></expr></argument>, <argument pos:start="255:43" pos:end="255:45"><expr pos:start="255:43" pos:end="255:45"><literal type="char" pos:start="255:43" pos:end="255:45">'v'</literal></expr></argument>, <argument pos:start="255:48" pos:end="255:50"><expr pos:start="255:48" pos:end="255:50"><literal type="char" pos:start="255:48" pos:end="255:50">'h'</literal></expr></argument>, <argument pos:start="255:53" pos:end="255:55"><expr pos:start="255:53" pos:end="255:55"><literal type="char" pos:start="255:53" pos:end="255:55">'d'</literal></expr></argument>)</argument_list></call> <operator pos:start="255:58" pos:end="255:59">&amp;&amp;</operator>

                    <name pos:start="257:21" pos:end="257:27">handler</name> <operator pos:start="257:29" pos:end="257:30">!=</operator> <call pos:start="257:32" pos:end="257:56"><name pos:start="257:32" pos:end="257:36">MKTAG</name><argument_list pos:start="257:37" pos:end="257:56">(<argument pos:start="257:38" pos:end="257:40"><expr pos:start="257:38" pos:end="257:40"><literal type="char" pos:start="257:38" pos:end="257:40">'d'</literal></expr></argument>, <argument pos:start="257:43" pos:end="257:45"><expr pos:start="257:43" pos:end="257:45"><literal type="char" pos:start="257:43" pos:end="257:45">'v'</literal></expr></argument>, <argument pos:start="257:48" pos:end="257:50"><expr pos:start="257:48" pos:end="257:50"><literal type="char" pos:start="257:48" pos:end="257:50">'s'</literal></expr></argument>, <argument pos:start="257:53" pos:end="257:55"><expr pos:start="257:53" pos:end="257:55"><literal type="char" pos:start="257:53" pos:end="257:55">'l'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="259:21" pos:end="259:30"><block_content pos:start="259:21" pos:end="259:30">

                    <goto pos:start="259:21" pos:end="259:30">goto <name pos:start="259:26" pos:end="259:29">fail</name>;</goto></block_content></block></if></if_stmt>



                <expr_stmt pos:start="263:17" pos:end="263:47"><expr pos:start="263:17" pos:end="263:46"><name pos:start="263:17" pos:end="263:19">ast</name> <operator pos:start="263:21" pos:end="263:21">=</operator> <name pos:start="263:23" pos:end="263:35"><name pos:start="263:23" pos:end="263:23">s</name><operator pos:start="263:24" pos:end="263:25">-&gt;</operator><name pos:start="263:26" pos:end="263:32">streams</name><index pos:start="263:33" pos:end="263:35">[<expr pos:start="263:34" pos:end="263:34"><literal type="number" pos:start="263:34" pos:end="263:34">0</literal></expr>]</index></name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:46">priv_data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:59"><expr pos:start="265:17" pos:end="265:58"><call pos:start="265:17" pos:end="265:58"><name pos:start="265:17" pos:end="265:24">av_freep</name><argument_list pos:start="265:25" pos:end="265:58">(<argument pos:start="265:26" pos:end="265:57"><expr pos:start="265:26" pos:end="265:57"><operator pos:start="265:26" pos:end="265:26">&amp;</operator><name pos:start="265:27" pos:end="265:39"><name pos:start="265:27" pos:end="265:27">s</name><operator pos:start="265:28" pos:end="265:29">-&gt;</operator><name pos:start="265:30" pos:end="265:36">streams</name><index pos:start="265:37" pos:end="265:39">[<expr pos:start="265:38" pos:end="265:38"><literal type="number" pos:start="265:38" pos:end="265:38">0</literal></expr>]</index></name><operator pos:start="265:40" pos:end="265:41">-&gt;</operator><name pos:start="265:42" pos:end="265:57"><name pos:start="265:42" pos:end="265:46">codec</name><operator pos:start="265:47" pos:end="265:48">-&gt;</operator><name pos:start="265:49" pos:end="265:57">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:48"><expr pos:start="267:17" pos:end="267:47"><call pos:start="267:17" pos:end="267:47"><name pos:start="267:17" pos:end="267:24">av_freep</name><argument_list pos:start="267:25" pos:end="267:47">(<argument pos:start="267:26" pos:end="267:46"><expr pos:start="267:26" pos:end="267:46"><operator pos:start="267:26" pos:end="267:26">&amp;</operator><name pos:start="267:27" pos:end="267:39"><name pos:start="267:27" pos:end="267:27">s</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:36">streams</name><index pos:start="267:37" pos:end="267:39">[<expr pos:start="267:38" pos:end="267:38"><literal type="number" pos:start="267:38" pos:end="267:38">0</literal></expr>]</index></name><operator pos:start="267:40" pos:end="267:41">-&gt;</operator><name pos:start="267:42" pos:end="267:46">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:47"><expr pos:start="269:17" pos:end="269:46"><call pos:start="269:17" pos:end="269:46"><name pos:start="269:17" pos:end="269:24">av_freep</name><argument_list pos:start="269:25" pos:end="269:46">(<argument pos:start="269:26" pos:end="269:45"><expr pos:start="269:26" pos:end="269:45"><operator pos:start="269:26" pos:end="269:26">&amp;</operator><name pos:start="269:27" pos:end="269:39"><name pos:start="269:27" pos:end="269:27">s</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:36">streams</name><index pos:start="269:37" pos:end="269:39">[<expr pos:start="269:38" pos:end="269:38"><literal type="number" pos:start="269:38" pos:end="269:38">0</literal></expr>]</index></name><operator pos:start="269:40" pos:end="269:41">-&gt;</operator><name pos:start="269:42" pos:end="269:45">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:41"><expr pos:start="271:17" pos:end="271:40"><call pos:start="271:17" pos:end="271:40"><name pos:start="271:17" pos:end="271:24">av_freep</name><argument_list pos:start="271:25" pos:end="271:40">(<argument pos:start="271:26" pos:end="271:39"><expr pos:start="271:26" pos:end="271:39"><operator pos:start="271:26" pos:end="271:26">&amp;</operator><name pos:start="271:27" pos:end="271:39"><name pos:start="271:27" pos:end="271:27">s</name><operator pos:start="271:28" pos:end="271:29">-&gt;</operator><name pos:start="271:30" pos:end="271:36">streams</name><index pos:start="271:37" pos:end="271:39">[<expr pos:start="271:38" pos:end="271:38"><literal type="number" pos:start="271:38" pos:end="271:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:34"><expr pos:start="273:17" pos:end="273:33"><name pos:start="273:17" pos:end="273:29"><name pos:start="273:17" pos:end="273:17">s</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:29">nb_streams</name></name> <operator pos:start="273:31" pos:end="273:31">=</operator> <literal type="number" pos:start="273:33" pos:end="273:33">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="275:17" pos:end="285:30"><if pos:start="275:17" pos:end="283:17">if <condition pos:start="275:20" pos:end="275:38">(<expr pos:start="275:21" pos:end="275:37"><name pos:start="275:21" pos:end="275:37">CONFIG_DV_DEMUXER</name></expr>)</condition> <block pos:start="275:40" pos:end="283:17">{<block_content pos:start="277:21" pos:end="281:34">

                    <expr_stmt pos:start="277:21" pos:end="277:60"><expr pos:start="277:21" pos:end="277:59"><name pos:start="277:21" pos:end="277:33"><name pos:start="277:21" pos:end="277:23">avi</name><operator pos:start="277:24" pos:end="277:25">-&gt;</operator><name pos:start="277:26" pos:end="277:33">dv_demux</name></name> <operator pos:start="277:35" pos:end="277:35">=</operator> <call pos:start="277:37" pos:end="277:59"><name pos:start="277:37" pos:end="277:56">avpriv_dv_init_demux</name><argument_list pos:start="277:57" pos:end="277:59">(<argument pos:start="277:58" pos:end="277:58"><expr pos:start="277:58" pos:end="277:58"><name pos:start="277:58" pos:end="277:58">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="279:21" pos:end="281:34"><if pos:start="279:21" pos:end="281:34">if <condition pos:start="279:24" pos:end="279:39">(<expr pos:start="279:25" pos:end="279:38"><operator pos:start="279:25" pos:end="279:25">!</operator><name pos:start="279:26" pos:end="279:38"><name pos:start="279:26" pos:end="279:28">avi</name><operator pos:start="279:29" pos:end="279:30">-&gt;</operator><name pos:start="279:31" pos:end="279:38">dv_demux</name></name></expr>)</condition><block type="pseudo" pos:start="281:25" pos:end="281:34"><block_content pos:start="281:25" pos:end="281:34">

                        <goto pos:start="281:25" pos:end="281:34">goto <name pos:start="281:30" pos:end="281:33">fail</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="283:19" pos:end="285:30">else<block type="pseudo" pos:start="285:21" pos:end="285:30"><block_content pos:start="285:21" pos:end="285:30">

                    <goto pos:start="285:21" pos:end="285:30">goto <name pos:start="285:26" pos:end="285:29">fail</name>;</goto></block_content></block></else></if_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:47"><expr pos:start="287:17" pos:end="287:46"><name pos:start="287:17" pos:end="287:29"><name pos:start="287:17" pos:end="287:17">s</name><operator pos:start="287:18" pos:end="287:19">-&gt;</operator><name pos:start="287:20" pos:end="287:26">streams</name><index pos:start="287:27" pos:end="287:29">[<expr pos:start="287:28" pos:end="287:28"><literal type="number" pos:start="287:28" pos:end="287:28">0</literal></expr>]</index></name><operator pos:start="287:30" pos:end="287:31">-&gt;</operator><name pos:start="287:32" pos:end="287:40">priv_data</name> <operator pos:start="287:42" pos:end="287:42">=</operator> <name pos:start="287:44" pos:end="287:46">ast</name></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:37"><expr pos:start="289:17" pos:end="289:36"><call pos:start="289:17" pos:end="289:36"><name pos:start="289:17" pos:end="289:25">avio_skip</name><argument_list pos:start="289:26" pos:end="289:36">(<argument pos:start="289:27" pos:end="289:28"><expr pos:start="289:27" pos:end="289:28"><name pos:start="289:27" pos:end="289:28">pb</name></expr></argument>, <argument pos:start="289:31" pos:end="289:35"><expr pos:start="289:31" pos:end="289:35"><literal type="number" pos:start="289:31" pos:end="289:31">3</literal> <operator pos:start="289:33" pos:end="289:33">*</operator> <literal type="number" pos:start="289:35" pos:end="289:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:43"><expr pos:start="291:17" pos:end="291:42"><name pos:start="291:17" pos:end="291:26"><name pos:start="291:17" pos:end="291:19">ast</name><operator pos:start="291:20" pos:end="291:21">-&gt;</operator><name pos:start="291:22" pos:end="291:26">scale</name></name> <operator pos:start="291:28" pos:end="291:28">=</operator> <call pos:start="291:30" pos:end="291:42"><name pos:start="291:30" pos:end="291:38">avio_rl32</name><argument_list pos:start="291:39" pos:end="291:42">(<argument pos:start="291:40" pos:end="291:41"><expr pos:start="291:40" pos:end="291:41"><name pos:start="291:40" pos:end="291:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:43"><expr pos:start="293:17" pos:end="293:42"><name pos:start="293:17" pos:end="293:25"><name pos:start="293:17" pos:end="293:19">ast</name><operator pos:start="293:20" pos:end="293:21">-&gt;</operator><name pos:start="293:22" pos:end="293:25">rate</name></name>  <operator pos:start="293:28" pos:end="293:28">=</operator> <call pos:start="293:30" pos:end="293:42"><name pos:start="293:30" pos:end="293:38">avio_rl32</name><argument_list pos:start="293:39" pos:end="293:42">(<argument pos:start="293:40" pos:end="293:41"><expr pos:start="293:40" pos:end="293:41"><name pos:start="293:40" pos:end="293:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="295:17" pos:end="295:33"><expr pos:start="295:17" pos:end="295:32"><call pos:start="295:17" pos:end="295:32"><name pos:start="295:17" pos:end="295:25">avio_skip</name><argument_list pos:start="295:26" pos:end="295:32">(<argument pos:start="295:27" pos:end="295:28"><expr pos:start="295:27" pos:end="295:28"><name pos:start="295:27" pos:end="295:28">pb</name></expr></argument>, <argument pos:start="295:31" pos:end="295:31"><expr pos:start="295:31" pos:end="295:31"><literal type="number" pos:start="295:31" pos:end="295:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="295:36" pos:end="295:51">/* start time */</comment>



                <expr_stmt pos:start="299:17" pos:end="299:39"><expr pos:start="299:17" pos:end="299:38"><name pos:start="299:17" pos:end="299:22">dv_dur</name> <operator pos:start="299:24" pos:end="299:24">=</operator> <call pos:start="299:26" pos:end="299:38"><name pos:start="299:26" pos:end="299:34">avio_rl32</name><argument_list pos:start="299:35" pos:end="299:38">(<argument pos:start="299:36" pos:end="299:37"><expr pos:start="299:36" pos:end="299:37"><name pos:start="299:36" pos:end="299:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="301:17" pos:end="307:17"><if pos:start="301:17" pos:end="307:17">if <condition pos:start="301:20" pos:end="301:66">(<expr pos:start="301:21" pos:end="301:65"><name pos:start="301:21" pos:end="301:30"><name pos:start="301:21" pos:end="301:23">ast</name><operator pos:start="301:24" pos:end="301:25">-&gt;</operator><name pos:start="301:26" pos:end="301:30">scale</name></name> <operator pos:start="301:32" pos:end="301:32">&gt;</operator> <literal type="number" pos:start="301:34" pos:end="301:34">0</literal> <operator pos:start="301:36" pos:end="301:37">&amp;&amp;</operator> <name pos:start="301:39" pos:end="301:47"><name pos:start="301:39" pos:end="301:41">ast</name><operator pos:start="301:42" pos:end="301:43">-&gt;</operator><name pos:start="301:44" pos:end="301:47">rate</name></name> <operator pos:start="301:49" pos:end="301:49">&gt;</operator> <literal type="number" pos:start="301:51" pos:end="301:51">0</literal> <operator pos:start="301:53" pos:end="301:54">&amp;&amp;</operator> <name pos:start="301:56" pos:end="301:61">dv_dur</name> <operator pos:start="301:63" pos:end="301:63">&gt;</operator> <literal type="number" pos:start="301:65" pos:end="301:65">0</literal></expr>)</condition> <block pos:start="301:68" pos:end="307:17">{<block_content pos:start="303:21" pos:end="305:76">

                    <expr_stmt pos:start="303:21" pos:end="303:47"><expr pos:start="303:21" pos:end="303:46"><name pos:start="303:21" pos:end="303:26">dv_dur</name>     <operator pos:start="303:32" pos:end="303:33">*=</operator> <name pos:start="303:35" pos:end="303:46">AV_TIME_BASE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="305:21" pos:end="305:76"><expr pos:start="305:21" pos:end="305:75"><name pos:start="305:21" pos:end="305:31"><name pos:start="305:21" pos:end="305:21">s</name><operator pos:start="305:22" pos:end="305:23">-&gt;</operator><name pos:start="305:24" pos:end="305:31">duration</name></name> <operator pos:start="305:33" pos:end="305:33">=</operator> <call pos:start="305:35" pos:end="305:75"><name pos:start="305:35" pos:end="305:44">av_rescale</name><argument_list pos:start="305:45" pos:end="305:75">(<argument pos:start="305:46" pos:end="305:51"><expr pos:start="305:46" pos:end="305:51"><name pos:start="305:46" pos:end="305:51">dv_dur</name></expr></argument>, <argument pos:start="305:54" pos:end="305:63"><expr pos:start="305:54" pos:end="305:63"><name pos:start="305:54" pos:end="305:63"><name pos:start="305:54" pos:end="305:56">ast</name><operator pos:start="305:57" pos:end="305:58">-&gt;</operator><name pos:start="305:59" pos:end="305:63">scale</name></name></expr></argument>, <argument pos:start="305:66" pos:end="305:74"><expr pos:start="305:66" pos:end="305:74"><name pos:start="305:66" pos:end="305:74"><name pos:start="305:66" pos:end="305:68">ast</name><operator pos:start="305:69" pos:end="305:70">-&gt;</operator><name pos:start="305:71" pos:end="305:74">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="309:17" pos:end="311:57">/* else, leave duration alone; timing estimation in utils.c

                 * will make a guess based on bitrate. */</comment>



                <expr_stmt pos:start="315:17" pos:end="315:49"><expr pos:start="315:17" pos:end="315:48"><name pos:start="315:17" pos:end="315:28">stream_index</name> <operator pos:start="315:30" pos:end="315:30">=</operator> <name pos:start="315:32" pos:end="315:44"><name pos:start="315:32" pos:end="315:32">s</name><operator pos:start="315:33" pos:end="315:34">-&gt;</operator><name pos:start="315:35" pos:end="315:44">nb_streams</name></name> <operator pos:start="315:46" pos:end="315:46">-</operator> <literal type="number" pos:start="315:48" pos:end="315:48">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:44"><expr pos:start="317:17" pos:end="317:43"><call pos:start="317:17" pos:end="317:43"><name pos:start="317:17" pos:end="317:25">avio_skip</name><argument_list pos:start="317:26" pos:end="317:43">(<argument pos:start="317:27" pos:end="317:28"><expr pos:start="317:27" pos:end="317:28"><name pos:start="317:27" pos:end="317:28">pb</name></expr></argument>, <argument pos:start="317:31" pos:end="317:42"><expr pos:start="317:31" pos:end="317:42"><name pos:start="317:31" pos:end="317:34">size</name> <operator pos:start="317:36" pos:end="317:36">-</operator> <literal type="number" pos:start="317:38" pos:end="317:38">9</literal> <operator pos:start="317:40" pos:end="317:40">*</operator> <literal type="number" pos:start="317:42" pos:end="317:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="319:17" pos:end="319:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="325:13" pos:end="325:49"><expr pos:start="325:13" pos:end="325:48"><call pos:start="325:13" pos:end="325:48"><name pos:start="325:13" pos:end="325:18">assert</name><argument_list pos:start="325:19" pos:end="325:48">(<argument pos:start="325:20" pos:end="325:47"><expr pos:start="325:20" pos:end="325:47"><name pos:start="325:20" pos:end="325:31">stream_index</name> <operator pos:start="325:33" pos:end="325:33">&lt;</operator> <name pos:start="325:35" pos:end="325:47"><name pos:start="325:35" pos:end="325:35">s</name><operator pos:start="325:36" pos:end="325:37">-&gt;</operator><name pos:start="325:38" pos:end="325:47">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:50"><expr pos:start="327:13" pos:end="327:49"><name pos:start="327:13" pos:end="327:39"><name pos:start="327:13" pos:end="327:14">st</name><operator pos:start="327:15" pos:end="327:16">-&gt;</operator><name pos:start="327:17" pos:end="327:21">codec</name><operator pos:start="327:22" pos:end="327:23">-&gt;</operator><name pos:start="327:24" pos:end="327:39">stream_codec_tag</name></name> <operator pos:start="327:41" pos:end="327:41">=</operator> <name pos:start="327:43" pos:end="327:49">handler</name></expr>;</expr_stmt>



            <expr_stmt pos:start="331:13" pos:end="331:26"><expr pos:start="331:13" pos:end="331:25"><call pos:start="331:13" pos:end="331:25"><name pos:start="331:13" pos:end="331:21">avio_rl32</name><argument_list pos:start="331:22" pos:end="331:25">(<argument pos:start="331:23" pos:end="331:24"><expr pos:start="331:23" pos:end="331:24"><name pos:start="331:23" pos:end="331:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="331:28" pos:end="331:38">/* flags */</comment>

            <expr_stmt pos:start="333:13" pos:end="333:26"><expr pos:start="333:13" pos:end="333:25"><call pos:start="333:13" pos:end="333:25"><name pos:start="333:13" pos:end="333:21">avio_rl16</name><argument_list pos:start="333:22" pos:end="333:25">(<argument pos:start="333:23" pos:end="333:24"><expr pos:start="333:23" pos:end="333:24"><name pos:start="333:23" pos:end="333:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="333:28" pos:end="333:41">/* priority */</comment>

            <expr_stmt pos:start="335:13" pos:end="335:26"><expr pos:start="335:13" pos:end="335:25"><call pos:start="335:13" pos:end="335:25"><name pos:start="335:13" pos:end="335:21">avio_rl16</name><argument_list pos:start="335:22" pos:end="335:25">(<argument pos:start="335:23" pos:end="335:24"><expr pos:start="335:23" pos:end="335:24"><name pos:start="335:23" pos:end="335:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="335:28" pos:end="335:41">/* language */</comment>

            <expr_stmt pos:start="337:13" pos:end="337:26"><expr pos:start="337:13" pos:end="337:25"><call pos:start="337:13" pos:end="337:25"><name pos:start="337:13" pos:end="337:21">avio_rl32</name><argument_list pos:start="337:22" pos:end="337:25">(<argument pos:start="337:23" pos:end="337:24"><expr pos:start="337:23" pos:end="337:24"><name pos:start="337:23" pos:end="337:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="337:28" pos:end="337:46">/* initial frame */</comment>

            <expr_stmt pos:start="339:13" pos:end="339:39"><expr pos:start="339:13" pos:end="339:38"><name pos:start="339:13" pos:end="339:22"><name pos:start="339:13" pos:end="339:15">ast</name><operator pos:start="339:16" pos:end="339:17">-&gt;</operator><name pos:start="339:18" pos:end="339:22">scale</name></name> <operator pos:start="339:24" pos:end="339:24">=</operator> <call pos:start="339:26" pos:end="339:38"><name pos:start="339:26" pos:end="339:34">avio_rl32</name><argument_list pos:start="339:35" pos:end="339:38">(<argument pos:start="339:36" pos:end="339:37"><expr pos:start="339:36" pos:end="339:37"><name pos:start="339:36" pos:end="339:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:39"><expr pos:start="341:13" pos:end="341:38"><name pos:start="341:13" pos:end="341:21"><name pos:start="341:13" pos:end="341:15">ast</name><operator pos:start="341:16" pos:end="341:17">-&gt;</operator><name pos:start="341:18" pos:end="341:21">rate</name></name>  <operator pos:start="341:24" pos:end="341:24">=</operator> <call pos:start="341:26" pos:end="341:38"><name pos:start="341:26" pos:end="341:34">avio_rl32</name><argument_list pos:start="341:35" pos:end="341:38">(<argument pos:start="341:36" pos:end="341:37"><expr pos:start="341:36" pos:end="341:37"><name pos:start="341:36" pos:end="341:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="343:13" pos:end="369:13"><if pos:start="343:13" pos:end="369:13">if <condition pos:start="343:16" pos:end="343:43">(<expr pos:start="343:17" pos:end="343:42"><operator pos:start="343:17" pos:end="343:17">!</operator><operator pos:start="343:18" pos:end="343:18">(</operator><name pos:start="343:19" pos:end="343:28"><name pos:start="343:19" pos:end="343:21">ast</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:28">scale</name></name> <operator pos:start="343:30" pos:end="343:31">&amp;&amp;</operator> <name pos:start="343:33" pos:end="343:41"><name pos:start="343:33" pos:end="343:35">ast</name><operator pos:start="343:36" pos:end="343:37">-&gt;</operator><name pos:start="343:38" pos:end="343:41">rate</name></name><operator pos:start="343:42" pos:end="343:42">)</operator></expr>)</condition> <block pos:start="343:45" pos:end="369:13">{<block_content pos:start="345:17" pos:end="367:17">

                <expr_stmt pos:start="345:17" pos:end="353:34"><expr pos:start="345:17" pos:end="353:33"><call pos:start="345:17" pos:end="353:33"><name pos:start="345:17" pos:end="345:22">av_log</name><argument_list pos:start="345:23" pos:end="353:33">(<argument pos:start="345:24" pos:end="345:24"><expr pos:start="345:24" pos:end="345:24"><name pos:start="345:24" pos:end="345:24">s</name></expr></argument>, <argument pos:start="345:27" pos:end="345:40"><expr pos:start="345:27" pos:end="345:40"><name pos:start="345:27" pos:end="345:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="347:24" pos:end="349:77"><expr pos:start="347:24" pos:end="349:77"><literal type="string" pos:start="347:24" pos:end="347:40">"scale/rate is %"</literal><name pos:start="347:41" pos:end="347:46">PRIu32</name><literal type="string" pos:start="347:47" pos:end="347:50">"/%"</literal><name pos:start="347:51" pos:end="347:56">PRIu32</name><literal type="string" pos:start="347:57" pos:end="347:77">" which is invalid. "</literal>

                       <literal type="string" pos:start="349:24" pos:end="349:77">"(This file has been generated by broken software.)\n"</literal></expr></argument>,

                       <argument pos:start="351:24" pos:end="351:33"><expr pos:start="351:24" pos:end="351:33"><name pos:start="351:24" pos:end="351:33"><name pos:start="351:24" pos:end="351:26">ast</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:33">scale</name></name></expr></argument>,

                       <argument pos:start="353:24" pos:end="353:32"><expr pos:start="353:24" pos:end="353:32"><name pos:start="353:24" pos:end="353:32"><name pos:start="353:24" pos:end="353:26">ast</name><operator pos:start="353:27" pos:end="353:28">-&gt;</operator><name pos:start="353:29" pos:end="353:32">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="355:17" pos:end="367:17"><if pos:start="355:17" pos:end="361:17">if <condition pos:start="355:20" pos:end="355:33">(<expr pos:start="355:21" pos:end="355:32"><name pos:start="355:21" pos:end="355:32">frame_period</name></expr>)</condition> <block pos:start="355:35" pos:end="361:17">{<block_content pos:start="357:21" pos:end="359:46">

                    <expr_stmt pos:start="357:21" pos:end="357:41"><expr pos:start="357:21" pos:end="357:40"><name pos:start="357:21" pos:end="357:29"><name pos:start="357:21" pos:end="357:23">ast</name><operator pos:start="357:24" pos:end="357:25">-&gt;</operator><name pos:start="357:26" pos:end="357:29">rate</name></name>  <operator pos:start="357:32" pos:end="357:32">=</operator> <literal type="number" pos:start="357:34" pos:end="357:40">1000000</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="359:21" pos:end="359:46"><expr pos:start="359:21" pos:end="359:45"><name pos:start="359:21" pos:end="359:30"><name pos:start="359:21" pos:end="359:23">ast</name><operator pos:start="359:24" pos:end="359:25">-&gt;</operator><name pos:start="359:26" pos:end="359:30">scale</name></name> <operator pos:start="359:32" pos:end="359:32">=</operator> <name pos:start="359:34" pos:end="359:45">frame_period</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="361:19" pos:end="367:17">else <block pos:start="361:24" pos:end="367:17">{<block_content pos:start="363:21" pos:end="365:35">

                    <expr_stmt pos:start="363:21" pos:end="363:36"><expr pos:start="363:21" pos:end="363:35"><name pos:start="363:21" pos:end="363:29"><name pos:start="363:21" pos:end="363:23">ast</name><operator pos:start="363:24" pos:end="363:25">-&gt;</operator><name pos:start="363:26" pos:end="363:29">rate</name></name>  <operator pos:start="363:32" pos:end="363:32">=</operator> <literal type="number" pos:start="363:34" pos:end="363:35">25</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="365:21" pos:end="365:35"><expr pos:start="365:21" pos:end="365:34"><name pos:start="365:21" pos:end="365:30"><name pos:start="365:21" pos:end="365:23">ast</name><operator pos:start="365:24" pos:end="365:25">-&gt;</operator><name pos:start="365:26" pos:end="365:30">scale</name></name> <operator pos:start="365:32" pos:end="365:32">=</operator> <literal type="number" pos:start="365:34" pos:end="365:34">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:63"><expr pos:start="371:13" pos:end="371:62"><call pos:start="371:13" pos:end="371:62"><name pos:start="371:13" pos:end="371:31">avpriv_set_pts_info</name><argument_list pos:start="371:32" pos:end="371:62">(<argument pos:start="371:33" pos:end="371:34"><expr pos:start="371:33" pos:end="371:34"><name pos:start="371:33" pos:end="371:34">st</name></expr></argument>, <argument pos:start="371:37" pos:end="371:38"><expr pos:start="371:37" pos:end="371:38"><literal type="number" pos:start="371:37" pos:end="371:38">64</literal></expr></argument>, <argument pos:start="371:41" pos:end="371:50"><expr pos:start="371:41" pos:end="371:50"><name pos:start="371:41" pos:end="371:50"><name pos:start="371:41" pos:end="371:43">ast</name><operator pos:start="371:44" pos:end="371:45">-&gt;</operator><name pos:start="371:46" pos:end="371:50">scale</name></name></expr></argument>, <argument pos:start="371:53" pos:end="371:61"><expr pos:start="371:53" pos:end="371:61"><name pos:start="371:53" pos:end="371:61"><name pos:start="371:53" pos:end="371:55">ast</name><operator pos:start="371:56" pos:end="371:57">-&gt;</operator><name pos:start="371:58" pos:end="371:61">rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="375:13" pos:end="375:42"><expr pos:start="375:13" pos:end="375:41"><name pos:start="375:13" pos:end="375:24"><name pos:start="375:13" pos:end="375:15">ast</name><operator pos:start="375:16" pos:end="375:17">-&gt;</operator><name pos:start="375:18" pos:end="375:24">cum_len</name></name>  <operator pos:start="375:27" pos:end="375:27">=</operator> <call pos:start="375:29" pos:end="375:41"><name pos:start="375:29" pos:end="375:37">avio_rl32</name><argument_list pos:start="375:38" pos:end="375:41">(<argument pos:start="375:39" pos:end="375:40"><expr pos:start="375:39" pos:end="375:40"><name pos:start="375:39" pos:end="375:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="375:44" pos:end="375:54">/* start */</comment>

            <expr_stmt pos:start="377:13" pos:end="377:42"><expr pos:start="377:13" pos:end="377:41"><name pos:start="377:13" pos:end="377:25"><name pos:start="377:13" pos:end="377:14">st</name><operator pos:start="377:15" pos:end="377:16">-&gt;</operator><name pos:start="377:17" pos:end="377:25">nb_frames</name></name> <operator pos:start="377:27" pos:end="377:27">=</operator> <call pos:start="377:29" pos:end="377:41"><name pos:start="377:29" pos:end="377:37">avio_rl32</name><argument_list pos:start="377:38" pos:end="377:41">(<argument pos:start="377:39" pos:end="377:40"><expr pos:start="377:39" pos:end="377:40"><name pos:start="377:39" pos:end="377:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="381:13" pos:end="381:31"><expr pos:start="381:13" pos:end="381:30"><name pos:start="381:13" pos:end="381:26"><name pos:start="381:13" pos:end="381:14">st</name><operator pos:start="381:15" pos:end="381:16">-&gt;</operator><name pos:start="381:17" pos:end="381:26">start_time</name></name> <operator pos:start="381:28" pos:end="381:28">=</operator> <literal type="number" pos:start="381:30" pos:end="381:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:26"><expr pos:start="383:13" pos:end="383:25"><call pos:start="383:13" pos:end="383:25"><name pos:start="383:13" pos:end="383:21">avio_rl32</name><argument_list pos:start="383:22" pos:end="383:25">(<argument pos:start="383:23" pos:end="383:24"><expr pos:start="383:23" pos:end="383:24"><name pos:start="383:23" pos:end="383:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="383:28" pos:end="383:44">/* buffer size */</comment>

            <expr_stmt pos:start="385:13" pos:end="385:26"><expr pos:start="385:13" pos:end="385:25"><call pos:start="385:13" pos:end="385:25"><name pos:start="385:13" pos:end="385:21">avio_rl32</name><argument_list pos:start="385:22" pos:end="385:25">(<argument pos:start="385:23" pos:end="385:24"><expr pos:start="385:23" pos:end="385:24"><name pos:start="385:23" pos:end="385:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="385:28" pos:end="385:40">/* quality */</comment>

            <expr_stmt pos:start="387:13" pos:end="387:45"><expr pos:start="387:13" pos:end="387:44"><name pos:start="387:13" pos:end="387:28"><name pos:start="387:13" pos:end="387:15">ast</name><operator pos:start="387:16" pos:end="387:17">-&gt;</operator><name pos:start="387:18" pos:end="387:28">sample_size</name></name> <operator pos:start="387:30" pos:end="387:30">=</operator> <call pos:start="387:32" pos:end="387:44"><name pos:start="387:32" pos:end="387:40">avio_rl32</name><argument_list pos:start="387:41" pos:end="387:44">(<argument pos:start="387:42" pos:end="387:43"><expr pos:start="387:42" pos:end="387:43"><name pos:start="387:42" pos:end="387:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="387:47" pos:end="387:64">/* sample ssize */</comment>

            <expr_stmt pos:start="389:13" pos:end="389:58"><expr pos:start="389:13" pos:end="389:57"><name pos:start="389:13" pos:end="389:24"><name pos:start="389:13" pos:end="389:15">ast</name><operator pos:start="389:16" pos:end="389:17">-&gt;</operator><name pos:start="389:18" pos:end="389:24">cum_len</name></name>    <operator pos:start="389:29" pos:end="389:30">*=</operator> <call pos:start="389:32" pos:end="389:57"><name pos:start="389:32" pos:end="389:36">FFMAX</name><argument_list pos:start="389:37" pos:end="389:57">(<argument pos:start="389:38" pos:end="389:38"><expr pos:start="389:38" pos:end="389:38"><literal type="number" pos:start="389:38" pos:end="389:38">1</literal></expr></argument>, <argument pos:start="389:41" pos:end="389:56"><expr pos:start="389:41" pos:end="389:56"><name pos:start="389:41" pos:end="389:56"><name pos:start="389:41" pos:end="389:43">ast</name><operator pos:start="389:44" pos:end="389:45">-&gt;</operator><name pos:start="389:46" pos:end="389:56">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="393:61"><expr pos:start="391:13" pos:end="393:60"><call pos:start="391:13" pos:end="393:60"><name pos:start="391:13" pos:end="391:19">av_dlog</name><argument_list pos:start="391:20" pos:end="393:60">(<argument pos:start="391:21" pos:end="391:21"><expr pos:start="391:21" pos:end="391:21"><name pos:start="391:21" pos:end="391:21">s</name></expr></argument>, <argument pos:start="391:24" pos:end="391:49"><expr pos:start="391:24" pos:end="391:49"><literal type="string" pos:start="391:24" pos:end="391:26">"%"</literal><name pos:start="391:27" pos:end="391:32">PRIu32</name><literal type="string" pos:start="391:33" pos:end="391:36">" %"</literal><name pos:start="391:37" pos:end="391:42">PRIu32</name><literal type="string" pos:start="391:43" pos:end="391:49">" %d\n"</literal></expr></argument>,

                    <argument pos:start="393:21" pos:end="393:29"><expr pos:start="393:21" pos:end="393:29"><name pos:start="393:21" pos:end="393:29"><name pos:start="393:21" pos:end="393:23">ast</name><operator pos:start="393:24" pos:end="393:25">-&gt;</operator><name pos:start="393:26" pos:end="393:29">rate</name></name></expr></argument>, <argument pos:start="393:32" pos:end="393:41"><expr pos:start="393:32" pos:end="393:41"><name pos:start="393:32" pos:end="393:41"><name pos:start="393:32" pos:end="393:34">ast</name><operator pos:start="393:35" pos:end="393:36">-&gt;</operator><name pos:start="393:37" pos:end="393:41">scale</name></name></expr></argument>, <argument pos:start="393:44" pos:end="393:59"><expr pos:start="393:44" pos:end="393:59"><name pos:start="393:44" pos:end="393:59"><name pos:start="393:44" pos:end="393:46">ast</name><operator pos:start="393:47" pos:end="393:48">-&gt;</operator><name pos:start="393:49" pos:end="393:59">sample_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="397:13" pos:end="433:13">switch <condition pos:start="397:20" pos:end="397:25">(<expr pos:start="397:21" pos:end="397:24"><name pos:start="397:21" pos:end="397:24">tag1</name></expr>)</condition> <block pos:start="397:27" pos:end="433:13">{<block_content pos:start="399:13" pos:end="431:26">

            <case pos:start="399:13" pos:end="399:43">case <expr pos:start="399:18" pos:end="399:42"><call pos:start="399:18" pos:end="399:42"><name pos:start="399:18" pos:end="399:22">MKTAG</name><argument_list pos:start="399:23" pos:end="399:42">(<argument pos:start="399:24" pos:end="399:26"><expr pos:start="399:24" pos:end="399:26"><literal type="char" pos:start="399:24" pos:end="399:26">'v'</literal></expr></argument>, <argument pos:start="399:29" pos:end="399:31"><expr pos:start="399:29" pos:end="399:31"><literal type="char" pos:start="399:29" pos:end="399:31">'i'</literal></expr></argument>, <argument pos:start="399:34" pos:end="399:36"><expr pos:start="399:34" pos:end="399:36"><literal type="char" pos:start="399:34" pos:end="399:36">'d'</literal></expr></argument>, <argument pos:start="399:39" pos:end="399:41"><expr pos:start="399:39" pos:end="399:41"><literal type="char" pos:start="399:39" pos:end="399:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="401:17" pos:end="401:48"><expr pos:start="401:17" pos:end="401:47"><name pos:start="401:17" pos:end="401:26">codec_type</name> <operator pos:start="401:28" pos:end="401:28">=</operator> <name pos:start="401:30" pos:end="401:47">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>



                <expr_stmt pos:start="405:17" pos:end="405:37"><expr pos:start="405:17" pos:end="405:36"><name pos:start="405:17" pos:end="405:32"><name pos:start="405:17" pos:end="405:19">ast</name><operator pos:start="405:20" pos:end="405:21">-&gt;</operator><name pos:start="405:22" pos:end="405:32">sample_size</name></name> <operator pos:start="405:34" pos:end="405:34">=</operator> <literal type="number" pos:start="405:36" pos:end="405:36">0</literal></expr>;</expr_stmt>

                <break pos:start="407:17" pos:end="407:22">break;</break>

            <case pos:start="409:13" pos:end="409:43">case <expr pos:start="409:18" pos:end="409:42"><call pos:start="409:18" pos:end="409:42"><name pos:start="409:18" pos:end="409:22">MKTAG</name><argument_list pos:start="409:23" pos:end="409:42">(<argument pos:start="409:24" pos:end="409:26"><expr pos:start="409:24" pos:end="409:26"><literal type="char" pos:start="409:24" pos:end="409:26">'a'</literal></expr></argument>, <argument pos:start="409:29" pos:end="409:31"><expr pos:start="409:29" pos:end="409:31"><literal type="char" pos:start="409:29" pos:end="409:31">'u'</literal></expr></argument>, <argument pos:start="409:34" pos:end="409:36"><expr pos:start="409:34" pos:end="409:36"><literal type="char" pos:start="409:34" pos:end="409:36">'d'</literal></expr></argument>, <argument pos:start="409:39" pos:end="409:41"><expr pos:start="409:39" pos:end="409:41"><literal type="char" pos:start="409:39" pos:end="409:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="411:17" pos:end="411:48"><expr pos:start="411:17" pos:end="411:47"><name pos:start="411:17" pos:end="411:26">codec_type</name> <operator pos:start="411:28" pos:end="411:28">=</operator> <name pos:start="411:30" pos:end="411:47">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

                <break pos:start="413:17" pos:end="413:22">break;</break>

            <case pos:start="415:13" pos:end="415:43">case <expr pos:start="415:18" pos:end="415:42"><call pos:start="415:18" pos:end="415:42"><name pos:start="415:18" pos:end="415:22">MKTAG</name><argument_list pos:start="415:23" pos:end="415:42">(<argument pos:start="415:24" pos:end="415:26"><expr pos:start="415:24" pos:end="415:26"><literal type="char" pos:start="415:24" pos:end="415:26">'t'</literal></expr></argument>, <argument pos:start="415:29" pos:end="415:31"><expr pos:start="415:29" pos:end="415:31"><literal type="char" pos:start="415:29" pos:end="415:31">'x'</literal></expr></argument>, <argument pos:start="415:34" pos:end="415:36"><expr pos:start="415:34" pos:end="415:36"><literal type="char" pos:start="415:34" pos:end="415:36">'t'</literal></expr></argument>, <argument pos:start="415:39" pos:end="415:41"><expr pos:start="415:39" pos:end="415:41"><literal type="char" pos:start="415:39" pos:end="415:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="417:17" pos:end="417:51"><expr pos:start="417:17" pos:end="417:50"><name pos:start="417:17" pos:end="417:26">codec_type</name> <operator pos:start="417:28" pos:end="417:28">=</operator> <name pos:start="417:30" pos:end="417:50">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

                <break pos:start="419:17" pos:end="419:22">break;</break>

            <case pos:start="421:13" pos:end="421:43">case <expr pos:start="421:18" pos:end="421:42"><call pos:start="421:18" pos:end="421:42"><name pos:start="421:18" pos:end="421:22">MKTAG</name><argument_list pos:start="421:23" pos:end="421:42">(<argument pos:start="421:24" pos:end="421:26"><expr pos:start="421:24" pos:end="421:26"><literal type="char" pos:start="421:24" pos:end="421:26">'d'</literal></expr></argument>, <argument pos:start="421:29" pos:end="421:31"><expr pos:start="421:29" pos:end="421:31"><literal type="char" pos:start="421:29" pos:end="421:31">'a'</literal></expr></argument>, <argument pos:start="421:34" pos:end="421:36"><expr pos:start="421:34" pos:end="421:36"><literal type="char" pos:start="421:34" pos:end="421:36">'t'</literal></expr></argument>, <argument pos:start="421:39" pos:end="421:41"><expr pos:start="421:39" pos:end="421:41"><literal type="char" pos:start="421:39" pos:end="421:41">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

                <expr_stmt pos:start="423:17" pos:end="423:47"><expr pos:start="423:17" pos:end="423:46"><name pos:start="423:17" pos:end="423:26">codec_type</name> <operator pos:start="423:28" pos:end="423:28">=</operator> <name pos:start="423:30" pos:end="423:46">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

                <break pos:start="425:17" pos:end="425:22">break;</break>

            <default pos:start="427:13" pos:end="427:20">default:</default>

                <expr_stmt pos:start="429:17" pos:end="429:74"><expr pos:start="429:17" pos:end="429:73"><call pos:start="429:17" pos:end="429:73"><name pos:start="429:17" pos:end="429:22">av_log</name><argument_list pos:start="429:23" pos:end="429:73">(<argument pos:start="429:24" pos:end="429:24"><expr pos:start="429:24" pos:end="429:24"><name pos:start="429:24" pos:end="429:24">s</name></expr></argument>, <argument pos:start="429:27" pos:end="429:38"><expr pos:start="429:27" pos:end="429:38"><name pos:start="429:27" pos:end="429:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="429:41" pos:end="429:66"><expr pos:start="429:41" pos:end="429:66"><literal type="string" pos:start="429:41" pos:end="429:66">"unknown stream type %X\n"</literal></expr></argument>, <argument pos:start="429:69" pos:end="429:72"><expr pos:start="429:69" pos:end="429:72"><name pos:start="429:69" pos:end="429:72">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="431:17" pos:end="431:26">goto <name pos:start="431:22" pos:end="431:25">fail</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="435:13" pos:end="437:45"><if pos:start="435:13" pos:end="437:45">if <condition pos:start="435:16" pos:end="435:38">(<expr pos:start="435:17" pos:end="435:37"><name pos:start="435:17" pos:end="435:32"><name pos:start="435:17" pos:end="435:19">ast</name><operator pos:start="435:20" pos:end="435:21">-&gt;</operator><name pos:start="435:22" pos:end="435:32">sample_size</name></name> <operator pos:start="435:34" pos:end="435:35">==</operator> <literal type="number" pos:start="435:37" pos:end="435:37">0</literal></expr>)</condition><block type="pseudo" pos:start="437:17" pos:end="437:45"><block_content pos:start="437:17" pos:end="437:45">

                <expr_stmt pos:start="437:17" pos:end="437:45"><expr pos:start="437:17" pos:end="437:44"><name pos:start="437:17" pos:end="437:28"><name pos:start="437:17" pos:end="437:18">st</name><operator pos:start="437:19" pos:end="437:20">-&gt;</operator><name pos:start="437:21" pos:end="437:28">duration</name></name> <operator pos:start="437:30" pos:end="437:30">=</operator> <name pos:start="437:32" pos:end="437:44"><name pos:start="437:32" pos:end="437:33">st</name><operator pos:start="437:34" pos:end="437:35">-&gt;</operator><name pos:start="437:36" pos:end="437:44">nb_frames</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:45"><expr pos:start="439:13" pos:end="439:44"><name pos:start="439:13" pos:end="439:29"><name pos:start="439:13" pos:end="439:15">ast</name><operator pos:start="439:16" pos:end="439:17">-&gt;</operator><name pos:start="439:18" pos:end="439:29">frame_offset</name></name> <operator pos:start="439:31" pos:end="439:31">=</operator> <name pos:start="439:33" pos:end="439:44"><name pos:start="439:33" pos:end="439:35">ast</name><operator pos:start="439:36" pos:end="439:37">-&gt;</operator><name pos:start="439:38" pos:end="439:44">cum_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:41"><expr pos:start="441:13" pos:end="441:40"><call pos:start="441:13" pos:end="441:40"><name pos:start="441:13" pos:end="441:21">avio_skip</name><argument_list pos:start="441:22" pos:end="441:40">(<argument pos:start="441:23" pos:end="441:24"><expr pos:start="441:23" pos:end="441:24"><name pos:start="441:23" pos:end="441:24">pb</name></expr></argument>, <argument pos:start="441:27" pos:end="441:39"><expr pos:start="441:27" pos:end="441:39"><name pos:start="441:27" pos:end="441:30">size</name> <operator pos:start="441:32" pos:end="441:32">-</operator> <literal type="number" pos:start="441:34" pos:end="441:35">12</literal> <operator pos:start="441:37" pos:end="441:37">*</operator> <literal type="number" pos:start="441:39" pos:end="441:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="443:13" pos:end="443:18">break;</break>

        <case pos:start="445:9" pos:end="445:39">case <expr pos:start="445:14" pos:end="445:38"><call pos:start="445:14" pos:end="445:38"><name pos:start="445:14" pos:end="445:18">MKTAG</name><argument_list pos:start="445:19" pos:end="445:38">(<argument pos:start="445:20" pos:end="445:22"><expr pos:start="445:20" pos:end="445:22"><literal type="char" pos:start="445:20" pos:end="445:22">'s'</literal></expr></argument>, <argument pos:start="445:25" pos:end="445:27"><expr pos:start="445:25" pos:end="445:27"><literal type="char" pos:start="445:25" pos:end="445:27">'t'</literal></expr></argument>, <argument pos:start="445:30" pos:end="445:32"><expr pos:start="445:30" pos:end="445:32"><literal type="char" pos:start="445:30" pos:end="445:32">'r'</literal></expr></argument>, <argument pos:start="445:35" pos:end="445:37"><expr pos:start="445:35" pos:end="445:37"><literal type="char" pos:start="445:35" pos:end="445:37">'f'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="447:13" pos:end="447:31">/* stream header */</comment>

            <if_stmt pos:start="449:13" pos:end="739:13"><if pos:start="449:13" pos:end="453:13">if <condition pos:start="449:16" pos:end="449:73">(<expr pos:start="449:17" pos:end="449:72"><name pos:start="449:17" pos:end="449:28">stream_index</name> <operator pos:start="449:30" pos:end="449:31">&gt;=</operator> <operator pos:start="449:33" pos:end="449:33">(</operator><name pos:start="449:34" pos:end="449:41">unsigned</name><operator pos:start="449:42" pos:end="449:42">)</operator><name pos:start="449:43" pos:end="449:55"><name pos:start="449:43" pos:end="449:43">s</name><operator pos:start="449:44" pos:end="449:45">-&gt;</operator><name pos:start="449:46" pos:end="449:55">nb_streams</name></name> <operator pos:start="449:57" pos:end="449:58">||</operator> <name pos:start="449:60" pos:end="449:72"><name pos:start="449:60" pos:end="449:62">avi</name><operator pos:start="449:63" pos:end="449:64">-&gt;</operator><name pos:start="449:65" pos:end="449:72">dv_demux</name></name></expr>)</condition> <block pos:start="449:75" pos:end="453:13">{<block_content pos:start="451:17" pos:end="451:36">

                <expr_stmt pos:start="451:17" pos:end="451:36"><expr pos:start="451:17" pos:end="451:35"><call pos:start="451:17" pos:end="451:35"><name pos:start="451:17" pos:end="451:25">avio_skip</name><argument_list pos:start="451:26" pos:end="451:35">(<argument pos:start="451:27" pos:end="451:28"><expr pos:start="451:27" pos:end="451:28"><name pos:start="451:27" pos:end="451:28">pb</name></expr></argument>, <argument pos:start="451:31" pos:end="451:34"><expr pos:start="451:31" pos:end="451:34"><name pos:start="451:31" pos:end="451:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="453:15" pos:end="739:13">else <block pos:start="453:20" pos:end="739:13">{<block_content pos:start="455:17" pos:end="737:17">

                <decl_stmt pos:start="455:17" pos:end="455:49"><decl pos:start="455:17" pos:end="455:48"><type pos:start="455:17" pos:end="455:24"><name pos:start="455:17" pos:end="455:24">uint64_t</name></type> <name pos:start="455:26" pos:end="455:32">cur_pos</name> <init pos:start="455:34" pos:end="455:48">= <expr pos:start="455:36" pos:end="455:48"><call pos:start="455:36" pos:end="455:48"><name pos:start="455:36" pos:end="455:44">avio_tell</name><argument_list pos:start="455:45" pos:end="455:48">(<argument pos:start="455:46" pos:end="455:47"><expr pos:start="455:46" pos:end="455:47"><name pos:start="455:46" pos:end="455:47">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="457:17" pos:end="459:59"><if pos:start="457:17" pos:end="459:59">if <condition pos:start="457:20" pos:end="457:39">(<expr pos:start="457:21" pos:end="457:38"><name pos:start="457:21" pos:end="457:27">cur_pos</name> <operator pos:start="457:29" pos:end="457:29">&lt;</operator> <name pos:start="457:31" pos:end="457:38">list_end</name></expr>)</condition><block type="pseudo" pos:start="459:21" pos:end="459:59"><block_content pos:start="459:21" pos:end="459:59">

                    <expr_stmt pos:start="459:21" pos:end="459:59"><expr pos:start="459:21" pos:end="459:58"><name pos:start="459:21" pos:end="459:24">size</name> <operator pos:start="459:26" pos:end="459:26">=</operator> <call pos:start="459:28" pos:end="459:58"><name pos:start="459:28" pos:end="459:32">FFMIN</name><argument_list pos:start="459:33" pos:end="459:58">(<argument pos:start="459:34" pos:end="459:37"><expr pos:start="459:34" pos:end="459:37"><name pos:start="459:34" pos:end="459:37">size</name></expr></argument>, <argument pos:start="459:40" pos:end="459:57"><expr pos:start="459:40" pos:end="459:57"><name pos:start="459:40" pos:end="459:47">list_end</name> <operator pos:start="459:49" pos:end="459:49">-</operator> <name pos:start="459:51" pos:end="459:57">cur_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="461:17" pos:end="461:46"><expr pos:start="461:17" pos:end="461:45"><name pos:start="461:17" pos:end="461:18">st</name> <operator pos:start="461:20" pos:end="461:20">=</operator> <name pos:start="461:22" pos:end="461:45"><name pos:start="461:22" pos:end="461:22">s</name><operator pos:start="461:23" pos:end="461:24">-&gt;</operator><name pos:start="461:25" pos:end="461:31">streams</name><index pos:start="461:32" pos:end="461:45">[<expr pos:start="461:33" pos:end="461:44"><name pos:start="461:33" pos:end="461:44">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

                <switch pos:start="463:17" pos:end="737:17">switch <condition pos:start="463:24" pos:end="463:35">(<expr pos:start="463:25" pos:end="463:34"><name pos:start="463:25" pos:end="463:34">codec_type</name></expr>)</condition> <block pos:start="463:37" pos:end="737:17">{<block_content pos:start="465:17" pos:end="735:26">

                <case pos:start="465:17" pos:end="465:40">case <expr pos:start="465:22" pos:end="465:39"><name pos:start="465:22" pos:end="465:39">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                    <if_stmt pos:start="467:21" pos:end="481:21"><if pos:start="467:21" pos:end="481:21">if <condition pos:start="467:24" pos:end="467:40">(<expr pos:start="467:25" pos:end="467:39"><name pos:start="467:25" pos:end="467:39">amv_file_format</name></expr>)</condition> <block pos:start="467:42" pos:end="481:21">{<block_content pos:start="469:25" pos:end="479:30">

                        <expr_stmt pos:start="469:25" pos:end="469:59"><expr pos:start="469:25" pos:end="469:58"><name pos:start="469:25" pos:end="469:40"><name pos:start="469:25" pos:end="469:26">st</name><operator pos:start="469:27" pos:end="469:28">-&gt;</operator><name pos:start="469:29" pos:end="469:33">codec</name><operator pos:start="469:34" pos:end="469:35">-&gt;</operator><name pos:start="469:36" pos:end="469:40">width</name></name>      <operator pos:start="469:47" pos:end="469:47">=</operator> <name pos:start="469:49" pos:end="469:58">avih_width</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="471:25" pos:end="471:60"><expr pos:start="471:25" pos:end="471:59"><name pos:start="471:25" pos:end="471:41"><name pos:start="471:25" pos:end="471:26">st</name><operator pos:start="471:27" pos:end="471:28">-&gt;</operator><name pos:start="471:29" pos:end="471:33">codec</name><operator pos:start="471:34" pos:end="471:35">-&gt;</operator><name pos:start="471:36" pos:end="471:41">height</name></name>     <operator pos:start="471:47" pos:end="471:47">=</operator> <name pos:start="471:49" pos:end="471:59">avih_height</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="473:25" pos:end="473:67"><expr pos:start="473:25" pos:end="473:66"><name pos:start="473:25" pos:end="473:45"><name pos:start="473:25" pos:end="473:26">st</name><operator pos:start="473:27" pos:end="473:28">-&gt;</operator><name pos:start="473:29" pos:end="473:33">codec</name><operator pos:start="473:34" pos:end="473:35">-&gt;</operator><name pos:start="473:36" pos:end="473:45">codec_type</name></name> <operator pos:start="473:47" pos:end="473:47">=</operator> <name pos:start="473:49" pos:end="473:66">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="475:25" pos:end="475:64"><expr pos:start="475:25" pos:end="475:63"><name pos:start="475:25" pos:end="475:43"><name pos:start="475:25" pos:end="475:26">st</name><operator pos:start="475:27" pos:end="475:28">-&gt;</operator><name pos:start="475:29" pos:end="475:33">codec</name><operator pos:start="475:34" pos:end="475:35">-&gt;</operator><name pos:start="475:36" pos:end="475:43">codec_id</name></name>   <operator pos:start="475:47" pos:end="475:47">=</operator> <name pos:start="475:49" pos:end="475:63">AV_CODEC_ID_AMV</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="477:25" pos:end="477:44"><expr pos:start="477:25" pos:end="477:43"><call pos:start="477:25" pos:end="477:43"><name pos:start="477:25" pos:end="477:33">avio_skip</name><argument_list pos:start="477:34" pos:end="477:43">(<argument pos:start="477:35" pos:end="477:36"><expr pos:start="477:35" pos:end="477:36"><name pos:start="477:35" pos:end="477:36">pb</name></expr></argument>, <argument pos:start="477:39" pos:end="477:42"><expr pos:start="477:39" pos:end="477:42"><name pos:start="477:39" pos:end="477:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="479:25" pos:end="479:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="483:21" pos:end="483:53"><expr pos:start="483:21" pos:end="483:52"><name pos:start="483:21" pos:end="483:24">tag1</name> <operator pos:start="483:26" pos:end="483:26">=</operator> <call pos:start="483:28" pos:end="483:52"><name pos:start="483:28" pos:end="483:44">ff_get_bmp_header</name><argument_list pos:start="483:45" pos:end="483:52">(<argument pos:start="483:46" pos:end="483:47"><expr pos:start="483:46" pos:end="483:47"><name pos:start="483:46" pos:end="483:47">pb</name></expr></argument>, <argument pos:start="483:50" pos:end="483:51"><expr pos:start="483:50" pos:end="483:51"><name pos:start="483:50" pos:end="483:51">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="487:21" pos:end="499:21"><if pos:start="487:21" pos:end="499:21">if <condition pos:start="487:24" pos:end="489:58">(<expr pos:start="487:25" pos:end="489:57"><name pos:start="487:25" pos:end="487:28">tag1</name> <operator pos:start="487:30" pos:end="487:31">==</operator> <call pos:start="487:33" pos:end="487:57"><name pos:start="487:33" pos:end="487:37">MKTAG</name><argument_list pos:start="487:38" pos:end="487:57">(<argument pos:start="487:39" pos:end="487:41"><expr pos:start="487:39" pos:end="487:41"><literal type="char" pos:start="487:39" pos:end="487:41">'D'</literal></expr></argument>, <argument pos:start="487:44" pos:end="487:46"><expr pos:start="487:44" pos:end="487:46"><literal type="char" pos:start="487:44" pos:end="487:46">'X'</literal></expr></argument>, <argument pos:start="487:49" pos:end="487:51"><expr pos:start="487:49" pos:end="487:51"><literal type="char" pos:start="487:49" pos:end="487:51">'S'</literal></expr></argument>, <argument pos:start="487:54" pos:end="487:56"><expr pos:start="487:54" pos:end="487:56"><literal type="char" pos:start="487:54" pos:end="487:56">'B'</literal></expr></argument>)</argument_list></call> <operator pos:start="487:59" pos:end="487:60">||</operator>

                        <name pos:start="489:25" pos:end="489:28">tag1</name> <operator pos:start="489:30" pos:end="489:31">==</operator> <call pos:start="489:33" pos:end="489:57"><name pos:start="489:33" pos:end="489:37">MKTAG</name><argument_list pos:start="489:38" pos:end="489:57">(<argument pos:start="489:39" pos:end="489:41"><expr pos:start="489:39" pos:end="489:41"><literal type="char" pos:start="489:39" pos:end="489:41">'D'</literal></expr></argument>, <argument pos:start="489:44" pos:end="489:46"><expr pos:start="489:44" pos:end="489:46"><literal type="char" pos:start="489:44" pos:end="489:46">'X'</literal></expr></argument>, <argument pos:start="489:49" pos:end="489:51"><expr pos:start="489:49" pos:end="489:51"><literal type="char" pos:start="489:49" pos:end="489:51">'S'</literal></expr></argument>, <argument pos:start="489:54" pos:end="489:56"><expr pos:start="489:54" pos:end="489:56"><literal type="char" pos:start="489:54" pos:end="489:56">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="489:60" pos:end="499:21">{<block_content pos:start="491:25" pos:end="497:30">

                        <expr_stmt pos:start="491:25" pos:end="491:70"><expr pos:start="491:25" pos:end="491:69"><name pos:start="491:25" pos:end="491:45"><name pos:start="491:25" pos:end="491:26">st</name><operator pos:start="491:27" pos:end="491:28">-&gt;</operator><name pos:start="491:29" pos:end="491:33">codec</name><operator pos:start="491:34" pos:end="491:35">-&gt;</operator><name pos:start="491:36" pos:end="491:45">codec_type</name></name> <operator pos:start="491:47" pos:end="491:47">=</operator> <name pos:start="491:49" pos:end="491:69">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="493:25" pos:end="493:53"><expr pos:start="493:25" pos:end="493:52"><name pos:start="493:25" pos:end="493:44"><name pos:start="493:25" pos:end="493:26">st</name><operator pos:start="493:27" pos:end="493:28">-&gt;</operator><name pos:start="493:29" pos:end="493:33">codec</name><operator pos:start="493:34" pos:end="493:35">-&gt;</operator><name pos:start="493:36" pos:end="493:44">codec_tag</name></name>  <operator pos:start="493:47" pos:end="493:47">=</operator> <name pos:start="493:49" pos:end="493:52">tag1</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="495:25" pos:end="495:65"><expr pos:start="495:25" pos:end="495:64"><name pos:start="495:25" pos:end="495:43"><name pos:start="495:25" pos:end="495:26">st</name><operator pos:start="495:27" pos:end="495:28">-&gt;</operator><name pos:start="495:29" pos:end="495:33">codec</name><operator pos:start="495:34" pos:end="495:35">-&gt;</operator><name pos:start="495:36" pos:end="495:43">codec_id</name></name>   <operator pos:start="495:47" pos:end="495:47">=</operator> <name pos:start="495:49" pos:end="495:64">AV_CODEC_ID_XSUB</name></expr>;</expr_stmt>

                        <break pos:start="497:25" pos:end="497:30">break;</break>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="503:21" pos:end="525:21"><if pos:start="503:21" pos:end="525:21">if <condition pos:start="503:24" pos:end="503:58">(<expr pos:start="503:25" pos:end="503:57"><name pos:start="503:25" pos:end="503:28">size</name> <operator pos:start="503:30" pos:end="503:30">&gt;</operator> <literal type="number" pos:start="503:32" pos:end="503:33">10</literal> <operator pos:start="503:35" pos:end="503:35">*</operator> <literal type="number" pos:start="503:37" pos:end="503:37">4</literal> <operator pos:start="503:39" pos:end="503:40">&amp;&amp;</operator> <name pos:start="503:42" pos:end="503:45">size</name> <operator pos:start="503:47" pos:end="503:47">&lt;</operator> <operator pos:start="503:49" pos:end="503:49">(</operator><literal type="number" pos:start="503:50" pos:end="503:50">1</literal> <operator pos:start="503:52" pos:end="503:53">&lt;&lt;</operator> <literal type="number" pos:start="503:55" pos:end="503:56">30</literal><operator pos:start="503:57" pos:end="503:57">)</operator></expr>)</condition> <block pos:start="503:60" pos:end="525:21">{<block_content pos:start="505:25" pos:end="523:61">

                        <expr_stmt pos:start="505:25" pos:end="505:66"><expr pos:start="505:25" pos:end="505:65"><name pos:start="505:25" pos:end="505:49"><name pos:start="505:25" pos:end="505:26">st</name><operator pos:start="505:27" pos:end="505:28">-&gt;</operator><name pos:start="505:29" pos:end="505:33">codec</name><operator pos:start="505:34" pos:end="505:35">-&gt;</operator><name pos:start="505:36" pos:end="505:49">extradata_size</name></name> <operator pos:start="505:51" pos:end="505:51">=</operator> <name pos:start="505:53" pos:end="505:56">size</name> <operator pos:start="505:58" pos:end="505:58">-</operator> <literal type="number" pos:start="505:60" pos:end="505:61">10</literal> <operator pos:start="505:63" pos:end="505:63">*</operator> <literal type="number" pos:start="505:65" pos:end="505:65">4</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="507:25" pos:end="509:92"><expr pos:start="507:25" pos:end="509:91"><name pos:start="507:25" pos:end="507:44"><name pos:start="507:25" pos:end="507:26">st</name><operator pos:start="507:27" pos:end="507:28">-&gt;</operator><name pos:start="507:29" pos:end="507:33">codec</name><operator pos:start="507:34" pos:end="507:35">-&gt;</operator><name pos:start="507:36" pos:end="507:44">extradata</name></name>      <operator pos:start="507:51" pos:end="507:51">=</operator> <call pos:start="507:53" pos:end="509:91"><name pos:start="507:53" pos:end="507:61">av_malloc</name><argument_list pos:start="507:62" pos:end="509:91">(<argument pos:start="507:63" pos:end="509:90"><expr pos:start="507:63" pos:end="509:90"><name pos:start="507:63" pos:end="507:87"><name pos:start="507:63" pos:end="507:64">st</name><operator pos:start="507:65" pos:end="507:66">-&gt;</operator><name pos:start="507:67" pos:end="507:71">codec</name><operator pos:start="507:72" pos:end="507:73">-&gt;</operator><name pos:start="507:74" pos:end="507:87">extradata_size</name></name> <operator pos:start="507:89" pos:end="507:89">+</operator>

                                                              <name pos:start="509:63" pos:end="509:90">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="511:25" pos:end="517:25"><if pos:start="511:25" pos:end="517:25">if <condition pos:start="511:28" pos:end="511:50">(<expr pos:start="511:29" pos:end="511:49"><operator pos:start="511:29" pos:end="511:29">!</operator><name pos:start="511:30" pos:end="511:49"><name pos:start="511:30" pos:end="511:31">st</name><operator pos:start="511:32" pos:end="511:33">-&gt;</operator><name pos:start="511:34" pos:end="511:38">codec</name><operator pos:start="511:39" pos:end="511:40">-&gt;</operator><name pos:start="511:41" pos:end="511:49">extradata</name></name></expr>)</condition> <block pos:start="511:52" pos:end="517:25">{<block_content pos:start="513:29" pos:end="515:51">

                            <expr_stmt pos:start="513:29" pos:end="513:58"><expr pos:start="513:29" pos:end="513:57"><name pos:start="513:29" pos:end="513:53"><name pos:start="513:29" pos:end="513:30">st</name><operator pos:start="513:31" pos:end="513:32">-&gt;</operator><name pos:start="513:33" pos:end="513:37">codec</name><operator pos:start="513:38" pos:end="513:39">-&gt;</operator><name pos:start="513:40" pos:end="513:53">extradata_size</name></name> <operator pos:start="513:55" pos:end="513:55">=</operator> <literal type="number" pos:start="513:57" pos:end="513:57">0</literal></expr>;</expr_stmt>

                            <return pos:start="515:29" pos:end="515:51">return <expr pos:start="515:36" pos:end="515:50"><call pos:start="515:36" pos:end="515:50"><name pos:start="515:36" pos:end="515:42">AVERROR</name><argument_list pos:start="515:43" pos:end="515:50">(<argument pos:start="515:44" pos:end="515:49"><expr pos:start="515:44" pos:end="515:49"><name pos:start="515:44" pos:end="515:49">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="519:25" pos:end="523:61"><expr pos:start="519:25" pos:end="523:60"><call pos:start="519:25" pos:end="523:60"><name pos:start="519:25" pos:end="519:33">avio_read</name><argument_list pos:start="519:34" pos:end="523:60">(<argument pos:start="519:35" pos:end="519:36"><expr pos:start="519:35" pos:end="519:36"><name pos:start="519:35" pos:end="519:36">pb</name></expr></argument>,

                                  <argument pos:start="521:35" pos:end="521:54"><expr pos:start="521:35" pos:end="521:54"><name pos:start="521:35" pos:end="521:54"><name pos:start="521:35" pos:end="521:36">st</name><operator pos:start="521:37" pos:end="521:38">-&gt;</operator><name pos:start="521:39" pos:end="521:43">codec</name><operator pos:start="521:44" pos:end="521:45">-&gt;</operator><name pos:start="521:46" pos:end="521:54">extradata</name></name></expr></argument>,

                                  <argument pos:start="523:35" pos:end="523:59"><expr pos:start="523:35" pos:end="523:59"><name pos:start="523:35" pos:end="523:59"><name pos:start="523:35" pos:end="523:36">st</name><operator pos:start="523:37" pos:end="523:38">-&gt;</operator><name pos:start="523:39" pos:end="523:43">codec</name><operator pos:start="523:44" pos:end="523:45">-&gt;</operator><name pos:start="523:46" pos:end="523:59">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <comment type="line" pos:start="529:21" pos:end="529:76">// FIXME: check if the encoder really did this correctly</comment>

                    <if_stmt pos:start="531:21" pos:end="533:36"><if pos:start="531:21" pos:end="533:36">if <condition pos:start="531:24" pos:end="531:54">(<expr pos:start="531:25" pos:end="531:53"><name pos:start="531:25" pos:end="531:49"><name pos:start="531:25" pos:end="531:26">st</name><operator pos:start="531:27" pos:end="531:28">-&gt;</operator><name pos:start="531:29" pos:end="531:33">codec</name><operator pos:start="531:34" pos:end="531:35">-&gt;</operator><name pos:start="531:36" pos:end="531:49">extradata_size</name></name> <operator pos:start="531:51" pos:end="531:51">&amp;</operator> <literal type="number" pos:start="531:53" pos:end="531:53">1</literal></expr>)</condition><block type="pseudo" pos:start="533:25" pos:end="533:36"><block_content pos:start="533:25" pos:end="533:36">

                        <expr_stmt pos:start="533:25" pos:end="533:36"><expr pos:start="533:25" pos:end="533:35"><call pos:start="533:25" pos:end="533:35"><name pos:start="533:25" pos:end="533:31">avio_r8</name><argument_list pos:start="533:32" pos:end="533:35">(<argument pos:start="533:33" pos:end="533:34"><expr pos:start="533:33" pos:end="533:34"><name pos:start="533:33" pos:end="533:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <comment type="block" pos:start="537:21" pos:end="543:32">/* Extract palette from extradata if bpp &lt;= 8.

                     * This code assumes that extradata contains only palette.

                     * This is true for all paletted codecs implemented in

                     * Libav. */</comment>

                    <if_stmt pos:start="545:21" pos:end="575:21"><if pos:start="545:21" pos:end="575:21">if <condition pos:start="545:24" pos:end="547:64">(<expr pos:start="545:25" pos:end="547:63"><name pos:start="545:25" pos:end="545:49"><name pos:start="545:25" pos:end="545:26">st</name><operator pos:start="545:27" pos:end="545:28">-&gt;</operator><name pos:start="545:29" pos:end="545:33">codec</name><operator pos:start="545:34" pos:end="545:35">-&gt;</operator><name pos:start="545:36" pos:end="545:49">extradata_size</name></name> <operator pos:start="545:51" pos:end="545:52">&amp;&amp;</operator>

                        <operator pos:start="547:25" pos:end="547:25">(</operator><name pos:start="547:26" pos:end="547:57"><name pos:start="547:26" pos:end="547:27">st</name><operator pos:start="547:28" pos:end="547:29">-&gt;</operator><name pos:start="547:30" pos:end="547:34">codec</name><operator pos:start="547:35" pos:end="547:36">-&gt;</operator><name pos:start="547:37" pos:end="547:57">bits_per_coded_sample</name></name> <operator pos:start="547:59" pos:end="547:60">&lt;=</operator> <literal type="number" pos:start="547:62" pos:end="547:62">8</literal><operator pos:start="547:63" pos:end="547:63">)</operator></expr>)</condition> <block pos:start="547:66" pos:end="575:21">{<block_content pos:start="549:25" pos:end="573:41">

                        <decl_stmt pos:start="549:25" pos:end="549:84"><decl pos:start="549:25" pos:end="549:83"><type pos:start="549:25" pos:end="549:27"><name pos:start="549:25" pos:end="549:27">int</name></type> <name pos:start="549:29" pos:end="549:36">pal_size</name> <init pos:start="549:38" pos:end="549:83">= <expr pos:start="549:40" pos:end="549:83"><operator pos:start="549:40" pos:end="549:40">(</operator><literal type="number" pos:start="549:41" pos:end="549:41">1</literal> <operator pos:start="549:43" pos:end="549:44">&lt;&lt;</operator> <name pos:start="549:46" pos:end="549:77"><name pos:start="549:46" pos:end="549:47">st</name><operator pos:start="549:48" pos:end="549:49">-&gt;</operator><name pos:start="549:50" pos:end="549:54">codec</name><operator pos:start="549:55" pos:end="549:56">-&gt;</operator><name pos:start="549:57" pos:end="549:77">bits_per_coded_sample</name></name><operator pos:start="549:78" pos:end="549:78">)</operator> <operator pos:start="549:80" pos:end="549:81">&lt;&lt;</operator> <literal type="number" pos:start="549:83" pos:end="549:83">2</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="551:25" pos:end="551:47"><decl pos:start="551:25" pos:end="551:46"><type pos:start="551:25" pos:end="551:39"><specifier pos:start="551:25" pos:end="551:29">const</specifier> <name pos:start="551:31" pos:end="551:37">uint8_t</name> <modifier pos:start="551:39" pos:end="551:39">*</modifier></type><name pos:start="551:40" pos:end="551:46">pal_src</name></decl>;</decl_stmt>



                        <expr_stmt pos:start="555:25" pos:end="555:78"><expr pos:start="555:25" pos:end="555:77"><name pos:start="555:25" pos:end="555:32">pal_size</name> <operator pos:start="555:34" pos:end="555:34">=</operator> <call pos:start="555:36" pos:end="555:77"><name pos:start="555:36" pos:end="555:40">FFMIN</name><argument_list pos:start="555:41" pos:end="555:77">(<argument pos:start="555:42" pos:end="555:49"><expr pos:start="555:42" pos:end="555:49"><name pos:start="555:42" pos:end="555:49">pal_size</name></expr></argument>, <argument pos:start="555:52" pos:end="555:76"><expr pos:start="555:52" pos:end="555:76"><name pos:start="555:52" pos:end="555:76"><name pos:start="555:52" pos:end="555:53">st</name><operator pos:start="555:54" pos:end="555:55">-&gt;</operator><name pos:start="555:56" pos:end="555:60">codec</name><operator pos:start="555:61" pos:end="555:62">-&gt;</operator><name pos:start="555:63" pos:end="555:76">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="557:25" pos:end="562:0"><expr pos:start="557:25" pos:end="559:71"><name pos:start="557:25" pos:end="557:31">pal_src</name>  <operator pos:start="557:34" pos:end="557:34">=</operator> <name pos:start="557:36" pos:end="557:55"><name pos:start="557:36" pos:end="557:37">st</name><operator pos:start="557:38" pos:end="557:39">-&gt;</operator><name pos:start="557:40" pos:end="557:44">codec</name><operator pos:start="557:45" pos:end="557:46">-&gt;</operator><name pos:start="557:47" pos:end="557:55">extradata</name></name> <operator pos:start="557:57" pos:end="557:57">+</operator>

                                   <name pos:start="559:36" pos:end="559:60"><name pos:start="559:36" pos:end="559:37">st</name><operator pos:start="559:38" pos:end="559:39">-&gt;</operator><name pos:start="559:40" pos:end="559:44">codec</name><operator pos:start="559:45" pos:end="559:46">-&gt;</operator><name pos:start="559:47" pos:end="559:60">extradata_size</name></name> <operator pos:start="559:62" pos:end="559:62">-</operator> <name pos:start="559:64" pos:end="559:71">pal_size</name></expr>;</expr_stmt>

<cpp:if pos:start="561:1" pos:end="561:18">#<cpp:directive pos:start="561:2" pos:end="561:3">if</cpp:directive> <expr pos:start="561:5" pos:end="561:18"><name pos:start="561:5" pos:end="561:18">HAVE_BIGENDIAN</name></expr></cpp:if>

                        <for pos:start="563:25" pos:end="568:0">for <control pos:start="563:29" pos:end="563:58">(<init pos:start="563:30" pos:end="563:35"><expr pos:start="563:30" pos:end="563:34"><name pos:start="563:30" pos:end="563:30">i</name> <operator pos:start="563:32" pos:end="563:32">=</operator> <literal type="number" pos:start="563:34" pos:end="563:34">0</literal></expr>;</init> <condition pos:start="563:37" pos:end="563:53"><expr pos:start="563:37" pos:end="563:52"><name pos:start="563:37" pos:end="563:37">i</name> <operator pos:start="563:39" pos:end="563:39">&lt;</operator> <name pos:start="563:41" pos:end="563:48">pal_size</name> <operator pos:start="563:50" pos:end="563:50">/</operator> <literal type="number" pos:start="563:52" pos:end="563:52">4</literal></expr>;</condition> <incr pos:start="563:55" pos:end="563:57"><expr pos:start="563:55" pos:end="563:57"><name pos:start="563:55" pos:end="563:55">i</name><operator pos:start="563:56" pos:end="563:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="565:29" pos:end="568:0"><block_content pos:start="565:29" pos:end="568:0">

                            <expr_stmt pos:start="565:29" pos:end="568:0"><expr pos:start="565:29" pos:end="565:78"><name pos:start="565:29" pos:end="565:39"><name pos:start="565:29" pos:end="565:31">ast</name><operator pos:start="565:32" pos:end="565:33">-&gt;</operator><name pos:start="565:34" pos:end="565:36">pal</name><index pos:start="565:37" pos:end="565:39">[<expr pos:start="565:38" pos:end="565:38"><name pos:start="565:38" pos:end="565:38">i</name></expr>]</index></name> <operator pos:start="565:41" pos:end="565:41">=</operator> <call pos:start="565:43" pos:end="565:78"><name pos:start="565:43" pos:end="565:52">av_bswap32</name><argument_list pos:start="565:53" pos:end="565:78">(<argument pos:start="565:54" pos:end="565:77"><expr pos:start="565:54" pos:end="565:77"><operator pos:start="565:54" pos:end="565:54">(</operator><operator pos:start="565:55" pos:end="565:55">(</operator><name pos:start="565:56" pos:end="565:63">uint32_t</name> <operator pos:start="565:65" pos:end="565:65">*</operator><operator pos:start="565:66" pos:end="565:66">)</operator><name pos:start="565:67" pos:end="565:73">pal_src</name><operator pos:start="565:74" pos:end="565:74">)</operator><index pos:start="565:75" pos:end="565:77">[<expr pos:start="565:76" pos:end="565:76"><name pos:start="565:76" pos:end="565:76">i</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

<cpp:else pos:start="567:1" pos:end="567:5">#<cpp:directive pos:start="567:2" pos:end="567:5">else</cpp:directive></cpp:else>

                        <expr_stmt pos:start="569:25" pos:end="572:0"><expr pos:start="569:25" pos:end="569:59"><call pos:start="569:25" pos:end="569:59"><name pos:start="569:25" pos:end="569:30">memcpy</name><argument_list pos:start="569:31" pos:end="569:59">(<argument pos:start="569:32" pos:end="569:39"><expr pos:start="569:32" pos:end="569:39"><name pos:start="569:32" pos:end="569:39"><name pos:start="569:32" pos:end="569:34">ast</name><operator pos:start="569:35" pos:end="569:36">-&gt;</operator><name pos:start="569:37" pos:end="569:39">pal</name></name></expr></argument>, <argument pos:start="569:42" pos:end="569:48"><expr pos:start="569:42" pos:end="569:48"><name pos:start="569:42" pos:end="569:48">pal_src</name></expr></argument>, <argument pos:start="569:51" pos:end="569:58"><expr pos:start="569:51" pos:end="569:58"><name pos:start="569:51" pos:end="569:58">pal_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="571:1" pos:end="571:6">#<cpp:directive pos:start="571:2" pos:end="571:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="573:25" pos:end="573:41"><expr pos:start="573:25" pos:end="573:40"><name pos:start="573:25" pos:end="573:36"><name pos:start="573:25" pos:end="573:27">ast</name><operator pos:start="573:28" pos:end="573:29">-&gt;</operator><name pos:start="573:30" pos:end="573:36">has_pal</name></name> <operator pos:start="573:38" pos:end="573:38">=</operator> <literal type="number" pos:start="573:40" pos:end="573:40">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="579:21" pos:end="579:48"><expr pos:start="579:21" pos:end="579:47"><call pos:start="579:21" pos:end="579:47"><name pos:start="579:21" pos:end="579:29">print_tag</name><argument_list pos:start="579:30" pos:end="579:47">(<argument pos:start="579:31" pos:end="579:37"><expr pos:start="579:31" pos:end="579:37"><literal type="string" pos:start="579:31" pos:end="579:37">"video"</literal></expr></argument>, <argument pos:start="579:40" pos:end="579:43"><expr pos:start="579:40" pos:end="579:43"><name pos:start="579:40" pos:end="579:43">tag1</name></expr></argument>, <argument pos:start="579:46" pos:end="579:46"><expr pos:start="579:46" pos:end="579:46"><literal type="number" pos:start="579:46" pos:end="579:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="583:21" pos:end="583:63"><expr pos:start="583:21" pos:end="583:62"><name pos:start="583:21" pos:end="583:41"><name pos:start="583:21" pos:end="583:22">st</name><operator pos:start="583:23" pos:end="583:24">-&gt;</operator><name pos:start="583:25" pos:end="583:29">codec</name><operator pos:start="583:30" pos:end="583:31">-&gt;</operator><name pos:start="583:32" pos:end="583:41">codec_type</name></name> <operator pos:start="583:43" pos:end="583:43">=</operator> <name pos:start="583:45" pos:end="583:62">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="585:21" pos:end="585:49"><expr pos:start="585:21" pos:end="585:48"><name pos:start="585:21" pos:end="585:40"><name pos:start="585:21" pos:end="585:22">st</name><operator pos:start="585:23" pos:end="585:24">-&gt;</operator><name pos:start="585:25" pos:end="585:29">codec</name><operator pos:start="585:30" pos:end="585:31">-&gt;</operator><name pos:start="585:32" pos:end="585:40">codec_tag</name></name>  <operator pos:start="585:43" pos:end="585:43">=</operator> <name pos:start="585:45" pos:end="585:48">tag1</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="587:21" pos:end="589:66"><expr pos:start="587:21" pos:end="589:65"><name pos:start="587:21" pos:end="587:39"><name pos:start="587:21" pos:end="587:22">st</name><operator pos:start="587:23" pos:end="587:24">-&gt;</operator><name pos:start="587:25" pos:end="587:29">codec</name><operator pos:start="587:30" pos:end="587:31">-&gt;</operator><name pos:start="587:32" pos:end="587:39">codec_id</name></name>   <operator pos:start="587:43" pos:end="587:43">=</operator> <call pos:start="587:45" pos:end="589:65"><name pos:start="587:45" pos:end="587:59">ff_codec_get_id</name><argument_list pos:start="587:60" pos:end="589:65">(<argument pos:start="587:61" pos:end="587:77"><expr pos:start="587:61" pos:end="587:77"><name pos:start="587:61" pos:end="587:77">ff_codec_bmp_tags</name></expr></argument>,

                                                            <argument pos:start="589:61" pos:end="589:64"><expr pos:start="589:61" pos:end="589:64"><name pos:start="589:61" pos:end="589:64">tag1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="591:21" pos:end="593:53">/* This is needed to get the pict type which is necessary

                     * for generating correct pts. */</comment>

                    <expr_stmt pos:start="595:21" pos:end="595:62"><expr pos:start="595:21" pos:end="595:61"><name pos:start="595:21" pos:end="595:36"><name pos:start="595:21" pos:end="595:22">st</name><operator pos:start="595:23" pos:end="595:24">-&gt;</operator><name pos:start="595:25" pos:end="595:36">need_parsing</name></name> <operator pos:start="595:38" pos:end="595:38">=</operator> <name pos:start="595:40" pos:end="595:61">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt>

                    <comment type="line" pos:start="597:21" pos:end="597:66">// Support "Resolution 1:1" for Avid AVI Codec</comment>

                    <if_stmt pos:start="599:21" pos:end="605:67"><if pos:start="599:21" pos:end="605:67">if <condition pos:start="599:24" pos:end="603:69">(<expr pos:start="599:25" pos:end="603:68"><name pos:start="599:25" pos:end="599:28">tag1</name> <operator pos:start="599:30" pos:end="599:31">==</operator> <call pos:start="599:33" pos:end="599:57"><name pos:start="599:33" pos:end="599:37">MKTAG</name><argument_list pos:start="599:38" pos:end="599:57">(<argument pos:start="599:39" pos:end="599:41"><expr pos:start="599:39" pos:end="599:41"><literal type="char" pos:start="599:39" pos:end="599:41">'A'</literal></expr></argument>, <argument pos:start="599:44" pos:end="599:46"><expr pos:start="599:44" pos:end="599:46"><literal type="char" pos:start="599:44" pos:end="599:46">'V'</literal></expr></argument>, <argument pos:start="599:49" pos:end="599:51"><expr pos:start="599:49" pos:end="599:51"><literal type="char" pos:start="599:49" pos:end="599:51">'R'</literal></expr></argument>, <argument pos:start="599:54" pos:end="599:56"><expr pos:start="599:54" pos:end="599:56"><literal type="char" pos:start="599:54" pos:end="599:56">'n'</literal></expr></argument>)</argument_list></call> <operator pos:start="599:59" pos:end="599:60">&amp;&amp;</operator>

                        <name pos:start="601:25" pos:end="601:49"><name pos:start="601:25" pos:end="601:26">st</name><operator pos:start="601:27" pos:end="601:28">-&gt;</operator><name pos:start="601:29" pos:end="601:33">codec</name><operator pos:start="601:34" pos:end="601:35">-&gt;</operator><name pos:start="601:36" pos:end="601:49">extradata_size</name></name> <operator pos:start="601:51" pos:end="601:52">&gt;=</operator> <literal type="number" pos:start="601:54" pos:end="601:55">31</literal>   <operator pos:start="601:59" pos:end="601:60">&amp;&amp;</operator>

                        <operator pos:start="603:25" pos:end="603:25">!</operator><call pos:start="603:26" pos:end="603:68"><name pos:start="603:26" pos:end="603:31">memcmp</name><argument_list pos:start="603:32" pos:end="603:68">(<argument pos:start="603:33" pos:end="603:57"><expr pos:start="603:33" pos:end="603:57"><operator pos:start="603:33" pos:end="603:33">&amp;</operator><name pos:start="603:34" pos:end="603:57"><name pos:start="603:34" pos:end="603:35">st</name><operator pos:start="603:36" pos:end="603:37">-&gt;</operator><name pos:start="603:38" pos:end="603:42">codec</name><operator pos:start="603:43" pos:end="603:44">-&gt;</operator><name pos:start="603:45" pos:end="603:53">extradata</name><index pos:start="603:54" pos:end="603:57">[<expr pos:start="603:55" pos:end="603:56"><literal type="number" pos:start="603:55" pos:end="603:56">28</literal></expr>]</index></name></expr></argument>, <argument pos:start="603:60" pos:end="603:64"><expr pos:start="603:60" pos:end="603:64"><literal type="string" pos:start="603:60" pos:end="603:64">"1:1"</literal></expr></argument>, <argument pos:start="603:67" pos:end="603:67"><expr pos:start="603:67" pos:end="603:67"><literal type="number" pos:start="603:67" pos:end="603:67">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="605:25" pos:end="605:67"><block_content pos:start="605:25" pos:end="605:67">

                        <expr_stmt pos:start="605:25" pos:end="605:67"><expr pos:start="605:25" pos:end="605:66"><name pos:start="605:25" pos:end="605:43"><name pos:start="605:25" pos:end="605:26">st</name><operator pos:start="605:27" pos:end="605:28">-&gt;</operator><name pos:start="605:29" pos:end="605:33">codec</name><operator pos:start="605:34" pos:end="605:35">-&gt;</operator><name pos:start="605:36" pos:end="605:43">codec_id</name></name> <operator pos:start="605:45" pos:end="605:45">=</operator> <name pos:start="605:47" pos:end="605:66">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <if_stmt pos:start="609:21" pos:end="631:21"><if pos:start="609:21" pos:end="631:21">if <condition pos:start="609:24" pos:end="611:61">(<expr pos:start="609:25" pos:end="611:60"><name pos:start="609:25" pos:end="609:44"><name pos:start="609:25" pos:end="609:26">st</name><operator pos:start="609:27" pos:end="609:28">-&gt;</operator><name pos:start="609:29" pos:end="609:33">codec</name><operator pos:start="609:34" pos:end="609:35">-&gt;</operator><name pos:start="609:36" pos:end="609:44">codec_tag</name></name> <operator pos:start="609:46" pos:end="609:47">==</operator> <literal type="number" pos:start="609:49" pos:end="609:49">0</literal> <operator pos:start="609:51" pos:end="609:52">&amp;&amp;</operator> <name pos:start="609:54" pos:end="609:70"><name pos:start="609:54" pos:end="609:55">st</name><operator pos:start="609:56" pos:end="609:57">-&gt;</operator><name pos:start="609:58" pos:end="609:62">codec</name><operator pos:start="609:63" pos:end="609:64">-&gt;</operator><name pos:start="609:65" pos:end="609:70">height</name></name> <operator pos:start="609:72" pos:end="609:72">&gt;</operator> <literal type="number" pos:start="609:74" pos:end="609:74">0</literal> <operator pos:start="609:76" pos:end="609:77">&amp;&amp;</operator>

                        <name pos:start="611:25" pos:end="611:49"><name pos:start="611:25" pos:end="611:26">st</name><operator pos:start="611:27" pos:end="611:28">-&gt;</operator><name pos:start="611:29" pos:end="611:33">codec</name><operator pos:start="611:34" pos:end="611:35">-&gt;</operator><name pos:start="611:36" pos:end="611:49">extradata_size</name></name> <operator pos:start="611:51" pos:end="611:51">&lt;</operator> <literal type="number" pos:start="611:53" pos:end="611:54">1U</literal> <operator pos:start="611:56" pos:end="611:57">&lt;&lt;</operator> <literal type="number" pos:start="611:59" pos:end="611:60">30</literal></expr>)</condition> <block pos:start="611:63" pos:end="631:21">{<block_content pos:start="613:25" pos:end="629:50">

                        <expr_stmt pos:start="613:25" pos:end="613:55"><expr pos:start="613:25" pos:end="613:54"><name pos:start="613:25" pos:end="613:49"><name pos:start="613:25" pos:end="613:26">st</name><operator pos:start="613:27" pos:end="613:28">-&gt;</operator><name pos:start="613:29" pos:end="613:33">codec</name><operator pos:start="613:34" pos:end="613:35">-&gt;</operator><name pos:start="613:36" pos:end="613:49">extradata_size</name></name> <operator pos:start="613:51" pos:end="613:52">+=</operator> <literal type="number" pos:start="613:54" pos:end="613:54">9</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="615:25" pos:end="629:50"><if pos:start="615:25" pos:end="625:25">if <condition pos:start="615:28" pos:end="619:82">(<expr pos:start="615:29" pos:end="619:81"><operator pos:start="615:29" pos:end="615:29">(</operator><name pos:start="615:30" pos:end="615:32">ret</name> <operator pos:start="615:34" pos:end="615:34">=</operator> <call pos:start="615:36" pos:end="619:76"><name pos:start="615:36" pos:end="615:46">av_reallocp</name><argument_list pos:start="615:47" pos:end="619:76">(<argument pos:start="615:48" pos:end="615:68"><expr pos:start="615:48" pos:end="615:68"><operator pos:start="615:48" pos:end="615:48">&amp;</operator><name pos:start="615:49" pos:end="615:68"><name pos:start="615:49" pos:end="615:50">st</name><operator pos:start="615:51" pos:end="615:52">-&gt;</operator><name pos:start="615:53" pos:end="615:57">codec</name><operator pos:start="615:58" pos:end="615:59">-&gt;</operator><name pos:start="615:60" pos:end="615:68">extradata</name></name></expr></argument>,

                                               <argument pos:start="617:48" pos:end="619:75"><expr pos:start="617:48" pos:end="619:75"><name pos:start="617:48" pos:end="617:72"><name pos:start="617:48" pos:end="617:49">st</name><operator pos:start="617:50" pos:end="617:51">-&gt;</operator><name pos:start="617:52" pos:end="617:56">codec</name><operator pos:start="617:57" pos:end="617:58">-&gt;</operator><name pos:start="617:59" pos:end="617:72">extradata_size</name></name> <operator pos:start="617:74" pos:end="617:74">+</operator>

                                               <name pos:start="619:48" pos:end="619:75">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="619:77" pos:end="619:77">)</operator> <operator pos:start="619:79" pos:end="619:79">&lt;</operator> <literal type="number" pos:start="619:81" pos:end="619:81">0</literal></expr>)</condition> <block pos:start="619:84" pos:end="625:25">{<block_content pos:start="621:29" pos:end="623:39">

                            <expr_stmt pos:start="621:29" pos:end="621:58"><expr pos:start="621:29" pos:end="621:57"><name pos:start="621:29" pos:end="621:53"><name pos:start="621:29" pos:end="621:30">st</name><operator pos:start="621:31" pos:end="621:32">-&gt;</operator><name pos:start="621:33" pos:end="621:37">codec</name><operator pos:start="621:38" pos:end="621:39">-&gt;</operator><name pos:start="621:40" pos:end="621:53">extradata_size</name></name> <operator pos:start="621:55" pos:end="621:55">=</operator> <literal type="number" pos:start="621:57" pos:end="621:57">0</literal></expr>;</expr_stmt>

                            <return pos:start="623:29" pos:end="623:39">return <expr pos:start="623:36" pos:end="623:38"><name pos:start="623:36" pos:end="623:38">ret</name></expr>;</return>

                        </block_content>}</block></if> <else pos:start="625:27" pos:end="629:50">else<block type="pseudo" pos:start="627:29" pos:end="629:50"><block_content pos:start="627:29" pos:end="629:50">

                            <expr_stmt pos:start="627:29" pos:end="629:50"><expr pos:start="627:29" pos:end="629:49"><call pos:start="627:29" pos:end="629:49"><name pos:start="627:29" pos:end="627:34">memcpy</name><argument_list pos:start="627:35" pos:end="629:49">(<argument pos:start="627:36" pos:end="627:87"><expr pos:start="627:36" pos:end="627:87"><name pos:start="627:36" pos:end="627:55"><name pos:start="627:36" pos:end="627:37">st</name><operator pos:start="627:38" pos:end="627:39">-&gt;</operator><name pos:start="627:40" pos:end="627:44">codec</name><operator pos:start="627:45" pos:end="627:46">-&gt;</operator><name pos:start="627:47" pos:end="627:55">extradata</name></name> <operator pos:start="627:57" pos:end="627:57">+</operator> <name pos:start="627:59" pos:end="627:83"><name pos:start="627:59" pos:end="627:60">st</name><operator pos:start="627:61" pos:end="627:62">-&gt;</operator><name pos:start="627:63" pos:end="627:67">codec</name><operator pos:start="627:68" pos:end="627:69">-&gt;</operator><name pos:start="627:70" pos:end="627:83">extradata_size</name></name> <operator pos:start="627:85" pos:end="627:85">-</operator> <literal type="number" pos:start="627:87" pos:end="627:87">9</literal></expr></argument>,

                                   <argument pos:start="629:36" pos:end="629:45"><expr pos:start="629:36" pos:end="629:45"><literal type="string" pos:start="629:36" pos:end="629:45">"BottomUp"</literal></expr></argument>, <argument pos:start="629:48" pos:end="629:48"><expr pos:start="629:48" pos:end="629:48"><literal type="number" pos:start="629:48" pos:end="629:48">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="633:21" pos:end="633:65"><expr pos:start="633:21" pos:end="633:64"><name pos:start="633:21" pos:end="633:37"><name pos:start="633:21" pos:end="633:22">st</name><operator pos:start="633:23" pos:end="633:24">-&gt;</operator><name pos:start="633:25" pos:end="633:29">codec</name><operator pos:start="633:30" pos:end="633:31">-&gt;</operator><name pos:start="633:32" pos:end="633:37">height</name></name> <operator pos:start="633:39" pos:end="633:39">=</operator> <call pos:start="633:41" pos:end="633:64"><name pos:start="633:41" pos:end="633:45">FFABS</name><argument_list pos:start="633:46" pos:end="633:64">(<argument pos:start="633:47" pos:end="633:63"><expr pos:start="633:47" pos:end="633:63"><name pos:start="633:47" pos:end="633:63"><name pos:start="633:47" pos:end="633:48">st</name><operator pos:start="633:49" pos:end="633:50">-&gt;</operator><name pos:start="633:51" pos:end="633:55">codec</name><operator pos:start="633:56" pos:end="633:57">-&gt;</operator><name pos:start="633:58" pos:end="633:63">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="line" pos:start="637:1" pos:end="637:50">//                    avio_skip(pb, size - 5 * 4);</comment>

                    <break pos:start="639:21" pos:end="639:26">break;</break>

                <case pos:start="641:17" pos:end="641:40">case <expr pos:start="641:22" pos:end="641:39"><name pos:start="641:22" pos:end="641:39">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                    <expr_stmt pos:start="643:21" pos:end="643:65"><expr pos:start="643:21" pos:end="643:64"><name pos:start="643:21" pos:end="643:23">ret</name> <operator pos:start="643:25" pos:end="643:25">=</operator> <call pos:start="643:27" pos:end="643:64"><name pos:start="643:27" pos:end="643:43">ff_get_wav_header</name><argument_list pos:start="643:44" pos:end="643:64">(<argument pos:start="643:45" pos:end="643:46"><expr pos:start="643:45" pos:end="643:46"><name pos:start="643:45" pos:end="643:46">pb</name></expr></argument>, <argument pos:start="643:49" pos:end="643:57"><expr pos:start="643:49" pos:end="643:57"><name pos:start="643:49" pos:end="643:57"><name pos:start="643:49" pos:end="643:50">st</name><operator pos:start="643:51" pos:end="643:52">-&gt;</operator><name pos:start="643:53" pos:end="643:57">codec</name></name></expr></argument>, <argument pos:start="643:60" pos:end="643:63"><expr pos:start="643:60" pos:end="643:63"><name pos:start="643:60" pos:end="643:63">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="645:21" pos:end="647:35"><if pos:start="645:21" pos:end="647:35">if <condition pos:start="645:24" pos:end="645:32">(<expr pos:start="645:25" pos:end="645:31"><name pos:start="645:25" pos:end="645:27">ret</name> <operator pos:start="645:29" pos:end="645:29">&lt;</operator> <literal type="number" pos:start="645:31" pos:end="645:31">0</literal></expr>)</condition><block type="pseudo" pos:start="647:25" pos:end="647:35"><block_content pos:start="647:25" pos:end="647:35">

                        <return pos:start="647:25" pos:end="647:35">return <expr pos:start="647:32" pos:end="647:34"><name pos:start="647:32" pos:end="647:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="649:21" pos:end="649:68"><expr pos:start="649:21" pos:end="649:67"><name pos:start="649:21" pos:end="649:42"><name pos:start="649:21" pos:end="649:23">ast</name><operator pos:start="649:24" pos:end="649:25">-&gt;</operator><name pos:start="649:26" pos:end="649:42">dshow_block_align</name></name> <operator pos:start="649:44" pos:end="649:44">=</operator> <name pos:start="649:46" pos:end="649:67"><name pos:start="649:46" pos:end="649:47">st</name><operator pos:start="649:48" pos:end="649:49">-&gt;</operator><name pos:start="649:50" pos:end="649:54">codec</name><operator pos:start="649:55" pos:end="649:56">-&gt;</operator><name pos:start="649:57" pos:end="649:67">block_align</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="651:21" pos:end="667:21"><if pos:start="651:21" pos:end="667:21">if <condition pos:start="651:24" pos:end="653:67">(<expr pos:start="651:25" pos:end="653:66"><name pos:start="651:25" pos:end="651:40"><name pos:start="651:25" pos:end="651:27">ast</name><operator pos:start="651:28" pos:end="651:29">-&gt;</operator><name pos:start="651:30" pos:end="651:40">sample_size</name></name> <operator pos:start="651:42" pos:end="651:43">&amp;&amp;</operator> <name pos:start="651:45" pos:end="651:66"><name pos:start="651:45" pos:end="651:46">st</name><operator pos:start="651:47" pos:end="651:48">-&gt;</operator><name pos:start="651:49" pos:end="651:53">codec</name><operator pos:start="651:54" pos:end="651:55">-&gt;</operator><name pos:start="651:56" pos:end="651:66">block_align</name></name> <operator pos:start="651:68" pos:end="651:69">&amp;&amp;</operator>

                        <name pos:start="653:25" pos:end="653:40"><name pos:start="653:25" pos:end="653:27">ast</name><operator pos:start="653:28" pos:end="653:29">-&gt;</operator><name pos:start="653:30" pos:end="653:40">sample_size</name></name> <operator pos:start="653:42" pos:end="653:43">!=</operator> <name pos:start="653:45" pos:end="653:66"><name pos:start="653:45" pos:end="653:46">st</name><operator pos:start="653:47" pos:end="653:48">-&gt;</operator><name pos:start="653:49" pos:end="653:53">codec</name><operator pos:start="653:54" pos:end="653:55">-&gt;</operator><name pos:start="653:56" pos:end="653:66">block_align</name></name></expr>)</condition> <block pos:start="653:69" pos:end="667:21">{<block_content pos:start="655:25" pos:end="665:66">

                        <expr_stmt pos:start="655:25" pos:end="663:55"><expr pos:start="655:25" pos:end="663:54"><call pos:start="655:25" pos:end="663:54"><name pos:start="655:25" pos:end="655:30">av_log</name><argument_list pos:start="655:31" pos:end="663:54">(<argument pos:start="655:32" pos:end="655:32"><expr pos:start="655:32" pos:end="655:32"><name pos:start="655:32" pos:end="655:32">s</name></expr></argument>,

                               <argument pos:start="657:32" pos:end="657:45"><expr pos:start="657:32" pos:end="657:45"><name pos:start="657:32" pos:end="657:45">AV_LOG_WARNING</name></expr></argument>,

                               <argument pos:start="659:32" pos:end="659:71"><expr pos:start="659:32" pos:end="659:71"><literal type="string" pos:start="659:32" pos:end="659:71">"sample size (%d) != block align (%d)\n"</literal></expr></argument>,

                               <argument pos:start="661:32" pos:end="661:47"><expr pos:start="661:32" pos:end="661:47"><name pos:start="661:32" pos:end="661:47"><name pos:start="661:32" pos:end="661:34">ast</name><operator pos:start="661:35" pos:end="661:36">-&gt;</operator><name pos:start="661:37" pos:end="661:47">sample_size</name></name></expr></argument>,

                               <argument pos:start="663:32" pos:end="663:53"><expr pos:start="663:32" pos:end="663:53"><name pos:start="663:32" pos:end="663:53"><name pos:start="663:32" pos:end="663:33">st</name><operator pos:start="663:34" pos:end="663:35">-&gt;</operator><name pos:start="663:36" pos:end="663:40">codec</name><operator pos:start="663:41" pos:end="663:42">-&gt;</operator><name pos:start="663:43" pos:end="663:53">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="665:25" pos:end="665:66"><expr pos:start="665:25" pos:end="665:65"><name pos:start="665:25" pos:end="665:40"><name pos:start="665:25" pos:end="665:27">ast</name><operator pos:start="665:28" pos:end="665:29">-&gt;</operator><name pos:start="665:30" pos:end="665:40">sample_size</name></name> <operator pos:start="665:42" pos:end="665:42">=</operator> <name pos:start="665:44" pos:end="665:65"><name pos:start="665:44" pos:end="665:45">st</name><operator pos:start="665:46" pos:end="665:47">-&gt;</operator><name pos:start="665:48" pos:end="665:52">codec</name><operator pos:start="665:53" pos:end="665:54">-&gt;</operator><name pos:start="665:55" pos:end="665:65">block_align</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="669:21" pos:end="671:77">/* 2-aligned

                     * (fix for Stargate SG-1 - 3x18 - Shades of Grey.avi) */</comment>

                    <if_stmt pos:start="673:21" pos:end="675:41"><if pos:start="673:21" pos:end="675:41">if <condition pos:start="673:24" pos:end="673:33">(<expr pos:start="673:25" pos:end="673:32"><name pos:start="673:25" pos:end="673:28">size</name> <operator pos:start="673:30" pos:end="673:30">&amp;</operator> <literal type="number" pos:start="673:32" pos:end="673:32">1</literal></expr>)</condition><block type="pseudo" pos:start="675:25" pos:end="675:41"><block_content pos:start="675:25" pos:end="675:41">

                        <expr_stmt pos:start="675:25" pos:end="675:41"><expr pos:start="675:25" pos:end="675:40"><call pos:start="675:25" pos:end="675:40"><name pos:start="675:25" pos:end="675:33">avio_skip</name><argument_list pos:start="675:34" pos:end="675:40">(<argument pos:start="675:35" pos:end="675:36"><expr pos:start="675:35" pos:end="675:36"><name pos:start="675:35" pos:end="675:36">pb</name></expr></argument>, <argument pos:start="675:39" pos:end="675:39"><expr pos:start="675:39" pos:end="675:39"><literal type="number" pos:start="675:39" pos:end="675:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="677:21" pos:end="679:74">/* Force parsing as several audio frames can be in

                     * one packet and timestamps refer to packet start. */</comment>

                    <expr_stmt pos:start="681:21" pos:end="681:65"><expr pos:start="681:21" pos:end="681:64"><name pos:start="681:21" pos:end="681:36"><name pos:start="681:21" pos:end="681:22">st</name><operator pos:start="681:23" pos:end="681:24">-&gt;</operator><name pos:start="681:25" pos:end="681:36">need_parsing</name></name> <operator pos:start="681:38" pos:end="681:38">=</operator> <name pos:start="681:40" pos:end="681:64">AVSTREAM_PARSE_TIMESTAMPS</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="683:21" pos:end="687:31">/* ADTS header is in extradata, AAC without header must be

                     * stored as exact frames. Parser not needed and it will

                     * fail. */</comment>

                    <if_stmt pos:start="689:21" pos:end="693:63"><if pos:start="689:21" pos:end="693:63">if <condition pos:start="689:24" pos:end="691:50">(<expr pos:start="689:25" pos:end="691:49"><name pos:start="689:25" pos:end="689:43"><name pos:start="689:25" pos:end="689:26">st</name><operator pos:start="689:27" pos:end="689:28">-&gt;</operator><name pos:start="689:29" pos:end="689:33">codec</name><operator pos:start="689:34" pos:end="689:35">-&gt;</operator><name pos:start="689:36" pos:end="689:43">codec_id</name></name> <operator pos:start="689:45" pos:end="689:46">==</operator> <name pos:start="689:48" pos:end="689:62">AV_CODEC_ID_AAC</name> <operator pos:start="689:64" pos:end="689:65">&amp;&amp;</operator>

                        <name pos:start="691:25" pos:end="691:49"><name pos:start="691:25" pos:end="691:26">st</name><operator pos:start="691:27" pos:end="691:28">-&gt;</operator><name pos:start="691:29" pos:end="691:33">codec</name><operator pos:start="691:34" pos:end="691:35">-&gt;</operator><name pos:start="691:36" pos:end="691:49">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="693:25" pos:end="693:63"><block_content pos:start="693:25" pos:end="693:63">

                        <expr_stmt pos:start="693:25" pos:end="693:63"><expr pos:start="693:25" pos:end="693:62"><name pos:start="693:25" pos:end="693:40"><name pos:start="693:25" pos:end="693:26">st</name><operator pos:start="693:27" pos:end="693:28">-&gt;</operator><name pos:start="693:29" pos:end="693:40">need_parsing</name></name> <operator pos:start="693:42" pos:end="693:42">=</operator> <name pos:start="693:44" pos:end="693:62">AVSTREAM_PARSE_NONE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="695:21" pos:end="697:79">/* AVI files with Xan DPCM audio (wrongly) declare PCM

                     * audio in the header but have Axan as stream_code_tag. */</comment>

                    <if_stmt pos:start="699:21" pos:end="705:21"><if pos:start="699:21" pos:end="705:21">if <condition pos:start="699:24" pos:end="699:71">(<expr pos:start="699:25" pos:end="699:70"><name pos:start="699:25" pos:end="699:51"><name pos:start="699:25" pos:end="699:26">st</name><operator pos:start="699:27" pos:end="699:28">-&gt;</operator><name pos:start="699:29" pos:end="699:33">codec</name><operator pos:start="699:34" pos:end="699:35">-&gt;</operator><name pos:start="699:36" pos:end="699:51">stream_codec_tag</name></name> <operator pos:start="699:53" pos:end="699:54">==</operator> <call pos:start="699:56" pos:end="699:70"><name pos:start="699:56" pos:end="699:62">AV_RL32</name><argument_list pos:start="699:63" pos:end="699:70">(<argument pos:start="699:64" pos:end="699:69"><expr pos:start="699:64" pos:end="699:69"><literal type="string" pos:start="699:64" pos:end="699:69">"Axan"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="699:73" pos:end="705:21">{<block_content pos:start="701:25" pos:end="703:49">

                        <expr_stmt pos:start="701:25" pos:end="701:68"><expr pos:start="701:25" pos:end="701:67"><name pos:start="701:25" pos:end="701:43"><name pos:start="701:25" pos:end="701:26">st</name><operator pos:start="701:27" pos:end="701:28">-&gt;</operator><name pos:start="701:29" pos:end="701:33">codec</name><operator pos:start="701:34" pos:end="701:35">-&gt;</operator><name pos:start="701:36" pos:end="701:43">codec_id</name></name>  <operator pos:start="701:46" pos:end="701:46">=</operator> <name pos:start="701:48" pos:end="701:67">AV_CODEC_ID_XAN_DPCM</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="703:25" pos:end="703:49"><expr pos:start="703:25" pos:end="703:48"><name pos:start="703:25" pos:end="703:44"><name pos:start="703:25" pos:end="703:26">st</name><operator pos:start="703:27" pos:end="703:28">-&gt;</operator><name pos:start="703:29" pos:end="703:33">codec</name><operator pos:start="703:34" pos:end="703:35">-&gt;</operator><name pos:start="703:36" pos:end="703:44">codec_tag</name></name> <operator pos:start="703:46" pos:end="703:46">=</operator> <literal type="number" pos:start="703:48" pos:end="703:48">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="707:21" pos:end="713:21"><if pos:start="707:21" pos:end="713:21">if <condition pos:start="707:24" pos:end="707:40">(<expr pos:start="707:25" pos:end="707:39"><name pos:start="707:25" pos:end="707:39">amv_file_format</name></expr>)</condition> <block pos:start="707:42" pos:end="713:21">{<block_content pos:start="709:25" pos:end="711:51">

                        <expr_stmt pos:start="709:25" pos:end="709:75"><expr pos:start="709:25" pos:end="709:74"><name pos:start="709:25" pos:end="709:43"><name pos:start="709:25" pos:end="709:26">st</name><operator pos:start="709:27" pos:end="709:28">-&gt;</operator><name pos:start="709:29" pos:end="709:33">codec</name><operator pos:start="709:34" pos:end="709:35">-&gt;</operator><name pos:start="709:36" pos:end="709:43">codec_id</name></name>    <operator pos:start="709:48" pos:end="709:48">=</operator> <name pos:start="709:50" pos:end="709:74">AV_CODEC_ID_ADPCM_IMA_AMV</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="711:25" pos:end="711:51"><expr pos:start="711:25" pos:end="711:50"><name pos:start="711:25" pos:end="711:46"><name pos:start="711:25" pos:end="711:27">ast</name><operator pos:start="711:28" pos:end="711:29">-&gt;</operator><name pos:start="711:30" pos:end="711:46">dshow_block_align</name></name> <operator pos:start="711:48" pos:end="711:48">=</operator> <literal type="number" pos:start="711:50" pos:end="711:50">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="715:21" pos:end="715:26">break;</break>

                <case pos:start="717:17" pos:end="717:43">case <expr pos:start="717:22" pos:end="717:42"><name pos:start="717:22" pos:end="717:42">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                    <expr_stmt pos:start="719:21" pos:end="719:66"><expr pos:start="719:21" pos:end="719:65"><name pos:start="719:21" pos:end="719:41"><name pos:start="719:21" pos:end="719:22">st</name><operator pos:start="719:23" pos:end="719:24">-&gt;</operator><name pos:start="719:25" pos:end="719:29">codec</name><operator pos:start="719:30" pos:end="719:31">-&gt;</operator><name pos:start="719:32" pos:end="719:41">codec_type</name></name> <operator pos:start="719:43" pos:end="719:43">=</operator> <name pos:start="719:45" pos:end="719:65">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="721:21" pos:end="721:62"><expr pos:start="721:21" pos:end="721:61"><name pos:start="721:21" pos:end="721:39"><name pos:start="721:21" pos:end="721:22">st</name><operator pos:start="721:23" pos:end="721:24">-&gt;</operator><name pos:start="721:25" pos:end="721:29">codec</name><operator pos:start="721:30" pos:end="721:31">-&gt;</operator><name pos:start="721:32" pos:end="721:39">codec_id</name></name>   <operator pos:start="721:43" pos:end="721:43">=</operator> <name pos:start="721:45" pos:end="721:61">AV_CODEC_ID_PROBE</name></expr>;</expr_stmt>

                    <break pos:start="723:21" pos:end="723:26">break;</break>

                <default pos:start="725:17" pos:end="725:24">default:</default>

                    <expr_stmt pos:start="727:21" pos:end="727:62"><expr pos:start="727:21" pos:end="727:61"><name pos:start="727:21" pos:end="727:41"><name pos:start="727:21" pos:end="727:22">st</name><operator pos:start="727:23" pos:end="727:24">-&gt;</operator><name pos:start="727:25" pos:end="727:29">codec</name><operator pos:start="727:30" pos:end="727:31">-&gt;</operator><name pos:start="727:32" pos:end="727:41">codec_type</name></name> <operator pos:start="727:43" pos:end="727:43">=</operator> <name pos:start="727:45" pos:end="727:61">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="729:21" pos:end="729:61"><expr pos:start="729:21" pos:end="729:60"><name pos:start="729:21" pos:end="729:39"><name pos:start="729:21" pos:end="729:22">st</name><operator pos:start="729:23" pos:end="729:24">-&gt;</operator><name pos:start="729:25" pos:end="729:29">codec</name><operator pos:start="729:30" pos:end="729:31">-&gt;</operator><name pos:start="729:32" pos:end="729:39">codec_id</name></name>   <operator pos:start="729:43" pos:end="729:43">=</operator> <name pos:start="729:45" pos:end="729:60">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="731:21" pos:end="731:46"><expr pos:start="731:21" pos:end="731:45"><name pos:start="731:21" pos:end="731:40"><name pos:start="731:21" pos:end="731:22">st</name><operator pos:start="731:23" pos:end="731:24">-&gt;</operator><name pos:start="731:25" pos:end="731:29">codec</name><operator pos:start="731:30" pos:end="731:31">-&gt;</operator><name pos:start="731:32" pos:end="731:40">codec_tag</name></name>  <operator pos:start="731:43" pos:end="731:43">=</operator> <literal type="number" pos:start="731:45" pos:end="731:45">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="733:21" pos:end="733:40"><expr pos:start="733:21" pos:end="733:39"><call pos:start="733:21" pos:end="733:39"><name pos:start="733:21" pos:end="733:29">avio_skip</name><argument_list pos:start="733:30" pos:end="733:39">(<argument pos:start="733:31" pos:end="733:32"><expr pos:start="733:31" pos:end="733:32"><name pos:start="733:31" pos:end="733:32">pb</name></expr></argument>, <argument pos:start="733:35" pos:end="733:38"><expr pos:start="733:35" pos:end="733:38"><name pos:start="733:35" pos:end="733:38">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="735:21" pos:end="735:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

            <break pos:start="741:13" pos:end="741:18">break;</break>

        <case pos:start="743:9" pos:end="743:39">case <expr pos:start="743:14" pos:end="743:38"><call pos:start="743:14" pos:end="743:38"><name pos:start="743:14" pos:end="743:18">MKTAG</name><argument_list pos:start="743:19" pos:end="743:38">(<argument pos:start="743:20" pos:end="743:22"><expr pos:start="743:20" pos:end="743:22"><literal type="char" pos:start="743:20" pos:end="743:22">'i'</literal></expr></argument>, <argument pos:start="743:25" pos:end="743:27"><expr pos:start="743:25" pos:end="743:27"><literal type="char" pos:start="743:25" pos:end="743:27">'n'</literal></expr></argument>, <argument pos:start="743:30" pos:end="743:32"><expr pos:start="743:30" pos:end="743:32"><literal type="char" pos:start="743:30" pos:end="743:32">'d'</literal></expr></argument>, <argument pos:start="743:35" pos:end="743:37"><expr pos:start="743:35" pos:end="743:37"><literal type="char" pos:start="743:35" pos:end="743:37">'x'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="745:13" pos:end="745:30"><expr pos:start="745:13" pos:end="745:29"><name pos:start="745:13" pos:end="745:13">i</name> <operator pos:start="745:15" pos:end="745:15">=</operator> <call pos:start="745:17" pos:end="745:29"><name pos:start="745:17" pos:end="745:25">avio_tell</name><argument_list pos:start="745:26" pos:end="745:29">(<argument pos:start="745:27" pos:end="745:28"><expr pos:start="745:27" pos:end="745:28"><name pos:start="745:27" pos:end="745:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="747:13" pos:end="753:26"><if pos:start="747:13" pos:end="753:26">if <condition pos:start="747:16" pos:end="751:55">(<expr pos:start="747:17" pos:end="751:54"><name pos:start="747:17" pos:end="747:28"><name pos:start="747:17" pos:end="747:18">pb</name><operator pos:start="747:19" pos:end="747:20">-&gt;</operator><name pos:start="747:21" pos:end="747:28">seekable</name></name> <operator pos:start="747:30" pos:end="747:31">&amp;&amp;</operator> <operator pos:start="747:33" pos:end="747:33">!</operator><operator pos:start="747:34" pos:end="747:34">(</operator><name pos:start="747:35" pos:end="747:42"><name pos:start="747:35" pos:end="747:35">s</name><operator pos:start="747:36" pos:end="747:37">-&gt;</operator><name pos:start="747:38" pos:end="747:42">flags</name></name> <operator pos:start="747:44" pos:end="747:44">&amp;</operator> <name pos:start="747:46" pos:end="747:62">AVFMT_FLAG_IGNIDX</name><operator pos:start="747:63" pos:end="747:63">)</operator> <operator pos:start="747:65" pos:end="747:66">&amp;&amp;</operator>

                <call pos:start="749:17" pos:end="749:46"><name pos:start="749:17" pos:end="749:40">read_braindead_odml_indx</name><argument_list pos:start="749:41" pos:end="749:46">(<argument pos:start="749:42" pos:end="749:42"><expr pos:start="749:42" pos:end="749:42"><name pos:start="749:42" pos:end="749:42">s</name></expr></argument>, <argument pos:start="749:45" pos:end="749:45"><expr pos:start="749:45" pos:end="749:45"><literal type="number" pos:start="749:45" pos:end="749:45">0</literal></expr></argument>)</argument_list></call> <operator pos:start="749:48" pos:end="749:48">&lt;</operator> <literal type="number" pos:start="749:50" pos:end="749:50">0</literal> <operator pos:start="749:52" pos:end="749:53">&amp;&amp;</operator>

                <operator pos:start="751:17" pos:end="751:17">(</operator><name pos:start="751:18" pos:end="751:37"><name pos:start="751:18" pos:end="751:18">s</name><operator pos:start="751:19" pos:end="751:20">-&gt;</operator><name pos:start="751:21" pos:end="751:37">error_recognition</name></name> <operator pos:start="751:39" pos:end="751:39">&amp;</operator> <name pos:start="751:41" pos:end="751:53">AV_EF_EXPLODE</name><operator pos:start="751:54" pos:end="751:54">)</operator></expr>)</condition><block type="pseudo" pos:start="753:17" pos:end="753:26"><block_content pos:start="753:17" pos:end="753:26">

                <goto pos:start="753:17" pos:end="753:26">goto <name pos:start="753:22" pos:end="753:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:46"><expr pos:start="755:13" pos:end="755:45"><call pos:start="755:13" pos:end="755:45"><name pos:start="755:13" pos:end="755:21">avio_seek</name><argument_list pos:start="755:22" pos:end="755:45">(<argument pos:start="755:23" pos:end="755:24"><expr pos:start="755:23" pos:end="755:24"><name pos:start="755:23" pos:end="755:24">pb</name></expr></argument>, <argument pos:start="755:27" pos:end="755:34"><expr pos:start="755:27" pos:end="755:34"><name pos:start="755:27" pos:end="755:27">i</name> <operator pos:start="755:29" pos:end="755:29">+</operator> <name pos:start="755:31" pos:end="755:34">size</name></expr></argument>, <argument pos:start="755:37" pos:end="755:44"><expr pos:start="755:37" pos:end="755:44"><name pos:start="755:37" pos:end="755:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        <case pos:start="759:9" pos:end="759:39">case <expr pos:start="759:14" pos:end="759:38"><call pos:start="759:14" pos:end="759:38"><name pos:start="759:14" pos:end="759:18">MKTAG</name><argument_list pos:start="759:19" pos:end="759:38">(<argument pos:start="759:20" pos:end="759:22"><expr pos:start="759:20" pos:end="759:22"><literal type="char" pos:start="759:20" pos:end="759:22">'v'</literal></expr></argument>, <argument pos:start="759:25" pos:end="759:27"><expr pos:start="759:25" pos:end="759:27"><literal type="char" pos:start="759:25" pos:end="759:27">'p'</literal></expr></argument>, <argument pos:start="759:30" pos:end="759:32"><expr pos:start="759:30" pos:end="759:32"><literal type="char" pos:start="759:30" pos:end="759:32">'r'</literal></expr></argument>, <argument pos:start="759:35" pos:end="759:37"><expr pos:start="759:35" pos:end="759:37"><literal type="char" pos:start="759:35" pos:end="759:37">'p'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="761:13" pos:end="809:13"><if pos:start="761:13" pos:end="809:13">if <condition pos:start="761:16" pos:end="761:71">(<expr pos:start="761:17" pos:end="761:70"><name pos:start="761:17" pos:end="761:64"><name pos:start="761:17" pos:end="761:28">stream_index</name> <argument_list type="generic" pos:start="761:30" pos:end="761:64">&lt; <argument pos:start="761:32" pos:end="761:62"><expr pos:start="761:32" pos:end="761:62"><operator pos:start="761:32" pos:end="761:32">(</operator><name pos:start="761:33" pos:end="761:40">unsigned</name><operator pos:start="761:41" pos:end="761:41">)</operator><name pos:start="761:42" pos:end="761:54"><name pos:start="761:42" pos:end="761:42">s</name><operator pos:start="761:43" pos:end="761:44">-&gt;</operator><name pos:start="761:45" pos:end="761:54">nb_streams</name></name> <operator pos:start="761:56" pos:end="761:57">&amp;&amp;</operator> <name pos:start="761:59" pos:end="761:62">size</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="761:66" pos:end="761:66">9</literal> <operator pos:start="761:68" pos:end="761:68">*</operator> <literal type="number" pos:start="761:70" pos:end="761:70">4</literal></expr>)</condition> <block pos:start="761:73" pos:end="809:13">{<block_content pos:start="763:17" pos:end="807:30">

                <decl_stmt pos:start="763:17" pos:end="763:49"><decl pos:start="763:17" pos:end="763:33"><type pos:start="763:17" pos:end="763:26"><name pos:start="763:17" pos:end="763:26">AVRational</name></type> <name pos:start="763:28" pos:end="763:33">active</name></decl>, <decl pos:start="763:36" pos:end="763:48"><type ref="prev" pos:start="763:17" pos:end="763:26"/><name pos:start="763:36" pos:end="763:48">active_aspect</name></decl>;</decl_stmt>



                <expr_stmt pos:start="767:17" pos:end="767:46"><expr pos:start="767:17" pos:end="767:45"><name pos:start="767:17" pos:end="767:18">st</name> <operator pos:start="767:20" pos:end="767:20">=</operator> <name pos:start="767:22" pos:end="767:45"><name pos:start="767:22" pos:end="767:22">s</name><operator pos:start="767:23" pos:end="767:24">-&gt;</operator><name pos:start="767:25" pos:end="767:31">streams</name><index pos:start="767:32" pos:end="767:45">[<expr pos:start="767:33" pos:end="767:44"><name pos:start="767:33" pos:end="767:44">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="769:17" pos:end="769:30"><expr pos:start="769:17" pos:end="769:29"><call pos:start="769:17" pos:end="769:29"><name pos:start="769:17" pos:end="769:25">avio_rl32</name><argument_list pos:start="769:26" pos:end="769:29">(<argument pos:start="769:27" pos:end="769:28"><expr pos:start="769:27" pos:end="769:28"><name pos:start="769:27" pos:end="769:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="771:17" pos:end="771:30"><expr pos:start="771:17" pos:end="771:29"><call pos:start="771:17" pos:end="771:29"><name pos:start="771:17" pos:end="771:25">avio_rl32</name><argument_list pos:start="771:26" pos:end="771:29">(<argument pos:start="771:27" pos:end="771:28"><expr pos:start="771:27" pos:end="771:28"><name pos:start="771:27" pos:end="771:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="773:17" pos:end="773:30"><expr pos:start="773:17" pos:end="773:29"><call pos:start="773:17" pos:end="773:29"><name pos:start="773:17" pos:end="773:25">avio_rl32</name><argument_list pos:start="773:26" pos:end="773:29">(<argument pos:start="773:27" pos:end="773:28"><expr pos:start="773:27" pos:end="773:28"><name pos:start="773:27" pos:end="773:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="775:17" pos:end="775:30"><expr pos:start="775:17" pos:end="775:29"><call pos:start="775:17" pos:end="775:29"><name pos:start="775:17" pos:end="775:25">avio_rl32</name><argument_list pos:start="775:26" pos:end="775:29">(<argument pos:start="775:27" pos:end="775:28"><expr pos:start="775:27" pos:end="775:28"><name pos:start="775:27" pos:end="775:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="777:17" pos:end="777:30"><expr pos:start="777:17" pos:end="777:29"><call pos:start="777:17" pos:end="777:29"><name pos:start="777:17" pos:end="777:25">avio_rl32</name><argument_list pos:start="777:26" pos:end="777:29">(<argument pos:start="777:27" pos:end="777:28"><expr pos:start="777:27" pos:end="777:28"><name pos:start="777:27" pos:end="777:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="781:17" pos:end="781:50"><expr pos:start="781:17" pos:end="781:49"><name pos:start="781:17" pos:end="781:33"><name pos:start="781:17" pos:end="781:29">active_aspect</name><operator pos:start="781:30" pos:end="781:30">.</operator><name pos:start="781:31" pos:end="781:33">den</name></name> <operator pos:start="781:35" pos:end="781:35">=</operator> <call pos:start="781:37" pos:end="781:49"><name pos:start="781:37" pos:end="781:45">avio_rl16</name><argument_list pos:start="781:46" pos:end="781:49">(<argument pos:start="781:47" pos:end="781:48"><expr pos:start="781:47" pos:end="781:48"><name pos:start="781:47" pos:end="781:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="783:17" pos:end="783:50"><expr pos:start="783:17" pos:end="783:49"><name pos:start="783:17" pos:end="783:33"><name pos:start="783:17" pos:end="783:29">active_aspect</name><operator pos:start="783:30" pos:end="783:30">.</operator><name pos:start="783:31" pos:end="783:33">num</name></name> <operator pos:start="783:35" pos:end="783:35">=</operator> <call pos:start="783:37" pos:end="783:49"><name pos:start="783:37" pos:end="783:45">avio_rl16</name><argument_list pos:start="783:46" pos:end="783:49">(<argument pos:start="783:47" pos:end="783:48"><expr pos:start="783:47" pos:end="783:48"><name pos:start="783:47" pos:end="783:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="785:17" pos:end="785:50"><expr pos:start="785:17" pos:end="785:49"><name pos:start="785:17" pos:end="785:26"><name pos:start="785:17" pos:end="785:22">active</name><operator pos:start="785:23" pos:end="785:23">.</operator><name pos:start="785:24" pos:end="785:26">num</name></name>        <operator pos:start="785:35" pos:end="785:35">=</operator> <call pos:start="785:37" pos:end="785:49"><name pos:start="785:37" pos:end="785:45">avio_rl32</name><argument_list pos:start="785:46" pos:end="785:49">(<argument pos:start="785:47" pos:end="785:48"><expr pos:start="785:47" pos:end="785:48"><name pos:start="785:47" pos:end="785:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="787:17" pos:end="787:50"><expr pos:start="787:17" pos:end="787:49"><name pos:start="787:17" pos:end="787:26"><name pos:start="787:17" pos:end="787:22">active</name><operator pos:start="787:23" pos:end="787:23">.</operator><name pos:start="787:24" pos:end="787:26">den</name></name>        <operator pos:start="787:35" pos:end="787:35">=</operator> <call pos:start="787:37" pos:end="787:49"><name pos:start="787:37" pos:end="787:45">avio_rl32</name><argument_list pos:start="787:46" pos:end="787:49">(<argument pos:start="787:47" pos:end="787:48"><expr pos:start="787:47" pos:end="787:48"><name pos:start="787:47" pos:end="787:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="789:17" pos:end="789:30"><expr pos:start="789:17" pos:end="789:29"><call pos:start="789:17" pos:end="789:29"><name pos:start="789:17" pos:end="789:25">avio_rl32</name><argument_list pos:start="789:26" pos:end="789:29">(<argument pos:start="789:27" pos:end="789:28"><expr pos:start="789:27" pos:end="789:28"><name pos:start="789:27" pos:end="789:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="789:32" pos:end="789:50">// nbFieldsPerFrame</comment>



                <if_stmt pos:start="793:17" pos:end="805:17"><if pos:start="793:17" pos:end="805:17">if <condition pos:start="793:20" pos:end="795:45">(<expr pos:start="793:21" pos:end="795:44"><name pos:start="793:21" pos:end="793:37"><name pos:start="793:21" pos:end="793:33">active_aspect</name><operator pos:start="793:34" pos:end="793:34">.</operator><name pos:start="793:35" pos:end="793:37">num</name></name> <operator pos:start="793:39" pos:end="793:40">&amp;&amp;</operator> <name pos:start="793:42" pos:end="793:58"><name pos:start="793:42" pos:end="793:54">active_aspect</name><operator pos:start="793:55" pos:end="793:55">.</operator><name pos:start="793:56" pos:end="793:58">den</name></name> <operator pos:start="793:60" pos:end="793:61">&amp;&amp;</operator>

                    <name pos:start="795:21" pos:end="795:30"><name pos:start="795:21" pos:end="795:26">active</name><operator pos:start="795:27" pos:end="795:27">.</operator><name pos:start="795:28" pos:end="795:30">num</name></name> <operator pos:start="795:32" pos:end="795:33">&amp;&amp;</operator> <name pos:start="795:35" pos:end="795:44"><name pos:start="795:35" pos:end="795:40">active</name><operator pos:start="795:41" pos:end="795:41">.</operator><name pos:start="795:42" pos:end="795:44">den</name></name></expr>)</condition> <block pos:start="795:47" pos:end="805:17">{<block_content pos:start="797:21" pos:end="803:52">

                    <expr_stmt pos:start="797:21" pos:end="797:78"><expr pos:start="797:21" pos:end="797:77"><name pos:start="797:21" pos:end="797:43"><name pos:start="797:21" pos:end="797:22">st</name><operator pos:start="797:23" pos:end="797:24">-&gt;</operator><name pos:start="797:25" pos:end="797:43">sample_aspect_ratio</name></name> <operator pos:start="797:45" pos:end="797:45">=</operator> <call pos:start="797:47" pos:end="797:77"><name pos:start="797:47" pos:end="797:54">av_div_q</name><argument_list pos:start="797:55" pos:end="797:77">(<argument pos:start="797:56" pos:end="797:68"><expr pos:start="797:56" pos:end="797:68"><name pos:start="797:56" pos:end="797:68">active_aspect</name></expr></argument>, <argument pos:start="797:71" pos:end="797:76"><expr pos:start="797:71" pos:end="797:76"><name pos:start="797:71" pos:end="797:76">active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="799:21" pos:end="803:52"><expr pos:start="799:21" pos:end="803:51"><call pos:start="799:21" pos:end="803:51"><name pos:start="799:21" pos:end="799:27">av_dlog</name><argument_list pos:start="799:28" pos:end="803:51">(<argument pos:start="799:29" pos:end="799:29"><expr pos:start="799:29" pos:end="799:29"><name pos:start="799:29" pos:end="799:29">s</name></expr></argument>, <argument pos:start="799:32" pos:end="799:51"><expr pos:start="799:32" pos:end="799:51"><literal type="string" pos:start="799:32" pos:end="799:51">"vprp %d/%d %d/%d\n"</literal></expr></argument>,

                            <argument pos:start="801:29" pos:end="801:45"><expr pos:start="801:29" pos:end="801:45"><name pos:start="801:29" pos:end="801:45"><name pos:start="801:29" pos:end="801:41">active_aspect</name><operator pos:start="801:42" pos:end="801:42">.</operator><name pos:start="801:43" pos:end="801:45">num</name></name></expr></argument>, <argument pos:start="801:48" pos:end="801:64"><expr pos:start="801:48" pos:end="801:64"><name pos:start="801:48" pos:end="801:64"><name pos:start="801:48" pos:end="801:60">active_aspect</name><operator pos:start="801:61" pos:end="801:61">.</operator><name pos:start="801:62" pos:end="801:64">den</name></name></expr></argument>,

                            <argument pos:start="803:29" pos:end="803:38"><expr pos:start="803:29" pos:end="803:38"><name pos:start="803:29" pos:end="803:38"><name pos:start="803:29" pos:end="803:34">active</name><operator pos:start="803:35" pos:end="803:35">.</operator><name pos:start="803:36" pos:end="803:38">num</name></name></expr></argument>, <argument pos:start="803:41" pos:end="803:50"><expr pos:start="803:41" pos:end="803:50"><name pos:start="803:41" pos:end="803:50"><name pos:start="803:41" pos:end="803:46">active</name><operator pos:start="803:47" pos:end="803:47">.</operator><name pos:start="803:48" pos:end="803:50">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="807:17" pos:end="807:30"><expr pos:start="807:17" pos:end="807:29"><name pos:start="807:17" pos:end="807:20">size</name> <operator pos:start="807:22" pos:end="807:23">-=</operator> <literal type="number" pos:start="807:25" pos:end="807:25">9</literal> <operator pos:start="807:27" pos:end="807:27">*</operator> <literal type="number" pos:start="807:29" pos:end="807:29">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:32"><expr pos:start="811:13" pos:end="811:31"><call pos:start="811:13" pos:end="811:31"><name pos:start="811:13" pos:end="811:21">avio_skip</name><argument_list pos:start="811:22" pos:end="811:31">(<argument pos:start="811:23" pos:end="811:24"><expr pos:start="811:23" pos:end="811:24"><name pos:start="811:23" pos:end="811:24">pb</name></expr></argument>, <argument pos:start="811:27" pos:end="811:30"><expr pos:start="811:27" pos:end="811:30"><name pos:start="811:27" pos:end="811:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="813:13" pos:end="813:18">break;</break>

        <case pos:start="815:9" pos:end="815:39">case <expr pos:start="815:14" pos:end="815:38"><call pos:start="815:14" pos:end="815:38"><name pos:start="815:14" pos:end="815:18">MKTAG</name><argument_list pos:start="815:19" pos:end="815:38">(<argument pos:start="815:20" pos:end="815:22"><expr pos:start="815:20" pos:end="815:22"><literal type="char" pos:start="815:20" pos:end="815:22">'s'</literal></expr></argument>, <argument pos:start="815:25" pos:end="815:27"><expr pos:start="815:25" pos:end="815:27"><literal type="char" pos:start="815:25" pos:end="815:27">'t'</literal></expr></argument>, <argument pos:start="815:30" pos:end="815:32"><expr pos:start="815:30" pos:end="815:32"><literal type="char" pos:start="815:30" pos:end="815:32">'r'</literal></expr></argument>, <argument pos:start="815:35" pos:end="815:37"><expr pos:start="815:35" pos:end="815:37"><literal type="char" pos:start="815:35" pos:end="815:37">'n'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="817:13" pos:end="827:13"><if pos:start="817:13" pos:end="827:13">if <condition pos:start="817:16" pos:end="817:30">(<expr pos:start="817:17" pos:end="817:29"><name pos:start="817:17" pos:end="817:29"><name pos:start="817:17" pos:end="817:17">s</name><operator pos:start="817:18" pos:end="817:19">-&gt;</operator><name pos:start="817:20" pos:end="817:29">nb_streams</name></name></expr>)</condition> <block pos:start="817:32" pos:end="827:13">{<block_content pos:start="819:17" pos:end="825:22">

                <expr_stmt pos:start="819:17" pos:end="819:80"><expr pos:start="819:17" pos:end="819:79"><name pos:start="819:17" pos:end="819:19">ret</name> <operator pos:start="819:21" pos:end="819:21">=</operator> <call pos:start="819:23" pos:end="819:79"><name pos:start="819:23" pos:end="819:34">avi_read_tag</name><argument_list pos:start="819:35" pos:end="819:79">(<argument pos:start="819:36" pos:end="819:36"><expr pos:start="819:36" pos:end="819:36"><name pos:start="819:36" pos:end="819:36">s</name></expr></argument>, <argument pos:start="819:39" pos:end="819:67"><expr pos:start="819:39" pos:end="819:67"><name pos:start="819:39" pos:end="819:67"><name pos:start="819:39" pos:end="819:39">s</name><operator pos:start="819:40" pos:end="819:41">-&gt;</operator><name pos:start="819:42" pos:end="819:48">streams</name><index pos:start="819:49" pos:end="819:67">[<expr pos:start="819:50" pos:end="819:66"><name pos:start="819:50" pos:end="819:62"><name pos:start="819:50" pos:end="819:50">s</name><operator pos:start="819:51" pos:end="819:52">-&gt;</operator><name pos:start="819:53" pos:end="819:62">nb_streams</name></name> <operator pos:start="819:64" pos:end="819:64">-</operator> <literal type="number" pos:start="819:66" pos:end="819:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="819:70" pos:end="819:72"><expr pos:start="819:70" pos:end="819:72"><name pos:start="819:70" pos:end="819:72">tag</name></expr></argument>, <argument pos:start="819:75" pos:end="819:78"><expr pos:start="819:75" pos:end="819:78"><name pos:start="819:75" pos:end="819:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="821:17" pos:end="823:31"><if pos:start="821:17" pos:end="823:31">if <condition pos:start="821:20" pos:end="821:28">(<expr pos:start="821:21" pos:end="821:27"><name pos:start="821:21" pos:end="821:23">ret</name> <operator pos:start="821:25" pos:end="821:25">&lt;</operator> <literal type="number" pos:start="821:27" pos:end="821:27">0</literal></expr>)</condition><block type="pseudo" pos:start="823:21" pos:end="823:31"><block_content pos:start="823:21" pos:end="823:31">

                    <return pos:start="823:21" pos:end="823:31">return <expr pos:start="823:28" pos:end="823:30"><name pos:start="823:28" pos:end="823:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="825:17" pos:end="825:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <default pos:start="829:9" pos:end="829:16">default:</default>

            <if_stmt pos:start="831:13" pos:end="849:13"><if pos:start="831:13" pos:end="849:13">if <condition pos:start="831:16" pos:end="831:31">(<expr pos:start="831:17" pos:end="831:30"><name pos:start="831:17" pos:end="831:20">size</name> <operator pos:start="831:22" pos:end="831:22">&gt;</operator> <literal type="number" pos:start="831:24" pos:end="831:30">1000000</literal></expr>)</condition> <block pos:start="831:33" pos:end="849:13">{<block_content pos:start="833:17" pos:end="847:35">

                <expr_stmt pos:start="833:17" pos:end="837:73"><expr pos:start="833:17" pos:end="837:72"><call pos:start="833:17" pos:end="837:72"><name pos:start="833:17" pos:end="833:22">av_log</name><argument_list pos:start="833:23" pos:end="837:72">(<argument pos:start="833:24" pos:end="833:24"><expr pos:start="833:24" pos:end="833:24"><name pos:start="833:24" pos:end="833:24">s</name></expr></argument>, <argument pos:start="833:27" pos:end="833:38"><expr pos:start="833:27" pos:end="833:38"><name pos:start="833:27" pos:end="833:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="835:24" pos:end="837:71"><expr pos:start="835:24" pos:end="837:71"><literal type="string" pos:start="835:24" pos:end="835:69">"Something went wrong during header parsing, "</literal>

                       <literal type="string" pos:start="837:24" pos:end="837:71">"I will ignore it and try to continue anyway.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="839:17" pos:end="841:30"><if pos:start="839:17" pos:end="841:30">if <condition pos:start="839:20" pos:end="839:57">(<expr pos:start="839:21" pos:end="839:56"><name pos:start="839:21" pos:end="839:40"><name pos:start="839:21" pos:end="839:21">s</name><operator pos:start="839:22" pos:end="839:23">-&gt;</operator><name pos:start="839:24" pos:end="839:40">error_recognition</name></name> <operator pos:start="839:42" pos:end="839:42">&amp;</operator> <name pos:start="839:44" pos:end="839:56">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="841:21" pos:end="841:30"><block_content pos:start="841:21" pos:end="841:30">

                    <goto pos:start="841:21" pos:end="841:30">goto <name pos:start="841:26" pos:end="841:29">fail</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="843:17" pos:end="843:51"><expr pos:start="843:17" pos:end="843:50"><name pos:start="843:17" pos:end="843:30"><name pos:start="843:17" pos:end="843:19">avi</name><operator pos:start="843:20" pos:end="843:21">-&gt;</operator><name pos:start="843:22" pos:end="843:30">movi_list</name></name> <operator pos:start="843:32" pos:end="843:32">=</operator> <call pos:start="843:34" pos:end="843:46"><name pos:start="843:34" pos:end="843:42">avio_tell</name><argument_list pos:start="843:43" pos:end="843:46">(<argument pos:start="843:44" pos:end="843:45"><expr pos:start="843:44" pos:end="843:45"><name pos:start="843:44" pos:end="843:45">pb</name></expr></argument>)</argument_list></call> <operator pos:start="843:48" pos:end="843:48">-</operator> <literal type="number" pos:start="843:50" pos:end="843:50">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="845:17" pos:end="845:47"><expr pos:start="845:17" pos:end="845:46"><name pos:start="845:17" pos:end="845:29"><name pos:start="845:17" pos:end="845:19">avi</name><operator pos:start="845:20" pos:end="845:21">-&gt;</operator><name pos:start="845:22" pos:end="845:29">movi_end</name></name>  <operator pos:start="845:32" pos:end="845:32">=</operator> <call pos:start="845:34" pos:end="845:46"><name pos:start="845:34" pos:end="845:42">avio_size</name><argument_list pos:start="845:43" pos:end="845:46">(<argument pos:start="845:44" pos:end="845:45"><expr pos:start="845:44" pos:end="845:45"><name pos:start="845:44" pos:end="845:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="847:17" pos:end="847:35">goto <name pos:start="847:22" pos:end="847:34">end_of_header</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="851:13" pos:end="851:26">/* skip tag */</comment>

            <expr_stmt pos:start="853:13" pos:end="853:31"><expr pos:start="853:13" pos:end="853:30"><name pos:start="853:13" pos:end="853:16">size</name> <operator pos:start="853:18" pos:end="853:19">+=</operator> <operator pos:start="853:21" pos:end="853:21">(</operator><name pos:start="853:22" pos:end="853:25">size</name> <operator pos:start="853:27" pos:end="853:27">&amp;</operator> <literal type="number" pos:start="853:29" pos:end="853:29">1</literal><operator pos:start="853:30" pos:end="853:30">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="855:13" pos:end="855:32"><expr pos:start="855:13" pos:end="855:31"><call pos:start="855:13" pos:end="855:31"><name pos:start="855:13" pos:end="855:21">avio_skip</name><argument_list pos:start="855:22" pos:end="855:31">(<argument pos:start="855:23" pos:end="855:24"><expr pos:start="855:23" pos:end="855:24"><name pos:start="855:23" pos:end="855:24">pb</name></expr></argument>, <argument pos:start="855:27" pos:end="855:30"><expr pos:start="855:27" pos:end="855:30"><name pos:start="855:27" pos:end="855:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="857:13" pos:end="857:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



<label pos:start="865:1" pos:end="865:14"><name pos:start="865:1" pos:end="865:13">end_of_header</name>:</label>

    <comment type="block" pos:start="867:5" pos:end="867:29">/* check stream number */</comment>

    <if_stmt pos:start="869:5" pos:end="877:5"><if pos:start="869:5" pos:end="877:5">if <condition pos:start="869:8" pos:end="869:42">(<expr pos:start="869:9" pos:end="869:41"><name pos:start="869:9" pos:end="869:20">stream_index</name> <operator pos:start="869:22" pos:end="869:23">!=</operator> <name pos:start="869:25" pos:end="869:37"><name pos:start="869:25" pos:end="869:25">s</name><operator pos:start="869:26" pos:end="869:27">-&gt;</operator><name pos:start="869:28" pos:end="869:37">nb_streams</name></name> <operator pos:start="869:39" pos:end="869:39">-</operator> <literal type="number" pos:start="869:41" pos:end="869:41">1</literal></expr>)</condition> <block pos:start="869:44" pos:end="877:5">{<block_content pos:start="873:1" pos:end="875:35">



<label pos:start="873:1" pos:end="873:5"><name pos:start="873:1" pos:end="873:4">fail</name>:</label>

        <return pos:start="875:9" pos:end="875:35">return <expr pos:start="875:16" pos:end="875:34"><name pos:start="875:16" pos:end="875:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="881:5" pos:end="883:26"><if pos:start="881:5" pos:end="883:26">if <condition pos:start="881:8" pos:end="881:43">(<expr pos:start="881:9" pos:end="881:42"><operator pos:start="881:9" pos:end="881:9">!</operator><name pos:start="881:10" pos:end="881:26"><name pos:start="881:10" pos:end="881:12">avi</name><operator pos:start="881:13" pos:end="881:14">-&gt;</operator><name pos:start="881:15" pos:end="881:26">index_loaded</name></name> <operator pos:start="881:28" pos:end="881:29">&amp;&amp;</operator> <name pos:start="881:31" pos:end="881:42"><name pos:start="881:31" pos:end="881:32">pb</name><operator pos:start="881:33" pos:end="881:34">-&gt;</operator><name pos:start="881:35" pos:end="881:42">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="883:9" pos:end="883:26"><block_content pos:start="883:9" pos:end="883:26">

        <expr_stmt pos:start="883:9" pos:end="883:26"><expr pos:start="883:9" pos:end="883:25"><call pos:start="883:9" pos:end="883:25"><name pos:start="883:9" pos:end="883:22">avi_load_index</name><argument_list pos:start="883:23" pos:end="883:25">(<argument pos:start="883:24" pos:end="883:24"><expr pos:start="883:24" pos:end="883:24"><name pos:start="883:24" pos:end="883:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="885:5" pos:end="885:30"><expr pos:start="885:5" pos:end="885:29"><name pos:start="885:5" pos:end="885:21"><name pos:start="885:5" pos:end="885:7">avi</name><operator pos:start="885:8" pos:end="885:9">-&gt;</operator><name pos:start="885:10" pos:end="885:21">index_loaded</name></name>     <operator pos:start="885:27" pos:end="885:27">=</operator> <literal type="number" pos:start="885:29" pos:end="885:29">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="887:5" pos:end="887:45"><expr pos:start="887:5" pos:end="887:44"><name pos:start="887:5" pos:end="887:24"><name pos:start="887:5" pos:end="887:7">avi</name><operator pos:start="887:8" pos:end="887:9">-&gt;</operator><name pos:start="887:10" pos:end="887:24">non_interleaved</name></name> <operator pos:start="887:26" pos:end="887:27">|=</operator> <call pos:start="887:29" pos:end="887:44"><name pos:start="887:29" pos:end="887:41">guess_ni_flag</name><argument_list pos:start="887:42" pos:end="887:44">(<argument pos:start="887:43" pos:end="887:43"><expr pos:start="887:43" pos:end="887:43"><name pos:start="887:43" pos:end="887:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="889:5" pos:end="897:5">for <control pos:start="889:9" pos:end="889:39">(<init pos:start="889:10" pos:end="889:15"><expr pos:start="889:10" pos:end="889:14"><name pos:start="889:10" pos:end="889:10">i</name> <operator pos:start="889:12" pos:end="889:12">=</operator> <literal type="number" pos:start="889:14" pos:end="889:14">0</literal></expr>;</init> <condition pos:start="889:17" pos:end="889:34"><expr pos:start="889:17" pos:end="889:33"><name pos:start="889:17" pos:end="889:17">i</name> <operator pos:start="889:19" pos:end="889:19">&lt;</operator> <name pos:start="889:21" pos:end="889:33"><name pos:start="889:21" pos:end="889:21">s</name><operator pos:start="889:22" pos:end="889:23">-&gt;</operator><name pos:start="889:24" pos:end="889:33">nb_streams</name></name></expr>;</condition> <incr pos:start="889:36" pos:end="889:38"><expr pos:start="889:36" pos:end="889:38"><name pos:start="889:36" pos:end="889:36">i</name><operator pos:start="889:37" pos:end="889:38">++</operator></expr></incr>)</control> <block pos:start="889:41" pos:end="897:5">{<block_content pos:start="891:9" pos:end="895:18">

        <decl_stmt pos:start="891:9" pos:end="891:37"><decl pos:start="891:9" pos:end="891:36"><type pos:start="891:9" pos:end="891:18"><name pos:start="891:9" pos:end="891:16">AVStream</name> <modifier pos:start="891:18" pos:end="891:18">*</modifier></type><name pos:start="891:19" pos:end="891:20">st</name> <init pos:start="891:22" pos:end="891:36">= <expr pos:start="891:24" pos:end="891:36"><name pos:start="891:24" pos:end="891:36"><name pos:start="891:24" pos:end="891:24">s</name><operator pos:start="891:25" pos:end="891:26">-&gt;</operator><name pos:start="891:27" pos:end="891:33">streams</name><index pos:start="891:34" pos:end="891:36">[<expr pos:start="891:35" pos:end="891:35"><name pos:start="891:35" pos:end="891:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="893:9" pos:end="895:18"><if pos:start="893:9" pos:end="895:18">if <condition pos:start="893:12" pos:end="893:33">(<expr pos:start="893:13" pos:end="893:32"><name pos:start="893:13" pos:end="893:32"><name pos:start="893:13" pos:end="893:14">st</name><operator pos:start="893:15" pos:end="893:16">-&gt;</operator><name pos:start="893:17" pos:end="893:32">nb_index_entries</name></name></expr>)</condition><block type="pseudo" pos:start="895:13" pos:end="895:18"><block_content pos:start="895:13" pos:end="895:18">

            <break pos:start="895:13" pos:end="895:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="899:5" pos:end="907:5"><if pos:start="899:5" pos:end="907:5">if <condition pos:start="899:8" pos:end="899:51">(<expr pos:start="899:9" pos:end="899:50"><name pos:start="899:9" pos:end="899:9">i</name> <operator pos:start="899:11" pos:end="899:12">==</operator> <name pos:start="899:14" pos:end="899:26"><name pos:start="899:14" pos:end="899:14">s</name><operator pos:start="899:15" pos:end="899:16">-&gt;</operator><name pos:start="899:17" pos:end="899:26">nb_streams</name></name> <operator pos:start="899:28" pos:end="899:29">&amp;&amp;</operator> <name pos:start="899:31" pos:end="899:50"><name pos:start="899:31" pos:end="899:33">avi</name><operator pos:start="899:34" pos:end="899:35">-&gt;</operator><name pos:start="899:36" pos:end="899:50">non_interleaved</name></name></expr>)</condition> <block pos:start="899:53" pos:end="907:5">{<block_content pos:start="901:9" pos:end="905:33">

        <expr_stmt pos:start="901:9" pos:end="903:80"><expr pos:start="901:9" pos:end="903:79"><call pos:start="901:9" pos:end="903:79"><name pos:start="901:9" pos:end="901:14">av_log</name><argument_list pos:start="901:15" pos:end="903:79">(<argument pos:start="901:16" pos:end="901:16"><expr pos:start="901:16" pos:end="901:16"><name pos:start="901:16" pos:end="901:16">s</name></expr></argument>, <argument pos:start="901:19" pos:end="901:32"><expr pos:start="901:19" pos:end="901:32"><name pos:start="901:19" pos:end="901:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="903:16" pos:end="903:78"><expr pos:start="903:16" pos:end="903:78"><literal type="string" pos:start="903:16" pos:end="903:78">"Non-interleaved AVI without index, switching to interleaved\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="905:9" pos:end="905:33"><expr pos:start="905:9" pos:end="905:32"><name pos:start="905:9" pos:end="905:28"><name pos:start="905:9" pos:end="905:11">avi</name><operator pos:start="905:12" pos:end="905:13">-&gt;</operator><name pos:start="905:14" pos:end="905:28">non_interleaved</name></name> <operator pos:start="905:30" pos:end="905:30">=</operator> <literal type="number" pos:start="905:32" pos:end="905:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="911:5" pos:end="917:5"><if pos:start="911:5" pos:end="917:5">if <condition pos:start="911:8" pos:end="911:29">(<expr pos:start="911:9" pos:end="911:28"><name pos:start="911:9" pos:end="911:28"><name pos:start="911:9" pos:end="911:11">avi</name><operator pos:start="911:12" pos:end="911:13">-&gt;</operator><name pos:start="911:14" pos:end="911:28">non_interleaved</name></name></expr>)</condition> <block pos:start="911:31" pos:end="917:5">{<block_content pos:start="913:9" pos:end="915:23">

        <expr_stmt pos:start="913:9" pos:end="913:56"><expr pos:start="913:9" pos:end="913:55"><call pos:start="913:9" pos:end="913:55"><name pos:start="913:9" pos:end="913:14">av_log</name><argument_list pos:start="913:15" pos:end="913:55">(<argument pos:start="913:16" pos:end="913:16"><expr pos:start="913:16" pos:end="913:16"><name pos:start="913:16" pos:end="913:16">s</name></expr></argument>, <argument pos:start="913:19" pos:end="913:29"><expr pos:start="913:19" pos:end="913:29"><name pos:start="913:19" pos:end="913:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="913:32" pos:end="913:54"><expr pos:start="913:32" pos:end="913:54"><literal type="string" pos:start="913:32" pos:end="913:54">"non-interleaved AVI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="915:9" pos:end="915:23"><expr pos:start="915:9" pos:end="915:22"><call pos:start="915:9" pos:end="915:22"><name pos:start="915:9" pos:end="915:19">clean_index</name><argument_list pos:start="915:20" pos:end="915:22">(<argument pos:start="915:21" pos:end="915:21"><expr pos:start="915:21" pos:end="915:21"><name pos:start="915:21" pos:end="915:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="921:5" pos:end="921:53"><expr pos:start="921:5" pos:end="921:52"><call pos:start="921:5" pos:end="921:52"><name pos:start="921:5" pos:end="921:24">ff_metadata_conv_ctx</name><argument_list pos:start="921:25" pos:end="921:52">(<argument pos:start="921:26" pos:end="921:26"><expr pos:start="921:26" pos:end="921:26"><name pos:start="921:26" pos:end="921:26">s</name></expr></argument>, <argument pos:start="921:29" pos:end="921:32"><expr pos:start="921:29" pos:end="921:32"><name pos:start="921:29" pos:end="921:32">NULL</name></expr></argument>, <argument pos:start="921:35" pos:end="921:51"><expr pos:start="921:35" pos:end="921:51"><name pos:start="921:35" pos:end="921:51">avi_metadata_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="923:5" pos:end="923:53"><expr pos:start="923:5" pos:end="923:52"><call pos:start="923:5" pos:end="923:52"><name pos:start="923:5" pos:end="923:24">ff_metadata_conv_ctx</name><argument_list pos:start="923:25" pos:end="923:52">(<argument pos:start="923:26" pos:end="923:26"><expr pos:start="923:26" pos:end="923:26"><name pos:start="923:26" pos:end="923:26">s</name></expr></argument>, <argument pos:start="923:29" pos:end="923:32"><expr pos:start="923:29" pos:end="923:32"><name pos:start="923:29" pos:end="923:32">NULL</name></expr></argument>, <argument pos:start="923:35" pos:end="923:51"><expr pos:start="923:35" pos:end="923:51"><name pos:start="923:35" pos:end="923:51">ff_riff_info_conv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="927:5" pos:end="927:13">return <expr pos:start="927:12" pos:end="927:12"><literal type="number" pos:start="927:12" pos:end="927:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
