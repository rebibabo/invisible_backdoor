<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16100.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">mxf_edit_unit_absolute_offset</name><parameter_list pos:start="1:41" pos:end="1:158">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:51">MXFContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">mxf</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:84"><decl pos:start="1:59" pos:end="1:84"><type pos:start="1:59" pos:end="1:84"><name pos:start="1:59" pos:end="1:71">MXFIndexTable</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:84">index_table</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:103"><decl pos:start="1:87" pos:end="1:103"><type pos:start="1:87" pos:end="1:103"><name pos:start="1:87" pos:end="1:93">int64_t</name></type> <name pos:start="1:95" pos:end="1:103">edit_unit</name></decl></parameter>, <parameter pos:start="1:106" pos:end="1:127"><decl pos:start="1:106" pos:end="1:127"><type pos:start="1:106" pos:end="1:127"><name pos:start="1:106" pos:end="1:112">int64_t</name> <modifier pos:start="1:114" pos:end="1:114">*</modifier></type><name pos:start="1:115" pos:end="1:127">edit_unit_out</name></decl></parameter>, <parameter pos:start="1:130" pos:end="1:148"><decl pos:start="1:130" pos:end="1:148"><type pos:start="1:130" pos:end="1:148"><name pos:start="1:130" pos:end="1:136">int64_t</name> <modifier pos:start="1:138" pos:end="1:138">*</modifier></type><name pos:start="1:139" pos:end="1:148">offset_out</name></decl></parameter>, <parameter pos:start="1:151" pos:end="1:157"><decl pos:start="1:151" pos:end="1:157"><type pos:start="1:151" pos:end="1:157"><name pos:start="1:151" pos:end="1:153">int</name></type> <name pos:start="1:155" pos:end="1:157">nag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:31">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">offset_temp</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="81:5">for <control pos:start="11:9" pos:end="11:50">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:45"><expr pos:start="11:17" pos:end="11:44"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:44"><name pos:start="11:21" pos:end="11:31">index_table</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:44">nb_segments</name></name></expr>;</condition> <incr pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><name pos:start="11:47" pos:end="11:47">i</name><operator pos:start="11:48" pos:end="11:49">++</operator></expr></incr>)</control> <block pos:start="11:52" pos:end="81:5">{<block_content pos:start="13:9" pos:end="79:9">

        <decl_stmt pos:start="13:9" pos:end="13:59"><decl pos:start="13:9" pos:end="13:58"><type pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:28">MXFIndexTableSegment</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:31">s</name> <init pos:start="13:33" pos:end="13:58">= <expr pos:start="13:35" pos:end="13:58"><name pos:start="13:35" pos:end="13:58"><name pos:start="13:35" pos:end="13:45">index_table</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:55">segments</name><index pos:start="13:56" pos:end="13:58">[<expr pos:start="13:57" pos:end="13:57"><name pos:start="13:57" pos:end="13:57">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:62"><expr pos:start="17:9" pos:end="17:61"><name pos:start="17:9" pos:end="17:17">edit_unit</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:61"><name pos:start="17:21" pos:end="17:25">FFMAX</name><argument_list pos:start="17:26" pos:end="17:61">(<argument pos:start="17:27" pos:end="17:35"><expr pos:start="17:27" pos:end="17:35"><name pos:start="17:27" pos:end="17:35">edit_unit</name></expr></argument>, <argument pos:start="17:38" pos:end="17:60"><expr pos:start="17:38" pos:end="17:60"><name pos:start="17:38" pos:end="17:60"><name pos:start="17:38" pos:end="17:38">s</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:60">index_start_position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="17:65" pos:end="17:106">/* clamp if trying to seek before start */</comment>



        <if_stmt pos:start="21:9" pos:end="79:9"><if pos:start="21:9" pos:end="73:9">if <condition pos:start="21:12" pos:end="21:68">(<expr pos:start="21:13" pos:end="21:67"><name pos:start="21:13" pos:end="21:21">edit_unit</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:47"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:47">index_start_position</name></name> <operator pos:start="21:49" pos:end="21:49">+</operator> <name pos:start="21:51" pos:end="21:67"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:67">index_duration</name></name></expr>)</condition> <block pos:start="21:70" pos:end="73:9">{<block_content pos:start="23:13" pos:end="71:100">

            <decl_stmt pos:start="23:13" pos:end="23:64"><decl pos:start="23:13" pos:end="23:63"><type pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19">int64_t</name></type> <name pos:start="23:21" pos:end="23:25">index</name> <init pos:start="23:27" pos:end="23:63">= <expr pos:start="23:29" pos:end="23:63"><name pos:start="23:29" pos:end="23:37">edit_unit</name> <operator pos:start="23:39" pos:end="23:39">-</operator> <name pos:start="23:41" pos:end="23:63"><name pos:start="23:41" pos:end="23:41">s</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:63">index_start_position</name></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="27:13" pos:end="61:13"><if pos:start="27:13" pos:end="29:63">if <condition pos:start="27:16" pos:end="27:40">(<expr pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:39"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:39">edit_unit_byte_count</name></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:63"><block_content pos:start="29:17" pos:end="29:63">

                <expr_stmt pos:start="29:17" pos:end="29:63"><expr pos:start="29:17" pos:end="29:62"><name pos:start="29:17" pos:end="29:27">offset_temp</name> <operator pos:start="29:29" pos:end="29:30">+=</operator> <name pos:start="29:32" pos:end="29:54"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:54">edit_unit_byte_count</name></name> <operator pos:start="29:56" pos:end="29:56">*</operator> <name pos:start="29:58" pos:end="29:62">index</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="31:13" pos:end="53:13">else if <condition pos:start="31:21" pos:end="31:41">(<expr pos:start="31:22" pos:end="31:40"><name pos:start="31:22" pos:end="31:40"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:40">nb_index_entries</name></name></expr>)</condition> <block pos:start="31:43" pos:end="53:13">{<block_content pos:start="33:17" pos:end="51:62">

                <if_stmt pos:start="33:17" pos:end="35:31"><if pos:start="33:17" pos:end="35:31">if <condition pos:start="33:20" pos:end="33:69">(<expr pos:start="33:21" pos:end="33:68"><name pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:39">nb_index_entries</name></name> <operator pos:start="33:41" pos:end="33:42">==</operator> <literal type="number" pos:start="33:44" pos:end="33:44">2</literal> <operator pos:start="33:46" pos:end="33:46">*</operator> <name pos:start="33:48" pos:end="33:64"><name pos:start="33:48" pos:end="33:48">s</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:64">index_duration</name></name> <operator pos:start="33:66" pos:end="33:66">+</operator> <literal type="number" pos:start="33:68" pos:end="33:68">1</literal></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:31"><block_content pos:start="35:21" pos:end="35:31">

                    <expr_stmt pos:start="35:21" pos:end="35:31"><expr pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:25">index</name> <operator pos:start="35:27" pos:end="35:28">*=</operator> <literal type="number" pos:start="35:30" pos:end="35:30">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>     <comment type="block" pos:start="35:37" pos:end="35:52">/* Avid index */</comment>



                <if_stmt pos:start="39:17" pos:end="47:17"><if pos:start="39:17" pos:end="47:17">if <condition pos:start="39:20" pos:end="39:61">(<expr pos:start="39:21" pos:end="39:60"><name pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:25">index</name> <argument_list type="generic" pos:start="39:27" pos:end="39:40">&lt; <argument pos:start="39:29" pos:end="39:38"><expr pos:start="39:29" pos:end="39:38"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal> <operator pos:start="39:31" pos:end="39:32">||</operator> <name pos:start="39:34" pos:end="39:38">index</name></expr></argument> &gt;</argument_list></name> <name pos:start="39:42" pos:end="39:60"><name pos:start="39:42" pos:end="39:42">s</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:60">nb_index_entries</name></name></expr>)</condition> <block pos:start="39:63" pos:end="47:17">{<block_content pos:start="41:21" pos:end="45:47">

                    <expr_stmt pos:start="41:21" pos:end="43:76"><expr pos:start="41:21" pos:end="43:75"><call pos:start="41:21" pos:end="43:75"><name pos:start="41:21" pos:end="41:26">av_log</name><argument_list pos:start="41:27" pos:end="43:75">(<argument pos:start="41:28" pos:end="41:34"><expr pos:start="41:28" pos:end="41:34"><name pos:start="41:28" pos:end="41:34"><name pos:start="41:28" pos:end="41:30">mxf</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:34">fc</name></name></expr></argument>, <argument pos:start="41:37" pos:end="41:48"><expr pos:start="41:37" pos:end="41:48"><name pos:start="41:37" pos:end="41:48">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:51" pos:end="41:112"><expr pos:start="41:51" pos:end="41:112"><literal type="string" pos:start="41:51" pos:end="41:76">"IndexSID %i segment at %"</literal><name pos:start="41:77" pos:end="41:82">PRId64</name><literal type="string" pos:start="41:83" pos:end="41:112">" IndexEntryArray too small\n"</literal></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:49"><expr pos:start="43:28" pos:end="43:49"><name pos:start="43:28" pos:end="43:49"><name pos:start="43:28" pos:end="43:38">index_table</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:49">index_sid</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:74"><expr pos:start="43:52" pos:end="43:74"><name pos:start="43:52" pos:end="43:74"><name pos:start="43:52" pos:end="43:52">s</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:74">index_start_position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="45:21" pos:end="45:47">return <expr pos:start="45:28" pos:end="45:46"><name pos:start="45:28" pos:end="45:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="51:17" pos:end="51:62"><expr pos:start="51:17" pos:end="51:61"><name pos:start="51:17" pos:end="51:27">offset_temp</name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:61"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:54">stream_offset_entries</name><index pos:start="51:55" pos:end="51:61">[<expr pos:start="51:56" pos:end="51:60"><name pos:start="51:56" pos:end="51:60">index</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="53:15" pos:end="61:13">else <block pos:start="53:20" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:43">

                <expr_stmt pos:start="55:17" pos:end="57:72"><expr pos:start="55:17" pos:end="57:71"><call pos:start="55:17" pos:end="57:71"><name pos:start="55:17" pos:end="55:22">av_log</name><argument_list pos:start="55:23" pos:end="57:71">(<argument pos:start="55:24" pos:end="55:30"><expr pos:start="55:24" pos:end="55:30"><name pos:start="55:24" pos:end="55:30"><name pos:start="55:24" pos:end="55:26">mxf</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:30">fc</name></name></expr></argument>, <argument pos:start="55:33" pos:end="55:44"><expr pos:start="55:33" pos:end="55:44"><name pos:start="55:33" pos:end="55:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:47" pos:end="55:128"><expr pos:start="55:47" pos:end="55:128"><literal type="string" pos:start="55:47" pos:end="55:72">"IndexSID %i segment at %"</literal><name pos:start="55:73" pos:end="55:78">PRId64</name><literal type="string" pos:start="55:79" pos:end="55:128">" missing EditUnitByteCount and IndexEntryArray\n"</literal></expr></argument>,

                       <argument pos:start="57:24" pos:end="57:45"><expr pos:start="57:24" pos:end="57:45"><name pos:start="57:24" pos:end="57:45"><name pos:start="57:24" pos:end="57:34">index_table</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:45">index_sid</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:70"><expr pos:start="57:48" pos:end="57:70"><name pos:start="57:48" pos:end="57:70"><name pos:start="57:48" pos:end="57:48">s</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:70">index_start_position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="59:17" pos:end="59:43">return <expr pos:start="59:24" pos:end="59:42"><name pos:start="59:24" pos:end="59:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="65:13" pos:end="67:43"><if pos:start="65:13" pos:end="67:43">if <condition pos:start="65:16" pos:end="65:30">(<expr pos:start="65:17" pos:end="65:29"><name pos:start="65:17" pos:end="65:29">edit_unit_out</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:43"><block_content pos:start="67:17" pos:end="67:43">

                <expr_stmt pos:start="67:17" pos:end="67:43"><expr pos:start="67:17" pos:end="67:42"><operator pos:start="67:17" pos:end="67:17">*</operator><name pos:start="67:18" pos:end="67:30">edit_unit_out</name> <operator pos:start="67:32" pos:end="67:32">=</operator> <name pos:start="67:34" pos:end="67:42">edit_unit</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <return pos:start="71:13" pos:end="71:100">return <expr pos:start="71:20" pos:end="71:99"><call pos:start="71:20" pos:end="71:99"><name pos:start="71:20" pos:end="71:46">mxf_absolute_bodysid_offset</name><argument_list pos:start="71:47" pos:end="71:99">(<argument pos:start="71:48" pos:end="71:50"><expr pos:start="71:48" pos:end="71:50"><name pos:start="71:48" pos:end="71:50">mxf</name></expr></argument>, <argument pos:start="71:53" pos:end="71:73"><expr pos:start="71:53" pos:end="71:73"><name pos:start="71:53" pos:end="71:73"><name pos:start="71:53" pos:end="71:63">index_table</name><operator pos:start="71:64" pos:end="71:65">-&gt;</operator><name pos:start="71:66" pos:end="71:73">body_sid</name></name></expr></argument>, <argument pos:start="71:76" pos:end="71:86"><expr pos:start="71:76" pos:end="71:86"><name pos:start="71:76" pos:end="71:86">offset_temp</name></expr></argument>, <argument pos:start="71:89" pos:end="71:98"><expr pos:start="71:89" pos:end="71:98"><name pos:start="71:89" pos:end="71:98">offset_out</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="79:9">else <block pos:start="73:16" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:71">

            <comment type="block" pos:start="75:13" pos:end="75:109">/* EditUnitByteCount == 0 for VBR indexes, which is fine since they use explicit StreamOffsets */</comment>

            <expr_stmt pos:start="77:13" pos:end="77:71"><expr pos:start="77:13" pos:end="77:70"><name pos:start="77:13" pos:end="77:23">offset_temp</name> <operator pos:start="77:25" pos:end="77:26">+=</operator> <name pos:start="77:28" pos:end="77:50"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:50">edit_unit_byte_count</name></name> <operator pos:start="77:52" pos:end="77:52">*</operator> <name pos:start="77:54" pos:end="77:70"><name pos:start="77:54" pos:end="77:54">s</name><operator pos:start="77:55" pos:end="77:56">-&gt;</operator><name pos:start="77:57" pos:end="77:70">index_duration</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="85:5" pos:end="87:139"><if pos:start="85:5" pos:end="87:139">if <condition pos:start="85:8" pos:end="85:12">(<expr pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">nag</name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:139"><block_content pos:start="87:9" pos:end="87:139">

        <expr_stmt pos:start="87:9" pos:end="87:139"><expr pos:start="87:9" pos:end="87:138"><call pos:start="87:9" pos:end="87:138"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:138">(<argument pos:start="87:16" pos:end="87:22"><expr pos:start="87:16" pos:end="87:22"><name pos:start="87:16" pos:end="87:22"><name pos:start="87:16" pos:end="87:18">mxf</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:22">fc</name></name></expr></argument>, <argument pos:start="87:25" pos:end="87:36"><expr pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:39" pos:end="87:102"><expr pos:start="87:39" pos:end="87:102"><literal type="string" pos:start="87:39" pos:end="87:64">"failed to map EditUnit %"</literal><name pos:start="87:65" pos:end="87:70">PRId64</name><literal type="string" pos:start="87:71" pos:end="87:102">" in IndexSID %i to an offset\n"</literal></expr></argument>, <argument pos:start="87:105" pos:end="87:113"><expr pos:start="87:105" pos:end="87:113"><name pos:start="87:105" pos:end="87:113">edit_unit</name></expr></argument>, <argument pos:start="87:116" pos:end="87:137"><expr pos:start="87:116" pos:end="87:137"><name pos:start="87:116" pos:end="87:137"><name pos:start="87:116" pos:end="87:126">index_table</name><operator pos:start="87:127" pos:end="87:128">-&gt;</operator><name pos:start="87:129" pos:end="87:137">index_sid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="91:5" pos:end="91:31">return <expr pos:start="91:12" pos:end="91:30"><name pos:start="91:12" pos:end="91:30">AVERROR_INVALIDDATA</name></expr>;</return>

</block_content>}</block></function>
</unit>
