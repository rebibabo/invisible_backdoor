<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18710.c" pos:tabs="8"><function pos:start="1:1" pos:end="519:47"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_hevc_parse_sps</name><parameter_list pos:start="1:22" pos:end="3:90">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:29">HEVCSPS</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">sps</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:49">GetBitContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">gb</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:75"><decl pos:start="1:56" pos:end="1:75"><type pos:start="1:56" pos:end="1:75"><name pos:start="1:56" pos:end="1:63">unsigned</name> <name pos:start="1:65" pos:end="1:67">int</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:75">sps_id</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:42"><decl pos:start="3:23" pos:end="3:42"><type pos:start="3:23" pos:end="3:42"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:42">apply_defdispwin</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:66"><decl pos:start="3:45" pos:end="3:66"><type pos:start="3:45" pos:end="3:66"><name pos:start="3:45" pos:end="3:55">AVBufferRef</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier><modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:66">vps_list</name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:89"><decl pos:start="3:69" pos:end="3:89"><type pos:start="3:69" pos:end="3:89"><name pos:start="3:69" pos:end="3:82">AVCodecContext</name> <modifier pos:start="3:84" pos:end="3:84">*</modifier></type><name pos:start="3:85" pos:end="3:89">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="519:47">{<block_content pos:start="7:5" pos:end="519:47">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HEVCWindow</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">ow</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:46">log2_diff_max_min_transform_block_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:69"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:24">bit_depth_chroma</name></decl>, <decl pos:start="13:27" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:31">start</name></decl>, <decl pos:start="13:34" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:34" pos:end="13:44">vui_present</name></decl>, <decl pos:start="13:47" pos:end="13:68"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:47" pos:end="13:68">sublayer_ordering_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:23">// Coded parameters</comment>



    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:7">sps</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:15">vps_id</name></name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:33"><name pos:start="23:19" pos:end="23:26">get_bits</name><argument_list pos:start="23:27" pos:end="23:33">(<argument pos:start="23:28" pos:end="23:29"><expr pos:start="23:28" pos:end="23:29"><name pos:start="23:28" pos:end="23:29">gb</name></expr></argument>, <argument pos:start="23:32" pos:end="23:32"><expr pos:start="23:32" pos:end="23:32"><literal type="number" pos:start="23:32" pos:end="23:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="519:47"><if pos:start="25:5" pos:end="519:47">if <condition pos:start="25:8" pos:end="25:42">(<expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:11">sps</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:19">vps_id</name></name> <operator pos:start="25:21" pos:end="25:22">&gt;=</operator> <name pos:start="25:24" pos:end="25:41">HEVC_MAX_VPS_COUNT</name></expr>)</condition> <block pos:start="25:44" pos:end="519:47">{<block_content pos:start="27:9" pos:end="519:47">

        <expr_stmt pos:start="27:9" pos:end="27:78"><expr pos:start="27:9" pos:end="27:77"><call pos:start="27:9" pos:end="27:77"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:77">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:63"><expr pos:start="27:37" pos:end="27:63"><literal type="string" pos:start="27:37" pos:end="27:63">"VPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="27:66" pos:end="27:76"><expr pos:start="27:66" pos:end="27:76"><name pos:start="27:66" pos:end="27:76"><name pos:start="27:66" pos:end="27:68">sps</name><operator pos:start="27:69" pos:end="27:70">-&gt;</operator><name pos:start="27:71" pos:end="27:76">vps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <if_stmt pos:start="34:5" pos:end="519:47"><if pos:start="34:5" pos:end="519:47">if <condition pos:start="34:8" pos:end="34:43">(<expr pos:start="34:9" pos:end="34:42"><name pos:start="34:9" pos:end="34:16">vps_list</name> <operator pos:start="34:18" pos:end="34:19">&amp;&amp;</operator> <operator pos:start="34:21" pos:end="34:21">!</operator><name pos:start="34:22" pos:end="34:42"><name pos:start="34:22" pos:end="34:29">vps_list</name><index pos:start="34:30" pos:end="34:42">[<expr pos:start="34:31" pos:end="34:41"><name pos:start="34:31" pos:end="34:41"><name pos:start="34:31" pos:end="34:33">sps</name><operator pos:start="34:34" pos:end="34:35">-&gt;</operator><name pos:start="34:36" pos:end="34:41">vps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="34:45" pos:end="519:47">{<block_content pos:start="36:9" pos:end="519:47">

        <expr_stmt pos:start="36:9" pos:end="38:28"><expr pos:start="36:9" pos:end="38:27"><call pos:start="36:9" pos:end="38:27"><name pos:start="36:9" pos:end="36:14">av_log</name><argument_list pos:start="36:15" pos:end="38:27">(<argument pos:start="36:16" pos:end="36:20"><expr pos:start="36:16" pos:end="36:20"><name pos:start="36:16" pos:end="36:20">avctx</name></expr></argument>, <argument pos:start="36:23" pos:end="36:34"><expr pos:start="36:23" pos:end="36:34"><name pos:start="36:23" pos:end="36:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="36:37" pos:end="36:61"><expr pos:start="36:37" pos:end="36:61"><literal type="string" pos:start="36:37" pos:end="36:61">"VPS %d does not exist\n"</literal></expr></argument>,

               <argument pos:start="38:16" pos:end="38:26"><expr pos:start="38:16" pos:end="38:26"><name pos:start="38:16" pos:end="38:26"><name pos:start="38:16" pos:end="38:18">sps</name><operator pos:start="38:19" pos:end="38:20">-&gt;</operator><name pos:start="38:21" pos:end="38:26">vps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:7">sps</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:23">max_sub_layers</name></name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:34">get_bits</name><argument_list pos:start="45:35" pos:end="45:41">(<argument pos:start="45:36" pos:end="45:37"><expr pos:start="45:36" pos:end="45:37"><name pos:start="45:36" pos:end="45:37">gb</name></expr></argument>, <argument pos:start="45:40" pos:end="45:40"><expr pos:start="45:40" pos:end="45:40"><literal type="number" pos:start="45:40" pos:end="45:40">3</literal></expr></argument>)</argument_list></call> <operator pos:start="45:43" pos:end="45:43">+</operator> <literal type="number" pos:start="45:45" pos:end="45:45">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="519:47"><if pos:start="47:5" pos:end="519:47">if <condition pos:start="47:8" pos:end="47:50">(<expr pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:11">sps</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:27">max_sub_layers</name></name> <operator pos:start="47:29" pos:end="47:29">&gt;</operator> <name pos:start="47:31" pos:end="47:49">HEVC_MAX_SUB_LAYERS</name></expr>)</condition> <block pos:start="47:52" pos:end="519:47">{<block_content pos:start="49:9" pos:end="519:47">

        <expr_stmt pos:start="49:9" pos:end="51:36"><expr pos:start="49:9" pos:end="51:35"><call pos:start="49:9" pos:end="51:35"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:35">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:75"><expr pos:start="49:37" pos:end="49:75"><literal type="string" pos:start="49:37" pos:end="49:75">"sps_max_sub_layers out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:34"><expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:18">sps</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:34">max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <expr_stmt pos:start="58:5" pos:end="58:19"><expr pos:start="58:5" pos:end="58:18"><call pos:start="58:5" pos:end="58:18"><name pos:start="58:5" pos:end="58:14">skip_bits1</name><argument_list pos:start="58:15" pos:end="58:18">(<argument pos:start="58:16" pos:end="58:17"><expr pos:start="58:16" pos:end="58:17"><name pos:start="58:16" pos:end="58:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="58:21" pos:end="58:47">// temporal_id_nesting_flag</comment>



    <expr_stmt pos:start="62:5" pos:end="62:57"><expr pos:start="62:5" pos:end="62:56"><call pos:start="62:5" pos:end="62:56"><name pos:start="62:5" pos:end="62:13">parse_ptl</name><argument_list pos:start="62:14" pos:end="62:56">(<argument pos:start="62:15" pos:end="62:16"><expr pos:start="62:15" pos:end="62:16"><name pos:start="62:15" pos:end="62:16">gb</name></expr></argument>, <argument pos:start="62:19" pos:end="62:23"><expr pos:start="62:19" pos:end="62:23"><name pos:start="62:19" pos:end="62:23">avctx</name></expr></argument>, <argument pos:start="62:26" pos:end="62:34"><expr pos:start="62:26" pos:end="62:34"><operator pos:start="62:26" pos:end="62:26">&amp;</operator><name pos:start="62:27" pos:end="62:34"><name pos:start="62:27" pos:end="62:29">sps</name><operator pos:start="62:30" pos:end="62:31">-&gt;</operator><name pos:start="62:32" pos:end="62:34">ptl</name></name></expr></argument>, <argument pos:start="62:37" pos:end="62:55"><expr pos:start="62:37" pos:end="62:55"><name pos:start="62:37" pos:end="62:55"><name pos:start="62:37" pos:end="62:39">sps</name><operator pos:start="62:40" pos:end="62:41">-&gt;</operator><name pos:start="62:42" pos:end="62:55">max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="66:5" pos:end="66:37"><expr pos:start="66:5" pos:end="66:36"><operator pos:start="66:5" pos:end="66:5">*</operator><name pos:start="66:6" pos:end="66:11">sps_id</name> <operator pos:start="66:13" pos:end="66:13">=</operator> <call pos:start="66:15" pos:end="66:36"><name pos:start="66:15" pos:end="66:32">get_ue_golomb_long</name><argument_list pos:start="66:33" pos:end="66:36">(<argument pos:start="66:34" pos:end="66:35"><expr pos:start="66:34" pos:end="66:35"><name pos:start="66:34" pos:end="66:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="68:5" pos:end="519:47"><if pos:start="68:5" pos:end="519:47">if <condition pos:start="68:8" pos:end="68:38">(<expr pos:start="68:9" pos:end="68:37"><operator pos:start="68:9" pos:end="68:9">*</operator><name pos:start="68:10" pos:end="68:15">sps_id</name> <operator pos:start="68:17" pos:end="68:18">&gt;=</operator> <name pos:start="68:20" pos:end="68:37">HEVC_MAX_SPS_COUNT</name></expr>)</condition> <block pos:start="68:40" pos:end="519:47">{<block_content pos:start="70:9" pos:end="519:47">

        <expr_stmt pos:start="70:9" pos:end="70:74"><expr pos:start="70:9" pos:end="70:73"><call pos:start="70:9" pos:end="70:73"><name pos:start="70:9" pos:end="70:14">av_log</name><argument_list pos:start="70:15" pos:end="70:73">(<argument pos:start="70:16" pos:end="70:20"><expr pos:start="70:16" pos:end="70:20"><name pos:start="70:16" pos:end="70:20">avctx</name></expr></argument>, <argument pos:start="70:23" pos:end="70:34"><expr pos:start="70:23" pos:end="70:34"><name pos:start="70:23" pos:end="70:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="70:37" pos:end="70:63"><expr pos:start="70:37" pos:end="70:63"><literal type="string" pos:start="70:37" pos:end="70:63">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="70:66" pos:end="70:72"><expr pos:start="70:66" pos:end="70:72"><operator pos:start="70:66" pos:end="70:66">*</operator><name pos:start="70:67" pos:end="70:72">sps_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <expr_stmt pos:start="77:5" pos:end="77:52"><expr pos:start="77:5" pos:end="77:51"><name pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:7">sps</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:26">chroma_format_idc</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <call pos:start="77:30" pos:end="77:51"><name pos:start="77:30" pos:end="77:47">get_ue_golomb_long</name><argument_list pos:start="77:48" pos:end="77:51">(<argument pos:start="77:49" pos:end="77:50"><expr pos:start="77:49" pos:end="77:50"><name pos:start="77:49" pos:end="77:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="519:47"><if pos:start="79:5" pos:end="519:47">if <condition pos:start="79:8" pos:end="79:36">(<expr pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:11">sps</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:30">chroma_format_idc</name></name> <operator pos:start="79:32" pos:end="79:33">!=</operator> <literal type="number" pos:start="79:35" pos:end="79:35">1</literal></expr>)</condition> <block pos:start="79:38" pos:end="519:47">{<block_content pos:start="81:9" pos:end="519:47">

        <expr_stmt pos:start="81:9" pos:end="83:62"><expr pos:start="81:9" pos:end="83:61"><call pos:start="81:9" pos:end="83:61"><name pos:start="81:9" pos:end="81:37">avpriv_report_missing_feature</name><argument_list pos:start="81:38" pos:end="83:61">(<argument pos:start="81:39" pos:end="81:43"><expr pos:start="81:39" pos:end="81:43"><name pos:start="81:39" pos:end="81:43">avctx</name></expr></argument>, <argument pos:start="81:46" pos:end="81:67"><expr pos:start="81:46" pos:end="81:67"><literal type="string" pos:start="81:46" pos:end="81:67">"chroma_format_idc %d"</literal></expr></argument>,

                                      <argument pos:start="83:39" pos:end="83:60"><expr pos:start="83:39" pos:end="83:60"><name pos:start="83:39" pos:end="83:60"><name pos:start="83:39" pos:end="83:41">sps</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:60">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:35"><expr pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:34">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>





    <if_stmt pos:start="91:5" pos:end="93:56"><if pos:start="91:5" pos:end="93:56">if <condition pos:start="91:8" pos:end="91:36">(<expr pos:start="91:9" pos:end="91:35"><name pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:11">sps</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:30">chroma_format_idc</name></name> <operator pos:start="91:32" pos:end="91:33">==</operator> <literal type="number" pos:start="91:35" pos:end="91:35">3</literal></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:56"><block_content pos:start="93:9" pos:end="93:56">

        <expr_stmt pos:start="93:9" pos:end="93:56"><expr pos:start="93:9" pos:end="93:55"><name pos:start="93:9" pos:end="93:39"><name pos:start="93:9" pos:end="93:11">sps</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:39">separate_colour_plane_flag</name></name> <operator pos:start="93:41" pos:end="93:41">=</operator> <call pos:start="93:43" pos:end="93:55"><name pos:start="93:43" pos:end="93:51">get_bits1</name><argument_list pos:start="93:52" pos:end="93:55">(<argument pos:start="93:53" pos:end="93:54"><expr pos:start="93:53" pos:end="93:54"><name pos:start="93:53" pos:end="93:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:41"><expr pos:start="97:5" pos:end="97:40"><name pos:start="97:5" pos:end="97:14"><name pos:start="97:5" pos:end="97:7">sps</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:14">width</name></name>  <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:40"><name pos:start="97:19" pos:end="97:36">get_ue_golomb_long</name><argument_list pos:start="97:37" pos:end="97:40">(<argument pos:start="97:38" pos:end="97:39"><expr pos:start="97:38" pos:end="97:39"><name pos:start="97:38" pos:end="97:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:41"><expr pos:start="99:5" pos:end="99:40"><name pos:start="99:5" pos:end="99:15"><name pos:start="99:5" pos:end="99:7">sps</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:15">height</name></name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:40"><name pos:start="99:19" pos:end="99:36">get_ue_golomb_long</name><argument_list pos:start="99:37" pos:end="99:40">(<argument pos:start="99:38" pos:end="99:39"><expr pos:start="99:38" pos:end="99:39"><name pos:start="99:38" pos:end="99:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="519:47"><if pos:start="101:5" pos:end="519:47">if <condition pos:start="101:8" pos:end="103:63">(<expr pos:start="101:9" pos:end="103:62"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:12">ret</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <call pos:start="101:16" pos:end="103:57"><name pos:start="101:16" pos:end="101:34">av_image_check_size</name><argument_list pos:start="101:35" pos:end="103:57">(<argument pos:start="101:36" pos:end="101:45"><expr pos:start="101:36" pos:end="101:45"><name pos:start="101:36" pos:end="101:45"><name pos:start="101:36" pos:end="101:38">sps</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:45">width</name></name></expr></argument>,

                                   <argument pos:start="103:36" pos:end="103:46"><expr pos:start="103:36" pos:end="103:46"><name pos:start="103:36" pos:end="103:46"><name pos:start="103:36" pos:end="103:38">sps</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:46">height</name></name></expr></argument>, <argument pos:start="103:49" pos:end="103:49"><expr pos:start="103:49" pos:end="103:49"><literal type="number" pos:start="103:49" pos:end="103:49">0</literal></expr></argument>, <argument pos:start="103:52" pos:end="103:56"><expr pos:start="103:52" pos:end="103:56"><name pos:start="103:52" pos:end="103:56">avctx</name></expr></argument>)</argument_list></call><operator pos:start="103:58" pos:end="103:58">)</operator> <operator pos:start="103:60" pos:end="103:60">&lt;</operator> <literal type="number" pos:start="103:62" pos:end="103:62">0</literal></expr>)</condition><block type="pseudo" pos:start="108:5" pos:end="519:47"><block_content pos:start="108:5" pos:end="519:47">




    <if_stmt pos:start="108:5" pos:end="519:47"><if pos:start="108:5" pos:end="519:47">if <condition pos:start="108:8" pos:end="108:22">(<expr pos:start="108:9" pos:end="108:21"><call pos:start="108:9" pos:end="108:21"><name pos:start="108:9" pos:end="108:17">get_bits1</name><argument_list pos:start="108:18" pos:end="108:21">(<argument pos:start="108:19" pos:end="108:20"><expr pos:start="108:19" pos:end="108:20"><name pos:start="108:19" pos:end="108:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="108:24" pos:end="519:47">{<block_content pos:start="112:9" pos:end="519:47"> <comment type="line" pos:start="108:26" pos:end="108:48">// pic_conformance_flag</comment>

        <comment type="line" pos:start="110:9" pos:end="110:41">//TODO: * 2 is only valid for 420</comment>

        <expr_stmt pos:start="112:9" pos:end="112:69"><expr pos:start="112:9" pos:end="112:68"><name pos:start="112:9" pos:end="112:37"><name pos:start="112:9" pos:end="112:11">sps</name><operator pos:start="112:12" pos:end="112:13">-&gt;</operator><name pos:start="112:14" pos:end="112:25">pic_conf_win</name><operator pos:start="112:26" pos:end="112:26">.</operator><name pos:start="112:27" pos:end="112:37">left_offset</name></name>   <operator pos:start="112:41" pos:end="112:41">=</operator> <call pos:start="112:43" pos:end="112:64"><name pos:start="112:43" pos:end="112:60">get_ue_golomb_long</name><argument_list pos:start="112:61" pos:end="112:64">(<argument pos:start="112:62" pos:end="112:63"><expr pos:start="112:62" pos:end="112:63"><name pos:start="112:62" pos:end="112:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="112:66" pos:end="112:66">*</operator> <literal type="number" pos:start="112:68" pos:end="112:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="114:9" pos:end="114:69"><expr pos:start="114:9" pos:end="114:68"><name pos:start="114:9" pos:end="114:38"><name pos:start="114:9" pos:end="114:11">sps</name><operator pos:start="114:12" pos:end="114:13">-&gt;</operator><name pos:start="114:14" pos:end="114:25">pic_conf_win</name><operator pos:start="114:26" pos:end="114:26">.</operator><name pos:start="114:27" pos:end="114:38">right_offset</name></name>  <operator pos:start="114:41" pos:end="114:41">=</operator> <call pos:start="114:43" pos:end="114:64"><name pos:start="114:43" pos:end="114:60">get_ue_golomb_long</name><argument_list pos:start="114:61" pos:end="114:64">(<argument pos:start="114:62" pos:end="114:63"><expr pos:start="114:62" pos:end="114:63"><name pos:start="114:62" pos:end="114:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="114:66" pos:end="114:66">*</operator> <literal type="number" pos:start="114:68" pos:end="114:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="116:9" pos:end="116:69"><expr pos:start="116:9" pos:end="116:68"><name pos:start="116:9" pos:end="116:36"><name pos:start="116:9" pos:end="116:11">sps</name><operator pos:start="116:12" pos:end="116:13">-&gt;</operator><name pos:start="116:14" pos:end="116:25">pic_conf_win</name><operator pos:start="116:26" pos:end="116:26">.</operator><name pos:start="116:27" pos:end="116:36">top_offset</name></name>    <operator pos:start="116:41" pos:end="116:41">=</operator> <call pos:start="116:43" pos:end="116:64"><name pos:start="116:43" pos:end="116:60">get_ue_golomb_long</name><argument_list pos:start="116:61" pos:end="116:64">(<argument pos:start="116:62" pos:end="116:63"><expr pos:start="116:62" pos:end="116:63"><name pos:start="116:62" pos:end="116:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="116:66" pos:end="116:66">*</operator> <literal type="number" pos:start="116:68" pos:end="116:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="118:9" pos:end="118:69"><expr pos:start="118:9" pos:end="118:68"><name pos:start="118:9" pos:end="118:39"><name pos:start="118:9" pos:end="118:11">sps</name><operator pos:start="118:12" pos:end="118:13">-&gt;</operator><name pos:start="118:14" pos:end="118:25">pic_conf_win</name><operator pos:start="118:26" pos:end="118:26">.</operator><name pos:start="118:27" pos:end="118:39">bottom_offset</name></name> <operator pos:start="118:41" pos:end="118:41">=</operator> <call pos:start="118:43" pos:end="118:64"><name pos:start="118:43" pos:end="118:60">get_ue_golomb_long</name><argument_list pos:start="118:61" pos:end="118:64">(<argument pos:start="118:62" pos:end="118:63"><expr pos:start="118:62" pos:end="118:63"><name pos:start="118:62" pos:end="118:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="118:66" pos:end="118:66">*</operator> <literal type="number" pos:start="118:68" pos:end="118:68">2</literal></expr>;</expr_stmt>



        <if_stmt pos:start="122:9" pos:end="519:47"><if pos:start="122:9" pos:end="519:47">if <condition pos:start="122:12" pos:end="122:55">(<expr pos:start="122:13" pos:end="122:54"><name pos:start="122:13" pos:end="122:25"><name pos:start="122:13" pos:end="122:17">avctx</name><operator pos:start="122:18" pos:end="122:19">-&gt;</operator><name pos:start="122:20" pos:end="122:25">flags2</name></name> <operator pos:start="122:27" pos:end="122:27">&amp;</operator> <name pos:start="122:29" pos:end="122:54">AV_CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="122:57" pos:end="519:47">{<block_content pos:start="124:13" pos:end="519:47">

            <expr_stmt pos:start="124:13" pos:end="136:52"><expr pos:start="124:13" pos:end="136:51"><call pos:start="124:13" pos:end="136:51"><name pos:start="124:13" pos:end="124:18">av_log</name><argument_list pos:start="124:19" pos:end="136:51">(<argument pos:start="124:20" pos:end="124:24"><expr pos:start="124:20" pos:end="124:24"><name pos:start="124:20" pos:end="124:24">avctx</name></expr></argument>, <argument pos:start="124:27" pos:end="124:38"><expr pos:start="124:27" pos:end="124:38"><name pos:start="124:27" pos:end="124:38">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="126:20" pos:end="128:62"><expr pos:start="126:20" pos:end="128:62"><literal type="string" pos:start="126:20" pos:end="126:56">"discarding sps conformance window, "</literal>

                   <literal type="string" pos:start="128:20" pos:end="128:62">"original values are l:%u r:%u t:%u b:%u\n"</literal></expr></argument>,

                   <argument pos:start="130:20" pos:end="130:48"><expr pos:start="130:20" pos:end="130:48"><name pos:start="130:20" pos:end="130:48"><name pos:start="130:20" pos:end="130:22">sps</name><operator pos:start="130:23" pos:end="130:24">-&gt;</operator><name pos:start="130:25" pos:end="130:36">pic_conf_win</name><operator pos:start="130:37" pos:end="130:37">.</operator><name pos:start="130:38" pos:end="130:48">left_offset</name></name></expr></argument>,

                   <argument pos:start="132:20" pos:end="132:49"><expr pos:start="132:20" pos:end="132:49"><name pos:start="132:20" pos:end="132:49"><name pos:start="132:20" pos:end="132:22">sps</name><operator pos:start="132:23" pos:end="132:24">-&gt;</operator><name pos:start="132:25" pos:end="132:36">pic_conf_win</name><operator pos:start="132:37" pos:end="132:37">.</operator><name pos:start="132:38" pos:end="132:49">right_offset</name></name></expr></argument>,

                   <argument pos:start="134:20" pos:end="134:47"><expr pos:start="134:20" pos:end="134:47"><name pos:start="134:20" pos:end="134:47"><name pos:start="134:20" pos:end="134:22">sps</name><operator pos:start="134:23" pos:end="134:24">-&gt;</operator><name pos:start="134:25" pos:end="134:36">pic_conf_win</name><operator pos:start="134:37" pos:end="134:37">.</operator><name pos:start="134:38" pos:end="134:47">top_offset</name></name></expr></argument>,

                   <argument pos:start="136:20" pos:end="136:50"><expr pos:start="136:20" pos:end="136:50"><name pos:start="136:20" pos:end="136:50"><name pos:start="136:20" pos:end="136:22">sps</name><operator pos:start="136:23" pos:end="136:24">-&gt;</operator><name pos:start="136:25" pos:end="136:36">pic_conf_win</name><operator pos:start="136:37" pos:end="136:37">.</operator><name pos:start="136:38" pos:end="136:50">bottom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="140:13" pos:end="146:48"><expr pos:start="140:13" pos:end="146:47"><name pos:start="140:13" pos:end="140:41"><name pos:start="140:13" pos:end="140:15">sps</name><operator pos:start="140:16" pos:end="140:17">-&gt;</operator><name pos:start="140:18" pos:end="140:29">pic_conf_win</name><operator pos:start="140:30" pos:end="140:30">.</operator><name pos:start="140:31" pos:end="140:41">left_offset</name></name>   <operator pos:start="140:45" pos:end="140:45">=</operator>

            <name pos:start="142:13" pos:end="142:42"><name pos:start="142:13" pos:end="142:15">sps</name><operator pos:start="142:16" pos:end="142:17">-&gt;</operator><name pos:start="142:18" pos:end="142:29">pic_conf_win</name><operator pos:start="142:30" pos:end="142:30">.</operator><name pos:start="142:31" pos:end="142:42">right_offset</name></name>  <operator pos:start="142:45" pos:end="142:45">=</operator>

            <name pos:start="144:13" pos:end="144:40"><name pos:start="144:13" pos:end="144:15">sps</name><operator pos:start="144:16" pos:end="144:17">-&gt;</operator><name pos:start="144:18" pos:end="144:29">pic_conf_win</name><operator pos:start="144:30" pos:end="144:30">.</operator><name pos:start="144:31" pos:end="144:40">top_offset</name></name>    <operator pos:start="144:45" pos:end="144:45">=</operator>

            <name pos:start="146:13" pos:end="146:43"><name pos:start="146:13" pos:end="146:15">sps</name><operator pos:start="146:16" pos:end="146:17">-&gt;</operator><name pos:start="146:18" pos:end="146:29">pic_conf_win</name><operator pos:start="146:30" pos:end="146:30">.</operator><name pos:start="146:31" pos:end="146:43">bottom_offset</name></name> <operator pos:start="146:45" pos:end="146:45">=</operator> <literal type="number" pos:start="146:47" pos:end="146:47">0</literal></expr>;</expr_stmt>


        <expr_stmt pos:start="149:9" pos:end="149:47"><expr pos:start="149:9" pos:end="149:46"><name pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:11">sps</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:26">output_window</name></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:46"><name pos:start="149:30" pos:end="149:32">sps</name><operator pos:start="149:33" pos:end="149:34">-&gt;</operator><name pos:start="149:35" pos:end="149:46">pic_conf_win</name></name></expr>;</expr_stmt>




    <expr_stmt pos:start="154:5" pos:end="154:50"><expr pos:start="154:5" pos:end="154:49"><name pos:start="154:5" pos:end="154:18"><name pos:start="154:5" pos:end="154:7">sps</name><operator pos:start="154:8" pos:end="154:9">-&gt;</operator><name pos:start="154:10" pos:end="154:18">bit_depth</name></name>   <operator pos:start="154:22" pos:end="154:22">=</operator> <call pos:start="154:24" pos:end="154:45"><name pos:start="154:24" pos:end="154:41">get_ue_golomb_long</name><argument_list pos:start="154:42" pos:end="154:45">(<argument pos:start="154:43" pos:end="154:44"><expr pos:start="154:43" pos:end="154:44"><name pos:start="154:43" pos:end="154:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="154:47" pos:end="154:47">+</operator> <literal type="number" pos:start="154:49" pos:end="154:49">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="156:5" pos:end="156:50"><expr pos:start="156:5" pos:end="156:49"><name pos:start="156:5" pos:end="156:20">bit_depth_chroma</name> <operator pos:start="156:22" pos:end="156:22">=</operator> <call pos:start="156:24" pos:end="156:45"><name pos:start="156:24" pos:end="156:41">get_ue_golomb_long</name><argument_list pos:start="156:42" pos:end="156:45">(<argument pos:start="156:43" pos:end="156:44"><expr pos:start="156:43" pos:end="156:44"><name pos:start="156:43" pos:end="156:44">gb</name></expr></argument>)</argument_list></call> <operator pos:start="156:47" pos:end="156:47">+</operator> <literal type="number" pos:start="156:49" pos:end="156:49">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="158:5" pos:end="519:47"><if pos:start="158:5" pos:end="519:47">if <condition pos:start="158:8" pos:end="158:43">(<expr pos:start="158:9" pos:end="158:42"><name pos:start="158:9" pos:end="158:24">bit_depth_chroma</name> <operator pos:start="158:26" pos:end="158:27">!=</operator> <name pos:start="158:29" pos:end="158:42"><name pos:start="158:29" pos:end="158:31">sps</name><operator pos:start="158:32" pos:end="158:33">-&gt;</operator><name pos:start="158:34" pos:end="158:42">bit_depth</name></name></expr>)</condition> <block pos:start="158:45" pos:end="519:47">{<block_content pos:start="160:9" pos:end="519:47">

        <expr_stmt pos:start="160:9" pos:end="166:49"><expr pos:start="160:9" pos:end="166:48"><call pos:start="160:9" pos:end="166:48"><name pos:start="160:9" pos:end="160:14">av_log</name><argument_list pos:start="160:15" pos:end="166:48">(<argument pos:start="160:16" pos:end="160:20"><expr pos:start="160:16" pos:end="160:20"><name pos:start="160:16" pos:end="160:20">avctx</name></expr></argument>, <argument pos:start="160:23" pos:end="160:34"><expr pos:start="160:23" pos:end="160:34"><name pos:start="160:23" pos:end="160:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="162:16" pos:end="164:39"><expr pos:start="162:16" pos:end="164:39"><literal type="string" pos:start="162:16" pos:end="162:78">"Luma bit depth (%d) is different from chroma bit depth (%d), "</literal>

               <literal type="string" pos:start="164:16" pos:end="164:39">"this is unsupported.\n"</literal></expr></argument>,

               <argument pos:start="166:16" pos:end="166:29"><expr pos:start="166:16" pos:end="166:29"><name pos:start="166:16" pos:end="166:29"><name pos:start="166:16" pos:end="166:18">sps</name><operator pos:start="166:19" pos:end="166:20">-&gt;</operator><name pos:start="166:21" pos:end="166:29">bit_depth</name></name></expr></argument>, <argument pos:start="166:32" pos:end="166:47"><expr pos:start="166:32" pos:end="166:47"><name pos:start="166:32" pos:end="166:47">bit_depth_chroma</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>








    <expr_stmt pos:start="175:5" pos:end="175:39"><expr pos:start="175:5" pos:end="175:38"><name pos:start="175:5" pos:end="175:7">ret</name> <operator pos:start="175:9" pos:end="175:9">=</operator> <call pos:start="175:11" pos:end="175:38"><name pos:start="175:11" pos:end="175:26">map_pixel_format</name><argument_list pos:start="175:27" pos:end="175:38">(<argument pos:start="175:28" pos:end="175:32"><expr pos:start="175:28" pos:end="175:32"><name pos:start="175:28" pos:end="175:32">avctx</name></expr></argument>, <argument pos:start="175:35" pos:end="175:37"><expr pos:start="175:35" pos:end="175:37"><name pos:start="175:35" pos:end="175:37">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="182:55"><if pos:start="177:5" pos:end="182:55">if <condition pos:start="177:8" pos:end="177:16">(<expr pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">&lt;</operator> <literal type="number" pos:start="177:15" pos:end="177:15">0</literal></expr>)</condition><block type="pseudo" pos:start="182:5" pos:end="182:55"><block_content pos:start="182:5" pos:end="182:55">




    <expr_stmt pos:start="182:5" pos:end="182:55"><expr pos:start="182:5" pos:end="182:54"><name pos:start="182:5" pos:end="182:25"><name pos:start="182:5" pos:end="182:7">sps</name><operator pos:start="182:8" pos:end="182:9">-&gt;</operator><name pos:start="182:10" pos:end="182:25">log2_max_poc_lsb</name></name> <operator pos:start="182:27" pos:end="182:27">=</operator> <call pos:start="182:29" pos:end="182:50"><name pos:start="182:29" pos:end="182:46">get_ue_golomb_long</name><argument_list pos:start="182:47" pos:end="182:50">(<argument pos:start="182:48" pos:end="182:49"><expr pos:start="182:48" pos:end="182:49"><name pos:start="182:48" pos:end="182:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="182:52" pos:end="182:52">+</operator> <literal type="number" pos:start="182:54" pos:end="182:54">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="184:5" pos:end="519:47"><if pos:start="184:5" pos:end="519:47">if <condition pos:start="184:8" pos:end="184:35">(<expr pos:start="184:9" pos:end="184:34"><name pos:start="184:9" pos:end="184:29"><name pos:start="184:9" pos:end="184:11">sps</name><operator pos:start="184:12" pos:end="184:13">-&gt;</operator><name pos:start="184:14" pos:end="184:29">log2_max_poc_lsb</name></name> <operator pos:start="184:31" pos:end="184:31">&gt;</operator> <literal type="number" pos:start="184:33" pos:end="184:34">16</literal></expr>)</condition> <block pos:start="184:37" pos:end="519:47">{<block_content pos:start="186:9" pos:end="519:47">

        <expr_stmt pos:start="186:9" pos:end="188:42"><expr pos:start="186:9" pos:end="188:41"><call pos:start="186:9" pos:end="188:41"><name pos:start="186:9" pos:end="186:14">av_log</name><argument_list pos:start="186:15" pos:end="188:41">(<argument pos:start="186:16" pos:end="186:20"><expr pos:start="186:16" pos:end="186:20"><name pos:start="186:16" pos:end="186:20">avctx</name></expr></argument>, <argument pos:start="186:23" pos:end="186:34"><expr pos:start="186:23" pos:end="186:34"><name pos:start="186:23" pos:end="186:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="186:37" pos:end="186:87"><expr pos:start="186:37" pos:end="186:87"><literal type="string" pos:start="186:37" pos:end="186:87">"log2_max_pic_order_cnt_lsb_minus4 out range: %d\n"</literal></expr></argument>,

               <argument pos:start="188:16" pos:end="188:40"><expr pos:start="188:16" pos:end="188:40"><name pos:start="188:16" pos:end="188:36"><name pos:start="188:16" pos:end="188:18">sps</name><operator pos:start="188:19" pos:end="188:20">-&gt;</operator><name pos:start="188:21" pos:end="188:36">log2_max_poc_lsb</name></name> <operator pos:start="188:38" pos:end="188:38">-</operator> <literal type="number" pos:start="188:40" pos:end="188:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    <expr_stmt pos:start="195:5" pos:end="195:43"><expr pos:start="195:5" pos:end="195:42"><name pos:start="195:5" pos:end="195:26">sublayer_ordering_info</name> <operator pos:start="195:28" pos:end="195:28">=</operator> <call pos:start="195:30" pos:end="195:42"><name pos:start="195:30" pos:end="195:38">get_bits1</name><argument_list pos:start="195:39" pos:end="195:42">(<argument pos:start="195:40" pos:end="195:41"><expr pos:start="195:40" pos:end="195:41"><name pos:start="195:40" pos:end="195:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:65"><expr pos:start="197:5" pos:end="197:64"><name pos:start="197:5" pos:end="197:9">start</name> <operator pos:start="197:11" pos:end="197:11">=</operator> <ternary pos:start="197:13" pos:end="197:64"><condition pos:start="197:13" pos:end="197:36"><expr pos:start="197:13" pos:end="197:34"><name pos:start="197:13" pos:end="197:34">sublayer_ordering_info</name></expr> ?</condition><then pos:start="197:38" pos:end="197:38"> <expr pos:start="197:38" pos:end="197:38"><literal type="number" pos:start="197:38" pos:end="197:38">0</literal></expr> </then><else pos:start="197:40" pos:end="197:64">: <expr pos:start="197:42" pos:end="197:64"><name pos:start="197:42" pos:end="197:60"><name pos:start="197:42" pos:end="197:44">sps</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:60">max_sub_layers</name></name> <operator pos:start="197:62" pos:end="197:62">-</operator> <literal type="number" pos:start="197:64" pos:end="197:64">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="199:5" pos:end="519:47">for <control pos:start="199:9" pos:end="199:49">(<init pos:start="199:10" pos:end="199:19"><expr pos:start="199:10" pos:end="199:18"><name pos:start="199:10" pos:end="199:10">i</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <name pos:start="199:14" pos:end="199:18">start</name></expr>;</init> <condition pos:start="199:21" pos:end="199:44"><expr pos:start="199:21" pos:end="199:43"><name pos:start="199:21" pos:end="199:21">i</name> <operator pos:start="199:23" pos:end="199:23">&lt;</operator> <name pos:start="199:25" pos:end="199:43"><name pos:start="199:25" pos:end="199:27">sps</name><operator pos:start="199:28" pos:end="199:29">-&gt;</operator><name pos:start="199:30" pos:end="199:43">max_sub_layers</name></name></expr>;</condition> <incr pos:start="199:46" pos:end="199:48"><expr pos:start="199:46" pos:end="199:48"><name pos:start="199:46" pos:end="199:46">i</name><operator pos:start="199:47" pos:end="199:48">++</operator></expr></incr>)</control> <block pos:start="199:51" pos:end="519:47">{<block_content pos:start="201:9" pos:end="519:47">

        <expr_stmt pos:start="201:9" pos:end="201:82"><expr pos:start="201:9" pos:end="201:81"><name pos:start="201:9" pos:end="201:30"><name pos:start="201:9" pos:end="201:11">sps</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:27">temporal_layer</name><index pos:start="201:28" pos:end="201:30">[<expr pos:start="201:29" pos:end="201:29"><name pos:start="201:29" pos:end="201:29">i</name></expr>]</index></name><operator pos:start="201:31" pos:end="201:31">.</operator><name pos:start="201:32" pos:end="201:52">max_dec_pic_buffering</name> <operator pos:start="201:54" pos:end="201:54">=</operator> <call pos:start="201:56" pos:end="201:77"><name pos:start="201:56" pos:end="201:73">get_ue_golomb_long</name><argument_list pos:start="201:74" pos:end="201:77">(<argument pos:start="201:75" pos:end="201:76"><expr pos:start="201:75" pos:end="201:76"><name pos:start="201:75" pos:end="201:76">gb</name></expr></argument>)</argument_list></call> <operator pos:start="201:79" pos:end="201:79">+</operator> <literal type="number" pos:start="201:81" pos:end="201:81">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:78"><expr pos:start="203:9" pos:end="203:77"><name pos:start="203:9" pos:end="203:30"><name pos:start="203:9" pos:end="203:11">sps</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:27">temporal_layer</name><index pos:start="203:28" pos:end="203:30">[<expr pos:start="203:29" pos:end="203:29"><name pos:start="203:29" pos:end="203:29">i</name></expr>]</index></name><operator pos:start="203:31" pos:end="203:31">.</operator><name pos:start="203:32" pos:end="203:47">num_reorder_pics</name>      <operator pos:start="203:54" pos:end="203:54">=</operator> <call pos:start="203:56" pos:end="203:77"><name pos:start="203:56" pos:end="203:73">get_ue_golomb_long</name><argument_list pos:start="203:74" pos:end="203:77">(<argument pos:start="203:75" pos:end="203:76"><expr pos:start="203:75" pos:end="203:76"><name pos:start="203:75" pos:end="203:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:82"><expr pos:start="205:9" pos:end="205:81"><name pos:start="205:9" pos:end="205:30"><name pos:start="205:9" pos:end="205:11">sps</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:27">temporal_layer</name><index pos:start="205:28" pos:end="205:30">[<expr pos:start="205:29" pos:end="205:29"><name pos:start="205:29" pos:end="205:29">i</name></expr>]</index></name><operator pos:start="205:31" pos:end="205:31">.</operator><name pos:start="205:32" pos:end="205:51">max_latency_increase</name>  <operator pos:start="205:54" pos:end="205:54">=</operator> <call pos:start="205:56" pos:end="205:77"><name pos:start="205:56" pos:end="205:73">get_ue_golomb_long</name><argument_list pos:start="205:74" pos:end="205:77">(<argument pos:start="205:75" pos:end="205:76"><expr pos:start="205:75" pos:end="205:76"><name pos:start="205:75" pos:end="205:76">gb</name></expr></argument>)</argument_list></call> <operator pos:start="205:79" pos:end="205:79">-</operator> <literal type="number" pos:start="205:81" pos:end="205:81">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="519:47"><if pos:start="207:9" pos:end="519:47">if <condition pos:start="207:12" pos:end="207:77">(<expr pos:start="207:13" pos:end="207:76"><name pos:start="207:13" pos:end="207:34"><name pos:start="207:13" pos:end="207:15">sps</name><operator pos:start="207:16" pos:end="207:17">-&gt;</operator><name pos:start="207:18" pos:end="207:31">temporal_layer</name><index pos:start="207:32" pos:end="207:34">[<expr pos:start="207:33" pos:end="207:33"><name pos:start="207:33" pos:end="207:33">i</name></expr>]</index></name><operator pos:start="207:35" pos:end="207:35">.</operator><name pos:start="207:36" pos:end="207:56">max_dec_pic_buffering</name> <operator pos:start="207:58" pos:end="207:58">&gt;</operator> <name pos:start="207:60" pos:end="207:76">HEVC_MAX_DPB_SIZE</name></expr>)</condition> <block pos:start="207:79" pos:end="519:47">{<block_content pos:start="209:13" pos:end="519:47">

            <expr_stmt pos:start="209:13" pos:end="211:69"><expr pos:start="209:13" pos:end="211:68"><call pos:start="209:13" pos:end="211:68"><name pos:start="209:13" pos:end="209:18">av_log</name><argument_list pos:start="209:19" pos:end="211:68">(<argument pos:start="209:20" pos:end="209:24"><expr pos:start="209:20" pos:end="209:24"><name pos:start="209:20" pos:end="209:24">avctx</name></expr></argument>, <argument pos:start="209:27" pos:end="209:38"><expr pos:start="209:27" pos:end="209:38"><name pos:start="209:27" pos:end="209:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:41" pos:end="209:93"><expr pos:start="209:41" pos:end="209:93"><literal type="string" pos:start="209:41" pos:end="209:93">"sps_max_dec_pic_buffering_minus1 out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="211:20" pos:end="211:67"><expr pos:start="211:20" pos:end="211:67"><name pos:start="211:20" pos:end="211:41"><name pos:start="211:20" pos:end="211:22">sps</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:38">temporal_layer</name><index pos:start="211:39" pos:end="211:41">[<expr pos:start="211:40" pos:end="211:40"><name pos:start="211:40" pos:end="211:40">i</name></expr>]</index></name><operator pos:start="211:42" pos:end="211:42">.</operator><name pos:start="211:43" pos:end="211:63">max_dec_pic_buffering</name> <operator pos:start="211:65" pos:end="211:65">-</operator> <literal type="number" pos:start="211:67" pos:end="211:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <if_stmt pos:start="216:9" pos:end="519:47"><if pos:start="216:9" pos:end="519:47">if <condition pos:start="216:12" pos:end="216:103">(<expr pos:start="216:13" pos:end="216:102"><name pos:start="216:13" pos:end="216:34"><name pos:start="216:13" pos:end="216:15">sps</name><operator pos:start="216:16" pos:end="216:17">-&gt;</operator><name pos:start="216:18" pos:end="216:31">temporal_layer</name><index pos:start="216:32" pos:end="216:34">[<expr pos:start="216:33" pos:end="216:33"><name pos:start="216:33" pos:end="216:33">i</name></expr>]</index></name><operator pos:start="216:35" pos:end="216:35">.</operator><name pos:start="216:36" pos:end="216:51">num_reorder_pics</name> <operator pos:start="216:53" pos:end="216:53">&gt;</operator> <name pos:start="216:55" pos:end="216:76"><name pos:start="216:55" pos:end="216:57">sps</name><operator pos:start="216:58" pos:end="216:59">-&gt;</operator><name pos:start="216:60" pos:end="216:73">temporal_layer</name><index pos:start="216:74" pos:end="216:76">[<expr pos:start="216:75" pos:end="216:75"><name pos:start="216:75" pos:end="216:75">i</name></expr>]</index></name><operator pos:start="216:77" pos:end="216:77">.</operator><name pos:start="216:78" pos:end="216:98">max_dec_pic_buffering</name> <operator pos:start="216:100" pos:end="216:100">-</operator> <literal type="number" pos:start="216:102" pos:end="216:102">1</literal></expr>)</condition> <block pos:start="216:105" pos:end="519:47">{<block_content pos:start="218:13" pos:end="519:47">

            <expr_stmt pos:start="218:13" pos:end="220:60"><expr pos:start="218:13" pos:end="220:59"><call pos:start="218:13" pos:end="220:59"><name pos:start="218:13" pos:end="218:18">av_log</name><argument_list pos:start="218:19" pos:end="220:59">(<argument pos:start="218:20" pos:end="218:24"><expr pos:start="218:20" pos:end="218:24"><name pos:start="218:20" pos:end="218:24">avctx</name></expr></argument>, <argument pos:start="218:27" pos:end="218:40"><expr pos:start="218:27" pos:end="218:40"><name pos:start="218:27" pos:end="218:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="218:43" pos:end="218:87"><expr pos:start="218:43" pos:end="218:87"><literal type="string" pos:start="218:43" pos:end="218:87">"sps_max_num_reorder_pics out of range: %d\n"</literal></expr></argument>,

                   <argument pos:start="220:20" pos:end="220:58"><expr pos:start="220:20" pos:end="220:58"><name pos:start="220:20" pos:end="220:41"><name pos:start="220:20" pos:end="220:22">sps</name><operator pos:start="220:23" pos:end="220:24">-&gt;</operator><name pos:start="220:25" pos:end="220:38">temporal_layer</name><index pos:start="220:39" pos:end="220:41">[<expr pos:start="220:40" pos:end="220:40"><name pos:start="220:40" pos:end="220:40">i</name></expr>]</index></name><operator pos:start="220:42" pos:end="220:42">.</operator><name pos:start="220:43" pos:end="220:58">num_reorder_pics</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="222:13" pos:end="519:47"><if pos:start="222:13" pos:end="519:47">if <condition pos:start="222:16" pos:end="224:80">(<expr pos:start="222:17" pos:end="224:79"><name pos:start="222:17" pos:end="222:38"><name pos:start="222:17" pos:end="222:21">avctx</name><operator pos:start="222:22" pos:end="222:23">-&gt;</operator><name pos:start="222:24" pos:end="222:38">err_recognition</name></name> <operator pos:start="222:40" pos:end="222:40">&amp;</operator> <name pos:start="222:42" pos:end="222:54">AV_EF_EXPLODE</name> <operator pos:start="222:56" pos:end="222:57">||</operator>

                <name pos:start="224:17" pos:end="224:38"><name pos:start="224:17" pos:end="224:19">sps</name><operator pos:start="224:20" pos:end="224:21">-&gt;</operator><name pos:start="224:22" pos:end="224:35">temporal_layer</name><index pos:start="224:36" pos:end="224:38">[<expr pos:start="224:37" pos:end="224:37"><name pos:start="224:37" pos:end="224:37">i</name></expr>]</index></name><operator pos:start="224:39" pos:end="224:39">.</operator><name pos:start="224:40" pos:end="224:55">num_reorder_pics</name> <operator pos:start="224:57" pos:end="224:57">&gt;</operator> <name pos:start="224:59" pos:end="224:75">HEVC_MAX_DPB_SIZE</name> <operator pos:start="224:77" pos:end="224:77">-</operator> <literal type="number" pos:start="224:79" pos:end="224:79">1</literal></expr>)</condition> <block pos:start="224:82" pos:end="519:47">{<block_content pos:start="229:13" pos:end="519:47">




            <expr_stmt pos:start="229:13" pos:end="229:103"><expr pos:start="229:13" pos:end="229:102"><name pos:start="229:13" pos:end="229:34"><name pos:start="229:13" pos:end="229:15">sps</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:31">temporal_layer</name><index pos:start="229:32" pos:end="229:34">[<expr pos:start="229:33" pos:end="229:33"><name pos:start="229:33" pos:end="229:33">i</name></expr>]</index></name><operator pos:start="229:35" pos:end="229:35">.</operator><name pos:start="229:36" pos:end="229:56">max_dec_pic_buffering</name> <operator pos:start="229:58" pos:end="229:58">=</operator> <name pos:start="229:60" pos:end="229:81"><name pos:start="229:60" pos:end="229:62">sps</name><operator pos:start="229:63" pos:end="229:64">-&gt;</operator><name pos:start="229:65" pos:end="229:78">temporal_layer</name><index pos:start="229:79" pos:end="229:81">[<expr pos:start="229:80" pos:end="229:80"><name pos:start="229:80" pos:end="229:80">i</name></expr>]</index></name><operator pos:start="229:82" pos:end="229:82">.</operator><name pos:start="229:83" pos:end="229:98">num_reorder_pics</name> <operator pos:start="229:100" pos:end="229:100">+</operator> <literal type="number" pos:start="229:102" pos:end="229:102">1</literal></expr>;</expr_stmt>





    <if_stmt pos:start="235:5" pos:end="519:47"><if pos:start="235:5" pos:end="519:47">if <condition pos:start="235:8" pos:end="235:32">(<expr pos:start="235:9" pos:end="235:31"><operator pos:start="235:9" pos:end="235:9">!</operator><name pos:start="235:10" pos:end="235:31">sublayer_ordering_info</name></expr>)</condition> <block pos:start="235:34" pos:end="519:47">{<block_content pos:start="237:9" pos:end="519:47">

        <for pos:start="237:9" pos:end="519:47">for <control pos:start="237:13" pos:end="237:35">(<init pos:start="237:14" pos:end="237:19"><expr pos:start="237:14" pos:end="237:18"><name pos:start="237:14" pos:end="237:14">i</name> <operator pos:start="237:16" pos:end="237:16">=</operator> <literal type="number" pos:start="237:18" pos:end="237:18">0</literal></expr>;</init> <condition pos:start="237:21" pos:end="237:30"><expr pos:start="237:21" pos:end="237:29"><name pos:start="237:21" pos:end="237:21">i</name> <operator pos:start="237:23" pos:end="237:23">&lt;</operator> <name pos:start="237:25" pos:end="237:29">start</name></expr>;</condition> <incr pos:start="237:32" pos:end="237:34"><expr pos:start="237:32" pos:end="237:34"><name pos:start="237:32" pos:end="237:32">i</name><operator pos:start="237:33" pos:end="237:34">++</operator></expr></incr>)</control> <block pos:start="237:37" pos:end="519:47">{<block_content pos:start="239:13" pos:end="519:47">

            <expr_stmt pos:start="239:13" pos:end="239:108"><expr pos:start="239:13" pos:end="239:107"><name pos:start="239:13" pos:end="239:34"><name pos:start="239:13" pos:end="239:15">sps</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:31">temporal_layer</name><index pos:start="239:32" pos:end="239:34">[<expr pos:start="239:33" pos:end="239:33"><name pos:start="239:33" pos:end="239:33">i</name></expr>]</index></name><operator pos:start="239:35" pos:end="239:35">.</operator><name pos:start="239:36" pos:end="239:56">max_dec_pic_buffering</name> <operator pos:start="239:58" pos:end="239:58">=</operator> <name pos:start="239:60" pos:end="239:85"><name pos:start="239:60" pos:end="239:62">sps</name><operator pos:start="239:63" pos:end="239:64">-&gt;</operator><name pos:start="239:65" pos:end="239:78">temporal_layer</name><index pos:start="239:79" pos:end="239:85">[<expr pos:start="239:80" pos:end="239:84"><name pos:start="239:80" pos:end="239:84">start</name></expr>]</index></name><operator pos:start="239:86" pos:end="239:86">.</operator><name pos:start="239:87" pos:end="239:107">max_dec_pic_buffering</name></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:103"><expr pos:start="241:13" pos:end="241:102"><name pos:start="241:13" pos:end="241:34"><name pos:start="241:13" pos:end="241:15">sps</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:31">temporal_layer</name><index pos:start="241:32" pos:end="241:34">[<expr pos:start="241:33" pos:end="241:33"><name pos:start="241:33" pos:end="241:33">i</name></expr>]</index></name><operator pos:start="241:35" pos:end="241:35">.</operator><name pos:start="241:36" pos:end="241:51">num_reorder_pics</name>      <operator pos:start="241:58" pos:end="241:58">=</operator> <name pos:start="241:60" pos:end="241:85"><name pos:start="241:60" pos:end="241:62">sps</name><operator pos:start="241:63" pos:end="241:64">-&gt;</operator><name pos:start="241:65" pos:end="241:78">temporal_layer</name><index pos:start="241:79" pos:end="241:85">[<expr pos:start="241:80" pos:end="241:84"><name pos:start="241:80" pos:end="241:84">start</name></expr>]</index></name><operator pos:start="241:86" pos:end="241:86">.</operator><name pos:start="241:87" pos:end="241:102">num_reorder_pics</name></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:107"><expr pos:start="243:13" pos:end="243:106"><name pos:start="243:13" pos:end="243:34"><name pos:start="243:13" pos:end="243:15">sps</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:31">temporal_layer</name><index pos:start="243:32" pos:end="243:34">[<expr pos:start="243:33" pos:end="243:33"><name pos:start="243:33" pos:end="243:33">i</name></expr>]</index></name><operator pos:start="243:35" pos:end="243:35">.</operator><name pos:start="243:36" pos:end="243:55">max_latency_increase</name>  <operator pos:start="243:58" pos:end="243:58">=</operator> <name pos:start="243:60" pos:end="243:85"><name pos:start="243:60" pos:end="243:62">sps</name><operator pos:start="243:63" pos:end="243:64">-&gt;</operator><name pos:start="243:65" pos:end="243:78">temporal_layer</name><index pos:start="243:79" pos:end="243:85">[<expr pos:start="243:80" pos:end="243:84"><name pos:start="243:80" pos:end="243:84">start</name></expr>]</index></name><operator pos:start="243:86" pos:end="243:86">.</operator><name pos:start="243:87" pos:end="243:106">max_latency_increase</name></expr>;</expr_stmt>





    <expr_stmt pos:start="249:5" pos:end="249:74"><expr pos:start="249:5" pos:end="249:73"><name pos:start="249:5" pos:end="249:25"><name pos:start="249:5" pos:end="249:7">sps</name><operator pos:start="249:8" pos:end="249:9">-&gt;</operator><name pos:start="249:10" pos:end="249:25">log2_min_cb_size</name></name>                    <operator pos:start="249:46" pos:end="249:46">=</operator> <call pos:start="249:48" pos:end="249:69"><name pos:start="249:48" pos:end="249:65">get_ue_golomb_long</name><argument_list pos:start="249:66" pos:end="249:69">(<argument pos:start="249:67" pos:end="249:68"><expr pos:start="249:67" pos:end="249:68"><name pos:start="249:67" pos:end="249:68">gb</name></expr></argument>)</argument_list></call> <operator pos:start="249:71" pos:end="249:71">+</operator> <literal type="number" pos:start="249:73" pos:end="249:73">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:70"><expr pos:start="251:5" pos:end="251:69"><name pos:start="251:5" pos:end="251:44"><name pos:start="251:5" pos:end="251:7">sps</name><operator pos:start="251:8" pos:end="251:9">-&gt;</operator><name pos:start="251:10" pos:end="251:44">log2_diff_max_min_coding_block_size</name></name> <operator pos:start="251:46" pos:end="251:46">=</operator> <call pos:start="251:48" pos:end="251:69"><name pos:start="251:48" pos:end="251:65">get_ue_golomb_long</name><argument_list pos:start="251:66" pos:end="251:69">(<argument pos:start="251:67" pos:end="251:68"><expr pos:start="251:67" pos:end="251:68"><name pos:start="251:67" pos:end="251:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:74"><expr pos:start="253:5" pos:end="253:73"><name pos:start="253:5" pos:end="253:25"><name pos:start="253:5" pos:end="253:7">sps</name><operator pos:start="253:8" pos:end="253:9">-&gt;</operator><name pos:start="253:10" pos:end="253:25">log2_min_tb_size</name></name>                    <operator pos:start="253:46" pos:end="253:46">=</operator> <call pos:start="253:48" pos:end="253:69"><name pos:start="253:48" pos:end="253:65">get_ue_golomb_long</name><argument_list pos:start="253:66" pos:end="253:69">(<argument pos:start="253:67" pos:end="253:68"><expr pos:start="253:67" pos:end="253:68"><name pos:start="253:67" pos:end="253:68">gb</name></expr></argument>)</argument_list></call> <operator pos:start="253:71" pos:end="253:71">+</operator> <literal type="number" pos:start="253:73" pos:end="253:73">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:70"><expr pos:start="255:5" pos:end="255:69"><name pos:start="255:5" pos:end="255:42">log2_diff_max_min_transform_block_size</name>   <operator pos:start="255:46" pos:end="255:46">=</operator> <call pos:start="255:48" pos:end="255:69"><name pos:start="255:48" pos:end="255:65">get_ue_golomb_long</name><argument_list pos:start="255:66" pos:end="255:69">(<argument pos:start="255:67" pos:end="255:68"><expr pos:start="255:67" pos:end="255:68"><name pos:start="255:67" pos:end="255:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="259:69"><expr pos:start="257:5" pos:end="259:68"><name pos:start="257:5" pos:end="257:28"><name pos:start="257:5" pos:end="257:7">sps</name><operator pos:start="257:8" pos:end="257:9">-&gt;</operator><name pos:start="257:10" pos:end="257:28">log2_max_trafo_size</name></name>                 <operator pos:start="257:46" pos:end="257:46">=</operator> <name pos:start="257:48" pos:end="257:85">log2_diff_max_min_transform_block_size</name> <operator pos:start="257:87" pos:end="257:87">+</operator>

                                               <name pos:start="259:48" pos:end="259:68"><name pos:start="259:48" pos:end="259:50">sps</name><operator pos:start="259:51" pos:end="259:52">-&gt;</operator><name pos:start="259:53" pos:end="259:68">log2_min_tb_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="263:5" pos:end="519:47"><if pos:start="263:5" pos:end="519:47">if <condition pos:start="263:8" pos:end="263:55">(<expr pos:start="263:9" pos:end="263:54"><name pos:start="263:9" pos:end="263:29"><name pos:start="263:9" pos:end="263:11">sps</name><operator pos:start="263:12" pos:end="263:13">-&gt;</operator><name pos:start="263:14" pos:end="263:29">log2_min_tb_size</name></name> <operator pos:start="263:31" pos:end="263:32">&gt;=</operator> <name pos:start="263:34" pos:end="263:54"><name pos:start="263:34" pos:end="263:36">sps</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:54">log2_min_cb_size</name></name></expr>)</condition> <block pos:start="263:57" pos:end="519:47">{<block_content pos:start="265:9" pos:end="519:47">

        <expr_stmt pos:start="265:9" pos:end="265:74"><expr pos:start="265:9" pos:end="265:73"><call pos:start="265:9" pos:end="265:73"><name pos:start="265:9" pos:end="265:14">av_log</name><argument_list pos:start="265:15" pos:end="265:73">(<argument pos:start="265:16" pos:end="265:20"><expr pos:start="265:16" pos:end="265:20"><name pos:start="265:16" pos:end="265:20">avctx</name></expr></argument>, <argument pos:start="265:23" pos:end="265:34"><expr pos:start="265:23" pos:end="265:34"><name pos:start="265:23" pos:end="265:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:37" pos:end="265:72"><expr pos:start="265:37" pos:end="265:72"><literal type="string" pos:start="265:37" pos:end="265:72">"Invalid value for log2_min_tb_size"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="270:5" pos:end="270:70"><expr pos:start="270:5" pos:end="270:69"><name pos:start="270:5" pos:end="270:44"><name pos:start="270:5" pos:end="270:7">sps</name><operator pos:start="270:8" pos:end="270:9">-&gt;</operator><name pos:start="270:10" pos:end="270:44">max_transform_hierarchy_depth_inter</name></name> <operator pos:start="270:46" pos:end="270:46">=</operator> <call pos:start="270:48" pos:end="270:69"><name pos:start="270:48" pos:end="270:65">get_ue_golomb_long</name><argument_list pos:start="270:66" pos:end="270:69">(<argument pos:start="270:67" pos:end="270:68"><expr pos:start="270:67" pos:end="270:68"><name pos:start="270:67" pos:end="270:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="272:5" pos:end="272:70"><expr pos:start="272:5" pos:end="272:69"><name pos:start="272:5" pos:end="272:44"><name pos:start="272:5" pos:end="272:7">sps</name><operator pos:start="272:8" pos:end="272:9">-&gt;</operator><name pos:start="272:10" pos:end="272:44">max_transform_hierarchy_depth_intra</name></name> <operator pos:start="272:46" pos:end="272:46">=</operator> <call pos:start="272:48" pos:end="272:69"><name pos:start="272:48" pos:end="272:65">get_ue_golomb_long</name><argument_list pos:start="272:66" pos:end="272:69">(<argument pos:start="272:67" pos:end="272:68"><expr pos:start="272:67" pos:end="272:68"><name pos:start="272:67" pos:end="272:68">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="276:5" pos:end="276:50"><expr pos:start="276:5" pos:end="276:49"><name pos:start="276:5" pos:end="276:33"><name pos:start="276:5" pos:end="276:7">sps</name><operator pos:start="276:8" pos:end="276:9">-&gt;</operator><name pos:start="276:10" pos:end="276:33">scaling_list_enable_flag</name></name> <operator pos:start="276:35" pos:end="276:35">=</operator> <call pos:start="276:37" pos:end="276:49"><name pos:start="276:37" pos:end="276:45">get_bits1</name><argument_list pos:start="276:46" pos:end="276:49">(<argument pos:start="276:47" pos:end="276:48"><expr pos:start="276:47" pos:end="276:48"><name pos:start="276:47" pos:end="276:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="278:5" pos:end="519:47"><if pos:start="278:5" pos:end="519:47">if <condition pos:start="278:8" pos:end="278:38">(<expr pos:start="278:9" pos:end="278:37"><name pos:start="278:9" pos:end="278:37"><name pos:start="278:9" pos:end="278:11">sps</name><operator pos:start="278:12" pos:end="278:13">-&gt;</operator><name pos:start="278:14" pos:end="278:37">scaling_list_enable_flag</name></name></expr>)</condition> <block pos:start="278:40" pos:end="519:47">{<block_content pos:start="280:9" pos:end="519:47">

        <expr_stmt pos:start="280:9" pos:end="280:58"><expr pos:start="280:9" pos:end="280:57"><call pos:start="280:9" pos:end="280:57"><name pos:start="280:9" pos:end="280:37">set_default_scaling_list_data</name><argument_list pos:start="280:38" pos:end="280:57">(<argument pos:start="280:39" pos:end="280:56"><expr pos:start="280:39" pos:end="280:56"><operator pos:start="280:39" pos:end="280:39">&amp;</operator><name pos:start="280:40" pos:end="280:56"><name pos:start="280:40" pos:end="280:42">sps</name><operator pos:start="280:43" pos:end="280:44">-&gt;</operator><name pos:start="280:45" pos:end="280:56">scaling_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="284:9" pos:end="519:47"><if pos:start="284:9" pos:end="519:47">if <condition pos:start="284:12" pos:end="284:26">(<expr pos:start="284:13" pos:end="284:25"><call pos:start="284:13" pos:end="284:25"><name pos:start="284:13" pos:end="284:21">get_bits1</name><argument_list pos:start="284:22" pos:end="284:25">(<argument pos:start="284:23" pos:end="284:24"><expr pos:start="284:23" pos:end="284:24"><name pos:start="284:23" pos:end="284:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="284:28" pos:end="519:47">{<block_content pos:start="286:13" pos:end="519:47">

            <expr_stmt pos:start="286:13" pos:end="286:67"><expr pos:start="286:13" pos:end="286:66"><name pos:start="286:13" pos:end="286:15">ret</name> <operator pos:start="286:17" pos:end="286:17">=</operator> <call pos:start="286:19" pos:end="286:66"><name pos:start="286:19" pos:end="286:35">scaling_list_data</name><argument_list pos:start="286:36" pos:end="286:66">(<argument pos:start="286:37" pos:end="286:38"><expr pos:start="286:37" pos:end="286:38"><name pos:start="286:37" pos:end="286:38">gb</name></expr></argument>, <argument pos:start="286:41" pos:end="286:45"><expr pos:start="286:41" pos:end="286:45"><name pos:start="286:41" pos:end="286:45">avctx</name></expr></argument>, <argument pos:start="286:48" pos:end="286:65"><expr pos:start="286:48" pos:end="286:65"><operator pos:start="286:48" pos:end="286:48">&amp;</operator><name pos:start="286:49" pos:end="286:65"><name pos:start="286:49" pos:end="286:51">sps</name><operator pos:start="286:52" pos:end="286:53">-&gt;</operator><name pos:start="286:54" pos:end="286:65">scaling_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="288:13" pos:end="295:42"><if pos:start="288:13" pos:end="295:42">if <condition pos:start="288:16" pos:end="288:24">(<expr pos:start="288:17" pos:end="288:23"><name pos:start="288:17" pos:end="288:19">ret</name> <operator pos:start="288:21" pos:end="288:21">&lt;</operator> <literal type="number" pos:start="288:23" pos:end="288:23">0</literal></expr>)</condition><block type="pseudo" pos:start="295:5" pos:end="295:42"><block_content pos:start="295:5" pos:end="295:42">






    <expr_stmt pos:start="295:5" pos:end="295:42"><expr pos:start="295:5" pos:end="295:41"><name pos:start="295:5" pos:end="295:25"><name pos:start="295:5" pos:end="295:7">sps</name><operator pos:start="295:8" pos:end="295:9">-&gt;</operator><name pos:start="295:10" pos:end="295:25">amp_enabled_flag</name></name> <operator pos:start="295:27" pos:end="295:27">=</operator> <call pos:start="295:29" pos:end="295:41"><name pos:start="295:29" pos:end="295:37">get_bits1</name><argument_list pos:start="295:38" pos:end="295:41">(<argument pos:start="295:39" pos:end="295:40"><expr pos:start="295:39" pos:end="295:40"><name pos:start="295:39" pos:end="295:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:42"><expr pos:start="297:5" pos:end="297:41"><name pos:start="297:5" pos:end="297:20"><name pos:start="297:5" pos:end="297:7">sps</name><operator pos:start="297:8" pos:end="297:9">-&gt;</operator><name pos:start="297:10" pos:end="297:20">sao_enabled</name></name>      <operator pos:start="297:27" pos:end="297:27">=</operator> <call pos:start="297:29" pos:end="297:41"><name pos:start="297:29" pos:end="297:37">get_bits1</name><argument_list pos:start="297:38" pos:end="297:41">(<argument pos:start="297:39" pos:end="297:40"><expr pos:start="297:39" pos:end="297:40"><name pos:start="297:39" pos:end="297:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:42"><expr pos:start="301:5" pos:end="301:41"><name pos:start="301:5" pos:end="301:25"><name pos:start="301:5" pos:end="301:7">sps</name><operator pos:start="301:8" pos:end="301:9">-&gt;</operator><name pos:start="301:10" pos:end="301:25">pcm_enabled_flag</name></name> <operator pos:start="301:27" pos:end="301:27">=</operator> <call pos:start="301:29" pos:end="301:41"><name pos:start="301:29" pos:end="301:37">get_bits1</name><argument_list pos:start="301:38" pos:end="301:41">(<argument pos:start="301:39" pos:end="301:40"><expr pos:start="301:39" pos:end="301:40"><name pos:start="301:39" pos:end="301:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="303:5" pos:end="519:47"><if pos:start="303:5" pos:end="519:47">if <condition pos:start="303:8" pos:end="303:30">(<expr pos:start="303:9" pos:end="303:29"><name pos:start="303:9" pos:end="303:29"><name pos:start="303:9" pos:end="303:11">sps</name><operator pos:start="303:12" pos:end="303:13">-&gt;</operator><name pos:start="303:14" pos:end="303:29">pcm_enabled_flag</name></name></expr>)</condition> <block pos:start="303:32" pos:end="519:47">{<block_content pos:start="305:9" pos:end="519:47">

        <expr_stmt pos:start="305:9" pos:end="305:51"><expr pos:start="305:9" pos:end="305:50"><name pos:start="305:9" pos:end="305:26"><name pos:start="305:9" pos:end="305:11">sps</name><operator pos:start="305:12" pos:end="305:13">-&gt;</operator><name pos:start="305:14" pos:end="305:16">pcm</name><operator pos:start="305:17" pos:end="305:17">.</operator><name pos:start="305:18" pos:end="305:26">bit_depth</name></name>   <operator pos:start="305:30" pos:end="305:30">=</operator> <call pos:start="305:32" pos:end="305:46"><name pos:start="305:32" pos:end="305:39">get_bits</name><argument_list pos:start="305:40" pos:end="305:46">(<argument pos:start="305:41" pos:end="305:42"><expr pos:start="305:41" pos:end="305:42"><name pos:start="305:41" pos:end="305:42">gb</name></expr></argument>, <argument pos:start="305:45" pos:end="305:45"><expr pos:start="305:45" pos:end="305:45"><literal type="number" pos:start="305:45" pos:end="305:45">4</literal></expr></argument>)</argument_list></call> <operator pos:start="305:48" pos:end="305:48">+</operator> <literal type="number" pos:start="305:50" pos:end="305:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:56"><expr pos:start="307:9" pos:end="307:55"><name pos:start="307:9" pos:end="307:33"><name pos:start="307:9" pos:end="307:11">sps</name><operator pos:start="307:12" pos:end="307:13">-&gt;</operator><name pos:start="307:14" pos:end="307:16">pcm</name><operator pos:start="307:17" pos:end="307:17">.</operator><name pos:start="307:18" pos:end="307:33">bit_depth_chroma</name></name> <operator pos:start="307:35" pos:end="307:35">=</operator> <call pos:start="307:37" pos:end="307:51"><name pos:start="307:37" pos:end="307:44">get_bits</name><argument_list pos:start="307:45" pos:end="307:51">(<argument pos:start="307:46" pos:end="307:47"><expr pos:start="307:46" pos:end="307:47"><name pos:start="307:46" pos:end="307:47">gb</name></expr></argument>, <argument pos:start="307:50" pos:end="307:50"><expr pos:start="307:50" pos:end="307:50"><literal type="number" pos:start="307:50" pos:end="307:50">4</literal></expr></argument>)</argument_list></call> <operator pos:start="307:53" pos:end="307:53">+</operator> <literal type="number" pos:start="307:55" pos:end="307:55">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:67"><expr pos:start="309:9" pos:end="309:66"><name pos:start="309:9" pos:end="309:37"><name pos:start="309:9" pos:end="309:11">sps</name><operator pos:start="309:12" pos:end="309:13">-&gt;</operator><name pos:start="309:14" pos:end="309:16">pcm</name><operator pos:start="309:17" pos:end="309:17">.</operator><name pos:start="309:18" pos:end="309:37">log2_min_pcm_cb_size</name></name> <operator pos:start="309:39" pos:end="309:39">=</operator> <call pos:start="309:41" pos:end="309:62"><name pos:start="309:41" pos:end="309:58">get_ue_golomb_long</name><argument_list pos:start="309:59" pos:end="309:62">(<argument pos:start="309:60" pos:end="309:61"><expr pos:start="309:60" pos:end="309:61"><name pos:start="309:60" pos:end="309:61">gb</name></expr></argument>)</argument_list></call> <operator pos:start="309:64" pos:end="309:64">+</operator> <literal type="number" pos:start="309:66" pos:end="309:66">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="313:63"><expr pos:start="311:9" pos:end="313:62"><name pos:start="311:9" pos:end="311:37"><name pos:start="311:9" pos:end="311:11">sps</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:16">pcm</name><operator pos:start="311:17" pos:end="311:17">.</operator><name pos:start="311:18" pos:end="311:37">log2_max_pcm_cb_size</name></name> <operator pos:start="311:39" pos:end="311:39">=</operator> <name pos:start="311:41" pos:end="311:69"><name pos:start="311:41" pos:end="311:43">sps</name><operator pos:start="311:44" pos:end="311:45">-&gt;</operator><name pos:start="311:46" pos:end="311:48">pcm</name><operator pos:start="311:49" pos:end="311:49">.</operator><name pos:start="311:50" pos:end="311:69">log2_min_pcm_cb_size</name></name> <operator pos:start="311:71" pos:end="311:71">+</operator>

                                        <call pos:start="313:41" pos:end="313:62"><name pos:start="313:41" pos:end="313:58">get_ue_golomb_long</name><argument_list pos:start="313:59" pos:end="313:62">(<argument pos:start="313:60" pos:end="313:61"><expr pos:start="313:60" pos:end="313:61"><name pos:start="313:60" pos:end="313:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="519:47"><if pos:start="315:9" pos:end="519:47">if <condition pos:start="315:12" pos:end="315:48">(<expr pos:start="315:13" pos:end="315:47"><name pos:start="315:13" pos:end="315:30"><name pos:start="315:13" pos:end="315:15">sps</name><operator pos:start="315:16" pos:end="315:17">-&gt;</operator><name pos:start="315:18" pos:end="315:20">pcm</name><operator pos:start="315:21" pos:end="315:21">.</operator><name pos:start="315:22" pos:end="315:30">bit_depth</name></name> <operator pos:start="315:32" pos:end="315:32">&gt;</operator> <name pos:start="315:34" pos:end="315:47"><name pos:start="315:34" pos:end="315:36">sps</name><operator pos:start="315:37" pos:end="315:38">-&gt;</operator><name pos:start="315:39" pos:end="315:47">bit_depth</name></name></expr>)</condition> <block pos:start="315:50" pos:end="519:47">{<block_content pos:start="317:13" pos:end="519:47">

            <expr_stmt pos:start="317:13" pos:end="321:55"><expr pos:start="317:13" pos:end="321:54"><call pos:start="317:13" pos:end="321:54"><name pos:start="317:13" pos:end="317:18">av_log</name><argument_list pos:start="317:19" pos:end="321:54">(<argument pos:start="317:20" pos:end="317:24"><expr pos:start="317:20" pos:end="317:24"><name pos:start="317:20" pos:end="317:24">avctx</name></expr></argument>, <argument pos:start="317:27" pos:end="317:38"><expr pos:start="317:27" pos:end="317:38"><name pos:start="317:27" pos:end="317:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="319:20" pos:end="319:79"><expr pos:start="319:20" pos:end="319:79"><literal type="string" pos:start="319:20" pos:end="319:79">"PCM bit depth (%d) is greater than normal bit depth (%d)\n"</literal></expr></argument>,

                   <argument pos:start="321:20" pos:end="321:37"><expr pos:start="321:20" pos:end="321:37"><name pos:start="321:20" pos:end="321:37"><name pos:start="321:20" pos:end="321:22">sps</name><operator pos:start="321:23" pos:end="321:24">-&gt;</operator><name pos:start="321:25" pos:end="321:27">pcm</name><operator pos:start="321:28" pos:end="321:28">.</operator><name pos:start="321:29" pos:end="321:37">bit_depth</name></name></expr></argument>, <argument pos:start="321:40" pos:end="321:53"><expr pos:start="321:40" pos:end="321:53"><name pos:start="321:40" pos:end="321:53"><name pos:start="321:40" pos:end="321:42">sps</name><operator pos:start="321:43" pos:end="321:44">-&gt;</operator><name pos:start="321:45" pos:end="321:53">bit_depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






        <expr_stmt pos:start="328:9" pos:end="328:58"><expr pos:start="328:9" pos:end="328:57"><name pos:start="328:9" pos:end="328:41"><name pos:start="328:9" pos:end="328:11">sps</name><operator pos:start="328:12" pos:end="328:13">-&gt;</operator><name pos:start="328:14" pos:end="328:16">pcm</name><operator pos:start="328:17" pos:end="328:17">.</operator><name pos:start="328:18" pos:end="328:41">loop_filter_disable_flag</name></name> <operator pos:start="328:43" pos:end="328:43">=</operator> <call pos:start="328:45" pos:end="328:57"><name pos:start="328:45" pos:end="328:53">get_bits1</name><argument_list pos:start="328:54" pos:end="328:57">(<argument pos:start="328:55" pos:end="328:56"><expr pos:start="328:55" pos:end="328:56"><name pos:start="328:55" pos:end="328:56">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="333:5" pos:end="333:44"><expr pos:start="333:5" pos:end="333:43"><name pos:start="333:5" pos:end="333:18"><name pos:start="333:5" pos:end="333:7">sps</name><operator pos:start="333:8" pos:end="333:9">-&gt;</operator><name pos:start="333:10" pos:end="333:18">nb_st_rps</name></name> <operator pos:start="333:20" pos:end="333:20">=</operator> <call pos:start="333:22" pos:end="333:43"><name pos:start="333:22" pos:end="333:39">get_ue_golomb_long</name><argument_list pos:start="333:40" pos:end="333:43">(<argument pos:start="333:41" pos:end="333:42"><expr pos:start="333:41" pos:end="333:42"><name pos:start="333:41" pos:end="333:42">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="335:5" pos:end="519:47"><if pos:start="335:5" pos:end="519:47">if <condition pos:start="335:8" pos:end="335:58">(<expr pos:start="335:9" pos:end="335:57"><name pos:start="335:9" pos:end="335:22"><name pos:start="335:9" pos:end="335:11">sps</name><operator pos:start="335:12" pos:end="335:13">-&gt;</operator><name pos:start="335:14" pos:end="335:22">nb_st_rps</name></name> <operator pos:start="335:24" pos:end="335:24">&gt;</operator> <name pos:start="335:26" pos:end="335:57">HEVC_MAX_SHORT_TERM_REF_PIC_SETS</name></expr>)</condition> <block pos:start="335:60" pos:end="519:47">{<block_content pos:start="337:9" pos:end="519:47">

        <expr_stmt pos:start="337:9" pos:end="339:31"><expr pos:start="337:9" pos:end="339:30"><call pos:start="337:9" pos:end="339:30"><name pos:start="337:9" pos:end="337:14">av_log</name><argument_list pos:start="337:15" pos:end="339:30">(<argument pos:start="337:16" pos:end="337:20"><expr pos:start="337:16" pos:end="337:20"><name pos:start="337:16" pos:end="337:20">avctx</name></expr></argument>, <argument pos:start="337:23" pos:end="337:34"><expr pos:start="337:23" pos:end="337:34"><name pos:start="337:23" pos:end="337:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="337:37" pos:end="337:68"><expr pos:start="337:37" pos:end="337:68"><literal type="string" pos:start="337:37" pos:end="337:68">"Too many short term RPS: %d.\n"</literal></expr></argument>,

               <argument pos:start="339:16" pos:end="339:29"><expr pos:start="339:16" pos:end="339:29"><name pos:start="339:16" pos:end="339:29"><name pos:start="339:16" pos:end="339:18">sps</name><operator pos:start="339:19" pos:end="339:20">-&gt;</operator><name pos:start="339:21" pos:end="339:29">nb_st_rps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <for pos:start="344:5" pos:end="519:47">for <control pos:start="344:9" pos:end="344:40">(<init pos:start="344:10" pos:end="344:15"><expr pos:start="344:10" pos:end="344:14"><name pos:start="344:10" pos:end="344:10">i</name> <operator pos:start="344:12" pos:end="344:12">=</operator> <literal type="number" pos:start="344:14" pos:end="344:14">0</literal></expr>;</init> <condition pos:start="344:17" pos:end="344:35"><expr pos:start="344:17" pos:end="344:34"><name pos:start="344:17" pos:end="344:17">i</name> <operator pos:start="344:19" pos:end="344:19">&lt;</operator> <name pos:start="344:21" pos:end="344:34"><name pos:start="344:21" pos:end="344:23">sps</name><operator pos:start="344:24" pos:end="344:25">-&gt;</operator><name pos:start="344:26" pos:end="344:34">nb_st_rps</name></name></expr>;</condition> <incr pos:start="344:37" pos:end="344:39"><expr pos:start="344:37" pos:end="344:39"><name pos:start="344:37" pos:end="344:37">i</name><operator pos:start="344:38" pos:end="344:39">++</operator></expr></incr>)</control> <block pos:start="344:42" pos:end="519:47">{<block_content pos:start="346:9" pos:end="519:47">

        <if_stmt pos:start="346:9" pos:end="354:57"><if pos:start="346:9" pos:end="354:57">if <condition pos:start="346:12" pos:end="348:62">(<expr pos:start="346:13" pos:end="348:61"><operator pos:start="346:13" pos:end="346:13">(</operator><name pos:start="346:14" pos:end="346:16">ret</name> <operator pos:start="346:18" pos:end="346:18">=</operator> <call pos:start="346:20" pos:end="348:56"><name pos:start="346:20" pos:end="346:48">ff_hevc_decode_short_term_rps</name><argument_list pos:start="346:49" pos:end="348:56">(<argument pos:start="346:50" pos:end="346:51"><expr pos:start="346:50" pos:end="346:51"><name pos:start="346:50" pos:end="346:51">gb</name></expr></argument>, <argument pos:start="346:54" pos:end="346:58"><expr pos:start="346:54" pos:end="346:58"><name pos:start="346:54" pos:end="346:58">avctx</name></expr></argument>, <argument pos:start="346:61" pos:end="346:75"><expr pos:start="346:61" pos:end="346:75"><operator pos:start="346:61" pos:end="346:61">&amp;</operator><name pos:start="346:62" pos:end="346:75"><name pos:start="346:62" pos:end="346:64">sps</name><operator pos:start="346:65" pos:end="346:66">-&gt;</operator><name pos:start="346:67" pos:end="346:72">st_rps</name><index pos:start="346:73" pos:end="346:75">[<expr pos:start="346:74" pos:end="346:74"><name pos:start="346:74" pos:end="346:74">i</name></expr>]</index></name></expr></argument>,

                                                 <argument pos:start="348:50" pos:end="348:52"><expr pos:start="348:50" pos:end="348:52"><name pos:start="348:50" pos:end="348:52">sps</name></expr></argument>, <argument pos:start="348:55" pos:end="348:55"><expr pos:start="348:55" pos:end="348:55"><literal type="number" pos:start="348:55" pos:end="348:55">0</literal></expr></argument>)</argument_list></call><operator pos:start="348:57" pos:end="348:57">)</operator> <operator pos:start="348:59" pos:end="348:59">&lt;</operator> <literal type="number" pos:start="348:61" pos:end="348:61">0</literal></expr>)</condition><block type="pseudo" pos:start="354:5" pos:end="354:57"><block_content pos:start="354:5" pos:end="354:57">





    <expr_stmt pos:start="354:5" pos:end="354:57"><expr pos:start="354:5" pos:end="354:56"><name pos:start="354:5" pos:end="354:40"><name pos:start="354:5" pos:end="354:7">sps</name><operator pos:start="354:8" pos:end="354:9">-&gt;</operator><name pos:start="354:10" pos:end="354:40">long_term_ref_pics_present_flag</name></name> <operator pos:start="354:42" pos:end="354:42">=</operator> <call pos:start="354:44" pos:end="354:56"><name pos:start="354:44" pos:end="354:52">get_bits1</name><argument_list pos:start="354:53" pos:end="354:56">(<argument pos:start="354:54" pos:end="354:55"><expr pos:start="354:54" pos:end="354:55"><name pos:start="354:54" pos:end="354:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="356:5" pos:end="519:47"><if pos:start="356:5" pos:end="519:47">if <condition pos:start="356:8" pos:end="356:45">(<expr pos:start="356:9" pos:end="356:44"><name pos:start="356:9" pos:end="356:44"><name pos:start="356:9" pos:end="356:11">sps</name><operator pos:start="356:12" pos:end="356:13">-&gt;</operator><name pos:start="356:14" pos:end="356:44">long_term_ref_pics_present_flag</name></name></expr>)</condition> <block pos:start="356:47" pos:end="519:47">{<block_content pos:start="358:9" pos:end="519:47">

        <expr_stmt pos:start="358:9" pos:end="358:65"><expr pos:start="358:9" pos:end="358:64"><name pos:start="358:9" pos:end="358:39"><name pos:start="358:9" pos:end="358:11">sps</name><operator pos:start="358:12" pos:end="358:13">-&gt;</operator><name pos:start="358:14" pos:end="358:39">num_long_term_ref_pics_sps</name></name> <operator pos:start="358:41" pos:end="358:41">=</operator> <call pos:start="358:43" pos:end="358:64"><name pos:start="358:43" pos:end="358:60">get_ue_golomb_long</name><argument_list pos:start="358:61" pos:end="358:64">(<argument pos:start="358:62" pos:end="358:63"><expr pos:start="358:62" pos:end="358:63"><name pos:start="358:62" pos:end="358:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







        <for pos:start="366:9" pos:end="519:47">for <control pos:start="366:13" pos:end="366:61">(<init pos:start="366:14" pos:end="366:19"><expr pos:start="366:14" pos:end="366:18"><name pos:start="366:14" pos:end="366:14">i</name> <operator pos:start="366:16" pos:end="366:16">=</operator> <literal type="number" pos:start="366:18" pos:end="366:18">0</literal></expr>;</init> <condition pos:start="366:21" pos:end="366:56"><expr pos:start="366:21" pos:end="366:55"><name pos:start="366:21" pos:end="366:21">i</name> <operator pos:start="366:23" pos:end="366:23">&lt;</operator> <name pos:start="366:25" pos:end="366:55"><name pos:start="366:25" pos:end="366:27">sps</name><operator pos:start="366:28" pos:end="366:29">-&gt;</operator><name pos:start="366:30" pos:end="366:55">num_long_term_ref_pics_sps</name></name></expr>;</condition> <incr pos:start="366:58" pos:end="366:60"><expr pos:start="366:58" pos:end="366:60"><name pos:start="366:58" pos:end="366:58">i</name><operator pos:start="366:59" pos:end="366:60">++</operator></expr></incr>)</control> <block pos:start="366:63" pos:end="519:47">{<block_content pos:start="368:13" pos:end="519:47">

            <expr_stmt pos:start="368:13" pos:end="368:87"><expr pos:start="368:13" pos:end="368:86"><name pos:start="368:13" pos:end="368:42"><name pos:start="368:13" pos:end="368:15">sps</name><operator pos:start="368:16" pos:end="368:17">-&gt;</operator><name pos:start="368:18" pos:end="368:39">lt_ref_pic_poc_lsb_sps</name><index pos:start="368:40" pos:end="368:42">[<expr pos:start="368:41" pos:end="368:41"><name pos:start="368:41" pos:end="368:41">i</name></expr>]</index></name>       <operator pos:start="368:50" pos:end="368:50">=</operator> <call pos:start="368:52" pos:end="368:86"><name pos:start="368:52" pos:end="368:59">get_bits</name><argument_list pos:start="368:60" pos:end="368:86">(<argument pos:start="368:61" pos:end="368:62"><expr pos:start="368:61" pos:end="368:62"><name pos:start="368:61" pos:end="368:62">gb</name></expr></argument>, <argument pos:start="368:65" pos:end="368:85"><expr pos:start="368:65" pos:end="368:85"><name pos:start="368:65" pos:end="368:85"><name pos:start="368:65" pos:end="368:67">sps</name><operator pos:start="368:68" pos:end="368:69">-&gt;</operator><name pos:start="368:70" pos:end="368:85">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="370:13" pos:end="370:65"><expr pos:start="370:13" pos:end="370:64"><name pos:start="370:13" pos:end="370:48"><name pos:start="370:13" pos:end="370:15">sps</name><operator pos:start="370:16" pos:end="370:17">-&gt;</operator><name pos:start="370:18" pos:end="370:45">used_by_curr_pic_lt_sps_flag</name><index pos:start="370:46" pos:end="370:48">[<expr pos:start="370:47" pos:end="370:47"><name pos:start="370:47" pos:end="370:47">i</name></expr>]</index></name> <operator pos:start="370:50" pos:end="370:50">=</operator> <call pos:start="370:52" pos:end="370:64"><name pos:start="370:52" pos:end="370:60">get_bits1</name><argument_list pos:start="370:61" pos:end="370:64">(<argument pos:start="370:62" pos:end="370:63"><expr pos:start="370:62" pos:end="370:63"><name pos:start="370:62" pos:end="370:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="376:5" pos:end="376:64"><expr pos:start="376:5" pos:end="376:63"><name pos:start="376:5" pos:end="376:38"><name pos:start="376:5" pos:end="376:7">sps</name><operator pos:start="376:8" pos:end="376:9">-&gt;</operator><name pos:start="376:10" pos:end="376:38">sps_temporal_mvp_enabled_flag</name></name>          <operator pos:start="376:49" pos:end="376:49">=</operator> <call pos:start="376:51" pos:end="376:63"><name pos:start="376:51" pos:end="376:59">get_bits1</name><argument_list pos:start="376:60" pos:end="376:63">(<argument pos:start="376:61" pos:end="376:62"><expr pos:start="376:61" pos:end="376:62"><name pos:start="376:61" pos:end="376:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="378:5" pos:end="378:64"><expr pos:start="378:5" pos:end="378:63"><name pos:start="378:5" pos:end="378:47"><name pos:start="378:5" pos:end="378:7">sps</name><operator pos:start="378:8" pos:end="378:9">-&gt;</operator><name pos:start="378:10" pos:end="378:47">sps_strong_intra_smoothing_enable_flag</name></name> <operator pos:start="378:49" pos:end="378:49">=</operator> <call pos:start="378:51" pos:end="378:63"><name pos:start="378:51" pos:end="378:59">get_bits1</name><argument_list pos:start="378:60" pos:end="378:63">(<argument pos:start="378:61" pos:end="378:62"><expr pos:start="378:61" pos:end="378:62"><name pos:start="378:61" pos:end="378:62">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="380:5" pos:end="380:38"><expr pos:start="380:5" pos:end="380:37"><name pos:start="380:5" pos:end="380:16"><name pos:start="380:5" pos:end="380:7">sps</name><operator pos:start="380:8" pos:end="380:9">-&gt;</operator><name pos:start="380:10" pos:end="380:12">vui</name><operator pos:start="380:13" pos:end="380:13">.</operator><name pos:start="380:14" pos:end="380:16">sar</name></name> <operator pos:start="380:18" pos:end="380:18">=</operator> <operator pos:start="380:20" pos:end="380:20">(</operator><name pos:start="380:21" pos:end="380:30">AVRational</name><operator pos:start="380:31" pos:end="380:31">)</operator><block pos:start="380:32" pos:end="380:37">{<expr pos:start="380:33" pos:end="380:33"><literal type="number" pos:start="380:33" pos:end="380:33">0</literal></expr>, <expr pos:start="380:36" pos:end="380:36"><literal type="number" pos:start="380:36" pos:end="380:36">1</literal></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="382:5" pos:end="382:32"><expr pos:start="382:5" pos:end="382:31"><name pos:start="382:5" pos:end="382:15">vui_present</name> <operator pos:start="382:17" pos:end="382:17">=</operator> <call pos:start="382:19" pos:end="382:31"><name pos:start="382:19" pos:end="382:27">get_bits1</name><argument_list pos:start="382:28" pos:end="382:31">(<argument pos:start="382:29" pos:end="382:30"><expr pos:start="382:29" pos:end="382:30"><name pos:start="382:29" pos:end="382:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="384:5" pos:end="386:53"><if pos:start="384:5" pos:end="386:53">if <condition pos:start="384:8" pos:end="384:20">(<expr pos:start="384:9" pos:end="384:19"><name pos:start="384:9" pos:end="384:19">vui_present</name></expr>)</condition><block type="pseudo" pos:start="386:9" pos:end="386:53"><block_content pos:start="386:9" pos:end="386:53">

        <expr_stmt pos:start="386:9" pos:end="386:53"><expr pos:start="386:9" pos:end="386:52"><call pos:start="386:9" pos:end="386:52"><name pos:start="386:9" pos:end="386:18">decode_vui</name><argument_list pos:start="386:19" pos:end="386:52">(<argument pos:start="386:20" pos:end="386:21"><expr pos:start="386:20" pos:end="386:21"><name pos:start="386:20" pos:end="386:21">gb</name></expr></argument>, <argument pos:start="386:24" pos:end="386:28"><expr pos:start="386:24" pos:end="386:28"><name pos:start="386:24" pos:end="386:28">avctx</name></expr></argument>, <argument pos:start="386:31" pos:end="386:46"><expr pos:start="386:31" pos:end="386:46"><name pos:start="386:31" pos:end="386:46">apply_defdispwin</name></expr></argument>, <argument pos:start="386:49" pos:end="386:51"><expr pos:start="386:49" pos:end="386:51"><name pos:start="386:49" pos:end="386:51">sps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="388:5" pos:end="388:19"><expr pos:start="388:5" pos:end="388:18"><call pos:start="388:5" pos:end="388:18"><name pos:start="388:5" pos:end="388:14">skip_bits1</name><argument_list pos:start="388:15" pos:end="388:18">(<argument pos:start="388:16" pos:end="388:17"><expr pos:start="388:16" pos:end="388:17"><name pos:start="388:16" pos:end="388:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="388:21" pos:end="388:41">// sps_extension_flag</comment>



    <if_stmt pos:start="392:5" pos:end="519:47"><if pos:start="392:5" pos:end="519:47">if <condition pos:start="392:8" pos:end="392:25">(<expr pos:start="392:9" pos:end="392:24"><name pos:start="392:9" pos:end="392:24">apply_defdispwin</name></expr>)</condition> <block pos:start="392:27" pos:end="519:47">{<block_content pos:start="394:9" pos:end="519:47">

        <expr_stmt pos:start="394:9" pos:end="394:78"><expr pos:start="394:9" pos:end="394:77"><name pos:start="394:9" pos:end="394:38"><name pos:start="394:9" pos:end="394:11">sps</name><operator pos:start="394:12" pos:end="394:13">-&gt;</operator><name pos:start="394:14" pos:end="394:26">output_window</name><operator pos:start="394:27" pos:end="394:27">.</operator><name pos:start="394:28" pos:end="394:38">left_offset</name></name>   <operator pos:start="394:42" pos:end="394:43">+=</operator> <name pos:start="394:45" pos:end="394:77"><name pos:start="394:45" pos:end="394:47">sps</name><operator pos:start="394:48" pos:end="394:49">-&gt;</operator><name pos:start="394:50" pos:end="394:52">vui</name><operator pos:start="394:53" pos:end="394:53">.</operator><name pos:start="394:54" pos:end="394:65">def_disp_win</name><operator pos:start="394:66" pos:end="394:66">.</operator><name pos:start="394:67" pos:end="394:77">left_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="396:9" pos:end="396:79"><expr pos:start="396:9" pos:end="396:78"><name pos:start="396:9" pos:end="396:39"><name pos:start="396:9" pos:end="396:11">sps</name><operator pos:start="396:12" pos:end="396:13">-&gt;</operator><name pos:start="396:14" pos:end="396:26">output_window</name><operator pos:start="396:27" pos:end="396:27">.</operator><name pos:start="396:28" pos:end="396:39">right_offset</name></name>  <operator pos:start="396:42" pos:end="396:43">+=</operator> <name pos:start="396:45" pos:end="396:78"><name pos:start="396:45" pos:end="396:47">sps</name><operator pos:start="396:48" pos:end="396:49">-&gt;</operator><name pos:start="396:50" pos:end="396:52">vui</name><operator pos:start="396:53" pos:end="396:53">.</operator><name pos:start="396:54" pos:end="396:65">def_disp_win</name><operator pos:start="396:66" pos:end="396:66">.</operator><name pos:start="396:67" pos:end="396:78">right_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="398:9" pos:end="398:77"><expr pos:start="398:9" pos:end="398:76"><name pos:start="398:9" pos:end="398:37"><name pos:start="398:9" pos:end="398:11">sps</name><operator pos:start="398:12" pos:end="398:13">-&gt;</operator><name pos:start="398:14" pos:end="398:26">output_window</name><operator pos:start="398:27" pos:end="398:27">.</operator><name pos:start="398:28" pos:end="398:37">top_offset</name></name>    <operator pos:start="398:42" pos:end="398:43">+=</operator> <name pos:start="398:45" pos:end="398:76"><name pos:start="398:45" pos:end="398:47">sps</name><operator pos:start="398:48" pos:end="398:49">-&gt;</operator><name pos:start="398:50" pos:end="398:52">vui</name><operator pos:start="398:53" pos:end="398:53">.</operator><name pos:start="398:54" pos:end="398:65">def_disp_win</name><operator pos:start="398:66" pos:end="398:66">.</operator><name pos:start="398:67" pos:end="398:76">top_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="400:9" pos:end="400:80"><expr pos:start="400:9" pos:end="400:79"><name pos:start="400:9" pos:end="400:40"><name pos:start="400:9" pos:end="400:11">sps</name><operator pos:start="400:12" pos:end="400:13">-&gt;</operator><name pos:start="400:14" pos:end="400:26">output_window</name><operator pos:start="400:27" pos:end="400:27">.</operator><name pos:start="400:28" pos:end="400:40">bottom_offset</name></name> <operator pos:start="400:42" pos:end="400:43">+=</operator> <name pos:start="400:45" pos:end="400:79"><name pos:start="400:45" pos:end="400:47">sps</name><operator pos:start="400:48" pos:end="400:49">-&gt;</operator><name pos:start="400:50" pos:end="400:52">vui</name><operator pos:start="400:53" pos:end="400:53">.</operator><name pos:start="400:54" pos:end="400:65">def_disp_win</name><operator pos:start="400:66" pos:end="400:66">.</operator><name pos:start="400:67" pos:end="400:79">bottom_offset</name></name></expr>;</expr_stmt>




    <expr_stmt pos:start="405:5" pos:end="405:29"><expr pos:start="405:5" pos:end="405:28"><name pos:start="405:5" pos:end="405:6">ow</name> <operator pos:start="405:8" pos:end="405:8">=</operator> <operator pos:start="405:10" pos:end="405:10">&amp;</operator><name pos:start="405:11" pos:end="405:28"><name pos:start="405:11" pos:end="405:13">sps</name><operator pos:start="405:14" pos:end="405:15">-&gt;</operator><name pos:start="405:16" pos:end="405:28">output_window</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="407:5" pos:end="519:47"><if pos:start="407:5" pos:end="519:47">if <condition pos:start="407:8" pos:end="413:59">(<expr pos:start="407:9" pos:end="413:58"><name pos:start="407:9" pos:end="407:23"><name pos:start="407:9" pos:end="407:10">ow</name><operator pos:start="407:11" pos:end="407:12">-&gt;</operator><name pos:start="407:13" pos:end="407:23">left_offset</name></name> <operator pos:start="407:25" pos:end="407:26">&gt;=</operator> <name pos:start="407:28" pos:end="407:34">INT_MAX</name> <operator pos:start="407:36" pos:end="407:36">-</operator> <name pos:start="407:38" pos:end="407:53"><name pos:start="407:38" pos:end="407:39">ow</name><operator pos:start="407:40" pos:end="407:41">-&gt;</operator><name pos:start="407:42" pos:end="407:53">right_offset</name></name>     <operator pos:start="407:59" pos:end="407:60">||</operator>

        <name pos:start="409:9" pos:end="409:22"><name pos:start="409:9" pos:end="409:10">ow</name><operator pos:start="409:11" pos:end="409:12">-&gt;</operator><name pos:start="409:13" pos:end="409:22">top_offset</name></name>  <operator pos:start="409:25" pos:end="409:26">&gt;=</operator> <name pos:start="409:28" pos:end="409:34">INT_MAX</name> <operator pos:start="409:36" pos:end="409:36">-</operator> <name pos:start="409:38" pos:end="409:54"><name pos:start="409:38" pos:end="409:39">ow</name><operator pos:start="409:40" pos:end="409:41">-&gt;</operator><name pos:start="409:42" pos:end="409:54">bottom_offset</name></name>    <operator pos:start="409:59" pos:end="409:60">||</operator>

        <name pos:start="411:9" pos:end="411:23"><name pos:start="411:9" pos:end="411:10">ow</name><operator pos:start="411:11" pos:end="411:12">-&gt;</operator><name pos:start="411:13" pos:end="411:23">left_offset</name></name> <operator pos:start="411:25" pos:end="411:25">+</operator> <name pos:start="411:27" pos:end="411:42"><name pos:start="411:27" pos:end="411:28">ow</name><operator pos:start="411:29" pos:end="411:30">-&gt;</operator><name pos:start="411:31" pos:end="411:42">right_offset</name></name>  <operator pos:start="411:45" pos:end="411:46">&gt;=</operator> <name pos:start="411:48" pos:end="411:57"><name pos:start="411:48" pos:end="411:50">sps</name><operator pos:start="411:51" pos:end="411:52">-&gt;</operator><name pos:start="411:53" pos:end="411:57">width</name></name> <operator pos:start="411:59" pos:end="411:60">||</operator>

        <name pos:start="413:9" pos:end="413:22"><name pos:start="413:9" pos:end="413:10">ow</name><operator pos:start="413:11" pos:end="413:12">-&gt;</operator><name pos:start="413:13" pos:end="413:22">top_offset</name></name>  <operator pos:start="413:25" pos:end="413:25">+</operator> <name pos:start="413:27" pos:end="413:43"><name pos:start="413:27" pos:end="413:28">ow</name><operator pos:start="413:29" pos:end="413:30">-&gt;</operator><name pos:start="413:31" pos:end="413:43">bottom_offset</name></name> <operator pos:start="413:45" pos:end="413:46">&gt;=</operator> <name pos:start="413:48" pos:end="413:58"><name pos:start="413:48" pos:end="413:50">sps</name><operator pos:start="413:51" pos:end="413:52">-&gt;</operator><name pos:start="413:53" pos:end="413:58">height</name></name></expr>)</condition> <block pos:start="413:61" pos:end="519:47">{<block_content pos:start="415:9" pos:end="519:47">

        <expr_stmt pos:start="415:9" pos:end="417:85"><expr pos:start="415:9" pos:end="417:84"><call pos:start="415:9" pos:end="417:84"><name pos:start="415:9" pos:end="415:14">av_log</name><argument_list pos:start="415:15" pos:end="417:84">(<argument pos:start="415:16" pos:end="415:20"><expr pos:start="415:16" pos:end="415:20"><name pos:start="415:16" pos:end="415:20">avctx</name></expr></argument>, <argument pos:start="415:23" pos:end="415:36"><expr pos:start="415:23" pos:end="415:36"><name pos:start="415:23" pos:end="415:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="415:39" pos:end="415:79"><expr pos:start="415:39" pos:end="415:79"><literal type="string" pos:start="415:39" pos:end="415:79">"Invalid cropping offsets: %u/%u/%u/%u\n"</literal></expr></argument>,

               <argument pos:start="417:16" pos:end="417:30"><expr pos:start="417:16" pos:end="417:30"><name pos:start="417:16" pos:end="417:30"><name pos:start="417:16" pos:end="417:17">ow</name><operator pos:start="417:18" pos:end="417:19">-&gt;</operator><name pos:start="417:20" pos:end="417:30">left_offset</name></name></expr></argument>, <argument pos:start="417:33" pos:end="417:48"><expr pos:start="417:33" pos:end="417:48"><name pos:start="417:33" pos:end="417:48"><name pos:start="417:33" pos:end="417:34">ow</name><operator pos:start="417:35" pos:end="417:36">-&gt;</operator><name pos:start="417:37" pos:end="417:48">right_offset</name></name></expr></argument>, <argument pos:start="417:51" pos:end="417:64"><expr pos:start="417:51" pos:end="417:64"><name pos:start="417:51" pos:end="417:64"><name pos:start="417:51" pos:end="417:52">ow</name><operator pos:start="417:53" pos:end="417:54">-&gt;</operator><name pos:start="417:55" pos:end="417:64">top_offset</name></name></expr></argument>, <argument pos:start="417:67" pos:end="417:83"><expr pos:start="417:67" pos:end="417:83"><name pos:start="417:67" pos:end="417:83"><name pos:start="417:67" pos:end="417:68">ow</name><operator pos:start="417:69" pos:end="417:70">-&gt;</operator><name pos:start="417:71" pos:end="417:83">bottom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="419:9" pos:end="519:47"><if pos:start="419:9" pos:end="519:47">if <condition pos:start="419:12" pos:end="419:51">(<expr pos:start="419:13" pos:end="419:50"><name pos:start="419:13" pos:end="419:34"><name pos:start="419:13" pos:end="419:17">avctx</name><operator pos:start="419:18" pos:end="419:19">-&gt;</operator><name pos:start="419:20" pos:end="419:34">err_recognition</name></name> <operator pos:start="419:36" pos:end="419:36">&amp;</operator> <name pos:start="419:38" pos:end="419:50">AV_EF_EXPLODE</name></expr>)</condition> <block pos:start="419:53" pos:end="519:47">{<block_content pos:start="424:9" pos:end="519:47">




        <expr_stmt pos:start="424:9" pos:end="426:56"><expr pos:start="424:9" pos:end="426:55"><call pos:start="424:9" pos:end="426:55"><name pos:start="424:9" pos:end="424:14">av_log</name><argument_list pos:start="424:15" pos:end="426:55">(<argument pos:start="424:16" pos:end="424:20"><expr pos:start="424:16" pos:end="424:20"><name pos:start="424:16" pos:end="424:20">avctx</name></expr></argument>, <argument pos:start="424:23" pos:end="424:36"><expr pos:start="424:23" pos:end="424:36"><name pos:start="424:23" pos:end="424:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="426:16" pos:end="426:54"><expr pos:start="426:16" pos:end="426:54"><literal type="string" pos:start="426:16" pos:end="426:54">"Displaying the whole video surface.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="428:9" pos:end="428:35"><expr pos:start="428:9" pos:end="428:34"><call pos:start="428:9" pos:end="428:34"><name pos:start="428:9" pos:end="428:14">memset</name><argument_list pos:start="428:15" pos:end="428:34">(<argument pos:start="428:16" pos:end="428:17"><expr pos:start="428:16" pos:end="428:17"><name pos:start="428:16" pos:end="428:17">ow</name></expr></argument>, <argument pos:start="428:20" pos:end="428:20"><expr pos:start="428:20" pos:end="428:20"><literal type="number" pos:start="428:20" pos:end="428:20">0</literal></expr></argument>, <argument pos:start="428:23" pos:end="428:33"><expr pos:start="428:23" pos:end="428:33"><sizeof pos:start="428:23" pos:end="428:33">sizeof<argument_list pos:start="428:29" pos:end="428:33">(<argument pos:start="428:30" pos:end="428:32"><expr pos:start="428:30" pos:end="428:32"><operator pos:start="428:30" pos:end="428:30">*</operator><name pos:start="428:31" pos:end="428:32">ow</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <comment type="line" pos:start="433:5" pos:end="433:26">// Inferred parameters</comment>

    <expr_stmt pos:start="435:5" pos:end="437:66"><expr pos:start="435:5" pos:end="437:65"><name pos:start="435:5" pos:end="435:22"><name pos:start="435:5" pos:end="435:7">sps</name><operator pos:start="435:8" pos:end="435:9">-&gt;</operator><name pos:start="435:10" pos:end="435:22">log2_ctb_size</name></name> <operator pos:start="435:24" pos:end="435:24">=</operator> <name pos:start="435:26" pos:end="435:46"><name pos:start="435:26" pos:end="435:28">sps</name><operator pos:start="435:29" pos:end="435:30">-&gt;</operator><name pos:start="435:31" pos:end="435:46">log2_min_cb_size</name></name> <operator pos:start="435:48" pos:end="435:48">+</operator>

                         <name pos:start="437:26" pos:end="437:65"><name pos:start="437:26" pos:end="437:28">sps</name><operator pos:start="437:29" pos:end="437:30">-&gt;</operator><name pos:start="437:31" pos:end="437:65">log2_diff_max_min_coding_block_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="439:54"><expr pos:start="439:5" pos:end="439:53"><name pos:start="439:5" pos:end="439:25"><name pos:start="439:5" pos:end="439:7">sps</name><operator pos:start="439:8" pos:end="439:9">-&gt;</operator><name pos:start="439:10" pos:end="439:25">log2_min_pu_size</name></name> <operator pos:start="439:27" pos:end="439:27">=</operator> <name pos:start="439:29" pos:end="439:49"><name pos:start="439:29" pos:end="439:31">sps</name><operator pos:start="439:32" pos:end="439:33">-&gt;</operator><name pos:start="439:34" pos:end="439:49">log2_min_cb_size</name></name> <operator pos:start="439:51" pos:end="439:51">-</operator> <literal type="number" pos:start="439:53" pos:end="439:53">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="443:5" pos:end="443:90"><expr pos:start="443:5" pos:end="443:89"><name pos:start="443:5" pos:end="443:18"><name pos:start="443:5" pos:end="443:7">sps</name><operator pos:start="443:8" pos:end="443:9">-&gt;</operator><name pos:start="443:10" pos:end="443:18">ctb_width</name></name>  <operator pos:start="443:21" pos:end="443:21">=</operator> <operator pos:start="443:23" pos:end="443:23">(</operator><name pos:start="443:24" pos:end="443:33"><name pos:start="443:24" pos:end="443:26">sps</name><operator pos:start="443:27" pos:end="443:28">-&gt;</operator><name pos:start="443:29" pos:end="443:33">width</name></name>  <operator pos:start="443:36" pos:end="443:36">+</operator> <operator pos:start="443:38" pos:end="443:38">(</operator><literal type="number" pos:start="443:39" pos:end="443:39">1</literal> <operator pos:start="443:41" pos:end="443:42">&lt;&lt;</operator> <name pos:start="443:44" pos:end="443:61"><name pos:start="443:44" pos:end="443:46">sps</name><operator pos:start="443:47" pos:end="443:48">-&gt;</operator><name pos:start="443:49" pos:end="443:61">log2_ctb_size</name></name><operator pos:start="443:62" pos:end="443:62">)</operator> <operator pos:start="443:64" pos:end="443:64">-</operator> <literal type="number" pos:start="443:66" pos:end="443:66">1</literal><operator pos:start="443:67" pos:end="443:67">)</operator> <operator pos:start="443:69" pos:end="443:70">&gt;&gt;</operator> <name pos:start="443:72" pos:end="443:89"><name pos:start="443:72" pos:end="443:74">sps</name><operator pos:start="443:75" pos:end="443:76">-&gt;</operator><name pos:start="443:77" pos:end="443:89">log2_ctb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:90"><expr pos:start="445:5" pos:end="445:89"><name pos:start="445:5" pos:end="445:19"><name pos:start="445:5" pos:end="445:7">sps</name><operator pos:start="445:8" pos:end="445:9">-&gt;</operator><name pos:start="445:10" pos:end="445:19">ctb_height</name></name> <operator pos:start="445:21" pos:end="445:21">=</operator> <operator pos:start="445:23" pos:end="445:23">(</operator><name pos:start="445:24" pos:end="445:34"><name pos:start="445:24" pos:end="445:26">sps</name><operator pos:start="445:27" pos:end="445:28">-&gt;</operator><name pos:start="445:29" pos:end="445:34">height</name></name> <operator pos:start="445:36" pos:end="445:36">+</operator> <operator pos:start="445:38" pos:end="445:38">(</operator><literal type="number" pos:start="445:39" pos:end="445:39">1</literal> <operator pos:start="445:41" pos:end="445:42">&lt;&lt;</operator> <name pos:start="445:44" pos:end="445:61"><name pos:start="445:44" pos:end="445:46">sps</name><operator pos:start="445:47" pos:end="445:48">-&gt;</operator><name pos:start="445:49" pos:end="445:61">log2_ctb_size</name></name><operator pos:start="445:62" pos:end="445:62">)</operator> <operator pos:start="445:64" pos:end="445:64">-</operator> <literal type="number" pos:start="445:66" pos:end="445:66">1</literal><operator pos:start="445:67" pos:end="445:67">)</operator> <operator pos:start="445:69" pos:end="445:70">&gt;&gt;</operator> <name pos:start="445:72" pos:end="445:89"><name pos:start="445:72" pos:end="445:74">sps</name><operator pos:start="445:75" pos:end="445:76">-&gt;</operator><name pos:start="445:77" pos:end="445:89">log2_ctb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:55"><expr pos:start="447:5" pos:end="447:54"><name pos:start="447:5" pos:end="447:17"><name pos:start="447:5" pos:end="447:7">sps</name><operator pos:start="447:8" pos:end="447:9">-&gt;</operator><name pos:start="447:10" pos:end="447:17">ctb_size</name></name>   <operator pos:start="447:21" pos:end="447:21">=</operator> <name pos:start="447:23" pos:end="447:36"><name pos:start="447:23" pos:end="447:25">sps</name><operator pos:start="447:26" pos:end="447:27">-&gt;</operator><name pos:start="447:28" pos:end="447:36">ctb_width</name></name> <operator pos:start="447:38" pos:end="447:38">*</operator> <name pos:start="447:40" pos:end="447:54"><name pos:start="447:40" pos:end="447:42">sps</name><operator pos:start="447:43" pos:end="447:44">-&gt;</operator><name pos:start="447:45" pos:end="447:54">ctb_height</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="451:5" pos:end="451:62"><expr pos:start="451:5" pos:end="451:61"><name pos:start="451:5" pos:end="451:21"><name pos:start="451:5" pos:end="451:7">sps</name><operator pos:start="451:8" pos:end="451:9">-&gt;</operator><name pos:start="451:10" pos:end="451:21">min_cb_width</name></name>  <operator pos:start="451:24" pos:end="451:24">=</operator> <name pos:start="451:26" pos:end="451:35"><name pos:start="451:26" pos:end="451:28">sps</name><operator pos:start="451:29" pos:end="451:30">-&gt;</operator><name pos:start="451:31" pos:end="451:35">width</name></name>  <operator pos:start="451:38" pos:end="451:39">&gt;&gt;</operator> <name pos:start="451:41" pos:end="451:61"><name pos:start="451:41" pos:end="451:43">sps</name><operator pos:start="451:44" pos:end="451:45">-&gt;</operator><name pos:start="451:46" pos:end="451:61">log2_min_cb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="453:5" pos:end="453:62"><expr pos:start="453:5" pos:end="453:61"><name pos:start="453:5" pos:end="453:22"><name pos:start="453:5" pos:end="453:7">sps</name><operator pos:start="453:8" pos:end="453:9">-&gt;</operator><name pos:start="453:10" pos:end="453:22">min_cb_height</name></name> <operator pos:start="453:24" pos:end="453:24">=</operator> <name pos:start="453:26" pos:end="453:36"><name pos:start="453:26" pos:end="453:28">sps</name><operator pos:start="453:29" pos:end="453:30">-&gt;</operator><name pos:start="453:31" pos:end="453:36">height</name></name> <operator pos:start="453:38" pos:end="453:39">&gt;&gt;</operator> <name pos:start="453:41" pos:end="453:61"><name pos:start="453:41" pos:end="453:43">sps</name><operator pos:start="453:44" pos:end="453:45">-&gt;</operator><name pos:start="453:46" pos:end="453:61">log2_min_cb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="455:5" pos:end="455:62"><expr pos:start="455:5" pos:end="455:61"><name pos:start="455:5" pos:end="455:21"><name pos:start="455:5" pos:end="455:7">sps</name><operator pos:start="455:8" pos:end="455:9">-&gt;</operator><name pos:start="455:10" pos:end="455:21">min_tb_width</name></name>  <operator pos:start="455:24" pos:end="455:24">=</operator> <name pos:start="455:26" pos:end="455:35"><name pos:start="455:26" pos:end="455:28">sps</name><operator pos:start="455:29" pos:end="455:30">-&gt;</operator><name pos:start="455:31" pos:end="455:35">width</name></name>  <operator pos:start="455:38" pos:end="455:39">&gt;&gt;</operator> <name pos:start="455:41" pos:end="455:61"><name pos:start="455:41" pos:end="455:43">sps</name><operator pos:start="455:44" pos:end="455:45">-&gt;</operator><name pos:start="455:46" pos:end="455:61">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="457:5" pos:end="457:62"><expr pos:start="457:5" pos:end="457:61"><name pos:start="457:5" pos:end="457:22"><name pos:start="457:5" pos:end="457:7">sps</name><operator pos:start="457:8" pos:end="457:9">-&gt;</operator><name pos:start="457:10" pos:end="457:22">min_tb_height</name></name> <operator pos:start="457:24" pos:end="457:24">=</operator> <name pos:start="457:26" pos:end="457:36"><name pos:start="457:26" pos:end="457:28">sps</name><operator pos:start="457:29" pos:end="457:30">-&gt;</operator><name pos:start="457:31" pos:end="457:36">height</name></name> <operator pos:start="457:38" pos:end="457:39">&gt;&gt;</operator> <name pos:start="457:41" pos:end="457:61"><name pos:start="457:41" pos:end="457:43">sps</name><operator pos:start="457:44" pos:end="457:45">-&gt;</operator><name pos:start="457:46" pos:end="457:61">log2_min_tb_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="459:5" pos:end="459:62"><expr pos:start="459:5" pos:end="459:61"><name pos:start="459:5" pos:end="459:21"><name pos:start="459:5" pos:end="459:7">sps</name><operator pos:start="459:8" pos:end="459:9">-&gt;</operator><name pos:start="459:10" pos:end="459:21">min_pu_width</name></name>  <operator pos:start="459:24" pos:end="459:24">=</operator> <name pos:start="459:26" pos:end="459:35"><name pos:start="459:26" pos:end="459:28">sps</name><operator pos:start="459:29" pos:end="459:30">-&gt;</operator><name pos:start="459:31" pos:end="459:35">width</name></name>  <operator pos:start="459:38" pos:end="459:39">&gt;&gt;</operator> <name pos:start="459:41" pos:end="459:61"><name pos:start="459:41" pos:end="459:43">sps</name><operator pos:start="459:44" pos:end="459:45">-&gt;</operator><name pos:start="459:46" pos:end="459:61">log2_min_pu_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="461:5" pos:end="461:62"><expr pos:start="461:5" pos:end="461:61"><name pos:start="461:5" pos:end="461:22"><name pos:start="461:5" pos:end="461:7">sps</name><operator pos:start="461:8" pos:end="461:9">-&gt;</operator><name pos:start="461:10" pos:end="461:22">min_pu_height</name></name> <operator pos:start="461:24" pos:end="461:24">=</operator> <name pos:start="461:26" pos:end="461:36"><name pos:start="461:26" pos:end="461:28">sps</name><operator pos:start="461:29" pos:end="461:30">-&gt;</operator><name pos:start="461:31" pos:end="461:36">height</name></name> <operator pos:start="461:38" pos:end="461:39">&gt;&gt;</operator> <name pos:start="461:41" pos:end="461:61"><name pos:start="461:41" pos:end="461:43">sps</name><operator pos:start="461:44" pos:end="461:45">-&gt;</operator><name pos:start="461:46" pos:end="461:61">log2_min_pu_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="465:5" pos:end="465:49"><expr pos:start="465:5" pos:end="465:48"><name pos:start="465:5" pos:end="465:21"><name pos:start="465:5" pos:end="465:7">sps</name><operator pos:start="465:8" pos:end="465:9">-&gt;</operator><name pos:start="465:10" pos:end="465:21">qp_bd_offset</name></name> <operator pos:start="465:23" pos:end="465:23">=</operator> <literal type="number" pos:start="465:25" pos:end="465:25">6</literal> <operator pos:start="465:27" pos:end="465:27">*</operator> <operator pos:start="465:29" pos:end="465:29">(</operator><name pos:start="465:30" pos:end="465:43"><name pos:start="465:30" pos:end="465:32">sps</name><operator pos:start="465:33" pos:end="465:34">-&gt;</operator><name pos:start="465:35" pos:end="465:43">bit_depth</name></name> <operator pos:start="465:45" pos:end="465:45">-</operator> <literal type="number" pos:start="465:47" pos:end="465:47">8</literal><operator pos:start="465:48" pos:end="465:48">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="469:5" pos:end="519:47"><if pos:start="469:5" pos:end="519:47">if <condition pos:start="469:8" pos:end="471:57">(<expr pos:start="469:9" pos:end="471:56"><name pos:start="469:9" pos:end="469:18"><name pos:start="469:9" pos:end="469:11">sps</name><operator pos:start="469:12" pos:end="469:13">-&gt;</operator><name pos:start="469:14" pos:end="469:18">width</name></name>  <operator pos:start="469:21" pos:end="469:21">&amp;</operator> <operator pos:start="469:23" pos:end="469:23">(</operator><operator pos:start="469:24" pos:end="469:24">(</operator><literal type="number" pos:start="469:25" pos:end="469:25">1</literal> <operator pos:start="469:27" pos:end="469:28">&lt;&lt;</operator> <name pos:start="469:30" pos:end="469:50"><name pos:start="469:30" pos:end="469:32">sps</name><operator pos:start="469:33" pos:end="469:34">-&gt;</operator><name pos:start="469:35" pos:end="469:50">log2_min_cb_size</name></name><operator pos:start="469:51" pos:end="469:51">)</operator> <operator pos:start="469:53" pos:end="469:53">-</operator> <literal type="number" pos:start="469:55" pos:end="469:55">1</literal><operator pos:start="469:56" pos:end="469:56">)</operator> <operator pos:start="469:58" pos:end="469:59">||</operator>

        <name pos:start="471:9" pos:end="471:19"><name pos:start="471:9" pos:end="471:11">sps</name><operator pos:start="471:12" pos:end="471:13">-&gt;</operator><name pos:start="471:14" pos:end="471:19">height</name></name> <operator pos:start="471:21" pos:end="471:21">&amp;</operator> <operator pos:start="471:23" pos:end="471:23">(</operator><operator pos:start="471:24" pos:end="471:24">(</operator><literal type="number" pos:start="471:25" pos:end="471:25">1</literal> <operator pos:start="471:27" pos:end="471:28">&lt;&lt;</operator> <name pos:start="471:30" pos:end="471:50"><name pos:start="471:30" pos:end="471:32">sps</name><operator pos:start="471:33" pos:end="471:34">-&gt;</operator><name pos:start="471:35" pos:end="471:50">log2_min_cb_size</name></name><operator pos:start="471:51" pos:end="471:51">)</operator> <operator pos:start="471:53" pos:end="471:53">-</operator> <literal type="number" pos:start="471:55" pos:end="471:55">1</literal><operator pos:start="471:56" pos:end="471:56">)</operator></expr>)</condition> <block pos:start="471:59" pos:end="519:47">{<block_content pos:start="473:9" pos:end="519:47">

        <expr_stmt pos:start="473:9" pos:end="473:73"><expr pos:start="473:9" pos:end="473:72"><call pos:start="473:9" pos:end="473:72"><name pos:start="473:9" pos:end="473:14">av_log</name><argument_list pos:start="473:15" pos:end="473:72">(<argument pos:start="473:16" pos:end="473:20"><expr pos:start="473:16" pos:end="473:20"><name pos:start="473:16" pos:end="473:20">avctx</name></expr></argument>, <argument pos:start="473:23" pos:end="473:34"><expr pos:start="473:23" pos:end="473:34"><name pos:start="473:23" pos:end="473:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="473:37" pos:end="473:71"><expr pos:start="473:37" pos:end="473:71"><literal type="string" pos:start="473:37" pos:end="473:71">"Invalid coded frame dimensions.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="479:5" pos:end="519:47"><if pos:start="479:5" pos:end="519:47">if <condition pos:start="479:8" pos:end="479:52">(<expr pos:start="479:9" pos:end="479:51"><name pos:start="479:9" pos:end="479:26"><name pos:start="479:9" pos:end="479:11">sps</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:26">log2_ctb_size</name></name> <operator pos:start="479:28" pos:end="479:28">&gt;</operator> <name pos:start="479:30" pos:end="479:51">HEVC_MAX_LOG2_CTB_SIZE</name></expr>)</condition> <block pos:start="479:54" pos:end="519:47">{<block_content pos:start="481:9" pos:end="519:47">

        <expr_stmt pos:start="481:9" pos:end="481:89"><expr pos:start="481:9" pos:end="481:88"><call pos:start="481:9" pos:end="481:88"><name pos:start="481:9" pos:end="481:14">av_log</name><argument_list pos:start="481:15" pos:end="481:88">(<argument pos:start="481:16" pos:end="481:20"><expr pos:start="481:16" pos:end="481:20"><name pos:start="481:16" pos:end="481:20">avctx</name></expr></argument>, <argument pos:start="481:23" pos:end="481:34"><expr pos:start="481:23" pos:end="481:34"><name pos:start="481:23" pos:end="481:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="481:37" pos:end="481:67"><expr pos:start="481:37" pos:end="481:67"><literal type="string" pos:start="481:37" pos:end="481:67">"CTB size out of range: 2^%d\n"</literal></expr></argument>, <argument pos:start="481:70" pos:end="481:87"><expr pos:start="481:70" pos:end="481:87"><name pos:start="481:70" pos:end="481:87"><name pos:start="481:70" pos:end="481:72">sps</name><operator pos:start="481:73" pos:end="481:74">-&gt;</operator><name pos:start="481:75" pos:end="481:87">log2_ctb_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="485:5" pos:end="519:47"><if pos:start="485:5" pos:end="519:47">if <condition pos:start="485:8" pos:end="485:94">(<expr pos:start="485:9" pos:end="485:93"><name pos:start="485:9" pos:end="485:48"><name pos:start="485:9" pos:end="485:11">sps</name><operator pos:start="485:12" pos:end="485:13">-&gt;</operator><name pos:start="485:14" pos:end="485:48">max_transform_hierarchy_depth_inter</name></name> <operator pos:start="485:50" pos:end="485:50">&gt;</operator> <name pos:start="485:52" pos:end="485:69"><name pos:start="485:52" pos:end="485:54">sps</name><operator pos:start="485:55" pos:end="485:56">-&gt;</operator><name pos:start="485:57" pos:end="485:69">log2_ctb_size</name></name> <operator pos:start="485:71" pos:end="485:71">-</operator> <name pos:start="485:73" pos:end="485:93"><name pos:start="485:73" pos:end="485:75">sps</name><operator pos:start="485:76" pos:end="485:77">-&gt;</operator><name pos:start="485:78" pos:end="485:93">log2_min_tb_size</name></name></expr>)</condition> <block pos:start="485:96" pos:end="519:47">{<block_content pos:start="487:9" pos:end="519:47">

        <expr_stmt pos:start="487:9" pos:end="489:57"><expr pos:start="487:9" pos:end="489:56"><call pos:start="487:9" pos:end="489:56"><name pos:start="487:9" pos:end="487:14">av_log</name><argument_list pos:start="487:15" pos:end="489:56">(<argument pos:start="487:16" pos:end="487:20"><expr pos:start="487:16" pos:end="487:20"><name pos:start="487:16" pos:end="487:20">avctx</name></expr></argument>, <argument pos:start="487:23" pos:end="487:34"><expr pos:start="487:23" pos:end="487:34"><name pos:start="487:23" pos:end="487:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="487:37" pos:end="487:92"><expr pos:start="487:37" pos:end="487:92"><literal type="string" pos:start="487:37" pos:end="487:92">"max_transform_hierarchy_depth_inter out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="489:16" pos:end="489:55"><expr pos:start="489:16" pos:end="489:55"><name pos:start="489:16" pos:end="489:55"><name pos:start="489:16" pos:end="489:18">sps</name><operator pos:start="489:19" pos:end="489:20">-&gt;</operator><name pos:start="489:21" pos:end="489:55">max_transform_hierarchy_depth_inter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="493:5" pos:end="519:47"><if pos:start="493:5" pos:end="519:47">if <condition pos:start="493:8" pos:end="493:94">(<expr pos:start="493:9" pos:end="493:93"><name pos:start="493:9" pos:end="493:48"><name pos:start="493:9" pos:end="493:11">sps</name><operator pos:start="493:12" pos:end="493:13">-&gt;</operator><name pos:start="493:14" pos:end="493:48">max_transform_hierarchy_depth_intra</name></name> <operator pos:start="493:50" pos:end="493:50">&gt;</operator> <name pos:start="493:52" pos:end="493:69"><name pos:start="493:52" pos:end="493:54">sps</name><operator pos:start="493:55" pos:end="493:56">-&gt;</operator><name pos:start="493:57" pos:end="493:69">log2_ctb_size</name></name> <operator pos:start="493:71" pos:end="493:71">-</operator> <name pos:start="493:73" pos:end="493:93"><name pos:start="493:73" pos:end="493:75">sps</name><operator pos:start="493:76" pos:end="493:77">-&gt;</operator><name pos:start="493:78" pos:end="493:93">log2_min_tb_size</name></name></expr>)</condition> <block pos:start="493:96" pos:end="519:47">{<block_content pos:start="495:9" pos:end="519:47">

        <expr_stmt pos:start="495:9" pos:end="497:57"><expr pos:start="495:9" pos:end="497:56"><call pos:start="495:9" pos:end="497:56"><name pos:start="495:9" pos:end="495:14">av_log</name><argument_list pos:start="495:15" pos:end="497:56">(<argument pos:start="495:16" pos:end="495:20"><expr pos:start="495:16" pos:end="495:20"><name pos:start="495:16" pos:end="495:20">avctx</name></expr></argument>, <argument pos:start="495:23" pos:end="495:34"><expr pos:start="495:23" pos:end="495:34"><name pos:start="495:23" pos:end="495:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="495:37" pos:end="495:92"><expr pos:start="495:37" pos:end="495:92"><literal type="string" pos:start="495:37" pos:end="495:92">"max_transform_hierarchy_depth_intra out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="497:16" pos:end="497:55"><expr pos:start="497:16" pos:end="497:55"><name pos:start="497:16" pos:end="497:55"><name pos:start="497:16" pos:end="497:18">sps</name><operator pos:start="497:19" pos:end="497:20">-&gt;</operator><name pos:start="497:21" pos:end="497:55">max_transform_hierarchy_depth_intra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="501:5" pos:end="519:47"><if pos:start="501:5" pos:end="519:47">if <condition pos:start="501:8" pos:end="501:64">(<expr pos:start="501:9" pos:end="501:63"><name pos:start="501:9" pos:end="501:32"><name pos:start="501:9" pos:end="501:11">sps</name><operator pos:start="501:12" pos:end="501:13">-&gt;</operator><name pos:start="501:14" pos:end="501:32">log2_max_trafo_size</name></name> <operator pos:start="501:34" pos:end="501:34">&gt;</operator> <call pos:start="501:36" pos:end="501:63"><name pos:start="501:36" pos:end="501:40">FFMIN</name><argument_list pos:start="501:41" pos:end="501:63">(<argument pos:start="501:42" pos:end="501:59"><expr pos:start="501:42" pos:end="501:59"><name pos:start="501:42" pos:end="501:59"><name pos:start="501:42" pos:end="501:44">sps</name><operator pos:start="501:45" pos:end="501:46">-&gt;</operator><name pos:start="501:47" pos:end="501:59">log2_ctb_size</name></name></expr></argument>, <argument pos:start="501:62" pos:end="501:62"><expr pos:start="501:62" pos:end="501:62"><literal type="number" pos:start="501:62" pos:end="501:62">5</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="501:66" pos:end="519:47">{<block_content pos:start="503:9" pos:end="519:47">

        <expr_stmt pos:start="503:9" pos:end="507:41"><expr pos:start="503:9" pos:end="507:40"><call pos:start="503:9" pos:end="507:40"><name pos:start="503:9" pos:end="503:14">av_log</name><argument_list pos:start="503:15" pos:end="507:40">(<argument pos:start="503:16" pos:end="503:20"><expr pos:start="503:16" pos:end="503:20"><name pos:start="503:16" pos:end="503:20">avctx</name></expr></argument>, <argument pos:start="503:23" pos:end="503:34"><expr pos:start="503:23" pos:end="503:34"><name pos:start="503:23" pos:end="503:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="505:16" pos:end="505:60"><expr pos:start="505:16" pos:end="505:60"><literal type="string" pos:start="505:16" pos:end="505:60">"max transform block size out of range: %d\n"</literal></expr></argument>,

               <argument pos:start="507:16" pos:end="507:39"><expr pos:start="507:16" pos:end="507:39"><name pos:start="507:16" pos:end="507:39"><name pos:start="507:16" pos:end="507:18">sps</name><operator pos:start="507:19" pos:end="507:20">-&gt;</operator><name pos:start="507:21" pos:end="507:39">log2_max_trafo_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <return pos:start="513:5" pos:end="513:13">return <expr pos:start="513:12" pos:end="513:12"><literal type="number" pos:start="513:12" pos:end="513:12">0</literal></expr>;</return>



<label pos:start="517:1" pos:end="517:4"><name pos:start="517:1" pos:end="517:3">err</name>:</label>

    <return pos:start="519:5" pos:end="519:47">return <expr pos:start="519:12" pos:end="519:46"><ternary pos:start="519:12" pos:end="519:46"><condition pos:start="519:12" pos:end="519:20"><expr pos:start="519:12" pos:end="519:18"><name pos:start="519:12" pos:end="519:14">ret</name> <operator pos:start="519:16" pos:end="519:16">&lt;</operator> <literal type="number" pos:start="519:18" pos:end="519:18">0</literal></expr> ?</condition><then pos:start="519:22" pos:end="519:24"> <expr pos:start="519:22" pos:end="519:24"><name pos:start="519:22" pos:end="519:24">ret</name></expr> </then><else pos:start="519:26" pos:end="519:46">: <expr pos:start="519:28" pos:end="519:46"><name pos:start="519:28" pos:end="519:46">AVERROR_INVALIDDATA</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
