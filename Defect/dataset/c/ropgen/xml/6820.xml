<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6820.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:27">dump_receive</name><parameter_list pos:start="1:28" pos:end="1:81">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:43">VLANClientState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">vc</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:67"><decl pos:start="1:50" pos:end="1:67"><type pos:start="1:50" pos:end="1:67"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">buf</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:80"><decl pos:start="1:70" pos:end="1:80"><type pos:start="1:70" pos:end="1:80"><name pos:start="1:70" pos:end="1:75">size_t</name></type> <name pos:start="1:77" pos:end="1:80">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:16">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">DumpState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:29">= <expr pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:29"><name pos:start="5:20" pos:end="5:21">vc</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:29">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">pcap_sf_pkthdr</name></name></type> <name pos:start="7:27" pos:end="7:29">hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:14">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">caplen</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:49">/* Early return in case of previous error. */</comment>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fd</name></name> <operator pos:start="17:15" pos:end="17:15">&lt;</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:74"><expr pos:start="25:5" pos:end="25:73"><name pos:start="25:5" pos:end="25:6">ts</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:73"><name pos:start="25:10" pos:end="25:17">muldiv64</name><argument_list pos:start="25:18" pos:end="25:73">(<argument pos:start="25:19" pos:end="25:42"><expr pos:start="25:19" pos:end="25:42"><call pos:start="25:19" pos:end="25:42"><name pos:start="25:19" pos:end="25:32">qemu_get_clock</name><argument_list pos:start="25:33" pos:end="25:42">(<argument pos:start="25:34" pos:end="25:41"><expr pos:start="25:34" pos:end="25:41"><name pos:start="25:34" pos:end="25:41">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><literal type="number" pos:start="25:45" pos:end="25:51">1000000</literal></expr></argument>, <argument pos:start="25:54" pos:end="25:72"><expr pos:start="25:54" pos:end="25:72"><call pos:start="25:54" pos:end="25:72"><name pos:start="25:54" pos:end="25:70">get_ticks_per_sec</name><argument_list pos:start="25:71" pos:end="25:72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:59"><expr pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:10">caplen</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <ternary pos:start="27:14" pos:end="27:58"><condition pos:start="27:14" pos:end="27:36"><expr pos:start="27:14" pos:end="27:34"><name pos:start="27:14" pos:end="27:17">size</name> <operator pos:start="27:19" pos:end="27:19">&gt;</operator> <name pos:start="27:21" pos:end="27:34"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:34">pcap_caplen</name></name></expr> ?</condition><then pos:start="27:38" pos:end="27:51"> <expr pos:start="27:38" pos:end="27:51"><name pos:start="27:38" pos:end="27:51"><name pos:start="27:38" pos:end="27:38">s</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:51">pcap_caplen</name></name></expr> </then><else pos:start="27:53" pos:end="27:58">: <expr pos:start="27:55" pos:end="27:58"><name pos:start="27:55" pos:end="27:58">size</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:7">hdr</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:10">ts</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:17">tv_sec</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:22">ts</name> <operator pos:start="31:24" pos:end="31:24">/</operator> <literal type="number" pos:start="31:26" pos:end="31:32">1000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:34"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">hdr</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:10">ts</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:18">tv_usec</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:23">ts</name> <operator pos:start="33:25" pos:end="33:25">%</operator> <literal type="number" pos:start="33:27" pos:end="33:33">1000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">hdr</name><operator pos:start="35:8" pos:end="35:8">.</operator><name pos:start="35:9" pos:end="35:14">caplen</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:23">caplen</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:7">hdr</name><operator pos:start="37:8" pos:end="37:8">.</operator><name pos:start="37:9" pos:end="37:11">len</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:18">size</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="49:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="41:44">(<expr pos:start="39:9" pos:end="41:43"><call pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:13">write</name><argument_list pos:start="39:14" pos:end="39:39">(<argument pos:start="39:15" pos:end="39:19"><expr pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">fd</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:25"><expr pos:start="39:22" pos:end="39:25"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:25">hdr</name></expr></argument>, <argument pos:start="39:28" pos:end="39:38"><expr pos:start="39:28" pos:end="39:38"><sizeof pos:start="39:28" pos:end="39:38">sizeof<argument_list pos:start="39:34" pos:end="39:38">(<argument pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:37">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="39:41" pos:end="39:42">!=</operator> <sizeof pos:start="39:44" pos:end="39:54">sizeof<argument_list pos:start="39:50" pos:end="39:54">(<argument pos:start="39:51" pos:end="39:53"><expr pos:start="39:51" pos:end="39:53"><name pos:start="39:51" pos:end="39:53">hdr</name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:56" pos:end="39:57">||</operator>

        <call pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:13">write</name><argument_list pos:start="41:14" pos:end="41:33">(<argument pos:start="41:15" pos:end="41:19"><expr pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">fd</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:24"><expr pos:start="41:22" pos:end="41:24"><name pos:start="41:22" pos:end="41:24">buf</name></expr></argument>, <argument pos:start="41:27" pos:end="41:32"><expr pos:start="41:27" pos:end="41:32"><name pos:start="41:27" pos:end="41:32">caplen</name></expr></argument>)</argument_list></call> <operator pos:start="41:35" pos:end="41:36">!=</operator> <name pos:start="41:38" pos:end="41:43">caplen</name></expr>)</condition> <block pos:start="41:46" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:19">

        <expr_stmt pos:start="43:9" pos:end="43:56"><expr pos:start="43:9" pos:end="43:55"><call pos:start="43:9" pos:end="43:55"><name pos:start="43:9" pos:end="43:16">qemu_log</name><argument_list pos:start="43:17" pos:end="43:55">(<argument pos:start="43:18" pos:end="43:54"><expr pos:start="43:18" pos:end="43:54"><literal type="string" pos:start="43:18" pos:end="43:54">"-net dump write error - stop dump\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><call pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:13">close</name><argument_list pos:start="45:14" pos:end="45:20">(<argument pos:start="45:15" pos:end="45:19"><expr pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:15">s</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:13">fd</name></name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">-</operator><literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="53:5" pos:end="53:16">return <expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
