<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7475.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">twin_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:63"><decl pos:start="1:54" pos:end="1:63"><type pos:start="1:54" pos:end="1:63"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">data</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:43">data_size</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:53">AVPacket</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:60">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">TwinContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:21">tctx</name> <init pos:start="11:23" pos:end="11:40">= <expr pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:29">avctx</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">ModeTab</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:23">mtab</name> <init pos:start="15:25" pos:end="15:36">= <expr pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:30">tctx</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:36">mtab</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">float</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:14">out</name> <init pos:start="17:16" pos:end="17:21">= <expr pos:start="17:18" pos:end="17:21"><name pos:start="17:18" pos:end="17:21">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:8">enum</name> <name pos:start="19:10" pos:end="19:18">FrameType</name></name></type> <name pos:start="19:20" pos:end="19:24">ftype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">window_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="29:6"><decl pos:start="23:5" pos:end="29:5"><type pos:start="23:5" pos:end="23:31"><specifier pos:start="23:5" pos:end="23:10">static</specifier> <specifier pos:start="23:12" pos:end="23:16">const</specifier> <name pos:start="23:18" pos:end="23:31"><name pos:start="23:18" pos:end="23:21">enum</name> <name pos:start="23:23" pos:end="23:31">FrameType</name></name></type> <name pos:start="23:33" pos:end="23:54"><name pos:start="23:33" pos:end="23:52">wtype_to_ftype_table</name><index pos:start="23:53" pos:end="23:54">[]</index></name> <init pos:start="23:56" pos:end="29:5">= <expr pos:start="23:58" pos:end="29:5"><block pos:start="23:58" pos:end="29:5">{

        <expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:15">FT_LONG</name></expr>,   <expr pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:26">FT_LONG</name></expr>, <expr pos:start="25:29" pos:end="25:36"><name pos:start="25:29" pos:end="25:36">FT_SHORT</name></expr>, <expr pos:start="25:39" pos:end="25:45"><name pos:start="25:39" pos:end="25:45">FT_LONG</name></expr>,

        <expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17">FT_MEDIUM</name></expr>, <expr pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:26">FT_LONG</name></expr>, <expr pos:start="27:29" pos:end="27:35"><name pos:start="27:29" pos:end="27:35">FT_LONG</name></expr>,  <expr pos:start="27:39" pos:end="27:47"><name pos:start="27:39" pos:end="27:47">FT_MEDIUM</name></expr>, <expr pos:start="27:50" pos:end="27:58"><name pos:start="27:50" pos:end="27:58">FT_MEDIUM</name></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:71">(<expr pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:16">buf_size</name><operator pos:start="33:17" pos:end="33:17">*</operator><literal type="number" pos:start="33:18" pos:end="33:18">8</literal> <operator pos:start="33:20" pos:end="33:20">&lt;</operator> <name pos:start="33:22" pos:end="33:36"><name pos:start="33:22" pos:end="33:26">avctx</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:36">bit_rate</name></name><operator pos:start="33:37" pos:end="33:37">*</operator><name pos:start="33:38" pos:end="33:47"><name pos:start="33:38" pos:end="33:41">mtab</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:47">size</name></name><operator pos:start="33:48" pos:end="33:48">/</operator><name pos:start="33:49" pos:end="33:66"><name pos:start="33:49" pos:end="33:53">avctx</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:66">sample_rate</name></name> <operator pos:start="33:68" pos:end="33:68">+</operator> <literal type="number" pos:start="33:70" pos:end="33:70">8</literal></expr>)</condition> <block pos:start="33:73" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:31">

        <expr_stmt pos:start="35:9" pos:end="37:74"><expr pos:start="35:9" pos:end="37:73"><call pos:start="35:9" pos:end="37:73"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="37:73">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:62"><expr pos:start="37:16" pos:end="37:62"><literal type="string" pos:start="37:16" pos:end="37:62">"Frame too small (%d bytes). Truncated file?\n"</literal></expr></argument>, <argument pos:start="37:65" pos:end="37:72"><expr pos:start="37:65" pos:end="37:72"><name pos:start="37:65" pos:end="37:72">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:42"><expr pos:start="45:5" pos:end="45:41"><call pos:start="45:5" pos:end="45:41"><name pos:start="45:5" pos:end="45:17">init_get_bits</name><argument_list pos:start="45:18" pos:end="45:41">(<argument pos:start="45:19" pos:end="45:21"><expr pos:start="45:19" pos:end="45:21"><operator pos:start="45:19" pos:end="45:19">&amp;</operator><name pos:start="45:20" pos:end="45:21">gb</name></expr></argument>, <argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">buf</name></expr></argument>, <argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><name pos:start="45:29" pos:end="45:36">buf_size</name> <operator pos:start="45:38" pos:end="45:38">*</operator> <literal type="number" pos:start="45:40" pos:end="45:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><call pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:13">skip_bits</name><argument_list pos:start="47:14" pos:end="47:36">(<argument pos:start="47:15" pos:end="47:17"><expr pos:start="47:15" pos:end="47:17"><operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:17">gb</name></expr></argument>, <argument pos:start="47:20" pos:end="47:35"><expr pos:start="47:20" pos:end="47:35"><call pos:start="47:20" pos:end="47:35"><name pos:start="47:20" pos:end="47:27">get_bits</name><argument_list pos:start="47:28" pos:end="47:35">(<argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:31">gb</name></expr></argument>, <argument pos:start="47:34" pos:end="47:34"><expr pos:start="47:34" pos:end="47:34"><literal type="number" pos:start="47:34" pos:end="47:34">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:15">window_type</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:49"><name pos:start="49:19" pos:end="49:26">get_bits</name><argument_list pos:start="49:27" pos:end="49:49">(<argument pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:30">gb</name></expr></argument>, <argument pos:start="49:33" pos:end="49:48"><expr pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:48">WINDOW_TYPE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:24">(<expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:19">window_type</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <literal type="number" pos:start="53:23" pos:end="53:23">8</literal></expr>)</condition> <block pos:start="53:26" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:77"><expr pos:start="55:9" pos:end="55:76"><call pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:76">(<argument pos:start="55:16" pos:end="55:20"><expr pos:start="55:16" pos:end="55:20"><name pos:start="55:16" pos:end="55:20">avctx</name></expr></argument>, <argument pos:start="55:23" pos:end="55:34"><expr pos:start="55:23" pos:end="55:34"><name pos:start="55:23" pos:end="55:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:37" pos:end="55:75"><expr pos:start="55:37" pos:end="55:75"><literal type="string" pos:start="55:37" pos:end="55:75">"Invalid window type, broken sample?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:9">ftype</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:45"><name pos:start="63:13" pos:end="63:32">wtype_to_ftype_table</name><index pos:start="63:33" pos:end="63:45">[<expr pos:start="63:34" pos:end="63:44"><name pos:start="63:34" pos:end="63:44">window_type</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:63"><expr pos:start="67:5" pos:end="67:62"><call pos:start="67:5" pos:end="67:62"><name pos:start="67:5" pos:end="67:28">read_and_decode_spectrum</name><argument_list pos:start="67:29" pos:end="67:62">(<argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><name pos:start="67:30" pos:end="67:33">tctx</name></expr></argument>, <argument pos:start="67:36" pos:end="67:38"><expr pos:start="67:36" pos:end="67:38"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:38">gb</name></expr></argument>, <argument pos:start="67:41" pos:end="67:54"><expr pos:start="67:41" pos:end="67:54"><name pos:start="67:41" pos:end="67:54"><name pos:start="67:41" pos:end="67:44">tctx</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:54">spectrum</name></name></expr></argument>, <argument pos:start="67:57" pos:end="67:61"><expr pos:start="67:57" pos:end="67:61"><name pos:start="67:57" pos:end="67:61">ftype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><call pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:16">imdct_output</name><argument_list pos:start="71:17" pos:end="71:47">(<argument pos:start="71:18" pos:end="71:21"><expr pos:start="71:18" pos:end="71:21"><name pos:start="71:18" pos:end="71:21">tctx</name></expr></argument>, <argument pos:start="71:24" pos:end="71:28"><expr pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:28">ftype</name></expr></argument>, <argument pos:start="71:31" pos:end="71:41"><expr pos:start="71:31" pos:end="71:41"><name pos:start="71:31" pos:end="71:41">window_type</name></expr></argument>, <argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:46">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:55"><expr pos:start="75:5" pos:end="75:54"><call pos:start="75:5" pos:end="75:54"><name pos:start="75:5" pos:end="75:10">FFSWAP</name><argument_list pos:start="75:11" pos:end="75:54">(<argument pos:start="75:12" pos:end="75:17"><expr pos:start="75:12" pos:end="75:17"><name pos:start="75:12" pos:end="75:16">float</name><operator pos:start="75:17" pos:end="75:17">*</operator></expr></argument>, <argument pos:start="75:20" pos:end="75:35"><expr pos:start="75:20" pos:end="75:35"><name pos:start="75:20" pos:end="75:35"><name pos:start="75:20" pos:end="75:23">tctx</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:35">curr_frame</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:53"><expr pos:start="75:38" pos:end="75:53"><name pos:start="75:38" pos:end="75:53"><name pos:start="75:38" pos:end="75:41">tctx</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:53">prev_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:38">(<expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:12">tctx</name><operator pos:start="79:13" pos:end="79:14">-&gt;</operator><name pos:start="79:15" pos:end="79:19">avctx</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:33">frame_number</name></name> <operator pos:start="79:35" pos:end="79:35">&lt;</operator> <literal type="number" pos:start="79:37" pos:end="79:37">2</literal></expr>)</condition> <block pos:start="79:40" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:24">

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:18">data_size</name><operator pos:start="81:19" pos:end="81:19">=</operator><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:24">return <expr pos:start="83:16" pos:end="83:23"><name pos:start="83:16" pos:end="83:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:46"><expr pos:start="89:5" pos:end="89:45"><operator pos:start="89:5" pos:end="89:5">*</operator><name pos:start="89:6" pos:end="89:14">data_size</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:27"><name pos:start="89:18" pos:end="89:21">mtab</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:27">size</name></name><operator pos:start="89:28" pos:end="89:28">*</operator><name pos:start="89:29" pos:end="89:43"><name pos:start="89:29" pos:end="89:33">avctx</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:43">channels</name></name><operator pos:start="89:44" pos:end="89:44">*</operator><literal type="number" pos:start="89:45" pos:end="89:45">4</literal></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:20">return <expr pos:start="93:12" pos:end="93:19"><name pos:start="93:12" pos:end="93:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
