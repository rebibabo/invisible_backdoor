<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24193.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">h264_find_frame_end</name><parameter_list pos:start="1:31" pos:end="3:44">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">H264ParseContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">p</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:43">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:27">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">state</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">ParseContext</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">pc</name> <init pos:start="11:22" pos:end="11:29">= <expr pos:start="11:24" pos:end="11:29"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:29"><name pos:start="11:25" pos:end="11:25">p</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">pc</name></name></expr></init></decl>;</decl_stmt>

<comment type="line" pos:start="13:1" pos:end="13:31">//    mb_addr= pc-&gt;mb_addr - 1;</comment>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:9">state</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:14">pc</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:21">state</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:13">state</name> <operator pos:start="17:15" pos:end="17:15">&gt;</operator> <literal type="number" pos:start="17:17" pos:end="17:18">13</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <expr_stmt pos:start="19:9" pos:end="19:18"><expr pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:13">state</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">7</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="23:5" pos:end="93:5">for <control pos:start="23:9" pos:end="23:34">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:29"><expr pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:28">buf_size</name></expr>;</condition> <incr pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:31">i</name><operator pos:start="23:32" pos:end="23:33">++</operator></expr></incr>)</control> <block pos:start="23:36" pos:end="93:5">{<block_content pos:start="25:9" pos:end="91:9">

        <if_stmt pos:start="25:9" pos:end="91:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:17">state</name> <operator pos:start="25:19" pos:end="25:20">==</operator> <literal type="number" pos:start="25:22" pos:end="25:22">7</literal></expr>)</condition> <block pos:start="25:25" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:26">

            <expr_stmt pos:start="27:13" pos:end="27:76"><expr pos:start="27:13" pos:end="27:75"><name pos:start="27:13" pos:end="27:13">i</name> <operator pos:start="27:15" pos:end="27:16">+=</operator> <call pos:start="27:18" pos:end="27:75"><name pos:start="27:18" pos:end="27:52"><name pos:start="27:18" pos:end="27:18">p</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:27">h264dsp</name><operator pos:start="27:28" pos:end="27:28">.</operator><name pos:start="27:29" pos:end="27:52">startcode_find_candidate</name></name><argument_list pos:start="27:53" pos:end="27:75">(<argument pos:start="27:54" pos:end="27:60"><expr pos:start="27:54" pos:end="27:60"><name pos:start="27:54" pos:end="27:56">buf</name> <operator pos:start="27:58" pos:end="27:58">+</operator> <name pos:start="27:60" pos:end="27:60">i</name></expr></argument>, <argument pos:start="27:63" pos:end="27:74"><expr pos:start="27:63" pos:end="27:74"><name pos:start="27:63" pos:end="27:70">buf_size</name> <operator pos:start="27:72" pos:end="27:72">-</operator> <name pos:start="27:74" pos:end="27:74">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="31:26"><if pos:start="29:13" pos:end="31:26">if <condition pos:start="29:16" pos:end="29:29">(<expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:28">buf_size</name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:26"><block_content pos:start="31:17" pos:end="31:26">

                <expr_stmt pos:start="31:17" pos:end="31:26"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:21">state</name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="number" pos:start="31:25" pos:end="31:25">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="47:9">else if <condition pos:start="33:19" pos:end="33:30">(<expr pos:start="33:20" pos:end="33:29"><name pos:start="33:20" pos:end="33:24">state</name> <operator pos:start="33:26" pos:end="33:27">&lt;=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">2</literal></expr>)</condition> <block pos:start="33:32" pos:end="47:9">{<block_content pos:start="35:13" pos:end="45:28">

            <if_stmt pos:start="35:13" pos:end="45:28"><if pos:start="35:13" pos:end="37:27">if <condition pos:start="35:16" pos:end="35:28">(<expr pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:19">buf</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">i</name></expr>]</index></name> <operator pos:start="35:24" pos:end="35:25">==</operator> <literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:27"><block_content pos:start="37:17" pos:end="37:27">

                <expr_stmt pos:start="37:17" pos:end="37:27"><expr pos:start="37:17" pos:end="37:26"><name pos:start="37:17" pos:end="37:21">state</name> <operator pos:start="37:23" pos:end="37:24">^=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">5</literal></expr>;</expr_stmt></block_content></block></if>            <comment type="line" pos:start="37:40" pos:end="37:58">// 2-&gt;7, 1-&gt;4, 0-&gt;5</comment>

            <if type="elseif" pos:start="39:13" pos:end="41:26">else if <condition pos:start="39:21" pos:end="39:28">(<expr pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:24">buf</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><name pos:start="39:26" pos:end="39:26">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:26"><block_content pos:start="41:17" pos:end="41:26">

                <expr_stmt pos:start="41:17" pos:end="41:26"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:21">state</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="number" pos:start="41:25" pos:end="41:25">7</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="43:13" pos:end="45:28">else<block type="pseudo" pos:start="45:17" pos:end="45:28"><block_content pos:start="45:17" pos:end="45:28">

                <expr_stmt pos:start="45:17" pos:end="45:28"><expr pos:start="45:17" pos:end="45:27"><name pos:start="45:17" pos:end="45:21">state</name> <operator pos:start="45:23" pos:end="45:25">&gt;&gt;=</operator> <literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>           <comment type="line" pos:start="45:40" pos:end="45:58">// 2-&gt;1, 1-&gt;0, 0-&gt;0</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="81:9">else if <condition pos:start="47:19" pos:end="47:30">(<expr pos:start="47:20" pos:end="47:29"><name pos:start="47:20" pos:end="47:24">state</name> <operator pos:start="47:26" pos:end="47:27">&lt;=</operator> <literal type="number" pos:start="47:29" pos:end="47:29">5</literal></expr>)</condition> <block pos:start="47:32" pos:end="81:9">{<block_content pos:start="49:13" pos:end="79:22">

            <decl_stmt pos:start="49:13" pos:end="49:42"><decl pos:start="49:13" pos:end="49:41"><type pos:start="49:13" pos:end="49:15"><name pos:start="49:13" pos:end="49:15">int</name></type> <name pos:start="49:17" pos:end="49:25">nalu_type</name> <init pos:start="49:27" pos:end="49:41">= <expr pos:start="49:29" pos:end="49:41"><name pos:start="49:29" pos:end="49:34"><name pos:start="49:29" pos:end="49:31">buf</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">i</name></expr>]</index></name> <operator pos:start="49:36" pos:end="49:36">&amp;</operator> <literal type="number" pos:start="49:38" pos:end="49:41">0x1F</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="51:13" pos:end="77:13"><if pos:start="51:13" pos:end="63:13">if <condition pos:start="51:16" pos:end="53:61">(<expr pos:start="51:17" pos:end="53:60"><name pos:start="51:17" pos:end="51:25">nalu_type</name> <operator pos:start="51:27" pos:end="51:28">==</operator> <name pos:start="51:30" pos:end="51:36">NAL_SEI</name> <operator pos:start="51:38" pos:end="51:39">||</operator> <name pos:start="51:41" pos:end="51:49">nalu_type</name> <operator pos:start="51:51" pos:end="51:52">==</operator> <name pos:start="51:54" pos:end="51:60">NAL_SPS</name> <operator pos:start="51:62" pos:end="51:63">||</operator>

                <name pos:start="53:17" pos:end="53:25">nalu_type</name> <operator pos:start="53:27" pos:end="53:28">==</operator> <name pos:start="53:30" pos:end="53:36">NAL_PPS</name> <operator pos:start="53:38" pos:end="53:39">||</operator> <name pos:start="53:41" pos:end="53:49">nalu_type</name> <operator pos:start="53:51" pos:end="53:52">==</operator> <name pos:start="53:54" pos:end="53:60">NAL_AUD</name></expr>)</condition> <block pos:start="53:63" pos:end="63:13">{<block_content pos:start="55:17" pos:end="61:17">

                <if_stmt pos:start="55:17" pos:end="61:17"><if pos:start="55:17" pos:end="61:17">if <condition pos:start="55:20" pos:end="55:42">(<expr pos:start="55:21" pos:end="55:41"><name pos:start="55:21" pos:end="55:41"><name pos:start="55:21" pos:end="55:22">pc</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:41">frame_start_found</name></name></expr>)</condition> <block pos:start="55:44" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:31">

                    <expr_stmt pos:start="57:21" pos:end="57:24"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:21">i</name><operator pos:start="57:22" pos:end="57:23">++</operator></expr>;</expr_stmt>

                    <goto pos:start="59:21" pos:end="59:31">goto <name pos:start="59:26" pos:end="59:30">found</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="63:15" pos:end="77:13">else if <condition pos:start="63:23" pos:end="65:50">(<expr pos:start="63:24" pos:end="65:49"><name pos:start="63:24" pos:end="63:32">nalu_type</name> <operator pos:start="63:34" pos:end="63:35">==</operator> <name pos:start="63:37" pos:end="63:45">NAL_SLICE</name> <operator pos:start="63:47" pos:end="63:48">||</operator> <name pos:start="63:50" pos:end="63:58">nalu_type</name> <operator pos:start="63:60" pos:end="63:61">==</operator> <name pos:start="63:63" pos:end="63:69">NAL_DPA</name> <operator pos:start="63:71" pos:end="63:72">||</operator>

                       <name pos:start="65:24" pos:end="65:32">nalu_type</name> <operator pos:start="65:34" pos:end="65:35">==</operator> <name pos:start="65:37" pos:end="65:49">NAL_IDR_SLICE</name></expr>)</condition> <block pos:start="65:52" pos:end="77:13">{<block_content pos:start="67:17" pos:end="75:46">

                <if_stmt pos:start="67:17" pos:end="75:46"><if pos:start="67:17" pos:end="73:17">if <condition pos:start="67:20" pos:end="67:42">(<expr pos:start="67:21" pos:end="67:41"><name pos:start="67:21" pos:end="67:41"><name pos:start="67:21" pos:end="67:22">pc</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:41">frame_start_found</name></name></expr>)</condition> <block pos:start="67:44" pos:end="73:17">{<block_content pos:start="69:21" pos:end="71:29">

                    <expr_stmt pos:start="69:21" pos:end="69:31"><expr pos:start="69:21" pos:end="69:30"><name pos:start="69:21" pos:end="69:25">state</name> <operator pos:start="69:27" pos:end="69:28">+=</operator> <literal type="number" pos:start="69:30" pos:end="69:30">8</literal></expr>;</expr_stmt>

                    <continue pos:start="71:21" pos:end="71:29">continue;</continue>

                </block_content>}</block></if> <else pos:start="73:19" pos:end="75:46">else<block type="pseudo" pos:start="75:21" pos:end="75:46"><block_content pos:start="75:21" pos:end="75:46">

                    <expr_stmt pos:start="75:21" pos:end="75:46"><expr pos:start="75:21" pos:end="75:45"><name pos:start="75:21" pos:end="75:41"><name pos:start="75:21" pos:end="75:22">pc</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:41">frame_start_found</name></name> <operator pos:start="75:43" pos:end="75:43">=</operator> <literal type="number" pos:start="75:45" pos:end="75:45">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:22"><expr pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:17">state</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <literal type="number" pos:start="79:21" pos:end="79:21">7</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="91:9">else <block pos:start="81:16" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:22">

            <comment type="line" pos:start="83:13" pos:end="83:76">// first_mb_in_slice is 0, probably the first nal of a new slice</comment>

            <if_stmt pos:start="85:13" pos:end="87:27"><if pos:start="85:13" pos:end="87:27">if <condition pos:start="85:16" pos:end="85:30">(<expr pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:19">buf</name><index pos:start="85:20" pos:end="85:22">[<expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">i</name></expr>]</index></name> <operator pos:start="85:24" pos:end="85:24">&amp;</operator> <literal type="number" pos:start="85:26" pos:end="85:29">0x80</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:27"><block_content pos:start="87:17" pos:end="87:27">

                <goto pos:start="87:17" pos:end="87:27">goto <name pos:start="87:22" pos:end="87:26">found</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:22"><expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:17">state</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <literal type="number" pos:start="89:21" pos:end="89:21">7</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="95:22"><expr pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:13"><name pos:start="95:5" pos:end="95:6">pc</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:13">state</name></name> <operator pos:start="95:15" pos:end="95:15">=</operator> <name pos:start="95:17" pos:end="95:21">state</name></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:25">return <expr pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:24">END_NOT_FOUND</name></expr>;</return>



<label pos:start="101:1" pos:end="101:6"><name pos:start="101:1" pos:end="101:5">found</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:13"><name pos:start="103:5" pos:end="103:6">pc</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:13">state</name></name>             <operator pos:start="103:27" pos:end="103:27">=</operator> <literal type="number" pos:start="103:29" pos:end="103:29">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:30"><expr pos:start="105:5" pos:end="105:29"><name pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:6">pc</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:25">frame_start_found</name></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <literal type="number" pos:start="105:29" pos:end="105:29">0</literal></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:27">return <expr pos:start="107:12" pos:end="107:26"><name pos:start="107:12" pos:end="107:12">i</name> <operator pos:start="107:14" pos:end="107:14">-</operator> <operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:21">state</name> <operator pos:start="107:23" pos:end="107:23">&amp;</operator> <literal type="number" pos:start="107:25" pos:end="107:25">5</literal><operator pos:start="107:26" pos:end="107:26">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
