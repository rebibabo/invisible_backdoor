<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11405.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">nut_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="187:1">{<block_content pos:start="5:5" pos:end="185:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NUTContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">nut</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">StreamContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">bc</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">size</name></decl>, <decl pos:start="11:15" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:24">frame_code</name></decl>, <decl pos:start="11:27" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:31">flags</name></decl>, <decl pos:start="11:34" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:34" pos:end="11:41">size_mul</name></decl>, <decl pos:start="11:44" pos:end="11:51"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:44" pos:end="11:51">size_lsb</name></decl>, <decl pos:start="11:54" pos:end="11:62"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:54" pos:end="11:62">stream_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">key_frame</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">frame_type</name><init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">pts</name> <init pos:start="17:17" pos:end="17:19">= <expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:17"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">int64_t</name></type> <name pos:start="19:19" pos:end="19:29">frame_start</name><init pos:start="19:30" pos:end="19:44">= <expr pos:start="19:32" pos:end="19:44"><call pos:start="19:32" pos:end="19:44"><name pos:start="19:32" pos:end="19:40">url_ftell</name><argument_list pos:start="19:41" pos:end="19:44">(<argument pos:start="19:42" pos:end="19:43"><expr pos:start="19:42" pos:end="19:43"><name pos:start="19:42" pos:end="19:43">bc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><call pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">url_feof</name><argument_list pos:start="23:17" pos:end="23:20">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">bc</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

	<return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:14">frame_code</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:29"><name pos:start="29:18" pos:end="29:25">get_byte</name><argument_list pos:start="29:26" pos:end="29:29">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="55:5"><if pos:start="31:5" pos:end="55:5">if<condition pos:start="31:7" pos:end="31:25">(<expr pos:start="31:8" pos:end="31:24"><name pos:start="31:8" pos:end="31:17">frame_code</name> <operator pos:start="31:19" pos:end="31:20">==</operator> <literal type="char" pos:start="31:22" pos:end="31:24">'N'</literal></expr>)</condition><block pos:start="31:26" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:80">

        <decl_stmt pos:start="33:9" pos:end="33:33"><decl pos:start="33:9" pos:end="33:32"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">uint64_t</name></type> <name pos:start="33:18" pos:end="33:20">tmp</name><init pos:start="33:21" pos:end="33:32">= <expr pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:32">frame_code</name></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:17"><expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">tmp</name><operator pos:start="35:12" pos:end="35:14">&lt;&lt;=</operator><literal type="number" pos:start="35:15" pos:end="35:15">8</literal></expr> ;</expr_stmt> <expr_stmt pos:start="35:19" pos:end="35:38"><expr pos:start="35:19" pos:end="35:37"><name pos:start="35:19" pos:end="35:21">tmp</name> <operator pos:start="35:23" pos:end="35:24">|=</operator> <call pos:start="35:26" pos:end="35:37"><name pos:start="35:26" pos:end="35:33">get_byte</name><argument_list pos:start="35:34" pos:end="35:37">(<argument pos:start="35:35" pos:end="35:36"><expr pos:start="35:35" pos:end="35:36"><name pos:start="35:35" pos:end="35:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="37:9" pos:end="37:17"><expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">tmp</name><operator pos:start="37:12" pos:end="37:14">&lt;&lt;=</operator><literal type="number" pos:start="37:15" pos:end="37:16">16</literal></expr>;</expr_stmt> <expr_stmt pos:start="37:19" pos:end="37:38"><expr pos:start="37:19" pos:end="37:37"><name pos:start="37:19" pos:end="37:21">tmp</name> <operator pos:start="37:23" pos:end="37:24">|=</operator> <call pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:33">get_be16</name><argument_list pos:start="37:34" pos:end="37:37">(<argument pos:start="37:35" pos:end="37:36"><expr pos:start="37:35" pos:end="37:36"><name pos:start="37:35" pos:end="37:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="39:17"><expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">tmp</name><operator pos:start="39:12" pos:end="39:14">&lt;&lt;=</operator><literal type="number" pos:start="39:15" pos:end="39:16">32</literal></expr>;</expr_stmt> <expr_stmt pos:start="39:19" pos:end="39:38"><expr pos:start="39:19" pos:end="39:37"><name pos:start="39:19" pos:end="39:21">tmp</name> <operator pos:start="39:23" pos:end="39:24">|=</operator> <call pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:33">get_be32</name><argument_list pos:start="39:34" pos:end="39:37">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="41:9" pos:end="53:80"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:38">(<expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:15">tmp</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <name pos:start="41:20" pos:end="41:37">KEYFRAME_STARTCODE</name></expr>)</condition>

	<block pos:start="43:9" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:27">

	    <expr_stmt pos:start="45:13" pos:end="45:38"><expr pos:start="45:13" pos:end="45:37"><name pos:start="45:13" pos:end="45:22">frame_code</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:37"><name pos:start="45:26" pos:end="45:33">get_byte</name><argument_list pos:start="45:34" pos:end="45:37">(<argument pos:start="45:35" pos:end="45:36"><expr pos:start="45:35" pos:end="45:36"><name pos:start="45:35" pos:end="45:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:22">frame_type</name> <operator pos:start="47:24" pos:end="47:24">=</operator> <literal type="number" pos:start="47:26" pos:end="47:26">2</literal></expr>;</expr_stmt>

	</block_content>}</block></if>

	<else pos:start="51:9" pos:end="53:80">else<block type="pseudo" pos:start="53:13" pos:end="53:80"><block_content pos:start="53:13" pos:end="53:80">

	    <expr_stmt pos:start="53:13" pos:end="53:80"><expr pos:start="53:13" pos:end="53:79"><call pos:start="53:13" pos:end="53:79"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:79">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">s</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:73"><expr pos:start="53:37" pos:end="53:73"><literal type="string" pos:start="53:37" pos:end="53:73">"error in zero bit / startcode %LX\n"</literal></expr></argument>, <argument pos:start="53:76" pos:end="53:78"><expr pos:start="53:76" pos:end="53:78"><name pos:start="53:76" pos:end="53:78">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:9">flags</name><operator pos:start="57:10" pos:end="57:10">=</operator> <name pos:start="57:12" pos:end="57:38"><name pos:start="57:12" pos:end="57:14">nut</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:26">frame_code</name><index pos:start="57:27" pos:end="57:38">[<expr pos:start="57:28" pos:end="57:37"><name pos:start="57:28" pos:end="57:37">frame_code</name></expr>]</index></name><operator pos:start="57:39" pos:end="57:39">.</operator><name pos:start="57:40" pos:end="57:44">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:51"><expr pos:start="59:5" pos:end="59:50"><name pos:start="59:5" pos:end="59:12">size_mul</name><operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:41"><name pos:start="59:15" pos:end="59:17">nut</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:29">frame_code</name><index pos:start="59:30" pos:end="59:41">[<expr pos:start="59:31" pos:end="59:40"><name pos:start="59:31" pos:end="59:40">frame_code</name></expr>]</index></name><operator pos:start="59:42" pos:end="59:42">.</operator><name pos:start="59:43" pos:end="59:50">size_mul</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:12">size_lsb</name><operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:41"><name pos:start="61:15" pos:end="61:17">nut</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">frame_code</name><index pos:start="61:30" pos:end="61:41">[<expr pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:40">frame_code</name></expr>]</index></name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:50">size_lsb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:63"><expr pos:start="63:5" pos:end="63:62"><name pos:start="63:5" pos:end="63:13">stream_id</name><operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:42"><name pos:start="63:16" pos:end="63:18">nut</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:30">frame_code</name><index pos:start="63:31" pos:end="63:42">[<expr pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:41">frame_code</name></expr>]</index></name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:58">stream_id_plus1</name> <operator pos:start="63:60" pos:end="63:60">-</operator> <literal type="number" pos:start="63:62" pos:end="63:62">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="83:5"><if pos:start="67:5" pos:end="83:5">if<condition pos:start="67:7" pos:end="67:31">(<expr pos:start="67:8" pos:end="67:30"><name pos:start="67:8" pos:end="67:12">flags</name> <operator pos:start="67:14" pos:end="67:14">&amp;</operator> <name pos:start="67:16" pos:end="67:30">FLAG_FRAME_TYPE</name></expr>)</condition><block pos:start="67:32" pos:end="83:5">{<block_content pos:start="69:9" pos:end="81:9">

        <expr_stmt pos:start="69:9" pos:end="69:17"><expr pos:start="69:9" pos:end="69:16"><call pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:13">reset</name><argument_list pos:start="69:14" pos:end="69:16">(<argument pos:start="69:15" pos:end="69:15"><expr pos:start="69:15" pos:end="69:15"><name pos:start="69:15" pos:end="69:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="81:9"><if pos:start="71:9" pos:end="75:9">if<condition pos:start="71:11" pos:end="71:25">(<expr pos:start="71:12" pos:end="71:24"><name pos:start="71:12" pos:end="71:21">frame_type</name><operator pos:start="71:22" pos:end="71:23">==</operator><literal type="number" pos:start="71:24" pos:end="71:24">2</literal></expr>)</condition><block pos:start="71:26" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:46">

            <expr_stmt pos:start="73:13" pos:end="73:46"><expr pos:start="73:13" pos:end="73:45"><call pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:28">get_packetheader</name><argument_list pos:start="73:29" pos:end="73:45">(<argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:32">nut</name></expr></argument>, <argument pos:start="73:35" pos:end="73:36"><expr pos:start="73:35" pos:end="73:36"><name pos:start="73:35" pos:end="73:36">bc</name></expr></argument>, <argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><literal type="number" pos:start="73:39" pos:end="73:40">8</literal><operator pos:start="73:40" pos:end="73:40">+</operator><literal type="number" pos:start="73:41" pos:end="73:41">1</literal></expr></argument>, <argument pos:start="73:44" pos:end="73:44"><expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="75:10" pos:end="81:9">else<block pos:start="75:14" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:26">

            <expr_stmt pos:start="77:13" pos:end="77:44"><expr pos:start="77:13" pos:end="77:43"><call pos:start="77:13" pos:end="77:43"><name pos:start="77:13" pos:end="77:28">get_packetheader</name><argument_list pos:start="77:29" pos:end="77:43">(<argument pos:start="77:30" pos:end="77:32"><expr pos:start="77:30" pos:end="77:32"><name pos:start="77:30" pos:end="77:32">nut</name></expr></argument>, <argument pos:start="77:35" pos:end="77:36"><expr pos:start="77:35" pos:end="77:36"><name pos:start="77:35" pos:end="77:36">bc</name></expr></argument>, <argument pos:start="77:39" pos:end="77:39"><expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">1</literal></expr></argument>, <argument pos:start="77:42" pos:end="77:42"><expr pos:start="77:42" pos:end="77:42"><literal type="number" pos:start="77:42" pos:end="77:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:22">frame_type</name><operator pos:start="79:23" pos:end="79:23">=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="89:29"><if pos:start="87:5" pos:end="89:29">if<condition pos:start="87:7" pos:end="87:21">(<expr pos:start="87:8" pos:end="87:20"><name pos:start="87:8" pos:end="87:16">stream_id</name><operator pos:start="87:17" pos:end="87:18">==</operator><operator pos:start="87:19" pos:end="87:19">-</operator><literal type="number" pos:start="87:20" pos:end="87:20">1</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:29"><block_content pos:start="89:9" pos:end="89:29">

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:17">stream_id</name><operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:28"><name pos:start="89:20" pos:end="89:24">get_v</name><argument_list pos:start="89:25" pos:end="89:28">(<argument pos:start="89:26" pos:end="89:27"><expr pos:start="89:26" pos:end="89:27"><name pos:start="89:26" pos:end="89:27">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:34">(<expr pos:start="91:8" pos:end="91:33"><name pos:start="91:8" pos:end="91:16">stream_id</name> <operator pos:start="91:18" pos:end="91:19">&gt;=</operator> <name pos:start="91:21" pos:end="91:33"><name pos:start="91:21" pos:end="91:21">s</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:33">nb_streams</name></name></expr>)</condition><block pos:start="91:35" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><call pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:54">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="93:30"><expr pos:start="93:19" pos:end="93:30"><name pos:start="93:19" pos:end="93:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:33" pos:end="93:53"><expr pos:start="93:33" pos:end="93:53"><literal type="string" pos:start="93:33" pos:end="93:53">"illegal stream_id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:36"><expr pos:start="99:5" pos:end="99:35"><name pos:start="99:5" pos:end="99:10">stream</name><operator pos:start="99:11" pos:end="99:11">=</operator> <operator pos:start="99:13" pos:end="99:13">&amp;</operator><name pos:start="99:14" pos:end="99:35"><name pos:start="99:14" pos:end="99:16">nut</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:24">stream</name><index pos:start="99:25" pos:end="99:35">[<expr pos:start="99:26" pos:end="99:34"><name pos:start="99:26" pos:end="99:34">stream_id</name></expr>]</index></name></expr>;</expr_stmt>

    

    <if_stmt pos:start="103:5" pos:end="117:5"><if pos:start="103:5" pos:end="113:5">if<condition pos:start="103:7" pos:end="103:35">(<expr pos:start="103:8" pos:end="103:34"><name pos:start="103:8" pos:end="103:12">flags</name> <operator pos:start="103:14" pos:end="103:14">&amp;</operator> <name pos:start="103:16" pos:end="103:34">FLAG_PRED_KEY_FRAME</name></expr>)</condition><block pos:start="103:36" pos:end="113:5">{<block_content pos:start="105:9" pos:end="111:46">

        <if_stmt pos:start="105:9" pos:end="111:46"><if pos:start="105:9" pos:end="107:47">if<condition pos:start="105:11" pos:end="105:34">(<expr pos:start="105:12" pos:end="105:33"><name pos:start="105:12" pos:end="105:16">flags</name> <operator pos:start="105:18" pos:end="105:18">&amp;</operator> <name pos:start="105:20" pos:end="105:33">FLAG_KEY_FRAME</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:47"><block_content pos:start="107:13" pos:end="107:47">

            <expr_stmt pos:start="107:13" pos:end="107:47"><expr pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:21">key_frame</name><operator pos:start="107:22" pos:end="107:22">=</operator> <operator pos:start="107:24" pos:end="107:24">!</operator><name pos:start="107:25" pos:end="107:46"><name pos:start="107:25" pos:end="107:30">stream</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:46">last_key_frame</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="109:9" pos:end="111:46">else<block type="pseudo" pos:start="111:13" pos:end="111:46"><block_content pos:start="111:13" pos:end="111:46">

            <expr_stmt pos:start="111:13" pos:end="111:46"><expr pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:21">key_frame</name><operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:45"><name pos:start="111:24" pos:end="111:29">stream</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:45">last_key_frame</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if><else pos:start="113:6" pos:end="117:5">else<block pos:start="113:10" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:46">

        <expr_stmt pos:start="115:9" pos:end="115:46"><expr pos:start="115:9" pos:end="115:45"><name pos:start="115:9" pos:end="115:17">key_frame</name><operator pos:start="115:18" pos:end="115:18">=</operator> <operator pos:start="115:20" pos:end="115:20">!</operator><operator pos:start="115:21" pos:end="115:21">!</operator><operator pos:start="115:22" pos:end="115:22">(</operator><name pos:start="115:23" pos:end="115:27">flags</name> <operator pos:start="115:29" pos:end="115:29">&amp;</operator> <name pos:start="115:31" pos:end="115:44">FLAG_KEY_FRAME</name><operator pos:start="115:45" pos:end="115:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="121:5" pos:end="141:5"><if pos:start="121:5" pos:end="137:5">if<condition pos:start="121:7" pos:end="121:24">(<expr pos:start="121:8" pos:end="121:23"><name pos:start="121:8" pos:end="121:12">flags</name> <operator pos:start="121:14" pos:end="121:14">&amp;</operator> <name pos:start="121:16" pos:end="121:23">FLAG_PTS</name></expr>)</condition><block pos:start="121:25" pos:end="137:5">{<block_content pos:start="123:9" pos:end="135:9">

        <if_stmt pos:start="123:9" pos:end="135:9"><if pos:start="123:9" pos:end="127:9">if<condition pos:start="123:11" pos:end="123:33">(<expr pos:start="123:12" pos:end="123:32"><name pos:start="123:12" pos:end="123:16">flags</name> <operator pos:start="123:18" pos:end="123:18">&amp;</operator> <name pos:start="123:20" pos:end="123:32">FLAG_FULL_PTS</name></expr>)</condition><block pos:start="123:34" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:27">

            <expr_stmt pos:start="125:13" pos:end="125:27"><expr pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:15">pts</name><operator pos:start="125:16" pos:end="125:16">=</operator> <call pos:start="125:18" pos:end="125:26"><name pos:start="125:18" pos:end="125:22">get_v</name><argument_list pos:start="125:23" pos:end="125:26">(<argument pos:start="125:24" pos:end="125:25"><expr pos:start="125:24" pos:end="125:25"><name pos:start="125:24" pos:end="125:25">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="127:10" pos:end="135:9">else<block pos:start="127:14" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:52">

            <decl_stmt pos:start="129:13" pos:end="129:62"><decl pos:start="129:13" pos:end="129:61"><type pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:19">int64_t</name></type> <name pos:start="129:21" pos:end="129:24">mask</name> <init pos:start="129:26" pos:end="129:61">= <expr pos:start="129:28" pos:end="129:61"><operator pos:start="129:28" pos:end="129:28">(</operator><literal type="number" pos:start="129:29" pos:end="129:29">1</literal><operator pos:start="129:30" pos:end="129:31">&lt;&lt;</operator><name pos:start="129:32" pos:end="129:58"><name pos:start="129:32" pos:end="129:37">stream</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:58">msb_timestamp_shift</name></name><operator pos:start="129:59" pos:end="129:59">)</operator><operator pos:start="129:60" pos:end="129:60">-</operator><literal type="number" pos:start="129:61" pos:end="129:61">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="131:13" pos:end="131:53"><decl pos:start="131:13" pos:end="131:52"><type pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:19">int64_t</name></type> <name pos:start="131:21" pos:end="131:25">delta</name><init pos:start="131:26" pos:end="131:52">= <expr pos:start="131:28" pos:end="131:52"><name pos:start="131:28" pos:end="131:43"><name pos:start="131:28" pos:end="131:33">stream</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:43">last_pts</name></name> <operator pos:start="131:45" pos:end="131:45">-</operator> <name pos:start="131:47" pos:end="131:50">mask</name><operator pos:start="131:51" pos:end="131:51">/</operator><literal type="number" pos:start="131:52" pos:end="131:52">2</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:52"><expr pos:start="133:13" pos:end="133:51"><name pos:start="133:13" pos:end="133:15">pts</name><operator pos:start="133:16" pos:end="133:16">=</operator> <operator pos:start="133:18" pos:end="133:18">(</operator><operator pos:start="133:19" pos:end="133:19">(</operator><call pos:start="133:20" pos:end="133:28"><name pos:start="133:20" pos:end="133:24">get_v</name><argument_list pos:start="133:25" pos:end="133:28">(<argument pos:start="133:26" pos:end="133:27"><expr pos:start="133:26" pos:end="133:27"><name pos:start="133:26" pos:end="133:27">bc</name></expr></argument>)</argument_list></call> <operator pos:start="133:30" pos:end="133:30">-</operator> <name pos:start="133:32" pos:end="133:36">delta</name><operator pos:start="133:37" pos:end="133:37">)</operator><operator pos:start="133:38" pos:end="133:38">&amp;</operator><name pos:start="133:39" pos:end="133:42">mask</name><operator pos:start="133:43" pos:end="133:43">)</operator> <operator pos:start="133:45" pos:end="133:45">+</operator> <name pos:start="133:47" pos:end="133:51">delta</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if><else pos:start="137:6" pos:end="141:5">else<block pos:start="137:10" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:69">

        <expr_stmt pos:start="139:9" pos:end="139:69"><expr pos:start="139:9" pos:end="139:68"><name pos:start="139:9" pos:end="139:11">pts</name><operator pos:start="139:12" pos:end="139:12">=</operator> <name pos:start="139:14" pos:end="139:29"><name pos:start="139:14" pos:end="139:19">stream</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:29">last_pts</name></name> <operator pos:start="139:31" pos:end="139:31">+</operator> <name pos:start="139:33" pos:end="139:68"><name pos:start="139:33" pos:end="139:38">stream</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:53">lru_pts_delta</name><index pos:start="139:54" pos:end="139:68">[<expr pos:start="139:55" pos:end="139:67"><operator pos:start="139:55" pos:end="139:55">(</operator><name pos:start="139:56" pos:end="139:60">flags</name><operator pos:start="139:61" pos:end="139:61">&amp;</operator><literal type="number" pos:start="139:62" pos:end="139:63">12</literal><operator pos:start="139:64" pos:end="139:64">)</operator><operator pos:start="139:65" pos:end="139:66">&gt;&gt;</operator><literal type="number" pos:start="139:67" pos:end="139:67">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

  

    <if_stmt pos:start="145:5" pos:end="159:5"><if pos:start="145:5" pos:end="149:5">if<condition pos:start="145:7" pos:end="145:28">(<expr pos:start="145:8" pos:end="145:27"><name pos:start="145:8" pos:end="145:15">size_mul</name> <operator pos:start="145:17" pos:end="145:18">&lt;=</operator> <name pos:start="145:20" pos:end="145:27">size_lsb</name></expr>)</condition><block pos:start="145:29" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:52">

        <expr_stmt pos:start="147:9" pos:end="147:52"><expr pos:start="147:9" pos:end="147:51"><name pos:start="147:9" pos:end="147:12">size</name><operator pos:start="147:13" pos:end="147:13">=</operator> <name pos:start="147:15" pos:end="147:51"><name pos:start="147:15" pos:end="147:20">stream</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:30">lru_size</name><index pos:start="147:31" pos:end="147:51">[<expr pos:start="147:32" pos:end="147:50"><name pos:start="147:32" pos:end="147:39">size_lsb</name> <operator pos:start="147:41" pos:end="147:41">-</operator> <name pos:start="147:43" pos:end="147:50">size_mul</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="149:6" pos:end="159:5">else<block pos:start="149:10" pos:end="159:5">{<block_content pos:start="151:9" pos:end="157:27">

        <if_stmt pos:start="151:9" pos:end="157:27"><if pos:start="151:9" pos:end="153:48">if<condition pos:start="151:11" pos:end="151:34">(<expr pos:start="151:12" pos:end="151:33"><name pos:start="151:12" pos:end="151:16">flags</name> <operator pos:start="151:18" pos:end="151:18">&amp;</operator> <name pos:start="151:20" pos:end="151:33">FLAG_DATA_SIZE</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:48"><block_content pos:start="153:13" pos:end="153:48">

            <expr_stmt pos:start="153:13" pos:end="153:48"><expr pos:start="153:13" pos:end="153:47"><name pos:start="153:13" pos:end="153:16">size</name><operator pos:start="153:17" pos:end="153:17">=</operator> <name pos:start="153:19" pos:end="153:26">size_mul</name><operator pos:start="153:27" pos:end="153:27">*</operator><call pos:start="153:28" pos:end="153:36"><name pos:start="153:28" pos:end="153:32">get_v</name><argument_list pos:start="153:33" pos:end="153:36">(<argument pos:start="153:34" pos:end="153:35"><expr pos:start="153:34" pos:end="153:35"><name pos:start="153:34" pos:end="153:35">bc</name></expr></argument>)</argument_list></call> <operator pos:start="153:38" pos:end="153:38">+</operator> <name pos:start="153:40" pos:end="153:47">size_lsb</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="155:9" pos:end="157:27">else<block type="pseudo" pos:start="157:13" pos:end="157:27"><block_content pos:start="157:13" pos:end="157:27">

            <expr_stmt pos:start="157:13" pos:end="157:27"><expr pos:start="157:13" pos:end="157:26"><name pos:start="157:13" pos:end="157:16">size</name><operator pos:start="157:17" pos:end="157:17">=</operator> <name pos:start="157:19" pos:end="157:26">size_lsb</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

      

<comment type="line" pos:start="163:1" pos:end="163:119">//av_log(s, AV_LOG_DEBUG, "fs:%lld fc:%d ft:%d kf:%d pts:%lld\n", frame_start, frame_code, frame_type, key_frame, pts);</comment>

    

    <expr_stmt pos:start="167:5" pos:end="167:29"><expr pos:start="167:5" pos:end="167:28"><call pos:start="167:5" pos:end="167:28"><name pos:start="167:5" pos:end="167:17">av_new_packet</name><argument_list pos:start="167:18" pos:end="167:28">(<argument pos:start="167:19" pos:end="167:21"><expr pos:start="167:19" pos:end="167:21"><name pos:start="167:19" pos:end="167:21">pkt</name></expr></argument>, <argument pos:start="167:24" pos:end="167:27"><expr pos:start="167:24" pos:end="167:27"><name pos:start="167:24" pos:end="167:27">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:36"><expr pos:start="169:5" pos:end="169:35"><call pos:start="169:5" pos:end="169:35"><name pos:start="169:5" pos:end="169:14">get_buffer</name><argument_list pos:start="169:15" pos:end="169:35">(<argument pos:start="169:16" pos:end="169:17"><expr pos:start="169:16" pos:end="169:17"><name pos:start="169:16" pos:end="169:17">bc</name></expr></argument>, <argument pos:start="169:20" pos:end="169:28"><expr pos:start="169:20" pos:end="169:28"><name pos:start="169:20" pos:end="169:28"><name pos:start="169:20" pos:end="169:22">pkt</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:28">data</name></name></expr></argument>, <argument pos:start="169:31" pos:end="169:34"><expr pos:start="169:31" pos:end="169:34"><name pos:start="169:31" pos:end="169:34">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:34"><expr pos:start="171:5" pos:end="171:33"><name pos:start="171:5" pos:end="171:21"><name pos:start="171:5" pos:end="171:7">pkt</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:21">stream_index</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:33">stream_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="175:35"><if pos:start="173:5" pos:end="175:35">if <condition pos:start="173:8" pos:end="173:18">(<expr pos:start="173:9" pos:end="173:17"><name pos:start="173:9" pos:end="173:17">key_frame</name></expr>)</condition><block type="pseudo" pos:start="175:9" pos:end="175:35"><block_content pos:start="175:9" pos:end="175:35">

	<expr_stmt pos:start="175:9" pos:end="175:35"><expr pos:start="175:9" pos:end="175:34"><name pos:start="175:9" pos:end="175:18"><name pos:start="175:9" pos:end="175:11">pkt</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:18">flags</name></name> <operator pos:start="175:20" pos:end="175:21">|=</operator> <name pos:start="175:23" pos:end="175:34">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:72"><expr pos:start="177:5" pos:end="177:71"><name pos:start="177:5" pos:end="177:12"><name pos:start="177:5" pos:end="177:7">pkt</name><operator pos:start="177:8" pos:end="177:9">-&gt;</operator><name pos:start="177:10" pos:end="177:12">pts</name></name> <operator pos:start="177:14" pos:end="177:14">=</operator> <name pos:start="177:16" pos:end="177:18">pts</name> <operator pos:start="177:20" pos:end="177:20">*</operator> <name pos:start="177:22" pos:end="177:33">AV_TIME_BASE</name> <operator pos:start="177:35" pos:end="177:35">*</operator> <name pos:start="177:37" pos:end="177:52"><name pos:start="177:37" pos:end="177:42">stream</name><operator pos:start="177:43" pos:end="177:44">-&gt;</operator><name pos:start="177:45" pos:end="177:52">rate_den</name></name> <operator pos:start="177:54" pos:end="177:54">/</operator> <name pos:start="177:56" pos:end="177:71"><name pos:start="177:56" pos:end="177:61">stream</name><operator pos:start="177:62" pos:end="177:63">-&gt;</operator><name pos:start="177:64" pos:end="177:71">rate_num</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:86"><expr pos:start="181:5" pos:end="181:85"><call pos:start="181:5" pos:end="181:85"><name pos:start="181:5" pos:end="181:10">update</name><argument_list pos:start="181:11" pos:end="181:85">(<argument pos:start="181:12" pos:end="181:14"><expr pos:start="181:12" pos:end="181:14"><name pos:start="181:12" pos:end="181:14">nut</name></expr></argument>, <argument pos:start="181:17" pos:end="181:25"><expr pos:start="181:17" pos:end="181:25"><name pos:start="181:17" pos:end="181:25">stream_id</name></expr></argument>, <argument pos:start="181:28" pos:end="181:38"><expr pos:start="181:28" pos:end="181:38"><name pos:start="181:28" pos:end="181:38">frame_start</name></expr></argument>, <argument pos:start="181:41" pos:end="181:50"><expr pos:start="181:41" pos:end="181:50"><name pos:start="181:41" pos:end="181:50">frame_type</name></expr></argument>, <argument pos:start="181:53" pos:end="181:62"><expr pos:start="181:53" pos:end="181:62"><name pos:start="181:53" pos:end="181:62">frame_code</name></expr></argument>, <argument pos:start="181:65" pos:end="181:73"><expr pos:start="181:65" pos:end="181:73"><name pos:start="181:65" pos:end="181:73">key_frame</name></expr></argument>, <argument pos:start="181:76" pos:end="181:79"><expr pos:start="181:76" pos:end="181:79"><name pos:start="181:76" pos:end="181:79">size</name></expr></argument>, <argument pos:start="181:82" pos:end="181:84"><expr pos:start="181:82" pos:end="181:84"><name pos:start="181:82" pos:end="181:84">pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="185:5" pos:end="185:13">return <expr pos:start="185:12" pos:end="185:12"><literal type="number" pos:start="185:12" pos:end="185:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
