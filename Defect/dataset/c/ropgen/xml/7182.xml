<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7182.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">do_mchk_interrupt</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:43">CPUS390XState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:30">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">S390CPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:35">s390_env_get_cpu</name><argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">mask</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:20" pos:end="7:23">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">LowCore</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:20">lowcore</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">MchkQueue</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:43">(<expr pos:start="17:9" pos:end="17:42"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:23"><name pos:start="17:11" pos:end="17:13">env</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">psw</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:23">mask</name></name> <operator pos:start="17:25" pos:end="17:25">&amp;</operator> <name pos:start="17:27" pos:end="17:41">PSW_MASK_MCHECK</name><operator pos:start="17:42" pos:end="17:42">)</operator></expr>)</condition> <block pos:start="17:45" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:61">

        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><call pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:17">cpu_abort</name><argument_list pos:start="19:18" pos:end="19:60">(<argument pos:start="19:19" pos:end="19:26"><expr pos:start="19:19" pos:end="19:26"><call pos:start="19:19" pos:end="19:26"><name pos:start="19:19" pos:end="19:21">CPU</name><argument_list pos:start="19:22" pos:end="19:26">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:29" pos:end="19:59"><expr pos:start="19:29" pos:end="19:59"><literal type="string" pos:start="19:29" pos:end="19:59">"Machine check w/o mchk mask\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:64">(<expr pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">mchk_index</name></name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <literal type="number" pos:start="25:27" pos:end="25:27">0</literal> <operator pos:start="25:29" pos:end="25:30">||</operator> <name pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:34">env</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:46">mchk_index</name></name> <operator pos:start="25:48" pos:end="25:48">&gt;</operator> <name pos:start="25:50" pos:end="25:63">MAX_MCHK_QUEUE</name></expr>)</condition> <block pos:start="25:66" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:73">

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:17">cpu_abort</name><argument_list pos:start="27:18" pos:end="27:72">(<argument pos:start="27:19" pos:end="27:26"><expr pos:start="27:19" pos:end="27:26"><call pos:start="27:19" pos:end="27:26"><name pos:start="27:19" pos:end="27:21">CPU</name><argument_list pos:start="27:22" pos:end="27:26">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:29" pos:end="27:54"><expr pos:start="27:29" pos:end="27:54"><literal type="string" pos:start="27:29" pos:end="27:54">"Mchk queue overrun: %d\n"</literal></expr></argument>, <argument pos:start="27:57" pos:end="27:71"><expr pos:start="27:57" pos:end="27:71"><name pos:start="27:57" pos:end="27:71"><name pos:start="27:57" pos:end="27:59">env</name><operator pos:start="27:60" pos:end="27:61">-&gt;</operator><name pos:start="27:62" pos:end="27:71">mchk_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:5">q</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <operator pos:start="33:9" pos:end="33:9">&amp;</operator><name pos:start="33:10" pos:end="33:41"><name pos:start="33:10" pos:end="33:12">env</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:24">mchk_queue</name><index pos:start="33:25" pos:end="33:41">[<expr pos:start="33:26" pos:end="33:40"><name pos:start="33:26" pos:end="33:40"><name pos:start="33:26" pos:end="33:28">env</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:40">mchk_index</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:9">q</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">type</name></name> <operator pos:start="37:17" pos:end="37:18">!=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr>)</condition> <block pos:start="37:23" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:72">

        <comment type="block" pos:start="39:9" pos:end="39:46">/* Don't know how to handle this... */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:72"><expr pos:start="41:9" pos:end="41:71"><call pos:start="41:9" pos:end="41:71"><name pos:start="41:9" pos:end="41:17">cpu_abort</name><argument_list pos:start="41:18" pos:end="41:71">(<argument pos:start="41:19" pos:end="41:26"><expr pos:start="41:19" pos:end="41:26"><call pos:start="41:19" pos:end="41:26"><name pos:start="41:19" pos:end="41:21">CPU</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:29" pos:end="41:61"><expr pos:start="41:29" pos:end="41:61"><literal type="string" pos:start="41:29" pos:end="41:61">"Unknown machine check type %d\n"</literal></expr></argument>, <argument pos:start="41:64" pos:end="41:70"><expr pos:start="41:64" pos:end="41:70"><name pos:start="41:64" pos:end="41:70"><name pos:start="41:64" pos:end="41:64">q</name><operator pos:start="41:65" pos:end="41:66">-&gt;</operator><name pos:start="41:67" pos:end="41:70">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:38">(<expr pos:start="45:9" pos:end="45:37"><operator pos:start="45:9" pos:end="45:9">!</operator><operator pos:start="45:10" pos:end="45:10">(</operator><name pos:start="45:11" pos:end="45:24"><name pos:start="45:11" pos:end="45:13">env</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:20">cregs</name><index pos:start="45:21" pos:end="45:24">[<expr pos:start="45:22" pos:end="45:23"><literal type="number" pos:start="45:22" pos:end="45:23">14</literal></expr>]</index></name> <operator pos:start="45:26" pos:end="45:26">&amp;</operator> <operator pos:start="45:28" pos:end="45:28">(</operator><literal type="number" pos:start="45:29" pos:end="45:29">1</literal> <operator pos:start="45:31" pos:end="45:32">&lt;&lt;</operator> <literal type="number" pos:start="45:34" pos:end="45:35">28</literal><operator pos:start="45:36" pos:end="45:36">)</operator><operator pos:start="45:37" pos:end="45:37">)</operator></expr>)</condition> <block pos:start="45:40" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:15">

        <comment type="block" pos:start="47:9" pos:end="47:41">/* CRW machine checks disabled */</comment>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:11">lowcore</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:34"><name pos:start="55:15" pos:end="55:29">cpu_map_lowcore</name><argument_list pos:start="55:30" pos:end="55:34">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="59:5" pos:end="69:5">for <control pos:start="59:9" pos:end="59:28">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:23"><expr pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <literal type="number" pos:start="59:21" pos:end="59:22">16</literal></expr>;</condition> <incr pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:25">i</name><operator pos:start="59:26" pos:end="59:27">++</operator></expr></incr>)</control> <block pos:start="59:30" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:65">

        <expr_stmt pos:start="61:9" pos:end="61:74"><expr pos:start="61:9" pos:end="61:73"><name pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:15">lowcore</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:38">floating_pt_save_area</name><index pos:start="61:39" pos:end="61:41">[<expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">i</name></expr>]</index></name> <operator pos:start="61:43" pos:end="61:43">=</operator> <call pos:start="61:45" pos:end="61:73"><name pos:start="61:45" pos:end="61:55">cpu_to_be64</name><argument_list pos:start="61:56" pos:end="61:73">(<argument pos:start="61:57" pos:end="61:72"><expr pos:start="61:57" pos:end="61:72"><name pos:start="61:57" pos:end="61:69"><name pos:start="61:57" pos:end="61:59">env</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:66">fregs</name><index pos:start="61:67" pos:end="61:69">[<expr pos:start="61:68" pos:end="61:68"><name pos:start="61:68" pos:end="61:68">i</name></expr>]</index></name><operator pos:start="61:70" pos:end="61:70">.</operator><name pos:start="61:71" pos:end="61:72">ll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:65"><expr pos:start="63:9" pos:end="63:64"><name pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:15">lowcore</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:33">gpregs_save_area</name><index pos:start="63:34" pos:end="63:36">[<expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">i</name></expr>]</index></name> <operator pos:start="63:38" pos:end="63:38">=</operator> <call pos:start="63:40" pos:end="63:64"><name pos:start="63:40" pos:end="63:50">cpu_to_be64</name><argument_list pos:start="63:51" pos:end="63:64">(<argument pos:start="63:52" pos:end="63:63"><expr pos:start="63:52" pos:end="63:63"><name pos:start="63:52" pos:end="63:63"><name pos:start="63:52" pos:end="63:54">env</name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:60">regs</name><index pos:start="63:61" pos:end="63:63">[<expr pos:start="63:62" pos:end="63:62"><name pos:start="63:62" pos:end="63:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:71"><expr pos:start="65:9" pos:end="65:70"><name pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:15">lowcore</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:38">access_regs_save_area</name><index pos:start="65:39" pos:end="65:41">[<expr pos:start="65:40" pos:end="65:40"><name pos:start="65:40" pos:end="65:40">i</name></expr>]</index></name> <operator pos:start="65:43" pos:end="65:43">=</operator> <call pos:start="65:45" pos:end="65:70"><name pos:start="65:45" pos:end="65:55">cpu_to_be32</name><argument_list pos:start="65:56" pos:end="65:70">(<argument pos:start="65:57" pos:end="65:69"><expr pos:start="65:57" pos:end="65:69"><name pos:start="65:57" pos:end="65:69"><name pos:start="65:57" pos:end="65:59">env</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:66">aregs</name><index pos:start="65:67" pos:end="65:69">[<expr pos:start="65:68" pos:end="65:68"><name pos:start="65:68" pos:end="65:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:15">lowcore</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:32">cregs_save_area</name><index pos:start="67:33" pos:end="67:35">[<expr pos:start="67:34" pos:end="67:34"><name pos:start="67:34" pos:end="67:34">i</name></expr>]</index></name> <operator pos:start="67:37" pos:end="67:37">=</operator> <call pos:start="67:39" pos:end="67:64"><name pos:start="67:39" pos:end="67:49">cpu_to_be64</name><argument_list pos:start="67:50" pos:end="67:64">(<argument pos:start="67:51" pos:end="67:63"><expr pos:start="67:51" pos:end="67:63"><name pos:start="67:51" pos:end="67:63"><name pos:start="67:51" pos:end="67:53">env</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:60">cregs</name><index pos:start="67:61" pos:end="67:63">[<expr pos:start="67:62" pos:end="67:62"><name pos:start="67:62" pos:end="67:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="71:5" pos:end="71:57"><expr pos:start="71:5" pos:end="71:56"><name pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:11">lowcore</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:32">prefixreg_save_area</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <call pos:start="71:36" pos:end="71:56"><name pos:start="71:36" pos:end="71:46">cpu_to_be32</name><argument_list pos:start="71:47" pos:end="71:56">(<argument pos:start="71:48" pos:end="71:55"><expr pos:start="71:48" pos:end="71:55"><name pos:start="71:48" pos:end="71:55"><name pos:start="71:48" pos:end="71:50">env</name><operator pos:start="71:51" pos:end="71:52">-&gt;</operator><name pos:start="71:53" pos:end="71:55">psa</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:56"><expr pos:start="73:5" pos:end="73:55"><name pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:11">lowcore</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:31">fpt_creg_save_area</name></name> <operator pos:start="73:33" pos:end="73:33">=</operator> <call pos:start="73:35" pos:end="73:55"><name pos:start="73:35" pos:end="73:45">cpu_to_be32</name><argument_list pos:start="73:46" pos:end="73:55">(<argument pos:start="73:47" pos:end="73:54"><expr pos:start="73:47" pos:end="73:54"><name pos:start="73:47" pos:end="73:54"><name pos:start="73:47" pos:end="73:49">env</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:54">fpc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:61"><expr pos:start="75:5" pos:end="75:60"><name pos:start="75:5" pos:end="75:34"><name pos:start="75:5" pos:end="75:11">lowcore</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:34">tod_progreg_save_area</name></name> <operator pos:start="75:36" pos:end="75:36">=</operator> <call pos:start="75:38" pos:end="75:60"><name pos:start="75:38" pos:end="75:48">cpu_to_be32</name><argument_list pos:start="75:49" pos:end="75:60">(<argument pos:start="75:50" pos:end="75:59"><expr pos:start="75:50" pos:end="75:59"><name pos:start="75:50" pos:end="75:59"><name pos:start="75:50" pos:end="75:52">env</name><operator pos:start="75:53" pos:end="75:54">-&gt;</operator><name pos:start="75:55" pos:end="75:59">todpr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:68"><expr pos:start="77:5" pos:end="77:67"><name pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:11">lowcore</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:32">cpu_timer_save_area</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name> <operator pos:start="77:37" pos:end="77:37">=</operator> <call pos:start="77:39" pos:end="77:67"><name pos:start="77:39" pos:end="77:49">cpu_to_be32</name><argument_list pos:start="77:50" pos:end="77:67">(<argument pos:start="77:51" pos:end="77:66"><expr pos:start="77:51" pos:end="77:66"><name pos:start="77:51" pos:end="77:60"><name pos:start="77:51" pos:end="77:53">env</name><operator pos:start="77:54" pos:end="77:55">-&gt;</operator><name pos:start="77:56" pos:end="77:60">cputm</name></name> <operator pos:start="77:62" pos:end="77:63">&gt;&gt;</operator> <literal type="number" pos:start="77:65" pos:end="77:66">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:72"><expr pos:start="79:5" pos:end="79:71"><name pos:start="79:5" pos:end="79:35"><name pos:start="79:5" pos:end="79:11">lowcore</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:32">cpu_timer_save_area</name><index pos:start="79:33" pos:end="79:35">[<expr pos:start="79:34" pos:end="79:34"><literal type="number" pos:start="79:34" pos:end="79:34">1</literal></expr>]</index></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <call pos:start="79:39" pos:end="79:71"><name pos:start="79:39" pos:end="79:49">cpu_to_be32</name><argument_list pos:start="79:50" pos:end="79:71">(<argument pos:start="79:51" pos:end="79:70"><expr pos:start="79:51" pos:end="79:70"><operator pos:start="79:51" pos:end="79:51">(</operator><name pos:start="79:52" pos:end="79:59">uint32_t</name><operator pos:start="79:60" pos:end="79:60">)</operator><name pos:start="79:61" pos:end="79:70"><name pos:start="79:61" pos:end="79:63">env</name><operator pos:start="79:64" pos:end="79:65">-&gt;</operator><name pos:start="79:66" pos:end="79:70">cputm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:67"><expr pos:start="81:5" pos:end="81:66"><name pos:start="81:5" pos:end="81:36"><name pos:start="81:5" pos:end="81:11">lowcore</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:33">clock_comp_save_area</name><index pos:start="81:34" pos:end="81:36">[<expr pos:start="81:35" pos:end="81:35"><literal type="number" pos:start="81:35" pos:end="81:35">0</literal></expr>]</index></name> <operator pos:start="81:38" pos:end="81:38">=</operator> <call pos:start="81:40" pos:end="81:66"><name pos:start="81:40" pos:end="81:50">cpu_to_be32</name><argument_list pos:start="81:51" pos:end="81:66">(<argument pos:start="81:52" pos:end="81:65"><expr pos:start="81:52" pos:end="81:65"><name pos:start="81:52" pos:end="81:59"><name pos:start="81:52" pos:end="81:54">env</name><operator pos:start="81:55" pos:end="81:56">-&gt;</operator><name pos:start="81:57" pos:end="81:59">ckc</name></name> <operator pos:start="81:61" pos:end="81:62">&gt;&gt;</operator> <literal type="number" pos:start="81:64" pos:end="81:65">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:71"><expr pos:start="83:5" pos:end="83:70"><name pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:11">lowcore</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:33">clock_comp_save_area</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">1</literal></expr>]</index></name> <operator pos:start="83:38" pos:end="83:38">=</operator> <call pos:start="83:40" pos:end="83:70"><name pos:start="83:40" pos:end="83:50">cpu_to_be32</name><argument_list pos:start="83:51" pos:end="83:70">(<argument pos:start="83:52" pos:end="83:69"><expr pos:start="83:52" pos:end="83:69"><operator pos:start="83:52" pos:end="83:52">(</operator><name pos:start="83:53" pos:end="83:60">uint32_t</name><operator pos:start="83:61" pos:end="83:61">)</operator><name pos:start="83:62" pos:end="83:69"><name pos:start="83:62" pos:end="83:64">env</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:69">ckc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:65"><expr pos:start="87:5" pos:end="87:64"><name pos:start="87:5" pos:end="87:38"><name pos:start="87:5" pos:end="87:11">lowcore</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:35">mcck_interruption_code</name><index pos:start="87:36" pos:end="87:38">[<expr pos:start="87:37" pos:end="87:37"><literal type="number" pos:start="87:37" pos:end="87:37">0</literal></expr>]</index></name> <operator pos:start="87:40" pos:end="87:40">=</operator> <call pos:start="87:42" pos:end="87:64"><name pos:start="87:42" pos:end="87:52">cpu_to_be32</name><argument_list pos:start="87:53" pos:end="87:64">(<argument pos:start="87:54" pos:end="87:63"><expr pos:start="87:54" pos:end="87:63"><literal type="number" pos:start="87:54" pos:end="87:63">0x00400f1d</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:65"><expr pos:start="89:5" pos:end="89:64"><name pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:11">lowcore</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:35">mcck_interruption_code</name><index pos:start="89:36" pos:end="89:38">[<expr pos:start="89:37" pos:end="89:37"><literal type="number" pos:start="89:37" pos:end="89:37">1</literal></expr>]</index></name> <operator pos:start="89:40" pos:end="89:40">=</operator> <call pos:start="89:42" pos:end="89:64"><name pos:start="89:42" pos:end="89:52">cpu_to_be32</name><argument_list pos:start="89:53" pos:end="89:64">(<argument pos:start="89:54" pos:end="89:63"><expr pos:start="89:54" pos:end="89:63"><literal type="number" pos:start="89:54" pos:end="89:63">0x40330000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:64"><expr pos:start="91:5" pos:end="91:63"><name pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:11">lowcore</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:25">mcck_old_psw</name><operator pos:start="91:26" pos:end="91:26">.</operator><name pos:start="91:27" pos:end="91:30">mask</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <call pos:start="91:34" pos:end="91:63"><name pos:start="91:34" pos:end="91:44">cpu_to_be64</name><argument_list pos:start="91:45" pos:end="91:63">(<argument pos:start="91:46" pos:end="91:62"><expr pos:start="91:46" pos:end="91:62"><call pos:start="91:46" pos:end="91:62"><name pos:start="91:46" pos:end="91:57">get_psw_mask</name><argument_list pos:start="91:58" pos:end="91:62">(<argument pos:start="91:59" pos:end="91:61"><expr pos:start="91:59" pos:end="91:61"><name pos:start="91:59" pos:end="91:61">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:60"><expr pos:start="93:5" pos:end="93:59"><name pos:start="93:5" pos:end="93:30"><name pos:start="93:5" pos:end="93:11">lowcore</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:25">mcck_old_psw</name><operator pos:start="93:26" pos:end="93:26">.</operator><name pos:start="93:27" pos:end="93:30">addr</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <call pos:start="93:34" pos:end="93:59"><name pos:start="93:34" pos:end="93:44">cpu_to_be64</name><argument_list pos:start="93:45" pos:end="93:59">(<argument pos:start="93:46" pos:end="93:58"><expr pos:start="93:46" pos:end="93:58"><name pos:start="93:46" pos:end="93:58"><name pos:start="93:46" pos:end="93:48">env</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:53">psw</name><operator pos:start="93:54" pos:end="93:54">.</operator><name pos:start="93:55" pos:end="93:58">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:51"><expr pos:start="95:5" pos:end="95:50"><name pos:start="95:5" pos:end="95:8">mask</name> <operator pos:start="95:10" pos:end="95:10">=</operator> <call pos:start="95:12" pos:end="95:50"><name pos:start="95:12" pos:end="95:22">be64_to_cpu</name><argument_list pos:start="95:23" pos:end="95:50">(<argument pos:start="95:24" pos:end="95:49"><expr pos:start="95:24" pos:end="95:49"><name pos:start="95:24" pos:end="95:49"><name pos:start="95:24" pos:end="95:30">lowcore</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:44">mcck_new_psw</name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:49">mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:51"><expr pos:start="97:5" pos:end="97:50"><name pos:start="97:5" pos:end="97:8">addr</name> <operator pos:start="97:10" pos:end="97:10">=</operator> <call pos:start="97:12" pos:end="97:50"><name pos:start="97:12" pos:end="97:22">be64_to_cpu</name><argument_list pos:start="97:23" pos:end="97:50">(<argument pos:start="97:24" pos:end="97:49"><expr pos:start="97:24" pos:end="97:49"><name pos:start="97:24" pos:end="97:49"><name pos:start="97:24" pos:end="97:30">lowcore</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:44">mcck_new_psw</name><operator pos:start="97:45" pos:end="97:45">.</operator><name pos:start="97:46" pos:end="97:49">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:31"><expr pos:start="101:5" pos:end="101:30"><call pos:start="101:5" pos:end="101:30"><name pos:start="101:5" pos:end="101:21">cpu_unmap_lowcore</name><argument_list pos:start="101:22" pos:end="101:30">(<argument pos:start="101:23" pos:end="101:29"><expr pos:start="101:23" pos:end="101:29"><name pos:start="101:23" pos:end="101:29">lowcore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:22"><expr pos:start="105:5" pos:end="105:21"><name pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:7">env</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:19">mchk_index</name></name><operator pos:start="105:20" pos:end="105:21">--</operator></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="111:5"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:30">(<expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:11">env</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:23">mchk_index</name></name> <operator pos:start="107:25" pos:end="107:26">==</operator> <operator pos:start="107:28" pos:end="107:28">-</operator><literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr>)</condition> <block pos:start="107:32" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:44">

        <expr_stmt pos:start="109:9" pos:end="109:44"><expr pos:start="109:9" pos:end="109:43"><name pos:start="109:9" pos:end="109:24"><name pos:start="109:9" pos:end="109:11">env</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:24">pending_int</name></name> <operator pos:start="109:26" pos:end="109:27">&amp;=</operator> <operator pos:start="109:29" pos:end="109:29">~</operator><name pos:start="109:30" pos:end="109:43">INTERRUPT_MCHK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="117:42"><expr pos:start="115:5" pos:end="117:41"><call pos:start="115:5" pos:end="117:41"><name pos:start="115:5" pos:end="115:11">DPRINTF</name><argument_list pos:start="115:12" pos:end="117:41">(<argument pos:start="115:13" pos:end="115:43"><expr pos:start="115:13" pos:end="115:43"><literal type="string" pos:start="115:13" pos:end="115:19">"%s: %"</literal> <name pos:start="115:21" pos:end="115:26">PRIx64</name> <literal type="string" pos:start="115:28" pos:end="115:31">" %"</literal> <name pos:start="115:33" pos:end="115:38">PRIx64</name> <literal type="string" pos:start="115:40" pos:end="115:43">"\n"</literal></expr></argument>, <argument pos:start="115:46" pos:end="115:53"><expr pos:start="115:46" pos:end="115:53"><name pos:start="115:46" pos:end="115:53">__func__</name></expr></argument>,

            <argument pos:start="117:13" pos:end="117:25"><expr pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:15">env</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:20">psw</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:25">mask</name></name></expr></argument>, <argument pos:start="117:28" pos:end="117:40"><expr pos:start="117:28" pos:end="117:40"><name pos:start="117:28" pos:end="117:40"><name pos:start="117:28" pos:end="117:30">env</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:35">psw</name><operator pos:start="117:36" pos:end="117:36">.</operator><name pos:start="117:37" pos:end="117:40">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><call pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:12">load_psw</name><argument_list pos:start="121:13" pos:end="121:29">(<argument pos:start="121:14" pos:end="121:16"><expr pos:start="121:14" pos:end="121:16"><name pos:start="121:14" pos:end="121:16">env</name></expr></argument>, <argument pos:start="121:19" pos:end="121:22"><expr pos:start="121:19" pos:end="121:22"><name pos:start="121:19" pos:end="121:22">mask</name></expr></argument>, <argument pos:start="121:25" pos:end="121:28"><expr pos:start="121:25" pos:end="121:28"><name pos:start="121:25" pos:end="121:28">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
