<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25298.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ff_qsv_enc_close</name><parameter_list pos:start="1:21" pos:end="1:61">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:42"><name pos:start="1:22" pos:end="1:35">AVCodecContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">avctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><name pos:start="1:45" pos:end="1:57">QSVEncContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QSVFrame</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cur</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><call pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:24">MFXVideoENCODE_Close</name><argument_list pos:start="9:25" pos:end="9:36">(<argument pos:start="9:26" pos:end="9:35"><expr pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:26">q</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:35">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:38"><if pos:start="11:5" pos:end="13:38">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:9">q</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:27">internal_session</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:38"><block_content pos:start="13:9" pos:end="13:38">

        <expr_stmt pos:start="13:9" pos:end="13:38"><expr pos:start="13:9" pos:end="13:37"><call pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:16">MFXClose</name><argument_list pos:start="13:17" pos:end="13:37">(<argument pos:start="13:18" pos:end="13:36"><expr pos:start="13:18" pos:end="13:36"><name pos:start="13:18" pos:end="13:36"><name pos:start="13:18" pos:end="13:18">q</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:36">internal_session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:5">q</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:14">session</name></name>          <operator pos:start="15:25" pos:end="15:25">=</operator> <name pos:start="15:27" pos:end="15:30">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:5">q</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:23">internal_session</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <name pos:start="17:27" pos:end="17:30">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:7">cur</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:24"><name pos:start="21:11" pos:end="21:11">q</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:24">work_frames</name></name></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="33:5">while <condition pos:start="23:11" pos:end="23:15">(<expr pos:start="23:12" pos:end="23:14"><name pos:start="23:12" pos:end="23:14">cur</name></expr>)</condition> <block pos:start="23:17" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:29">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:9">q</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">work_frames</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:34"><name pos:start="25:26" pos:end="25:28">cur</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">next</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:35"><expr pos:start="27:9" pos:end="27:34"><call pos:start="27:9" pos:end="27:34"><name pos:start="27:9" pos:end="27:21">av_frame_free</name><argument_list pos:start="27:22" pos:end="27:34">(<argument pos:start="27:23" pos:end="27:33"><expr pos:start="27:23" pos:end="27:33"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:33"><name pos:start="27:24" pos:end="27:26">cur</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:33">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:16">av_freep</name><argument_list pos:start="29:17" pos:end="29:22">(<argument pos:start="29:18" pos:end="29:21"><expr pos:start="29:18" pos:end="29:21"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:21">cur</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:11">cur</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:28"><name pos:start="31:15" pos:end="31:15">q</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:28">work_frames</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <while pos:start="37:5" pos:end="59:5">while <condition pos:start="37:11" pos:end="37:56">(<expr pos:start="37:12" pos:end="37:55"><name pos:start="37:12" pos:end="37:24"><name pos:start="37:12" pos:end="37:12">q</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:24">async_fifo</name></name> <operator pos:start="37:26" pos:end="37:27">&amp;&amp;</operator> <call pos:start="37:29" pos:end="37:55"><name pos:start="37:29" pos:end="37:40">av_fifo_size</name><argument_list pos:start="37:41" pos:end="37:55">(<argument pos:start="37:42" pos:end="37:54"><expr pos:start="37:42" pos:end="37:54"><name pos:start="37:42" pos:end="37:54"><name pos:start="37:42" pos:end="37:42">q</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:54">async_fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:58" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:30">

        <decl_stmt pos:start="39:9" pos:end="39:21"><decl pos:start="39:9" pos:end="39:20"><type pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:16">AVPacket</name></type> <name pos:start="39:18" pos:end="39:20">pkt</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:26"><decl pos:start="41:9" pos:end="41:25"><type pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:20">mfxSyncPoint</name></type> <name pos:start="41:22" pos:end="41:25">sync</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:25"><decl pos:start="43:9" pos:end="43:24"><type pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:20">mfxBitstream</name> <modifier pos:start="43:22" pos:end="43:22">*</modifier></type><name pos:start="43:23" pos:end="43:24">bs</name></decl>;</decl_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:71"><expr pos:start="47:9" pos:end="47:70"><call pos:start="47:9" pos:end="47:70"><name pos:start="47:9" pos:end="47:28">av_fifo_generic_read</name><argument_list pos:start="47:29" pos:end="47:70">(<argument pos:start="47:30" pos:end="47:42"><expr pos:start="47:30" pos:end="47:42"><name pos:start="47:30" pos:end="47:42"><name pos:start="47:30" pos:end="47:30">q</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:42">async_fifo</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:48"><expr pos:start="47:45" pos:end="47:48"><operator pos:start="47:45" pos:end="47:45">&amp;</operator><name pos:start="47:46" pos:end="47:48">pkt</name></expr></argument>,  <argument pos:start="47:52" pos:end="47:62"><expr pos:start="47:52" pos:end="47:62"><sizeof pos:start="47:52" pos:end="47:62">sizeof<argument_list pos:start="47:58" pos:end="47:62">(<argument pos:start="47:59" pos:end="47:61"><expr pos:start="47:59" pos:end="47:61"><name pos:start="47:59" pos:end="47:61">pkt</name></expr></argument>)</argument_list></sizeof></expr></argument>,  <argument pos:start="47:66" pos:end="47:69"><expr pos:start="47:66" pos:end="47:69"><name pos:start="47:66" pos:end="47:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:71"><expr pos:start="49:9" pos:end="49:70"><call pos:start="49:9" pos:end="49:70"><name pos:start="49:9" pos:end="49:28">av_fifo_generic_read</name><argument_list pos:start="49:29" pos:end="49:70">(<argument pos:start="49:30" pos:end="49:42"><expr pos:start="49:30" pos:end="49:42"><name pos:start="49:30" pos:end="49:42"><name pos:start="49:30" pos:end="49:30">q</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:42">async_fifo</name></name></expr></argument>, <argument pos:start="49:45" pos:end="49:49"><expr pos:start="49:45" pos:end="49:49"><operator pos:start="49:45" pos:end="49:45">&amp;</operator><name pos:start="49:46" pos:end="49:49">sync</name></expr></argument>, <argument pos:start="49:52" pos:end="49:63"><expr pos:start="49:52" pos:end="49:63"><sizeof pos:start="49:52" pos:end="49:63">sizeof<argument_list pos:start="49:58" pos:end="49:63">(<argument pos:start="49:59" pos:end="49:62"><expr pos:start="49:59" pos:end="49:62"><name pos:start="49:59" pos:end="49:62">sync</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:66" pos:end="49:69"><expr pos:start="49:66" pos:end="49:69"><name pos:start="49:66" pos:end="49:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:71"><expr pos:start="51:9" pos:end="51:70"><call pos:start="51:9" pos:end="51:70"><name pos:start="51:9" pos:end="51:28">av_fifo_generic_read</name><argument_list pos:start="51:29" pos:end="51:70">(<argument pos:start="51:30" pos:end="51:42"><expr pos:start="51:30" pos:end="51:42"><name pos:start="51:30" pos:end="51:42"><name pos:start="51:30" pos:end="51:30">q</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:42">async_fifo</name></name></expr></argument>, <argument pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><operator pos:start="51:45" pos:end="51:45">&amp;</operator><name pos:start="51:46" pos:end="51:47">bs</name></expr></argument>,   <argument pos:start="51:52" pos:end="51:61"><expr pos:start="51:52" pos:end="51:61"><sizeof pos:start="51:52" pos:end="51:61">sizeof<argument_list pos:start="51:58" pos:end="51:61">(<argument pos:start="51:59" pos:end="51:60"><expr pos:start="51:59" pos:end="51:60"><name pos:start="51:59" pos:end="51:60">bs</name></expr></argument>)</argument_list></sizeof></expr></argument>,   <argument pos:start="51:66" pos:end="51:69"><expr pos:start="51:66" pos:end="51:69"><name pos:start="51:66" pos:end="51:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:16">av_freep</name><argument_list pos:start="55:17" pos:end="55:21">(<argument pos:start="55:18" pos:end="55:20"><expr pos:start="55:18" pos:end="55:20"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:20">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:23">av_packet_unref</name><argument_list pos:start="57:24" pos:end="57:29">(<argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:28">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="61:5" pos:end="61:32"><expr pos:start="61:5" pos:end="61:31"><call pos:start="61:5" pos:end="61:31"><name pos:start="61:5" pos:end="61:16">av_fifo_free</name><argument_list pos:start="61:17" pos:end="61:31">(<argument pos:start="61:18" pos:end="61:30"><expr pos:start="61:18" pos:end="61:30"><name pos:start="61:18" pos:end="61:30"><name pos:start="61:18" pos:end="61:18">q</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:30">async_fifo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:25"><expr pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:5">q</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:17">async_fifo</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:24">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><call pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:17">av_frame_free</name><argument_list pos:start="67:18" pos:end="67:38">(<argument pos:start="67:19" pos:end="67:37"><expr pos:start="67:19" pos:end="67:37"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:37"><name pos:start="67:20" pos:end="67:24">avctx</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:37">coded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
