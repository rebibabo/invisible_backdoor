<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17318.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ppc_hash32_translate</name><parameter_list pos:start="1:32" pos:end="3:60">(<parameter pos:start="1:33" pos:end="1:48"><decl pos:start="1:33" pos:end="1:48"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:43">CPUPPCState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">env</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:76"><decl pos:start="1:51" pos:end="1:76"><type pos:start="1:51" pos:end="1:76"><name pos:start="1:51" pos:end="1:71"><name pos:start="1:51" pos:end="1:56">struct</name> <name pos:start="1:58" pos:end="1:71">mmu_ctx_hash32</name></name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">ctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:44">target_ulong</name></type> <name pos:start="3:46" pos:end="3:50">eaddr</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:59"><decl pos:start="3:53" pos:end="3:59"><type pos:start="3:53" pos:end="3:59"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:59">rwx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:19">sr</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:38">/* 1. Handle real mode accesses */</comment>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:71">(<expr pos:start="15:9" pos:end="15:70"><operator pos:start="15:9" pos:end="15:9">(</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:13">rwx</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <literal type="number" pos:start="15:18" pos:end="15:18">2</literal><operator pos:start="15:19" pos:end="15:19">)</operator> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:30">msr_ir</name> <operator pos:start="15:32" pos:end="15:33">==</operator> <literal type="number" pos:start="15:35" pos:end="15:35">0</literal><operator pos:start="15:36" pos:end="15:36">)</operator><operator pos:start="15:37" pos:end="15:37">)</operator> <operator pos:start="15:39" pos:end="15:40">||</operator> <operator pos:start="15:42" pos:end="15:42">(</operator><operator pos:start="15:43" pos:end="15:43">(</operator><name pos:start="15:44" pos:end="15:46">rwx</name> <operator pos:start="15:48" pos:end="15:49">!=</operator> <literal type="number" pos:start="15:51" pos:end="15:51">2</literal><operator pos:start="15:52" pos:end="15:52">)</operator> <operator pos:start="15:54" pos:end="15:55">&amp;&amp;</operator> <operator pos:start="15:57" pos:end="15:57">(</operator><name pos:start="15:58" pos:end="15:63">msr_dr</name> <operator pos:start="15:65" pos:end="15:66">==</operator> <literal type="number" pos:start="15:68" pos:end="15:68">0</literal><operator pos:start="15:69" pos:end="15:69">)</operator><operator pos:start="15:70" pos:end="15:70">)</operator></expr>)</condition> <block pos:start="15:73" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:17">

        <comment type="block" pos:start="17:9" pos:end="17:32">/* Translation is off */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:11">ctx</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:18">raddr</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <name pos:start="19:22" pos:end="19:26">eaddr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:55"><expr pos:start="21:9" pos:end="21:54"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">prot</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:29">PAGE_READ</name> <operator pos:start="21:31" pos:end="21:31">|</operator> <name pos:start="21:33" pos:end="21:41">PAGE_EXEC</name> <operator pos:start="21:43" pos:end="21:43">|</operator> <name pos:start="21:45" pos:end="21:54">PAGE_WRITE</name></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:59">/* 2. Check Block Address Translation entries (BATs) */</comment>

    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:26">(<expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:20">nb_BATs</name></name> <operator pos:start="31:22" pos:end="31:23">!=</operator> <literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>)</condition> <block pos:start="31:28" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:9">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:54"><name pos:start="33:15" pos:end="33:32">ppc_hash32_get_bat</name><argument_list pos:start="33:33" pos:end="33:54">(<argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">env</name></expr></argument>, <argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:41">ctx</name></expr></argument>, <argument pos:start="33:44" pos:end="33:48"><expr pos:start="33:44" pos:end="33:48"><name pos:start="33:44" pos:end="33:48">eaddr</name></expr></argument>, <argument pos:start="33:51" pos:end="33:53"><expr pos:start="33:51" pos:end="33:53"><name pos:start="33:51" pos:end="33:53">rwx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr>)</condition> <block pos:start="35:23" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:21">

            <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:41">/* 3. Look up the Segment Register */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:30"><expr pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:6">sr</name> <operator pos:start="47:8" pos:end="47:8">=</operator> <name pos:start="47:10" pos:end="47:29"><name pos:start="47:10" pos:end="47:12">env</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:16">sr</name><index pos:start="47:17" pos:end="47:29">[<expr pos:start="47:18" pos:end="47:28"><name pos:start="47:18" pos:end="47:22">eaddr</name> <operator pos:start="47:24" pos:end="47:25">&gt;&gt;</operator> <literal type="number" pos:start="47:27" pos:end="47:28">28</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:41">/* 4. Handle direct store segments */</comment>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:10">sr</name> <operator pos:start="53:12" pos:end="53:12">&amp;</operator> <name pos:start="53:14" pos:end="53:19">SR32_T</name></expr>)</condition> <block pos:start="53:22" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:64">

        <return pos:start="55:9" pos:end="57:64">return <expr pos:start="55:16" pos:end="57:63"><call pos:start="55:16" pos:end="57:63"><name pos:start="55:16" pos:end="55:38">ppc_hash32_direct_store</name><argument_list pos:start="55:39" pos:end="57:63">(<argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><name pos:start="55:40" pos:end="55:42">env</name></expr></argument>, <argument pos:start="55:45" pos:end="55:46"><expr pos:start="55:45" pos:end="55:46"><name pos:start="55:45" pos:end="55:46">sr</name></expr></argument>, <argument pos:start="55:49" pos:end="55:53"><expr pos:start="55:49" pos:end="55:53"><name pos:start="55:49" pos:end="55:53">eaddr</name></expr></argument>, <argument pos:start="55:56" pos:end="55:58"><expr pos:start="55:56" pos:end="55:58"><name pos:start="55:56" pos:end="55:58">rwx</name></expr></argument>,

                                       <argument pos:start="57:40" pos:end="57:50"><expr pos:start="57:40" pos:end="57:50"><operator pos:start="57:40" pos:end="57:40">&amp;</operator><name pos:start="57:41" pos:end="57:50"><name pos:start="57:41" pos:end="57:43">ctx</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:50">raddr</name></name></expr></argument>, <argument pos:start="57:53" pos:end="57:62"><expr pos:start="57:53" pos:end="57:62"><operator pos:start="57:53" pos:end="57:53">&amp;</operator><name pos:start="57:54" pos:end="57:62"><name pos:start="57:54" pos:end="57:56">ctx</name><operator pos:start="57:57" pos:end="57:58">-&gt;</operator><name pos:start="57:59" pos:end="57:62">prot</name></name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:57">/* 5. Check for segment level no-execute violation */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:31"><expr pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:11"><name pos:start="65:5" pos:end="65:7">ctx</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:11">nx</name></name> <operator pos:start="65:13" pos:end="65:13">=</operator> <operator pos:start="65:15" pos:end="65:15">!</operator><operator pos:start="65:16" pos:end="65:16">!</operator><operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:19">sr</name> <operator pos:start="65:21" pos:end="65:21">&amp;</operator> <name pos:start="65:23" pos:end="65:29">SR32_NX</name><operator pos:start="65:30" pos:end="65:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:30">(<expr pos:start="67:9" pos:end="67:29"><operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:12">rwx</name> <operator pos:start="67:14" pos:end="67:15">==</operator> <literal type="number" pos:start="67:17" pos:end="67:17">2</literal><operator pos:start="67:18" pos:end="67:18">)</operator> <operator pos:start="67:20" pos:end="67:21">&amp;&amp;</operator> <name pos:start="67:23" pos:end="67:29"><name pos:start="67:23" pos:end="67:25">ctx</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:29">nx</name></name></expr>)</condition> <block pos:start="67:32" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:18">

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">3</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:47"><expr pos:start="73:5" pos:end="73:46"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:46"><name pos:start="73:11" pos:end="73:20">find_pte32</name><argument_list pos:start="73:21" pos:end="73:46">(<argument pos:start="73:22" pos:end="73:24"><expr pos:start="73:22" pos:end="73:24"><name pos:start="73:22" pos:end="73:24">env</name></expr></argument>, <argument pos:start="73:27" pos:end="73:29"><expr pos:start="73:27" pos:end="73:29"><name pos:start="73:27" pos:end="73:29">ctx</name></expr></argument>, <argument pos:start="73:32" pos:end="73:33"><expr pos:start="73:32" pos:end="73:33"><name pos:start="73:32" pos:end="73:33">sr</name></expr></argument>, <argument pos:start="73:36" pos:end="73:40"><expr pos:start="73:36" pos:end="73:40"><name pos:start="73:36" pos:end="73:40">eaddr</name></expr></argument>, <argument pos:start="73:43" pos:end="73:45"><expr pos:start="73:43" pos:end="73:45"><name pos:start="73:43" pos:end="73:45">rwx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="77:5" pos:end="77:15">return <expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
