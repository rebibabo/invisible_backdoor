<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18023.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">configure_filters</name><parameter_list pos:start="1:29" pos:end="1:69">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:42">AVInputStream</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ist</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:68"><name pos:start="1:50" pos:end="1:63">AVOutputStream</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">ost</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:32">curr_filter</name></decl>;</decl_stmt>

    <comment type="block" format="doxygen" pos:start="7:5" pos:end="7:71">/** filter graph containing all filters including input &amp; output */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name> <init pos:start="9:27" pos:end="9:42">= <expr pos:start="9:29" pos:end="9:42"><name pos:start="9:29" pos:end="9:42"><name pos:start="9:29" pos:end="9:31">ost</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:35">st</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:42">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:26">icodec</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">ist</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:36">st</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:43">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:13">args</name><index pos:start="13:14" pos:end="13:18">[<expr pos:start="13:15" pos:end="13:17"><literal type="number" pos:start="13:15" pos:end="13:17">255</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:18">filt_graph_all</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:54"><name pos:start="17:22" pos:end="17:31">av_mallocz</name><argument_list pos:start="17:32" pos:end="17:54">(<argument pos:start="17:33" pos:end="17:53"><expr pos:start="17:33" pos:end="17:53"><sizeof pos:start="17:33" pos:end="17:53">sizeof<argument_list pos:start="17:39" pos:end="17:53">(<argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><name pos:start="17:40" pos:end="17:52">AVFilterGraph</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if<condition pos:start="21:7" pos:end="21:89">(<expr pos:start="21:8" pos:end="21:88"><operator pos:start="21:8" pos:end="21:8">!</operator><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:12">ist</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:32">input_video_filter</name></name> <operator pos:start="21:34" pos:end="21:34">=</operator> <call pos:start="21:36" pos:end="21:87"><name pos:start="21:36" pos:end="21:48">avfilter_open</name><argument_list pos:start="21:49" pos:end="21:87">(<argument pos:start="21:50" pos:end="21:79"><expr pos:start="21:50" pos:end="21:79"><call pos:start="21:50" pos:end="21:79"><name pos:start="21:50" pos:end="21:69">avfilter_get_by_name</name><argument_list pos:start="21:70" pos:end="21:79">(<argument pos:start="21:71" pos:end="21:78"><expr pos:start="21:71" pos:end="21:78"><literal type="string" pos:start="21:71" pos:end="21:78">"buffer"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:82" pos:end="21:86"><expr pos:start="21:82" pos:end="21:86"><literal type="string" pos:start="21:82" pos:end="21:86">"src"</literal></expr></argument>)</argument_list></call><operator pos:start="21:88" pos:end="21:88">)</operator></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if<condition pos:start="25:7" pos:end="25:71">(<expr pos:start="25:8" pos:end="25:70"><operator pos:start="25:8" pos:end="25:8">!</operator><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:30"><name pos:start="25:10" pos:end="25:12">ist</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:30">out_video_filter</name></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <call pos:start="25:34" pos:end="25:69"><name pos:start="25:34" pos:end="25:46">avfilter_open</name><argument_list pos:start="25:47" pos:end="25:69">(<argument pos:start="25:48" pos:end="25:61"><expr pos:start="25:48" pos:end="25:61"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:61">output_filter</name></expr></argument>, <argument pos:start="25:64" pos:end="25:68"><expr pos:start="25:64" pos:end="25:68"><literal type="string" pos:start="25:64" pos:end="25:68">"out"</literal></expr></argument>)</argument_list></call><operator pos:start="25:70" pos:end="25:70">)</operator></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:62"><expr pos:start="31:5" pos:end="33:61"><call pos:start="31:5" pos:end="33:61"><name pos:start="31:5" pos:end="31:12">snprintf</name><argument_list pos:start="31:13" pos:end="33:61">(<argument pos:start="31:14" pos:end="31:17"><expr pos:start="31:14" pos:end="31:17"><name pos:start="31:14" pos:end="31:17">args</name></expr></argument>, <argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><literal type="number" pos:start="31:20" pos:end="31:22">255</literal></expr></argument>, <argument pos:start="31:25" pos:end="31:34"><expr pos:start="31:25" pos:end="31:34"><literal type="string" pos:start="31:25" pos:end="31:34">"%d:%d:%d"</literal></expr></argument>, <argument pos:start="31:37" pos:end="31:57"><expr pos:start="31:37" pos:end="31:57"><name pos:start="31:37" pos:end="31:57"><name pos:start="31:37" pos:end="31:39">ist</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:43">st</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:50">codec</name><operator pos:start="31:51" pos:end="31:52">-&gt;</operator><name pos:start="31:53" pos:end="31:57">width</name></name></expr></argument>,

             <argument pos:start="33:14" pos:end="33:35"><expr pos:start="33:14" pos:end="33:35"><name pos:start="33:14" pos:end="33:35"><name pos:start="33:14" pos:end="33:16">ist</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">st</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">codec</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:35">height</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:60"><expr pos:start="33:38" pos:end="33:60"><name pos:start="33:38" pos:end="33:60"><name pos:start="33:38" pos:end="33:40">ist</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:44">st</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:51">codec</name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:60">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:18"><if pos:start="35:5" pos:end="37:18">if<condition pos:start="35:7" pos:end="35:65">(<expr pos:start="35:8" pos:end="35:64"><call pos:start="35:8" pos:end="35:64"><name pos:start="35:8" pos:end="35:27">avfilter_init_filter</name><argument_list pos:start="35:28" pos:end="35:64">(<argument pos:start="35:29" pos:end="35:51"><expr pos:start="35:29" pos:end="35:51"><name pos:start="35:29" pos:end="35:51"><name pos:start="35:29" pos:end="35:31">ist</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:51">input_video_filter</name></name></expr></argument>, <argument pos:start="35:54" pos:end="35:57"><expr pos:start="35:54" pos:end="35:57"><name pos:start="35:54" pos:end="35:57">args</name></expr></argument>, <argument pos:start="35:60" pos:end="35:63"><expr pos:start="35:60" pos:end="35:63"><name pos:start="35:60" pos:end="35:63">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:18"><block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if<condition pos:start="39:7" pos:end="39:74">(<expr pos:start="39:8" pos:end="39:73"><call pos:start="39:8" pos:end="39:73"><name pos:start="39:8" pos:end="39:27">avfilter_init_filter</name><argument_list pos:start="39:28" pos:end="39:73">(<argument pos:start="39:29" pos:end="39:49"><expr pos:start="39:29" pos:end="39:49"><name pos:start="39:29" pos:end="39:49"><name pos:start="39:29" pos:end="39:31">ist</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:49">out_video_filter</name></name></expr></argument>, <argument pos:start="39:52" pos:end="39:55"><expr pos:start="39:52" pos:end="39:55"><name pos:start="39:52" pos:end="39:55">NULL</name></expr></argument>, <argument pos:start="39:58" pos:end="39:72"><expr pos:start="39:58" pos:end="39:72"><operator pos:start="39:58" pos:end="39:58">&amp;</operator><name pos:start="39:59" pos:end="39:72"><name pos:start="39:59" pos:end="39:63">codec</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:72">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:59">/* add input and output filters to the overall graph */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:71"><expr pos:start="47:5" pos:end="47:70"><call pos:start="47:5" pos:end="47:70"><name pos:start="47:5" pos:end="47:29">avfilter_graph_add_filter</name><argument_list pos:start="47:30" pos:end="47:70">(<argument pos:start="47:31" pos:end="47:44"><expr pos:start="47:31" pos:end="47:44"><name pos:start="47:31" pos:end="47:44">filt_graph_all</name></expr></argument>, <argument pos:start="47:47" pos:end="47:69"><expr pos:start="47:47" pos:end="47:69"><name pos:start="47:47" pos:end="47:69"><name pos:start="47:47" pos:end="47:49">ist</name><operator pos:start="47:50" pos:end="47:51">-&gt;</operator><name pos:start="47:52" pos:end="47:69">input_video_filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:69"><expr pos:start="49:5" pos:end="49:68"><call pos:start="49:5" pos:end="49:68"><name pos:start="49:5" pos:end="49:29">avfilter_graph_add_filter</name><argument_list pos:start="49:30" pos:end="49:68">(<argument pos:start="49:31" pos:end="49:44"><expr pos:start="49:31" pos:end="49:44"><name pos:start="49:31" pos:end="49:44">filt_graph_all</name></expr></argument>, <argument pos:start="49:47" pos:end="49:67"><expr pos:start="49:47" pos:end="49:67"><name pos:start="49:47" pos:end="49:67"><name pos:start="49:47" pos:end="49:49">ist</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:67">out_video_filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:42"><expr pos:start="53:5" pos:end="53:41"><name pos:start="53:5" pos:end="53:15">curr_filter</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:41"><name pos:start="53:19" pos:end="53:21">ist</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:41">input_video_filter</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="87:5"><if pos:start="57:5" pos:end="87:5">if<condition pos:start="57:7" pos:end="57:23">(<expr pos:start="57:8" pos:end="57:22"><name pos:start="57:8" pos:end="57:22"><name pos:start="57:8" pos:end="57:10">ost</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:22">video_crop</name></name></expr>)</condition> <block pos:start="57:25" pos:end="87:5">{<block_content pos:start="59:9" pos:end="85:63">

        <decl_stmt pos:start="59:9" pos:end="59:28"><decl pos:start="59:9" pos:end="59:27"><type pos:start="59:9" pos:end="59:12"><name pos:start="59:9" pos:end="59:12">char</name></type> <name pos:start="59:14" pos:end="59:27"><name pos:start="59:14" pos:end="59:22">crop_args</name><index pos:start="59:23" pos:end="59:27">[<expr pos:start="59:24" pos:end="59:26"><literal type="number" pos:start="59:24" pos:end="59:26">255</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:35"><decl pos:start="61:9" pos:end="61:34"><type pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:23">AVFilterContext</name> <modifier pos:start="61:25" pos:end="61:25">*</modifier></type><name pos:start="61:26" pos:end="61:34">filt_crop</name></decl>;</decl_stmt>

        <expr_stmt pos:start="63:9" pos:end="67:67"><expr pos:start="63:9" pos:end="67:66"><call pos:start="63:9" pos:end="67:66"><name pos:start="63:9" pos:end="63:16">snprintf</name><argument_list pos:start="63:17" pos:end="67:66">(<argument pos:start="63:18" pos:end="63:26"><expr pos:start="63:18" pos:end="63:26"><name pos:start="63:18" pos:end="63:26">crop_args</name></expr></argument>, <argument pos:start="63:29" pos:end="63:31"><expr pos:start="63:29" pos:end="63:31"><literal type="number" pos:start="63:29" pos:end="63:31">255</literal></expr></argument>, <argument pos:start="63:34" pos:end="63:46"><expr pos:start="63:34" pos:end="63:46"><literal type="string" pos:start="63:34" pos:end="63:46">"%d:%d:%d:%d"</literal></expr></argument>, <argument pos:start="63:49" pos:end="63:61"><expr pos:start="63:49" pos:end="63:61"><name pos:start="63:49" pos:end="63:61"><name pos:start="63:49" pos:end="63:51">ost</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:61">leftBand</name></name></expr></argument>, <argument pos:start="63:64" pos:end="63:75"><expr pos:start="63:64" pos:end="63:75"><name pos:start="63:64" pos:end="63:75"><name pos:start="63:64" pos:end="63:66">ost</name><operator pos:start="63:67" pos:end="63:68">-&gt;</operator><name pos:start="63:69" pos:end="63:75">topBand</name></name></expr></argument>,

                 <argument pos:start="65:18" pos:end="65:65"><expr pos:start="65:18" pos:end="65:65"><name pos:start="65:18" pos:end="65:29"><name pos:start="65:18" pos:end="65:22">codec</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:29">width</name></name> <operator pos:start="65:31" pos:end="65:31">-</operator>  <operator pos:start="65:34" pos:end="65:34">(</operator><name pos:start="65:35" pos:end="65:47">frame_padleft</name> <operator pos:start="65:49" pos:end="65:49">+</operator> <name pos:start="65:51" pos:end="65:64">frame_padright</name><operator pos:start="65:65" pos:end="65:65">)</operator></expr></argument>,

                 <argument pos:start="67:18" pos:end="67:65"><expr pos:start="67:18" pos:end="67:65"><name pos:start="67:18" pos:end="67:30"><name pos:start="67:18" pos:end="67:22">codec</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:30">height</name></name> <operator pos:start="67:32" pos:end="67:32">-</operator> <operator pos:start="67:34" pos:end="67:34">(</operator><name pos:start="67:35" pos:end="67:46">frame_padtop</name> <operator pos:start="67:48" pos:end="67:48">+</operator> <name pos:start="67:50" pos:end="67:64">frame_padbottom</name><operator pos:start="67:65" pos:end="67:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:70"><expr pos:start="69:9" pos:end="69:69"><name pos:start="69:9" pos:end="69:17">filt_crop</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:69"><name pos:start="69:21" pos:end="69:33">avfilter_open</name><argument_list pos:start="69:34" pos:end="69:69">(<argument pos:start="69:35" pos:end="69:62"><expr pos:start="69:35" pos:end="69:62"><call pos:start="69:35" pos:end="69:62"><name pos:start="69:35" pos:end="69:54">avfilter_get_by_name</name><argument_list pos:start="69:55" pos:end="69:62">(<argument pos:start="69:56" pos:end="69:61"><expr pos:start="69:56" pos:end="69:61"><literal type="string" pos:start="69:56" pos:end="69:61">"crop"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:65" pos:end="69:68"><expr pos:start="69:65" pos:end="69:68"><name pos:start="69:65" pos:end="69:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:22"><if pos:start="71:9" pos:end="73:22">if <condition pos:start="71:12" pos:end="71:23">(<expr pos:start="71:13" pos:end="71:22"><operator pos:start="71:13" pos:end="71:13">!</operator><name pos:start="71:14" pos:end="71:22">filt_crop</name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <return pos:start="73:13" pos:end="73:22">return <expr pos:start="73:20" pos:end="73:21"><operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="77:22"><if pos:start="75:9" pos:end="77:22">if <condition pos:start="75:12" pos:end="75:61">(<expr pos:start="75:13" pos:end="75:60"><call pos:start="75:13" pos:end="75:60"><name pos:start="75:13" pos:end="75:32">avfilter_init_filter</name><argument_list pos:start="75:33" pos:end="75:60">(<argument pos:start="75:34" pos:end="75:42"><expr pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:42">filt_crop</name></expr></argument>, <argument pos:start="75:45" pos:end="75:53"><expr pos:start="75:45" pos:end="75:53"><name pos:start="75:45" pos:end="75:53">crop_args</name></expr></argument>, <argument pos:start="75:56" pos:end="75:59"><expr pos:start="75:56" pos:end="75:59"><name pos:start="75:56" pos:end="75:59">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:22"><block_content pos:start="77:13" pos:end="77:22">

            <return pos:start="77:13" pos:end="77:22">return <expr pos:start="77:20" pos:end="77:21"><operator pos:start="77:20" pos:end="77:20">-</operator><literal type="number" pos:start="77:21" pos:end="77:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:56">(<expr pos:start="79:13" pos:end="79:55"><call pos:start="79:13" pos:end="79:55"><name pos:start="79:13" pos:end="79:25">avfilter_link</name><argument_list pos:start="79:26" pos:end="79:55">(<argument pos:start="79:27" pos:end="79:37"><expr pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:37">curr_filter</name></expr></argument>, <argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><literal type="number" pos:start="79:40" pos:end="79:40">0</literal></expr></argument>, <argument pos:start="79:43" pos:end="79:51"><expr pos:start="79:43" pos:end="79:51"><name pos:start="79:43" pos:end="79:51">filt_crop</name></expr></argument>, <argument pos:start="79:54" pos:end="79:54"><expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:32"><expr pos:start="83:9" pos:end="83:31"><name pos:start="83:9" pos:end="83:19">curr_filter</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:31">filt_crop</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:63"><expr pos:start="85:9" pos:end="85:62"><call pos:start="85:9" pos:end="85:62"><name pos:start="85:9" pos:end="85:33">avfilter_graph_add_filter</name><argument_list pos:start="85:34" pos:end="85:62">(<argument pos:start="85:35" pos:end="85:48"><expr pos:start="85:35" pos:end="85:48"><name pos:start="85:35" pos:end="85:48">filt_graph_all</name></expr></argument>, <argument pos:start="85:51" pos:end="85:61"><expr pos:start="85:51" pos:end="85:61"><name pos:start="85:51" pos:end="85:61">curr_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="91:5" pos:end="131:5"><if pos:start="91:5" pos:end="131:5">if<condition pos:start="91:7" pos:end="99:42">(<expr pos:start="91:8" pos:end="99:41"><operator pos:start="91:8" pos:end="91:8">(</operator><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:20">width</name></name> <operator pos:start="91:22" pos:end="91:23">!=</operator>

        <name pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:14">icodec</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:21">width</name></name> <operator pos:start="93:23" pos:end="93:23">-</operator> <operator pos:start="93:25" pos:end="93:25">(</operator><name pos:start="93:26" pos:end="93:39">frame_leftBand</name> <operator pos:start="93:41" pos:end="93:41">+</operator> <name pos:start="93:43" pos:end="93:57">frame_rightBand</name><operator pos:start="93:58" pos:end="93:58">)</operator> <operator pos:start="93:60" pos:end="93:60">+</operator>

        <operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:22">frame_padleft</name> <operator pos:start="95:24" pos:end="95:24">+</operator> <name pos:start="95:26" pos:end="95:39">frame_padright</name><operator pos:start="95:40" pos:end="95:40">)</operator><operator pos:start="95:41" pos:end="95:41">)</operator> <operator pos:start="95:43" pos:end="95:44">||</operator>

       <operator pos:start="97:8" pos:end="97:8">(</operator><name pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:13">codec</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:21">height</name></name> <operator pos:start="97:23" pos:end="97:24">!=</operator> <name pos:start="97:26" pos:end="97:39"><name pos:start="97:26" pos:end="97:31">icodec</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:39">height</name></name> <operator pos:start="97:41" pos:end="97:41">-</operator> <operator pos:start="97:43" pos:end="97:43">(</operator><name pos:start="97:44" pos:end="97:56">frame_topBand</name>  <operator pos:start="97:59" pos:end="97:59">+</operator> <name pos:start="97:61" pos:end="97:76">frame_bottomBand</name><operator pos:start="97:77" pos:end="97:77">)</operator> <operator pos:start="97:79" pos:end="97:79">+</operator>

        <operator pos:start="99:9" pos:end="99:9">(</operator><name pos:start="99:10" pos:end="99:21">frame_padtop</name> <operator pos:start="99:23" pos:end="99:23">+</operator> <name pos:start="99:25" pos:end="99:39">frame_padbottom</name><operator pos:start="99:40" pos:end="99:40">)</operator><operator pos:start="99:41" pos:end="99:41">)</operator></expr>)</condition> <block pos:start="99:44" pos:end="131:5">{<block_content pos:start="101:9" pos:end="129:63">

        <decl_stmt pos:start="101:9" pos:end="101:29"><decl pos:start="101:9" pos:end="101:28"><type pos:start="101:9" pos:end="101:12"><name pos:start="101:9" pos:end="101:12">char</name></type> <name pos:start="101:14" pos:end="101:28"><name pos:start="101:14" pos:end="101:23">scale_args</name><index pos:start="101:24" pos:end="101:28">[<expr pos:start="101:25" pos:end="101:27"><literal type="number" pos:start="101:25" pos:end="101:27">255</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:36"><decl pos:start="103:9" pos:end="103:35"><type pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:23">AVFilterContext</name> <modifier pos:start="103:25" pos:end="103:25">*</modifier></type><name pos:start="103:26" pos:end="103:35">filt_scale</name></decl>;</decl_stmt>

        <expr_stmt pos:start="105:9" pos:end="111:63"><expr pos:start="105:9" pos:end="111:62"><call pos:start="105:9" pos:end="111:62"><name pos:start="105:9" pos:end="105:16">snprintf</name><argument_list pos:start="105:17" pos:end="111:62">(<argument pos:start="105:18" pos:end="105:27"><expr pos:start="105:18" pos:end="105:27"><name pos:start="105:18" pos:end="105:27">scale_args</name></expr></argument>, <argument pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><literal type="number" pos:start="105:30" pos:end="105:32">255</literal></expr></argument>, <argument pos:start="105:35" pos:end="105:52"><expr pos:start="105:35" pos:end="105:52"><literal type="string" pos:start="105:35" pos:end="105:52">"%d:%d:flags=0x%X"</literal></expr></argument>,

                 <argument pos:start="107:18" pos:end="107:65"><expr pos:start="107:18" pos:end="107:65"><name pos:start="107:18" pos:end="107:29"><name pos:start="107:18" pos:end="107:22">codec</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:29">width</name></name>  <operator pos:start="107:32" pos:end="107:32">-</operator> <operator pos:start="107:34" pos:end="107:34">(</operator><name pos:start="107:35" pos:end="107:47">frame_padleft</name> <operator pos:start="107:49" pos:end="107:49">+</operator> <name pos:start="107:51" pos:end="107:64">frame_padright</name><operator pos:start="107:65" pos:end="107:65">)</operator></expr></argument>,

                 <argument pos:start="109:18" pos:end="109:66"><expr pos:start="109:18" pos:end="109:66"><name pos:start="109:18" pos:end="109:30"><name pos:start="109:18" pos:end="109:22">codec</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:30">height</name></name> <operator pos:start="109:32" pos:end="109:32">-</operator> <operator pos:start="109:34" pos:end="109:34">(</operator><name pos:start="109:35" pos:end="109:46">frame_padtop</name>  <operator pos:start="109:49" pos:end="109:49">+</operator> <name pos:start="109:51" pos:end="109:65">frame_padbottom</name><operator pos:start="109:66" pos:end="109:66">)</operator></expr></argument>,

                 <argument pos:start="111:18" pos:end="111:61"><expr pos:start="111:18" pos:end="111:61"><operator pos:start="111:18" pos:end="111:18">(</operator><name pos:start="111:19" pos:end="111:21">int</name><operator pos:start="111:22" pos:end="111:22">)</operator><call pos:start="111:23" pos:end="111:61"><name pos:start="111:23" pos:end="111:32">av_get_int</name><argument_list pos:start="111:33" pos:end="111:61">(<argument pos:start="111:34" pos:end="111:41"><expr pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:41">sws_opts</name></expr></argument>, <argument pos:start="111:44" pos:end="111:54"><expr pos:start="111:44" pos:end="111:54"><literal type="string" pos:start="111:44" pos:end="111:54">"sws_flags"</literal></expr></argument>, <argument pos:start="111:57" pos:end="111:60"><expr pos:start="111:57" pos:end="111:60"><name pos:start="111:57" pos:end="111:60">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:72"><expr pos:start="113:9" pos:end="113:71"><name pos:start="113:9" pos:end="113:18">filt_scale</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:71"><name pos:start="113:22" pos:end="113:34">avfilter_open</name><argument_list pos:start="113:35" pos:end="113:71">(<argument pos:start="113:36" pos:end="113:64"><expr pos:start="113:36" pos:end="113:64"><call pos:start="113:36" pos:end="113:64"><name pos:start="113:36" pos:end="113:55">avfilter_get_by_name</name><argument_list pos:start="113:56" pos:end="113:64">(<argument pos:start="113:57" pos:end="113:63"><expr pos:start="113:57" pos:end="113:63"><literal type="string" pos:start="113:57" pos:end="113:63">"scale"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:67" pos:end="113:70"><expr pos:start="113:67" pos:end="113:70"><name pos:start="113:67" pos:end="113:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="117:22"><if pos:start="115:9" pos:end="117:22">if <condition pos:start="115:12" pos:end="115:24">(<expr pos:start="115:13" pos:end="115:23"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:23">filt_scale</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:22"><block_content pos:start="117:13" pos:end="117:22">

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="119:9" pos:end="121:22"><if pos:start="119:9" pos:end="121:22">if <condition pos:start="119:12" pos:end="119:63">(<expr pos:start="119:13" pos:end="119:62"><call pos:start="119:13" pos:end="119:62"><name pos:start="119:13" pos:end="119:32">avfilter_init_filter</name><argument_list pos:start="119:33" pos:end="119:62">(<argument pos:start="119:34" pos:end="119:43"><expr pos:start="119:34" pos:end="119:43"><name pos:start="119:34" pos:end="119:43">filt_scale</name></expr></argument>, <argument pos:start="119:46" pos:end="119:55"><expr pos:start="119:46" pos:end="119:55"><name pos:start="119:46" pos:end="119:55">scale_args</name></expr></argument>, <argument pos:start="119:58" pos:end="119:61"><expr pos:start="119:58" pos:end="119:61"><name pos:start="119:58" pos:end="119:61">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:22"><block_content pos:start="121:13" pos:end="121:22">

            <return pos:start="121:13" pos:end="121:22">return <expr pos:start="121:20" pos:end="121:21"><operator pos:start="121:20" pos:end="121:20">-</operator><literal type="number" pos:start="121:21" pos:end="121:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="125:22"><if pos:start="123:9" pos:end="125:22">if <condition pos:start="123:12" pos:end="123:57">(<expr pos:start="123:13" pos:end="123:56"><call pos:start="123:13" pos:end="123:56"><name pos:start="123:13" pos:end="123:25">avfilter_link</name><argument_list pos:start="123:26" pos:end="123:56">(<argument pos:start="123:27" pos:end="123:37"><expr pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:37">curr_filter</name></expr></argument>, <argument pos:start="123:40" pos:end="123:40"><expr pos:start="123:40" pos:end="123:40"><literal type="number" pos:start="123:40" pos:end="123:40">0</literal></expr></argument>, <argument pos:start="123:43" pos:end="123:52"><expr pos:start="123:43" pos:end="123:52"><name pos:start="123:43" pos:end="123:52">filt_scale</name></expr></argument>, <argument pos:start="123:55" pos:end="123:55"><expr pos:start="123:55" pos:end="123:55"><literal type="number" pos:start="123:55" pos:end="123:55">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:22"><block_content pos:start="125:13" pos:end="125:22">

            <return pos:start="125:13" pos:end="125:22">return <expr pos:start="125:20" pos:end="125:21"><operator pos:start="125:20" pos:end="125:20">-</operator><literal type="number" pos:start="125:21" pos:end="125:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:19">curr_filter</name> <operator pos:start="127:21" pos:end="127:21">=</operator> <name pos:start="127:23" pos:end="127:32">filt_scale</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:63"><expr pos:start="129:9" pos:end="129:62"><call pos:start="129:9" pos:end="129:62"><name pos:start="129:9" pos:end="129:33">avfilter_graph_add_filter</name><argument_list pos:start="129:34" pos:end="129:62">(<argument pos:start="129:35" pos:end="129:48"><expr pos:start="129:35" pos:end="129:48"><name pos:start="129:35" pos:end="129:48">filt_graph_all</name></expr></argument>, <argument pos:start="129:51" pos:end="129:61"><expr pos:start="129:51" pos:end="129:61"><name pos:start="129:51" pos:end="129:61">curr_filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="175:5"><if pos:start="135:5" pos:end="169:5">if<condition pos:start="135:7" pos:end="135:16">(<expr pos:start="135:8" pos:end="135:15"><name pos:start="135:8" pos:end="135:15">vfilters</name></expr>)</condition> <block pos:start="135:18" pos:end="169:5">{<block_content pos:start="137:9" pos:end="167:28">

        <decl_stmt pos:start="137:9" pos:end="137:66"><decl pos:start="137:9" pos:end="137:65"><type pos:start="137:9" pos:end="137:23"><name pos:start="137:9" pos:end="137:21">AVFilterInOut</name> <modifier pos:start="137:23" pos:end="137:23">*</modifier></type><name pos:start="137:24" pos:end="137:30">outputs</name> <init pos:start="137:32" pos:end="137:65">= <expr pos:start="137:34" pos:end="137:65"><call pos:start="137:34" pos:end="137:65"><name pos:start="137:34" pos:end="137:42">av_malloc</name><argument_list pos:start="137:43" pos:end="137:65">(<argument pos:start="137:44" pos:end="137:64"><expr pos:start="137:44" pos:end="137:64"><sizeof pos:start="137:44" pos:end="137:64">sizeof<argument_list pos:start="137:50" pos:end="137:64">(<argument pos:start="137:51" pos:end="137:63"><expr pos:start="137:51" pos:end="137:63"><name pos:start="137:51" pos:end="137:63">AVFilterInOut</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:66"><decl pos:start="139:9" pos:end="139:65"><type pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:21">AVFilterInOut</name> <modifier pos:start="139:23" pos:end="139:23">*</modifier></type><name pos:start="139:24" pos:end="139:29">inputs</name>  <init pos:start="139:32" pos:end="139:65">= <expr pos:start="139:34" pos:end="139:65"><call pos:start="139:34" pos:end="139:65"><name pos:start="139:34" pos:end="139:42">av_malloc</name><argument_list pos:start="139:43" pos:end="139:65">(<argument pos:start="139:44" pos:end="139:64"><expr pos:start="139:44" pos:end="139:64"><sizeof pos:start="139:44" pos:end="139:64">sizeof<argument_list pos:start="139:50" pos:end="139:64">(<argument pos:start="139:51" pos:end="139:63"><expr pos:start="139:51" pos:end="139:63"><name pos:start="139:51" pos:end="139:63">AVFilterInOut</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:43"><expr pos:start="143:9" pos:end="143:42"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:15">outputs</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:21">name</name></name>    <operator pos:start="143:26" pos:end="143:26">=</operator> <call pos:start="143:28" pos:end="143:42"><name pos:start="143:28" pos:end="143:36">av_strdup</name><argument_list pos:start="143:37" pos:end="143:42">(<argument pos:start="143:38" pos:end="143:41"><expr pos:start="143:38" pos:end="143:41"><literal type="string" pos:start="143:38" pos:end="143:41">"in"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:39"><expr pos:start="145:9" pos:end="145:38"><name pos:start="145:9" pos:end="145:23"><name pos:start="145:9" pos:end="145:15">outputs</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:23">filter</name></name>  <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:38">curr_filter</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:29"><expr pos:start="147:9" pos:end="147:28"><name pos:start="147:9" pos:end="147:24"><name pos:start="147:9" pos:end="147:15">outputs</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:24">pad_idx</name></name> <operator pos:start="147:26" pos:end="147:26">=</operator> <literal type="number" pos:start="147:28" pos:end="147:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:32"><expr pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:15">outputs</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:21">next</name></name>    <operator pos:start="149:26" pos:end="149:26">=</operator> <name pos:start="149:28" pos:end="149:31">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:43"><expr pos:start="153:9" pos:end="153:42"><name pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:14">inputs</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:20">name</name></name>    <operator pos:start="153:25" pos:end="153:25">=</operator> <call pos:start="153:27" pos:end="153:42"><name pos:start="153:27" pos:end="153:35">av_strdup</name><argument_list pos:start="153:36" pos:end="153:42">(<argument pos:start="153:37" pos:end="153:41"><expr pos:start="153:37" pos:end="153:41"><literal type="string" pos:start="153:37" pos:end="153:41">"out"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:48"><expr pos:start="155:9" pos:end="155:47"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:14">inputs</name><operator pos:start="155:15" pos:end="155:16">-&gt;</operator><name pos:start="155:17" pos:end="155:22">filter</name></name>  <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:47"><name pos:start="155:27" pos:end="155:29">ist</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:47">out_video_filter</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:28"><expr pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:14">inputs</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:23">pad_idx</name></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <literal type="number" pos:start="157:27" pos:end="157:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:31"><expr pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:14">inputs</name><operator pos:start="159:15" pos:end="159:16">-&gt;</operator><name pos:start="159:17" pos:end="159:20">next</name></name>    <operator pos:start="159:25" pos:end="159:25">=</operator> <name pos:start="159:27" pos:end="159:30">NULL</name></expr>;</expr_stmt>



        <if_stmt pos:start="163:9" pos:end="165:22"><if pos:start="163:9" pos:end="165:22">if <condition pos:start="163:12" pos:end="163:86">(<expr pos:start="163:13" pos:end="163:85"><call pos:start="163:13" pos:end="163:81"><name pos:start="163:13" pos:end="163:32">avfilter_graph_parse</name><argument_list pos:start="163:33" pos:end="163:81">(<argument pos:start="163:34" pos:end="163:47"><expr pos:start="163:34" pos:end="163:47"><name pos:start="163:34" pos:end="163:47">filt_graph_all</name></expr></argument>, <argument pos:start="163:50" pos:end="163:57"><expr pos:start="163:50" pos:end="163:57"><name pos:start="163:50" pos:end="163:57">vfilters</name></expr></argument>, <argument pos:start="163:60" pos:end="163:65"><expr pos:start="163:60" pos:end="163:65"><name pos:start="163:60" pos:end="163:65">inputs</name></expr></argument>, <argument pos:start="163:68" pos:end="163:74"><expr pos:start="163:68" pos:end="163:74"><name pos:start="163:68" pos:end="163:74">outputs</name></expr></argument>, <argument pos:start="163:77" pos:end="163:80"><expr pos:start="163:77" pos:end="163:80"><name pos:start="163:77" pos:end="163:80">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="163:83" pos:end="163:83">&lt;</operator> <literal type="number" pos:start="163:85" pos:end="163:85">0</literal></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:22"><block_content pos:start="165:13" pos:end="165:22">

            <return pos:start="165:13" pos:end="165:22">return <expr pos:start="165:20" pos:end="165:21"><operator pos:start="165:20" pos:end="165:20">-</operator><literal type="number" pos:start="165:21" pos:end="165:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:28"><expr pos:start="167:9" pos:end="167:27"><call pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:16">av_freep</name><argument_list pos:start="167:17" pos:end="167:27">(<argument pos:start="167:18" pos:end="167:26"><expr pos:start="167:18" pos:end="167:26"><operator pos:start="167:18" pos:end="167:18">&amp;</operator><name pos:start="167:19" pos:end="167:26">vfilters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="175:5">else <block pos:start="169:12" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:22">

        <if_stmt pos:start="171:9" pos:end="173:22"><if pos:start="171:9" pos:end="173:22">if<condition pos:start="171:11" pos:end="171:71">(<expr pos:start="171:12" pos:end="171:70"><call pos:start="171:12" pos:end="171:66"><name pos:start="171:12" pos:end="171:24">avfilter_link</name><argument_list pos:start="171:25" pos:end="171:66">(<argument pos:start="171:26" pos:end="171:36"><expr pos:start="171:26" pos:end="171:36"><name pos:start="171:26" pos:end="171:36">curr_filter</name></expr></argument>, <argument pos:start="171:39" pos:end="171:39"><expr pos:start="171:39" pos:end="171:39"><literal type="number" pos:start="171:39" pos:end="171:39">0</literal></expr></argument>, <argument pos:start="171:42" pos:end="171:62"><expr pos:start="171:42" pos:end="171:62"><name pos:start="171:42" pos:end="171:62"><name pos:start="171:42" pos:end="171:44">ist</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:62">out_video_filter</name></name></expr></argument>, <argument pos:start="171:65" pos:end="171:65"><expr pos:start="171:65" pos:end="171:65"><literal type="number" pos:start="171:65" pos:end="171:65">0</literal></expr></argument>)</argument_list></call> <operator pos:start="171:68" pos:end="171:68">&lt;</operator> <literal type="number" pos:start="171:70" pos:end="171:70">0</literal></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:22"><block_content pos:start="173:13" pos:end="173:22">

            <return pos:start="173:13" pos:end="173:22">return <expr pos:start="173:20" pos:end="173:21"><operator pos:start="173:20" pos:end="173:20">-</operator><literal type="number" pos:start="173:21" pos:end="173:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <block pos:start="179:5" pos:end="187:5">{<block_content pos:start="181:9" pos:end="185:67">

        <decl_stmt pos:start="181:9" pos:end="181:33"><decl pos:start="181:9" pos:end="181:32"><type pos:start="181:9" pos:end="181:12"><name pos:start="181:9" pos:end="181:12">char</name></type> <name pos:start="181:14" pos:end="181:32"><name pos:start="181:14" pos:end="181:27">scale_sws_opts</name><index pos:start="181:28" pos:end="181:32">[<expr pos:start="181:29" pos:end="181:31"><literal type="number" pos:start="181:29" pos:end="181:31">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:117"><expr pos:start="183:9" pos:end="183:116"><call pos:start="183:9" pos:end="183:116"><name pos:start="183:9" pos:end="183:16">snprintf</name><argument_list pos:start="183:17" pos:end="183:116">(<argument pos:start="183:18" pos:end="183:31"><expr pos:start="183:18" pos:end="183:31"><name pos:start="183:18" pos:end="183:31">scale_sws_opts</name></expr></argument>, <argument pos:start="183:34" pos:end="183:55"><expr pos:start="183:34" pos:end="183:55"><sizeof pos:start="183:34" pos:end="183:55">sizeof<argument_list pos:start="183:40" pos:end="183:55">(<argument pos:start="183:41" pos:end="183:54"><expr pos:start="183:41" pos:end="183:54"><name pos:start="183:41" pos:end="183:54">scale_sws_opts</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="183:58" pos:end="183:69"><expr pos:start="183:58" pos:end="183:69"><literal type="string" pos:start="183:58" pos:end="183:69">"flags=0x%X"</literal></expr></argument>, <argument pos:start="183:72" pos:end="183:115"><expr pos:start="183:72" pos:end="183:115"><operator pos:start="183:72" pos:end="183:72">(</operator><name pos:start="183:73" pos:end="183:75">int</name><operator pos:start="183:76" pos:end="183:76">)</operator><call pos:start="183:77" pos:end="183:115"><name pos:start="183:77" pos:end="183:86">av_get_int</name><argument_list pos:start="183:87" pos:end="183:115">(<argument pos:start="183:88" pos:end="183:95"><expr pos:start="183:88" pos:end="183:95"><name pos:start="183:88" pos:end="183:95">sws_opts</name></expr></argument>, <argument pos:start="183:98" pos:end="183:108"><expr pos:start="183:98" pos:end="183:108"><literal type="string" pos:start="183:98" pos:end="183:108">"sws_flags"</literal></expr></argument>, <argument pos:start="183:111" pos:end="183:114"><expr pos:start="183:111" pos:end="183:114"><name pos:start="183:111" pos:end="183:114">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:67"><expr pos:start="185:9" pos:end="185:66"><name pos:start="185:9" pos:end="185:38"><name pos:start="185:9" pos:end="185:22">filt_graph_all</name><operator pos:start="185:23" pos:end="185:24">-&gt;</operator><name pos:start="185:25" pos:end="185:38">scale_sws_opts</name></name> <operator pos:start="185:40" pos:end="185:40">=</operator> <call pos:start="185:42" pos:end="185:66"><name pos:start="185:42" pos:end="185:50">av_strdup</name><argument_list pos:start="185:51" pos:end="185:66">(<argument pos:start="185:52" pos:end="185:65"><expr pos:start="185:52" pos:end="185:65"><name pos:start="185:52" pos:end="185:65">scale_sws_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="191:5" pos:end="191:40">/* configure all the filter links */</comment>

    <if_stmt pos:start="193:5" pos:end="195:18"><if pos:start="193:5" pos:end="195:18">if<condition pos:start="193:7" pos:end="193:59">(<expr pos:start="193:8" pos:end="193:58"><call pos:start="193:8" pos:end="193:58"><name pos:start="193:8" pos:end="193:36">avfilter_graph_check_validity</name><argument_list pos:start="193:37" pos:end="193:58">(<argument pos:start="193:38" pos:end="193:51"><expr pos:start="193:38" pos:end="193:51"><name pos:start="193:38" pos:end="193:51">filt_graph_all</name></expr></argument>, <argument pos:start="193:54" pos:end="193:57"><expr pos:start="193:54" pos:end="193:57"><name pos:start="193:54" pos:end="193:57">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:18"><block_content pos:start="195:9" pos:end="195:18">

        <return pos:start="195:9" pos:end="195:18">return <expr pos:start="195:16" pos:end="195:17"><operator pos:start="195:16" pos:end="195:16">-</operator><literal type="number" pos:start="195:17" pos:end="195:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="197:5" pos:end="199:18"><if pos:start="197:5" pos:end="199:18">if<condition pos:start="197:7" pos:end="197:59">(<expr pos:start="197:8" pos:end="197:58"><call pos:start="197:8" pos:end="197:58"><name pos:start="197:8" pos:end="197:36">avfilter_graph_config_formats</name><argument_list pos:start="197:37" pos:end="197:58">(<argument pos:start="197:38" pos:end="197:51"><expr pos:start="197:38" pos:end="197:51"><name pos:start="197:38" pos:end="197:51">filt_graph_all</name></expr></argument>, <argument pos:start="197:54" pos:end="197:57"><expr pos:start="197:54" pos:end="197:57"><name pos:start="197:54" pos:end="197:57">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="199:9" pos:end="199:18"><block_content pos:start="199:9" pos:end="199:18">

        <return pos:start="199:9" pos:end="199:18">return <expr pos:start="199:16" pos:end="199:17"><operator pos:start="199:16" pos:end="199:16">-</operator><literal type="number" pos:start="199:17" pos:end="199:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="201:5" pos:end="203:18"><if pos:start="201:5" pos:end="203:18">if<condition pos:start="201:7" pos:end="201:57">(<expr pos:start="201:8" pos:end="201:56"><call pos:start="201:8" pos:end="201:56"><name pos:start="201:8" pos:end="201:34">avfilter_graph_config_links</name><argument_list pos:start="201:35" pos:end="201:56">(<argument pos:start="201:36" pos:end="201:49"><expr pos:start="201:36" pos:end="201:49"><name pos:start="201:36" pos:end="201:49">filt_graph_all</name></expr></argument>, <argument pos:start="201:52" pos:end="201:55"><expr pos:start="201:52" pos:end="201:55"><name pos:start="201:52" pos:end="201:55">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="203:9" pos:end="203:18"><block_content pos:start="203:9" pos:end="203:18">

        <return pos:start="203:9" pos:end="203:18">return <expr pos:start="203:16" pos:end="203:17"><operator pos:start="203:16" pos:end="203:16">-</operator><literal type="number" pos:start="203:17" pos:end="203:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:55"><expr pos:start="207:5" pos:end="207:54"><name pos:start="207:5" pos:end="207:16"><name pos:start="207:5" pos:end="207:9">codec</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:16">width</name></name> <operator pos:start="207:18" pos:end="207:18">=</operator> <name pos:start="207:20" pos:end="207:51"><name pos:start="207:20" pos:end="207:22">ist</name><operator pos:start="207:23" pos:end="207:24">-&gt;</operator><name pos:start="207:25" pos:end="207:40">out_video_filter</name><operator pos:start="207:41" pos:end="207:42">-&gt;</operator><name pos:start="207:43" pos:end="207:48">inputs</name><index pos:start="207:49" pos:end="207:51">[<expr pos:start="207:50" pos:end="207:50"><literal type="number" pos:start="207:50" pos:end="207:50">0</literal></expr>]</index></name><operator pos:start="207:52" pos:end="207:53">-&gt;</operator><name pos:start="207:54" pos:end="207:54">w</name></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:56"><expr pos:start="209:5" pos:end="209:55"><name pos:start="209:5" pos:end="209:17"><name pos:start="209:5" pos:end="209:9">codec</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:17">height</name></name> <operator pos:start="209:19" pos:end="209:19">=</operator> <name pos:start="209:21" pos:end="209:52"><name pos:start="209:21" pos:end="209:23">ist</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:41">out_video_filter</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:49">inputs</name><index pos:start="209:50" pos:end="209:52">[<expr pos:start="209:51" pos:end="209:51"><literal type="number" pos:start="209:51" pos:end="209:51">0</literal></expr>]</index></name><operator pos:start="209:53" pos:end="209:54">-&gt;</operator><name pos:start="209:55" pos:end="209:55">h</name></expr>;</expr_stmt>



    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
