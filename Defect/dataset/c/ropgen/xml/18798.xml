<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18798.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_pci_vmstate_change</name><parameter_list pos:start="1:38" pos:end="1:67">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">d</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:58">bool</name></type> <name pos:start="1:60" pos:end="1:66">running</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:50"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:50">= <expr pos:start="5:29" pos:end="5:50"><call pos:start="5:29" pos:end="5:50"><name pos:start="5:29" pos:end="5:47">to_virtio_pci_proxy</name><argument_list pos:start="5:48" pos:end="5:50">(<argument pos:start="5:49" pos:end="5:49"><expr pos:start="5:49" pos:end="5:49"><name pos:start="5:49" pos:end="5:49">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:59">= <expr pos:start="7:26" pos:end="7:59"><call pos:start="7:26" pos:end="7:59"><name pos:start="7:26" pos:end="7:46">virtio_bus_get_device</name><argument_list pos:start="7:47" pos:end="7:59">(<argument pos:start="7:48" pos:end="7:58"><expr pos:start="7:48" pos:end="7:58"><operator pos:start="7:48" pos:end="7:48">&amp;</operator><name pos:start="7:49" pos:end="7:58"><name pos:start="7:49" pos:end="7:53">proxy</name><operator pos:start="7:54" pos:end="7:55">-&gt;</operator><name pos:start="7:56" pos:end="7:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="31:5"><if pos:start="11:5" pos:end="27:5">if <condition pos:start="11:8" pos:end="11:16">(<expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:15">running</name></expr>)</condition> <block pos:start="11:18" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:42">

        <comment type="block" pos:start="13:9" pos:end="15:60">/* Try to find out if the guest has bus master disabled, but is

           in ready state. Then we have a buggy guest OS. */</comment>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="19:71">(<expr pos:start="17:13" pos:end="19:70"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:17">vdev</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:25">status</name></name> <operator pos:start="17:27" pos:end="17:27">&amp;</operator> <name pos:start="17:29" pos:end="17:53">VIRTIO_CONFIG_S_DRIVER_OK</name><operator pos:start="17:54" pos:end="17:54">)</operator> <operator pos:start="17:56" pos:end="17:57">&amp;&amp;</operator>

            <operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:48"><name pos:start="19:15" pos:end="19:19">proxy</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:28">pci_dev</name><operator pos:start="19:29" pos:end="19:29">.</operator><name pos:start="19:30" pos:end="19:35">config</name><index pos:start="19:36" pos:end="19:48">[<expr pos:start="19:37" pos:end="19:47"><name pos:start="19:37" pos:end="19:47">PCI_COMMAND</name></expr>]</index></name> <operator pos:start="19:50" pos:end="19:50">&amp;</operator> <name pos:start="19:52" pos:end="19:69">PCI_COMMAND_MASTER</name><operator pos:start="19:70" pos:end="19:70">)</operator></expr>)</condition> <block pos:start="19:73" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:59">

            <expr_stmt pos:start="21:13" pos:end="21:59"><expr pos:start="21:13" pos:end="21:58"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:17">proxy</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:24">flags</name></name> <operator pos:start="21:26" pos:end="21:27">|=</operator> <name pos:start="21:29" pos:end="21:58">VIRTIO_PCI_FLAG_BUS_MASTER_BUG</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:34">virtio_pci_start_ioeventfd</name><argument_list pos:start="25:35" pos:end="25:41">(<argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:41">

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:33">virtio_pci_stop_ioeventfd</name><argument_list pos:start="29:34" pos:end="29:40">(<argument pos:start="29:35" pos:end="29:39"><expr pos:start="29:35" pos:end="29:39"><name pos:start="29:35" pos:end="29:39">proxy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
