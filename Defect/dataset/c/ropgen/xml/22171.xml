<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22171.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">ff_ac3_bit_alloc_calc_psd</name><parameter_list pos:start="1:31" pos:end="3:49">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:37">int8_t</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">exp</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:53"><decl pos:start="1:45" pos:end="1:53"><type pos:start="1:45" pos:end="1:53"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:53">start</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:62"><decl pos:start="1:56" pos:end="1:62"><type pos:start="1:56" pos:end="1:62"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:62">end</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:71">int16_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">psd</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:38">int16_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:48">band_psd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:38">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">bin</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">j</name></decl>, <decl pos:start="7:17" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:17">k</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:23">end1</name></decl>, <decl pos:start="7:26" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:26">v</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:33">/* exponent mapping to PSD */</comment>

    <for pos:start="13:5" pos:end="17:5">for<control pos:start="13:8" pos:end="13:32">(<init pos:start="13:9" pos:end="13:18"><expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">bin</name><operator pos:start="13:12" pos:end="13:12">=</operator><name pos:start="13:13" pos:end="13:17">start</name></expr>;</init><condition pos:start="13:19" pos:end="13:26"><expr pos:start="13:19" pos:end="13:25"><name pos:start="13:19" pos:end="13:21">bin</name><operator pos:start="13:22" pos:end="13:22">&lt;</operator><name pos:start="13:23" pos:end="13:25">end</name></expr>;</condition><incr pos:start="13:27" pos:end="13:31"><expr pos:start="13:27" pos:end="13:31"><name pos:start="13:27" pos:end="13:29">bin</name><operator pos:start="13:30" pos:end="13:31">++</operator></expr></incr>)</control> <block pos:start="13:34" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:42">

        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">psd</name><index pos:start="15:12" pos:end="15:16">[<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">bin</name></expr>]</index></name><operator pos:start="15:17" pos:end="15:17">=</operator><operator pos:start="15:18" pos:end="15:18">(</operator><literal type="number" pos:start="15:19" pos:end="15:24">3072</literal> <operator pos:start="15:24" pos:end="15:24">-</operator> <operator pos:start="15:26" pos:end="15:26">(</operator><name pos:start="15:27" pos:end="15:34"><name pos:start="15:27" pos:end="15:29">exp</name><index pos:start="15:30" pos:end="15:34">[<expr pos:start="15:31" pos:end="15:33"><name pos:start="15:31" pos:end="15:33">bin</name></expr>]</index></name> <operator pos:start="15:36" pos:end="15:37">&lt;&lt;</operator> <literal type="number" pos:start="15:39" pos:end="15:39">7</literal><operator pos:start="15:40" pos:end="15:40">)</operator><operator pos:start="15:41" pos:end="15:41">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="21:5" pos:end="21:25">/* PSD integration */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:12"><expr pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">j</name><operator pos:start="23:6" pos:end="23:6">=</operator><name pos:start="23:7" pos:end="23:11">start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:5">k</name><operator pos:start="25:6" pos:end="25:6">=</operator><name pos:start="25:7" pos:end="25:28"><name pos:start="25:7" pos:end="25:21">bin_to_band_tab</name><index pos:start="25:22" pos:end="25:28">[<expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">start</name></expr>]</index></name></expr>;</expr_stmt>

    <do pos:start="27:5" pos:end="47:38">do <block pos:start="27:8" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:12">

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:9">v</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">psd</name><index pos:start="29:16" pos:end="29:20">[<expr pos:start="29:17" pos:end="29:19"><name pos:start="29:17" pos:end="29:17">j</name><operator pos:start="29:18" pos:end="29:19">++</operator></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:12">end1</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:46"><name pos:start="31:16" pos:end="31:20">FFMIN</name><argument_list pos:start="31:21" pos:end="31:46">(<argument pos:start="31:22" pos:end="31:40"><expr pos:start="31:22" pos:end="31:40"><name pos:start="31:22" pos:end="31:40"><name pos:start="31:22" pos:end="31:35">band_start_tab</name><index pos:start="31:36" pos:end="31:40">[<expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:37">k</name><operator pos:start="31:38" pos:end="31:38">+</operator><literal type="number" pos:start="31:39" pos:end="31:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:43" pos:end="31:45"><expr pos:start="31:43" pos:end="31:45"><name pos:start="31:43" pos:end="31:45">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="41:9">for <control pos:start="33:13" pos:end="33:29">(<init pos:start="33:14" pos:end="33:14">;</init> <condition pos:start="33:16" pos:end="33:24"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">j</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:23">end1</name></expr>;</condition> <incr pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:26">j</name><operator pos:start="33:27" pos:end="33:28">++</operator></expr></incr>)</control> <block pos:start="33:31" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:59">

            <comment type="block" pos:start="35:13" pos:end="35:24">/* logadd */</comment>

            <decl_stmt pos:start="37:13" pos:end="37:57"><decl pos:start="37:13" pos:end="37:56"><type pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">int</name></type> <name pos:start="37:17" pos:end="37:19">adr</name> <init pos:start="37:21" pos:end="37:56">= <expr pos:start="37:23" pos:end="37:56"><call pos:start="37:23" pos:end="37:56"><name pos:start="37:23" pos:end="37:27">FFMIN</name><argument_list pos:start="37:28" pos:end="37:56">(<argument pos:start="37:29" pos:end="37:50"><expr pos:start="37:29" pos:end="37:50"><call pos:start="37:29" pos:end="37:45"><name pos:start="37:29" pos:end="37:33">FFABS</name><argument_list pos:start="37:34" pos:end="37:45">(<argument pos:start="37:35" pos:end="37:44"><expr pos:start="37:35" pos:end="37:44"><name pos:start="37:35" pos:end="37:35">v</name> <operator pos:start="37:37" pos:end="37:37">-</operator> <name pos:start="37:39" pos:end="37:44"><name pos:start="37:39" pos:end="37:41">psd</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><name pos:start="37:43" pos:end="37:43">j</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="37:47" pos:end="37:48">&gt;&gt;</operator> <literal type="number" pos:start="37:50" pos:end="37:50">1</literal></expr></argument>, <argument pos:start="37:53" pos:end="37:55"><expr pos:start="37:53" pos:end="37:55"><literal type="number" pos:start="37:53" pos:end="37:55">255</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:59"><expr pos:start="39:13" pos:end="39:58"><name pos:start="39:13" pos:end="39:13">v</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:32"><name pos:start="39:17" pos:end="39:21">FFMAX</name><argument_list pos:start="39:22" pos:end="39:32">(<argument pos:start="39:23" pos:end="39:23"><expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">v</name></expr></argument>, <argument pos:start="39:26" pos:end="39:31"><expr pos:start="39:26" pos:end="39:31"><name pos:start="39:26" pos:end="39:31"><name pos:start="39:26" pos:end="39:28">psd</name><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">j</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:58"><name pos:start="39:36" pos:end="39:53">ff_ac3_log_add_tab</name><index pos:start="39:54" pos:end="39:58">[<expr pos:start="39:55" pos:end="39:57"><name pos:start="39:55" pos:end="39:57">adr</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:16">band_psd</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">k</name></expr>]</index></name><operator pos:start="43:20" pos:end="43:20">=</operator><name pos:start="43:21" pos:end="43:21">v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:12"><expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:9">k</name><operator pos:start="45:10" pos:end="45:11">++</operator></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="47:13" pos:end="47:37">(<expr pos:start="47:14" pos:end="47:36"><name pos:start="47:14" pos:end="47:16">end</name> <operator pos:start="47:18" pos:end="47:18">&gt;</operator> <name pos:start="47:20" pos:end="47:36"><name pos:start="47:20" pos:end="47:33">band_start_tab</name><index pos:start="47:34" pos:end="47:36">[<expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">k</name></expr>]</index></name></expr>)</condition>;</do>

</block_content>}</block></function>
</unit>
