<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/507.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:22">vring_map</name><parameter_list pos:start="1:23" pos:end="3:37">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:35">MemoryRegion</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">mr</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:48">hwaddr</name></type> <name pos:start="1:50" pos:end="1:53">phys</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:61">hwaddr</name></type> <name pos:start="1:63" pos:end="1:65">len</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:27">bool</name></type> <name pos:start="3:29" pos:end="3:36">is_write</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:16">

    <decl_stmt pos:start="7:5" pos:end="7:85"><decl pos:start="7:5" pos:end="7:84"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23">MemoryRegionSection</name></type> <name pos:start="7:25" pos:end="7:31">section</name> <init pos:start="7:33" pos:end="7:84">= <expr pos:start="7:35" pos:end="7:84"><call pos:start="7:35" pos:end="7:84"><name pos:start="7:35" pos:end="7:52">memory_region_find</name><argument_list pos:start="7:53" pos:end="7:84">(<argument pos:start="7:54" pos:end="7:72"><expr pos:start="7:54" pos:end="7:72"><call pos:start="7:54" pos:end="7:72"><name pos:start="7:54" pos:end="7:70">get_system_memory</name><argument_list pos:start="7:71" pos:end="7:72">()</argument_list></call></expr></argument>, <argument pos:start="7:75" pos:end="7:78"><expr pos:start="7:75" pos:end="7:78"><name pos:start="7:75" pos:end="7:78">phys</name></expr></argument>, <argument pos:start="7:81" pos:end="7:83"><expr pos:start="7:81" pos:end="7:83"><name pos:start="7:81" pos:end="7:83">len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:56">(<expr pos:start="11:9" pos:end="11:55"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:16">section</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:19">mr</name></name> <operator pos:start="11:21" pos:end="11:22">||</operator> <call pos:start="11:24" pos:end="11:49"><name pos:start="11:24" pos:end="11:35">int128_get64</name><argument_list pos:start="11:36" pos:end="11:49">(<argument pos:start="11:37" pos:end="11:48"><expr pos:start="11:37" pos:end="11:48"><name pos:start="11:37" pos:end="11:48"><name pos:start="11:37" pos:end="11:43">section</name><operator pos:start="11:44" pos:end="11:44">.</operator><name pos:start="11:45" pos:end="11:48">size</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:51" pos:end="11:51">&lt;</operator> <name pos:start="11:53" pos:end="11:55">len</name></expr>)</condition> <block pos:start="11:58" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <goto pos:start="13:9" pos:end="13:17">goto <name pos:start="13:14" pos:end="13:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:37">(<expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:16">is_write</name> <operator pos:start="17:18" pos:end="17:19">&amp;&amp;</operator> <name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:27">section</name><operator pos:start="17:28" pos:end="17:28">.</operator><name pos:start="17:29" pos:end="17:36">readonly</name></name></expr>)</condition> <block pos:start="17:39" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:42">(<expr pos:start="23:9" pos:end="23:41"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:41"><name pos:start="23:10" pos:end="23:29">memory_region_is_ram</name><argument_list pos:start="23:30" pos:end="23:41">(<argument pos:start="23:31" pos:end="23:40"><expr pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:40"><name pos:start="23:31" pos:end="23:37">section</name><operator pos:start="23:38" pos:end="23:38">.</operator><name pos:start="23:39" pos:end="23:40">mr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:44" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <goto pos:start="25:9" pos:end="25:17">goto <name pos:start="25:14" pos:end="25:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:70">/* Ignore regions with dirty logging, we cannot mark them dirty */</comment>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:45">(<expr pos:start="33:9" pos:end="33:44"><call pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:32">memory_region_is_logging</name><argument_list pos:start="33:33" pos:end="33:44">(<argument pos:start="33:34" pos:end="33:43"><expr pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:43"><name pos:start="33:34" pos:end="33:40">section</name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:43">mr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:47" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:21"><expr pos:start="41:5" pos:end="41:20"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:7">mr</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:20"><name pos:start="41:11" pos:end="41:17">section</name><operator pos:start="41:18" pos:end="41:18">.</operator><name pos:start="41:19" pos:end="41:20">mr</name></name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:80">return <expr pos:start="43:12" pos:end="43:79"><call pos:start="43:12" pos:end="43:48"><name pos:start="43:12" pos:end="43:36">memory_region_get_ram_ptr</name><argument_list pos:start="43:37" pos:end="43:48">(<argument pos:start="43:38" pos:end="43:47"><expr pos:start="43:38" pos:end="43:47"><name pos:start="43:38" pos:end="43:47"><name pos:start="43:38" pos:end="43:44">section</name><operator pos:start="43:45" pos:end="43:45">.</operator><name pos:start="43:46" pos:end="43:47">mr</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:50" pos:end="43:50">+</operator> <name pos:start="43:52" pos:end="43:79"><name pos:start="43:52" pos:end="43:58">section</name><operator pos:start="43:59" pos:end="43:59">.</operator><name pos:start="43:60" pos:end="43:79">offset_within_region</name></name></expr>;</return>



<label pos:start="47:1" pos:end="47:4"><name pos:start="47:1" pos:end="47:3">out</name>:</label>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:23">memory_region_unref</name><argument_list pos:start="49:24" pos:end="49:35">(<argument pos:start="49:25" pos:end="49:34"><expr pos:start="49:25" pos:end="49:34"><name pos:start="49:25" pos:end="49:34"><name pos:start="49:25" pos:end="49:31">section</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:34">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><operator pos:start="51:5" pos:end="51:5">*</operator><name pos:start="51:6" pos:end="51:7">mr</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <name pos:start="51:11" pos:end="51:14">NULL</name></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:16">return <expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
