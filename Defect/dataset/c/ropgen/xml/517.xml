<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/517.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">test_nesting</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:45">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">Coroutine</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">root</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="15:6"><decl pos:start="7:5" pos:end="15:5"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">NestData</name></type> <name pos:start="7:14" pos:end="7:15">nd</name> <init pos:start="7:17" pos:end="15:5">= <expr pos:start="7:19" pos:end="15:5"><block pos:start="7:19" pos:end="15:5">{

        <expr pos:start="9:9" pos:end="9:21"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:16">n_enter</name>  <operator pos:start="9:19" pos:end="9:19">=</operator> <literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr>,

        <expr pos:start="11:9" pos:end="11:21"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:17">n_return</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>,

        <expr pos:start="13:9" pos:end="13:23"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:12">max</name>      <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:23">128</literal></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:8">root</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:38"><name pos:start="19:12" pos:end="19:32">qemu_coroutine_create</name><argument_list pos:start="19:33" pos:end="19:38">(<argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">nest</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><call pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:24">qemu_coroutine_enter</name><argument_list pos:start="21:25" pos:end="21:35">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">root</name></expr></argument>, <argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><operator pos:start="21:32" pos:end="21:32">&amp;</operator><name pos:start="21:33" pos:end="21:34">nd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:54">/* Must enter and return from max nesting level */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><call pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:19">g_assert_cmpint</name><argument_list pos:start="27:20" pos:end="27:43">(<argument pos:start="27:21" pos:end="27:30"><expr pos:start="27:21" pos:end="27:30"><name pos:start="27:21" pos:end="27:30"><name pos:start="27:21" pos:end="27:22">nd</name><operator pos:start="27:23" pos:end="27:23">.</operator><name pos:start="27:24" pos:end="27:30">n_enter</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:34"><expr pos:start="27:33" pos:end="27:34"><operator pos:start="27:33" pos:end="27:34">==</operator></expr></argument>, <argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:38">nd</name><operator pos:start="27:39" pos:end="27:39">.</operator><name pos:start="27:40" pos:end="27:42">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:19">g_assert_cmpint</name><argument_list pos:start="29:20" pos:end="29:44">(<argument pos:start="29:21" pos:end="29:31"><expr pos:start="29:21" pos:end="29:31"><name pos:start="29:21" pos:end="29:31"><name pos:start="29:21" pos:end="29:22">nd</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:31">n_return</name></name></expr></argument>, <argument pos:start="29:34" pos:end="29:35"><expr pos:start="29:34" pos:end="29:35"><operator pos:start="29:34" pos:end="29:35">==</operator></expr></argument>, <argument pos:start="29:38" pos:end="29:43"><expr pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:43"><name pos:start="29:38" pos:end="29:39">nd</name><operator pos:start="29:40" pos:end="29:40">.</operator><name pos:start="29:41" pos:end="29:43">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
