<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13085.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_write_ftyp_tag</name><parameter_list pos:start="1:30" pos:end="1:66">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:41">AVIOContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">pb</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:62">AVFormatContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:32">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MOVMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mov</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pos</name> <init pos:start="7:17" pos:end="7:31">= <expr pos:start="7:19" pos:end="7:31"><call pos:start="7:19" pos:end="7:31"><name pos:start="7:19" pos:end="7:27">avio_tell</name><argument_list pos:start="7:28" pos:end="7:31">(<argument pos:start="7:29" pos:end="7:30"><expr pos:start="7:29" pos:end="7:30"><name pos:start="7:29" pos:end="7:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">has_h264</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:31">has_video</name> <init pos:start="9:33" pos:end="9:35">= <expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">minor</name> <init pos:start="11:15" pos:end="11:21">= <expr pos:start="11:17" pos:end="11:21"><literal type="number" pos:start="11:17" pos:end="11:21">0x200</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="29:5">for <control pos:start="17:9" pos:end="17:39">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:34"><expr pos:start="17:17" pos:end="17:33"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:33"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:33">nb_streams</name></name></expr>;</condition> <incr pos:start="17:36" pos:end="17:38"><expr pos:start="17:36" pos:end="17:38"><name pos:start="17:36" pos:end="17:36">i</name><operator pos:start="17:37" pos:end="17:38">++</operator></expr></incr>)</control> <block pos:start="17:41" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:25">

        <decl_stmt pos:start="19:9" pos:end="19:37"><decl pos:start="19:9" pos:end="19:36"><type pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:16">AVStream</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:20">st</name> <init pos:start="19:22" pos:end="19:36">= <expr pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:33">streams</name><index pos:start="19:34" pos:end="19:36">[<expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="21:9" pos:end="23:26"><if pos:start="21:9" pos:end="23:26">if <condition pos:start="21:12" pos:end="21:56">(<expr pos:start="21:13" pos:end="21:55"><name pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:14">st</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:21">codec</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">codec_type</name></name> <operator pos:start="21:35" pos:end="21:36">==</operator> <name pos:start="21:38" pos:end="21:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:26"><block_content pos:start="23:13" pos:end="23:26">

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21">has_video</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:25"><if pos:start="25:9" pos:end="27:25">if <condition pos:start="25:12" pos:end="25:52">(<expr pos:start="25:13" pos:end="25:51"><name pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:14">st</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:21">codec</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:31">codec_id</name></name> <operator pos:start="25:33" pos:end="25:34">==</operator> <name pos:start="25:36" pos:end="25:51">AV_CODEC_ID_H264</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:25"><block_content pos:start="27:13" pos:end="27:25">

            <expr_stmt pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:20">has_h264</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><call pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:13">avio_wb32</name><argument_list pos:start="33:14" pos:end="33:20">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:23" pos:end="33:32">/* size */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><call pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:16">ffio_wfourcc</name><argument_list pos:start="35:17" pos:end="35:28">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">pb</name></expr></argument>, <argument pos:start="35:22" pos:end="35:27"><expr pos:start="35:22" pos:end="35:27"><literal type="string" pos:start="35:22" pos:end="35:27">"ftyp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="73:33"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:30">(<expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:11">mov</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">mode</name></name> <operator pos:start="39:19" pos:end="39:20">==</operator> <name pos:start="39:22" pos:end="39:29">MODE_3GP</name></expr>)</condition> <block pos:start="39:32" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:49">

        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><call pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:20">ffio_wfourcc</name><argument_list pos:start="41:21" pos:end="41:53">(<argument pos:start="41:22" pos:end="41:23"><expr pos:start="41:22" pos:end="41:23"><name pos:start="41:22" pos:end="41:23">pb</name></expr></argument>, <argument pos:start="41:26" pos:end="41:52"><expr pos:start="41:26" pos:end="41:52"><ternary pos:start="41:26" pos:end="41:52"><condition pos:start="41:26" pos:end="41:35"><expr pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:33">has_h264</name></expr> ?</condition><then pos:start="41:37" pos:end="41:42"> <expr pos:start="41:37" pos:end="41:42"><literal type="string" pos:start="41:37" pos:end="41:42">"3gp6"</literal></expr>  </then><else pos:start="41:45" pos:end="41:52">: <expr pos:start="41:47" pos:end="41:52"><literal type="string" pos:start="41:47" pos:end="41:52">"3gp4"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:13">minor</name> <operator pos:start="43:15" pos:end="43:15">=</operator>     <ternary pos:start="43:21" pos:end="43:48"><condition pos:start="43:21" pos:end="43:30"><expr pos:start="43:21" pos:end="43:28"><name pos:start="43:21" pos:end="43:28">has_h264</name></expr> ?</condition><then pos:start="43:34" pos:end="43:38">   <expr pos:start="43:34" pos:end="43:38"><literal type="number" pos:start="43:34" pos:end="43:38">0x100</literal></expr> </then><else pos:start="43:40" pos:end="43:48">:   <expr pos:start="43:44" pos:end="43:48"><literal type="number" pos:start="43:44" pos:end="43:48">0x200</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="45:7" pos:end="51:5">else if <condition pos:start="45:15" pos:end="45:36">(<expr pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:18">mov</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:24">mode</name></name> <operator pos:start="45:26" pos:end="45:26">&amp;</operator> <name pos:start="45:28" pos:end="45:35">MODE_3G2</name></expr>)</condition> <block pos:start="45:38" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:49">

        <expr_stmt pos:start="47:9" pos:end="47:54"><expr pos:start="47:9" pos:end="47:53"><call pos:start="47:9" pos:end="47:53"><name pos:start="47:9" pos:end="47:20">ffio_wfourcc</name><argument_list pos:start="47:21" pos:end="47:53">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">pb</name></expr></argument>, <argument pos:start="47:26" pos:end="47:52"><expr pos:start="47:26" pos:end="47:52"><ternary pos:start="47:26" pos:end="47:52"><condition pos:start="47:26" pos:end="47:35"><expr pos:start="47:26" pos:end="47:33"><name pos:start="47:26" pos:end="47:33">has_h264</name></expr> ?</condition><then pos:start="47:37" pos:end="47:42"> <expr pos:start="47:37" pos:end="47:42"><literal type="string" pos:start="47:37" pos:end="47:42">"3g2b"</literal></expr>  </then><else pos:start="47:45" pos:end="47:52">: <expr pos:start="47:47" pos:end="47:52"><literal type="string" pos:start="47:47" pos:end="47:52">"3g2a"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:13">minor</name> <operator pos:start="49:15" pos:end="49:15">=</operator>     <ternary pos:start="49:21" pos:end="49:48"><condition pos:start="49:21" pos:end="49:30"><expr pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:28">has_h264</name></expr> ?</condition><then pos:start="49:32" pos:end="49:38"> <expr pos:start="49:32" pos:end="49:38"><literal type="number" pos:start="49:32" pos:end="49:38">0x20000</literal></expr> </then><else pos:start="49:40" pos:end="49:48">: <expr pos:start="49:42" pos:end="49:48"><literal type="number" pos:start="49:42" pos:end="49:48">0x10000</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="53:33">else if <condition pos:start="51:15" pos:end="51:37">(<expr pos:start="51:16" pos:end="51:36"><name pos:start="51:16" pos:end="51:24"><name pos:start="51:16" pos:end="51:18">mov</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:24">mode</name></name> <operator pos:start="51:26" pos:end="51:27">==</operator> <name pos:start="51:29" pos:end="51:36">MODE_PSP</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:33"><block_content pos:start="53:9" pos:end="53:33">

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><call pos:start="53:9" pos:end="53:32"><name pos:start="53:9" pos:end="53:20">ffio_wfourcc</name><argument_list pos:start="53:21" pos:end="53:32">(<argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><name pos:start="53:22" pos:end="53:23">pb</name></expr></argument>, <argument pos:start="53:26" pos:end="53:31"><expr pos:start="53:26" pos:end="53:31"><literal type="string" pos:start="53:26" pos:end="53:31">"MSNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="55:5" pos:end="57:33">else if <condition pos:start="55:13" pos:end="55:35">(<expr pos:start="55:14" pos:end="55:34"><name pos:start="55:14" pos:end="55:22"><name pos:start="55:14" pos:end="55:16">mov</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:22">mode</name></name> <operator pos:start="55:24" pos:end="55:25">==</operator> <name pos:start="55:27" pos:end="55:34">MODE_MP4</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:33"><block_content pos:start="57:9" pos:end="57:33">

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:20">ffio_wfourcc</name><argument_list pos:start="57:21" pos:end="57:32">(<argument pos:start="57:22" pos:end="57:23"><expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">pb</name></expr></argument>, <argument pos:start="57:26" pos:end="57:31"><expr pos:start="57:26" pos:end="57:31"><literal type="string" pos:start="57:26" pos:end="57:31">"isom"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="59:5" pos:end="61:52">else if <condition pos:start="59:13" pos:end="59:36">(<expr pos:start="59:14" pos:end="59:35"><name pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:16">mov</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:22">mode</name></name> <operator pos:start="59:24" pos:end="59:25">==</operator> <name pos:start="59:27" pos:end="59:35">MODE_IPOD</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:52"><block_content pos:start="61:9" pos:end="61:52">

        <expr_stmt pos:start="61:9" pos:end="61:52"><expr pos:start="61:9" pos:end="61:51"><call pos:start="61:9" pos:end="61:51"><name pos:start="61:9" pos:end="61:20">ffio_wfourcc</name><argument_list pos:start="61:21" pos:end="61:51">(<argument pos:start="61:22" pos:end="61:23"><expr pos:start="61:22" pos:end="61:23"><name pos:start="61:22" pos:end="61:23">pb</name></expr></argument>, <argument pos:start="61:26" pos:end="61:50"><expr pos:start="61:26" pos:end="61:50"><ternary pos:start="61:26" pos:end="61:50"><condition pos:start="61:26" pos:end="61:36"><expr pos:start="61:26" pos:end="61:34"><name pos:start="61:26" pos:end="61:34">has_video</name></expr> ?</condition><then pos:start="61:38" pos:end="61:43"> <expr pos:start="61:38" pos:end="61:43"><literal type="string" pos:start="61:38" pos:end="61:43">"M4V "</literal></expr></then><else pos:start="61:44" pos:end="61:50">:<expr pos:start="61:45" pos:end="61:50"><literal type="string" pos:start="61:45" pos:end="61:50">"M4A "</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="63:5" pos:end="65:33">else if <condition pos:start="63:13" pos:end="63:35">(<expr pos:start="63:14" pos:end="63:34"><name pos:start="63:14" pos:end="63:22"><name pos:start="63:14" pos:end="63:16">mov</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">mode</name></name> <operator pos:start="63:24" pos:end="63:25">==</operator> <name pos:start="63:27" pos:end="63:34">MODE_ISM</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:33"><block_content pos:start="65:9" pos:end="65:33">

        <expr_stmt pos:start="65:9" pos:end="65:33"><expr pos:start="65:9" pos:end="65:32"><call pos:start="65:9" pos:end="65:32"><name pos:start="65:9" pos:end="65:20">ffio_wfourcc</name><argument_list pos:start="65:21" pos:end="65:32">(<argument pos:start="65:22" pos:end="65:23"><expr pos:start="65:22" pos:end="65:23"><name pos:start="65:22" pos:end="65:23">pb</name></expr></argument>, <argument pos:start="65:26" pos:end="65:31"><expr pos:start="65:26" pos:end="65:31"><literal type="string" pos:start="65:26" pos:end="65:31">"isml"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="67:5" pos:end="69:33">else if <condition pos:start="67:13" pos:end="67:35">(<expr pos:start="67:14" pos:end="67:34"><name pos:start="67:14" pos:end="67:22"><name pos:start="67:14" pos:end="67:16">mov</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:22">mode</name></name> <operator pos:start="67:24" pos:end="67:25">==</operator> <name pos:start="67:27" pos:end="67:34">MODE_F4V</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:33"><block_content pos:start="69:9" pos:end="69:33">

        <expr_stmt pos:start="69:9" pos:end="69:33"><expr pos:start="69:9" pos:end="69:32"><call pos:start="69:9" pos:end="69:32"><name pos:start="69:9" pos:end="69:20">ffio_wfourcc</name><argument_list pos:start="69:21" pos:end="69:32">(<argument pos:start="69:22" pos:end="69:23"><expr pos:start="69:22" pos:end="69:23"><name pos:start="69:22" pos:end="69:23">pb</name></expr></argument>, <argument pos:start="69:26" pos:end="69:31"><expr pos:start="69:26" pos:end="69:31"><literal type="string" pos:start="69:26" pos:end="69:31">"f4v "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="71:5" pos:end="73:33">else<block type="pseudo" pos:start="73:9" pos:end="73:33"><block_content pos:start="73:9" pos:end="73:33">

        <expr_stmt pos:start="73:9" pos:end="73:33"><expr pos:start="73:9" pos:end="73:32"><call pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:20">ffio_wfourcc</name><argument_list pos:start="73:21" pos:end="73:32">(<argument pos:start="73:22" pos:end="73:23"><expr pos:start="73:22" pos:end="73:23"><name pos:start="73:22" pos:end="73:23">pb</name></expr></argument>, <argument pos:start="73:26" pos:end="73:31"><expr pos:start="73:26" pos:end="73:31"><literal type="string" pos:start="73:26" pos:end="73:31">"qt  "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:25"><expr pos:start="77:5" pos:end="77:24"><call pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:13">avio_wb32</name><argument_list pos:start="77:14" pos:end="77:24">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">pb</name></expr></argument>, <argument pos:start="77:19" pos:end="77:23"><expr pos:start="77:19" pos:end="77:23"><name pos:start="77:19" pos:end="77:23">minor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="101:5"><if pos:start="81:5" pos:end="83:33">if <condition pos:start="81:8" pos:end="81:30">(<expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:11">mov</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:17">mode</name></name> <operator pos:start="81:19" pos:end="81:20">==</operator> <name pos:start="81:22" pos:end="81:29">MODE_MOV</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:33"><block_content pos:start="83:9" pos:end="83:33">

        <expr_stmt pos:start="83:9" pos:end="83:33"><expr pos:start="83:9" pos:end="83:32"><call pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:20">ffio_wfourcc</name><argument_list pos:start="83:21" pos:end="83:32">(<argument pos:start="83:22" pos:end="83:23"><expr pos:start="83:22" pos:end="83:23"><name pos:start="83:22" pos:end="83:23">pb</name></expr></argument>, <argument pos:start="83:26" pos:end="83:31"><expr pos:start="83:26" pos:end="83:31"><literal type="string" pos:start="83:26" pos:end="83:31">"qt  "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="85:5" pos:end="91:5">else if <condition pos:start="85:13" pos:end="85:35">(<expr pos:start="85:14" pos:end="85:34"><name pos:start="85:14" pos:end="85:22"><name pos:start="85:14" pos:end="85:16">mov</name><operator pos:start="85:17" pos:end="85:18">-&gt;</operator><name pos:start="85:19" pos:end="85:22">mode</name></name> <operator pos:start="85:24" pos:end="85:25">==</operator> <name pos:start="85:27" pos:end="85:34">MODE_ISM</name></expr>)</condition> <block pos:start="85:37" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:33">

        <expr_stmt pos:start="87:9" pos:end="87:33"><expr pos:start="87:9" pos:end="87:32"><call pos:start="87:9" pos:end="87:32"><name pos:start="87:9" pos:end="87:20">ffio_wfourcc</name><argument_list pos:start="87:21" pos:end="87:32">(<argument pos:start="87:22" pos:end="87:23"><expr pos:start="87:22" pos:end="87:23"><name pos:start="87:22" pos:end="87:23">pb</name></expr></argument>, <argument pos:start="87:26" pos:end="87:31"><expr pos:start="87:26" pos:end="87:31"><literal type="string" pos:start="87:26" pos:end="87:31">"piff"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:33"><expr pos:start="89:9" pos:end="89:32"><call pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:20">ffio_wfourcc</name><argument_list pos:start="89:21" pos:end="89:32">(<argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><name pos:start="89:22" pos:end="89:23">pb</name></expr></argument>, <argument pos:start="89:26" pos:end="89:31"><expr pos:start="89:26" pos:end="89:31"><literal type="string" pos:start="89:26" pos:end="89:31">"iso2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="101:5">else <block pos:start="91:12" pos:end="101:5">{<block_content pos:start="93:9" pos:end="99:37">

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><call pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:20">ffio_wfourcc</name><argument_list pos:start="93:21" pos:end="93:32">(<argument pos:start="93:22" pos:end="93:23"><expr pos:start="93:22" pos:end="93:23"><name pos:start="93:22" pos:end="93:23">pb</name></expr></argument>, <argument pos:start="93:26" pos:end="93:31"><expr pos:start="93:26" pos:end="93:31"><literal type="string" pos:start="93:26" pos:end="93:31">"isom"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><call pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:20">ffio_wfourcc</name><argument_list pos:start="95:21" pos:end="95:32">(<argument pos:start="95:22" pos:end="95:23"><expr pos:start="95:22" pos:end="95:23"><name pos:start="95:22" pos:end="95:23">pb</name></expr></argument>, <argument pos:start="95:26" pos:end="95:31"><expr pos:start="95:26" pos:end="95:31"><literal type="string" pos:start="95:26" pos:end="95:31">"iso2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:37"><if pos:start="97:9" pos:end="99:37">if <condition pos:start="97:12" pos:end="97:21">(<expr pos:start="97:13" pos:end="97:20"><name pos:start="97:13" pos:end="97:20">has_h264</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:37"><block_content pos:start="99:13" pos:end="99:37">

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><call pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:24">ffio_wfourcc</name><argument_list pos:start="99:25" pos:end="99:36">(<argument pos:start="99:26" pos:end="99:27"><expr pos:start="99:26" pos:end="99:27"><name pos:start="99:26" pos:end="99:27">pb</name></expr></argument>, <argument pos:start="99:30" pos:end="99:35"><expr pos:start="99:30" pos:end="99:35"><literal type="string" pos:start="99:30" pos:end="99:35">"avc1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="105:5" pos:end="119:33"><if pos:start="105:5" pos:end="107:51">if <condition pos:start="105:8" pos:end="105:30">(<expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:11">mov</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:17">mode</name></name> <operator pos:start="105:19" pos:end="105:20">==</operator> <name pos:start="105:22" pos:end="105:29">MODE_3GP</name></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:51"><block_content pos:start="107:9" pos:end="107:51">

        <expr_stmt pos:start="107:9" pos:end="107:51"><expr pos:start="107:9" pos:end="107:50"><call pos:start="107:9" pos:end="107:50"><name pos:start="107:9" pos:end="107:20">ffio_wfourcc</name><argument_list pos:start="107:21" pos:end="107:50">(<argument pos:start="107:22" pos:end="107:23"><expr pos:start="107:22" pos:end="107:23"><name pos:start="107:22" pos:end="107:23">pb</name></expr></argument>, <argument pos:start="107:26" pos:end="107:49"><expr pos:start="107:26" pos:end="107:49"><ternary pos:start="107:26" pos:end="107:49"><condition pos:start="107:26" pos:end="107:35"><expr pos:start="107:26" pos:end="107:33"><name pos:start="107:26" pos:end="107:33">has_h264</name></expr> ?</condition><then pos:start="107:37" pos:end="107:42"> <expr pos:start="107:37" pos:end="107:42"><literal type="string" pos:start="107:37" pos:end="107:42">"3gp6"</literal></expr></then><else pos:start="107:43" pos:end="107:49">:<expr pos:start="107:44" pos:end="107:49"><literal type="string" pos:start="107:44" pos:end="107:49">"3gp4"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="109:5" pos:end="111:51">else if <condition pos:start="109:13" pos:end="109:34">(<expr pos:start="109:14" pos:end="109:33"><name pos:start="109:14" pos:end="109:22"><name pos:start="109:14" pos:end="109:16">mov</name><operator pos:start="109:17" pos:end="109:18">-&gt;</operator><name pos:start="109:19" pos:end="109:22">mode</name></name> <operator pos:start="109:24" pos:end="109:24">&amp;</operator> <name pos:start="109:26" pos:end="109:33">MODE_3G2</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:51"><block_content pos:start="111:9" pos:end="111:51">

        <expr_stmt pos:start="111:9" pos:end="111:51"><expr pos:start="111:9" pos:end="111:50"><call pos:start="111:9" pos:end="111:50"><name pos:start="111:9" pos:end="111:20">ffio_wfourcc</name><argument_list pos:start="111:21" pos:end="111:50">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><name pos:start="111:22" pos:end="111:23">pb</name></expr></argument>, <argument pos:start="111:26" pos:end="111:49"><expr pos:start="111:26" pos:end="111:49"><ternary pos:start="111:26" pos:end="111:49"><condition pos:start="111:26" pos:end="111:35"><expr pos:start="111:26" pos:end="111:33"><name pos:start="111:26" pos:end="111:33">has_h264</name></expr> ?</condition><then pos:start="111:37" pos:end="111:42"> <expr pos:start="111:37" pos:end="111:42"><literal type="string" pos:start="111:37" pos:end="111:42">"3g2b"</literal></expr></then><else pos:start="111:43" pos:end="111:49">:<expr pos:start="111:44" pos:end="111:49"><literal type="string" pos:start="111:44" pos:end="111:49">"3g2a"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="113:5" pos:end="115:33">else if <condition pos:start="113:13" pos:end="113:35">(<expr pos:start="113:14" pos:end="113:34"><name pos:start="113:14" pos:end="113:22"><name pos:start="113:14" pos:end="113:16">mov</name><operator pos:start="113:17" pos:end="113:18">-&gt;</operator><name pos:start="113:19" pos:end="113:22">mode</name></name> <operator pos:start="113:24" pos:end="113:25">==</operator> <name pos:start="113:27" pos:end="113:34">MODE_PSP</name></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:33"><block_content pos:start="115:9" pos:end="115:33">

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><call pos:start="115:9" pos:end="115:32"><name pos:start="115:9" pos:end="115:20">ffio_wfourcc</name><argument_list pos:start="115:21" pos:end="115:32">(<argument pos:start="115:22" pos:end="115:23"><expr pos:start="115:22" pos:end="115:23"><name pos:start="115:22" pos:end="115:23">pb</name></expr></argument>, <argument pos:start="115:26" pos:end="115:31"><expr pos:start="115:26" pos:end="115:31"><literal type="string" pos:start="115:26" pos:end="115:31">"MSNV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="117:5" pos:end="119:33">else if <condition pos:start="117:13" pos:end="117:35">(<expr pos:start="117:14" pos:end="117:34"><name pos:start="117:14" pos:end="117:22"><name pos:start="117:14" pos:end="117:16">mov</name><operator pos:start="117:17" pos:end="117:18">-&gt;</operator><name pos:start="117:19" pos:end="117:22">mode</name></name> <operator pos:start="117:24" pos:end="117:25">==</operator> <name pos:start="117:27" pos:end="117:34">MODE_MP4</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:33"><block_content pos:start="119:9" pos:end="119:33">

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><call pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:20">ffio_wfourcc</name><argument_list pos:start="119:21" pos:end="119:32">(<argument pos:start="119:22" pos:end="119:23"><expr pos:start="119:22" pos:end="119:23"><name pos:start="119:22" pos:end="119:23">pb</name></expr></argument>, <argument pos:start="119:26" pos:end="119:31"><expr pos:start="119:26" pos:end="119:31"><literal type="string" pos:start="119:26" pos:end="119:31">"mp41"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="121:5" pos:end="121:32">return <expr pos:start="121:12" pos:end="121:31"><call pos:start="121:12" pos:end="121:31"><name pos:start="121:12" pos:end="121:22">update_size</name><argument_list pos:start="121:23" pos:end="121:31">(<argument pos:start="121:24" pos:end="121:25"><expr pos:start="121:24" pos:end="121:25"><name pos:start="121:24" pos:end="121:25">pb</name></expr></argument>, <argument pos:start="121:28" pos:end="121:30"><expr pos:start="121:28" pos:end="121:30"><name pos:start="121:28" pos:end="121:30">pos</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
