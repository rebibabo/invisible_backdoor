<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17039.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">connect_to_ssh</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">BDRVSSHState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:39">ssh_flags</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:55">creat_mode</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="267:1">{<block_content pos:start="7:5" pos:end="265:15">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">r</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">host</name></decl>, <decl pos:start="11:23" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">user</name></decl>, <decl pos:start="11:30" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:30" pos:end="11:30">*</modifier></type><name pos:start="11:31" pos:end="11:34">path</name></decl>, <decl pos:start="11:37" pos:end="11:51"><type ref="prev" pos:start="11:5" pos:end="11:16"><modifier pos:start="11:37" pos:end="11:37">*</modifier></type><name pos:start="11:38" pos:end="11:51">host_key_check</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">port</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:8">host</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:41"><name pos:start="17:12" pos:end="17:24">qdict_get_str</name><argument_list pos:start="17:25" pos:end="17:41">(<argument pos:start="17:26" pos:end="17:32"><expr pos:start="17:26" pos:end="17:32"><name pos:start="17:26" pos:end="17:32">options</name></expr></argument>, <argument pos:start="17:35" pos:end="17:40"><expr pos:start="17:35" pos:end="17:40"><literal type="string" pos:start="17:35" pos:end="17:40">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:38">(<expr pos:start="21:9" pos:end="21:37"><call pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:20">qdict_haskey</name><argument_list pos:start="21:21" pos:end="21:37">(<argument pos:start="21:22" pos:end="21:28"><expr pos:start="21:22" pos:end="21:28"><name pos:start="21:22" pos:end="21:28">options</name></expr></argument>, <argument pos:start="21:31" pos:end="21:36"><expr pos:start="21:31" pos:end="21:36"><literal type="string" pos:start="21:31" pos:end="21:36">"port"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:40" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:46">

        <expr_stmt pos:start="23:9" pos:end="23:46"><expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:12">port</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:45"><name pos:start="23:16" pos:end="23:28">qdict_get_int</name><argument_list pos:start="23:29" pos:end="23:45">(<argument pos:start="23:30" pos:end="23:36"><expr pos:start="23:30" pos:end="23:36"><name pos:start="23:30" pos:end="23:36">options</name></expr></argument>, <argument pos:start="23:39" pos:end="23:44"><expr pos:start="23:39" pos:end="23:44"><literal type="string" pos:start="23:39" pos:end="23:44">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="29:5">else <block pos:start="25:12" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">port</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <literal type="number" pos:start="27:16" pos:end="27:17">22</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:8">path</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <call pos:start="33:12" pos:end="33:41"><name pos:start="33:12" pos:end="33:24">qdict_get_str</name><argument_list pos:start="33:25" pos:end="33:41">(<argument pos:start="33:26" pos:end="33:32"><expr pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:32">options</name></expr></argument>, <argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><literal type="string" pos:start="33:35" pos:end="33:40">"path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="53:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:38">(<expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:20">qdict_haskey</name><argument_list pos:start="37:21" pos:end="37:37">(<argument pos:start="37:22" pos:end="37:28"><expr pos:start="37:22" pos:end="37:28"><name pos:start="37:22" pos:end="37:28">options</name></expr></argument>, <argument pos:start="37:31" pos:end="37:36"><expr pos:start="37:31" pos:end="37:36"><literal type="string" pos:start="37:31" pos:end="37:36">"user"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:40" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:46">

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:12">user</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:45"><name pos:start="39:16" pos:end="39:28">qdict_get_str</name><argument_list pos:start="39:29" pos:end="39:45">(<argument pos:start="39:30" pos:end="39:36"><expr pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:36">options</name></expr></argument>, <argument pos:start="39:39" pos:end="39:44"><expr pos:start="39:39" pos:end="39:44"><literal type="string" pos:start="39:39" pos:end="39:44">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="53:5">else <block pos:start="41:12" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:9">

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:12">user</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <call pos:start="43:16" pos:end="43:32"><name pos:start="43:16" pos:end="43:30">g_get_user_name</name><argument_list pos:start="43:31" pos:end="43:32">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:18">(<expr pos:start="45:13" pos:end="45:17"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:17">user</name></expr>)</condition> <block pos:start="45:20" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:21">

            <expr_stmt pos:start="47:13" pos:end="47:25"><expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">-</operator><name pos:start="47:20" pos:end="47:24">errno</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:21">goto <name pos:start="49:18" pos:end="49:20">err</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:48">(<expr pos:start="57:9" pos:end="57:47"><call pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:20">qdict_haskey</name><argument_list pos:start="57:21" pos:end="57:47">(<argument pos:start="57:22" pos:end="57:28"><expr pos:start="57:22" pos:end="57:28"><name pos:start="57:22" pos:end="57:28">options</name></expr></argument>, <argument pos:start="57:31" pos:end="57:46"><expr pos:start="57:31" pos:end="57:46"><literal type="string" pos:start="57:31" pos:end="57:46">"host_key_check"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:50" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:66">

        <expr_stmt pos:start="59:9" pos:end="59:66"><expr pos:start="59:9" pos:end="59:65"><name pos:start="59:9" pos:end="59:22">host_key_check</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:65"><name pos:start="59:26" pos:end="59:38">qdict_get_str</name><argument_list pos:start="59:39" pos:end="59:65">(<argument pos:start="59:40" pos:end="59:46"><expr pos:start="59:40" pos:end="59:46"><name pos:start="59:40" pos:end="59:46">options</name></expr></argument>, <argument pos:start="59:49" pos:end="59:64"><expr pos:start="59:49" pos:end="59:64"><literal type="string" pos:start="59:49" pos:end="59:64">"host_key_check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="65:5">else <block pos:start="61:12" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:31">

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:22">host_key_check</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <literal type="string" pos:start="63:26" pos:end="63:30">"yes"</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:56">/* Construct the host:port name for inet_connect. */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><call pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:10">g_free</name><argument_list pos:start="71:11" pos:end="71:23">(<argument pos:start="71:12" pos:end="71:22"><expr pos:start="71:12" pos:end="71:22"><name pos:start="71:12" pos:end="71:22"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:22">hostport</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:15"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:15">hostport</name></name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:54"><name pos:start="73:19" pos:end="73:33">g_strdup_printf</name><argument_list pos:start="73:34" pos:end="73:54">(<argument pos:start="73:35" pos:end="73:41"><expr pos:start="73:35" pos:end="73:41"><literal type="string" pos:start="73:35" pos:end="73:41">"%s:%d"</literal></expr></argument>, <argument pos:start="73:44" pos:end="73:47"><expr pos:start="73:44" pos:end="73:47"><name pos:start="73:44" pos:end="73:47">host</name></expr></argument>, <argument pos:start="73:50" pos:end="73:53"><expr pos:start="73:50" pos:end="73:53"><name pos:start="73:50" pos:end="73:53">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:38">/* Open the socket and connect. */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:46"><expr pos:start="79:5" pos:end="79:45"><name pos:start="79:5" pos:end="79:11"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:11">sock</name></name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:45"><name pos:start="79:15" pos:end="79:26">inet_connect</name><argument_list pos:start="79:27" pos:end="79:45">(<argument pos:start="79:28" pos:end="79:38"><expr pos:start="79:28" pos:end="79:38"><name pos:start="79:28" pos:end="79:38"><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:38">hostport</name></name></expr></argument>, <argument pos:start="79:41" pos:end="79:44"><expr pos:start="79:41" pos:end="79:44"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="81:20">(<expr pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:11">err</name> <operator pos:start="81:13" pos:end="81:14">!=</operator> <name pos:start="81:16" pos:end="81:19">NULL</name></expr>)</condition> <block pos:start="81:22" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:17">

        <expr_stmt pos:start="83:9" pos:end="83:21"><expr pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <operator pos:start="83:15" pos:end="83:15">-</operator><name pos:start="83:16" pos:end="83:20">errno</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><call pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:25">qerror_report_err</name><argument_list pos:start="85:26" pos:end="85:30">(<argument pos:start="85:27" pos:end="85:29"><expr pos:start="85:27" pos:end="85:29"><name pos:start="85:27" pos:end="85:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:24"><expr pos:start="87:9" pos:end="87:23"><call pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:18">error_free</name><argument_list pos:start="87:19" pos:end="87:23">(<argument pos:start="87:20" pos:end="87:22"><expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="89:9" pos:end="89:17">goto <name pos:start="89:14" pos:end="89:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:29">/* Create SSH session. */</comment>

    <expr_stmt pos:start="97:5" pos:end="97:40"><expr pos:start="97:5" pos:end="97:39"><name pos:start="97:5" pos:end="97:14"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:14">session</name></name> <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:39"><name pos:start="97:18" pos:end="97:37">libssh2_session_init</name><argument_list pos:start="97:38" pos:end="97:39">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="112:0"><if pos:start="99:5" pos:end="112:0">if <condition pos:start="99:8" pos:end="99:20">(<expr pos:start="99:9" pos:end="99:19"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:19"><name pos:start="99:10" pos:end="99:10">s</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:19">session</name></name></expr>)</condition> <block pos:start="99:22" pos:end="112:0">{<block_content pos:start="101:9" pos:end="105:17">

        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <operator pos:start="101:15" pos:end="101:15">-</operator><name pos:start="101:16" pos:end="101:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:72"><expr pos:start="103:9" pos:end="103:71"><call pos:start="103:9" pos:end="103:71"><name pos:start="103:9" pos:end="103:28">session_error_report</name><argument_list pos:start="103:29" pos:end="103:71">(<argument pos:start="103:30" pos:end="103:30"><expr pos:start="103:30" pos:end="103:30"><name pos:start="103:30" pos:end="103:30">s</name></expr></argument>, <argument pos:start="103:33" pos:end="103:70"><expr pos:start="103:33" pos:end="103:70"><literal type="string" pos:start="103:33" pos:end="103:70">"failed to initialize libssh2 session"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:17">goto <name pos:start="105:14" pos:end="105:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="111:1" pos:end="111:22">#<cpp:directive pos:start="111:2" pos:end="111:3">if</cpp:directive> <expr pos:start="111:5" pos:end="111:22"><name pos:start="111:5" pos:end="111:17">TRACE_LIBSSH2</name> <operator pos:start="111:19" pos:end="111:20">!=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr></cpp:if>

    <expr_stmt pos:start="113:5" pos:end="116:0"><expr pos:start="113:5" pos:end="113:44"><call pos:start="113:5" pos:end="113:44"><name pos:start="113:5" pos:end="113:17">libssh2_trace</name><argument_list pos:start="113:18" pos:end="113:44">(<argument pos:start="113:19" pos:end="113:28"><expr pos:start="113:19" pos:end="113:28"><name pos:start="113:19" pos:end="113:28"><name pos:start="113:19" pos:end="113:19">s</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:28">session</name></name></expr></argument>, <argument pos:start="113:31" pos:end="113:43"><expr pos:start="113:31" pos:end="113:43"><name pos:start="113:31" pos:end="113:43">TRACE_LIBSSH2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="119:5" pos:end="119:55"><expr pos:start="119:5" pos:end="119:54"><name pos:start="119:5" pos:end="119:5">r</name> <operator pos:start="119:7" pos:end="119:7">=</operator> <call pos:start="119:9" pos:end="119:54"><name pos:start="119:9" pos:end="119:33">libssh2_session_handshake</name><argument_list pos:start="119:34" pos:end="119:54">(<argument pos:start="119:35" pos:end="119:44"><expr pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:35">s</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:44">session</name></name></expr></argument>, <argument pos:start="119:47" pos:end="119:53"><expr pos:start="119:47" pos:end="119:53"><name pos:start="119:47" pos:end="119:53"><name pos:start="119:47" pos:end="119:47">s</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:53">sock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="129:5"><if pos:start="121:5" pos:end="129:5">if <condition pos:start="121:8" pos:end="121:15">(<expr pos:start="121:9" pos:end="121:14"><name pos:start="121:9" pos:end="121:9">r</name> <operator pos:start="121:11" pos:end="121:12">!=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>)</condition> <block pos:start="121:17" pos:end="129:5">{<block_content pos:start="123:9" pos:end="127:17">

        <expr_stmt pos:start="123:9" pos:end="123:22"><expr pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:11">ret</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <operator pos:start="123:15" pos:end="123:15">-</operator><name pos:start="123:16" pos:end="123:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:67"><expr pos:start="125:9" pos:end="125:66"><call pos:start="125:9" pos:end="125:66"><name pos:start="125:9" pos:end="125:28">session_error_report</name><argument_list pos:start="125:29" pos:end="125:66">(<argument pos:start="125:30" pos:end="125:30"><expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">s</name></expr></argument>, <argument pos:start="125:33" pos:end="125:65"><expr pos:start="125:33" pos:end="125:65"><literal type="string" pos:start="125:33" pos:end="125:65">"failed to establish SSH session"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="127:9" pos:end="127:17">goto <name pos:start="127:14" pos:end="127:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="133:5" pos:end="133:58">/* Check the remote host's key against known_hosts. */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:62"><expr pos:start="135:5" pos:end="135:61"><name pos:start="135:5" pos:end="135:7">ret</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <call pos:start="135:11" pos:end="135:61"><name pos:start="135:11" pos:end="135:24">check_host_key</name><argument_list pos:start="135:25" pos:end="135:61">(<argument pos:start="135:26" pos:end="135:26"><expr pos:start="135:26" pos:end="135:26"><name pos:start="135:26" pos:end="135:26">s</name></expr></argument>, <argument pos:start="135:29" pos:end="135:32"><expr pos:start="135:29" pos:end="135:32"><name pos:start="135:29" pos:end="135:32">host</name></expr></argument>, <argument pos:start="135:35" pos:end="135:38"><expr pos:start="135:35" pos:end="135:38"><name pos:start="135:35" pos:end="135:38">port</name></expr></argument>, <argument pos:start="135:41" pos:end="135:54"><expr pos:start="135:41" pos:end="135:54"><name pos:start="135:41" pos:end="135:54">host_key_check</name></expr></argument>, <argument pos:start="135:57" pos:end="135:60"><expr pos:start="135:57" pos:end="135:60"><operator pos:start="135:57" pos:end="135:57">&amp;</operator><name pos:start="135:58" pos:end="135:60">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="145:5"><if pos:start="137:5" pos:end="145:5">if <condition pos:start="137:8" pos:end="137:16">(<expr pos:start="137:9" pos:end="137:15"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">&lt;</operator> <literal type="number" pos:start="137:15" pos:end="137:15">0</literal></expr>)</condition> <block pos:start="137:18" pos:end="145:5">{<block_content pos:start="139:9" pos:end="143:17">

        <expr_stmt pos:start="139:9" pos:end="139:31"><expr pos:start="139:9" pos:end="139:30"><call pos:start="139:9" pos:end="139:30"><name pos:start="139:9" pos:end="139:25">qerror_report_err</name><argument_list pos:start="139:26" pos:end="139:30">(<argument pos:start="139:27" pos:end="139:29"><expr pos:start="139:27" pos:end="139:29"><name pos:start="139:27" pos:end="139:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:24"><expr pos:start="141:9" pos:end="141:23"><call pos:start="141:9" pos:end="141:23"><name pos:start="141:9" pos:end="141:18">error_free</name><argument_list pos:start="141:19" pos:end="141:23">(<argument pos:start="141:20" pos:end="141:22"><expr pos:start="141:20" pos:end="141:22"><name pos:start="141:20" pos:end="141:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="143:9" pos:end="143:17">goto <name pos:start="143:14" pos:end="143:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:23">/* Authenticate. */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:32"><expr pos:start="151:5" pos:end="151:31"><name pos:start="151:5" pos:end="151:7">ret</name> <operator pos:start="151:9" pos:end="151:9">=</operator> <call pos:start="151:11" pos:end="151:31"><name pos:start="151:11" pos:end="151:22">authenticate</name><argument_list pos:start="151:23" pos:end="151:31">(<argument pos:start="151:24" pos:end="151:24"><expr pos:start="151:24" pos:end="151:24"><name pos:start="151:24" pos:end="151:24">s</name></expr></argument>, <argument pos:start="151:27" pos:end="151:30"><expr pos:start="151:27" pos:end="151:30"><name pos:start="151:27" pos:end="151:30">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:16">(<expr pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>)</condition> <block pos:start="153:18" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:17">

        <goto pos:start="155:9" pos:end="155:17">goto <name pos:start="155:14" pos:end="155:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:21">/* Start SFTP. */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:44"><expr pos:start="163:5" pos:end="163:43"><name pos:start="163:5" pos:end="163:11"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:11">sftp</name></name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:43"><name pos:start="163:15" pos:end="163:31">libssh2_sftp_init</name><argument_list pos:start="163:32" pos:end="163:43">(<argument pos:start="163:33" pos:end="163:42"><expr pos:start="163:33" pos:end="163:42"><name pos:start="163:33" pos:end="163:42"><name pos:start="163:33" pos:end="163:33">s</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:42">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="173:5"><if pos:start="165:5" pos:end="173:5">if <condition pos:start="165:8" pos:end="165:17">(<expr pos:start="165:9" pos:end="165:16"><operator pos:start="165:9" pos:end="165:9">!</operator><name pos:start="165:10" pos:end="165:16"><name pos:start="165:10" pos:end="165:10">s</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:16">sftp</name></name></expr>)</condition> <block pos:start="165:19" pos:end="173:5">{<block_content pos:start="167:9" pos:end="171:17">

        <expr_stmt pos:start="167:9" pos:end="167:68"><expr pos:start="167:9" pos:end="167:67"><call pos:start="167:9" pos:end="167:67"><name pos:start="167:9" pos:end="167:28">session_error_report</name><argument_list pos:start="167:29" pos:end="167:67">(<argument pos:start="167:30" pos:end="167:30"><expr pos:start="167:30" pos:end="167:30"><name pos:start="167:30" pos:end="167:30">s</name></expr></argument>, <argument pos:start="167:33" pos:end="167:66"><expr pos:start="167:33" pos:end="167:66"><literal type="string" pos:start="167:33" pos:end="167:66">"failed to initialize sftp handle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:22"><expr pos:start="169:9" pos:end="169:21"><name pos:start="169:9" pos:end="169:11">ret</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <operator pos:start="169:15" pos:end="169:15">-</operator><name pos:start="169:16" pos:end="169:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="171:9" pos:end="171:17">goto <name pos:start="171:14" pos:end="171:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="177:5" pos:end="177:31">/* Open the remote file. */</comment>

    <expr_stmt pos:start="179:5" pos:end="181:41"><expr pos:start="179:5" pos:end="181:40"><call pos:start="179:5" pos:end="181:40"><name pos:start="179:5" pos:end="179:11">DPRINTF</name><argument_list pos:start="179:12" pos:end="181:40">(<argument pos:start="179:13" pos:end="179:55"><expr pos:start="179:13" pos:end="179:55"><literal type="string" pos:start="179:13" pos:end="179:55">"opening file %s flags=0x%x creat_mode=0%o"</literal></expr></argument>,

            <argument pos:start="181:13" pos:end="181:16"><expr pos:start="181:13" pos:end="181:16"><name pos:start="181:13" pos:end="181:16">path</name></expr></argument>, <argument pos:start="181:19" pos:end="181:27"><expr pos:start="181:19" pos:end="181:27"><name pos:start="181:19" pos:end="181:27">ssh_flags</name></expr></argument>, <argument pos:start="181:30" pos:end="181:39"><expr pos:start="181:30" pos:end="181:39"><name pos:start="181:30" pos:end="181:39">creat_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:77"><expr pos:start="183:5" pos:end="183:76"><name pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:18">sftp_handle</name></name> <operator pos:start="183:20" pos:end="183:20">=</operator> <call pos:start="183:22" pos:end="183:76"><name pos:start="183:22" pos:end="183:38">libssh2_sftp_open</name><argument_list pos:start="183:39" pos:end="183:76">(<argument pos:start="183:40" pos:end="183:46"><expr pos:start="183:40" pos:end="183:46"><name pos:start="183:40" pos:end="183:46"><name pos:start="183:40" pos:end="183:40">s</name><operator pos:start="183:41" pos:end="183:42">-&gt;</operator><name pos:start="183:43" pos:end="183:46">sftp</name></name></expr></argument>, <argument pos:start="183:49" pos:end="183:52"><expr pos:start="183:49" pos:end="183:52"><name pos:start="183:49" pos:end="183:52">path</name></expr></argument>, <argument pos:start="183:55" pos:end="183:63"><expr pos:start="183:55" pos:end="183:63"><name pos:start="183:55" pos:end="183:63">ssh_flags</name></expr></argument>, <argument pos:start="183:66" pos:end="183:75"><expr pos:start="183:66" pos:end="183:75"><name pos:start="183:66" pos:end="183:75">creat_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="193:5"><if pos:start="185:5" pos:end="193:5">if <condition pos:start="185:8" pos:end="185:24">(<expr pos:start="185:9" pos:end="185:23"><operator pos:start="185:9" pos:end="185:9">!</operator><name pos:start="185:10" pos:end="185:23"><name pos:start="185:10" pos:end="185:10">s</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:23">sftp_handle</name></name></expr>)</condition> <block pos:start="185:26" pos:end="193:5">{<block_content pos:start="187:9" pos:end="191:17">

        <expr_stmt pos:start="187:9" pos:end="187:73"><expr pos:start="187:9" pos:end="187:72"><call pos:start="187:9" pos:end="187:72"><name pos:start="187:9" pos:end="187:28">session_error_report</name><argument_list pos:start="187:29" pos:end="187:72">(<argument pos:start="187:30" pos:end="187:30"><expr pos:start="187:30" pos:end="187:30"><name pos:start="187:30" pos:end="187:30">s</name></expr></argument>, <argument pos:start="187:33" pos:end="187:65"><expr pos:start="187:33" pos:end="187:65"><literal type="string" pos:start="187:33" pos:end="187:65">"failed to open remote file '%s'"</literal></expr></argument>, <argument pos:start="187:68" pos:end="187:71"><expr pos:start="187:68" pos:end="187:71"><name pos:start="187:68" pos:end="187:71">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:22"><expr pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:11">ret</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <operator pos:start="189:15" pos:end="189:15">-</operator><name pos:start="189:16" pos:end="189:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="191:9" pos:end="191:17">goto <name pos:start="191:14" pos:end="191:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:54"><expr pos:start="197:5" pos:end="197:53"><name pos:start="197:5" pos:end="197:5">r</name> <operator pos:start="197:7" pos:end="197:7">=</operator> <call pos:start="197:9" pos:end="197:53"><name pos:start="197:9" pos:end="197:26">libssh2_sftp_fstat</name><argument_list pos:start="197:27" pos:end="197:53">(<argument pos:start="197:28" pos:end="197:41"><expr pos:start="197:28" pos:end="197:41"><name pos:start="197:28" pos:end="197:41"><name pos:start="197:28" pos:end="197:28">s</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:41">sftp_handle</name></name></expr></argument>, <argument pos:start="197:44" pos:end="197:52"><expr pos:start="197:44" pos:end="197:52"><operator pos:start="197:44" pos:end="197:44">&amp;</operator><name pos:start="197:45" pos:end="197:52"><name pos:start="197:45" pos:end="197:45">s</name><operator pos:start="197:46" pos:end="197:47">-&gt;</operator><name pos:start="197:48" pos:end="197:52">attrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="205:5"><if pos:start="199:5" pos:end="205:5">if <condition pos:start="199:8" pos:end="199:14">(<expr pos:start="199:9" pos:end="199:13"><name pos:start="199:9" pos:end="199:9">r</name> <operator pos:start="199:11" pos:end="199:11">&lt;</operator> <literal type="number" pos:start="199:13" pos:end="199:13">0</literal></expr>)</condition> <block pos:start="199:16" pos:end="205:5">{<block_content pos:start="201:9" pos:end="203:23">

        <expr_stmt pos:start="201:9" pos:end="201:63"><expr pos:start="201:9" pos:end="201:62"><call pos:start="201:9" pos:end="201:62"><name pos:start="201:9" pos:end="201:25">sftp_error_report</name><argument_list pos:start="201:26" pos:end="201:62">(<argument pos:start="201:27" pos:end="201:27"><expr pos:start="201:27" pos:end="201:27"><name pos:start="201:27" pos:end="201:27">s</name></expr></argument>, <argument pos:start="201:30" pos:end="201:61"><expr pos:start="201:30" pos:end="201:61"><literal type="string" pos:start="201:30" pos:end="201:61">"failed to read file attributes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="203:9" pos:end="203:23">return <expr pos:start="203:16" pos:end="203:22"><operator pos:start="203:16" pos:end="203:16">-</operator><name pos:start="203:17" pos:end="203:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="209:5" pos:end="213:7">/* Delete the options we've used; any not deleted will cause the

     * block layer to give an error about unused options.

     */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:31"><expr pos:start="215:5" pos:end="215:30"><call pos:start="215:5" pos:end="215:30"><name pos:start="215:5" pos:end="215:13">qdict_del</name><argument_list pos:start="215:14" pos:end="215:30">(<argument pos:start="215:15" pos:end="215:21"><expr pos:start="215:15" pos:end="215:21"><name pos:start="215:15" pos:end="215:21">options</name></expr></argument>, <argument pos:start="215:24" pos:end="215:29"><expr pos:start="215:24" pos:end="215:29"><literal type="string" pos:start="215:24" pos:end="215:29">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:31"><expr pos:start="217:5" pos:end="217:30"><call pos:start="217:5" pos:end="217:30"><name pos:start="217:5" pos:end="217:13">qdict_del</name><argument_list pos:start="217:14" pos:end="217:30">(<argument pos:start="217:15" pos:end="217:21"><expr pos:start="217:15" pos:end="217:21"><name pos:start="217:15" pos:end="217:21">options</name></expr></argument>, <argument pos:start="217:24" pos:end="217:29"><expr pos:start="217:24" pos:end="217:29"><literal type="string" pos:start="217:24" pos:end="217:29">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:31"><expr pos:start="219:5" pos:end="219:30"><call pos:start="219:5" pos:end="219:30"><name pos:start="219:5" pos:end="219:13">qdict_del</name><argument_list pos:start="219:14" pos:end="219:30">(<argument pos:start="219:15" pos:end="219:21"><expr pos:start="219:15" pos:end="219:21"><name pos:start="219:15" pos:end="219:21">options</name></expr></argument>, <argument pos:start="219:24" pos:end="219:29"><expr pos:start="219:24" pos:end="219:29"><literal type="string" pos:start="219:24" pos:end="219:29">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:31"><expr pos:start="221:5" pos:end="221:30"><call pos:start="221:5" pos:end="221:30"><name pos:start="221:5" pos:end="221:13">qdict_del</name><argument_list pos:start="221:14" pos:end="221:30">(<argument pos:start="221:15" pos:end="221:21"><expr pos:start="221:15" pos:end="221:21"><name pos:start="221:15" pos:end="221:21">options</name></expr></argument>, <argument pos:start="221:24" pos:end="221:29"><expr pos:start="221:24" pos:end="221:29"><literal type="string" pos:start="221:24" pos:end="221:29">"path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:41"><expr pos:start="223:5" pos:end="223:40"><call pos:start="223:5" pos:end="223:40"><name pos:start="223:5" pos:end="223:13">qdict_del</name><argument_list pos:start="223:14" pos:end="223:40">(<argument pos:start="223:15" pos:end="223:21"><expr pos:start="223:15" pos:end="223:21"><name pos:start="223:15" pos:end="223:21">options</name></expr></argument>, <argument pos:start="223:24" pos:end="223:39"><expr pos:start="223:24" pos:end="223:39"><literal type="string" pos:start="223:24" pos:end="223:39">"host_key_check"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="227:5" pos:end="227:13">return <expr pos:start="227:12" pos:end="227:12"><literal type="number" pos:start="227:12" pos:end="227:12">0</literal></expr>;</return>



 <label pos:start="231:2" pos:end="231:5"><name pos:start="231:2" pos:end="231:4">err</name>:</label>

    <if_stmt pos:start="233:5" pos:end="237:5"><if pos:start="233:5" pos:end="237:5">if <condition pos:start="233:8" pos:end="233:23">(<expr pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:9">s</name><operator pos:start="233:10" pos:end="233:11">-&gt;</operator><name pos:start="233:12" pos:end="233:22">sftp_handle</name></name></expr>)</condition> <block pos:start="233:25" pos:end="237:5">{<block_content pos:start="235:9" pos:end="235:43">

        <expr_stmt pos:start="235:9" pos:end="235:43"><expr pos:start="235:9" pos:end="235:42"><call pos:start="235:9" pos:end="235:42"><name pos:start="235:9" pos:end="235:26">libssh2_sftp_close</name><argument_list pos:start="235:27" pos:end="235:42">(<argument pos:start="235:28" pos:end="235:41"><expr pos:start="235:28" pos:end="235:41"><name pos:start="235:28" pos:end="235:41"><name pos:start="235:28" pos:end="235:28">s</name><operator pos:start="235:29" pos:end="235:30">-&gt;</operator><name pos:start="235:31" pos:end="235:41">sftp_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:26"><expr pos:start="239:5" pos:end="239:25"><name pos:start="239:5" pos:end="239:18"><name pos:start="239:5" pos:end="239:5">s</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:18">sftp_handle</name></name> <operator pos:start="239:20" pos:end="239:20">=</operator> <name pos:start="239:22" pos:end="239:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="241:5" pos:end="245:5"><if pos:start="241:5" pos:end="245:5">if <condition pos:start="241:8" pos:end="241:16">(<expr pos:start="241:9" pos:end="241:15"><name pos:start="241:9" pos:end="241:15"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:15">sftp</name></name></expr>)</condition> <block pos:start="241:18" pos:end="245:5">{<block_content pos:start="243:9" pos:end="243:39">

        <expr_stmt pos:start="243:9" pos:end="243:39"><expr pos:start="243:9" pos:end="243:38"><call pos:start="243:9" pos:end="243:38"><name pos:start="243:9" pos:end="243:29">libssh2_sftp_shutdown</name><argument_list pos:start="243:30" pos:end="243:38">(<argument pos:start="243:31" pos:end="243:37"><expr pos:start="243:31" pos:end="243:37"><name pos:start="243:31" pos:end="243:37"><name pos:start="243:31" pos:end="243:31">s</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:37">sftp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:19"><expr pos:start="247:5" pos:end="247:18"><name pos:start="247:5" pos:end="247:11"><name pos:start="247:5" pos:end="247:5">s</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:11">sftp</name></name> <operator pos:start="247:13" pos:end="247:13">=</operator> <name pos:start="247:15" pos:end="247:18">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="249:5" pos:end="259:5"><if pos:start="249:5" pos:end="259:5">if <condition pos:start="249:8" pos:end="249:19">(<expr pos:start="249:9" pos:end="249:18"><name pos:start="249:9" pos:end="249:18"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:18">session</name></name></expr>)</condition> <block pos:start="249:21" pos:end="259:5">{<block_content pos:start="251:9" pos:end="257:41">

        <expr_stmt pos:start="251:9" pos:end="255:63"><expr pos:start="251:9" pos:end="255:62"><call pos:start="251:9" pos:end="255:62"><name pos:start="251:9" pos:end="251:34">libssh2_session_disconnect</name><argument_list pos:start="251:35" pos:end="255:62">(<argument pos:start="251:36" pos:end="251:45"><expr pos:start="251:36" pos:end="251:45"><name pos:start="251:36" pos:end="251:45"><name pos:start="251:36" pos:end="251:36">s</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:45">session</name></name></expr></argument>,

                                   <argument pos:start="253:36" pos:end="255:61"><expr pos:start="253:36" pos:end="255:61"><literal type="string" pos:start="253:36" pos:end="253:59">"from qemu ssh client: "</literal>

                                   <literal type="string" pos:start="255:36" pos:end="255:61">"error opening connection"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:41"><expr pos:start="257:9" pos:end="257:40"><call pos:start="257:9" pos:end="257:40"><name pos:start="257:9" pos:end="257:28">libssh2_session_free</name><argument_list pos:start="257:29" pos:end="257:40">(<argument pos:start="257:30" pos:end="257:39"><expr pos:start="257:30" pos:end="257:39"><name pos:start="257:30" pos:end="257:39"><name pos:start="257:30" pos:end="257:30">s</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:39">session</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:22"><expr pos:start="261:5" pos:end="261:21"><name pos:start="261:5" pos:end="261:14"><name pos:start="261:5" pos:end="261:5">s</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:14">session</name></name> <operator pos:start="261:16" pos:end="261:16">=</operator> <name pos:start="261:18" pos:end="261:21">NULL</name></expr>;</expr_stmt>



    <return pos:start="265:5" pos:end="265:15">return <expr pos:start="265:12" pos:end="265:14"><name pos:start="265:12" pos:end="265:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
