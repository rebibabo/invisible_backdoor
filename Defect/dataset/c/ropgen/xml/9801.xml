<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9801.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">bdrv_qed_invalidate_cache</name><parameter_list pos:start="1:38" pos:end="1:73">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:65">Error</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier><modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVQEDState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:20">local_err</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:18">bdrv_qed_close</name><argument_list pos:start="13:19" pos:end="13:22">(<argument pos:start="13:20" pos:end="13:21"><expr pos:start="13:20" pos:end="13:21"><name pos:start="13:20" pos:end="13:21">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><call pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:38">(<argument pos:start="17:12" pos:end="17:12"><expr pos:start="17:12" pos:end="17:12"><name pos:start="17:12" pos:end="17:12">s</name></expr></argument>, <argument pos:start="17:15" pos:end="17:15"><expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></argument>, <argument pos:start="17:18" pos:end="17:37"><expr pos:start="17:18" pos:end="17:37"><sizeof pos:start="17:18" pos:end="17:37">sizeof<argument_list pos:start="17:24" pos:end="17:37">(<argument pos:start="17:25" pos:end="17:36"><expr pos:start="17:25" pos:end="17:36"><name pos:start="17:25" pos:end="17:36">BDRVQEDState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:65"><expr pos:start="19:5" pos:end="19:64"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:64"><name pos:start="19:11" pos:end="19:26">bdrv_qed_do_open</name><argument_list pos:start="19:27" pos:end="19:64">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">bs</name></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">NULL</name></expr></argument>, <argument pos:start="19:38" pos:end="19:51"><expr pos:start="19:38" pos:end="19:51"><name pos:start="19:38" pos:end="19:51"><name pos:start="19:38" pos:end="19:39">bs</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:51">open_flags</name></name></expr></argument>, <argument pos:start="19:54" pos:end="19:63"><expr pos:start="19:54" pos:end="19:63"><operator pos:start="19:54" pos:end="19:54">&amp;</operator><name pos:start="19:55" pos:end="19:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="35:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17">local_err</name></expr>)</condition> <block pos:start="21:20" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:15">

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><call pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:23">error_propagate</name><argument_list pos:start="23:24" pos:end="23:40">(<argument pos:start="23:25" pos:end="23:28"><expr pos:start="23:25" pos:end="23:28"><name pos:start="23:25" pos:end="23:28">errp</name></expr></argument>, <argument pos:start="23:31" pos:end="23:39"><expr pos:start="23:31" pos:end="23:39"><name pos:start="23:31" pos:end="23:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:60"><expr pos:start="25:9" pos:end="25:59"><call pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:21">error_prepend</name><argument_list pos:start="25:22" pos:end="25:59">(<argument pos:start="25:23" pos:end="25:26"><expr pos:start="25:23" pos:end="25:26"><name pos:start="25:23" pos:end="25:26">errp</name></expr></argument>, <argument pos:start="25:29" pos:end="25:58"><expr pos:start="25:29" pos:end="25:58"><literal type="string" pos:start="25:29" pos:end="25:58">"Could not reopen qed layer: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="29:7" pos:end="35:5">else if <condition pos:start="29:15" pos:end="29:23">(<expr pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:18">ret</name> <operator pos:start="29:20" pos:end="29:20">&lt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>)</condition> <block pos:start="29:25" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><call pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:24">error_setg_errno</name><argument_list pos:start="31:25" pos:end="31:66">(<argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">errp</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><operator pos:start="31:32" pos:end="31:32">-</operator><name pos:start="31:33" pos:end="31:35">ret</name></expr></argument>, <argument pos:start="31:38" pos:end="31:65"><expr pos:start="31:38" pos:end="31:65"><literal type="string" pos:start="31:38" pos:end="31:65">"Could not reopen qed layer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
