<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22523.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">rgb24tobgr24</name>)<parameter_list pos:start="1:40" pos:end="1:88">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">dst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:87"><decl pos:start="1:75" pos:end="1:87"><type pos:start="1:75" pos:end="1:87"><name pos:start="1:75" pos:end="1:78">long</name></type> <name pos:start="1:80" pos:end="1:87">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:5">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>

<cpp:if pos:start="7:1" pos:end="7:24">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">x86_reg</name></type> <name pos:start="9:13" pos:end="9:20">mmx_size</name><init pos:start="9:21" pos:end="9:35">= <expr pos:start="9:23" pos:end="9:35"><literal type="number" pos:start="9:23" pos:end="9:26">23</literal> <operator pos:start="9:26" pos:end="9:26">-</operator> <name pos:start="9:28" pos:end="9:35">src_size</name></expr></init></decl>;</decl_stmt>

    <asm pos:start="11:5" pos:end="95:6">__asm__ <specifier pos:start="11:13" pos:end="11:20">volatile</specifier> (

        "test             %%"REG_a", %%"REG_a"          \n\t"

        "jns                     2f                     \n\t"

        "movq     "MANGLE(mask24r)", %%mm5              \n\t"

        "movq     "MANGLE(mask24g)", %%mm6              \n\t"

        "movq     "MANGLE(mask24b)", %%mm7              \n\t"

        ".p2align                 4                     \n\t"

        "1:                                             \n\t"

        PREFETCH" 32(%1, %%"REG_a")                     \n\t"

        "movq       (%1, %%"REG_a"), %%mm0              \n\t" <comment type="line" pos:start="29:63" pos:end="29:75">// BGR BGR BG</comment>

        "movq       (%1, %%"REG_a"), %%mm1              \n\t" <comment type="line" pos:start="31:63" pos:end="31:75">// BGR BGR BG</comment>

        "movq      2(%1, %%"REG_a"), %%mm2              \n\t" <comment type="line" pos:start="33:63" pos:end="33:76">// R BGR BGR B</comment>

        "psllq                  $16, %%mm0              \n\t" <comment type="line" pos:start="35:63" pos:end="35:75">// 00 BGR BGR</comment>

        "pand                 %%mm5, %%mm0              \n\t"

        "pand                 %%mm6, %%mm1              \n\t"

        "pand                 %%mm7, %%mm2              \n\t"

        "por                  %%mm0, %%mm1              \n\t"

        "por                  %%mm2, %%mm1              \n\t"

        "movq      6(%1, %%"REG_a"), %%mm0              \n\t" <comment type="line" pos:start="47:63" pos:end="47:75">// BGR BGR BG</comment>

        MOVNTQ"               %%mm1,   (%2, %%"REG_a")  \n\t" <comment type="line" pos:start="49:63" pos:end="49:75">// RGB RGB RG</comment>

        "movq      8(%1, %%"REG_a"), %%mm1              \n\t" <comment type="line" pos:start="51:63" pos:end="51:76">// R BGR BGR B</comment>

        "movq     10(%1, %%"REG_a"), %%mm2              \n\t" <comment type="line" pos:start="53:63" pos:end="53:75">// GR BGR BGR</comment>

        "pand                 %%mm7, %%mm0              \n\t"

        "pand                 %%mm5, %%mm1              \n\t"

        "pand                 %%mm6, %%mm2              \n\t"

        "por                  %%mm0, %%mm1              \n\t"

        "por                  %%mm2, %%mm1              \n\t"

        "movq     14(%1, %%"REG_a"), %%mm0              \n\t" <comment type="line" pos:start="65:63" pos:end="65:76">// R BGR BGR B</comment>

        MOVNTQ"               %%mm1,  8(%2, %%"REG_a")  \n\t" <comment type="line" pos:start="67:63" pos:end="67:76">// B RGB RGB R</comment>

        "movq     16(%1, %%"REG_a"), %%mm1              \n\t" <comment type="line" pos:start="69:63" pos:end="69:75">// GR BGR BGR</comment>

        "movq     18(%1, %%"REG_a"), %%mm2              \n\t" <comment type="line" pos:start="71:63" pos:end="71:75">// BGR BGR BG</comment>

        "pand                 %%mm6, %%mm0              \n\t"

        "pand                 %%mm7, %%mm1              \n\t"

        "pand                 %%mm5, %%mm2              \n\t"

        "por                  %%mm0, %%mm1              \n\t"

        "por                  %%mm2, %%mm1              \n\t"

        MOVNTQ"               %%mm1, 16(%2, %%"REG_a")  \n\t"

        "add                    $24, %%"REG_a"          \n\t"

        " js                     1b                     \n\t"

        "2:                                             \n\t"

        : "+a" (mmx_size)

        : "r" (src-mmx_size), "r"(dst-mmx_size)

    );</asm>



    <asm pos:start="99:5" pos:end="99:40">__asm__ <specifier pos:start="99:13" pos:end="99:20">volatile</specifier>(SFENCE:::"memory");</asm>

    <asm pos:start="101:5" pos:end="101:38">__asm__ <specifier pos:start="101:13" pos:end="101:20">volatile</specifier>(EMMS:::"memory");</asm>



    <if_stmt pos:start="105:5" pos:end="105:29"><if pos:start="105:5" pos:end="105:29">if <condition pos:start="105:8" pos:end="105:21">(<expr pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:16">mmx_size</name><operator pos:start="105:17" pos:end="105:18">==</operator><literal type="number" pos:start="105:19" pos:end="105:20">23</literal></expr>)</condition><block type="pseudo" pos:start="105:23" pos:end="105:29"><block_content pos:start="105:23" pos:end="105:29"> <return pos:start="105:23" pos:end="105:29">return;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="105:31" pos:end="105:59">//finished, was multiple of 8</comment>



    <expr_stmt pos:start="109:5" pos:end="109:19"><expr pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">src</name><operator pos:start="109:8" pos:end="109:9">+=</operator> <name pos:start="109:11" pos:end="109:18">src_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:19"><expr pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:7">dst</name><operator pos:start="111:8" pos:end="111:9">+=</operator> <name pos:start="111:11" pos:end="111:18">src_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:12">src_size</name><operator pos:start="113:13" pos:end="113:13">=</operator> <literal type="number" pos:start="113:15" pos:end="113:17">23</literal><operator pos:start="113:17" pos:end="113:17">-</operator><name pos:start="113:18" pos:end="113:25">mmx_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:19"><expr pos:start="115:5" pos:end="115:18"><name pos:start="115:5" pos:end="115:7">src</name><operator pos:start="115:8" pos:end="115:9">-=</operator> <name pos:start="115:11" pos:end="115:18">src_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="120:0"><expr pos:start="117:5" pos:end="117:18"><name pos:start="117:5" pos:end="117:7">dst</name><operator pos:start="117:8" pos:end="117:9">-=</operator> <name pos:start="117:11" pos:end="117:18">src_size</name></expr>;</expr_stmt>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

    <for pos:start="121:5" pos:end="133:5">for <control pos:start="121:9" pos:end="121:31">(<init pos:start="121:10" pos:end="121:13"><expr pos:start="121:10" pos:end="121:12"><name pos:start="121:10" pos:end="121:10">i</name><operator pos:start="121:11" pos:end="121:11">=</operator><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</init> <condition pos:start="121:15" pos:end="121:25"><expr pos:start="121:15" pos:end="121:24"><name pos:start="121:15" pos:end="121:15">i</name><operator pos:start="121:16" pos:end="121:16">&lt;</operator><name pos:start="121:17" pos:end="121:24">src_size</name></expr>;</condition> <incr pos:start="121:27" pos:end="121:30"><expr pos:start="121:27" pos:end="121:30"><name pos:start="121:27" pos:end="121:27">i</name><operator pos:start="121:28" pos:end="121:29">+=</operator><literal type="number" pos:start="121:30" pos:end="121:30">3</literal></expr></incr>)</control> <block pos:start="121:33" pos:end="133:5">{<block_content pos:start="123:9" pos:end="131:23">

        <decl_stmt pos:start="123:9" pos:end="123:27"><decl pos:start="123:9" pos:end="123:26"><type pos:start="123:9" pos:end="123:24"><specifier pos:start="123:9" pos:end="123:16">register</specifier> <name pos:start="123:18" pos:end="123:24">uint8_t</name></type> <name pos:start="123:26" pos:end="123:26">x</name></decl>;</decl_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:32"><expr pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:9">x</name>          <operator pos:start="125:20" pos:end="125:20">=</operator> <name pos:start="125:22" pos:end="125:31"><name pos:start="125:22" pos:end="125:24">src</name><index pos:start="125:25" pos:end="125:31">[<expr pos:start="125:26" pos:end="125:30"><name pos:start="125:26" pos:end="125:26">i</name> <operator pos:start="125:28" pos:end="125:28">+</operator> <literal type="number" pos:start="125:30" pos:end="125:30">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:32"><expr pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:18"><name pos:start="127:9" pos:end="127:11">dst</name><index pos:start="127:12" pos:end="127:18">[<expr pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:13">i</name> <operator pos:start="127:15" pos:end="127:15">+</operator> <literal type="number" pos:start="127:17" pos:end="127:17">1</literal></expr>]</index></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:31"><name pos:start="127:22" pos:end="127:24">src</name><index pos:start="127:25" pos:end="127:31">[<expr pos:start="127:26" pos:end="127:30"><name pos:start="127:26" pos:end="127:26">i</name> <operator pos:start="127:28" pos:end="127:28">+</operator> <literal type="number" pos:start="127:30" pos:end="127:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:32"><expr pos:start="129:9" pos:end="129:31"><name pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:11">dst</name><index pos:start="129:12" pos:end="129:18">[<expr pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:13">i</name> <operator pos:start="129:15" pos:end="129:15">+</operator> <literal type="number" pos:start="129:17" pos:end="129:17">2</literal></expr>]</index></name> <operator pos:start="129:20" pos:end="129:20">=</operator> <name pos:start="129:22" pos:end="129:31"><name pos:start="129:22" pos:end="129:24">src</name><index pos:start="129:25" pos:end="129:31">[<expr pos:start="129:26" pos:end="129:30"><name pos:start="129:26" pos:end="129:26">i</name> <operator pos:start="129:28" pos:end="129:28">+</operator> <literal type="number" pos:start="129:30" pos:end="129:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:11">dst</name><index pos:start="131:12" pos:end="131:18">[<expr pos:start="131:13" pos:end="131:17"><name pos:start="131:13" pos:end="131:13">i</name> <operator pos:start="131:15" pos:end="131:15">+</operator> <literal type="number" pos:start="131:17" pos:end="131:17">0</literal></expr>]</index></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:22">x</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
