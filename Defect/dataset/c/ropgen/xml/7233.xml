<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7233.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">pci_device_hot_remove</name><parameter_list pos:start="1:33" pos:end="1:68">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:40">Monitor</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">mon</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:67"><decl pos:start="1:48" pos:end="1:67"><type pos:start="1:48" pos:end="1:67"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:67">pci_addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">dom</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">bus</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:17">slot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:59">(<expr pos:start="15:9" pos:end="15:58"><call pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:24">pci_read_devaddr</name><argument_list pos:start="15:25" pos:end="15:58">(<argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">mon</name></expr></argument>, <argument pos:start="15:31" pos:end="15:38"><expr pos:start="15:31" pos:end="15:38"><name pos:start="15:31" pos:end="15:38">pci_addr</name></expr></argument>, <argument pos:start="15:41" pos:end="15:44"><expr pos:start="15:41" pos:end="15:44"><operator pos:start="15:41" pos:end="15:41">&amp;</operator><name pos:start="15:42" pos:end="15:44">dom</name></expr></argument>, <argument pos:start="15:47" pos:end="15:50"><expr pos:start="15:47" pos:end="15:50"><operator pos:start="15:47" pos:end="15:47">&amp;</operator><name pos:start="15:48" pos:end="15:50">bus</name></expr></argument>, <argument pos:start="15:53" pos:end="15:57"><expr pos:start="15:53" pos:end="15:57"><operator pos:start="15:53" pos:end="15:53">&amp;</operator><name pos:start="15:54" pos:end="15:57">slot</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:61" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:73"><expr pos:start="23:5" pos:end="23:72"><name pos:start="23:5" pos:end="23:5">d</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:72"><name pos:start="23:9" pos:end="23:23">pci_find_device</name><argument_list pos:start="23:24" pos:end="23:72">(<argument pos:start="23:25" pos:end="23:46"><expr pos:start="23:25" pos:end="23:46"><call pos:start="23:25" pos:end="23:46"><name pos:start="23:25" pos:end="23:41">pci_find_root_bus</name><argument_list pos:start="23:42" pos:end="23:46">(<argument pos:start="23:43" pos:end="23:45"><expr pos:start="23:43" pos:end="23:45"><name pos:start="23:43" pos:end="23:45">dom</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:49" pos:end="23:51"><expr pos:start="23:49" pos:end="23:51"><name pos:start="23:49" pos:end="23:51">bus</name></expr></argument>, <argument pos:start="23:54" pos:end="23:71"><expr pos:start="23:54" pos:end="23:71"><call pos:start="23:54" pos:end="23:71"><name pos:start="23:54" pos:end="23:62">PCI_DEVFN</name><argument_list pos:start="23:63" pos:end="23:71">(<argument pos:start="23:64" pos:end="23:67"><expr pos:start="23:64" pos:end="23:67"><name pos:start="23:64" pos:end="23:67">slot</name></expr></argument>, <argument pos:start="23:70" pos:end="23:70"><expr pos:start="23:70" pos:end="23:70"><literal type="number" pos:start="23:70" pos:end="23:70">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:11">(<expr pos:start="25:9" pos:end="25:10"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:10">d</name></expr>)</condition> <block pos:start="25:13" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><call pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:22">monitor_printf</name><argument_list pos:start="27:23" pos:end="27:52">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">mon</name></expr></argument>, <argument pos:start="27:29" pos:end="27:45"><expr pos:start="27:29" pos:end="27:45"><literal type="string" pos:start="27:29" pos:end="27:45">"slot %d empty\n"</literal></expr></argument>, <argument pos:start="27:48" pos:end="27:51"><expr pos:start="27:48" pos:end="27:51"><name pos:start="27:48" pos:end="27:51">slot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><call pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:15">qdev_unplug</name><argument_list pos:start="35:16" pos:end="35:37">(<argument pos:start="35:17" pos:end="35:24"><expr pos:start="35:17" pos:end="35:24"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:18">d</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:24">qdev</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:36"><expr pos:start="35:27" pos:end="35:36"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:36">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:33">(<expr pos:start="37:9" pos:end="37:32"><call pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:20">error_is_set</name><argument_list pos:start="37:21" pos:end="37:32">(<argument pos:start="37:22" pos:end="37:31"><expr pos:start="37:22" pos:end="37:31"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:31">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:35" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:18">

        <expr_stmt pos:start="39:9" pos:end="39:65"><expr pos:start="39:9" pos:end="39:64"><call pos:start="39:9" pos:end="39:64"><name pos:start="39:9" pos:end="39:22">monitor_printf</name><argument_list pos:start="39:23" pos:end="39:64">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">mon</name></expr></argument>, <argument pos:start="39:29" pos:end="39:34"><expr pos:start="39:29" pos:end="39:34"><literal type="string" pos:start="39:29" pos:end="39:34">"%s\n"</literal></expr></argument>, <argument pos:start="39:37" pos:end="39:63"><expr pos:start="39:37" pos:end="39:63"><call pos:start="39:37" pos:end="39:63"><name pos:start="39:37" pos:end="39:52">error_get_pretty</name><argument_list pos:start="39:53" pos:end="39:63">(<argument pos:start="39:54" pos:end="39:62"><expr pos:start="39:54" pos:end="39:62"><name pos:start="39:54" pos:end="39:62">local_err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><call pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:18">error_free</name><argument_list pos:start="41:19" pos:end="41:29">(<argument pos:start="41:20" pos:end="41:28"><expr pos:start="41:20" pos:end="41:28"><name pos:start="41:20" pos:end="41:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
