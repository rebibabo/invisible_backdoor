<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3825.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">monitor_puts</name><parameter_list pos:start="1:25" pos:end="1:55">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:32">Monitor</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">mon</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:10">c</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="31:5">for<control pos:start="9:8" pos:end="9:11">(<init pos:start="9:9" pos:end="9:9">;</init><condition pos:start="9:10" pos:end="9:10">;</condition><incr/>)</control> <block pos:start="9:13" pos:end="31:5">{<block_content pos:start="11:9" pos:end="29:31">

        <expr_stmt pos:start="11:9" pos:end="11:60"><expr pos:start="11:9" pos:end="11:59"><call pos:start="11:9" pos:end="11:59"><name pos:start="11:9" pos:end="11:14">assert</name><argument_list pos:start="11:15" pos:end="11:59">(<argument pos:start="11:16" pos:end="11:58"><expr pos:start="11:16" pos:end="11:58"><name pos:start="11:16" pos:end="11:32"><name pos:start="11:16" pos:end="11:18">mon</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:32">outbuf_index</name></name> <operator pos:start="11:34" pos:end="11:34">&lt;</operator> <sizeof pos:start="11:36" pos:end="11:54">sizeof<argument_list pos:start="11:42" pos:end="11:54">(<argument pos:start="11:43" pos:end="11:53"><expr pos:start="11:43" pos:end="11:53"><name pos:start="11:43" pos:end="11:53"><name pos:start="11:43" pos:end="11:45">mon</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:53">outbuf</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="11:56" pos:end="11:56">-</operator> <literal type="number" pos:start="11:58" pos:end="11:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:19"><expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:9">c</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <operator pos:start="13:13" pos:end="13:13">*</operator><name pos:start="13:14" pos:end="13:16">str</name><operator pos:start="13:17" pos:end="13:18">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:18"><if pos:start="15:9" pos:end="17:18">if <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:13">c</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <literal type="char" pos:start="15:18" pos:end="15:21">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:18"><block_content pos:start="17:13" pos:end="17:18">

            <break pos:start="17:13" pos:end="17:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="21:52"><if pos:start="19:9" pos:end="21:52">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:13">c</name> <operator pos:start="19:15" pos:end="19:16">==</operator> <literal type="char" pos:start="19:18" pos:end="19:21">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:52"><block_content pos:start="21:13" pos:end="21:52">

            <expr_stmt pos:start="21:13" pos:end="21:52"><expr pos:start="21:13" pos:end="21:51"><name pos:start="21:13" pos:end="21:44"><name pos:start="21:13" pos:end="21:15">mon</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">outbuf</name><index pos:start="21:24" pos:end="21:44">[<expr pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:41"><name pos:start="21:25" pos:end="21:27">mon</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:41">outbuf_index</name></name><operator pos:start="21:42" pos:end="21:43">++</operator></expr>]</index></name> <operator pos:start="21:46" pos:end="21:46">=</operator> <literal type="char" pos:start="21:48" pos:end="21:51">'\r'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:11">mon</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:19">outbuf</name><index pos:start="23:20" pos:end="23:40">[<expr pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:37"><name pos:start="23:21" pos:end="23:23">mon</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:37">outbuf_index</name></name><operator pos:start="23:38" pos:end="23:39">++</operator></expr>]</index></name> <operator pos:start="23:42" pos:end="23:42">=</operator> <name pos:start="23:44" pos:end="23:44">c</name></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:31"><if pos:start="25:9" pos:end="29:31">if <condition pos:start="25:12" pos:end="27:25">(<expr pos:start="25:13" pos:end="27:24"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:15">mon</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:29">outbuf_index</name></name> <operator pos:start="25:31" pos:end="25:32">&gt;=</operator> <operator pos:start="25:34" pos:end="25:34">(</operator><sizeof pos:start="25:35" pos:end="25:53">sizeof<argument_list pos:start="25:41" pos:end="25:53">(<argument pos:start="25:42" pos:end="25:52"><expr pos:start="25:42" pos:end="25:52"><name pos:start="25:42" pos:end="25:52"><name pos:start="25:42" pos:end="25:44">mon</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:52">outbuf</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="25:55" pos:end="25:55">-</operator> <literal type="number" pos:start="25:57" pos:end="25:57">1</literal><operator pos:start="25:58" pos:end="25:58">)</operator>

            <operator pos:start="27:13" pos:end="27:14">||</operator> <name pos:start="27:16" pos:end="27:16">c</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="char" pos:start="27:21" pos:end="27:24">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:31"><block_content pos:start="29:13" pos:end="29:31">

            <expr_stmt pos:start="29:13" pos:end="29:31"><expr pos:start="29:13" pos:end="29:30"><call pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:25">monitor_flush</name><argument_list pos:start="29:26" pos:end="29:30">(<argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">mon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
