<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8831.c" pos:tabs="8"><function pos:start="1:1" pos:end="54:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">test_bmdma_short_prdt</name><parameter_list pos:start="1:34" pos:end="1:39">(<parameter pos:start="1:35" pos:end="1:38"><decl pos:start="1:35" pos:end="1:38"><type pos:start="1:35" pos:end="1:38"><name pos:start="1:35" pos:end="1:38">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="54:1">{<block_content pos:start="5:5" pos:end="51:72">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">QPCIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">QPCIBar</name></type> <name pos:start="7:13" pos:end="7:21">bmdma_bar</name></decl>, <decl pos:start="7:24" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:24" pos:end="7:30">ide_bar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:18">status</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="23:6"><decl pos:start="13:5" pos:end="23:5"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">PrdtEntry</name></type> <name pos:start="13:15" pos:end="13:20"><name pos:start="13:15" pos:end="13:18">prdt</name><index pos:start="13:19" pos:end="13:20">[]</index></name> <init pos:start="13:22" pos:end="23:5">= <expr pos:start="13:24" pos:end="23:5"><block pos:start="13:24" pos:end="23:5">{

        <expr pos:start="15:9" pos:end="21:9"><block pos:start="15:9" pos:end="21:9">{

            <expr pos:start="17:13" pos:end="17:21"><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:17">addr</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>,

            <expr pos:start="19:13" pos:end="19:48"><operator pos:start="19:13" pos:end="19:13">.</operator><name pos:start="19:14" pos:end="19:17">size</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:48"><name pos:start="19:21" pos:end="19:31">cpu_to_le32</name><argument_list pos:start="19:32" pos:end="19:48">(<argument pos:start="19:33" pos:end="19:47"><expr pos:start="19:33" pos:end="19:47"><literal type="number" pos:start="19:33" pos:end="19:36">0x10</literal> <operator pos:start="19:38" pos:end="19:38">|</operator> <name pos:start="19:40" pos:end="19:47">PRDT_EOT</name></expr></argument>)</argument_list></call></expr>,

        }</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:7">dev</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:46"><name pos:start="27:11" pos:end="27:24">get_pci_device</name><argument_list pos:start="27:25" pos:end="27:46">(<argument pos:start="27:26" pos:end="27:35"><expr pos:start="27:26" pos:end="27:35"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:35">bmdma_bar</name></expr></argument>, <argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><operator pos:start="27:38" pos:end="27:38">&amp;</operator><name pos:start="27:39" pos:end="27:45">ide_bar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:24">/* Normal request */</comment>

    <expr_stmt pos:start="33:5" pos:end="35:60"><expr pos:start="33:5" pos:end="35:59"><name pos:start="33:5" pos:end="33:10">status</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="35:59"><name pos:start="33:14" pos:end="33:29">send_dma_request</name><argument_list pos:start="33:30" pos:end="35:59">(<argument pos:start="33:31" pos:end="33:42"><expr pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:42">CMD_READ_DMA</name></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">0</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:48"><expr pos:start="33:48" pos:end="33:48"><literal type="number" pos:start="33:48" pos:end="33:48">1</literal></expr></argument>,

                              <argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><name pos:start="35:31" pos:end="35:34">prdt</name></expr></argument>, <argument pos:start="35:37" pos:end="35:52"><expr pos:start="35:37" pos:end="35:52"><call pos:start="35:37" pos:end="35:52"><name pos:start="35:37" pos:end="35:46">ARRAY_SIZE</name><argument_list pos:start="35:47" pos:end="35:52">(<argument pos:start="35:48" pos:end="35:51"><expr pos:start="35:48" pos:end="35:51"><name pos:start="35:48" pos:end="35:51">prdt</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:55" pos:end="35:58"><expr pos:start="35:55" pos:end="35:58"><name pos:start="35:55" pos:end="35:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:19">g_assert_cmphex</name><argument_list pos:start="37:20" pos:end="37:34">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">status</name></expr></argument>, <argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><operator pos:start="37:29" pos:end="37:30">==</operator></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:72"><expr pos:start="39:5" pos:end="39:71"><call pos:start="39:5" pos:end="39:71"><name pos:start="39:5" pos:end="39:20">assert_bit_clear</name><argument_list pos:start="39:21" pos:end="39:71">(<argument pos:start="39:22" pos:end="39:60"><expr pos:start="39:22" pos:end="39:60"><call pos:start="39:22" pos:end="39:60"><name pos:start="39:22" pos:end="39:34">qpci_io_readb</name><argument_list pos:start="39:35" pos:end="39:60">(<argument pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:38">dev</name></expr></argument>, <argument pos:start="39:41" pos:end="39:47"><expr pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:47">ide_bar</name></expr></argument>, <argument pos:start="39:50" pos:end="39:59"><expr pos:start="39:50" pos:end="39:59"><name pos:start="39:50" pos:end="39:59">reg_status</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:63" pos:end="39:70"><expr pos:start="39:63" pos:end="39:70"><name pos:start="39:63" pos:end="39:64">DF</name> <operator pos:start="39:66" pos:end="39:66">|</operator> <name pos:start="39:68" pos:end="39:70">ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:47">/* Abort the request before it completes */</comment>

    <expr_stmt pos:start="45:5" pos:end="47:60"><expr pos:start="45:5" pos:end="47:59"><name pos:start="45:5" pos:end="45:10">status</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="47:59"><name pos:start="45:14" pos:end="45:29">send_dma_request</name><argument_list pos:start="45:30" pos:end="47:59">(<argument pos:start="45:31" pos:end="45:55"><expr pos:start="45:31" pos:end="45:55"><name pos:start="45:31" pos:end="45:42">CMD_READ_DMA</name> <operator pos:start="45:44" pos:end="45:44">|</operator> <name pos:start="45:46" pos:end="45:55">CMDF_ABORT</name></expr></argument>, <argument pos:start="45:58" pos:end="45:58"><expr pos:start="45:58" pos:end="45:58"><literal type="number" pos:start="45:58" pos:end="45:58">0</literal></expr></argument>, <argument pos:start="45:61" pos:end="45:61"><expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">1</literal></expr></argument>,

                              <argument pos:start="47:31" pos:end="47:34"><expr pos:start="47:31" pos:end="47:34"><name pos:start="47:31" pos:end="47:34">prdt</name></expr></argument>, <argument pos:start="47:37" pos:end="47:52"><expr pos:start="47:37" pos:end="47:52"><call pos:start="47:37" pos:end="47:52"><name pos:start="47:37" pos:end="47:46">ARRAY_SIZE</name><argument_list pos:start="47:47" pos:end="47:52">(<argument pos:start="47:48" pos:end="47:51"><expr pos:start="47:48" pos:end="47:51"><name pos:start="47:48" pos:end="47:51">prdt</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:55" pos:end="47:58"><expr pos:start="47:55" pos:end="47:58"><name pos:start="47:55" pos:end="47:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><call pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:19">g_assert_cmphex</name><argument_list pos:start="49:20" pos:end="49:34">(<argument pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:26">status</name></expr></argument>, <argument pos:start="49:29" pos:end="49:30"><expr pos:start="49:29" pos:end="49:30"><operator pos:start="49:29" pos:end="49:30">==</operator></expr></argument>, <argument pos:start="49:33" pos:end="49:33"><expr pos:start="49:33" pos:end="49:33"><literal type="number" pos:start="49:33" pos:end="49:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:72"><expr pos:start="51:5" pos:end="51:71"><call pos:start="51:5" pos:end="51:71"><name pos:start="51:5" pos:end="51:20">assert_bit_clear</name><argument_list pos:start="51:21" pos:end="51:71">(<argument pos:start="51:22" pos:end="51:60"><expr pos:start="51:22" pos:end="51:60"><call pos:start="51:22" pos:end="51:60"><name pos:start="51:22" pos:end="51:34">qpci_io_readb</name><argument_list pos:start="51:35" pos:end="51:60">(<argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">dev</name></expr></argument>, <argument pos:start="51:41" pos:end="51:47"><expr pos:start="51:41" pos:end="51:47"><name pos:start="51:41" pos:end="51:47">ide_bar</name></expr></argument>, <argument pos:start="51:50" pos:end="51:59"><expr pos:start="51:50" pos:end="51:59"><name pos:start="51:50" pos:end="51:59">reg_status</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:63" pos:end="51:70"><expr pos:start="51:63" pos:end="51:70"><name pos:start="51:63" pos:end="51:64">DF</name> <operator pos:start="51:66" pos:end="51:66">|</operator> <name pos:start="51:68" pos:end="51:70">ERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


</block_content>}</block></function></unit>
