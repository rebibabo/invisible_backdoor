<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3230.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:40">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:62">int</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:73">got_frame</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">AVPacket</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="285:1">{<block_content pos:start="7:5" pos:end="283:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">UtvideoContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">c</name> <init pos:start="11:23" pos:end="11:40">= <expr pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:29">avctx</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:33"><name pos:start="15:20" pos:end="15:30">plane_start</name><index pos:start="15:31" pos:end="15:33">[<expr pos:start="15:32" pos:end="15:32"><literal type="number" pos:start="15:32" pos:end="15:32">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:75"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">plane_size</name></decl>, <decl pos:start="17:21" pos:end="17:38"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:34">max_slice_size</name> <init pos:start="17:36" pos:end="17:38">= <expr pos:start="17:38" pos:end="17:38"><literal type="number" pos:start="17:38" pos:end="17:38">0</literal></expr></init></decl>, <decl pos:start="17:41" pos:end="17:51"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:41" pos:end="17:51">slice_start</name></decl>, <decl pos:start="17:54" pos:end="17:62"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:54" pos:end="17:62">slice_end</name></decl>, <decl pos:start="17:65" pos:end="17:74"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:65" pos:end="17:74">slice_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:18">GetByteContext</name></type> <name pos:start="21:20" pos:end="21:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:38"><decl pos:start="23:5" pos:end="23:37"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:15">ThreadFrame</name></type> <name pos:start="23:17" pos:end="23:21">frame</name> <init pos:start="23:23" pos:end="23:37">= <expr pos:start="23:25" pos:end="23:37"><block pos:start="23:25" pos:end="23:37">{ <expr pos:start="23:27" pos:end="23:35"><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:28">f</name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:19"><if pos:start="27:5" pos:end="29:19">if <condition pos:start="27:8" pos:end="27:59">(<expr pos:start="27:9" pos:end="27:58"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:53"><name pos:start="27:16" pos:end="27:35">ff_thread_get_buffer</name><argument_list pos:start="27:36" pos:end="27:53">(<argument pos:start="27:37" pos:end="27:41"><expr pos:start="27:37" pos:end="27:41"><name pos:start="27:37" pos:end="27:41">avctx</name></expr></argument>, <argument pos:start="27:44" pos:end="27:49"><expr pos:start="27:44" pos:end="27:49"><operator pos:start="27:44" pos:end="27:44">&amp;</operator><name pos:start="27:45" pos:end="27:49">frame</name></expr></argument>, <argument pos:start="27:52" pos:end="27:52"><expr pos:start="27:52" pos:end="27:52"><literal type="number" pos:start="27:52" pos:end="27:52">0</literal></expr></argument>)</argument_list></call><operator pos:start="27:54" pos:end="27:54">)</operator> <operator pos:start="27:56" pos:end="27:56">&lt;</operator> <literal type="number" pos:start="27:58" pos:end="27:58">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:77">/* parse plane structure to get frame flags and validate slice offsets */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:20">bytestream2_init</name><argument_list pos:start="35:21" pos:end="35:40">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:24">gb</name></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">buf</name></expr></argument>, <argument pos:start="35:32" pos:end="35:39"><expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="81:5">for <control pos:start="37:9" pos:end="37:35">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:30"><expr pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:21">c</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:29">planes</name></name></expr>;</condition> <incr pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:32">i</name><operator pos:start="37:33" pos:end="37:34">++</operator></expr></incr>)</control> <block pos:start="37:37" pos:end="81:5">{<block_content pos:start="39:9" pos:end="79:43">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:19">plane_start</name><index pos:start="39:20" pos:end="39:22">[<expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">i</name></expr>]</index></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:34"><name pos:start="39:26" pos:end="39:27">gb</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:34">buffer</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:66">(<expr pos:start="41:13" pos:end="41:65"><call pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:38">bytestream2_get_bytes_left</name><argument_list pos:start="41:39" pos:end="41:43">(<argument pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><operator pos:start="41:40" pos:end="41:40">&amp;</operator><name pos:start="41:41" pos:end="41:42">gb</name></expr></argument>)</argument_list></call> <operator pos:start="41:45" pos:end="41:45">&lt;</operator> <literal type="number" pos:start="41:47" pos:end="41:51">256</literal> <operator pos:start="41:51" pos:end="41:51">+</operator> <literal type="number" pos:start="41:53" pos:end="41:53">4</literal> <operator pos:start="41:55" pos:end="41:55">*</operator> <name pos:start="41:57" pos:end="41:65"><name pos:start="41:57" pos:end="41:57">c</name><operator pos:start="41:58" pos:end="41:59">-&gt;</operator><name pos:start="41:60" pos:end="41:65">slices</name></name></expr>)</condition> <block pos:start="41:68" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:39">

            <expr_stmt pos:start="43:13" pos:end="43:75"><expr pos:start="43:13" pos:end="43:74"><call pos:start="43:13" pos:end="43:74"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:74">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24">avctx</name></expr></argument>, <argument pos:start="43:27" pos:end="43:38"><expr pos:start="43:27" pos:end="43:38"><name pos:start="43:27" pos:end="43:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:41" pos:end="43:73"><expr pos:start="43:41" pos:end="43:73"><literal type="string" pos:start="43:41" pos:end="43:73">"Insufficient data for a plane\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:39">return <expr pos:start="45:20" pos:end="45:38"><name pos:start="45:20" pos:end="45:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><call pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:25">bytestream2_skipu</name><argument_list pos:start="49:26" pos:end="49:35">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:29">gb</name></expr></argument>, <argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><literal type="number" pos:start="49:32" pos:end="49:34">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:19">slice_start</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:17">slice_end</name>   <operator pos:start="53:21" pos:end="53:21">=</operator> <literal type="number" pos:start="53:23" pos:end="53:23">0</literal></expr>;</expr_stmt>

        <for pos:start="55:9" pos:end="75:9">for <control pos:start="55:13" pos:end="55:39">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">j</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:34"><expr pos:start="55:21" pos:end="55:33"><name pos:start="55:21" pos:end="55:21">j</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:25">c</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:33">slices</name></name></expr>;</condition> <incr pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><name pos:start="55:36" pos:end="55:36">j</name><operator pos:start="55:37" pos:end="55:38">++</operator></expr></incr>)</control> <block pos:start="55:41" pos:end="75:9">{<block_content pos:start="57:13" pos:end="73:63">

            <expr_stmt pos:start="57:13" pos:end="57:53"><expr pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:21">slice_end</name>   <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="57:52"><name pos:start="57:27" pos:end="57:47">bytestream2_get_le32u</name><argument_list pos:start="57:48" pos:end="57:52">(<argument pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><operator pos:start="57:49" pos:end="57:49">&amp;</operator><name pos:start="57:50" pos:end="57:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:50"><expr pos:start="59:13" pos:end="59:49"><name pos:start="59:13" pos:end="59:22">slice_size</name>  <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:35">slice_end</name> <operator pos:start="59:37" pos:end="59:37">-</operator> <name pos:start="59:39" pos:end="59:49">slice_start</name></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="69:13"><if pos:start="61:13" pos:end="69:13">if <condition pos:start="61:16" pos:end="63:60">(<expr pos:start="61:17" pos:end="63:59"><name pos:start="61:17" pos:end="61:25">slice_end</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <literal type="number" pos:start="61:29" pos:end="61:29">0</literal> <operator pos:start="61:31" pos:end="61:32">||</operator> <name pos:start="61:34" pos:end="61:43">slice_size</name> <operator pos:start="61:45" pos:end="61:45">&lt;</operator> <literal type="number" pos:start="61:47" pos:end="61:47">0</literal> <operator pos:start="61:49" pos:end="61:50">||</operator>

                <call pos:start="63:17" pos:end="63:47"><name pos:start="63:17" pos:end="63:42">bytestream2_get_bytes_left</name><argument_list pos:start="63:43" pos:end="63:47">(<argument pos:start="63:44" pos:end="63:46"><expr pos:start="63:44" pos:end="63:46"><operator pos:start="63:44" pos:end="63:44">&amp;</operator><name pos:start="63:45" pos:end="63:46">gb</name></expr></argument>)</argument_list></call> <operator pos:start="63:49" pos:end="63:49">&lt;</operator> <name pos:start="63:51" pos:end="63:59">slice_end</name></expr>)</condition> <block pos:start="63:62" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:43">

                <expr_stmt pos:start="65:17" pos:end="65:70"><expr pos:start="65:17" pos:end="65:69"><call pos:start="65:17" pos:end="65:69"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="65:69">(<argument pos:start="65:24" pos:end="65:28"><expr pos:start="65:24" pos:end="65:28"><name pos:start="65:24" pos:end="65:28">avctx</name></expr></argument>, <argument pos:start="65:31" pos:end="65:42"><expr pos:start="65:31" pos:end="65:42"><name pos:start="65:31" pos:end="65:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:45" pos:end="65:68"><expr pos:start="65:45" pos:end="65:68"><literal type="string" pos:start="65:45" pos:end="65:68">"Incorrect slice size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="67:17" pos:end="67:43">return <expr pos:start="67:24" pos:end="67:42"><name pos:start="67:24" pos:end="67:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:36"><expr pos:start="71:13" pos:end="71:35"><name pos:start="71:13" pos:end="71:23">slice_start</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:35">slice_end</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:63"><expr pos:start="73:13" pos:end="73:62"><name pos:start="73:13" pos:end="73:26">max_slice_size</name> <operator pos:start="73:28" pos:end="73:28">=</operator> <call pos:start="73:30" pos:end="73:62"><name pos:start="73:30" pos:end="73:34">FFMAX</name><argument_list pos:start="73:35" pos:end="73:62">(<argument pos:start="73:36" pos:end="73:49"><expr pos:start="73:36" pos:end="73:49"><name pos:start="73:36" pos:end="73:49">max_slice_size</name></expr></argument>, <argument pos:start="73:52" pos:end="73:61"><expr pos:start="73:52" pos:end="73:61"><name pos:start="73:52" pos:end="73:61">slice_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="77:9" pos:end="77:31"><expr pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:18">plane_size</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:30">slice_end</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><call pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:25">bytestream2_skipu</name><argument_list pos:start="79:26" pos:end="79:42">(<argument pos:start="79:27" pos:end="79:29"><expr pos:start="79:27" pos:end="79:29"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:29">gb</name></expr></argument>, <argument pos:start="79:32" pos:end="79:41"><expr pos:start="79:32" pos:end="79:41"><name pos:start="79:32" pos:end="79:41">plane_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:26"><name pos:start="83:5" pos:end="83:15">plane_start</name><index pos:start="83:16" pos:end="83:26">[<expr pos:start="83:17" pos:end="83:25"><name pos:start="83:17" pos:end="83:25"><name pos:start="83:17" pos:end="83:17">c</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:25">planes</name></name></expr>]</index></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <name pos:start="83:30" pos:end="83:38"><name pos:start="83:30" pos:end="83:31">gb</name><operator pos:start="83:32" pos:end="83:32">.</operator><name pos:start="83:33" pos:end="83:38">buffer</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:61">(<expr pos:start="85:9" pos:end="85:60"><call pos:start="85:9" pos:end="85:39"><name pos:start="85:9" pos:end="85:34">bytestream2_get_bytes_left</name><argument_list pos:start="85:35" pos:end="85:39">(<argument pos:start="85:36" pos:end="85:38"><expr pos:start="85:36" pos:end="85:38"><operator pos:start="85:36" pos:end="85:36">&amp;</operator><name pos:start="85:37" pos:end="85:38">gb</name></expr></argument>)</argument_list></call> <operator pos:start="85:41" pos:end="85:41">&lt;</operator> <name pos:start="85:43" pos:end="85:60"><name pos:start="85:43" pos:end="85:43">c</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:60">frame_info_size</name></name></expr>)</condition> <block pos:start="85:63" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:35">

        <expr_stmt pos:start="87:9" pos:end="87:79"><expr pos:start="87:9" pos:end="87:78"><call pos:start="87:9" pos:end="87:78"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:78">(<argument pos:start="87:16" pos:end="87:20"><expr pos:start="87:16" pos:end="87:20"><name pos:start="87:16" pos:end="87:20">avctx</name></expr></argument>, <argument pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:37" pos:end="87:77"><expr pos:start="87:37" pos:end="87:77"><literal type="string" pos:start="87:37" pos:end="87:77">"Not enough data for frame information\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:35">return <expr pos:start="89:16" pos:end="89:34"><name pos:start="89:16" pos:end="89:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:47"><expr pos:start="93:5" pos:end="93:46"><name pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:5">c</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:17">frame_info</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <call pos:start="93:21" pos:end="93:46"><name pos:start="93:21" pos:end="93:41">bytestream2_get_le32u</name><argument_list pos:start="93:42" pos:end="93:46">(<argument pos:start="93:43" pos:end="93:45"><expr pos:start="93:43" pos:end="93:45"><operator pos:start="93:43" pos:end="93:43">&amp;</operator><name pos:start="93:44" pos:end="93:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:26"><expr pos:start="95:5" pos:end="97:25"><call pos:start="95:5" pos:end="97:25"><name pos:start="95:5" pos:end="95:10">av_log</name><argument_list pos:start="95:11" pos:end="97:25">(<argument pos:start="95:12" pos:end="95:16"><expr pos:start="95:12" pos:end="95:16"><name pos:start="95:12" pos:end="95:16">avctx</name></expr></argument>, <argument pos:start="95:19" pos:end="95:30"><expr pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="95:33" pos:end="95:69"><expr pos:start="95:33" pos:end="95:69"><literal type="string" pos:start="95:33" pos:end="95:59">"frame information flags %"</literal><name pos:start="95:60" pos:end="95:65">PRIX32</name><literal type="string" pos:start="95:66" pos:end="95:69">"\n"</literal></expr></argument>,

           <argument pos:start="97:12" pos:end="97:24"><expr pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:24"><name pos:start="97:12" pos:end="97:12">c</name><operator pos:start="97:13" pos:end="97:14">-&gt;</operator><name pos:start="97:15" pos:end="97:24">frame_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:45"><expr pos:start="101:5" pos:end="101:44"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:5">c</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:17">frame_pred</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:34"><name pos:start="101:22" pos:end="101:22">c</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:34">frame_info</name></name> <operator pos:start="101:36" pos:end="101:37">&gt;&gt;</operator> <literal type="number" pos:start="101:39" pos:end="101:39">8</literal><operator pos:start="101:40" pos:end="101:40">)</operator> <operator pos:start="101:42" pos:end="101:42">&amp;</operator> <literal type="number" pos:start="101:44" pos:end="101:44">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:39">(<expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:9">c</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:21">frame_pred</name></name> <operator pos:start="105:23" pos:end="105:24">==</operator> <name pos:start="105:26" pos:end="105:38">PRED_GRADIENT</name></expr>)</condition> <block pos:start="105:41" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:36">

        <expr_stmt pos:start="107:9" pos:end="107:71"><expr pos:start="107:9" pos:end="107:70"><call pos:start="107:9" pos:end="107:70"><name pos:start="107:9" pos:end="107:29">avpriv_request_sample</name><argument_list pos:start="107:30" pos:end="107:70">(<argument pos:start="107:31" pos:end="107:35"><expr pos:start="107:31" pos:end="107:35"><name pos:start="107:31" pos:end="107:35">avctx</name></expr></argument>, <argument pos:start="107:38" pos:end="107:69"><expr pos:start="107:38" pos:end="107:69"><literal type="string" pos:start="107:38" pos:end="107:69">"Frame with gradient prediction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:36">return <expr pos:start="109:16" pos:end="109:35"><name pos:start="109:16" pos:end="109:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="117:66"><expr pos:start="115:5" pos:end="117:65"><call pos:start="115:5" pos:end="117:65"><name pos:start="115:5" pos:end="115:18">av_fast_malloc</name><argument_list pos:start="115:19" pos:end="117:65">(<argument pos:start="115:20" pos:end="115:33"><expr pos:start="115:20" pos:end="115:33"><operator pos:start="115:20" pos:end="115:20">&amp;</operator><name pos:start="115:21" pos:end="115:33"><name pos:start="115:21" pos:end="115:21">c</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:33">slice_bits</name></name></expr></argument>, <argument pos:start="115:36" pos:end="115:54"><expr pos:start="115:36" pos:end="115:54"><operator pos:start="115:36" pos:end="115:36">&amp;</operator><name pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:37">c</name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:54">slice_bits_size</name></name></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:64"><expr pos:start="117:20" pos:end="117:64"><name pos:start="117:20" pos:end="117:33">max_slice_size</name> <operator pos:start="117:35" pos:end="117:35">+</operator> <name pos:start="117:37" pos:end="117:64">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="127:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:23">(<expr pos:start="121:9" pos:end="121:22"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:22"><name pos:start="121:10" pos:end="121:10">c</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:22">slice_bits</name></name></expr>)</condition> <block pos:start="121:25" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:31">

        <expr_stmt pos:start="123:9" pos:end="123:74"><expr pos:start="123:9" pos:end="123:73"><call pos:start="123:9" pos:end="123:73"><name pos:start="123:9" pos:end="123:14">av_log</name><argument_list pos:start="123:15" pos:end="123:73">(<argument pos:start="123:16" pos:end="123:20"><expr pos:start="123:16" pos:end="123:20"><name pos:start="123:16" pos:end="123:20">avctx</name></expr></argument>, <argument pos:start="123:23" pos:end="123:34"><expr pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:37" pos:end="123:72"><expr pos:start="123:37" pos:end="123:72"><literal type="string" pos:start="123:37" pos:end="123:72">"Cannot allocate temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="125:9" pos:end="125:31">return <expr pos:start="125:16" pos:end="125:30"><call pos:start="125:16" pos:end="125:30"><name pos:start="125:16" pos:end="125:22">AVERROR</name><argument_list pos:start="125:23" pos:end="125:30">(<argument pos:start="125:24" pos:end="125:29"><expr pos:start="125:24" pos:end="125:29"><name pos:start="125:24" pos:end="125:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="131:5" pos:end="265:5">switch <condition pos:start="131:12" pos:end="131:30">(<expr pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:13">c</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:20">avctx</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:29">pix_fmt</name></name></expr>)</condition> <block pos:start="131:32" pos:end="265:5">{<block_content pos:start="133:5" pos:end="263:14">

    <case pos:start="133:5" pos:end="133:26">case <expr pos:start="133:10" pos:end="133:25"><name pos:start="133:10" pos:end="133:25">AV_PIX_FMT_RGB24</name></expr>:</case>

    <case pos:start="135:5" pos:end="135:25">case <expr pos:start="135:10" pos:end="135:24"><name pos:start="135:10" pos:end="135:24">AV_PIX_FMT_RGBA</name></expr>:</case>

        <for pos:start="137:9" pos:end="175:9">for <control pos:start="137:13" pos:end="137:39">(<init pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:18"><name pos:start="137:14" pos:end="137:14">i</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="number" pos:start="137:18" pos:end="137:18">0</literal></expr>;</init> <condition pos:start="137:21" pos:end="137:34"><expr pos:start="137:21" pos:end="137:33"><name pos:start="137:21" pos:end="137:21">i</name> <operator pos:start="137:23" pos:end="137:23">&lt;</operator> <name pos:start="137:25" pos:end="137:33"><name pos:start="137:25" pos:end="137:25">c</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:33">planes</name></name></expr>;</condition> <incr pos:start="137:36" pos:end="137:38"><expr pos:start="137:36" pos:end="137:38"><name pos:start="137:36" pos:end="137:36">i</name><operator pos:start="137:37" pos:end="137:38">++</operator></expr></incr>)</control> <block pos:start="137:41" pos:end="175:9">{<block_content pos:start="139:13" pos:end="173:13">

            <expr_stmt pos:start="139:13" pos:end="145:59"><expr pos:start="139:13" pos:end="145:58"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="145:58"><name pos:start="139:19" pos:end="139:30">decode_plane</name><argument_list pos:start="139:31" pos:end="145:58">(<argument pos:start="139:32" pos:end="139:32"><expr pos:start="139:32" pos:end="139:32"><name pos:start="139:32" pos:end="139:32">c</name></expr></argument>, <argument pos:start="139:35" pos:end="139:35"><expr pos:start="139:35" pos:end="139:35"><name pos:start="139:35" pos:end="139:35">i</name></expr></argument>, <argument pos:start="139:38" pos:end="139:74"><expr pos:start="139:38" pos:end="139:74"><name pos:start="139:38" pos:end="139:53"><name pos:start="139:38" pos:end="139:42">frame</name><operator pos:start="139:43" pos:end="139:43">.</operator><name pos:start="139:44" pos:end="139:44">f</name><operator pos:start="139:45" pos:end="139:46">-&gt;</operator><name pos:start="139:47" pos:end="139:50">data</name><index pos:start="139:51" pos:end="139:53">[<expr pos:start="139:52" pos:end="139:52"><literal type="number" pos:start="139:52" pos:end="139:52">0</literal></expr>]</index></name> <operator pos:start="139:55" pos:end="139:55">+</operator> <name pos:start="139:57" pos:end="139:74"><name pos:start="139:57" pos:end="139:71">ff_ut_rgb_order</name><index pos:start="139:72" pos:end="139:74">[<expr pos:start="139:73" pos:end="139:73"><name pos:start="139:73" pos:end="139:73">i</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="141:32" pos:end="141:40"><expr pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:32">c</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:40">planes</name></name></expr></argument>, <argument pos:start="141:43" pos:end="141:62"><expr pos:start="141:43" pos:end="141:62"><name pos:start="141:43" pos:end="141:62"><name pos:start="141:43" pos:end="141:47">frame</name><operator pos:start="141:48" pos:end="141:48">.</operator><name pos:start="141:49" pos:end="141:49">f</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:59">linesize</name><index pos:start="141:60" pos:end="141:62">[<expr pos:start="141:61" pos:end="141:61"><literal type="number" pos:start="141:61" pos:end="141:61">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:65" pos:end="141:76"><expr pos:start="141:65" pos:end="141:76"><name pos:start="141:65" pos:end="141:76"><name pos:start="141:65" pos:end="141:69">avctx</name><operator pos:start="141:70" pos:end="141:71">-&gt;</operator><name pos:start="141:72" pos:end="141:76">width</name></name></expr></argument>,

                               <argument pos:start="143:32" pos:end="143:44"><expr pos:start="143:32" pos:end="143:44"><name pos:start="143:32" pos:end="143:44"><name pos:start="143:32" pos:end="143:36">avctx</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:44">height</name></name></expr></argument>, <argument pos:start="143:47" pos:end="143:60"><expr pos:start="143:47" pos:end="143:60"><name pos:start="143:47" pos:end="143:60"><name pos:start="143:47" pos:end="143:57">plane_start</name><index pos:start="143:58" pos:end="143:60">[<expr pos:start="143:59" pos:end="143:59"><name pos:start="143:59" pos:end="143:59">i</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="145:32" pos:end="145:57"><expr pos:start="145:32" pos:end="145:57"><name pos:start="145:32" pos:end="145:44"><name pos:start="145:32" pos:end="145:32">c</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:44">frame_pred</name></name> <operator pos:start="145:46" pos:end="145:47">==</operator> <name pos:start="145:49" pos:end="145:57">PRED_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="149:27"><if pos:start="147:13" pos:end="149:27">if <condition pos:start="147:16" pos:end="147:20">(<expr pos:start="147:17" pos:end="147:19"><name pos:start="147:17" pos:end="147:19">ret</name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:27"><block_content pos:start="149:17" pos:end="149:27">

                <return pos:start="149:17" pos:end="149:27">return <expr pos:start="149:24" pos:end="149:26"><name pos:start="149:24" pos:end="149:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="151:13" pos:end="173:13"><if pos:start="151:13" pos:end="173:13">if <condition pos:start="151:16" pos:end="151:45">(<expr pos:start="151:17" pos:end="151:44"><name pos:start="151:17" pos:end="151:29"><name pos:start="151:17" pos:end="151:17">c</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:29">frame_pred</name></name> <operator pos:start="151:31" pos:end="151:32">==</operator> <name pos:start="151:34" pos:end="151:44">PRED_MEDIAN</name></expr>)</condition> <block pos:start="151:47" pos:end="173:13">{<block_content pos:start="153:17" pos:end="171:17">

                <if_stmt pos:start="153:17" pos:end="171:17"><if pos:start="153:17" pos:end="161:17">if <condition pos:start="153:20" pos:end="153:35">(<expr pos:start="153:21" pos:end="153:34"><operator pos:start="153:21" pos:end="153:21">!</operator><name pos:start="153:22" pos:end="153:34"><name pos:start="153:22" pos:end="153:22">c</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:34">interlaced</name></name></expr>)</condition> <block pos:start="153:37" pos:end="161:17">{<block_content pos:start="155:21" pos:end="159:64">

                    <expr_stmt pos:start="155:21" pos:end="159:64"><expr pos:start="155:21" pos:end="159:63"><call pos:start="155:21" pos:end="159:63"><name pos:start="155:21" pos:end="155:34">restore_median</name><argument_list pos:start="155:35" pos:end="159:63">(<argument pos:start="155:36" pos:end="155:72"><expr pos:start="155:36" pos:end="155:72"><name pos:start="155:36" pos:end="155:51"><name pos:start="155:36" pos:end="155:40">frame</name><operator pos:start="155:41" pos:end="155:41">.</operator><name pos:start="155:42" pos:end="155:42">f</name><operator pos:start="155:43" pos:end="155:44">-&gt;</operator><name pos:start="155:45" pos:end="155:48">data</name><index pos:start="155:49" pos:end="155:51">[<expr pos:start="155:50" pos:end="155:50"><literal type="number" pos:start="155:50" pos:end="155:50">0</literal></expr>]</index></name> <operator pos:start="155:53" pos:end="155:53">+</operator> <name pos:start="155:55" pos:end="155:72"><name pos:start="155:55" pos:end="155:69">ff_ut_rgb_order</name><index pos:start="155:70" pos:end="155:72">[<expr pos:start="155:71" pos:end="155:71"><name pos:start="155:71" pos:end="155:71">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="157:36" pos:end="157:44"><expr pos:start="157:36" pos:end="157:44"><name pos:start="157:36" pos:end="157:44"><name pos:start="157:36" pos:end="157:36">c</name><operator pos:start="157:37" pos:end="157:38">-&gt;</operator><name pos:start="157:39" pos:end="157:44">planes</name></name></expr></argument>, <argument pos:start="157:47" pos:end="157:66"><expr pos:start="157:47" pos:end="157:66"><name pos:start="157:47" pos:end="157:66"><name pos:start="157:47" pos:end="157:51">frame</name><operator pos:start="157:52" pos:end="157:52">.</operator><name pos:start="157:53" pos:end="157:53">f</name><operator pos:start="157:54" pos:end="157:55">-&gt;</operator><name pos:start="157:56" pos:end="157:63">linesize</name><index pos:start="157:64" pos:end="157:66">[<expr pos:start="157:65" pos:end="157:65"><literal type="number" pos:start="157:65" pos:end="157:65">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:69" pos:end="157:80"><expr pos:start="157:69" pos:end="157:80"><name pos:start="157:69" pos:end="157:80"><name pos:start="157:69" pos:end="157:73">avctx</name><operator pos:start="157:74" pos:end="157:75">-&gt;</operator><name pos:start="157:76" pos:end="157:80">width</name></name></expr></argument>,

                                   <argument pos:start="159:36" pos:end="159:48"><expr pos:start="159:36" pos:end="159:48"><name pos:start="159:36" pos:end="159:48"><name pos:start="159:36" pos:end="159:40">avctx</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:48">height</name></name></expr></argument>, <argument pos:start="159:51" pos:end="159:59"><expr pos:start="159:51" pos:end="159:59"><name pos:start="159:51" pos:end="159:59"><name pos:start="159:51" pos:end="159:51">c</name><operator pos:start="159:52" pos:end="159:53">-&gt;</operator><name pos:start="159:54" pos:end="159:59">slices</name></name></expr></argument>, <argument pos:start="159:62" pos:end="159:62"><expr pos:start="159:62" pos:end="159:62"><literal type="number" pos:start="159:62" pos:end="159:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="161:19" pos:end="171:17">else <block pos:start="161:24" pos:end="171:17">{<block_content pos:start="163:21" pos:end="169:41">

                    <expr_stmt pos:start="163:21" pos:end="169:41"><expr pos:start="163:21" pos:end="169:40"><call pos:start="163:21" pos:end="169:40"><name pos:start="163:21" pos:end="163:37">restore_median_il</name><argument_list pos:start="163:38" pos:end="169:40">(<argument pos:start="163:39" pos:end="163:75"><expr pos:start="163:39" pos:end="163:75"><name pos:start="163:39" pos:end="163:54"><name pos:start="163:39" pos:end="163:43">frame</name><operator pos:start="163:44" pos:end="163:44">.</operator><name pos:start="163:45" pos:end="163:45">f</name><operator pos:start="163:46" pos:end="163:47">-&gt;</operator><name pos:start="163:48" pos:end="163:51">data</name><index pos:start="163:52" pos:end="163:54">[<expr pos:start="163:53" pos:end="163:53"><literal type="number" pos:start="163:53" pos:end="163:53">0</literal></expr>]</index></name> <operator pos:start="163:56" pos:end="163:56">+</operator> <name pos:start="163:58" pos:end="163:75"><name pos:start="163:58" pos:end="163:72">ff_ut_rgb_order</name><index pos:start="163:73" pos:end="163:75">[<expr pos:start="163:74" pos:end="163:74"><name pos:start="163:74" pos:end="163:74">i</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="165:39" pos:end="165:47"><expr pos:start="165:39" pos:end="165:47"><name pos:start="165:39" pos:end="165:47"><name pos:start="165:39" pos:end="165:39">c</name><operator pos:start="165:40" pos:end="165:41">-&gt;</operator><name pos:start="165:42" pos:end="165:47">planes</name></name></expr></argument>, <argument pos:start="165:50" pos:end="165:69"><expr pos:start="165:50" pos:end="165:69"><name pos:start="165:50" pos:end="165:69"><name pos:start="165:50" pos:end="165:54">frame</name><operator pos:start="165:55" pos:end="165:55">.</operator><name pos:start="165:56" pos:end="165:56">f</name><operator pos:start="165:57" pos:end="165:58">-&gt;</operator><name pos:start="165:59" pos:end="165:66">linesize</name><index pos:start="165:67" pos:end="165:69">[<expr pos:start="165:68" pos:end="165:68"><literal type="number" pos:start="165:68" pos:end="165:68">0</literal></expr>]</index></name></expr></argument>,

                                      <argument pos:start="167:39" pos:end="167:50"><expr pos:start="167:39" pos:end="167:50"><name pos:start="167:39" pos:end="167:50"><name pos:start="167:39" pos:end="167:43">avctx</name><operator pos:start="167:44" pos:end="167:45">-&gt;</operator><name pos:start="167:46" pos:end="167:50">width</name></name></expr></argument>, <argument pos:start="167:53" pos:end="167:65"><expr pos:start="167:53" pos:end="167:65"><name pos:start="167:53" pos:end="167:65"><name pos:start="167:53" pos:end="167:57">avctx</name><operator pos:start="167:58" pos:end="167:59">-&gt;</operator><name pos:start="167:60" pos:end="167:65">height</name></name></expr></argument>, <argument pos:start="167:68" pos:end="167:76"><expr pos:start="167:68" pos:end="167:76"><name pos:start="167:68" pos:end="167:76"><name pos:start="167:68" pos:end="167:68">c</name><operator pos:start="167:69" pos:end="167:70">-&gt;</operator><name pos:start="167:71" pos:end="167:76">slices</name></name></expr></argument>,

                                      <argument pos:start="169:39" pos:end="169:39"><expr pos:start="169:39" pos:end="169:39"><literal type="number" pos:start="169:39" pos:end="169:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="177:9" pos:end="179:56"><expr pos:start="177:9" pos:end="179:55"><call pos:start="177:9" pos:end="179:55"><name pos:start="177:9" pos:end="177:26">restore_rgb_planes</name><argument_list pos:start="177:27" pos:end="179:55">(<argument pos:start="177:28" pos:end="177:43"><expr pos:start="177:28" pos:end="177:43"><name pos:start="177:28" pos:end="177:43"><name pos:start="177:28" pos:end="177:32">frame</name><operator pos:start="177:33" pos:end="177:33">.</operator><name pos:start="177:34" pos:end="177:34">f</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:40">data</name><index pos:start="177:41" pos:end="177:43">[<expr pos:start="177:42" pos:end="177:42"><literal type="number" pos:start="177:42" pos:end="177:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="177:46" pos:end="177:54"><expr pos:start="177:46" pos:end="177:54"><name pos:start="177:46" pos:end="177:54"><name pos:start="177:46" pos:end="177:46">c</name><operator pos:start="177:47" pos:end="177:48">-&gt;</operator><name pos:start="177:49" pos:end="177:54">planes</name></name></expr></argument>, <argument pos:start="177:57" pos:end="177:76"><expr pos:start="177:57" pos:end="177:76"><name pos:start="177:57" pos:end="177:76"><name pos:start="177:57" pos:end="177:61">frame</name><operator pos:start="177:62" pos:end="177:62">.</operator><name pos:start="177:63" pos:end="177:63">f</name><operator pos:start="177:64" pos:end="177:65">-&gt;</operator><name pos:start="177:66" pos:end="177:73">linesize</name><index pos:start="177:74" pos:end="177:76">[<expr pos:start="177:75" pos:end="177:75"><literal type="number" pos:start="177:75" pos:end="177:75">0</literal></expr>]</index></name></expr></argument>,

                           <argument pos:start="179:28" pos:end="179:39"><expr pos:start="179:28" pos:end="179:39"><name pos:start="179:28" pos:end="179:39"><name pos:start="179:28" pos:end="179:32">avctx</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:39">width</name></name></expr></argument>, <argument pos:start="179:42" pos:end="179:54"><expr pos:start="179:42" pos:end="179:54"><name pos:start="179:42" pos:end="179:54"><name pos:start="179:42" pos:end="179:46">avctx</name><operator pos:start="179:47" pos:end="179:48">-&gt;</operator><name pos:start="179:49" pos:end="179:54">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:28">case <expr pos:start="183:10" pos:end="183:27"><name pos:start="183:10" pos:end="183:27">AV_PIX_FMT_YUV420P</name></expr>:</case>

        <for pos:start="185:9" pos:end="221:9">for <control pos:start="185:13" pos:end="185:31">(<init pos:start="185:14" pos:end="185:19"><expr pos:start="185:14" pos:end="185:18"><name pos:start="185:14" pos:end="185:14">i</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <literal type="number" pos:start="185:18" pos:end="185:18">0</literal></expr>;</init> <condition pos:start="185:21" pos:end="185:26"><expr pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:21">i</name> <operator pos:start="185:23" pos:end="185:23">&lt;</operator> <literal type="number" pos:start="185:25" pos:end="185:25">3</literal></expr>;</condition> <incr pos:start="185:28" pos:end="185:30"><expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:28">i</name><operator pos:start="185:29" pos:end="185:30">++</operator></expr></incr>)</control> <block pos:start="185:33" pos:end="221:9">{<block_content pos:start="187:13" pos:end="219:13">

            <expr_stmt pos:start="187:13" pos:end="191:75"><expr pos:start="187:13" pos:end="191:74"><name pos:start="187:13" pos:end="187:15">ret</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="191:74"><name pos:start="187:19" pos:end="187:30">decode_plane</name><argument_list pos:start="187:31" pos:end="191:74">(<argument pos:start="187:32" pos:end="187:32"><expr pos:start="187:32" pos:end="187:32"><name pos:start="187:32" pos:end="187:32">c</name></expr></argument>, <argument pos:start="187:35" pos:end="187:35"><expr pos:start="187:35" pos:end="187:35"><name pos:start="187:35" pos:end="187:35">i</name></expr></argument>, <argument pos:start="187:38" pos:end="187:53"><expr pos:start="187:38" pos:end="187:53"><name pos:start="187:38" pos:end="187:53"><name pos:start="187:38" pos:end="187:42">frame</name><operator pos:start="187:43" pos:end="187:43">.</operator><name pos:start="187:44" pos:end="187:44">f</name><operator pos:start="187:45" pos:end="187:46">-&gt;</operator><name pos:start="187:47" pos:end="187:50">data</name><index pos:start="187:51" pos:end="187:53">[<expr pos:start="187:52" pos:end="187:52"><name pos:start="187:52" pos:end="187:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="187:56" pos:end="187:56"><expr pos:start="187:56" pos:end="187:56"><literal type="number" pos:start="187:56" pos:end="187:56">1</literal></expr></argument>, <argument pos:start="187:59" pos:end="187:78"><expr pos:start="187:59" pos:end="187:78"><name pos:start="187:59" pos:end="187:78"><name pos:start="187:59" pos:end="187:63">frame</name><operator pos:start="187:64" pos:end="187:64">.</operator><name pos:start="187:65" pos:end="187:65">f</name><operator pos:start="187:66" pos:end="187:67">-&gt;</operator><name pos:start="187:68" pos:end="187:75">linesize</name><index pos:start="187:76" pos:end="187:78">[<expr pos:start="187:77" pos:end="187:77"><name pos:start="187:77" pos:end="187:77">i</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="189:32" pos:end="189:50"><expr pos:start="189:32" pos:end="189:50"><name pos:start="189:32" pos:end="189:43"><name pos:start="189:32" pos:end="189:36">avctx</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:43">width</name></name> <operator pos:start="189:45" pos:end="189:46">&gt;&gt;</operator> <operator pos:start="189:48" pos:end="189:48">!</operator><operator pos:start="189:49" pos:end="189:49">!</operator><name pos:start="189:50" pos:end="189:50">i</name></expr></argument>, <argument pos:start="189:53" pos:end="189:72"><expr pos:start="189:53" pos:end="189:72"><name pos:start="189:53" pos:end="189:65"><name pos:start="189:53" pos:end="189:57">avctx</name><operator pos:start="189:58" pos:end="189:59">-&gt;</operator><name pos:start="189:60" pos:end="189:65">height</name></name> <operator pos:start="189:67" pos:end="189:68">&gt;&gt;</operator> <operator pos:start="189:70" pos:end="189:70">!</operator><operator pos:start="189:71" pos:end="189:71">!</operator><name pos:start="189:72" pos:end="189:72">i</name></expr></argument>,

                               <argument pos:start="191:32" pos:end="191:45"><expr pos:start="191:32" pos:end="191:45"><name pos:start="191:32" pos:end="191:45"><name pos:start="191:32" pos:end="191:42">plane_start</name><index pos:start="191:43" pos:end="191:45">[<expr pos:start="191:44" pos:end="191:44"><name pos:start="191:44" pos:end="191:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="191:48" pos:end="191:73"><expr pos:start="191:48" pos:end="191:73"><name pos:start="191:48" pos:end="191:60"><name pos:start="191:48" pos:end="191:48">c</name><operator pos:start="191:49" pos:end="191:50">-&gt;</operator><name pos:start="191:51" pos:end="191:60">frame_pred</name></name> <operator pos:start="191:62" pos:end="191:63">==</operator> <name pos:start="191:65" pos:end="191:73">PRED_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="193:13" pos:end="195:27"><if pos:start="193:13" pos:end="195:27">if <condition pos:start="193:16" pos:end="193:20">(<expr pos:start="193:17" pos:end="193:19"><name pos:start="193:17" pos:end="193:19">ret</name></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:27"><block_content pos:start="195:17" pos:end="195:27">

                <return pos:start="195:17" pos:end="195:27">return <expr pos:start="195:24" pos:end="195:26"><name pos:start="195:24" pos:end="195:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="197:13" pos:end="219:13"><if pos:start="197:13" pos:end="219:13">if <condition pos:start="197:16" pos:end="197:45">(<expr pos:start="197:17" pos:end="197:44"><name pos:start="197:17" pos:end="197:29"><name pos:start="197:17" pos:end="197:17">c</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:29">frame_pred</name></name> <operator pos:start="197:31" pos:end="197:32">==</operator> <name pos:start="197:34" pos:end="197:44">PRED_MEDIAN</name></expr>)</condition> <block pos:start="197:47" pos:end="219:13">{<block_content pos:start="199:17" pos:end="217:17">

                <if_stmt pos:start="199:17" pos:end="217:17"><if pos:start="199:17" pos:end="207:17">if <condition pos:start="199:20" pos:end="199:35">(<expr pos:start="199:21" pos:end="199:34"><operator pos:start="199:21" pos:end="199:21">!</operator><name pos:start="199:22" pos:end="199:34"><name pos:start="199:22" pos:end="199:22">c</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:34">interlaced</name></name></expr>)</condition> <block pos:start="199:37" pos:end="207:17">{<block_content pos:start="201:21" pos:end="205:50">

                    <expr_stmt pos:start="201:21" pos:end="205:50"><expr pos:start="201:21" pos:end="205:49"><call pos:start="201:21" pos:end="205:49"><name pos:start="201:21" pos:end="201:34">restore_median</name><argument_list pos:start="201:35" pos:end="205:49">(<argument pos:start="201:36" pos:end="201:51"><expr pos:start="201:36" pos:end="201:51"><name pos:start="201:36" pos:end="201:51"><name pos:start="201:36" pos:end="201:40">frame</name><operator pos:start="201:41" pos:end="201:41">.</operator><name pos:start="201:42" pos:end="201:42">f</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:48">data</name><index pos:start="201:49" pos:end="201:51">[<expr pos:start="201:50" pos:end="201:50"><name pos:start="201:50" pos:end="201:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="201:54" pos:end="201:54"><expr pos:start="201:54" pos:end="201:54"><literal type="number" pos:start="201:54" pos:end="201:54">1</literal></expr></argument>, <argument pos:start="201:57" pos:end="201:76"><expr pos:start="201:57" pos:end="201:76"><name pos:start="201:57" pos:end="201:76"><name pos:start="201:57" pos:end="201:61">frame</name><operator pos:start="201:62" pos:end="201:62">.</operator><name pos:start="201:63" pos:end="201:63">f</name><operator pos:start="201:64" pos:end="201:65">-&gt;</operator><name pos:start="201:66" pos:end="201:73">linesize</name><index pos:start="201:74" pos:end="201:76">[<expr pos:start="201:75" pos:end="201:75"><name pos:start="201:75" pos:end="201:75">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="203:36" pos:end="203:54"><expr pos:start="203:36" pos:end="203:54"><name pos:start="203:36" pos:end="203:47"><name pos:start="203:36" pos:end="203:40">avctx</name><operator pos:start="203:41" pos:end="203:42">-&gt;</operator><name pos:start="203:43" pos:end="203:47">width</name></name> <operator pos:start="203:49" pos:end="203:50">&gt;&gt;</operator> <operator pos:start="203:52" pos:end="203:52">!</operator><operator pos:start="203:53" pos:end="203:53">!</operator><name pos:start="203:54" pos:end="203:54">i</name></expr></argument>, <argument pos:start="203:57" pos:end="203:76"><expr pos:start="203:57" pos:end="203:76"><name pos:start="203:57" pos:end="203:69"><name pos:start="203:57" pos:end="203:61">avctx</name><operator pos:start="203:62" pos:end="203:63">-&gt;</operator><name pos:start="203:64" pos:end="203:69">height</name></name> <operator pos:start="203:71" pos:end="203:72">&gt;&gt;</operator> <operator pos:start="203:74" pos:end="203:74">!</operator><operator pos:start="203:75" pos:end="203:75">!</operator><name pos:start="203:76" pos:end="203:76">i</name></expr></argument>,

                                   <argument pos:start="205:36" pos:end="205:44"><expr pos:start="205:36" pos:end="205:44"><name pos:start="205:36" pos:end="205:44"><name pos:start="205:36" pos:end="205:36">c</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:44">slices</name></name></expr></argument>, <argument pos:start="205:47" pos:end="205:48"><expr pos:start="205:47" pos:end="205:48"><operator pos:start="205:47" pos:end="205:47">!</operator><name pos:start="205:48" pos:end="205:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="207:19" pos:end="217:17">else <block pos:start="207:24" pos:end="217:17">{<block_content pos:start="209:21" pos:end="215:53">

                    <expr_stmt pos:start="209:21" pos:end="215:53"><expr pos:start="209:21" pos:end="215:52"><call pos:start="209:21" pos:end="215:52"><name pos:start="209:21" pos:end="209:37">restore_median_il</name><argument_list pos:start="209:38" pos:end="215:52">(<argument pos:start="209:39" pos:end="209:54"><expr pos:start="209:39" pos:end="209:54"><name pos:start="209:39" pos:end="209:54"><name pos:start="209:39" pos:end="209:43">frame</name><operator pos:start="209:44" pos:end="209:44">.</operator><name pos:start="209:45" pos:end="209:45">f</name><operator pos:start="209:46" pos:end="209:47">-&gt;</operator><name pos:start="209:48" pos:end="209:51">data</name><index pos:start="209:52" pos:end="209:54">[<expr pos:start="209:53" pos:end="209:53"><name pos:start="209:53" pos:end="209:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="209:57" pos:end="209:57"><expr pos:start="209:57" pos:end="209:57"><literal type="number" pos:start="209:57" pos:end="209:57">1</literal></expr></argument>, <argument pos:start="209:60" pos:end="209:79"><expr pos:start="209:60" pos:end="209:79"><name pos:start="209:60" pos:end="209:79"><name pos:start="209:60" pos:end="209:64">frame</name><operator pos:start="209:65" pos:end="209:65">.</operator><name pos:start="209:66" pos:end="209:66">f</name><operator pos:start="209:67" pos:end="209:68">-&gt;</operator><name pos:start="209:69" pos:end="209:76">linesize</name><index pos:start="209:77" pos:end="209:79">[<expr pos:start="209:78" pos:end="209:78"><name pos:start="209:78" pos:end="209:78">i</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="211:39" pos:end="211:58"><expr pos:start="211:39" pos:end="211:58"><name pos:start="211:39" pos:end="211:50"><name pos:start="211:39" pos:end="211:43">avctx</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:50">width</name></name>  <operator pos:start="211:53" pos:end="211:54">&gt;&gt;</operator> <operator pos:start="211:56" pos:end="211:56">!</operator><operator pos:start="211:57" pos:end="211:57">!</operator><name pos:start="211:58" pos:end="211:58">i</name></expr></argument>,

                                      <argument pos:start="213:39" pos:end="213:58"><expr pos:start="213:39" pos:end="213:58"><name pos:start="213:39" pos:end="213:51"><name pos:start="213:39" pos:end="213:43">avctx</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:51">height</name></name> <operator pos:start="213:53" pos:end="213:54">&gt;&gt;</operator> <operator pos:start="213:56" pos:end="213:56">!</operator><operator pos:start="213:57" pos:end="213:57">!</operator><name pos:start="213:58" pos:end="213:58">i</name></expr></argument>,

                                      <argument pos:start="215:39" pos:end="215:47"><expr pos:start="215:39" pos:end="215:47"><name pos:start="215:39" pos:end="215:47"><name pos:start="215:39" pos:end="215:39">c</name><operator pos:start="215:40" pos:end="215:41">-&gt;</operator><name pos:start="215:42" pos:end="215:47">slices</name></name></expr></argument>, <argument pos:start="215:50" pos:end="215:51"><expr pos:start="215:50" pos:end="215:51"><operator pos:start="215:50" pos:end="215:50">!</operator><name pos:start="215:51" pos:end="215:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <case pos:start="225:5" pos:end="225:28">case <expr pos:start="225:10" pos:end="225:27"><name pos:start="225:10" pos:end="225:27">AV_PIX_FMT_YUV422P</name></expr>:</case>

        <for pos:start="227:9" pos:end="261:9">for <control pos:start="227:13" pos:end="227:31">(<init pos:start="227:14" pos:end="227:19"><expr pos:start="227:14" pos:end="227:18"><name pos:start="227:14" pos:end="227:14">i</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <literal type="number" pos:start="227:18" pos:end="227:18">0</literal></expr>;</init> <condition pos:start="227:21" pos:end="227:26"><expr pos:start="227:21" pos:end="227:25"><name pos:start="227:21" pos:end="227:21">i</name> <operator pos:start="227:23" pos:end="227:23">&lt;</operator> <literal type="number" pos:start="227:25" pos:end="227:25">3</literal></expr>;</condition> <incr pos:start="227:28" pos:end="227:30"><expr pos:start="227:28" pos:end="227:30"><name pos:start="227:28" pos:end="227:28">i</name><operator pos:start="227:29" pos:end="227:30">++</operator></expr></incr>)</control> <block pos:start="227:33" pos:end="261:9">{<block_content pos:start="229:13" pos:end="259:13">

            <expr_stmt pos:start="229:13" pos:end="233:75"><expr pos:start="229:13" pos:end="233:74"><name pos:start="229:13" pos:end="229:15">ret</name> <operator pos:start="229:17" pos:end="229:17">=</operator> <call pos:start="229:19" pos:end="233:74"><name pos:start="229:19" pos:end="229:30">decode_plane</name><argument_list pos:start="229:31" pos:end="233:74">(<argument pos:start="229:32" pos:end="229:32"><expr pos:start="229:32" pos:end="229:32"><name pos:start="229:32" pos:end="229:32">c</name></expr></argument>, <argument pos:start="229:35" pos:end="229:35"><expr pos:start="229:35" pos:end="229:35"><name pos:start="229:35" pos:end="229:35">i</name></expr></argument>, <argument pos:start="229:38" pos:end="229:53"><expr pos:start="229:38" pos:end="229:53"><name pos:start="229:38" pos:end="229:53"><name pos:start="229:38" pos:end="229:42">frame</name><operator pos:start="229:43" pos:end="229:43">.</operator><name pos:start="229:44" pos:end="229:44">f</name><operator pos:start="229:45" pos:end="229:46">-&gt;</operator><name pos:start="229:47" pos:end="229:50">data</name><index pos:start="229:51" pos:end="229:53">[<expr pos:start="229:52" pos:end="229:52"><name pos:start="229:52" pos:end="229:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="229:56" pos:end="229:56"><expr pos:start="229:56" pos:end="229:56"><literal type="number" pos:start="229:56" pos:end="229:56">1</literal></expr></argument>, <argument pos:start="229:59" pos:end="229:78"><expr pos:start="229:59" pos:end="229:78"><name pos:start="229:59" pos:end="229:78"><name pos:start="229:59" pos:end="229:63">frame</name><operator pos:start="229:64" pos:end="229:64">.</operator><name pos:start="229:65" pos:end="229:65">f</name><operator pos:start="229:66" pos:end="229:67">-&gt;</operator><name pos:start="229:68" pos:end="229:75">linesize</name><index pos:start="229:76" pos:end="229:78">[<expr pos:start="229:77" pos:end="229:77"><name pos:start="229:77" pos:end="229:77">i</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="231:32" pos:end="231:50"><expr pos:start="231:32" pos:end="231:50"><name pos:start="231:32" pos:end="231:43"><name pos:start="231:32" pos:end="231:36">avctx</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:43">width</name></name> <operator pos:start="231:45" pos:end="231:46">&gt;&gt;</operator> <operator pos:start="231:48" pos:end="231:48">!</operator><operator pos:start="231:49" pos:end="231:49">!</operator><name pos:start="231:50" pos:end="231:50">i</name></expr></argument>, <argument pos:start="231:53" pos:end="231:65"><expr pos:start="231:53" pos:end="231:65"><name pos:start="231:53" pos:end="231:65"><name pos:start="231:53" pos:end="231:57">avctx</name><operator pos:start="231:58" pos:end="231:59">-&gt;</operator><name pos:start="231:60" pos:end="231:65">height</name></name></expr></argument>,

                               <argument pos:start="233:32" pos:end="233:45"><expr pos:start="233:32" pos:end="233:45"><name pos:start="233:32" pos:end="233:45"><name pos:start="233:32" pos:end="233:42">plane_start</name><index pos:start="233:43" pos:end="233:45">[<expr pos:start="233:44" pos:end="233:44"><name pos:start="233:44" pos:end="233:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="233:48" pos:end="233:73"><expr pos:start="233:48" pos:end="233:73"><name pos:start="233:48" pos:end="233:60"><name pos:start="233:48" pos:end="233:48">c</name><operator pos:start="233:49" pos:end="233:50">-&gt;</operator><name pos:start="233:51" pos:end="233:60">frame_pred</name></name> <operator pos:start="233:62" pos:end="233:63">==</operator> <name pos:start="233:65" pos:end="233:73">PRED_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="235:13" pos:end="237:27"><if pos:start="235:13" pos:end="237:27">if <condition pos:start="235:16" pos:end="235:20">(<expr pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:19">ret</name></expr>)</condition><block type="pseudo" pos:start="237:17" pos:end="237:27"><block_content pos:start="237:17" pos:end="237:27">

                <return pos:start="237:17" pos:end="237:27">return <expr pos:start="237:24" pos:end="237:26"><name pos:start="237:24" pos:end="237:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="239:13" pos:end="259:13"><if pos:start="239:13" pos:end="259:13">if <condition pos:start="239:16" pos:end="239:45">(<expr pos:start="239:17" pos:end="239:44"><name pos:start="239:17" pos:end="239:29"><name pos:start="239:17" pos:end="239:17">c</name><operator pos:start="239:18" pos:end="239:19">-&gt;</operator><name pos:start="239:20" pos:end="239:29">frame_pred</name></name> <operator pos:start="239:31" pos:end="239:32">==</operator> <name pos:start="239:34" pos:end="239:44">PRED_MEDIAN</name></expr>)</condition> <block pos:start="239:47" pos:end="259:13">{<block_content pos:start="241:17" pos:end="257:17">

                <if_stmt pos:start="241:17" pos:end="257:17"><if pos:start="241:17" pos:end="249:17">if <condition pos:start="241:20" pos:end="241:35">(<expr pos:start="241:21" pos:end="241:34"><operator pos:start="241:21" pos:end="241:21">!</operator><name pos:start="241:22" pos:end="241:34"><name pos:start="241:22" pos:end="241:22">c</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:34">interlaced</name></name></expr>)</condition> <block pos:start="241:37" pos:end="249:17">{<block_content pos:start="243:21" pos:end="247:49">

                    <expr_stmt pos:start="243:21" pos:end="247:49"><expr pos:start="243:21" pos:end="247:48"><call pos:start="243:21" pos:end="247:48"><name pos:start="243:21" pos:end="243:34">restore_median</name><argument_list pos:start="243:35" pos:end="247:48">(<argument pos:start="243:36" pos:end="243:51"><expr pos:start="243:36" pos:end="243:51"><name pos:start="243:36" pos:end="243:51"><name pos:start="243:36" pos:end="243:40">frame</name><operator pos:start="243:41" pos:end="243:41">.</operator><name pos:start="243:42" pos:end="243:42">f</name><operator pos:start="243:43" pos:end="243:44">-&gt;</operator><name pos:start="243:45" pos:end="243:48">data</name><index pos:start="243:49" pos:end="243:51">[<expr pos:start="243:50" pos:end="243:50"><name pos:start="243:50" pos:end="243:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="243:54" pos:end="243:54"><expr pos:start="243:54" pos:end="243:54"><literal type="number" pos:start="243:54" pos:end="243:54">1</literal></expr></argument>, <argument pos:start="243:57" pos:end="243:76"><expr pos:start="243:57" pos:end="243:76"><name pos:start="243:57" pos:end="243:76"><name pos:start="243:57" pos:end="243:61">frame</name><operator pos:start="243:62" pos:end="243:62">.</operator><name pos:start="243:63" pos:end="243:63">f</name><operator pos:start="243:64" pos:end="243:65">-&gt;</operator><name pos:start="243:66" pos:end="243:73">linesize</name><index pos:start="243:74" pos:end="243:76">[<expr pos:start="243:75" pos:end="243:75"><name pos:start="243:75" pos:end="243:75">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="245:36" pos:end="245:54"><expr pos:start="245:36" pos:end="245:54"><name pos:start="245:36" pos:end="245:47"><name pos:start="245:36" pos:end="245:40">avctx</name><operator pos:start="245:41" pos:end="245:42">-&gt;</operator><name pos:start="245:43" pos:end="245:47">width</name></name> <operator pos:start="245:49" pos:end="245:50">&gt;&gt;</operator> <operator pos:start="245:52" pos:end="245:52">!</operator><operator pos:start="245:53" pos:end="245:53">!</operator><name pos:start="245:54" pos:end="245:54">i</name></expr></argument>, <argument pos:start="245:57" pos:end="245:69"><expr pos:start="245:57" pos:end="245:69"><name pos:start="245:57" pos:end="245:69"><name pos:start="245:57" pos:end="245:61">avctx</name><operator pos:start="245:62" pos:end="245:63">-&gt;</operator><name pos:start="245:64" pos:end="245:69">height</name></name></expr></argument>,

                                   <argument pos:start="247:36" pos:end="247:44"><expr pos:start="247:36" pos:end="247:44"><name pos:start="247:36" pos:end="247:44"><name pos:start="247:36" pos:end="247:36">c</name><operator pos:start="247:37" pos:end="247:38">-&gt;</operator><name pos:start="247:39" pos:end="247:44">slices</name></name></expr></argument>, <argument pos:start="247:47" pos:end="247:47"><expr pos:start="247:47" pos:end="247:47"><literal type="number" pos:start="247:47" pos:end="247:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="249:19" pos:end="257:17">else <block pos:start="249:24" pos:end="257:17">{<block_content pos:start="251:21" pos:end="255:52">

                    <expr_stmt pos:start="251:21" pos:end="255:52"><expr pos:start="251:21" pos:end="255:51"><call pos:start="251:21" pos:end="255:51"><name pos:start="251:21" pos:end="251:37">restore_median_il</name><argument_list pos:start="251:38" pos:end="255:51">(<argument pos:start="251:39" pos:end="251:54"><expr pos:start="251:39" pos:end="251:54"><name pos:start="251:39" pos:end="251:54"><name pos:start="251:39" pos:end="251:43">frame</name><operator pos:start="251:44" pos:end="251:44">.</operator><name pos:start="251:45" pos:end="251:45">f</name><operator pos:start="251:46" pos:end="251:47">-&gt;</operator><name pos:start="251:48" pos:end="251:51">data</name><index pos:start="251:52" pos:end="251:54">[<expr pos:start="251:53" pos:end="251:53"><name pos:start="251:53" pos:end="251:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="251:57" pos:end="251:57"><expr pos:start="251:57" pos:end="251:57"><literal type="number" pos:start="251:57" pos:end="251:57">1</literal></expr></argument>, <argument pos:start="251:60" pos:end="251:79"><expr pos:start="251:60" pos:end="251:79"><name pos:start="251:60" pos:end="251:79"><name pos:start="251:60" pos:end="251:64">frame</name><operator pos:start="251:65" pos:end="251:65">.</operator><name pos:start="251:66" pos:end="251:66">f</name><operator pos:start="251:67" pos:end="251:68">-&gt;</operator><name pos:start="251:69" pos:end="251:76">linesize</name><index pos:start="251:77" pos:end="251:79">[<expr pos:start="251:78" pos:end="251:78"><name pos:start="251:78" pos:end="251:78">i</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="253:39" pos:end="253:57"><expr pos:start="253:39" pos:end="253:57"><name pos:start="253:39" pos:end="253:50"><name pos:start="253:39" pos:end="253:43">avctx</name><operator pos:start="253:44" pos:end="253:45">-&gt;</operator><name pos:start="253:46" pos:end="253:50">width</name></name> <operator pos:start="253:52" pos:end="253:53">&gt;&gt;</operator> <operator pos:start="253:55" pos:end="253:55">!</operator><operator pos:start="253:56" pos:end="253:56">!</operator><name pos:start="253:57" pos:end="253:57">i</name></expr></argument>, <argument pos:start="253:60" pos:end="253:72"><expr pos:start="253:60" pos:end="253:72"><name pos:start="253:60" pos:end="253:72"><name pos:start="253:60" pos:end="253:64">avctx</name><operator pos:start="253:65" pos:end="253:66">-&gt;</operator><name pos:start="253:67" pos:end="253:72">height</name></name></expr></argument>,

                                      <argument pos:start="255:39" pos:end="255:47"><expr pos:start="255:39" pos:end="255:47"><name pos:start="255:39" pos:end="255:47"><name pos:start="255:39" pos:end="255:39">c</name><operator pos:start="255:40" pos:end="255:41">-&gt;</operator><name pos:start="255:42" pos:end="255:47">slices</name></name></expr></argument>, <argument pos:start="255:50" pos:end="255:50"><expr pos:start="255:50" pos:end="255:50"><literal type="number" pos:start="255:50" pos:end="255:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="263:9" pos:end="263:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="269:5" pos:end="269:27"><expr pos:start="269:5" pos:end="269:26"><name pos:start="269:5" pos:end="269:22"><name pos:start="269:5" pos:end="269:9">frame</name><operator pos:start="269:10" pos:end="269:10">.</operator><name pos:start="269:11" pos:end="269:11">f</name><operator pos:start="269:12" pos:end="269:13">-&gt;</operator><name pos:start="269:14" pos:end="269:22">key_frame</name></name> <operator pos:start="269:24" pos:end="269:24">=</operator> <literal type="number" pos:start="269:26" pos:end="269:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="271:5" pos:end="271:43"><expr pos:start="271:5" pos:end="271:42"><name pos:start="271:5" pos:end="271:22"><name pos:start="271:5" pos:end="271:9">frame</name><operator pos:start="271:10" pos:end="271:10">.</operator><name pos:start="271:11" pos:end="271:11">f</name><operator pos:start="271:12" pos:end="271:13">-&gt;</operator><name pos:start="271:14" pos:end="271:22">pict_type</name></name> <operator pos:start="271:24" pos:end="271:24">=</operator> <name pos:start="271:26" pos:end="271:42">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:48"><expr pos:start="273:5" pos:end="273:47"><name pos:start="273:5" pos:end="273:29"><name pos:start="273:5" pos:end="273:9">frame</name><operator pos:start="273:10" pos:end="273:10">.</operator><name pos:start="273:11" pos:end="273:11">f</name><operator pos:start="273:12" pos:end="273:13">-&gt;</operator><name pos:start="273:14" pos:end="273:29">interlaced_frame</name></name> <operator pos:start="273:31" pos:end="273:31">=</operator> <operator pos:start="273:33" pos:end="273:33">!</operator><operator pos:start="273:34" pos:end="273:34">!</operator><name pos:start="273:35" pos:end="273:47"><name pos:start="273:35" pos:end="273:35">c</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:47">interlaced</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:19"><expr pos:start="277:5" pos:end="277:18"><operator pos:start="277:5" pos:end="277:5">*</operator><name pos:start="277:6" pos:end="277:14">got_frame</name> <operator pos:start="277:16" pos:end="277:16">=</operator> <literal type="number" pos:start="277:18" pos:end="277:18">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="281:5" pos:end="281:63">/* always report that the buffer was completely consumed */</comment>

    <return pos:start="283:5" pos:end="283:20">return <expr pos:start="283:12" pos:end="283:19"><name pos:start="283:12" pos:end="283:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
