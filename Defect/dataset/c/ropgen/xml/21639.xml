<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21639.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">ffserver_parse_config_global</name><parameter_list pos:start="1:40" pos:end="3:69">(<parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:54">FFServerConfig</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">config</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:74">char</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:79">cmd</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:50">char</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:54">p</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:68"><decl pos:start="3:57" pos:end="3:68"><type pos:start="3:57" pos:end="3:68"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:68">line_num</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">arg</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="121:48"><if pos:start="11:5" pos:end="31:5">if <condition pos:start="11:8" pos:end="11:71">(<expr pos:start="11:9" pos:end="11:70"><operator pos:start="11:9" pos:end="11:9">!</operator><call pos:start="11:10" pos:end="11:35"><name pos:start="11:10" pos:end="11:22">av_strcasecmp</name><argument_list pos:start="11:23" pos:end="11:35">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">cmd</name></expr></argument>, <argument pos:start="11:29" pos:end="11:34"><expr pos:start="11:29" pos:end="11:34"><literal type="string" pos:start="11:29" pos:end="11:34">"Port"</literal></expr></argument>)</argument_list></call> <operator pos:start="11:37" pos:end="11:38">||</operator> <operator pos:start="11:40" pos:end="11:40">!</operator><call pos:start="11:41" pos:end="11:70"><name pos:start="11:41" pos:end="11:53">av_strcasecmp</name><argument_list pos:start="11:54" pos:end="11:70">(<argument pos:start="11:55" pos:end="11:57"><expr pos:start="11:55" pos:end="11:57"><name pos:start="11:55" pos:end="11:57">cmd</name></expr></argument>, <argument pos:start="11:60" pos:end="11:69"><expr pos:start="11:60" pos:end="11:69"><literal type="string" pos:start="11:60" pos:end="11:69">"HTTPPort"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:73" pos:end="31:5">{<block_content pos:start="13:9" pos:end="29:48">

        <if_stmt pos:start="13:9" pos:end="15:73"><if pos:start="13:9" pos:end="15:73">if <condition pos:start="13:12" pos:end="13:40">(<expr pos:start="13:13" pos:end="13:39"><operator pos:start="13:13" pos:end="13:13">!</operator><call pos:start="13:14" pos:end="13:39"><name pos:start="13:14" pos:end="13:26">av_strcasecmp</name><argument_list pos:start="13:27" pos:end="13:39">(<argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:30">cmd</name></expr></argument>, <argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><literal type="string" pos:start="13:33" pos:end="13:38">"Port"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:73"><block_content pos:start="15:13" pos:end="15:73">

            <expr_stmt pos:start="15:13" pos:end="15:73"><expr pos:start="15:13" pos:end="15:72"><call pos:start="15:13" pos:end="15:72"><name pos:start="15:13" pos:end="15:19">WARNING</name><argument_list pos:start="15:20" pos:end="15:72">(<argument pos:start="15:21" pos:end="15:71"><expr pos:start="15:21" pos:end="15:71"><literal type="string" pos:start="15:21" pos:end="15:71">"Port option is deprecated, use HTTPPort instead\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><call pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:24">ffserver_get_arg</name><argument_list pos:start="17:25" pos:end="17:45">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">arg</name></expr></argument>, <argument pos:start="17:31" pos:end="17:41"><expr pos:start="17:31" pos:end="17:41"><sizeof pos:start="17:31" pos:end="17:41">sizeof<argument_list pos:start="17:37" pos:end="17:41">(<argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:44" pos:end="17:44"><expr pos:start="17:44" pos:end="17:44"><name pos:start="17:44" pos:end="17:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:11">val</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:23"><name pos:start="19:15" pos:end="19:18">atoi</name><argument_list pos:start="19:19" pos:end="19:23">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:45"><if pos:start="21:9" pos:end="23:45">if <condition pos:start="21:12" pos:end="21:35">(<expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:15">val</name> <argument_list type="generic" pos:start="21:17" pos:end="21:28">&lt; <argument pos:start="21:19" pos:end="21:26"><expr pos:start="21:19" pos:end="21:26"><literal type="number" pos:start="21:19" pos:end="21:19">1</literal> <operator pos:start="21:21" pos:end="21:22">||</operator> <name pos:start="21:24" pos:end="21:26">val</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="21:30" pos:end="21:34">65536</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:45"><block_content pos:start="23:13" pos:end="23:45">

            <expr_stmt pos:start="23:13" pos:end="23:45"><expr pos:start="23:13" pos:end="23:44"><call pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:17">ERROR</name><argument_list pos:start="23:18" pos:end="23:44">(<argument pos:start="23:19" pos:end="23:38"><expr pos:start="23:19" pos:end="23:38"><literal type="string" pos:start="23:19" pos:end="23:38">"Invalid port: %s\n"</literal></expr></argument>, <argument pos:start="23:41" pos:end="23:43"><expr pos:start="23:41" pos:end="23:43"><name pos:start="23:41" pos:end="23:43">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:74"><if pos:start="25:9" pos:end="27:74">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:15">val</name> <operator pos:start="25:17" pos:end="25:17">&lt;</operator> <literal type="number" pos:start="25:19" pos:end="25:22">1024</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:74"><block_content pos:start="27:13" pos:end="27:74">

            <expr_stmt pos:start="27:13" pos:end="27:74"><expr pos:start="27:13" pos:end="27:73"><call pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:19">WARNING</name><argument_list pos:start="27:20" pos:end="27:73">(<argument pos:start="27:21" pos:end="27:67"><expr pos:start="27:21" pos:end="27:67"><literal type="string" pos:start="27:21" pos:end="27:67">"Trying to use IETF assigned system port: %d\n"</literal></expr></argument>, <argument pos:start="27:70" pos:end="27:72"><expr pos:start="27:70" pos:end="27:72"><name pos:start="27:70" pos:end="27:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:14">config</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:25">http_addr</name><operator pos:start="29:26" pos:end="29:26">.</operator><name pos:start="29:27" pos:end="29:34">sin_port</name></name> <operator pos:start="29:36" pos:end="29:36">=</operator> <call pos:start="29:38" pos:end="29:47"><name pos:start="29:38" pos:end="29:42">htons</name><argument_list pos:start="29:43" pos:end="29:47">(<argument pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="43:5">else if <condition pos:start="31:15" pos:end="31:92">(<expr pos:start="31:16" pos:end="31:91"><operator pos:start="31:16" pos:end="31:16">!</operator><call pos:start="31:17" pos:end="31:53"><name pos:start="31:17" pos:end="31:29">av_strcasecmp</name><argument_list pos:start="31:30" pos:end="31:53">(<argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">cmd</name></expr></argument>, <argument pos:start="31:36" pos:end="31:52"><expr pos:start="31:36" pos:end="31:52"><literal type="string" pos:start="31:36" pos:end="31:52">"HTTPBindAddress"</literal></expr></argument>)</argument_list></call> <operator pos:start="31:55" pos:end="31:56">||</operator> <operator pos:start="31:58" pos:end="31:58">!</operator><call pos:start="31:59" pos:end="31:91"><name pos:start="31:59" pos:end="31:71">av_strcasecmp</name><argument_list pos:start="31:72" pos:end="31:91">(<argument pos:start="31:73" pos:end="31:75"><expr pos:start="31:73" pos:end="31:75"><name pos:start="31:73" pos:end="31:75">cmd</name></expr></argument>, <argument pos:start="31:78" pos:end="31:90"><expr pos:start="31:78" pos:end="31:90"><literal type="string" pos:start="31:78" pos:end="31:90">"BindAddress"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:94" pos:end="43:5">{<block_content pos:start="33:9" pos:end="41:63">

        <if_stmt pos:start="33:9" pos:end="35:87"><if pos:start="33:9" pos:end="35:87">if <condition pos:start="33:12" pos:end="33:47">(<expr pos:start="33:13" pos:end="33:46"><operator pos:start="33:13" pos:end="33:13">!</operator><call pos:start="33:14" pos:end="33:46"><name pos:start="33:14" pos:end="33:26">av_strcasecmp</name><argument_list pos:start="33:27" pos:end="33:46">(<argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">cmd</name></expr></argument>, <argument pos:start="33:33" pos:end="33:45"><expr pos:start="33:33" pos:end="33:45"><literal type="string" pos:start="33:33" pos:end="33:45">"BindAddress"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:87"><block_content pos:start="35:13" pos:end="35:87">

            <expr_stmt pos:start="35:13" pos:end="35:87"><expr pos:start="35:13" pos:end="35:86"><call pos:start="35:13" pos:end="35:86"><name pos:start="35:13" pos:end="35:19">WARNING</name><argument_list pos:start="35:20" pos:end="35:86">(<argument pos:start="35:21" pos:end="35:85"><expr pos:start="35:21" pos:end="35:85"><literal type="string" pos:start="35:21" pos:end="35:85">"BindAddress option is deprecated, use HTTPBindAddress instead\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><call pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:24">ffserver_get_arg</name><argument_list pos:start="37:25" pos:end="37:45">(<argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">arg</name></expr></argument>, <argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><sizeof pos:start="37:31" pos:end="37:41">sizeof<argument_list pos:start="37:37" pos:end="37:41">(<argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><name pos:start="37:44" pos:end="37:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:63"><if pos:start="39:9" pos:end="41:63">if <condition pos:start="39:12" pos:end="39:64">(<expr pos:start="39:13" pos:end="39:63"><call pos:start="39:13" pos:end="39:58"><name pos:start="39:13" pos:end="39:24">resolve_host</name><argument_list pos:start="39:25" pos:end="39:58">(<argument pos:start="39:26" pos:end="39:52"><expr pos:start="39:26" pos:end="39:52"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:52"><name pos:start="39:27" pos:end="39:32">config</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:43">http_addr</name><operator pos:start="39:44" pos:end="39:44">.</operator><name pos:start="39:45" pos:end="39:52">sin_addr</name></name></expr></argument>, <argument pos:start="39:55" pos:end="39:57"><expr pos:start="39:55" pos:end="39:57"><name pos:start="39:55" pos:end="39:57">arg</name></expr></argument>)</argument_list></call> <operator pos:start="39:60" pos:end="39:61">!=</operator> <literal type="number" pos:start="39:63" pos:end="39:63">0</literal></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:63"><block_content pos:start="41:13" pos:end="41:63">

            <expr_stmt pos:start="41:13" pos:end="41:63"><expr pos:start="41:13" pos:end="41:62"><call pos:start="41:13" pos:end="41:62"><name pos:start="41:13" pos:end="41:17">ERROR</name><argument_list pos:start="41:18" pos:end="41:62">(<argument pos:start="41:19" pos:end="41:56"><expr pos:start="41:19" pos:end="41:56"><literal type="string" pos:start="41:19" pos:end="41:56">"%s:%d: Invalid host/IP address: %s\n"</literal></expr></argument>, <argument pos:start="41:59" pos:end="41:61"><expr pos:start="41:59" pos:end="41:61"><name pos:start="41:59" pos:end="41:61">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="47:5">else if <condition pos:start="43:15" pos:end="43:47">(<expr pos:start="43:16" pos:end="43:46"><operator pos:start="43:16" pos:end="43:16">!</operator><call pos:start="43:17" pos:end="43:46"><name pos:start="43:17" pos:end="43:29">av_strcasecmp</name><argument_list pos:start="43:30" pos:end="43:46">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">cmd</name></expr></argument>, <argument pos:start="43:36" pos:end="43:45"><expr pos:start="43:36" pos:end="43:45"><literal type="string" pos:start="43:36" pos:end="43:45">"NoDaemon"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:49" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:73">

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><call pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:15">WARNING</name><argument_list pos:start="45:16" pos:end="45:72">(<argument pos:start="45:17" pos:end="45:71"><expr pos:start="45:17" pos:end="45:71"><literal type="string" pos:start="45:17" pos:end="45:71">"NoDaemon option has no effect, you should remove it\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="59:5">else if <condition pos:start="47:15" pos:end="47:47">(<expr pos:start="47:16" pos:end="47:46"><operator pos:start="47:16" pos:end="47:16">!</operator><call pos:start="47:17" pos:end="47:46"><name pos:start="47:17" pos:end="47:29">av_strcasecmp</name><argument_list pos:start="47:30" pos:end="47:46">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">cmd</name></expr></argument>, <argument pos:start="47:36" pos:end="47:45"><expr pos:start="47:36" pos:end="47:45"><literal type="string" pos:start="47:36" pos:end="47:45">"RTSPPort"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:49" pos:end="59:5">{<block_content pos:start="49:9" pos:end="57:54">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:24">ffserver_get_arg</name><argument_list pos:start="49:25" pos:end="49:45">(<argument pos:start="49:26" pos:end="49:28"><expr pos:start="49:26" pos:end="49:28"><name pos:start="49:26" pos:end="49:28">arg</name></expr></argument>, <argument pos:start="49:31" pos:end="49:41"><expr pos:start="49:31" pos:end="49:41"><sizeof pos:start="49:31" pos:end="49:41">sizeof<argument_list pos:start="49:37" pos:end="49:41">(<argument pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><name pos:start="49:44" pos:end="49:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:11">val</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:23"><name pos:start="51:15" pos:end="51:18">atoi</name><argument_list pos:start="51:19" pos:end="51:23">(<argument pos:start="51:20" pos:end="51:22"><expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:52"><if pos:start="53:9" pos:end="55:52">if <condition pos:start="53:12" pos:end="53:35">(<expr pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:15">val</name> <argument_list type="generic" pos:start="53:17" pos:end="53:28">&lt; <argument pos:start="53:19" pos:end="53:26"><expr pos:start="53:19" pos:end="53:26"><literal type="number" pos:start="53:19" pos:end="53:19">1</literal> <operator pos:start="53:21" pos:end="53:22">||</operator> <name pos:start="53:24" pos:end="53:26">val</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="53:30" pos:end="53:34">65536</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:52"><block_content pos:start="55:13" pos:end="55:52">

            <expr_stmt pos:start="55:13" pos:end="55:52"><expr pos:start="55:13" pos:end="55:51"><call pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:17">ERROR</name><argument_list pos:start="55:18" pos:end="55:51">(<argument pos:start="55:19" pos:end="55:45"><expr pos:start="55:19" pos:end="55:45"><literal type="string" pos:start="55:19" pos:end="55:45">"%s:%d: Invalid port: %s\n"</literal></expr></argument>, <argument pos:start="55:48" pos:end="55:50"><expr pos:start="55:48" pos:end="55:50"><name pos:start="55:48" pos:end="55:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:54"><expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:14">config</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">rtsp_addr</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:34">sin_port</name></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <call pos:start="57:38" pos:end="57:53"><name pos:start="57:38" pos:end="57:42">htons</name><argument_list pos:start="57:43" pos:end="57:53">(<argument pos:start="57:44" pos:end="57:52"><expr pos:start="57:44" pos:end="57:52"><call pos:start="57:44" pos:end="57:52"><name pos:start="57:44" pos:end="57:47">atoi</name><argument_list pos:start="57:48" pos:end="57:52">(<argument pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><name pos:start="57:49" pos:end="57:51">arg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="67:5">else if <condition pos:start="59:15" pos:end="59:54">(<expr pos:start="59:16" pos:end="59:53"><operator pos:start="59:16" pos:end="59:16">!</operator><call pos:start="59:17" pos:end="59:53"><name pos:start="59:17" pos:end="59:29">av_strcasecmp</name><argument_list pos:start="59:30" pos:end="59:53">(<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">cmd</name></expr></argument>, <argument pos:start="59:36" pos:end="59:52"><expr pos:start="59:36" pos:end="59:52"><literal type="string" pos:start="59:36" pos:end="59:52">"RTSPBindAddress"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:56" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:56">

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><call pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:24">ffserver_get_arg</name><argument_list pos:start="61:25" pos:end="61:45">(<argument pos:start="61:26" pos:end="61:28"><expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:28">arg</name></expr></argument>, <argument pos:start="61:31" pos:end="61:41"><expr pos:start="61:31" pos:end="61:41"><sizeof pos:start="61:31" pos:end="61:41">sizeof<argument_list pos:start="61:37" pos:end="61:41">(<argument pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="61:44" pos:end="61:44"><expr pos:start="61:44" pos:end="61:44"><name pos:start="61:44" pos:end="61:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:56"><if pos:start="63:9" pos:end="65:56">if <condition pos:start="63:12" pos:end="63:64">(<expr pos:start="63:13" pos:end="63:63"><call pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:24">resolve_host</name><argument_list pos:start="63:25" pos:end="63:58">(<argument pos:start="63:26" pos:end="63:52"><expr pos:start="63:26" pos:end="63:52"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:52"><name pos:start="63:27" pos:end="63:32">config</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:43">rtsp_addr</name><operator pos:start="63:44" pos:end="63:44">.</operator><name pos:start="63:45" pos:end="63:52">sin_addr</name></name></expr></argument>, <argument pos:start="63:55" pos:end="63:57"><expr pos:start="63:55" pos:end="63:57"><name pos:start="63:55" pos:end="63:57">arg</name></expr></argument>)</argument_list></call> <operator pos:start="63:60" pos:end="63:61">!=</operator> <literal type="number" pos:start="63:63" pos:end="63:63">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:56"><block_content pos:start="65:13" pos:end="65:56">

            <expr_stmt pos:start="65:13" pos:end="65:56"><expr pos:start="65:13" pos:end="65:55"><call pos:start="65:13" pos:end="65:55"><name pos:start="65:13" pos:end="65:17">ERROR</name><argument_list pos:start="65:18" pos:end="65:55">(<argument pos:start="65:19" pos:end="65:49"><expr pos:start="65:19" pos:end="65:49"><literal type="string" pos:start="65:19" pos:end="65:49">"Invalid host/IP address: %s\n"</literal></expr></argument>, <argument pos:start="65:52" pos:end="65:54"><expr pos:start="65:52" pos:end="65:54"><name pos:start="65:52" pos:end="65:54">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="79:5">else if <condition pos:start="67:15" pos:end="67:57">(<expr pos:start="67:16" pos:end="67:56"><operator pos:start="67:16" pos:end="67:16">!</operator><call pos:start="67:17" pos:end="67:56"><name pos:start="67:17" pos:end="67:29">av_strcasecmp</name><argument_list pos:start="67:30" pos:end="67:56">(<argument pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><name pos:start="67:31" pos:end="67:33">cmd</name></expr></argument>, <argument pos:start="67:36" pos:end="67:55"><expr pos:start="67:36" pos:end="67:55"><literal type="string" pos:start="67:36" pos:end="67:55">"MaxHTTPConnections"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:59" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:46">

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><call pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:24">ffserver_get_arg</name><argument_list pos:start="69:25" pos:end="69:45">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">arg</name></expr></argument>, <argument pos:start="69:31" pos:end="69:41"><expr pos:start="69:31" pos:end="69:41"><sizeof pos:start="69:31" pos:end="69:41">sizeof<argument_list pos:start="69:37" pos:end="69:41">(<argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:44" pos:end="69:44"><expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:24"><expr pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:11">val</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:23"><name pos:start="71:15" pos:end="71:18">atoi</name><argument_list pos:start="71:19" pos:end="71:23">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:59"><if pos:start="73:9" pos:end="75:59">if <condition pos:start="73:12" pos:end="73:35">(<expr pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:15">val</name> <argument_list type="generic" pos:start="73:17" pos:end="73:28">&lt; <argument pos:start="73:19" pos:end="73:26"><expr pos:start="73:19" pos:end="73:26"><literal type="number" pos:start="73:19" pos:end="73:19">1</literal> <operator pos:start="73:21" pos:end="73:22">||</operator> <name pos:start="73:24" pos:end="73:26">val</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="73:30" pos:end="73:34">65536</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:59"><block_content pos:start="75:13" pos:end="75:59">

            <expr_stmt pos:start="75:13" pos:end="75:59"><expr pos:start="75:13" pos:end="75:58"><call pos:start="75:13" pos:end="75:58"><name pos:start="75:13" pos:end="75:17">ERROR</name><argument_list pos:start="75:18" pos:end="75:58">(<argument pos:start="75:19" pos:end="75:52"><expr pos:start="75:19" pos:end="75:52"><literal type="string" pos:start="75:19" pos:end="75:52">"Invalid MaxHTTPConnections: %s\n"</literal></expr></argument>, <argument pos:start="75:55" pos:end="75:57"><expr pos:start="75:55" pos:end="75:57"><name pos:start="75:55" pos:end="75:57">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:14">config</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:39">nb_max_http_connections</name></name> <operator pos:start="77:41" pos:end="77:41">=</operator> <name pos:start="77:43" pos:end="77:45">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="93:5">else if <condition pos:start="79:15" pos:end="79:49">(<expr pos:start="79:16" pos:end="79:48"><operator pos:start="79:16" pos:end="79:16">!</operator><call pos:start="79:17" pos:end="79:48"><name pos:start="79:17" pos:end="79:29">av_strcasecmp</name><argument_list pos:start="79:30" pos:end="79:48">(<argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">cmd</name></expr></argument>, <argument pos:start="79:36" pos:end="79:47"><expr pos:start="79:36" pos:end="79:47"><literal type="string" pos:start="79:36" pos:end="79:47">"MaxClients"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:51" pos:end="93:5">{<block_content pos:start="81:9" pos:end="91:45">

        <expr_stmt pos:start="81:9" pos:end="81:46"><expr pos:start="81:9" pos:end="81:45"><call pos:start="81:9" pos:end="81:45"><name pos:start="81:9" pos:end="81:24">ffserver_get_arg</name><argument_list pos:start="81:25" pos:end="81:45">(<argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">arg</name></expr></argument>, <argument pos:start="81:31" pos:end="81:41"><expr pos:start="81:31" pos:end="81:41"><sizeof pos:start="81:31" pos:end="81:41">sizeof<argument_list pos:start="81:37" pos:end="81:41">(<argument pos:start="81:38" pos:end="81:40"><expr pos:start="81:38" pos:end="81:40"><name pos:start="81:38" pos:end="81:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="81:44" pos:end="81:44"><expr pos:start="81:44" pos:end="81:44"><name pos:start="81:44" pos:end="81:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:11">val</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:18">atoi</name><argument_list pos:start="83:19" pos:end="83:23">(<argument pos:start="83:20" pos:end="83:22"><expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:45"><if pos:start="85:9" pos:end="87:51">if <condition pos:start="85:12" pos:end="85:61">(<expr pos:start="85:13" pos:end="85:60"><name pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:15">val</name> <argument_list type="generic" pos:start="85:17" pos:end="85:28">&lt; <argument pos:start="85:19" pos:end="85:26"><expr pos:start="85:19" pos:end="85:26"><literal type="number" pos:start="85:19" pos:end="85:19">1</literal> <operator pos:start="85:21" pos:end="85:22">||</operator> <name pos:start="85:24" pos:end="85:26">val</name></expr></argument> &gt;</argument_list></name> <name pos:start="85:30" pos:end="85:60"><name pos:start="85:30" pos:end="85:35">config</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:60">nb_max_http_connections</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:51"><block_content pos:start="87:13" pos:end="87:51">

            <expr_stmt pos:start="87:13" pos:end="87:51"><expr pos:start="87:13" pos:end="87:50"><call pos:start="87:13" pos:end="87:50"><name pos:start="87:13" pos:end="87:17">ERROR</name><argument_list pos:start="87:18" pos:end="87:50">(<argument pos:start="87:19" pos:end="87:44"><expr pos:start="87:19" pos:end="87:44"><literal type="string" pos:start="87:19" pos:end="87:44">"Invalid MaxClients: %s\n"</literal></expr></argument>, <argument pos:start="87:47" pos:end="87:49"><expr pos:start="87:47" pos:end="87:49"><name pos:start="87:47" pos:end="87:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="89:9" pos:end="91:45">else<block type="pseudo" pos:start="91:13" pos:end="91:45"><block_content pos:start="91:13" pos:end="91:45">

            <expr_stmt pos:start="91:13" pos:end="91:45"><expr pos:start="91:13" pos:end="91:44"><name pos:start="91:13" pos:end="91:38"><name pos:start="91:13" pos:end="91:18">config</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:38">nb_max_connections</name></name> <operator pos:start="91:40" pos:end="91:40">=</operator> <name pos:start="91:42" pos:end="91:44">val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="109:5">else if <condition pos:start="93:15" pos:end="93:51">(<expr pos:start="93:16" pos:end="93:50"><operator pos:start="93:16" pos:end="93:16">!</operator><call pos:start="93:17" pos:end="93:50"><name pos:start="93:17" pos:end="93:29">av_strcasecmp</name><argument_list pos:start="93:30" pos:end="93:50">(<argument pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:33">cmd</name></expr></argument>, <argument pos:start="93:36" pos:end="93:49"><expr pos:start="93:36" pos:end="93:49"><literal type="string" pos:start="93:36" pos:end="93:49">"MaxBandwidth"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:53" pos:end="109:5">{<block_content pos:start="95:9" pos:end="107:42">

        <decl_stmt pos:start="95:9" pos:end="95:22"><decl pos:start="95:9" pos:end="95:21"><type pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:15">int64_t</name></type> <name pos:start="95:17" pos:end="95:21">llval</name></decl>;</decl_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><call pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:24">ffserver_get_arg</name><argument_list pos:start="97:25" pos:end="97:45">(<argument pos:start="97:26" pos:end="97:28"><expr pos:start="97:26" pos:end="97:28"><name pos:start="97:26" pos:end="97:28">arg</name></expr></argument>, <argument pos:start="97:31" pos:end="97:41"><expr pos:start="97:31" pos:end="97:41"><sizeof pos:start="97:31" pos:end="97:41">sizeof<argument_list pos:start="97:37" pos:end="97:41">(<argument pos:start="97:38" pos:end="97:40"><expr pos:start="97:38" pos:end="97:40"><name pos:start="97:38" pos:end="97:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:44" pos:end="97:44"><expr pos:start="97:44" pos:end="97:44"><name pos:start="97:44" pos:end="97:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:13">llval</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <call pos:start="99:17" pos:end="99:38"><name pos:start="99:17" pos:end="99:23">strtoll</name><argument_list pos:start="99:24" pos:end="99:38">(<argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">arg</name></expr></argument>, <argument pos:start="99:30" pos:end="99:33"><expr pos:start="99:30" pos:end="99:33"><name pos:start="99:30" pos:end="99:33">NULL</name></expr></argument>, <argument pos:start="99:36" pos:end="99:37"><expr pos:start="99:36" pos:end="99:37"><literal type="number" pos:start="99:36" pos:end="99:37">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="107:42"><if pos:start="101:9" pos:end="103:53">if <condition pos:start="101:12" pos:end="101:43">(<expr pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:17">llval</name> <argument_list type="generic" pos:start="101:19" pos:end="101:33">&lt; <argument pos:start="101:21" pos:end="101:31"><expr pos:start="101:21" pos:end="101:31"><literal type="number" pos:start="101:21" pos:end="101:22">10</literal> <operator pos:start="101:24" pos:end="101:25">||</operator> <name pos:start="101:27" pos:end="101:31">llval</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="101:35" pos:end="101:42">10000000</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:53"><block_content pos:start="103:13" pos:end="103:53">

            <expr_stmt pos:start="103:13" pos:end="103:53"><expr pos:start="103:13" pos:end="103:52"><call pos:start="103:13" pos:end="103:52"><name pos:start="103:13" pos:end="103:17">ERROR</name><argument_list pos:start="103:18" pos:end="103:52">(<argument pos:start="103:19" pos:end="103:46"><expr pos:start="103:19" pos:end="103:46"><literal type="string" pos:start="103:19" pos:end="103:46">"Invalid MaxBandwidth: %s\n"</literal></expr></argument>, <argument pos:start="103:49" pos:end="103:51"><expr pos:start="103:49" pos:end="103:51"><name pos:start="103:49" pos:end="103:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="105:9" pos:end="107:42">else<block type="pseudo" pos:start="107:13" pos:end="107:42"><block_content pos:start="107:13" pos:end="107:42">

            <expr_stmt pos:start="107:13" pos:end="107:42"><expr pos:start="107:13" pos:end="107:41"><name pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:18">config</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:33">max_bandwidth</name></name> <operator pos:start="107:35" pos:end="107:35">=</operator> <name pos:start="107:37" pos:end="107:41">llval</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="109:7" pos:end="115:5">else if <condition pos:start="109:15" pos:end="109:48">(<expr pos:start="109:16" pos:end="109:47"><operator pos:start="109:16" pos:end="109:16">!</operator><call pos:start="109:17" pos:end="109:47"><name pos:start="109:17" pos:end="109:29">av_strcasecmp</name><argument_list pos:start="109:30" pos:end="109:47">(<argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">cmd</name></expr></argument>, <argument pos:start="109:36" pos:end="109:46"><expr pos:start="109:36" pos:end="109:46"><literal type="string" pos:start="109:36" pos:end="109:46">"CustomLog"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:50" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:82">

        <if_stmt pos:start="111:9" pos:end="113:82"><if pos:start="111:9" pos:end="113:82">if <condition pos:start="111:12" pos:end="111:27">(<expr pos:start="111:13" pos:end="111:26"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:26"><name pos:start="111:14" pos:end="111:19">config</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:26">debug</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:82"><block_content pos:start="113:13" pos:end="113:82">

            <expr_stmt pos:start="113:13" pos:end="113:82"><expr pos:start="113:13" pos:end="113:81"><call pos:start="113:13" pos:end="113:81"><name pos:start="113:13" pos:end="113:28">ffserver_get_arg</name><argument_list pos:start="113:29" pos:end="113:81">(<argument pos:start="113:30" pos:end="113:48"><expr pos:start="113:30" pos:end="113:48"><name pos:start="113:30" pos:end="113:48"><name pos:start="113:30" pos:end="113:35">config</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:48">logfilename</name></name></expr></argument>, <argument pos:start="113:51" pos:end="113:77"><expr pos:start="113:51" pos:end="113:77"><sizeof pos:start="113:51" pos:end="113:77">sizeof<argument_list pos:start="113:57" pos:end="113:77">(<argument pos:start="113:58" pos:end="113:76"><expr pos:start="113:58" pos:end="113:76"><name pos:start="113:58" pos:end="113:76"><name pos:start="113:58" pos:end="113:63">config</name><operator pos:start="113:64" pos:end="113:65">-&gt;</operator><name pos:start="113:66" pos:end="113:76">logfilename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="113:80" pos:end="113:80"><expr pos:start="113:80" pos:end="113:80"><name pos:start="113:80" pos:end="113:80">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="115:7" pos:end="119:5">else if <condition pos:start="115:15" pos:end="115:49">(<expr pos:start="115:16" pos:end="115:48"><operator pos:start="115:16" pos:end="115:16">!</operator><call pos:start="115:17" pos:end="115:48"><name pos:start="115:17" pos:end="115:29">av_strcasecmp</name><argument_list pos:start="115:30" pos:end="115:48">(<argument pos:start="115:31" pos:end="115:33"><expr pos:start="115:31" pos:end="115:33"><name pos:start="115:31" pos:end="115:33">cmd</name></expr></argument>, <argument pos:start="115:36" pos:end="115:47"><expr pos:start="115:36" pos:end="115:47"><literal type="string" pos:start="115:36" pos:end="115:47">"LoadModule"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:51" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:56">

        <expr_stmt pos:start="117:9" pos:end="117:56"><expr pos:start="117:9" pos:end="117:55"><call pos:start="117:9" pos:end="117:55"><name pos:start="117:9" pos:end="117:13">ERROR</name><argument_list pos:start="117:14" pos:end="117:55">(<argument pos:start="117:15" pos:end="117:54"><expr pos:start="117:15" pos:end="117:54"><literal type="string" pos:start="117:15" pos:end="117:54">"Loadable modules no longer supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="121:48">else<block type="pseudo" pos:start="121:9" pos:end="121:48"><block_content pos:start="121:9" pos:end="121:48">

        <expr_stmt pos:start="121:9" pos:end="121:48"><expr pos:start="121:9" pos:end="121:47"><call pos:start="121:9" pos:end="121:47"><name pos:start="121:9" pos:end="121:13">ERROR</name><argument_list pos:start="121:14" pos:end="121:47">(<argument pos:start="121:15" pos:end="121:41"><expr pos:start="121:15" pos:end="121:41"><literal type="string" pos:start="121:15" pos:end="121:41">"Incorrect keyword: '%s'\n"</literal></expr></argument>, <argument pos:start="121:44" pos:end="121:46"><expr pos:start="121:44" pos:end="121:46"><name pos:start="121:44" pos:end="121:46">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
