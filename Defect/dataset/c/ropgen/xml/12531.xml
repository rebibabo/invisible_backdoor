<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12531.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">sdp_parse_fmtp_config</name><parameter_list pos:start="1:34" pos:end="3:58">(<parameter pos:start="1:35" pos:end="1:56"><decl pos:start="1:35" pos:end="1:56"><type pos:start="1:35" pos:end="1:56"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:56">codec</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:62">void</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">ctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:44"><decl pos:start="3:35" pos:end="3:44"><type pos:start="3:35" pos:end="3:44"><name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">attr</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:57"><decl pos:start="3:47" pos:end="3:57"><type pos:start="3:47" pos:end="3:57"><name pos:start="3:47" pos:end="3:50">char</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:57">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:11">

    <switch pos:start="7:5" pos:end="47:5">switch <condition pos:start="7:12" pos:end="7:28">(<expr pos:start="7:13" pos:end="7:27"><name pos:start="7:13" pos:end="7:27"><name pos:start="7:13" pos:end="7:17">codec</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:27">codec_id</name></name></expr>)</condition> <block pos:start="7:30" pos:end="47:5">{<block_content pos:start="9:9" pos:end="45:18">

        <case pos:start="9:9" pos:end="9:28">case <expr pos:start="9:14" pos:end="9:27"><name pos:start="9:14" pos:end="9:27">CODEC_ID_MPEG4</name></expr>:</case>

        <case pos:start="11:9" pos:end="11:26">case <expr pos:start="11:14" pos:end="11:25"><name pos:start="11:14" pos:end="11:25">CODEC_ID_AAC</name></expr>:</case>

            <if_stmt pos:start="13:13" pos:end="33:13"><if pos:start="13:13" pos:end="33:13">if <condition pos:start="13:16" pos:end="13:40">(<expr pos:start="13:17" pos:end="13:39"><operator pos:start="13:17" pos:end="13:17">!</operator><call pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:23">strcmp</name><argument_list pos:start="13:24" pos:end="13:39">(<argument pos:start="13:25" pos:end="13:28"><expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">attr</name></expr></argument>, <argument pos:start="13:31" pos:end="13:38"><expr pos:start="13:31" pos:end="13:38"><literal type="string" pos:start="13:31" pos:end="13:38">"config"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:42" pos:end="33:13">{<block_content pos:start="17:17" pos:end="31:53">

                <comment type="block" pos:start="15:17" pos:end="15:55">/* decode the hexa encoded parameter */</comment>

                <decl_stmt pos:start="17:17" pos:end="17:51"><decl pos:start="17:17" pos:end="17:50"><type pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">int</name></type> <name pos:start="17:21" pos:end="17:23">len</name> <init pos:start="17:25" pos:end="17:50">= <expr pos:start="17:27" pos:end="17:50"><call pos:start="17:27" pos:end="17:50"><name pos:start="17:27" pos:end="17:37">hex_to_data</name><argument_list pos:start="17:38" pos:end="17:50">(<argument pos:start="17:39" pos:end="17:42"><expr pos:start="17:39" pos:end="17:42"><name pos:start="17:39" pos:end="17:42">NULL</name></expr></argument>, <argument pos:start="17:45" pos:end="17:49"><expr pos:start="17:45" pos:end="17:49"><name pos:start="17:45" pos:end="17:49">value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="19:17" pos:end="21:46"><if pos:start="19:17" pos:end="21:46">if <condition pos:start="19:20" pos:end="19:37">(<expr pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:36"><name pos:start="19:21" pos:end="19:25">codec</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:36">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="21:21" pos:end="21:46"><block_content pos:start="21:21" pos:end="21:46">

                    <expr_stmt pos:start="21:21" pos:end="21:46"><expr pos:start="21:21" pos:end="21:45"><call pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:27">av_free</name><argument_list pos:start="21:28" pos:end="21:45">(<argument pos:start="21:29" pos:end="21:44"><expr pos:start="21:29" pos:end="21:44"><name pos:start="21:29" pos:end="21:44"><name pos:start="21:29" pos:end="21:33">codec</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:44">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="23:17" pos:end="23:82"><expr pos:start="23:17" pos:end="23:81"><name pos:start="23:17" pos:end="23:32"><name pos:start="23:17" pos:end="23:21">codec</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:32">extradata</name></name> <operator pos:start="23:34" pos:end="23:34">=</operator> <call pos:start="23:36" pos:end="23:81"><name pos:start="23:36" pos:end="23:45">av_mallocz</name><argument_list pos:start="23:46" pos:end="23:81">(<argument pos:start="23:47" pos:end="23:80"><expr pos:start="23:47" pos:end="23:80"><name pos:start="23:47" pos:end="23:49">len</name> <operator pos:start="23:51" pos:end="23:51">+</operator> <name pos:start="23:53" pos:end="23:80">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="25:17" pos:end="27:27"><if pos:start="25:17" pos:end="27:27">if <condition pos:start="25:20" pos:end="25:38">(<expr pos:start="25:21" pos:end="25:37"><operator pos:start="25:21" pos:end="25:21">!</operator><name pos:start="25:22" pos:end="25:37"><name pos:start="25:22" pos:end="25:26">codec</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:37">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:27"><block_content pos:start="27:21" pos:end="27:27">

                    <return pos:start="27:21" pos:end="27:27">return;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:44"><expr pos:start="29:17" pos:end="29:43"><name pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:21">codec</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:37">extradata_size</name></name> <operator pos:start="29:39" pos:end="29:39">=</operator> <name pos:start="29:41" pos:end="29:43">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="31:53"><expr pos:start="31:17" pos:end="31:52"><call pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:27">hex_to_data</name><argument_list pos:start="31:28" pos:end="31:52">(<argument pos:start="31:29" pos:end="31:44"><expr pos:start="31:29" pos:end="31:44"><name pos:start="31:29" pos:end="31:44"><name pos:start="31:29" pos:end="31:33">codec</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:44">extradata</name></name></expr></argument>, <argument pos:start="31:47" pos:end="31:51"><expr pos:start="31:47" pos:end="31:51"><name pos:start="31:47" pos:end="31:51">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:29">case <expr pos:start="37:14" pos:end="37:28"><name pos:start="37:14" pos:end="37:28">CODEC_ID_VORBIS</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:65"><expr pos:start="39:13" pos:end="39:64"><call pos:start="39:13" pos:end="39:64"><name pos:start="39:13" pos:end="39:39">ff_vorbis_parse_fmtp_config</name><argument_list pos:start="39:40" pos:end="39:64">(<argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><name pos:start="39:41" pos:end="39:45">codec</name></expr></argument>, <argument pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:50">ctx</name></expr></argument>, <argument pos:start="39:53" pos:end="39:56"><expr pos:start="39:53" pos:end="39:56"><name pos:start="39:53" pos:end="39:56">attr</name></expr></argument>, <argument pos:start="39:59" pos:end="39:63"><expr pos:start="39:59" pos:end="39:63"><name pos:start="39:59" pos:end="39:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <default pos:start="43:9" pos:end="43:16">default:</default>

            <break pos:start="45:13" pos:end="45:18">break;</break>

    </block_content>}</block></switch>

    <return pos:start="49:5" pos:end="49:11">return;</return>

</block_content>}</block></function>
</unit>
