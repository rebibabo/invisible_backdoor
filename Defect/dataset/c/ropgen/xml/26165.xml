<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26165.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">put_flac_codecpriv</name><parameter_list pos:start="1:30" pos:end="1:91">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:63">ByteIOContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">pb</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:90"><decl pos:start="1:70" pos:end="1:90"><type pos:start="1:70" pos:end="1:90"><name pos:start="1:70" pos:end="1:83">AVCodecContext</name> <modifier pos:start="1:85" pos:end="1:85">*</modifier></type><name pos:start="1:86" pos:end="1:90">codec</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="9:5" pos:end="35:13">

    <comment type="line" pos:start="5:5" pos:end="5:66">// if the extradata_size is greater than FLAC_STREAMINFO_SIZE,</comment>

    <comment type="line" pos:start="7:5" pos:end="7:50">// assume that it's in Matroska format already</comment>

    <if_stmt pos:start="9:5" pos:end="31:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:53">(<expr pos:start="9:9" pos:end="9:52"><name pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:13">codec</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:29">extradata_size</name></name> <operator pos:start="9:31" pos:end="9:31">&lt;</operator> <name pos:start="9:33" pos:end="9:52">FLAC_STREAMINFO_SIZE</name></expr>)</condition> <block pos:start="9:55" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:18">

        <expr_stmt pos:start="11:9" pos:end="11:60"><expr pos:start="11:9" pos:end="11:59"><call pos:start="11:9" pos:end="11:59"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:59">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">s</name></expr></argument>, <argument pos:start="11:19" pos:end="11:30"><expr pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:33" pos:end="11:58"><expr pos:start="11:33" pos:end="11:58"><literal type="string" pos:start="11:33" pos:end="11:58">"Invalid FLAC extradata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="25:5">else if <condition pos:start="15:15" pos:end="15:61">(<expr pos:start="15:16" pos:end="15:60"><name pos:start="15:16" pos:end="15:36"><name pos:start="15:16" pos:end="15:20">codec</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:36">extradata_size</name></name> <operator pos:start="15:38" pos:end="15:39">==</operator> <name pos:start="15:41" pos:end="15:60">FLAC_STREAMINFO_SIZE</name></expr>)</condition> <block pos:start="15:63" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:43">

        <comment type="line" pos:start="17:9" pos:end="17:37">// only the streaminfo packet</comment>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><call pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:18">put_buffer</name><argument_list pos:start="19:19" pos:end="19:33">(<argument pos:start="19:20" pos:end="19:21"><expr pos:start="19:20" pos:end="19:21"><name pos:start="19:20" pos:end="19:21">pb</name></expr></argument>, <argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><literal type="string" pos:start="19:24" pos:end="19:29">"fLaC"</literal></expr></argument>, <argument pos:start="19:32" pos:end="19:32"><expr pos:start="19:32" pos:end="19:32"><literal type="number" pos:start="19:32" pos:end="19:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><call pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:16">put_byte</name><argument_list pos:start="21:17" pos:end="21:26">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">pb</name></expr></argument>, <argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><literal type="number" pos:start="21:22" pos:end="21:25">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:16">put_be24</name><argument_list pos:start="23:17" pos:end="23:42">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">pb</name></expr></argument>, <argument pos:start="23:22" pos:end="23:41"><expr pos:start="23:22" pos:end="23:41"><name pos:start="23:22" pos:end="23:41">FLAC_STREAMINFO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="31:5">else if<condition pos:start="25:14" pos:end="25:50">(<expr pos:start="25:15" pos:end="25:49"><call pos:start="25:15" pos:end="25:49"><name pos:start="25:15" pos:end="25:20">memcmp</name><argument_list pos:start="25:21" pos:end="25:49">(<argument pos:start="25:22" pos:end="25:27"><expr pos:start="25:22" pos:end="25:27"><literal type="string" pos:start="25:22" pos:end="25:27">"fLaC"</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:45"><expr pos:start="25:30" pos:end="25:45"><name pos:start="25:30" pos:end="25:45"><name pos:start="25:30" pos:end="25:34">codec</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:45">extradata</name></name></expr></argument>, <argument pos:start="25:48" pos:end="25:48"><expr pos:start="25:48" pos:end="25:48"><literal type="number" pos:start="25:48" pos:end="25:48">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:52" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:60"><expr pos:start="27:9" pos:end="27:59"><call pos:start="27:9" pos:end="27:59"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:59">(<argument pos:start="27:16" pos:end="27:16"><expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">s</name></expr></argument>, <argument pos:start="27:19" pos:end="27:30"><expr pos:start="27:19" pos:end="27:30"><name pos:start="27:19" pos:end="27:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:33" pos:end="27:58"><expr pos:start="27:33" pos:end="27:58"><literal type="string" pos:start="27:33" pos:end="27:58">"Invalid FLAC extradata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><call pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:14">put_buffer</name><argument_list pos:start="33:15" pos:end="33:59">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">pb</name></expr></argument>, <argument pos:start="33:20" pos:end="33:35"><expr pos:start="33:20" pos:end="33:35"><name pos:start="33:20" pos:end="33:35"><name pos:start="33:20" pos:end="33:24">codec</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:35">extradata</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:58"><expr pos:start="33:38" pos:end="33:58"><name pos:start="33:38" pos:end="33:58"><name pos:start="33:38" pos:end="33:42">codec</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:58">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
