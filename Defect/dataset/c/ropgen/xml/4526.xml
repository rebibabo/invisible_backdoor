<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4526.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">v4l2_read_header</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="305:1">{<block_content pos:start="5:5" pos:end="303:15">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:41">= <expr pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:30">ctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:27">desired_format</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:18">AVCodecID</name></name></type> <name pos:start="13:20" pos:end="13:27">codec_id</name> <init pos:start="13:29" pos:end="13:46">= <expr pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:46">AV_CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:22">AVPixelFormat</name></name></type> <name pos:start="15:24" pos:end="15:30">pix_fmt</name> <init pos:start="15:32" pos:end="15:48">= <expr pos:start="15:34" pos:end="15:48"><name pos:start="15:34" pos:end="15:48">AV_PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:21">v4l2_input</name></name></type> <name pos:start="17:23" pos:end="17:27">input</name> <init pos:start="17:29" pos:end="17:35">= <expr pos:start="17:31" pos:end="17:35"><block pos:start="17:31" pos:end="17:35">{ <expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:39"><name pos:start="21:10" pos:end="21:28">avformat_new_stream</name><argument_list pos:start="21:29" pos:end="21:39">(<argument pos:start="21:30" pos:end="21:32"><expr pos:start="21:30" pos:end="21:32"><name pos:start="21:30" pos:end="21:32">ctx</name></expr></argument>, <argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><name pos:start="21:35" pos:end="21:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">st</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="30:0"><block_content pos:start="25:9" pos:end="30:0">

        <return pos:start="25:9" pos:end="30:0">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="29:1" pos:end="29:18">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:18">CONFIG_LIBV4L2</name></expr></cpp:if>

    <comment type="block" pos:start="31:5" pos:end="33:44">/* silence libv4l2 logging. if fopen() fails v4l2_log_file will be NULL

       and errors will get sent to stderr */</comment>

    <if_stmt pos:start="35:5" pos:end="40:0"><if pos:start="35:5" pos:end="40:0">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:22">use_libv4l2</name></name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="40:0"><block_content pos:start="37:9" pos:end="40:0">

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:21">v4l2_log_file</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:47"><name pos:start="37:25" pos:end="37:29">fopen</name><argument_list pos:start="37:30" pos:end="37:47">(<argument pos:start="37:31" pos:end="37:41"><expr pos:start="37:31" pos:end="37:41"><literal type="string" pos:start="37:31" pos:end="37:41">"/dev/null"</literal></expr></argument>, <argument pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><literal type="string" pos:start="37:44" pos:end="37:46">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:9"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:9">fd</name></name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:23">device_open</name><argument_list pos:start="43:24" pos:end="43:28">(<argument pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:21"><if pos:start="45:5" pos:end="47:21">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:13">fd</name></name> <operator pos:start="45:15" pos:end="45:15">&lt;</operator> <literal type="number" pos:start="45:17" pos:end="45:17">0</literal></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:21"><block_content pos:start="47:9" pos:end="47:21">

        <return pos:start="47:9" pos:end="47:21">return <expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:20">fd</name></name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="81:5"><if pos:start="51:5" pos:end="67:5">if <condition pos:start="51:8" pos:end="51:25">(<expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">channel</name></name> <operator pos:start="51:20" pos:end="51:21">!=</operator> <operator pos:start="51:23" pos:end="51:23">-</operator><literal type="number" pos:start="51:24" pos:end="51:24">1</literal></expr>)</condition> <block pos:start="51:27" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:9">

        <comment type="block" pos:start="53:9" pos:end="53:29">/* set video input */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:79"><expr pos:start="55:9" pos:end="55:78"><call pos:start="55:9" pos:end="55:78"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:78">(<argument pos:start="55:16" pos:end="55:18"><expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">ctx</name></expr></argument>, <argument pos:start="55:21" pos:end="55:32"><expr pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="55:35" pos:end="55:65"><expr pos:start="55:35" pos:end="55:65"><literal type="string" pos:start="55:35" pos:end="55:65">"Selecting input_channel: %d\n"</literal></expr></argument>, <argument pos:start="55:68" pos:end="55:77"><expr pos:start="55:68" pos:end="55:77"><name pos:start="55:68" pos:end="55:77"><name pos:start="55:68" pos:end="55:68">s</name><operator pos:start="55:69" pos:end="55:70">-&gt;</operator><name pos:start="55:71" pos:end="55:77">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:63">(<expr pos:start="57:13" pos:end="57:62"><call pos:start="57:13" pos:end="57:58"><name pos:start="57:13" pos:end="57:22">v4l2_ioctl</name><argument_list pos:start="57:23" pos:end="57:58">(<argument pos:start="57:24" pos:end="57:28"><expr pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:24">s</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:28">fd</name></name></expr></argument>, <argument pos:start="57:31" pos:end="57:44"><expr pos:start="57:31" pos:end="57:44"><name pos:start="57:31" pos:end="57:44">VIDIOC_S_INPUT</name></expr></argument>, <argument pos:start="57:47" pos:end="57:57"><expr pos:start="57:47" pos:end="57:57"><operator pos:start="57:47" pos:end="57:47">&amp;</operator><name pos:start="57:48" pos:end="57:57"><name pos:start="57:48" pos:end="57:48">s</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:57">channel</name></name></expr></argument>)</argument_list></call> <operator pos:start="57:60" pos:end="57:60">&lt;</operator> <literal type="number" pos:start="57:62" pos:end="57:62">0</literal></expr>)</condition> <block pos:start="57:65" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:22">

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:15">res</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:25">AVERROR</name><argument_list pos:start="59:26" pos:end="59:32">(<argument pos:start="59:27" pos:end="59:31"><expr pos:start="59:27" pos:end="59:31"><name pos:start="59:27" pos:end="59:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:86"><expr pos:start="61:13" pos:end="61:85"><call pos:start="61:13" pos:end="61:85"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:85">(<argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">ctx</name></expr></argument>, <argument pos:start="61:25" pos:end="61:36"><expr pos:start="61:25" pos:end="61:36"><name pos:start="61:25" pos:end="61:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:39" pos:end="61:67"><expr pos:start="61:39" pos:end="61:67"><literal type="string" pos:start="61:39" pos:end="61:67">"ioctl(VIDIOC_S_INPUT): %s\n"</literal></expr></argument>, <argument pos:start="61:70" pos:end="61:84"><expr pos:start="61:70" pos:end="61:84"><call pos:start="61:70" pos:end="61:84"><name pos:start="61:70" pos:end="61:79">av_err2str</name><argument_list pos:start="61:80" pos:end="61:84">(<argument pos:start="61:81" pos:end="61:83"><expr pos:start="61:81" pos:end="61:83"><name pos:start="61:81" pos:end="61:83">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:22">goto <name pos:start="63:18" pos:end="63:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="81:5">else <block pos:start="67:12" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:9">

        <comment type="block" pos:start="69:9" pos:end="69:37">/* get current video input */</comment>

        <if_stmt pos:start="71:9" pos:end="79:9"><if pos:start="71:9" pos:end="79:9">if <condition pos:start="71:12" pos:end="71:63">(<expr pos:start="71:13" pos:end="71:62"><call pos:start="71:13" pos:end="71:58"><name pos:start="71:13" pos:end="71:22">v4l2_ioctl</name><argument_list pos:start="71:23" pos:end="71:58">(<argument pos:start="71:24" pos:end="71:28"><expr pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:28"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:28">fd</name></name></expr></argument>, <argument pos:start="71:31" pos:end="71:44"><expr pos:start="71:31" pos:end="71:44"><name pos:start="71:31" pos:end="71:44">VIDIOC_G_INPUT</name></expr></argument>, <argument pos:start="71:47" pos:end="71:57"><expr pos:start="71:47" pos:end="71:57"><operator pos:start="71:47" pos:end="71:47">&amp;</operator><name pos:start="71:48" pos:end="71:57"><name pos:start="71:48" pos:end="71:48">s</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:57">channel</name></name></expr></argument>)</argument_list></call> <operator pos:start="71:60" pos:end="71:60">&lt;</operator> <literal type="number" pos:start="71:62" pos:end="71:62">0</literal></expr>)</condition> <block pos:start="71:65" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:22">

            <expr_stmt pos:start="73:13" pos:end="73:33"><expr pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:15">res</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:32"><name pos:start="73:19" pos:end="73:25">AVERROR</name><argument_list pos:start="73:26" pos:end="73:32">(<argument pos:start="73:27" pos:end="73:31"><expr pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:86"><expr pos:start="75:13" pos:end="75:85"><call pos:start="75:13" pos:end="75:85"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:85">(<argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ctx</name></expr></argument>, <argument pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:39" pos:end="75:67"><expr pos:start="75:39" pos:end="75:67"><literal type="string" pos:start="75:39" pos:end="75:67">"ioctl(VIDIOC_G_INPUT): %s\n"</literal></expr></argument>, <argument pos:start="75:70" pos:end="75:84"><expr pos:start="75:70" pos:end="75:84"><call pos:start="75:70" pos:end="75:84"><name pos:start="75:70" pos:end="75:79">av_err2str</name><argument_list pos:start="75:80" pos:end="75:84">(<argument pos:start="75:81" pos:end="75:83"><expr pos:start="75:81" pos:end="75:83"><name pos:start="75:81" pos:end="75:83">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="77:13" pos:end="77:22">goto <name pos:start="77:18" pos:end="77:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:20">/* enum input */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:29"><expr pos:start="87:5" pos:end="87:28"><name pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:9">input</name><operator pos:start="87:10" pos:end="87:10">.</operator><name pos:start="87:11" pos:end="87:15">index</name></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:28"><name pos:start="87:19" pos:end="87:19">s</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:28">channel</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:56">(<expr pos:start="89:9" pos:end="89:55"><call pos:start="89:9" pos:end="89:51"><name pos:start="89:9" pos:end="89:18">v4l2_ioctl</name><argument_list pos:start="89:19" pos:end="89:51">(<argument pos:start="89:20" pos:end="89:24"><expr pos:start="89:20" pos:end="89:24"><name pos:start="89:20" pos:end="89:24"><name pos:start="89:20" pos:end="89:20">s</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:24">fd</name></name></expr></argument>, <argument pos:start="89:27" pos:end="89:42"><expr pos:start="89:27" pos:end="89:42"><name pos:start="89:27" pos:end="89:42">VIDIOC_ENUMINPUT</name></expr></argument>, <argument pos:start="89:45" pos:end="89:50"><expr pos:start="89:45" pos:end="89:50"><operator pos:start="89:45" pos:end="89:45">&amp;</operator><name pos:start="89:46" pos:end="89:50">input</name></expr></argument>)</argument_list></call> <operator pos:start="89:53" pos:end="89:53">&lt;</operator> <literal type="number" pos:start="89:55" pos:end="89:55">0</literal></expr>)</condition> <block pos:start="89:58" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:18">

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:11">res</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:28"><name pos:start="91:15" pos:end="91:21">AVERROR</name><argument_list pos:start="91:22" pos:end="91:28">(<argument pos:start="91:23" pos:end="91:27"><expr pos:start="91:23" pos:end="91:27"><name pos:start="91:23" pos:end="91:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:84"><expr pos:start="93:9" pos:end="93:83"><call pos:start="93:9" pos:end="93:83"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:83">(<argument pos:start="93:16" pos:end="93:18"><expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">ctx</name></expr></argument>, <argument pos:start="93:21" pos:end="93:32"><expr pos:start="93:21" pos:end="93:32"><name pos:start="93:21" pos:end="93:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:35" pos:end="93:65"><expr pos:start="93:35" pos:end="93:65"><literal type="string" pos:start="93:35" pos:end="93:65">"ioctl(VIDIOC_ENUMINPUT): %s\n"</literal></expr></argument>, <argument pos:start="93:68" pos:end="93:82"><expr pos:start="93:68" pos:end="93:82"><call pos:start="93:68" pos:end="93:82"><name pos:start="93:68" pos:end="93:77">av_err2str</name><argument_list pos:start="93:78" pos:end="93:82">(<argument pos:start="93:79" pos:end="93:81"><expr pos:start="93:79" pos:end="93:81"><name pos:start="93:79" pos:end="93:81">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:26"><expr pos:start="99:5" pos:end="99:25"><name pos:start="99:5" pos:end="99:13"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:13">std_id</name></name> <operator pos:start="99:15" pos:end="99:15">=</operator> <name pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:21">input</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:25">std</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:56"><expr pos:start="101:5" pos:end="103:55"><call pos:start="101:5" pos:end="103:55"><name pos:start="101:5" pos:end="101:10">av_log</name><argument_list pos:start="101:11" pos:end="103:55">(<argument pos:start="101:12" pos:end="101:14"><expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">ctx</name></expr></argument>, <argument pos:start="101:17" pos:end="101:28"><expr pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:28">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="101:31" pos:end="101:97"><expr pos:start="101:31" pos:end="101:97"><literal type="string" pos:start="101:31" pos:end="101:87">"Current input_channel: %d, input_name: %s, input_std: %"</literal><name pos:start="101:88" pos:end="101:93">PRIx64</name><literal type="string" pos:start="101:94" pos:end="101:97">"\n"</literal></expr></argument>,

           <argument pos:start="103:12" pos:end="103:21"><expr pos:start="103:12" pos:end="103:21"><name pos:start="103:12" pos:end="103:21"><name pos:start="103:12" pos:end="103:12">s</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:21">channel</name></name></expr></argument>, <argument pos:start="103:24" pos:end="103:33"><expr pos:start="103:24" pos:end="103:33"><name pos:start="103:24" pos:end="103:33"><name pos:start="103:24" pos:end="103:28">input</name><operator pos:start="103:29" pos:end="103:29">.</operator><name pos:start="103:30" pos:end="103:33">name</name></name></expr></argument>, <argument pos:start="103:36" pos:end="103:54"><expr pos:start="103:36" pos:end="103:54"><operator pos:start="103:36" pos:end="103:36">(</operator><name pos:start="103:37" pos:end="103:44">uint64_t</name><operator pos:start="103:45" pos:end="103:45">)</operator><name pos:start="103:46" pos:end="103:54"><name pos:start="103:46" pos:end="103:50">input</name><operator pos:start="103:51" pos:end="103:51">.</operator><name pos:start="103:52" pos:end="103:54">std</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="115:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="107:23">(<expr pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:22">list_format</name></name></expr>)</condition> <block pos:start="107:25" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:18">

        <expr_stmt pos:start="109:9" pos:end="109:42"><expr pos:start="109:9" pos:end="109:41"><call pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:20">list_formats</name><argument_list pos:start="109:21" pos:end="109:41">(<argument pos:start="109:22" pos:end="109:24"><expr pos:start="109:22" pos:end="109:24"><name pos:start="109:22" pos:end="109:24">ctx</name></expr></argument>, <argument pos:start="109:27" pos:end="109:40"><expr pos:start="109:27" pos:end="109:40"><name pos:start="109:27" pos:end="109:40"><name pos:start="109:27" pos:end="109:27">s</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:40">list_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:27"><expr pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:11">res</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:26">AVERROR_EXIT</name></expr>;</expr_stmt>

        <goto pos:start="113:9" pos:end="113:18">goto <name pos:start="113:14" pos:end="113:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="127:5"><if pos:start="119:5" pos:end="127:5">if <condition pos:start="119:8" pos:end="119:25">(<expr pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:24">list_standard</name></name></expr>)</condition> <block pos:start="119:27" pos:end="127:5">{<block_content pos:start="121:9" pos:end="125:18">

        <expr_stmt pos:start="121:9" pos:end="121:28"><expr pos:start="121:9" pos:end="121:27"><call pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:22">list_standards</name><argument_list pos:start="121:23" pos:end="121:27">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:27"><expr pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:11">res</name> <operator pos:start="123:13" pos:end="123:13">=</operator> <name pos:start="123:15" pos:end="123:26">AVERROR_EXIT</name></expr>;</expr_stmt>

        <goto pos:start="125:9" pos:end="125:18">goto <name pos:start="125:14" pos:end="125:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:44"><expr pos:start="131:5" pos:end="131:43"><call pos:start="131:5" pos:end="131:43"><name pos:start="131:5" pos:end="131:23">avpriv_set_pts_info</name><argument_list pos:start="131:24" pos:end="131:43">(<argument pos:start="131:25" pos:end="131:26"><expr pos:start="131:25" pos:end="131:26"><name pos:start="131:25" pos:end="131:26">st</name></expr></argument>, <argument pos:start="131:29" pos:end="131:30"><expr pos:start="131:29" pos:end="131:30"><literal type="number" pos:start="131:29" pos:end="131:30">64</literal></expr></argument>, <argument pos:start="131:33" pos:end="131:33"><expr pos:start="131:33" pos:end="131:33"><literal type="number" pos:start="131:33" pos:end="131:33">1</literal></expr></argument>, <argument pos:start="131:36" pos:end="131:42"><expr pos:start="131:36" pos:end="131:42"><literal type="number" pos:start="131:36" pos:end="131:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="131:46" pos:end="131:68">/* 64 bits pts in us */</comment>



    <if_stmt pos:start="135:5" pos:end="137:18"><if pos:start="135:5" pos:end="137:18">if <condition pos:start="135:8" pos:end="135:45">(<expr pos:start="135:9" pos:end="135:44"><operator pos:start="135:9" pos:end="135:9">(</operator><name pos:start="135:10" pos:end="135:12">res</name> <operator pos:start="135:14" pos:end="135:14">=</operator> <call pos:start="135:16" pos:end="135:39"><name pos:start="135:16" pos:end="135:34">v4l2_set_parameters</name><argument_list pos:start="135:35" pos:end="135:39">(<argument pos:start="135:36" pos:end="135:38"><expr pos:start="135:36" pos:end="135:38"><name pos:start="135:36" pos:end="135:38">ctx</name></expr></argument>)</argument_list></call><operator pos:start="135:40" pos:end="135:40">)</operator> <operator pos:start="135:42" pos:end="135:42">&lt;</operator> <literal type="number" pos:start="135:44" pos:end="135:44">0</literal></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:18"><block_content pos:start="137:9" pos:end="137:18">

        <goto pos:start="137:9" pos:end="137:18">goto <name pos:start="137:14" pos:end="137:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="171:5"><if pos:start="141:5" pos:end="171:5">if <condition pos:start="141:8" pos:end="141:24">(<expr pos:start="141:9" pos:end="141:23"><name pos:start="141:9" pos:end="141:23"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:23">pixel_format</name></name></expr>)</condition> <block pos:start="141:26" pos:end="171:5">{<block_content pos:start="143:9" pos:end="169:9">

        <decl_stmt pos:start="143:9" pos:end="143:71"><decl pos:start="143:9" pos:end="143:70"><type pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:15">AVCodec</name> <modifier pos:start="143:17" pos:end="143:17">*</modifier></type><name pos:start="143:18" pos:end="143:22">codec</name> <init pos:start="143:24" pos:end="143:70">= <expr pos:start="143:26" pos:end="143:70"><call pos:start="143:26" pos:end="143:70"><name pos:start="143:26" pos:end="143:53">avcodec_find_decoder_by_name</name><argument_list pos:start="143:54" pos:end="143:70">(<argument pos:start="143:55" pos:end="143:69"><expr pos:start="143:55" pos:end="143:69"><name pos:start="143:55" pos:end="143:69"><name pos:start="143:55" pos:end="143:55">s</name><operator pos:start="143:56" pos:end="143:57">-&gt;</operator><name pos:start="143:58" pos:end="143:69">pixel_format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="147:9" pos:end="149:44"><if pos:start="147:9" pos:end="149:44">if <condition pos:start="147:12" pos:end="147:18">(<expr pos:start="147:13" pos:end="147:17"><name pos:start="147:13" pos:end="147:17">codec</name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:44"><block_content pos:start="149:13" pos:end="149:44">

            <expr_stmt pos:start="149:13" pos:end="149:44"><expr pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:15">ctx</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:31">video_codec_id</name></name> <operator pos:start="149:33" pos:end="149:33">=</operator> <name pos:start="149:35" pos:end="149:43"><name pos:start="149:35" pos:end="149:39">codec</name><operator pos:start="149:40" pos:end="149:41">-&gt;</operator><name pos:start="149:42" pos:end="149:43">id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:50"><expr pos:start="153:9" pos:end="153:49"><name pos:start="153:9" pos:end="153:15">pix_fmt</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <call pos:start="153:19" pos:end="153:49"><name pos:start="153:19" pos:end="153:32">av_get_pix_fmt</name><argument_list pos:start="153:33" pos:end="153:49">(<argument pos:start="153:34" pos:end="153:48"><expr pos:start="153:34" pos:end="153:48"><name pos:start="153:34" pos:end="153:48"><name pos:start="153:34" pos:end="153:34">s</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:48">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="157:9" pos:end="169:9"><if pos:start="157:9" pos:end="169:9">if <condition pos:start="157:12" pos:end="157:49">(<expr pos:start="157:13" pos:end="157:48"><name pos:start="157:13" pos:end="157:19">pix_fmt</name> <operator pos:start="157:21" pos:end="157:22">==</operator> <name pos:start="157:24" pos:end="157:38">AV_PIX_FMT_NONE</name> <operator pos:start="157:40" pos:end="157:41">&amp;&amp;</operator> <operator pos:start="157:43" pos:end="157:43">!</operator><name pos:start="157:44" pos:end="157:48">codec</name></expr>)</condition> <block pos:start="157:51" pos:end="169:9">{<block_content pos:start="159:13" pos:end="167:22">

            <expr_stmt pos:start="159:13" pos:end="161:36"><expr pos:start="159:13" pos:end="161:35"><call pos:start="159:13" pos:end="161:35"><name pos:start="159:13" pos:end="159:18">av_log</name><argument_list pos:start="159:19" pos:end="161:35">(<argument pos:start="159:20" pos:end="159:22"><expr pos:start="159:20" pos:end="159:22"><name pos:start="159:20" pos:end="159:22">ctx</name></expr></argument>, <argument pos:start="159:25" pos:end="159:36"><expr pos:start="159:25" pos:end="159:36"><name pos:start="159:25" pos:end="159:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:39" pos:end="159:67"><expr pos:start="159:39" pos:end="159:67"><literal type="string" pos:start="159:39" pos:end="159:67">"No such input format: %s.\n"</literal></expr></argument>,

                   <argument pos:start="161:20" pos:end="161:34"><expr pos:start="161:20" pos:end="161:34"><name pos:start="161:20" pos:end="161:34"><name pos:start="161:20" pos:end="161:20">s</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:34">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="165:13" pos:end="165:34"><expr pos:start="165:13" pos:end="165:33"><name pos:start="165:13" pos:end="165:15">res</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <call pos:start="165:19" pos:end="165:33"><name pos:start="165:19" pos:end="165:25">AVERROR</name><argument_list pos:start="165:26" pos:end="165:33">(<argument pos:start="165:27" pos:end="165:32"><expr pos:start="165:27" pos:end="165:32"><name pos:start="165:27" pos:end="165:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="167:13" pos:end="167:22">goto <name pos:start="167:18" pos:end="167:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="205:5"><if pos:start="175:5" pos:end="205:5">if <condition pos:start="175:8" pos:end="175:32">(<expr pos:start="175:9" pos:end="175:31"><operator pos:start="175:9" pos:end="175:9">!</operator><name pos:start="175:10" pos:end="175:17"><name pos:start="175:10" pos:end="175:10">s</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:17">width</name></name> <operator pos:start="175:19" pos:end="175:20">&amp;&amp;</operator> <operator pos:start="175:22" pos:end="175:22">!</operator><name pos:start="175:23" pos:end="175:31"><name pos:start="175:23" pos:end="175:23">s</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:31">height</name></name></expr>)</condition> <block pos:start="175:34" pos:end="205:5">{<block_content pos:start="177:9" pos:end="203:69">

        <decl_stmt pos:start="177:9" pos:end="177:73"><decl pos:start="177:9" pos:end="177:72"><type pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:14">struct</name> <name pos:start="177:16" pos:end="177:26">v4l2_format</name></name></type> <name pos:start="177:28" pos:end="177:30">fmt</name> <init pos:start="177:32" pos:end="177:72">= <expr pos:start="177:34" pos:end="177:72"><block pos:start="177:34" pos:end="177:72">{ <expr pos:start="177:36" pos:end="177:70"><operator pos:start="177:36" pos:end="177:36">.</operator><name pos:start="177:37" pos:end="177:40">type</name> <operator pos:start="177:42" pos:end="177:42">=</operator> <name pos:start="177:44" pos:end="177:70">V4L2_BUF_TYPE_VIDEO_CAPTURE</name></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="181:9" pos:end="183:67"><expr pos:start="181:9" pos:end="183:66"><call pos:start="181:9" pos:end="183:66"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="183:66">(<argument pos:start="181:16" pos:end="181:18"><expr pos:start="181:16" pos:end="181:18"><name pos:start="181:16" pos:end="181:18">ctx</name></expr></argument>, <argument pos:start="181:21" pos:end="181:34"><expr pos:start="181:21" pos:end="181:34"><name pos:start="181:21" pos:end="181:34">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="183:16" pos:end="183:65"><expr pos:start="183:16" pos:end="183:65"><literal type="string" pos:start="183:16" pos:end="183:65">"Querying the device for the current frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="193:9"><if pos:start="185:9" pos:end="193:9">if <condition pos:start="185:12" pos:end="185:54">(<expr pos:start="185:13" pos:end="185:53"><call pos:start="185:13" pos:end="185:49"><name pos:start="185:13" pos:end="185:22">v4l2_ioctl</name><argument_list pos:start="185:23" pos:end="185:49">(<argument pos:start="185:24" pos:end="185:28"><expr pos:start="185:24" pos:end="185:28"><name pos:start="185:24" pos:end="185:28"><name pos:start="185:24" pos:end="185:24">s</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:28">fd</name></name></expr></argument>, <argument pos:start="185:31" pos:end="185:42"><expr pos:start="185:31" pos:end="185:42"><name pos:start="185:31" pos:end="185:42">VIDIOC_G_FMT</name></expr></argument>, <argument pos:start="185:45" pos:end="185:48"><expr pos:start="185:45" pos:end="185:48"><operator pos:start="185:45" pos:end="185:45">&amp;</operator><name pos:start="185:46" pos:end="185:48">fmt</name></expr></argument>)</argument_list></call> <operator pos:start="185:51" pos:end="185:51">&lt;</operator> <literal type="number" pos:start="185:53" pos:end="185:53">0</literal></expr>)</condition> <block pos:start="185:56" pos:end="193:9">{<block_content pos:start="187:13" pos:end="191:22">

            <expr_stmt pos:start="187:13" pos:end="187:33"><expr pos:start="187:13" pos:end="187:32"><name pos:start="187:13" pos:end="187:15">res</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="187:32"><name pos:start="187:19" pos:end="187:25">AVERROR</name><argument_list pos:start="187:26" pos:end="187:32">(<argument pos:start="187:27" pos:end="187:31"><expr pos:start="187:27" pos:end="187:31"><name pos:start="187:27" pos:end="187:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:84"><expr pos:start="189:13" pos:end="189:83"><call pos:start="189:13" pos:end="189:83"><name pos:start="189:13" pos:end="189:18">av_log</name><argument_list pos:start="189:19" pos:end="189:83">(<argument pos:start="189:20" pos:end="189:22"><expr pos:start="189:20" pos:end="189:22"><name pos:start="189:20" pos:end="189:22">ctx</name></expr></argument>, <argument pos:start="189:25" pos:end="189:36"><expr pos:start="189:25" pos:end="189:36"><name pos:start="189:25" pos:end="189:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:39" pos:end="189:65"><expr pos:start="189:39" pos:end="189:65"><literal type="string" pos:start="189:39" pos:end="189:65">"ioctl(VIDIOC_G_FMT): %s\n"</literal></expr></argument>, <argument pos:start="189:68" pos:end="189:82"><expr pos:start="189:68" pos:end="189:82"><call pos:start="189:68" pos:end="189:82"><name pos:start="189:68" pos:end="189:77">av_err2str</name><argument_list pos:start="189:78" pos:end="189:82">(<argument pos:start="189:79" pos:end="189:81"><expr pos:start="189:79" pos:end="189:81"><name pos:start="189:79" pos:end="189:81">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="191:13" pos:end="191:22">goto <name pos:start="191:18" pos:end="191:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="197:9" pos:end="197:38"><expr pos:start="197:9" pos:end="197:37"><name pos:start="197:9" pos:end="197:16"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">width</name></name>  <operator pos:start="197:19" pos:end="197:19">=</operator> <name pos:start="197:21" pos:end="197:37"><name pos:start="197:21" pos:end="197:23">fmt</name><operator pos:start="197:24" pos:end="197:24">.</operator><name pos:start="197:25" pos:end="197:27">fmt</name><operator pos:start="197:28" pos:end="197:28">.</operator><name pos:start="197:29" pos:end="197:31">pix</name><operator pos:start="197:32" pos:end="197:32">.</operator><name pos:start="197:33" pos:end="197:37">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:39"><expr pos:start="199:9" pos:end="199:38"><name pos:start="199:9" pos:end="199:17"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:17">height</name></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:38"><name pos:start="199:21" pos:end="199:23">fmt</name><operator pos:start="199:24" pos:end="199:24">.</operator><name pos:start="199:25" pos:end="199:27">fmt</name><operator pos:start="199:28" pos:end="199:28">.</operator><name pos:start="199:29" pos:end="199:31">pix</name><operator pos:start="199:32" pos:end="199:32">.</operator><name pos:start="199:33" pos:end="199:38">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="203:69"><expr pos:start="201:9" pos:end="203:68"><call pos:start="201:9" pos:end="203:68"><name pos:start="201:9" pos:end="201:14">av_log</name><argument_list pos:start="201:15" pos:end="203:68">(<argument pos:start="201:16" pos:end="201:18"><expr pos:start="201:16" pos:end="201:18"><name pos:start="201:16" pos:end="201:18">ctx</name></expr></argument>, <argument pos:start="201:21" pos:end="201:34"><expr pos:start="201:21" pos:end="201:34"><name pos:start="201:21" pos:end="201:34">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="203:16" pos:end="203:46"><expr pos:start="203:16" pos:end="203:46"><literal type="string" pos:start="203:16" pos:end="203:46">"Setting frame size to %dx%d\n"</literal></expr></argument>, <argument pos:start="203:49" pos:end="203:56"><expr pos:start="203:49" pos:end="203:56"><name pos:start="203:49" pos:end="203:56"><name pos:start="203:49" pos:end="203:49">s</name><operator pos:start="203:50" pos:end="203:51">-&gt;</operator><name pos:start="203:52" pos:end="203:56">width</name></name></expr></argument>, <argument pos:start="203:59" pos:end="203:67"><expr pos:start="203:59" pos:end="203:67"><name pos:start="203:59" pos:end="203:67"><name pos:start="203:59" pos:end="203:59">s</name><operator pos:start="203:60" pos:end="203:61">-&gt;</operator><name pos:start="203:62" pos:end="203:67">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:91"><expr pos:start="209:5" pos:end="209:90"><name pos:start="209:5" pos:end="209:7">res</name> <operator pos:start="209:9" pos:end="209:9">=</operator> <call pos:start="209:11" pos:end="209:90"><name pos:start="209:11" pos:end="209:25">device_try_init</name><argument_list pos:start="209:26" pos:end="209:90">(<argument pos:start="209:27" pos:end="209:29"><expr pos:start="209:27" pos:end="209:29"><name pos:start="209:27" pos:end="209:29">ctx</name></expr></argument>, <argument pos:start="209:32" pos:end="209:38"><expr pos:start="209:32" pos:end="209:38"><name pos:start="209:32" pos:end="209:38">pix_fmt</name></expr></argument>, <argument pos:start="209:41" pos:end="209:49"><expr pos:start="209:41" pos:end="209:49"><operator pos:start="209:41" pos:end="209:41">&amp;</operator><name pos:start="209:42" pos:end="209:49"><name pos:start="209:42" pos:end="209:42">s</name><operator pos:start="209:43" pos:end="209:44">-&gt;</operator><name pos:start="209:45" pos:end="209:49">width</name></name></expr></argument>, <argument pos:start="209:52" pos:end="209:61"><expr pos:start="209:52" pos:end="209:61"><operator pos:start="209:52" pos:end="209:52">&amp;</operator><name pos:start="209:53" pos:end="209:61"><name pos:start="209:53" pos:end="209:53">s</name><operator pos:start="209:54" pos:end="209:55">-&gt;</operator><name pos:start="209:56" pos:end="209:61">height</name></name></expr></argument>, <argument pos:start="209:64" pos:end="209:78"><expr pos:start="209:64" pos:end="209:78"><operator pos:start="209:64" pos:end="209:64">&amp;</operator><name pos:start="209:65" pos:end="209:78">desired_format</name></expr></argument>, <argument pos:start="209:81" pos:end="209:89"><expr pos:start="209:81" pos:end="209:89"><operator pos:start="209:81" pos:end="209:81">&amp;</operator><name pos:start="209:82" pos:end="209:89">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="213:18"><if pos:start="211:5" pos:end="213:18">if <condition pos:start="211:8" pos:end="211:16">(<expr pos:start="211:9" pos:end="211:15"><name pos:start="211:9" pos:end="211:11">res</name> <operator pos:start="211:13" pos:end="211:13">&lt;</operator> <literal type="number" pos:start="211:15" pos:end="211:15">0</literal></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:18"><block_content pos:start="213:9" pos:end="213:18">

        <goto pos:start="213:9" pos:end="213:18">goto <name pos:start="213:14" pos:end="213:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="217:5" pos:end="223:7">/* If no pixel_format was specified, the codec_id was not known up

     * until now. Set video_codec_id in the context, as codec_id will

     * not be available outside this function

     */</comment>

    <if_stmt pos:start="225:5" pos:end="227:39"><if pos:start="225:5" pos:end="227:39">if <condition pos:start="225:8" pos:end="225:80">(<expr pos:start="225:9" pos:end="225:79"><name pos:start="225:9" pos:end="225:16">codec_id</name> <operator pos:start="225:18" pos:end="225:19">!=</operator> <name pos:start="225:21" pos:end="225:36">AV_CODEC_ID_NONE</name> <operator pos:start="225:38" pos:end="225:39">&amp;&amp;</operator> <name pos:start="225:41" pos:end="225:59"><name pos:start="225:41" pos:end="225:43">ctx</name><operator pos:start="225:44" pos:end="225:45">-&gt;</operator><name pos:start="225:46" pos:end="225:59">video_codec_id</name></name> <operator pos:start="225:61" pos:end="225:62">==</operator> <name pos:start="225:64" pos:end="225:79">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:39"><block_content pos:start="227:9" pos:end="227:39">

        <expr_stmt pos:start="227:9" pos:end="227:39"><expr pos:start="227:9" pos:end="227:38"><name pos:start="227:9" pos:end="227:27"><name pos:start="227:9" pos:end="227:11">ctx</name><operator pos:start="227:12" pos:end="227:13">-&gt;</operator><name pos:start="227:14" pos:end="227:27">video_codec_id</name></name> <operator pos:start="227:29" pos:end="227:29">=</operator> <name pos:start="227:31" pos:end="227:38">codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="231:5" pos:end="233:18"><if pos:start="231:5" pos:end="233:18">if <condition pos:start="231:8" pos:end="231:69">(<expr pos:start="231:9" pos:end="231:68"><operator pos:start="231:9" pos:end="231:9">(</operator><name pos:start="231:10" pos:end="231:12">res</name> <operator pos:start="231:14" pos:end="231:14">=</operator> <call pos:start="231:16" pos:end="231:63"><name pos:start="231:16" pos:end="231:34">av_image_check_size</name><argument_list pos:start="231:35" pos:end="231:63">(<argument pos:start="231:36" pos:end="231:43"><expr pos:start="231:36" pos:end="231:43"><name pos:start="231:36" pos:end="231:43"><name pos:start="231:36" pos:end="231:36">s</name><operator pos:start="231:37" pos:end="231:38">-&gt;</operator><name pos:start="231:39" pos:end="231:43">width</name></name></expr></argument>, <argument pos:start="231:46" pos:end="231:54"><expr pos:start="231:46" pos:end="231:54"><name pos:start="231:46" pos:end="231:54"><name pos:start="231:46" pos:end="231:46">s</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:54">height</name></name></expr></argument>, <argument pos:start="231:57" pos:end="231:57"><expr pos:start="231:57" pos:end="231:57"><literal type="number" pos:start="231:57" pos:end="231:57">0</literal></expr></argument>, <argument pos:start="231:60" pos:end="231:62"><expr pos:start="231:60" pos:end="231:62"><name pos:start="231:60" pos:end="231:62">ctx</name></expr></argument>)</argument_list></call><operator pos:start="231:64" pos:end="231:64">)</operator> <operator pos:start="231:66" pos:end="231:66">&lt;</operator> <literal type="number" pos:start="231:68" pos:end="231:68">0</literal></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:18"><block_content pos:start="233:9" pos:end="233:18">

        <goto pos:start="233:9" pos:end="233:18">goto <name pos:start="233:14" pos:end="233:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="237:5" pos:end="237:37"><expr pos:start="237:5" pos:end="237:36"><name pos:start="237:5" pos:end="237:19"><name pos:start="237:5" pos:end="237:5">s</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:19">frame_format</name></name> <operator pos:start="237:21" pos:end="237:21">=</operator> <name pos:start="237:23" pos:end="237:36">desired_format</name></expr>;</expr_stmt>



    <expr_stmt pos:start="241:5" pos:end="241:69"><expr pos:start="241:5" pos:end="241:68"><name pos:start="241:5" pos:end="241:22"><name pos:start="241:5" pos:end="241:6">st</name><operator pos:start="241:7" pos:end="241:8">-&gt;</operator><name pos:start="241:9" pos:end="241:13">codec</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:22">pix_fmt</name></name> <operator pos:start="241:24" pos:end="241:24">=</operator> <call pos:start="241:26" pos:end="241:68"><name pos:start="241:26" pos:end="241:42">avpriv_fmt_v4l2ff</name><argument_list pos:start="241:43" pos:end="241:68">(<argument pos:start="241:44" pos:end="241:57"><expr pos:start="241:44" pos:end="241:57"><name pos:start="241:44" pos:end="241:57">desired_format</name></expr></argument>, <argument pos:start="241:60" pos:end="241:67"><expr pos:start="241:60" pos:end="241:67"><name pos:start="241:60" pos:end="241:67">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="245:68"><expr pos:start="243:5" pos:end="245:67"><name pos:start="243:5" pos:end="243:17"><name pos:start="243:5" pos:end="243:5">s</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:17">frame_size</name></name> <operator pos:start="243:19" pos:end="243:19">=</operator>

        <call pos:start="245:9" pos:end="245:67"><name pos:start="245:9" pos:end="245:26">avpicture_get_size</name><argument_list pos:start="245:27" pos:end="245:67">(<argument pos:start="245:28" pos:end="245:45"><expr pos:start="245:28" pos:end="245:45"><name pos:start="245:28" pos:end="245:45"><name pos:start="245:28" pos:end="245:29">st</name><operator pos:start="245:30" pos:end="245:31">-&gt;</operator><name pos:start="245:32" pos:end="245:36">codec</name><operator pos:start="245:37" pos:end="245:38">-&gt;</operator><name pos:start="245:39" pos:end="245:45">pix_fmt</name></name></expr></argument>, <argument pos:start="245:48" pos:end="245:55"><expr pos:start="245:48" pos:end="245:55"><name pos:start="245:48" pos:end="245:55"><name pos:start="245:48" pos:end="245:48">s</name><operator pos:start="245:49" pos:end="245:50">-&gt;</operator><name pos:start="245:51" pos:end="245:55">width</name></name></expr></argument>, <argument pos:start="245:58" pos:end="245:66"><expr pos:start="245:58" pos:end="245:66"><name pos:start="245:58" pos:end="245:66"><name pos:start="245:58" pos:end="245:58">s</name><operator pos:start="245:59" pos:end="245:60">-&gt;</operator><name pos:start="245:61" pos:end="245:66">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="249:5" pos:end="253:22"><if pos:start="249:5" pos:end="253:22">if <condition pos:start="249:8" pos:end="251:36">(<expr pos:start="249:9" pos:end="251:35"><operator pos:start="249:9" pos:end="249:9">(</operator><name pos:start="249:10" pos:end="249:12">res</name> <operator pos:start="249:14" pos:end="249:14">=</operator> <call pos:start="249:16" pos:end="249:29"><name pos:start="249:16" pos:end="249:24">mmap_init</name><argument_list pos:start="249:25" pos:end="249:29">(<argument pos:start="249:26" pos:end="249:28"><expr pos:start="249:26" pos:end="249:28"><name pos:start="249:26" pos:end="249:28">ctx</name></expr></argument>)</argument_list></call><operator pos:start="249:30" pos:end="249:30">)</operator> <operator pos:start="249:32" pos:end="249:33">||</operator>

        <operator pos:start="251:9" pos:end="251:9">(</operator><name pos:start="251:10" pos:end="251:12">res</name> <operator pos:start="251:14" pos:end="251:14">=</operator> <call pos:start="251:16" pos:end="251:30"><name pos:start="251:16" pos:end="251:25">mmap_start</name><argument_list pos:start="251:26" pos:end="251:30">(<argument pos:start="251:27" pos:end="251:29"><expr pos:start="251:27" pos:end="251:29"><name pos:start="251:27" pos:end="251:29">ctx</name></expr></argument>)</argument_list></call><operator pos:start="251:31" pos:end="251:31">)</operator> <operator pos:start="251:33" pos:end="251:33">&lt;</operator> <literal type="number" pos:start="251:35" pos:end="251:35">0</literal></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:22"><block_content pos:start="253:13" pos:end="253:22">

            <goto pos:start="253:13" pos:end="253:22">goto <name pos:start="253:18" pos:end="253:21">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="257:5" pos:end="257:40"><expr pos:start="257:5" pos:end="257:39"><name pos:start="257:5" pos:end="257:22"><name pos:start="257:5" pos:end="257:5">s</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:22">top_field_first</name></name> <operator pos:start="257:24" pos:end="257:24">=</operator> <call pos:start="257:26" pos:end="257:39"><name pos:start="257:26" pos:end="257:36">first_field</name><argument_list pos:start="257:37" pos:end="257:39">(<argument pos:start="257:38" pos:end="257:38"><expr pos:start="257:38" pos:end="257:38"><name pos:start="257:38" pos:end="257:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:47"><expr pos:start="261:5" pos:end="261:46"><name pos:start="261:5" pos:end="261:25"><name pos:start="261:5" pos:end="261:6">st</name><operator pos:start="261:7" pos:end="261:8">-&gt;</operator><name pos:start="261:9" pos:end="261:13">codec</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:25">codec_type</name></name> <operator pos:start="261:27" pos:end="261:27">=</operator> <name pos:start="261:29" pos:end="261:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:35"><expr pos:start="263:5" pos:end="263:34"><name pos:start="263:5" pos:end="263:23"><name pos:start="263:5" pos:end="263:6">st</name><operator pos:start="263:7" pos:end="263:8">-&gt;</operator><name pos:start="263:9" pos:end="263:13">codec</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:23">codec_id</name></name> <operator pos:start="263:25" pos:end="263:25">=</operator> <name pos:start="263:27" pos:end="263:34">codec_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="265:5" pos:end="275:5"><if pos:start="265:5" pos:end="269:61">if <condition pos:start="265:8" pos:end="265:41">(<expr pos:start="265:9" pos:end="265:40"><name pos:start="265:9" pos:end="265:16">codec_id</name> <operator pos:start="265:18" pos:end="265:19">==</operator> <name pos:start="265:21" pos:end="265:40">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="269:61"><block_content pos:start="267:9" pos:end="269:61">

        <expr_stmt pos:start="267:9" pos:end="269:61"><expr pos:start="267:9" pos:end="269:60"><name pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:10">st</name><operator pos:start="267:11" pos:end="267:12">-&gt;</operator><name pos:start="267:13" pos:end="267:17">codec</name><operator pos:start="267:18" pos:end="267:19">-&gt;</operator><name pos:start="267:20" pos:end="267:28">codec_tag</name></name> <operator pos:start="267:30" pos:end="267:30">=</operator>

            <call pos:start="269:13" pos:end="269:60"><name pos:start="269:13" pos:end="269:40">avcodec_pix_fmt_to_codec_tag</name><argument_list pos:start="269:41" pos:end="269:60">(<argument pos:start="269:42" pos:end="269:59"><expr pos:start="269:42" pos:end="269:59"><name pos:start="269:42" pos:end="269:59"><name pos:start="269:42" pos:end="269:43">st</name><operator pos:start="269:44" pos:end="269:45">-&gt;</operator><name pos:start="269:46" pos:end="269:50">codec</name><operator pos:start="269:51" pos:end="269:52">-&gt;</operator><name pos:start="269:53" pos:end="269:59">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="271:5" pos:end="275:5">else if <condition pos:start="271:13" pos:end="271:42">(<expr pos:start="271:14" pos:end="271:41"><name pos:start="271:14" pos:end="271:21">codec_id</name> <operator pos:start="271:23" pos:end="271:24">==</operator> <name pos:start="271:26" pos:end="271:41">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="271:44" pos:end="275:5">{<block_content pos:start="273:9" pos:end="273:50">

        <expr_stmt pos:start="273:9" pos:end="273:50"><expr pos:start="273:9" pos:end="273:49"><name pos:start="273:9" pos:end="273:24"><name pos:start="273:9" pos:end="273:10">st</name><operator pos:start="273:11" pos:end="273:12">-&gt;</operator><name pos:start="273:13" pos:end="273:24">need_parsing</name></name> <operator pos:start="273:26" pos:end="273:26">=</operator> <name pos:start="273:28" pos:end="273:49">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="277:5" pos:end="283:57"><if pos:start="277:5" pos:end="279:57">if <condition pos:start="277:8" pos:end="277:46">(<expr pos:start="277:9" pos:end="277:45"><name pos:start="277:9" pos:end="277:22">desired_format</name> <operator pos:start="277:24" pos:end="277:25">==</operator> <name pos:start="277:27" pos:end="277:45">V4L2_PIX_FMT_YVU420</name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:57"><block_content pos:start="279:9" pos:end="279:57">

        <expr_stmt pos:start="279:9" pos:end="279:57"><expr pos:start="279:9" pos:end="279:56"><name pos:start="279:9" pos:end="279:28"><name pos:start="279:9" pos:end="279:10">st</name><operator pos:start="279:11" pos:end="279:12">-&gt;</operator><name pos:start="279:13" pos:end="279:17">codec</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:28">codec_tag</name></name> <operator pos:start="279:30" pos:end="279:30">=</operator> <call pos:start="279:32" pos:end="279:56"><name pos:start="279:32" pos:end="279:36">MKTAG</name><argument_list pos:start="279:37" pos:end="279:56">(<argument pos:start="279:38" pos:end="279:40"><expr pos:start="279:38" pos:end="279:40"><literal type="char" pos:start="279:38" pos:end="279:40">'Y'</literal></expr></argument>, <argument pos:start="279:43" pos:end="279:45"><expr pos:start="279:43" pos:end="279:45"><literal type="char" pos:start="279:43" pos:end="279:45">'V'</literal></expr></argument>, <argument pos:start="279:48" pos:end="279:50"><expr pos:start="279:48" pos:end="279:50"><literal type="char" pos:start="279:48" pos:end="279:50">'1'</literal></expr></argument>, <argument pos:start="279:53" pos:end="279:55"><expr pos:start="279:53" pos:end="279:55"><literal type="char" pos:start="279:53" pos:end="279:55">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="281:5" pos:end="283:57">else if <condition pos:start="281:13" pos:end="281:51">(<expr pos:start="281:14" pos:end="281:50"><name pos:start="281:14" pos:end="281:27">desired_format</name> <operator pos:start="281:29" pos:end="281:30">==</operator> <name pos:start="281:32" pos:end="281:50">V4L2_PIX_FMT_YVU410</name></expr>)</condition><block type="pseudo" pos:start="283:9" pos:end="283:57"><block_content pos:start="283:9" pos:end="283:57">

        <expr_stmt pos:start="283:9" pos:end="283:57"><expr pos:start="283:9" pos:end="283:56"><name pos:start="283:9" pos:end="283:28"><name pos:start="283:9" pos:end="283:10">st</name><operator pos:start="283:11" pos:end="283:12">-&gt;</operator><name pos:start="283:13" pos:end="283:17">codec</name><operator pos:start="283:18" pos:end="283:19">-&gt;</operator><name pos:start="283:20" pos:end="283:28">codec_tag</name></name> <operator pos:start="283:30" pos:end="283:30">=</operator> <call pos:start="283:32" pos:end="283:56"><name pos:start="283:32" pos:end="283:36">MKTAG</name><argument_list pos:start="283:37" pos:end="283:56">(<argument pos:start="283:38" pos:end="283:40"><expr pos:start="283:38" pos:end="283:40"><literal type="char" pos:start="283:38" pos:end="283:40">'Y'</literal></expr></argument>, <argument pos:start="283:43" pos:end="283:45"><expr pos:start="283:43" pos:end="283:45"><literal type="char" pos:start="283:43" pos:end="283:45">'V'</literal></expr></argument>, <argument pos:start="283:48" pos:end="283:50"><expr pos:start="283:48" pos:end="283:50"><literal type="char" pos:start="283:48" pos:end="283:50">'U'</literal></expr></argument>, <argument pos:start="283:53" pos:end="283:55"><expr pos:start="283:53" pos:end="283:55"><literal type="char" pos:start="283:53" pos:end="283:55">'9'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:32"><expr pos:start="285:5" pos:end="285:31"><name pos:start="285:5" pos:end="285:20"><name pos:start="285:5" pos:end="285:6">st</name><operator pos:start="285:7" pos:end="285:8">-&gt;</operator><name pos:start="285:9" pos:end="285:13">codec</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:20">width</name></name> <operator pos:start="285:22" pos:end="285:22">=</operator> <name pos:start="285:24" pos:end="285:31"><name pos:start="285:24" pos:end="285:24">s</name><operator pos:start="285:25" pos:end="285:26">-&gt;</operator><name pos:start="285:27" pos:end="285:31">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:34"><expr pos:start="287:5" pos:end="287:33"><name pos:start="287:5" pos:end="287:21"><name pos:start="287:5" pos:end="287:6">st</name><operator pos:start="287:7" pos:end="287:8">-&gt;</operator><name pos:start="287:9" pos:end="287:13">codec</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:21">height</name></name> <operator pos:start="287:23" pos:end="287:23">=</operator> <name pos:start="287:25" pos:end="287:33"><name pos:start="287:25" pos:end="287:25">s</name><operator pos:start="287:26" pos:end="287:27">-&gt;</operator><name pos:start="287:28" pos:end="287:33">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="291:77"><if pos:start="289:5" pos:end="291:77">if <condition pos:start="289:8" pos:end="289:31">(<expr pos:start="289:9" pos:end="289:30"><name pos:start="289:9" pos:end="289:30"><name pos:start="289:9" pos:end="289:10">st</name><operator pos:start="289:11" pos:end="289:12">-&gt;</operator><name pos:start="289:13" pos:end="289:26">avg_frame_rate</name><operator pos:start="289:27" pos:end="289:27">.</operator><name pos:start="289:28" pos:end="289:30">den</name></name></expr>)</condition><block type="pseudo" pos:start="291:9" pos:end="291:77"><block_content pos:start="291:9" pos:end="291:77">

        <expr_stmt pos:start="291:9" pos:end="291:77"><expr pos:start="291:9" pos:end="291:76"><name pos:start="291:9" pos:end="291:27"><name pos:start="291:9" pos:end="291:10">st</name><operator pos:start="291:11" pos:end="291:12">-&gt;</operator><name pos:start="291:13" pos:end="291:17">codec</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:27">bit_rate</name></name> <operator pos:start="291:29" pos:end="291:29">=</operator> <name pos:start="291:31" pos:end="291:43"><name pos:start="291:31" pos:end="291:31">s</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:43">frame_size</name></name> <operator pos:start="291:45" pos:end="291:45">*</operator> <call pos:start="291:47" pos:end="291:72"><name pos:start="291:47" pos:end="291:52">av_q2d</name><argument_list pos:start="291:53" pos:end="291:72">(<argument pos:start="291:54" pos:end="291:71"><expr pos:start="291:54" pos:end="291:71"><name pos:start="291:54" pos:end="291:71"><name pos:start="291:54" pos:end="291:55">st</name><operator pos:start="291:56" pos:end="291:57">-&gt;</operator><name pos:start="291:58" pos:end="291:71">avg_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="291:74" pos:end="291:74">*</operator> <literal type="number" pos:start="291:76" pos:end="291:76">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="295:5" pos:end="295:13">return <expr pos:start="295:12" pos:end="295:12"><literal type="number" pos:start="295:12" pos:end="295:12">0</literal></expr>;</return>



<label pos:start="299:1" pos:end="299:5"><name pos:start="299:1" pos:end="299:4">fail</name>:</label>

    <expr_stmt pos:start="301:5" pos:end="301:22"><expr pos:start="301:5" pos:end="301:21"><call pos:start="301:5" pos:end="301:21"><name pos:start="301:5" pos:end="301:14">v4l2_close</name><argument_list pos:start="301:15" pos:end="301:21">(<argument pos:start="301:16" pos:end="301:20"><expr pos:start="301:16" pos:end="301:20"><name pos:start="301:16" pos:end="301:20"><name pos:start="301:16" pos:end="301:16">s</name><operator pos:start="301:17" pos:end="301:18">-&gt;</operator><name pos:start="301:19" pos:end="301:20">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="303:5" pos:end="303:15">return <expr pos:start="303:12" pos:end="303:14"><name pos:start="303:12" pos:end="303:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
