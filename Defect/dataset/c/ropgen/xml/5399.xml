<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5399.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">qcow2_close</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:29">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:24"><expr pos:start="7:5" pos:end="7:23"><call pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">g_free</name><argument_list pos:start="7:11" pos:end="7:23">(<argument pos:start="7:12" pos:end="7:22"><expr pos:start="7:12" pos:end="7:22"><name pos:start="7:12" pos:end="7:22"><name pos:start="7:12" pos:end="7:12">s</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:22">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:66">/* else pre-write overlap checks in cache_destroy may crash */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:15">l1_table</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:22">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:44">(<expr pos:start="15:9" pos:end="15:43"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:24"><name pos:start="15:11" pos:end="15:12">bs</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:24">open_flags</name></name> <operator pos:start="15:26" pos:end="15:26">&amp;</operator> <name pos:start="15:28" pos:end="15:42">BDRV_O_INCOMING</name><operator pos:start="15:43" pos:end="15:43">)</operator></expr>)</condition> <block pos:start="15:46" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:29">

        <expr_stmt pos:start="17:9" pos:end="17:49"><expr pos:start="17:9" pos:end="17:48"><call pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:25">qcow2_cache_flush</name><argument_list pos:start="17:26" pos:end="17:48">(<argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">bs</name></expr></argument>, <argument pos:start="17:31" pos:end="17:47"><expr pos:start="17:31" pos:end="17:47"><name pos:start="17:31" pos:end="17:47"><name pos:start="17:31" pos:end="17:31">s</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:47">l2_table_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><call pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:25">qcow2_cache_flush</name><argument_list pos:start="19:26" pos:end="19:54">(<argument pos:start="19:27" pos:end="19:28"><expr pos:start="19:27" pos:end="19:28"><name pos:start="19:27" pos:end="19:28">bs</name></expr></argument>, <argument pos:start="19:31" pos:end="19:53"><expr pos:start="19:31" pos:end="19:53"><name pos:start="19:31" pos:end="19:53"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:53">refcount_block_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:24">qcow2_mark_clean</name><argument_list pos:start="23:25" pos:end="23:28">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><call pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:23">qcow2_cache_destroy</name><argument_list pos:start="29:24" pos:end="29:46">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">bs</name></expr></argument>, <argument pos:start="29:29" pos:end="29:45"><expr pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:45"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:45">l2_table_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:53"><expr pos:start="31:5" pos:end="31:52"><call pos:start="31:5" pos:end="31:52"><name pos:start="31:5" pos:end="31:23">qcow2_cache_destroy</name><argument_list pos:start="31:24" pos:end="31:52">(<argument pos:start="31:25" pos:end="31:26"><expr pos:start="31:25" pos:end="31:26"><name pos:start="31:25" pos:end="31:26">bs</name></expr></argument>, <argument pos:start="31:29" pos:end="31:51"><expr pos:start="31:29" pos:end="31:51"><name pos:start="31:29" pos:end="31:51"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:51">refcount_block_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><call pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:10">g_free</name><argument_list pos:start="35:11" pos:end="35:36">(<argument pos:start="35:12" pos:end="35:35"><expr pos:start="35:12" pos:end="35:35"><name pos:start="35:12" pos:end="35:35"><name pos:start="35:12" pos:end="35:12">s</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:35">unknown_header_fields</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:30">cleanup_unknown_header_ext</name><argument_list pos:start="37:31" pos:end="37:34">(<argument pos:start="37:32" pos:end="37:33"><expr pos:start="37:32" pos:end="37:33"><name pos:start="37:32" pos:end="37:33">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><call pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:10">g_free</name><argument_list pos:start="41:11" pos:end="41:28">(<argument pos:start="41:12" pos:end="41:27"><expr pos:start="41:12" pos:end="41:27"><name pos:start="41:12" pos:end="41:27"><name pos:start="41:12" pos:end="41:12">s</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:27">cluster_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><call pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:14">qemu_vfree</name><argument_list pos:start="43:15" pos:end="43:31">(<argument pos:start="43:16" pos:end="43:30"><expr pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:30">cluster_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><call pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:24">qcow2_refcount_close</name><argument_list pos:start="45:25" pos:end="45:28">(<argument pos:start="45:26" pos:end="45:27"><expr pos:start="45:26" pos:end="45:27"><name pos:start="45:26" pos:end="45:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><call pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:24">qcow2_free_snapshots</name><argument_list pos:start="47:25" pos:end="47:28">(<argument pos:start="47:26" pos:end="47:27"><expr pos:start="47:26" pos:end="47:27"><name pos:start="47:26" pos:end="47:27">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
