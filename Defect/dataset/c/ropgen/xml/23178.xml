<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23178.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">thread_pool_completion_bh</name><parameter_list pos:start="1:38" pos:end="1:51">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:44"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ThreadPool</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">pool</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">ThreadPoolElement</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">elem</name></decl>, <decl pos:start="7:30" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:23"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">next</name></decl>;</decl_stmt>



<label pos:start="11:1" pos:end="11:8"><name pos:start="11:1" pos:end="11:7">restart</name>:</label>

    <macro pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="13:23" pos:end="13:52">(<argument pos:start="13:24" pos:end="13:27">elem</argument>, <argument pos:start="13:30" pos:end="13:40">&amp;pool-&gt;head</argument>, <argument pos:start="13:43" pos:end="13:45">all</argument>, <argument pos:start="13:48" pos:end="13:51">next</argument>)</argument_list></macro> <block pos:start="13:54" pos:end="61:5">{<block_content pos:start="15:9" pos:end="59:9">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:39">(<expr pos:start="15:13" pos:end="15:38"><name pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:16">elem</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">state</name></name> <operator pos:start="15:25" pos:end="15:26">!=</operator> <name pos:start="15:28" pos:end="15:38">THREAD_DONE</name></expr>)</condition> <block pos:start="15:41" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="23:9" pos:end="25:46"><expr pos:start="23:9" pos:end="25:45"><call pos:start="23:9" pos:end="25:45"><name pos:start="23:9" pos:end="23:34">trace_thread_pool_complete</name><argument_list pos:start="23:35" pos:end="25:45">(<argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">pool</name></expr></argument>, <argument pos:start="23:42" pos:end="23:45"><expr pos:start="23:42" pos:end="23:45"><name pos:start="23:42" pos:end="23:45">elem</name></expr></argument>, <argument pos:start="23:48" pos:end="23:66"><expr pos:start="23:48" pos:end="23:66"><name pos:start="23:48" pos:end="23:66"><name pos:start="23:48" pos:end="23:51">elem</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:59">common</name><operator pos:start="23:60" pos:end="23:60">.</operator><name pos:start="23:61" pos:end="23:66">opaque</name></name></expr></argument>,

                                   <argument pos:start="25:36" pos:end="25:44"><expr pos:start="25:36" pos:end="25:44"><name pos:start="25:36" pos:end="25:44"><name pos:start="25:36" pos:end="25:39">elem</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:44">ret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:32"><expr pos:start="27:9" pos:end="27:31"><call pos:start="27:9" pos:end="27:31"><name pos:start="27:9" pos:end="27:20">QLIST_REMOVE</name><argument_list pos:start="27:21" pos:end="27:31">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">elem</name></expr></argument>, <argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">all</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="59:9"><if pos:start="31:9" pos:end="55:9">if <condition pos:start="31:12" pos:end="31:28">(<expr pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:16">elem</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:24">common</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:27">cb</name></name></expr>)</condition> <block pos:start="31:30" pos:end="55:9">{<block_content pos:start="35:13" pos:end="53:25">

            <comment type="block" pos:start="33:13" pos:end="33:41">/* Read state before ret.  */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:22"><expr pos:start="35:13" pos:end="35:21"><call pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:19">smp_rmb</name><argument_list pos:start="35:20" pos:end="35:21">()</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="39:13" pos:end="43:15">/* Schedule ourselves in case elem-&gt;common.cb() calls aio_poll() to

             * wait for another request that completed at the same time.

             */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:50"><expr pos:start="45:13" pos:end="45:49"><call pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:28">qemu_bh_schedule</name><argument_list pos:start="45:29" pos:end="45:49">(<argument pos:start="45:30" pos:end="45:48"><expr pos:start="45:30" pos:end="45:48"><name pos:start="45:30" pos:end="45:48"><name pos:start="45:30" pos:end="45:33">pool</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:48">completion_bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:60"><expr pos:start="49:13" pos:end="49:59"><call pos:start="49:13" pos:end="49:59"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:16">elem</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:24">common</name><operator pos:start="49:25" pos:end="49:25">.</operator><name pos:start="49:26" pos:end="49:27">cb</name></name><argument_list pos:start="49:28" pos:end="49:59">(<argument pos:start="49:29" pos:end="49:47"><expr pos:start="49:29" pos:end="49:47"><name pos:start="49:29" pos:end="49:47"><name pos:start="49:29" pos:end="49:32">elem</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:40">common</name><operator pos:start="49:41" pos:end="49:41">.</operator><name pos:start="49:42" pos:end="49:47">opaque</name></name></expr></argument>, <argument pos:start="49:50" pos:end="49:58"><expr pos:start="49:50" pos:end="49:58"><name pos:start="49:50" pos:end="49:58"><name pos:start="49:50" pos:end="49:53">elem</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:58">ret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><call pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:26">qemu_aio_unref</name><argument_list pos:start="51:27" pos:end="51:32">(<argument pos:start="51:28" pos:end="51:31"><expr pos:start="51:28" pos:end="51:31"><name pos:start="51:28" pos:end="51:31">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="53:13" pos:end="53:25">goto <name pos:start="53:18" pos:end="53:24">restart</name>;</goto>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="59:9">else <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:33">

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><call pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:26">qemu_aio_unref</name><argument_list pos:start="57:27" pos:end="57:32">(<argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">elem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
