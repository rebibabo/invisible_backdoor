<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13049.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:31">ide_ioport_read</name><parameter_list pos:start="1:32" pos:end="1:61">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:54">uint32_t</name></type> <name pos:start="1:56" pos:end="1:60">addr1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:15">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">ide_if</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IDEState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:35">= <expr pos:start="7:19" pos:end="7:35"><name pos:start="7:19" pos:end="7:35"><name pos:start="7:19" pos:end="7:24">ide_if</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">cur_drive</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">hob</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:8">addr</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:16">addr1</name> <operator pos:start="15:18" pos:end="15:18">&amp;</operator> <literal type="number" pos:start="15:20" pos:end="15:20">7</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="17:71">/* FIXME: HOB readback uses bit 7, but it's always set right now */</comment>

    <comment type="line" pos:start="19:5" pos:end="19:33">//hob = s-&gt;select &amp; (1 &lt;&lt; 7);</comment>

    <expr_stmt pos:start="21:5" pos:end="21:12"><expr pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:7">hob</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>;</expr_stmt>

    <switch pos:start="23:5" pos:end="144:0">switch<condition pos:start="23:11" pos:end="23:16">(<expr pos:start="23:12" pos:end="23:15"><name pos:start="23:12" pos:end="23:15">addr</name></expr>)</condition> <block pos:start="23:18" pos:end="144:0">{<block_content pos:start="25:5" pos:end="139:14">

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:19"><expr pos:start="27:9" pos:end="27:18"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <literal type="number" pos:start="27:15" pos:end="27:18">0xff</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">1</literal></expr>:</case>

        <if_stmt pos:start="33:9" pos:end="43:33"><if pos:start="33:9" pos:end="35:20">if <condition pos:start="33:12" pos:end="33:43">(<expr pos:start="33:13" pos:end="33:42"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:19">ide_if</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>]</index></name><operator pos:start="33:23" pos:end="33:23">.</operator><name pos:start="33:24" pos:end="33:25">bs</name> <operator pos:start="33:27" pos:end="33:28">&amp;&amp;</operator> <operator pos:start="33:30" pos:end="33:30">!</operator><name pos:start="33:31" pos:end="33:39"><name pos:start="33:31" pos:end="33:36">ide_if</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">1</literal></expr>]</index></name><operator pos:start="33:40" pos:end="33:40">.</operator><name pos:start="33:41" pos:end="33:42">bs</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:20"><block_content pos:start="35:13" pos:end="35:20">

            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="37:9" pos:end="39:27">else if <condition pos:start="37:17" pos:end="37:22">(<expr pos:start="37:18" pos:end="37:21"><operator pos:start="37:18" pos:end="37:18">!</operator><name pos:start="37:19" pos:end="37:21">hob</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:27"><block_content pos:start="39:13" pos:end="39:27">

            <expr_stmt pos:start="39:13" pos:end="39:27"><expr pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:26"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:26">error</name></name></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="41:9" pos:end="43:33">else<block type="pseudo" pos:start="43:13" pos:end="43:33"><block_content pos:start="43:13" pos:end="43:33">

	    <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:32"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:32">hob_feature</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">2</literal></expr>:</case>

        <if_stmt pos:start="49:9" pos:end="59:33"><if pos:start="49:9" pos:end="51:20">if <condition pos:start="49:12" pos:end="49:43">(<expr pos:start="49:13" pos:end="49:42"><operator pos:start="49:13" pos:end="49:13">!</operator><name pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:19">ide_if</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>]</index></name><operator pos:start="49:23" pos:end="49:23">.</operator><name pos:start="49:24" pos:end="49:25">bs</name> <operator pos:start="49:27" pos:end="49:28">&amp;&amp;</operator> <operator pos:start="49:30" pos:end="49:30">!</operator><name pos:start="49:31" pos:end="49:39"><name pos:start="49:31" pos:end="49:36">ide_if</name><index pos:start="49:37" pos:end="49:39">[<expr pos:start="49:38" pos:end="49:38"><literal type="number" pos:start="49:38" pos:end="49:38">1</literal></expr>]</index></name><operator pos:start="49:40" pos:end="49:40">.</operator><name pos:start="49:41" pos:end="49:42">bs</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:20"><block_content pos:start="51:13" pos:end="51:20">

            <expr_stmt pos:start="51:13" pos:end="51:20"><expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="53:9" pos:end="55:36">else if <condition pos:start="53:17" pos:end="53:22">(<expr pos:start="53:18" pos:end="53:21"><operator pos:start="53:18" pos:end="53:18">!</operator><name pos:start="53:19" pos:end="53:21">hob</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:36"><block_content pos:start="55:13" pos:end="55:36">

            <expr_stmt pos:start="55:13" pos:end="55:36"><expr pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:28"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:28">nsector</name></name> <operator pos:start="55:30" pos:end="55:30">&amp;</operator> <literal type="number" pos:start="55:32" pos:end="55:35">0xff</literal></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="57:9" pos:end="59:33">else<block type="pseudo" pos:start="59:13" pos:end="59:33"><block_content pos:start="59:13" pos:end="59:33">

	    <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:15">ret</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <name pos:start="59:19" pos:end="59:32"><name pos:start="59:19" pos:end="59:19">s</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:32">hob_nsector</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">3</literal></expr>:</case>

        <if_stmt pos:start="65:9" pos:end="75:32"><if pos:start="65:9" pos:end="67:20">if <condition pos:start="65:12" pos:end="65:43">(<expr pos:start="65:13" pos:end="65:42"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:22"><name pos:start="65:14" pos:end="65:19">ide_if</name><index pos:start="65:20" pos:end="65:22">[<expr pos:start="65:21" pos:end="65:21"><literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>]</index></name><operator pos:start="65:23" pos:end="65:23">.</operator><name pos:start="65:24" pos:end="65:25">bs</name> <operator pos:start="65:27" pos:end="65:28">&amp;&amp;</operator> <operator pos:start="65:30" pos:end="65:30">!</operator><name pos:start="65:31" pos:end="65:39"><name pos:start="65:31" pos:end="65:36">ide_if</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><literal type="number" pos:start="65:38" pos:end="65:38">1</literal></expr>]</index></name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:42">bs</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:20"><block_content pos:start="67:13" pos:end="67:20">

            <expr_stmt pos:start="67:13" pos:end="67:20"><expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="69:9" pos:end="71:28">else if <condition pos:start="69:17" pos:end="69:22">(<expr pos:start="69:18" pos:end="69:21"><operator pos:start="69:18" pos:end="69:18">!</operator><name pos:start="69:19" pos:end="69:21">hob</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:28"><block_content pos:start="71:13" pos:end="71:28">

            <expr_stmt pos:start="71:13" pos:end="71:28"><expr pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:27"><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:27">sector</name></name></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="73:9" pos:end="75:32">else<block type="pseudo" pos:start="75:13" pos:end="75:32"><block_content pos:start="75:13" pos:end="75:32">

	    <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:31"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:31">hob_sector</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">4</literal></expr>:</case>

        <if_stmt pos:start="81:9" pos:end="91:30"><if pos:start="81:9" pos:end="83:20">if <condition pos:start="81:12" pos:end="81:43">(<expr pos:start="81:13" pos:end="81:42"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:22"><name pos:start="81:14" pos:end="81:19">ide_if</name><index pos:start="81:20" pos:end="81:22">[<expr pos:start="81:21" pos:end="81:21"><literal type="number" pos:start="81:21" pos:end="81:21">0</literal></expr>]</index></name><operator pos:start="81:23" pos:end="81:23">.</operator><name pos:start="81:24" pos:end="81:25">bs</name> <operator pos:start="81:27" pos:end="81:28">&amp;&amp;</operator> <operator pos:start="81:30" pos:end="81:30">!</operator><name pos:start="81:31" pos:end="81:39"><name pos:start="81:31" pos:end="81:36">ide_if</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">1</literal></expr>]</index></name><operator pos:start="81:40" pos:end="81:40">.</operator><name pos:start="81:41" pos:end="81:42">bs</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:20"><block_content pos:start="83:13" pos:end="83:20">

            <expr_stmt pos:start="83:13" pos:end="83:20"><expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="85:9" pos:end="87:26">else if <condition pos:start="85:17" pos:end="85:22">(<expr pos:start="85:18" pos:end="85:21"><operator pos:start="85:18" pos:end="85:18">!</operator><name pos:start="85:19" pos:end="85:21">hob</name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:26"><block_content pos:start="87:13" pos:end="87:26">

            <expr_stmt pos:start="87:13" pos:end="87:26"><expr pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:25"><name pos:start="87:19" pos:end="87:19">s</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:25">lcyl</name></name></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="89:9" pos:end="91:30">else<block type="pseudo" pos:start="91:13" pos:end="91:30"><block_content pos:start="91:13" pos:end="91:30">

	    <expr_stmt pos:start="91:13" pos:end="91:30"><expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:29"><name pos:start="91:19" pos:end="91:19">s</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:29">hob_lcyl</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <case pos:start="95:5" pos:end="95:11">case <expr pos:start="95:10" pos:end="95:10"><literal type="number" pos:start="95:10" pos:end="95:10">5</literal></expr>:</case>

        <if_stmt pos:start="97:9" pos:end="107:30"><if pos:start="97:9" pos:end="99:20">if <condition pos:start="97:12" pos:end="97:43">(<expr pos:start="97:13" pos:end="97:42"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:22"><name pos:start="97:14" pos:end="97:19">ide_if</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><literal type="number" pos:start="97:21" pos:end="97:21">0</literal></expr>]</index></name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:25">bs</name> <operator pos:start="97:27" pos:end="97:28">&amp;&amp;</operator> <operator pos:start="97:30" pos:end="97:30">!</operator><name pos:start="97:31" pos:end="97:39"><name pos:start="97:31" pos:end="97:36">ide_if</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><literal type="number" pos:start="97:38" pos:end="97:38">1</literal></expr>]</index></name><operator pos:start="97:40" pos:end="97:40">.</operator><name pos:start="97:41" pos:end="97:42">bs</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:20"><block_content pos:start="99:13" pos:end="99:20">

            <expr_stmt pos:start="99:13" pos:end="99:20"><expr pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <literal type="number" pos:start="99:19" pos:end="99:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="101:9" pos:end="103:26">else if <condition pos:start="101:17" pos:end="101:22">(<expr pos:start="101:18" pos:end="101:21"><operator pos:start="101:18" pos:end="101:18">!</operator><name pos:start="101:19" pos:end="101:21">hob</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:26"><block_content pos:start="103:13" pos:end="103:26">

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:25"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:25">hcyl</name></name></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="105:9" pos:end="107:30">else<block type="pseudo" pos:start="107:13" pos:end="107:30"><block_content pos:start="107:13" pos:end="107:30">

	    <expr_stmt pos:start="107:13" pos:end="107:30"><expr pos:start="107:13" pos:end="107:29"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:29"><name pos:start="107:19" pos:end="107:19">s</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:29">hob_hcyl</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:11">case <expr pos:start="111:10" pos:end="111:10"><literal type="number" pos:start="111:10" pos:end="111:10">6</literal></expr>:</case>

        <if_stmt pos:start="113:9" pos:end="119:28"><if pos:start="113:9" pos:end="115:20">if <condition pos:start="113:12" pos:end="113:43">(<expr pos:start="113:13" pos:end="113:42"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:22"><name pos:start="113:14" pos:end="113:19">ide_if</name><index pos:start="113:20" pos:end="113:22">[<expr pos:start="113:21" pos:end="113:21"><literal type="number" pos:start="113:21" pos:end="113:21">0</literal></expr>]</index></name><operator pos:start="113:23" pos:end="113:23">.</operator><name pos:start="113:24" pos:end="113:25">bs</name> <operator pos:start="113:27" pos:end="113:28">&amp;&amp;</operator> <operator pos:start="113:30" pos:end="113:30">!</operator><name pos:start="113:31" pos:end="113:39"><name pos:start="113:31" pos:end="113:36">ide_if</name><index pos:start="113:37" pos:end="113:39">[<expr pos:start="113:38" pos:end="113:38"><literal type="number" pos:start="113:38" pos:end="113:38">1</literal></expr>]</index></name><operator pos:start="113:40" pos:end="113:40">.</operator><name pos:start="113:41" pos:end="113:42">bs</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:20"><block_content pos:start="115:13" pos:end="115:20">

            <expr_stmt pos:start="115:13" pos:end="115:20"><expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">ret</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <literal type="number" pos:start="115:19" pos:end="115:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="117:9" pos:end="119:28">else<block type="pseudo" pos:start="119:13" pos:end="119:28"><block_content pos:start="119:13" pos:end="119:28">

            <expr_stmt pos:start="119:13" pos:end="119:28"><expr pos:start="119:13" pos:end="119:27"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:27"><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:27">select</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <default pos:start="123:5" pos:end="123:12">default:</default>

    <case pos:start="125:5" pos:end="125:11">case <expr pos:start="125:10" pos:end="125:10"><literal type="number" pos:start="125:10" pos:end="125:10">7</literal></expr>:</case>

        <if_stmt pos:start="127:9" pos:end="135:28"><if pos:start="127:9" pos:end="131:20">if <condition pos:start="127:12" pos:end="129:36">(<expr pos:start="127:13" pos:end="129:35"><operator pos:start="127:13" pos:end="127:13">(</operator><operator pos:start="127:14" pos:end="127:14">!</operator><name pos:start="127:15" pos:end="127:23"><name pos:start="127:15" pos:end="127:20">ide_if</name><index pos:start="127:21" pos:end="127:23">[<expr pos:start="127:22" pos:end="127:22"><literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr>]</index></name><operator pos:start="127:24" pos:end="127:24">.</operator><name pos:start="127:25" pos:end="127:26">bs</name> <operator pos:start="127:28" pos:end="127:29">&amp;&amp;</operator> <operator pos:start="127:31" pos:end="127:31">!</operator><name pos:start="127:32" pos:end="127:40"><name pos:start="127:32" pos:end="127:37">ide_if</name><index pos:start="127:38" pos:end="127:40">[<expr pos:start="127:39" pos:end="127:39"><literal type="number" pos:start="127:39" pos:end="127:39">1</literal></expr>]</index></name><operator pos:start="127:41" pos:end="127:41">.</operator><name pos:start="127:42" pos:end="127:43">bs</name><operator pos:start="127:44" pos:end="127:44">)</operator> <operator pos:start="127:46" pos:end="127:47">||</operator>

            <operator pos:start="129:13" pos:end="129:13">(</operator><name pos:start="129:14" pos:end="129:14">s</name> <operator pos:start="129:16" pos:end="129:17">!=</operator> <name pos:start="129:19" pos:end="129:24">ide_if</name> <operator pos:start="129:26" pos:end="129:27">&amp;&amp;</operator> <operator pos:start="129:29" pos:end="129:29">!</operator><name pos:start="129:30" pos:end="129:34"><name pos:start="129:30" pos:end="129:30">s</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:34">bs</name></name><operator pos:start="129:35" pos:end="129:35">)</operator></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:20"><block_content pos:start="131:13" pos:end="131:20">

            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="133:9" pos:end="135:28">else<block type="pseudo" pos:start="135:13" pos:end="135:28"><block_content pos:start="135:13" pos:end="135:28">

            <expr_stmt pos:start="135:13" pos:end="135:28"><expr pos:start="135:13" pos:end="135:27"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <name pos:start="135:19" pos:end="135:27"><name pos:start="135:19" pos:end="135:19">s</name><operator pos:start="135:20" pos:end="135:21">-&gt;</operator><name pos:start="135:22" pos:end="135:27">status</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:31"><expr pos:start="137:9" pos:end="137:30"><call pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:22">qemu_irq_lower</name><argument_list pos:start="137:23" pos:end="137:30">(<argument pos:start="137:24" pos:end="137:29"><expr pos:start="137:24" pos:end="137:29"><name pos:start="137:24" pos:end="137:29"><name pos:start="137:24" pos:end="137:24">s</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:29">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    </block_content>}</block></switch>

<cpp:ifdef pos:start="143:1" pos:end="143:16">#<cpp:directive pos:start="143:2" pos:end="143:6">ifdef</cpp:directive> <name pos:start="143:8" pos:end="143:16">DEBUG_IDE</name></cpp:ifdef>

    <expr_stmt pos:start="145:5" pos:end="148:0"><expr pos:start="145:5" pos:end="145:56"><call pos:start="145:5" pos:end="145:56"><name pos:start="145:5" pos:end="145:10">printf</name><argument_list pos:start="145:11" pos:end="145:56">(<argument pos:start="145:12" pos:end="145:43"><expr pos:start="145:12" pos:end="145:43"><literal type="string" pos:start="145:12" pos:end="145:43">"ide: read addr=0x%x val=%02x\n"</literal></expr></argument>, <argument pos:start="145:46" pos:end="145:50"><expr pos:start="145:46" pos:end="145:50"><name pos:start="145:46" pos:end="145:50">addr1</name></expr></argument>, <argument pos:start="145:53" pos:end="145:55"><expr pos:start="145:53" pos:end="145:55"><name pos:start="145:53" pos:end="145:55">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

    <return pos:start="149:5" pos:end="149:15">return <expr pos:start="149:12" pos:end="149:14"><name pos:start="149:12" pos:end="149:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
