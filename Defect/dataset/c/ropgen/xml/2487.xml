<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2487.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:62"><name pos:start="1:1" pos:end="1:17">iscsi_aio_discard</name><argument_list pos:start="1:18" pos:end="5:62">(<argument pos:start="1:19" pos:end="1:38">BlockDriverState *bs</argument>,

                  <argument pos:start="3:19" pos:end="3:36">int64_t sector_num</argument>, <argument pos:start="3:39" pos:end="3:52">int nb_sectors</argument>,

                  <argument pos:start="5:19" pos:end="5:47">BlockDriverCompletionFunc *cb</argument>, <argument pos:start="5:50" pos:end="5:61">void *opaque</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:24">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">IscsiLun</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:22">iscsilun</name> <init pos:start="9:24" pos:end="9:35">= <expr pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:27">bs</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:35">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:49"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:24">iscsi_context</name></name> <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:31">iscsi</name> <init pos:start="11:33" pos:end="11:49">= <expr pos:start="11:35" pos:end="11:49"><name pos:start="11:35" pos:end="11:49"><name pos:start="11:35" pos:end="11:42">iscsilun</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:49">iscsi</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">IscsiAIOCB</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:19">acb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:21">unmap_list</name></name></type> <name pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:26">list</name><index pos:start="15:27" pos:end="15:29">[<expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">1</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:58"><expr pos:start="19:5" pos:end="19:57"><name pos:start="19:5" pos:end="19:7">acb</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:57"><name pos:start="19:11" pos:end="19:22">qemu_aio_get</name><argument_list pos:start="19:23" pos:end="19:57">(<argument pos:start="19:24" pos:end="19:40"><expr pos:start="19:24" pos:end="19:40"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:40">iscsi_aiocb_info</name></expr></argument>, <argument pos:start="19:43" pos:end="19:44"><expr pos:start="19:43" pos:end="19:44"><name pos:start="19:43" pos:end="19:44">bs</name></expr></argument>, <argument pos:start="19:47" pos:end="19:48"><expr pos:start="19:47" pos:end="19:48"><name pos:start="19:47" pos:end="19:48">cb</name></expr></argument>, <argument pos:start="19:51" pos:end="19:56"><expr pos:start="19:51" pos:end="19:56"><name pos:start="19:51" pos:end="19:56">opaque</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">acb</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:17">iscsilun</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:28">iscsilun</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:7">acb</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:17">canceled</name></name>   <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:7">acb</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:11">bh</name></name>         <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:26">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">acb</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">status</name></name>     <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">-</operator><name pos:start="29:24" pos:end="29:34">EINPROGRESS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:7">acb</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:12">buf</name></name>        <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:26">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:8">list</name><index pos:start="35:9" pos:end="35:11">[<expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">0</literal></expr>]</index></name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:15">lba</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:55"><name pos:start="35:19" pos:end="35:33">sector_qemu2lun</name><argument_list pos:start="35:34" pos:end="35:55">(<argument pos:start="35:35" pos:end="35:44"><expr pos:start="35:35" pos:end="35:44"><name pos:start="35:35" pos:end="35:44">sector_num</name></expr></argument>, <argument pos:start="35:47" pos:end="35:54"><expr pos:start="35:47" pos:end="35:54"><name pos:start="35:47" pos:end="35:54">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:8">list</name><index pos:start="37:9" pos:end="37:11">[<expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>]</index></name><operator pos:start="37:12" pos:end="37:12">.</operator><name pos:start="37:13" pos:end="37:15">num</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:28">nb_sectors</name> <operator pos:start="37:30" pos:end="37:30">*</operator> <name pos:start="37:32" pos:end="37:47">BDRV_SECTOR_SIZE</name> <operator pos:start="37:49" pos:end="37:49">/</operator> <name pos:start="37:51" pos:end="37:70"><name pos:start="37:51" pos:end="37:58">iscsilun</name><operator pos:start="37:59" pos:end="37:60">-&gt;</operator><name pos:start="37:61" pos:end="37:70">block_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="47:38"><expr pos:start="41:5" pos:end="47:37"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:7">acb</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:13">task</name></name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="47:37"><name pos:start="41:17" pos:end="41:32">iscsi_unmap_task</name><argument_list pos:start="41:33" pos:end="47:37">(<argument pos:start="41:34" pos:end="41:38"><expr pos:start="41:34" pos:end="41:38"><name pos:start="41:34" pos:end="41:38">iscsi</name></expr></argument>, <argument pos:start="41:41" pos:end="41:53"><expr pos:start="41:41" pos:end="41:53"><name pos:start="41:41" pos:end="41:53"><name pos:start="41:41" pos:end="41:48">iscsilun</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:53">lun</name></name></expr></argument>,

                                 <argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr></argument>, <argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:44">list</name><index pos:start="43:45" pos:end="43:47">[<expr pos:start="43:46" pos:end="43:46"><literal type="number" pos:start="43:46" pos:end="43:46">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:50" pos:end="43:50"><expr pos:start="43:50" pos:end="43:50"><literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr></argument>,

                                 <argument pos:start="45:34" pos:end="45:47"><expr pos:start="45:34" pos:end="45:47"><name pos:start="45:34" pos:end="45:47">iscsi_unmap_cb</name></expr></argument>,

                                 <argument pos:start="47:34" pos:end="47:36"><expr pos:start="47:34" pos:end="47:36"><name pos:start="47:34" pos:end="47:36">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="49:26">(<expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:11">acb</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:17">task</name></name> <operator pos:start="49:19" pos:end="49:20">==</operator> <name pos:start="49:22" pos:end="49:25">NULL</name></expr>)</condition> <block pos:start="49:28" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:20">

        <expr_stmt pos:start="51:9" pos:end="53:45"><expr pos:start="51:9" pos:end="53:44"><call pos:start="51:9" pos:end="53:44"><name pos:start="51:9" pos:end="51:20">error_report</name><argument_list pos:start="51:21" pos:end="53:44">(<argument pos:start="51:22" pos:end="51:62"><expr pos:start="51:22" pos:end="51:62"><literal type="string" pos:start="51:22" pos:end="51:62">"iSCSI: Failed to send unmap command. %s"</literal></expr></argument>,

                     <argument pos:start="53:22" pos:end="53:43"><expr pos:start="53:22" pos:end="53:43"><call pos:start="53:22" pos:end="53:43"><name pos:start="53:22" pos:end="53:36">iscsi_get_error</name><argument_list pos:start="53:37" pos:end="53:43">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">iscsi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><call pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:24">qemu_aio_release</name><argument_list pos:start="55:25" pos:end="55:29">(<argument pos:start="55:26" pos:end="55:28"><expr pos:start="55:26" pos:end="55:28"><name pos:start="55:26" pos:end="55:28">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><call pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:20">iscsi_set_events</name><argument_list pos:start="63:21" pos:end="63:30">(<argument pos:start="63:22" pos:end="63:29"><expr pos:start="63:22" pos:end="63:29"><name pos:start="63:22" pos:end="63:29">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:24">return <expr pos:start="67:12" pos:end="67:23"><operator pos:start="67:12" pos:end="67:12">&amp;</operator><name pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:15">acb</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:23">common</name></name></expr>;</return>

</block_content>}</block>
</unit>
