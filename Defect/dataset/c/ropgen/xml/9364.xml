<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9364.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:24">doubles2str</name><parameter_list pos:start="1:25" pos:end="1:64">(<parameter pos:start="1:26" pos:end="1:35"><decl pos:start="1:26" pos:end="1:35"><type pos:start="1:26" pos:end="1:35"><name pos:start="1:26" pos:end="1:31">double</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">dp</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:46"><decl pos:start="1:38" pos:end="1:46"><type pos:start="1:38" pos:end="1:46"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:46">count</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:63"><decl pos:start="1:49" pos:end="1:63"><type pos:start="1:49" pos:end="1:63"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">sep</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:15">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:12">ap</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">ap0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">component_len</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="11:25"><if pos:start="11:5" pos:end="11:25">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">sep</name></expr>)</condition><block type="pseudo" pos:start="11:15" pos:end="11:25"><block_content pos:start="11:15" pos:end="11:25"> <expr_stmt pos:start="11:15" pos:end="11:25"><expr pos:start="11:15" pos:end="11:24"><name pos:start="11:15" pos:end="11:17">sep</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="string" pos:start="11:21" pos:end="11:24">", "</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:17">component_len</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:24">15</literal> <operator pos:start="13:24" pos:end="13:24">+</operator> <call pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:31">strlen</name><argument_list pos:start="13:32" pos:end="13:36">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">sep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:6">ap</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:41"><name pos:start="15:10" pos:end="15:18">av_malloc</name><argument_list pos:start="15:19" pos:end="15:41">(<argument pos:start="15:20" pos:end="15:40"><expr pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:32">component_len</name> <operator pos:start="15:34" pos:end="15:34">*</operator> <name pos:start="15:36" pos:end="15:40">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:20"><if pos:start="17:5" pos:end="19:20">if <condition pos:start="17:8" pos:end="17:12">(<expr pos:start="17:9" pos:end="17:11"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:11">ap</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:20"><block_content pos:start="19:9" pos:end="19:20">

        <return pos:start="19:9" pos:end="19:20">return <expr pos:start="19:16" pos:end="19:19"><name pos:start="19:16" pos:end="19:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:7">ap0</name>   <operator pos:start="21:11" pos:end="21:11">=</operator> <name pos:start="21:13" pos:end="21:14">ap</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:6">ap</name><index pos:start="23:7" pos:end="23:9">[<expr pos:start="23:8" pos:end="23:8"><literal type="number" pos:start="23:8" pos:end="23:8">0</literal></expr>]</index></name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="char" pos:start="23:13" pos:end="23:16">'\0'</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="39:5">for <control pos:start="25:9" pos:end="25:31">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:25">count</name></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">i</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:16">

        <decl_stmt pos:start="27:9" pos:end="27:69"><decl pos:start="27:9" pos:end="27:68"><type pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:16">unsigned</name></type> <name pos:start="27:18" pos:end="27:18">l</name> <init pos:start="27:20" pos:end="27:68">= <expr pos:start="27:22" pos:end="27:68"><call pos:start="27:22" pos:end="27:68"><name pos:start="27:22" pos:end="27:29">snprintf</name><argument_list pos:start="27:30" pos:end="27:68">(<argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><name pos:start="27:31" pos:end="27:32">ap</name></expr></argument>, <argument pos:start="27:35" pos:end="27:47"><expr pos:start="27:35" pos:end="27:47"><name pos:start="27:35" pos:end="27:47">component_len</name></expr></argument>, <argument pos:start="27:50" pos:end="27:55"><expr pos:start="27:50" pos:end="27:55"><literal type="string" pos:start="27:50" pos:end="27:55">"%f%s"</literal></expr></argument>, <argument pos:start="27:58" pos:end="27:62"><expr pos:start="27:58" pos:end="27:62"><name pos:start="27:58" pos:end="27:62"><name pos:start="27:58" pos:end="27:59">dp</name><index pos:start="27:60" pos:end="27:62">[<expr pos:start="27:61" pos:end="27:61"><name pos:start="27:61" pos:end="27:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:65" pos:end="27:67"><expr pos:start="27:65" pos:end="27:67"><name pos:start="27:65" pos:end="27:67">sep</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if<condition pos:start="29:11" pos:end="29:30">(<expr pos:start="29:12" pos:end="29:29"><name pos:start="29:12" pos:end="29:12">l</name> <operator pos:start="29:14" pos:end="29:15">&gt;=</operator> <name pos:start="29:17" pos:end="29:29">component_len</name></expr>)</condition> <block pos:start="29:32" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:24">

            <expr_stmt pos:start="31:13" pos:end="31:25"><expr pos:start="31:13" pos:end="31:24"><call pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:19">av_free</name><argument_list pos:start="31:20" pos:end="31:24">(<argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><name pos:start="31:21" pos:end="31:23">ap0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:24">return <expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:10">ap</name> <operator pos:start="37:12" pos:end="37:13">+=</operator> <name pos:start="37:15" pos:end="37:15">l</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:7">ap0</name><index pos:start="41:8" pos:end="41:34">[<expr pos:start="41:9" pos:end="41:33"><call pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:14">strlen</name><argument_list pos:start="41:15" pos:end="41:19">(<argument pos:start="41:16" pos:end="41:18"><expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ap0</name></expr></argument>)</argument_list></call> <operator pos:start="41:21" pos:end="41:21">-</operator> <call pos:start="41:23" pos:end="41:33"><name pos:start="41:23" pos:end="41:28">strlen</name><argument_list pos:start="41:29" pos:end="41:33">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">sep</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="41:36" pos:end="41:36">=</operator> <literal type="char" pos:start="41:38" pos:end="41:41">'\0'</literal></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:15">return <expr pos:start="43:12" pos:end="43:14"><name pos:start="43:12" pos:end="43:14">ap0</name></expr>;</return>

</block_content>}</block></function>
</unit>
