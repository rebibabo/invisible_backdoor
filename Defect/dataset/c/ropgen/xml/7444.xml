<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7444.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">test_visitor_in_any</name><parameter_list pos:start="1:32" pos:end="3:51">(<parameter pos:start="1:33" pos:end="1:58"><decl pos:start="1:33" pos:end="1:58"><type pos:start="1:33" pos:end="1:58"><name pos:start="1:33" pos:end="1:52">TestInputVisitorData</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">void</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:50">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:24">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">res</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">QInt</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">qint</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">QBool</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:16">qbool</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">QString</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20">qstring</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">QDict</name> <modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">QObject</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:17">qobj</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:45"><expr pos:start="25:5" pos:end="25:44"><name pos:start="25:5" pos:end="25:5">v</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <call pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:31">visitor_input_test_init</name><argument_list pos:start="25:32" pos:end="25:44">(<argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">data</name></expr></argument>, <argument pos:start="25:39" pos:end="25:43"><expr pos:start="25:39" pos:end="25:43"><literal type="string" pos:start="25:39" pos:end="25:43">"-42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:18">visit_type_any</name><argument_list pos:start="27:19" pos:end="27:39">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">v</name></expr></argument>, <argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:26">res</name></expr></argument>, <argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">NULL</name></expr></argument>, <argument pos:start="27:35" pos:end="27:38"><expr pos:start="27:35" pos:end="27:38"><operator pos:start="27:35" pos:end="27:35">&amp;</operator><name pos:start="27:36" pos:end="27:38">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:19"><expr pos:start="29:5" pos:end="29:18"><call pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:12">g_assert</name><argument_list pos:start="29:13" pos:end="29:18">(<argument pos:start="29:14" pos:end="29:17"><expr pos:start="29:14" pos:end="29:17"><operator pos:start="29:14" pos:end="29:14">!</operator><name pos:start="29:15" pos:end="29:17">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:32"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:8">qint</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:26">qobject_to_qint</name><argument_list pos:start="31:27" pos:end="31:31">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><call pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12">g_assert</name><argument_list pos:start="33:13" pos:end="33:18">(<argument pos:start="33:14" pos:end="33:17"><expr pos:start="33:14" pos:end="33:17"><name pos:start="33:14" pos:end="33:17">qint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:49"><expr pos:start="35:5" pos:end="35:48"><call pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:19">g_assert_cmpint</name><argument_list pos:start="35:20" pos:end="35:48">(<argument pos:start="35:21" pos:end="35:38"><expr pos:start="35:21" pos:end="35:38"><call pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:32">qint_get_int</name><argument_list pos:start="35:33" pos:end="35:38">(<argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">qint</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:41" pos:end="35:42"><expr pos:start="35:41" pos:end="35:42"><operator pos:start="35:41" pos:end="35:42">==</operator></expr></argument>, <argument pos:start="35:45" pos:end="35:47"><expr pos:start="35:45" pos:end="35:47"><operator pos:start="35:45" pos:end="35:45">-</operator><literal type="number" pos:start="35:46" pos:end="35:47">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><call pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:18">qobject_decref</name><argument_list pos:start="37:19" pos:end="37:23">(<argument pos:start="37:20" pos:end="37:22"><expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:94"><expr pos:start="41:5" pos:end="41:93"><name pos:start="41:5" pos:end="41:5">v</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:93"><name pos:start="41:9" pos:end="41:31">visitor_input_test_init</name><argument_list pos:start="41:32" pos:end="41:93">(<argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">data</name></expr></argument>, <argument pos:start="41:39" pos:end="41:92"><expr pos:start="41:39" pos:end="41:92"><literal type="string" pos:start="41:39" pos:end="41:92">"{ 'integer': -42, 'boolean': true, 'string': 'foo' }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:18">visit_type_any</name><argument_list pos:start="43:19" pos:end="43:39">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">v</name></expr></argument>, <argument pos:start="43:23" pos:end="43:26"><expr pos:start="43:23" pos:end="43:26"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:26">res</name></expr></argument>, <argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">NULL</name></expr></argument>, <argument pos:start="43:35" pos:end="43:38"><expr pos:start="43:35" pos:end="43:38"><operator pos:start="43:35" pos:end="43:35">&amp;</operator><name pos:start="43:36" pos:end="43:38">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><call pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:12">g_assert</name><argument_list pos:start="45:13" pos:end="45:18">(<argument pos:start="45:14" pos:end="45:17"><expr pos:start="45:14" pos:end="45:17"><operator pos:start="45:14" pos:end="45:14">!</operator><name pos:start="45:15" pos:end="45:17">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:9">qdict</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:28">qobject_to_qdict</name><argument_list pos:start="47:29" pos:end="47:33">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><call pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:12">g_assert</name><argument_list pos:start="49:13" pos:end="49:45">(<argument pos:start="49:14" pos:end="49:44"><expr pos:start="49:14" pos:end="49:44"><name pos:start="49:14" pos:end="49:18">qdict</name> <operator pos:start="49:20" pos:end="49:21">&amp;&amp;</operator> <call pos:start="49:23" pos:end="49:39"><name pos:start="49:23" pos:end="49:32">qdict_size</name><argument_list pos:start="49:33" pos:end="49:39">(<argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">qdict</name></expr></argument>)</argument_list></call> <operator pos:start="49:41" pos:end="49:42">==</operator> <literal type="number" pos:start="49:44" pos:end="49:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:8">qobj</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:38"><name pos:start="51:12" pos:end="51:20">qdict_get</name><argument_list pos:start="51:21" pos:end="51:38">(<argument pos:start="51:22" pos:end="51:26"><expr pos:start="51:22" pos:end="51:26"><name pos:start="51:22" pos:end="51:26">qdict</name></expr></argument>, <argument pos:start="51:29" pos:end="51:37"><expr pos:start="51:29" pos:end="51:37"><literal type="string" pos:start="51:29" pos:end="51:37">"integer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:19"><expr pos:start="53:5" pos:end="53:18"><call pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:12">g_assert</name><argument_list pos:start="53:13" pos:end="53:18">(<argument pos:start="53:14" pos:end="53:17"><expr pos:start="53:14" pos:end="53:17"><name pos:start="53:14" pos:end="53:17">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:8">qint</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:32"><name pos:start="55:12" pos:end="55:26">qobject_to_qint</name><argument_list pos:start="55:27" pos:end="55:32">(<argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><call pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:12">g_assert</name><argument_list pos:start="57:13" pos:end="57:18">(<argument pos:start="57:14" pos:end="57:17"><expr pos:start="57:14" pos:end="57:17"><name pos:start="57:14" pos:end="57:17">qint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:49"><expr pos:start="59:5" pos:end="59:48"><call pos:start="59:5" pos:end="59:48"><name pos:start="59:5" pos:end="59:19">g_assert_cmpint</name><argument_list pos:start="59:20" pos:end="59:48">(<argument pos:start="59:21" pos:end="59:38"><expr pos:start="59:21" pos:end="59:38"><call pos:start="59:21" pos:end="59:38"><name pos:start="59:21" pos:end="59:32">qint_get_int</name><argument_list pos:start="59:33" pos:end="59:38">(<argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">qint</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:41" pos:end="59:42"><expr pos:start="59:41" pos:end="59:42"><operator pos:start="59:41" pos:end="59:42">==</operator></expr></argument>, <argument pos:start="59:45" pos:end="59:47"><expr pos:start="59:45" pos:end="59:47"><operator pos:start="59:45" pos:end="59:45">-</operator><literal type="number" pos:start="59:46" pos:end="59:47">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:8">qobj</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <call pos:start="61:12" pos:end="61:38"><name pos:start="61:12" pos:end="61:20">qdict_get</name><argument_list pos:start="61:21" pos:end="61:38">(<argument pos:start="61:22" pos:end="61:26"><expr pos:start="61:22" pos:end="61:26"><name pos:start="61:22" pos:end="61:26">qdict</name></expr></argument>, <argument pos:start="61:29" pos:end="61:37"><expr pos:start="61:29" pos:end="61:37"><literal type="string" pos:start="61:29" pos:end="61:37">"boolean"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:19"><expr pos:start="63:5" pos:end="63:18"><call pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:12">g_assert</name><argument_list pos:start="63:13" pos:end="63:18">(<argument pos:start="63:14" pos:end="63:17"><expr pos:start="63:14" pos:end="63:17"><name pos:start="63:14" pos:end="63:17">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:9">qbool</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <call pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:28">qobject_to_qbool</name><argument_list pos:start="65:29" pos:end="65:34">(<argument pos:start="65:30" pos:end="65:33"><expr pos:start="65:30" pos:end="65:33"><name pos:start="65:30" pos:end="65:33">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:20"><expr pos:start="67:5" pos:end="67:19"><call pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:12">g_assert</name><argument_list pos:start="67:13" pos:end="67:19">(<argument pos:start="67:14" pos:end="67:18"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:18">qbool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:44"><expr pos:start="69:5" pos:end="69:43"><call pos:start="69:5" pos:end="69:43"><name pos:start="69:5" pos:end="69:12">g_assert</name><argument_list pos:start="69:13" pos:end="69:43">(<argument pos:start="69:14" pos:end="69:42"><expr pos:start="69:14" pos:end="69:42"><call pos:start="69:14" pos:end="69:34"><name pos:start="69:14" pos:end="69:27">qbool_get_bool</name><argument_list pos:start="69:28" pos:end="69:34">(<argument pos:start="69:29" pos:end="69:33"><expr pos:start="69:29" pos:end="69:33"><name pos:start="69:29" pos:end="69:33">qbool</name></expr></argument>)</argument_list></call> <operator pos:start="69:36" pos:end="69:37">==</operator> <name pos:start="69:39" pos:end="69:42">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:38"><expr pos:start="71:5" pos:end="71:37"><name pos:start="71:5" pos:end="71:8">qobj</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <call pos:start="71:12" pos:end="71:37"><name pos:start="71:12" pos:end="71:20">qdict_get</name><argument_list pos:start="71:21" pos:end="71:37">(<argument pos:start="71:22" pos:end="71:26"><expr pos:start="71:22" pos:end="71:26"><name pos:start="71:22" pos:end="71:26">qdict</name></expr></argument>, <argument pos:start="71:29" pos:end="71:36"><expr pos:start="71:29" pos:end="71:36"><literal type="string" pos:start="71:29" pos:end="71:36">"string"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:19"><expr pos:start="73:5" pos:end="73:18"><call pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:12">g_assert</name><argument_list pos:start="73:13" pos:end="73:18">(<argument pos:start="73:14" pos:end="73:17"><expr pos:start="73:14" pos:end="73:17"><name pos:start="73:14" pos:end="73:17">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:11">qstring</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:38"><name pos:start="75:15" pos:end="75:32">qobject_to_qstring</name><argument_list pos:start="75:33" pos:end="75:38">(<argument pos:start="75:34" pos:end="75:37"><expr pos:start="75:34" pos:end="75:37"><name pos:start="75:34" pos:end="75:37">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:22"><expr pos:start="77:5" pos:end="77:21"><call pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:12">g_assert</name><argument_list pos:start="77:13" pos:end="77:21">(<argument pos:start="77:14" pos:end="77:20"><expr pos:start="77:14" pos:end="77:20"><name pos:start="77:14" pos:end="77:20">qstring</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:57"><expr pos:start="79:5" pos:end="79:56"><call pos:start="79:5" pos:end="79:56"><name pos:start="79:5" pos:end="79:19">g_assert_cmpstr</name><argument_list pos:start="79:20" pos:end="79:56">(<argument pos:start="79:21" pos:end="79:44"><expr pos:start="79:21" pos:end="79:44"><call pos:start="79:21" pos:end="79:44"><name pos:start="79:21" pos:end="79:35">qstring_get_str</name><argument_list pos:start="79:36" pos:end="79:44">(<argument pos:start="79:37" pos:end="79:43"><expr pos:start="79:37" pos:end="79:43"><name pos:start="79:37" pos:end="79:43">qstring</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:47" pos:end="79:48"><expr pos:start="79:47" pos:end="79:48"><operator pos:start="79:47" pos:end="79:48">==</operator></expr></argument>, <argument pos:start="79:51" pos:end="79:55"><expr pos:start="79:51" pos:end="79:55"><literal type="string" pos:start="79:51" pos:end="79:55">"foo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><call pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:18">qobject_decref</name><argument_list pos:start="81:19" pos:end="81:23">(<argument pos:start="81:20" pos:end="81:22"><expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
