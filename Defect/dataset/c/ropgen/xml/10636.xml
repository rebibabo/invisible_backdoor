<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10636.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_aac_coder_init_mips</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:41">AACEncContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>)</parameter_list> <block pos:start="1:47" pos:end="33:1">{<block_content pos:start="5:5" pos:end="32:0">

<cpp:if pos:start="3:1" pos:end="3:19">#<cpp:directive pos:start="3:2" pos:end="3:3">if</cpp:directive> <expr pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:19">HAVE_INLINE_ASM</name></expr></cpp:if>

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26">AACCoefficientsEncoder</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:29">e</name> <init pos:start="5:31" pos:end="5:40">= <expr pos:start="5:33" pos:end="5:40"><name pos:start="5:33" pos:end="5:40"><name pos:start="5:33" pos:end="5:33">c</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:40">coder</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">option</name> <init pos:start="7:16" pos:end="7:37">= <expr pos:start="7:18" pos:end="7:37"><name pos:start="7:18" pos:end="7:37"><name pos:start="7:18" pos:end="7:18">c</name><operator pos:start="7:19" pos:end="7:20">-&gt;</operator><name pos:start="7:21" pos:end="7:27">options</name><operator pos:start="7:28" pos:end="7:28">.</operator><name pos:start="7:29" pos:end="7:37">aac_coder</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="26:0"><if pos:start="11:5" pos:end="26:0">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:14">option</name> <operator pos:start="11:16" pos:end="11:17">==</operator> <literal type="number" pos:start="11:19" pos:end="11:19">2</literal></expr>)</condition> <block pos:start="11:22" pos:end="26:0">{<block_content pos:start="13:9" pos:end="22:0">

        <expr_stmt pos:start="13:9" pos:end="13:68"><expr pos:start="13:9" pos:end="13:67"><name pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:9">e</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:35">quantize_and_encode_band</name></name> <operator pos:start="13:37" pos:end="13:37">=</operator> <name pos:start="13:39" pos:end="13:67">quantize_and_encode_band_mips</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="18:0"><expr pos:start="15:9" pos:end="15:59"><name pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:9">e</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:35">encode_window_bands_info</name></name> <operator pos:start="15:37" pos:end="15:37">=</operator> <name pos:start="15:39" pos:end="15:59">codebook_trellis_rate</name></expr>;</expr_stmt>

<cpp:if pos:start="17:1" pos:end="17:16">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">HAVE_MIPSFPU</name></expr></cpp:if>

        <expr_stmt pos:start="19:9" pos:end="22:0"><expr pos:start="19:9" pos:end="19:67"><name pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:9">e</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:32">search_for_quantizers</name></name>    <operator pos:start="19:37" pos:end="19:37">=</operator> <name pos:start="19:39" pos:end="19:67">search_for_quantizers_twoloop</name></expr>;</expr_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="21:8" pos:end="21:25">/* HAVE_MIPSFPU */</comment>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="25:1" pos:end="25:16">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:16">HAVE_MIPSFPU</name></expr></cpp:if>

    <expr_stmt pos:start="27:5" pos:end="32:0"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:5">e</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:20">search_for_ms</name></name>            <operator pos:start="27:33" pos:end="27:33">=</operator> <name pos:start="27:35" pos:end="27:52">search_for_ms_mips</name></expr>;</expr_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="29:8" pos:end="29:25">/* HAVE_MIPSFPU */</comment>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="31:8" pos:end="31:28">/* HAVE_INLINE_ASM */</comment>

</block_content>}</block></function>
</unit>
