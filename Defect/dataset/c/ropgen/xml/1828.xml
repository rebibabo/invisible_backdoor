<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1828.c" pos:tabs="8"><function pos:start="1:1" pos:end="293:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">process_input</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:28"><name pos:start="1:26" pos:end="1:28">int</name></type> <name pos:start="1:30" pos:end="1:39">file_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="293:1">{<block_content pos:start="5:5" pos:end="291:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">InputFile</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">ifile</name> <init pos:start="5:22" pos:end="5:46">= <expr pos:start="5:24" pos:end="5:46"><name pos:start="5:24" pos:end="5:46"><name pos:start="5:24" pos:end="5:34">input_files</name><index pos:start="5:35" pos:end="5:46">[<expr pos:start="5:36" pos:end="5:45"><name pos:start="5:36" pos:end="5:45">file_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">is</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">InputStream</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">ist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:17">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:6">is</name>  <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:20"><name pos:start="17:11" pos:end="17:15">ifile</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:20">ctx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:39"><name pos:start="19:11" pos:end="19:26">get_input_packet</name><argument_list pos:start="19:27" pos:end="19:39">(<argument pos:start="19:28" pos:end="19:32"><expr pos:start="19:28" pos:end="19:32"><name pos:start="19:28" pos:end="19:32">ifile</name></expr></argument>, <argument pos:start="19:35" pos:end="19:38"><expr pos:start="19:35" pos:end="19:38"><operator pos:start="19:35" pos:end="19:35">&amp;</operator><name pos:start="19:36" pos:end="19:38">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:31">(<expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:33" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:19">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:13">ifile</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">eagain</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="79:5"><if pos:start="31:5" pos:end="79:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="79:5">{<block_content pos:start="33:9" pos:end="77:31">

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="33:31">(<expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <name pos:start="33:20" pos:end="33:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="33:33" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:32">

            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><call pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:23">print_error</name><argument_list pos:start="35:24" pos:end="35:42">(<argument pos:start="35:25" pos:end="35:36"><expr pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:36"><name pos:start="35:25" pos:end="35:26">is</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:36">filename</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:41"><expr pos:start="35:39" pos:end="35:41"><name pos:start="35:39" pos:end="35:41">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="39:32"><if pos:start="37:13" pos:end="39:32">if <condition pos:start="37:16" pos:end="37:30">(<expr pos:start="37:17" pos:end="37:29"><name pos:start="37:17" pos:end="37:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:32"><block_content pos:start="39:17" pos:end="39:32">

                <expr_stmt pos:start="39:17" pos:end="39:32"><expr pos:start="39:17" pos:end="39:31"><call pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:28">exit_program</name><argument_list pos:start="39:29" pos:end="39:31">(<argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><literal type="number" pos:start="39:30" pos:end="39:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:13">ifile</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:26">eof_reached</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <literal type="number" pos:start="43:30" pos:end="43:30">1</literal></expr>;</expr_stmt>



        <for pos:start="47:9" pos:end="73:9">for <control pos:start="47:13" pos:end="47:47">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">i</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:42"><expr pos:start="47:21" pos:end="47:41"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <name pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:29">ifile</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:41">nb_streams</name></name></expr>;</condition> <incr pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:44">i</name><operator pos:start="47:45" pos:end="47:46">++</operator></expr></incr>)</control> <block pos:start="47:49" pos:end="73:9">{<block_content pos:start="49:13" pos:end="71:13">

            <expr_stmt pos:start="49:13" pos:end="49:54"><expr pos:start="49:13" pos:end="49:53"><name pos:start="49:13" pos:end="49:15">ist</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:53"><name pos:start="49:19" pos:end="49:31">input_streams</name><index pos:start="49:32" pos:end="49:53">[<expr pos:start="49:33" pos:end="49:52"><name pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:37">ifile</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:48">ist_index</name></name> <operator pos:start="49:50" pos:end="49:50">+</operator> <name pos:start="49:52" pos:end="49:52">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:41"><if pos:start="51:13" pos:end="53:41">if <condition pos:start="51:16" pos:end="51:37">(<expr pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:19">ist</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:36">decoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:41"><block_content pos:start="53:17" pos:end="53:41">

                <expr_stmt pos:start="53:17" pos:end="53:41"><expr pos:start="53:17" pos:end="53:40"><call pos:start="53:17" pos:end="53:40"><name pos:start="53:17" pos:end="53:29">output_packet</name><argument_list pos:start="53:30" pos:end="53:40">(<argument pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:33">ist</name></expr></argument>, <argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><name pos:start="53:36" pos:end="53:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="57:13" pos:end="57:74">/* mark all outputs that don't go through lavfi as finished */</comment>

            <for pos:start="59:13" pos:end="71:13">for <control pos:start="59:17" pos:end="59:51">(<init pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:18">j</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</init> <condition pos:start="59:25" pos:end="59:46"><expr pos:start="59:25" pos:end="59:45"><name pos:start="59:25" pos:end="59:25">j</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:45">nb_output_streams</name></expr>;</condition> <incr pos:start="59:48" pos:end="59:50"><expr pos:start="59:48" pos:end="59:50"><name pos:start="59:48" pos:end="59:48">j</name><operator pos:start="59:49" pos:end="59:50">++</operator></expr></incr>)</control> <block pos:start="59:53" pos:end="71:13">{<block_content pos:start="61:17" pos:end="69:45">

                <decl_stmt pos:start="61:17" pos:end="61:54"><decl pos:start="61:17" pos:end="61:53"><type pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:28">OutputStream</name> <modifier pos:start="61:30" pos:end="61:30">*</modifier></type><name pos:start="61:31" pos:end="61:33">ost</name> <init pos:start="61:35" pos:end="61:53">= <expr pos:start="61:37" pos:end="61:53"><name pos:start="61:37" pos:end="61:53"><name pos:start="61:37" pos:end="61:50">output_streams</name><index pos:start="61:51" pos:end="61:53">[<expr pos:start="61:52" pos:end="61:52"><name pos:start="61:52" pos:end="61:52">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="65:17" pos:end="69:45"><if pos:start="65:17" pos:end="69:45">if <condition pos:start="65:20" pos:end="67:82">(<expr pos:start="65:21" pos:end="67:81"><name pos:start="65:21" pos:end="65:37"><name pos:start="65:21" pos:end="65:23">ost</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:37">source_index</name></name> <operator pos:start="65:39" pos:end="65:40">==</operator> <name pos:start="65:42" pos:end="65:57"><name pos:start="65:42" pos:end="65:46">ifile</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:57">ist_index</name></name> <operator pos:start="65:59" pos:end="65:59">+</operator> <name pos:start="65:61" pos:end="65:61">i</name> <operator pos:start="65:63" pos:end="65:64">&amp;&amp;</operator>

                    <operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:37"><name pos:start="67:22" pos:end="67:24">ost</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:37">stream_copy</name></name> <operator pos:start="67:39" pos:end="67:40">||</operator> <name pos:start="67:42" pos:end="67:55"><name pos:start="67:42" pos:end="67:44">ost</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:49">enc</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:55">type</name></name> <operator pos:start="67:57" pos:end="67:58">==</operator> <name pos:start="67:60" pos:end="67:80">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="67:81" pos:end="67:81">)</operator></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:45"><block_content pos:start="69:21" pos:end="69:45">

                    <expr_stmt pos:start="69:21" pos:end="69:45"><expr pos:start="69:21" pos:end="69:44"><call pos:start="69:21" pos:end="69:44"><name pos:start="69:21" pos:end="69:39">close_output_stream</name><argument_list pos:start="69:40" pos:end="69:44">(<argument pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:43">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <return pos:start="77:9" pos:end="77:31">return <expr pos:start="77:16" pos:end="77:30"><call pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:22">AVERROR</name><argument_list pos:start="77:23" pos:end="77:30">(<argument pos:start="77:24" pos:end="77:29"><expr pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:19"><expr pos:start="83:5" pos:end="83:18"><call pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:16">reset_eagain</name><argument_list pos:start="83:17" pos:end="83:18">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:20">(<expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:19">do_pkt_dump</name></expr>)</condition> <block pos:start="87:22" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:56">

        <expr_stmt pos:start="89:9" pos:end="91:56"><expr pos:start="89:9" pos:end="91:55"><call pos:start="89:9" pos:end="91:55"><name pos:start="89:9" pos:end="89:24">av_pkt_dump_log2</name><argument_list pos:start="89:25" pos:end="91:55">(<argument pos:start="89:26" pos:end="89:29"><expr pos:start="89:26" pos:end="89:29"><name pos:start="89:26" pos:end="89:29">NULL</name></expr></argument>, <argument pos:start="89:32" pos:end="89:43"><expr pos:start="89:32" pos:end="89:43"><name pos:start="89:32" pos:end="89:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="89:46" pos:end="89:49"><expr pos:start="89:46" pos:end="89:49"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:49">pkt</name></expr></argument>, <argument pos:start="89:52" pos:end="89:62"><expr pos:start="89:52" pos:end="89:62"><name pos:start="89:52" pos:end="89:62">do_hex_dump</name></expr></argument>,

                         <argument pos:start="91:26" pos:end="91:54"><expr pos:start="91:26" pos:end="91:54"><name pos:start="91:26" pos:end="91:54"><name pos:start="91:26" pos:end="91:27">is</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:36">streams</name><index pos:start="91:37" pos:end="91:54">[<expr pos:start="91:38" pos:end="91:53"><name pos:start="91:38" pos:end="91:53"><name pos:start="91:38" pos:end="91:40">pkt</name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:53">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="95:5" pos:end="97:48">/* the following test is needed in case new streams appear

       dynamically in stream : we ignore them */</comment>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:46">(<expr pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:11">pkt</name><operator pos:start="99:12" pos:end="99:12">.</operator><name pos:start="99:13" pos:end="99:24">stream_index</name></name> <operator pos:start="99:26" pos:end="99:27">&gt;=</operator> <name pos:start="99:29" pos:end="99:45"><name pos:start="99:29" pos:end="99:33">ifile</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:45">nb_streams</name></name></expr>)</condition> <block pos:start="99:48" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:28">

        <expr_stmt pos:start="101:9" pos:end="101:44"><expr pos:start="101:9" pos:end="101:43"><call pos:start="101:9" pos:end="101:43"><name pos:start="101:9" pos:end="101:25">report_new_stream</name><argument_list pos:start="101:26" pos:end="101:43">(<argument pos:start="101:27" pos:end="101:36"><expr pos:start="101:27" pos:end="101:36"><name pos:start="101:27" pos:end="101:36">file_index</name></expr></argument>, <argument pos:start="101:39" pos:end="101:42"><expr pos:start="101:39" pos:end="101:42"><operator pos:start="101:39" pos:end="101:39">&amp;</operator><name pos:start="101:40" pos:end="101:42">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:28">goto <name pos:start="103:14" pos:end="103:27">discard_packet</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:61"><expr pos:start="109:5" pos:end="109:60"><name pos:start="109:5" pos:end="109:7">ist</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <name pos:start="109:11" pos:end="109:60"><name pos:start="109:11" pos:end="109:23">input_streams</name><index pos:start="109:24" pos:end="109:60">[<expr pos:start="109:25" pos:end="109:59"><name pos:start="109:25" pos:end="109:40"><name pos:start="109:25" pos:end="109:29">ifile</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:40">ist_index</name></name> <operator pos:start="109:42" pos:end="109:42">+</operator> <name pos:start="109:44" pos:end="109:59"><name pos:start="109:44" pos:end="109:46">pkt</name><operator pos:start="109:47" pos:end="109:47">.</operator><name pos:start="109:48" pos:end="109:59">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:28"><if pos:start="111:5" pos:end="113:28">if <condition pos:start="111:8" pos:end="111:21">(<expr pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:11">ist</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:20">discard</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:28"><block_content pos:start="113:9" pos:end="113:28">

        <goto pos:start="113:9" pos:end="113:28">goto <name pos:start="113:14" pos:end="113:27">discard_packet</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="141:5"><if pos:start="117:5" pos:end="141:5">if<condition pos:start="117:7" pos:end="117:127">(<expr pos:start="117:8" pos:end="117:126"><operator pos:start="117:8" pos:end="117:8">!</operator><name pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:11">ist</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:33">wrap_correction_done</name></name> <operator pos:start="117:35" pos:end="117:36">&amp;&amp;</operator> <name pos:start="117:38" pos:end="117:60"><name pos:start="117:38" pos:end="117:48">input_files</name><index pos:start="117:49" pos:end="117:60">[<expr pos:start="117:50" pos:end="117:59"><name pos:start="117:50" pos:end="117:59">file_index</name></expr>]</index></name><operator pos:start="117:61" pos:end="117:62">-&gt;</operator><name pos:start="117:63" pos:end="117:77"><name pos:start="117:63" pos:end="117:65">ctx</name><operator pos:start="117:66" pos:end="117:67">-&gt;</operator><name pos:start="117:68" pos:end="117:77">start_time</name></name> <operator pos:start="117:79" pos:end="117:80">!=</operator> <name pos:start="117:82" pos:end="117:95">AV_NOPTS_VALUE</name> <operator pos:start="117:97" pos:end="117:98">&amp;&amp;</operator> <name pos:start="117:100" pos:end="117:121"><name pos:start="117:100" pos:end="117:102">ist</name><operator pos:start="117:103" pos:end="117:104">-&gt;</operator><name pos:start="117:105" pos:end="117:106">st</name><operator pos:start="117:107" pos:end="117:108">-&gt;</operator><name pos:start="117:109" pos:end="117:121">pts_wrap_bits</name></name> <operator pos:start="117:123" pos:end="117:123">&lt;</operator> <literal type="number" pos:start="117:125" pos:end="117:126">64</literal></expr>)</condition><block pos:start="117:128" pos:end="141:5">{<block_content pos:start="119:9" pos:end="139:9">

        <decl_stmt pos:start="119:9" pos:end="119:116"><decl pos:start="119:9" pos:end="119:115"><type pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:16">uint64_t</name></type> <name pos:start="119:18" pos:end="119:22">stime</name> <init pos:start="119:24" pos:end="119:115">= <expr pos:start="119:26" pos:end="119:115"><call pos:start="119:26" pos:end="119:115"><name pos:start="119:26" pos:end="119:37">av_rescale_q</name><argument_list pos:start="119:38" pos:end="119:115">(<argument pos:start="119:39" pos:end="119:78"><expr pos:start="119:39" pos:end="119:78"><name pos:start="119:39" pos:end="119:61"><name pos:start="119:39" pos:end="119:49">input_files</name><index pos:start="119:50" pos:end="119:61">[<expr pos:start="119:51" pos:end="119:60"><name pos:start="119:51" pos:end="119:60">file_index</name></expr>]</index></name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:78"><name pos:start="119:64" pos:end="119:66">ctx</name><operator pos:start="119:67" pos:end="119:68">-&gt;</operator><name pos:start="119:69" pos:end="119:78">start_time</name></name></expr></argument>, <argument pos:start="119:81" pos:end="119:94"><expr pos:start="119:81" pos:end="119:94"><name pos:start="119:81" pos:end="119:94">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="119:97" pos:end="119:114"><expr pos:start="119:97" pos:end="119:114"><name pos:start="119:97" pos:end="119:114"><name pos:start="119:97" pos:end="119:99">ist</name><operator pos:start="119:100" pos:end="119:101">-&gt;</operator><name pos:start="119:102" pos:end="119:103">st</name><operator pos:start="119:104" pos:end="119:105">-&gt;</operator><name pos:start="119:106" pos:end="119:114">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:63"><decl pos:start="121:9" pos:end="121:62"><type pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:16">uint64_t</name></type> <name pos:start="121:18" pos:end="121:23">stime2</name><init pos:start="121:24" pos:end="121:62">= <expr pos:start="121:26" pos:end="121:62"><name pos:start="121:26" pos:end="121:30">stime</name> <operator pos:start="121:32" pos:end="121:32">+</operator> <operator pos:start="121:34" pos:end="121:34">(</operator><literal type="number" pos:start="121:35" pos:end="121:37">1LL</literal><operator pos:start="121:38" pos:end="121:39">&lt;&lt;</operator><name pos:start="121:40" pos:end="121:61"><name pos:start="121:40" pos:end="121:42">ist</name><operator pos:start="121:43" pos:end="121:44">-&gt;</operator><name pos:start="121:45" pos:end="121:46">st</name><operator pos:start="121:47" pos:end="121:48">-&gt;</operator><name pos:start="121:49" pos:end="121:61">pts_wrap_bits</name></name><operator pos:start="121:62" pos:end="121:62">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:38"><expr pos:start="123:9" pos:end="123:37"><name pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:11">ist</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:33">wrap_correction_done</name></name> <operator pos:start="123:35" pos:end="123:35">=</operator> <literal type="number" pos:start="123:37" pos:end="123:37">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if<condition pos:start="125:11" pos:end="125:94">(<expr pos:start="125:12" pos:end="125:93"><name pos:start="125:12" pos:end="125:18"><name pos:start="125:12" pos:end="125:14">pkt</name><operator pos:start="125:15" pos:end="125:15">.</operator><name pos:start="125:16" pos:end="125:18">dts</name></name> <operator pos:start="125:20" pos:end="125:21">!=</operator> <name pos:start="125:23" pos:end="125:36">AV_NOPTS_VALUE</name> <operator pos:start="125:38" pos:end="125:39">&amp;&amp;</operator> <name pos:start="125:41" pos:end="125:47"><name pos:start="125:41" pos:end="125:43">pkt</name><operator pos:start="125:44" pos:end="125:44">.</operator><name pos:start="125:45" pos:end="125:47">dts</name></name> <operator pos:start="125:49" pos:end="125:49">&gt;</operator> <name pos:start="125:51" pos:end="125:55">stime</name> <operator pos:start="125:57" pos:end="125:58">&amp;&amp;</operator> <name pos:start="125:60" pos:end="125:66"><name pos:start="125:60" pos:end="125:62">pkt</name><operator pos:start="125:63" pos:end="125:63">.</operator><name pos:start="125:64" pos:end="125:66">dts</name></name> <operator pos:start="125:68" pos:end="125:68">-</operator> <name pos:start="125:70" pos:end="125:74">stime</name> <operator pos:start="125:76" pos:end="125:76">&gt;</operator> <name pos:start="125:78" pos:end="125:83">stime2</name> <operator pos:start="125:85" pos:end="125:85">-</operator> <name pos:start="125:87" pos:end="125:93"><name pos:start="125:87" pos:end="125:89">pkt</name><operator pos:start="125:90" pos:end="125:90">.</operator><name pos:start="125:91" pos:end="125:93">dts</name></name></expr>)</condition> <block pos:start="125:96" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:42">

            <expr_stmt pos:start="127:13" pos:end="127:51"><expr pos:start="127:13" pos:end="127:50"><name pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:15">pkt</name><operator pos:start="127:16" pos:end="127:16">.</operator><name pos:start="127:17" pos:end="127:19">dts</name></name> <operator pos:start="127:21" pos:end="127:22">-=</operator> <literal type="number" pos:start="127:24" pos:end="127:26">1LL</literal><operator pos:start="127:27" pos:end="127:28">&lt;&lt;</operator><name pos:start="127:29" pos:end="127:50"><name pos:start="127:29" pos:end="127:31">ist</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:35">st</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:50">pts_wrap_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:42"><expr pos:start="129:13" pos:end="129:41"><name pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:15">ist</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:37">wrap_correction_done</name></name> <operator pos:start="129:39" pos:end="129:39">=</operator> <literal type="number" pos:start="129:41" pos:end="129:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="139:9"><if pos:start="133:9" pos:end="139:9">if<condition pos:start="133:11" pos:end="133:94">(<expr pos:start="133:12" pos:end="133:93"><name pos:start="133:12" pos:end="133:18"><name pos:start="133:12" pos:end="133:14">pkt</name><operator pos:start="133:15" pos:end="133:15">.</operator><name pos:start="133:16" pos:end="133:18">pts</name></name> <operator pos:start="133:20" pos:end="133:21">!=</operator> <name pos:start="133:23" pos:end="133:36">AV_NOPTS_VALUE</name> <operator pos:start="133:38" pos:end="133:39">&amp;&amp;</operator> <name pos:start="133:41" pos:end="133:47"><name pos:start="133:41" pos:end="133:43">pkt</name><operator pos:start="133:44" pos:end="133:44">.</operator><name pos:start="133:45" pos:end="133:47">pts</name></name> <operator pos:start="133:49" pos:end="133:49">&gt;</operator> <name pos:start="133:51" pos:end="133:55">stime</name> <operator pos:start="133:57" pos:end="133:58">&amp;&amp;</operator> <name pos:start="133:60" pos:end="133:66"><name pos:start="133:60" pos:end="133:62">pkt</name><operator pos:start="133:63" pos:end="133:63">.</operator><name pos:start="133:64" pos:end="133:66">pts</name></name> <operator pos:start="133:68" pos:end="133:68">-</operator> <name pos:start="133:70" pos:end="133:74">stime</name> <operator pos:start="133:76" pos:end="133:76">&gt;</operator> <name pos:start="133:78" pos:end="133:83">stime2</name> <operator pos:start="133:85" pos:end="133:85">-</operator> <name pos:start="133:87" pos:end="133:93"><name pos:start="133:87" pos:end="133:89">pkt</name><operator pos:start="133:90" pos:end="133:90">.</operator><name pos:start="133:91" pos:end="133:93">pts</name></name></expr>)</condition> <block pos:start="133:96" pos:end="139:9">{<block_content pos:start="135:13" pos:end="137:42">

            <expr_stmt pos:start="135:13" pos:end="135:51"><expr pos:start="135:13" pos:end="135:50"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">pkt</name><operator pos:start="135:16" pos:end="135:16">.</operator><name pos:start="135:17" pos:end="135:19">pts</name></name> <operator pos:start="135:21" pos:end="135:22">-=</operator> <literal type="number" pos:start="135:24" pos:end="135:26">1LL</literal><operator pos:start="135:27" pos:end="135:28">&lt;&lt;</operator><name pos:start="135:29" pos:end="135:50"><name pos:start="135:29" pos:end="135:31">ist</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:35">st</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:50">pts_wrap_bits</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:37"><name pos:start="137:13" pos:end="137:15">ist</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:37">wrap_correction_done</name></name> <operator pos:start="137:39" pos:end="137:39">=</operator> <literal type="number" pos:start="137:41" pos:end="137:41">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="145:5" pos:end="147:86"><if pos:start="145:5" pos:end="147:86">if <condition pos:start="145:8" pos:end="145:34">(<expr pos:start="145:9" pos:end="145:33"><name pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:11">pkt</name><operator pos:start="145:12" pos:end="145:12">.</operator><name pos:start="145:13" pos:end="145:15">dts</name></name> <operator pos:start="145:17" pos:end="145:18">!=</operator> <name pos:start="145:20" pos:end="145:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:86"><block_content pos:start="147:9" pos:end="147:86">

        <expr_stmt pos:start="147:9" pos:end="147:86"><expr pos:start="147:9" pos:end="147:85"><name pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:11">pkt</name><operator pos:start="147:12" pos:end="147:12">.</operator><name pos:start="147:13" pos:end="147:15">dts</name></name> <operator pos:start="147:17" pos:end="147:18">+=</operator> <call pos:start="147:20" pos:end="147:85"><name pos:start="147:20" pos:end="147:31">av_rescale_q</name><argument_list pos:start="147:32" pos:end="147:85">(<argument pos:start="147:33" pos:end="147:48"><expr pos:start="147:33" pos:end="147:48"><name pos:start="147:33" pos:end="147:48"><name pos:start="147:33" pos:end="147:37">ifile</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:48">ts_offset</name></name></expr></argument>, <argument pos:start="147:51" pos:end="147:64"><expr pos:start="147:51" pos:end="147:64"><name pos:start="147:51" pos:end="147:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="147:67" pos:end="147:84"><expr pos:start="147:67" pos:end="147:84"><name pos:start="147:67" pos:end="147:84"><name pos:start="147:67" pos:end="147:69">ist</name><operator pos:start="147:70" pos:end="147:71">-&gt;</operator><name pos:start="147:72" pos:end="147:73">st</name><operator pos:start="147:74" pos:end="147:75">-&gt;</operator><name pos:start="147:76" pos:end="147:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="151:86"><if pos:start="149:5" pos:end="151:86">if <condition pos:start="149:8" pos:end="149:34">(<expr pos:start="149:9" pos:end="149:33"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:11">pkt</name><operator pos:start="149:12" pos:end="149:12">.</operator><name pos:start="149:13" pos:end="149:15">pts</name></name> <operator pos:start="149:17" pos:end="149:18">!=</operator> <name pos:start="149:20" pos:end="149:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="151:9" pos:end="151:86"><block_content pos:start="151:9" pos:end="151:86">

        <expr_stmt pos:start="151:9" pos:end="151:86"><expr pos:start="151:9" pos:end="151:85"><name pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:11">pkt</name><operator pos:start="151:12" pos:end="151:12">.</operator><name pos:start="151:13" pos:end="151:15">pts</name></name> <operator pos:start="151:17" pos:end="151:18">+=</operator> <call pos:start="151:20" pos:end="151:85"><name pos:start="151:20" pos:end="151:31">av_rescale_q</name><argument_list pos:start="151:32" pos:end="151:85">(<argument pos:start="151:33" pos:end="151:48"><expr pos:start="151:33" pos:end="151:48"><name pos:start="151:33" pos:end="151:48"><name pos:start="151:33" pos:end="151:37">ifile</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:48">ts_offset</name></name></expr></argument>, <argument pos:start="151:51" pos:end="151:64"><expr pos:start="151:51" pos:end="151:64"><name pos:start="151:51" pos:end="151:64">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="151:67" pos:end="151:84"><expr pos:start="151:67" pos:end="151:84"><name pos:start="151:67" pos:end="151:84"><name pos:start="151:67" pos:end="151:69">ist</name><operator pos:start="151:70" pos:end="151:71">-&gt;</operator><name pos:start="151:72" pos:end="151:73">st</name><operator pos:start="151:74" pos:end="151:75">-&gt;</operator><name pos:start="151:76" pos:end="151:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="157:33"><if pos:start="155:5" pos:end="157:33">if <condition pos:start="155:8" pos:end="155:34">(<expr pos:start="155:9" pos:end="155:33"><name pos:start="155:9" pos:end="155:15"><name pos:start="155:9" pos:end="155:11">pkt</name><operator pos:start="155:12" pos:end="155:12">.</operator><name pos:start="155:13" pos:end="155:15">pts</name></name> <operator pos:start="155:17" pos:end="155:18">!=</operator> <name pos:start="155:20" pos:end="155:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:33"><block_content pos:start="157:9" pos:end="157:33">

        <expr_stmt pos:start="157:9" pos:end="157:33"><expr pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:15"><name pos:start="157:9" pos:end="157:11">pkt</name><operator pos:start="157:12" pos:end="157:12">.</operator><name pos:start="157:13" pos:end="157:15">pts</name></name> <operator pos:start="157:17" pos:end="157:18">*=</operator> <name pos:start="157:20" pos:end="157:32"><name pos:start="157:20" pos:end="157:22">ist</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:32">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="159:5" pos:end="161:33"><if pos:start="159:5" pos:end="161:33">if <condition pos:start="159:8" pos:end="159:34">(<expr pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:11">pkt</name><operator pos:start="159:12" pos:end="159:12">.</operator><name pos:start="159:13" pos:end="159:15">dts</name></name> <operator pos:start="159:17" pos:end="159:18">!=</operator> <name pos:start="159:20" pos:end="159:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:33"><block_content pos:start="161:9" pos:end="161:33">

        <expr_stmt pos:start="161:9" pos:end="161:33"><expr pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:11">pkt</name><operator pos:start="161:12" pos:end="161:12">.</operator><name pos:start="161:13" pos:end="161:15">dts</name></name> <operator pos:start="161:17" pos:end="161:18">*=</operator> <name pos:start="161:20" pos:end="161:32"><name pos:start="161:20" pos:end="161:22">ist</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:32">ts_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="183:5"><if pos:start="165:5" pos:end="183:5">if <condition pos:start="165:8" pos:end="165:17">(<expr pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:16">debug_ts</name></expr>)</condition> <block pos:start="165:19" pos:end="183:5">{<block_content pos:start="167:9" pos:end="181:57">

        <expr_stmt pos:start="167:9" pos:end="181:57"><expr pos:start="167:9" pos:end="181:56"><call pos:start="167:9" pos:end="181:56"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="181:56">(<argument pos:start="167:16" pos:end="167:19"><expr pos:start="167:16" pos:end="167:19"><name pos:start="167:16" pos:end="167:19">NULL</name></expr></argument>, <argument pos:start="167:22" pos:end="167:32"><expr pos:start="167:22" pos:end="167:32"><name pos:start="167:22" pos:end="167:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="167:35" pos:end="169:146"><expr pos:start="167:35" pos:end="169:146"><literal type="string" pos:start="167:35" pos:end="167:68">"demuxer -&gt; ist_index:%d type:%s "</literal>

                <literal type="string" pos:start="169:17" pos:end="169:136">"next_dts:%s next_dts_time:%s next_pts:%s next_pts_time:%s  pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s off:%"</literal><name pos:start="169:137" pos:end="169:142">PRId64</name><literal type="string" pos:start="169:143" pos:end="169:146">"\n"</literal></expr></argument>,

                <argument pos:start="171:17" pos:end="171:51"><expr pos:start="171:17" pos:end="171:51"><name pos:start="171:17" pos:end="171:32"><name pos:start="171:17" pos:end="171:21">ifile</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:32">ist_index</name></name> <operator pos:start="171:34" pos:end="171:34">+</operator> <name pos:start="171:36" pos:end="171:51"><name pos:start="171:36" pos:end="171:38">pkt</name><operator pos:start="171:39" pos:end="171:39">.</operator><name pos:start="171:40" pos:end="171:51">stream_index</name></name></expr></argument>, <argument pos:start="171:54" pos:end="171:105"><expr pos:start="171:54" pos:end="171:105"><call pos:start="171:54" pos:end="171:105"><name pos:start="171:54" pos:end="171:77">av_get_media_type_string</name><argument_list pos:start="171:78" pos:end="171:105">(<argument pos:start="171:79" pos:end="171:104"><expr pos:start="171:79" pos:end="171:104"><name pos:start="171:79" pos:end="171:104"><name pos:start="171:79" pos:end="171:81">ist</name><operator pos:start="171:82" pos:end="171:83">-&gt;</operator><name pos:start="171:84" pos:end="171:85">st</name><operator pos:start="171:86" pos:end="171:87">-&gt;</operator><name pos:start="171:88" pos:end="171:92">codec</name><operator pos:start="171:93" pos:end="171:94">-&gt;</operator><name pos:start="171:95" pos:end="171:104">codec_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="173:17" pos:end="173:40"><expr pos:start="173:17" pos:end="173:40"><call pos:start="173:17" pos:end="173:40"><name pos:start="173:17" pos:end="173:25">av_ts2str</name><argument_list pos:start="173:26" pos:end="173:40">(<argument pos:start="173:27" pos:end="173:39"><expr pos:start="173:27" pos:end="173:39"><name pos:start="173:27" pos:end="173:39"><name pos:start="173:27" pos:end="173:29">ist</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:39">next_dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="173:43" pos:end="173:87"><expr pos:start="173:43" pos:end="173:87"><call pos:start="173:43" pos:end="173:87"><name pos:start="173:43" pos:end="173:55">av_ts2timestr</name><argument_list pos:start="173:56" pos:end="173:87">(<argument pos:start="173:57" pos:end="173:69"><expr pos:start="173:57" pos:end="173:69"><name pos:start="173:57" pos:end="173:69"><name pos:start="173:57" pos:end="173:59">ist</name><operator pos:start="173:60" pos:end="173:61">-&gt;</operator><name pos:start="173:62" pos:end="173:69">next_dts</name></name></expr></argument>, <argument pos:start="173:72" pos:end="173:86"><expr pos:start="173:72" pos:end="173:86"><operator pos:start="173:72" pos:end="173:72">&amp;</operator><name pos:start="173:73" pos:end="173:86">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="175:17" pos:end="175:40"><expr pos:start="175:17" pos:end="175:40"><call pos:start="175:17" pos:end="175:40"><name pos:start="175:17" pos:end="175:25">av_ts2str</name><argument_list pos:start="175:26" pos:end="175:40">(<argument pos:start="175:27" pos:end="175:39"><expr pos:start="175:27" pos:end="175:39"><name pos:start="175:27" pos:end="175:39"><name pos:start="175:27" pos:end="175:29">ist</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:39">next_pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="175:43" pos:end="175:87"><expr pos:start="175:43" pos:end="175:87"><call pos:start="175:43" pos:end="175:87"><name pos:start="175:43" pos:end="175:55">av_ts2timestr</name><argument_list pos:start="175:56" pos:end="175:87">(<argument pos:start="175:57" pos:end="175:69"><expr pos:start="175:57" pos:end="175:69"><name pos:start="175:57" pos:end="175:69"><name pos:start="175:57" pos:end="175:59">ist</name><operator pos:start="175:60" pos:end="175:61">-&gt;</operator><name pos:start="175:62" pos:end="175:69">next_pts</name></name></expr></argument>, <argument pos:start="175:72" pos:end="175:86"><expr pos:start="175:72" pos:end="175:86"><operator pos:start="175:72" pos:end="175:72">&amp;</operator><name pos:start="175:73" pos:end="175:86">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="177:17" pos:end="177:34"><expr pos:start="177:17" pos:end="177:34"><call pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:25">av_ts2str</name><argument_list pos:start="177:26" pos:end="177:34">(<argument pos:start="177:27" pos:end="177:33"><expr pos:start="177:27" pos:end="177:33"><name pos:start="177:27" pos:end="177:33"><name pos:start="177:27" pos:end="177:29">pkt</name><operator pos:start="177:30" pos:end="177:30">.</operator><name pos:start="177:31" pos:end="177:33">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:37" pos:end="177:79"><expr pos:start="177:37" pos:end="177:79"><call pos:start="177:37" pos:end="177:79"><name pos:start="177:37" pos:end="177:49">av_ts2timestr</name><argument_list pos:start="177:50" pos:end="177:79">(<argument pos:start="177:51" pos:end="177:57"><expr pos:start="177:51" pos:end="177:57"><name pos:start="177:51" pos:end="177:57"><name pos:start="177:51" pos:end="177:53">pkt</name><operator pos:start="177:54" pos:end="177:54">.</operator><name pos:start="177:55" pos:end="177:57">pts</name></name></expr></argument>, <argument pos:start="177:60" pos:end="177:78"><expr pos:start="177:60" pos:end="177:78"><operator pos:start="177:60" pos:end="177:60">&amp;</operator><name pos:start="177:61" pos:end="177:78"><name pos:start="177:61" pos:end="177:63">ist</name><operator pos:start="177:64" pos:end="177:65">-&gt;</operator><name pos:start="177:66" pos:end="177:67">st</name><operator pos:start="177:68" pos:end="177:69">-&gt;</operator><name pos:start="177:70" pos:end="177:78">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="179:17" pos:end="179:34"><expr pos:start="179:17" pos:end="179:34"><call pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:25">av_ts2str</name><argument_list pos:start="179:26" pos:end="179:34">(<argument pos:start="179:27" pos:end="179:33"><expr pos:start="179:27" pos:end="179:33"><name pos:start="179:27" pos:end="179:33"><name pos:start="179:27" pos:end="179:29">pkt</name><operator pos:start="179:30" pos:end="179:30">.</operator><name pos:start="179:31" pos:end="179:33">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:37" pos:end="179:79"><expr pos:start="179:37" pos:end="179:79"><call pos:start="179:37" pos:end="179:79"><name pos:start="179:37" pos:end="179:49">av_ts2timestr</name><argument_list pos:start="179:50" pos:end="179:79">(<argument pos:start="179:51" pos:end="179:57"><expr pos:start="179:51" pos:end="179:57"><name pos:start="179:51" pos:end="179:57"><name pos:start="179:51" pos:end="179:53">pkt</name><operator pos:start="179:54" pos:end="179:54">.</operator><name pos:start="179:55" pos:end="179:57">dts</name></name></expr></argument>, <argument pos:start="179:60" pos:end="179:78"><expr pos:start="179:60" pos:end="179:78"><operator pos:start="179:60" pos:end="179:60">&amp;</operator><name pos:start="179:61" pos:end="179:78"><name pos:start="179:61" pos:end="179:63">ist</name><operator pos:start="179:64" pos:end="179:65">-&gt;</operator><name pos:start="179:66" pos:end="179:67">st</name><operator pos:start="179:68" pos:end="179:69">-&gt;</operator><name pos:start="179:70" pos:end="179:78">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="181:17" pos:end="181:55"><expr pos:start="181:17" pos:end="181:55"><name pos:start="181:17" pos:end="181:44"><name pos:start="181:17" pos:end="181:27">input_files</name><index pos:start="181:28" pos:end="181:44">[<expr pos:start="181:29" pos:end="181:43"><name pos:start="181:29" pos:end="181:43"><name pos:start="181:29" pos:end="181:31">ist</name><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:43">file_index</name></name></expr>]</index></name><operator pos:start="181:45" pos:end="181:46">-&gt;</operator><name pos:start="181:47" pos:end="181:55">ts_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="257:5"><if pos:start="187:5" pos:end="257:5">if <condition pos:start="187:8" pos:end="189:17">(<expr pos:start="187:9" pos:end="189:16"><name pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:11">pkt</name><operator pos:start="187:12" pos:end="187:12">.</operator><name pos:start="187:13" pos:end="187:15">dts</name></name> <operator pos:start="187:17" pos:end="187:18">!=</operator> <name pos:start="187:20" pos:end="187:33">AV_NOPTS_VALUE</name> <operator pos:start="187:35" pos:end="187:36">&amp;&amp;</operator> <name pos:start="187:38" pos:end="187:50"><name pos:start="187:38" pos:end="187:40">ist</name><operator pos:start="187:41" pos:end="187:42">-&gt;</operator><name pos:start="187:43" pos:end="187:50">next_dts</name></name> <operator pos:start="187:52" pos:end="187:53">!=</operator> <name pos:start="187:55" pos:end="187:68">AV_NOPTS_VALUE</name> <operator pos:start="187:70" pos:end="187:71">&amp;&amp;</operator>

        <operator pos:start="189:9" pos:end="189:9">!</operator><name pos:start="189:10" pos:end="189:16">copy_ts</name></expr>)</condition> <block pos:start="189:19" pos:end="257:5">{<block_content pos:start="191:9" pos:end="255:9">

        <decl_stmt pos:start="191:9" pos:end="191:84"><decl pos:start="191:9" pos:end="191:83"><type pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:15">int64_t</name></type> <name pos:start="191:17" pos:end="191:23">pkt_dts</name> <init pos:start="191:25" pos:end="191:83">= <expr pos:start="191:27" pos:end="191:83"><call pos:start="191:27" pos:end="191:83"><name pos:start="191:27" pos:end="191:38">av_rescale_q</name><argument_list pos:start="191:39" pos:end="191:83">(<argument pos:start="191:40" pos:end="191:46"><expr pos:start="191:40" pos:end="191:46"><name pos:start="191:40" pos:end="191:46"><name pos:start="191:40" pos:end="191:42">pkt</name><operator pos:start="191:43" pos:end="191:43">.</operator><name pos:start="191:44" pos:end="191:46">dts</name></name></expr></argument>, <argument pos:start="191:49" pos:end="191:66"><expr pos:start="191:49" pos:end="191:66"><name pos:start="191:49" pos:end="191:66"><name pos:start="191:49" pos:end="191:51">ist</name><operator pos:start="191:52" pos:end="191:53">-&gt;</operator><name pos:start="191:54" pos:end="191:55">st</name><operator pos:start="191:56" pos:end="191:57">-&gt;</operator><name pos:start="191:58" pos:end="191:66">time_base</name></name></expr></argument>, <argument pos:start="191:69" pos:end="191:82"><expr pos:start="191:69" pos:end="191:82"><name pos:start="191:69" pos:end="191:82">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:50"><decl pos:start="193:9" pos:end="193:49"><type pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:15">int64_t</name></type> <name pos:start="193:17" pos:end="193:21">delta</name>   <init pos:start="193:25" pos:end="193:49">= <expr pos:start="193:27" pos:end="193:49"><name pos:start="193:27" pos:end="193:33">pkt_dts</name> <operator pos:start="193:35" pos:end="193:35">-</operator> <name pos:start="193:37" pos:end="193:49"><name pos:start="193:37" pos:end="193:39">ist</name><operator pos:start="193:40" pos:end="193:41">-&gt;</operator><name pos:start="193:42" pos:end="193:49">next_dts</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="195:9" pos:end="255:9"><if pos:start="195:9" pos:end="221:9">if <condition pos:start="195:12" pos:end="195:50">(<expr pos:start="195:13" pos:end="195:49"><name pos:start="195:13" pos:end="195:30"><name pos:start="195:13" pos:end="195:14">is</name><operator pos:start="195:15" pos:end="195:16">-&gt;</operator><name pos:start="195:17" pos:end="195:23">iformat</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:30">flags</name></name> <operator pos:start="195:32" pos:end="195:32">&amp;</operator> <name pos:start="195:34" pos:end="195:49">AVFMT_TS_DISCONT</name></expr>)</condition> <block pos:start="195:52" pos:end="221:9">{<block_content pos:start="197:9" pos:end="219:9">

        <if_stmt pos:start="197:9" pos:end="219:9"><if pos:start="197:9" pos:end="219:9">if<condition pos:start="197:11" pos:end="203:31">(<expr pos:start="197:12" pos:end="203:30"><name pos:start="197:12" pos:end="197:16">delta</name> <operator pos:start="197:18" pos:end="197:18">&lt;</operator> <operator pos:start="197:20" pos:end="197:20">-</operator><literal type="number" pos:start="197:21" pos:end="197:23">1LL</literal><operator pos:start="197:24" pos:end="197:24">*</operator><name pos:start="197:25" pos:end="197:43">dts_delta_threshold</name><operator pos:start="197:44" pos:end="197:44">*</operator><name pos:start="197:45" pos:end="197:56">AV_TIME_BASE</name> <operator pos:start="197:58" pos:end="197:59">||</operator>

            <operator pos:start="199:13" pos:end="199:13">(</operator><name pos:start="199:14" pos:end="199:18">delta</name> <operator pos:start="199:20" pos:end="199:20">&gt;</operator> <literal type="number" pos:start="199:22" pos:end="199:24">1LL</literal><operator pos:start="199:25" pos:end="199:25">*</operator><name pos:start="199:26" pos:end="199:44">dts_delta_threshold</name><operator pos:start="199:45" pos:end="199:45">*</operator><name pos:start="199:46" pos:end="199:57">AV_TIME_BASE</name> <operator pos:start="199:59" pos:end="199:60">&amp;&amp;</operator>

                <name pos:start="201:17" pos:end="201:42"><name pos:start="201:17" pos:end="201:19">ist</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:23">st</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:30">codec</name><operator pos:start="201:31" pos:end="201:32">-&gt;</operator><name pos:start="201:33" pos:end="201:42">codec_type</name></name> <operator pos:start="201:44" pos:end="201:45">!=</operator> <name pos:start="201:47" pos:end="201:67">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="201:68" pos:end="201:68">)</operator> <operator pos:start="201:70" pos:end="201:71">||</operator>

            <name pos:start="203:13" pos:end="203:19">pkt_dts</name><operator pos:start="203:20" pos:end="203:20">+</operator><literal type="number" pos:start="203:21" pos:end="203:21">1</literal><operator pos:start="203:22" pos:end="203:22">&lt;</operator><name pos:start="203:23" pos:end="203:30"><name pos:start="203:23" pos:end="203:25">ist</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:30">pts</name></name></expr>)</condition><block pos:start="203:32" pos:end="219:9">{<block_content pos:start="205:13" pos:end="217:83">

            <expr_stmt pos:start="205:13" pos:end="205:38"><expr pos:start="205:13" pos:end="205:37"><name pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:17">ifile</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:28">ts_offset</name></name> <operator pos:start="205:30" pos:end="205:31">-=</operator> <name pos:start="205:33" pos:end="205:37">delta</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="211:44"><expr pos:start="207:13" pos:end="211:43"><call pos:start="207:13" pos:end="211:43"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="211:43">(<argument pos:start="207:20" pos:end="207:23"><expr pos:start="207:20" pos:end="207:23"><name pos:start="207:20" pos:end="207:23">NULL</name></expr></argument>, <argument pos:start="207:26" pos:end="207:37"><expr pos:start="207:26" pos:end="207:37"><name pos:start="207:26" pos:end="207:37">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="209:20" pos:end="209:79"><expr pos:start="209:20" pos:end="209:79"><literal type="string" pos:start="209:20" pos:end="209:46">"timestamp discontinuity %"</literal><name pos:start="209:47" pos:end="209:52">PRId64</name><literal type="string" pos:start="209:53" pos:end="209:69">", new offset= %"</literal><name pos:start="209:70" pos:end="209:75">PRId64</name><literal type="string" pos:start="209:76" pos:end="209:79">"\n"</literal></expr></argument>,

                   <argument pos:start="211:20" pos:end="211:24"><expr pos:start="211:20" pos:end="211:24"><name pos:start="211:20" pos:end="211:24">delta</name></expr></argument>, <argument pos:start="211:27" pos:end="211:42"><expr pos:start="211:27" pos:end="211:42"><name pos:start="211:27" pos:end="211:42"><name pos:start="211:27" pos:end="211:31">ifile</name><operator pos:start="211:32" pos:end="211:33">-&gt;</operator><name pos:start="211:34" pos:end="211:42">ts_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:79"><expr pos:start="213:13" pos:end="213:78"><name pos:start="213:13" pos:end="213:19"><name pos:start="213:13" pos:end="213:15">pkt</name><operator pos:start="213:16" pos:end="213:16">.</operator><name pos:start="213:17" pos:end="213:19">dts</name></name> <operator pos:start="213:21" pos:end="213:22">-=</operator> <call pos:start="213:24" pos:end="213:78"><name pos:start="213:24" pos:end="213:35">av_rescale_q</name><argument_list pos:start="213:36" pos:end="213:78">(<argument pos:start="213:37" pos:end="213:41"><expr pos:start="213:37" pos:end="213:41"><name pos:start="213:37" pos:end="213:41">delta</name></expr></argument>, <argument pos:start="213:44" pos:end="213:57"><expr pos:start="213:44" pos:end="213:57"><name pos:start="213:44" pos:end="213:57">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="213:60" pos:end="213:77"><expr pos:start="213:60" pos:end="213:77"><name pos:start="213:60" pos:end="213:77"><name pos:start="213:60" pos:end="213:62">ist</name><operator pos:start="213:63" pos:end="213:64">-&gt;</operator><name pos:start="213:65" pos:end="213:66">st</name><operator pos:start="213:67" pos:end="213:68">-&gt;</operator><name pos:start="213:69" pos:end="213:77">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="215:13" pos:end="217:83"><if pos:start="215:13" pos:end="217:83">if <condition pos:start="215:16" pos:end="215:42">(<expr pos:start="215:17" pos:end="215:41"><name pos:start="215:17" pos:end="215:23"><name pos:start="215:17" pos:end="215:19">pkt</name><operator pos:start="215:20" pos:end="215:20">.</operator><name pos:start="215:21" pos:end="215:23">pts</name></name> <operator pos:start="215:25" pos:end="215:26">!=</operator> <name pos:start="215:28" pos:end="215:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="217:17" pos:end="217:83"><block_content pos:start="217:17" pos:end="217:83">

                <expr_stmt pos:start="217:17" pos:end="217:83"><expr pos:start="217:17" pos:end="217:82"><name pos:start="217:17" pos:end="217:23"><name pos:start="217:17" pos:end="217:19">pkt</name><operator pos:start="217:20" pos:end="217:20">.</operator><name pos:start="217:21" pos:end="217:23">pts</name></name> <operator pos:start="217:25" pos:end="217:26">-=</operator> <call pos:start="217:28" pos:end="217:82"><name pos:start="217:28" pos:end="217:39">av_rescale_q</name><argument_list pos:start="217:40" pos:end="217:82">(<argument pos:start="217:41" pos:end="217:45"><expr pos:start="217:41" pos:end="217:45"><name pos:start="217:41" pos:end="217:45">delta</name></expr></argument>, <argument pos:start="217:48" pos:end="217:61"><expr pos:start="217:48" pos:end="217:61"><name pos:start="217:48" pos:end="217:61">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="217:64" pos:end="217:81"><expr pos:start="217:64" pos:end="217:81"><name pos:start="217:64" pos:end="217:81"><name pos:start="217:64" pos:end="217:66">ist</name><operator pos:start="217:67" pos:end="217:68">-&gt;</operator><name pos:start="217:69" pos:end="217:70">st</name><operator pos:start="217:71" pos:end="217:72">-&gt;</operator><name pos:start="217:73" pos:end="217:81">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="221:11" pos:end="255:9">else <block pos:start="221:16" pos:end="255:9">{<block_content pos:start="223:13" pos:end="253:13">

            <if_stmt pos:start="223:13" pos:end="233:13"><if pos:start="223:13" pos:end="233:13">if <condition pos:start="223:16" pos:end="227:16">( <expr pos:start="223:18" pos:end="225:117"><name pos:start="223:18" pos:end="223:22">delta</name> <operator pos:start="223:24" pos:end="223:24">&lt;</operator> <operator pos:start="223:26" pos:end="223:26">-</operator><literal type="number" pos:start="223:27" pos:end="223:29">1LL</literal><operator pos:start="223:30" pos:end="223:30">*</operator><name pos:start="223:31" pos:end="223:49">dts_error_threshold</name><operator pos:start="223:50" pos:end="223:50">*</operator><name pos:start="223:51" pos:end="223:62">AV_TIME_BASE</name> <operator pos:start="223:64" pos:end="223:65">||</operator>

                <operator pos:start="225:17" pos:end="225:17">(</operator><name pos:start="225:18" pos:end="225:22">delta</name> <operator pos:start="225:24" pos:end="225:24">&gt;</operator> <literal type="number" pos:start="225:26" pos:end="225:28">1LL</literal><operator pos:start="225:29" pos:end="225:29">*</operator><name pos:start="225:30" pos:end="225:48">dts_error_threshold</name><operator pos:start="225:49" pos:end="225:49">*</operator><name pos:start="225:50" pos:end="225:61">AV_TIME_BASE</name> <operator pos:start="225:63" pos:end="225:64">&amp;&amp;</operator> <name pos:start="225:66" pos:end="225:91"><name pos:start="225:66" pos:end="225:68">ist</name><operator pos:start="225:69" pos:end="225:70">-&gt;</operator><name pos:start="225:71" pos:end="225:72">st</name><operator pos:start="225:73" pos:end="225:74">-&gt;</operator><name pos:start="225:75" pos:end="225:79">codec</name><operator pos:start="225:80" pos:end="225:81">-&gt;</operator><name pos:start="225:82" pos:end="225:91">codec_type</name></name> <operator pos:start="225:93" pos:end="225:94">!=</operator> <name pos:start="225:96" pos:end="225:116">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="225:117" pos:end="225:117">)</operator></expr>

               )</condition> <block pos:start="227:18" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:41">

                <expr_stmt pos:start="229:17" pos:end="229:145"><expr pos:start="229:17" pos:end="229:144"><call pos:start="229:17" pos:end="229:144"><name pos:start="229:17" pos:end="229:22">av_log</name><argument_list pos:start="229:23" pos:end="229:144">(<argument pos:start="229:24" pos:end="229:27"><expr pos:start="229:24" pos:end="229:27"><name pos:start="229:24" pos:end="229:27">NULL</name></expr></argument>, <argument pos:start="229:30" pos:end="229:43"><expr pos:start="229:30" pos:end="229:43"><name pos:start="229:30" pos:end="229:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="229:46" pos:end="229:101"><expr pos:start="229:46" pos:end="229:101"><literal type="string" pos:start="229:46" pos:end="229:52">"DTS %"</literal><name pos:start="229:53" pos:end="229:58">PRId64</name><literal type="string" pos:start="229:59" pos:end="229:68">", next:%"</literal><name pos:start="229:69" pos:end="229:74">PRId64</name><literal type="string" pos:start="229:75" pos:end="229:101">" st:%d invalid dropping\n"</literal></expr></argument>, <argument pos:start="229:104" pos:end="229:110"><expr pos:start="229:104" pos:end="229:110"><name pos:start="229:104" pos:end="229:110"><name pos:start="229:104" pos:end="229:106">pkt</name><operator pos:start="229:107" pos:end="229:107">.</operator><name pos:start="229:108" pos:end="229:110">dts</name></name></expr></argument>, <argument pos:start="229:113" pos:end="229:125"><expr pos:start="229:113" pos:end="229:125"><name pos:start="229:113" pos:end="229:125"><name pos:start="229:113" pos:end="229:115">ist</name><operator pos:start="229:116" pos:end="229:117">-&gt;</operator><name pos:start="229:118" pos:end="229:125">next_dts</name></name></expr></argument>, <argument pos:start="229:128" pos:end="229:143"><expr pos:start="229:128" pos:end="229:143"><name pos:start="229:128" pos:end="229:143"><name pos:start="229:128" pos:end="229:130">pkt</name><operator pos:start="229:131" pos:end="229:131">.</operator><name pos:start="229:132" pos:end="229:143">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:41"><expr pos:start="231:17" pos:end="231:40"><name pos:start="231:17" pos:end="231:23"><name pos:start="231:17" pos:end="231:19">pkt</name><operator pos:start="231:20" pos:end="231:20">.</operator><name pos:start="231:21" pos:end="231:23">dts</name></name> <operator pos:start="231:25" pos:end="231:25">=</operator> <name pos:start="231:27" pos:end="231:40">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="235:13" pos:end="253:13"><if pos:start="235:13" pos:end="253:13">if <condition pos:start="235:16" pos:end="235:42">(<expr pos:start="235:17" pos:end="235:41"><name pos:start="235:17" pos:end="235:23"><name pos:start="235:17" pos:end="235:19">pkt</name><operator pos:start="235:20" pos:end="235:20">.</operator><name pos:start="235:21" pos:end="235:23">pts</name></name> <operator pos:start="235:25" pos:end="235:26">!=</operator> <name pos:start="235:28" pos:end="235:41">AV_NOPTS_VALUE</name></expr>)</condition><block pos:start="235:43" pos:end="253:13">{<block_content pos:start="237:17" pos:end="251:17">

                <decl_stmt pos:start="237:17" pos:end="237:92"><decl pos:start="237:17" pos:end="237:91"><type pos:start="237:17" pos:end="237:23"><name pos:start="237:17" pos:end="237:23">int64_t</name></type> <name pos:start="237:25" pos:end="237:31">pkt_pts</name> <init pos:start="237:33" pos:end="237:91">= <expr pos:start="237:35" pos:end="237:91"><call pos:start="237:35" pos:end="237:91"><name pos:start="237:35" pos:end="237:46">av_rescale_q</name><argument_list pos:start="237:47" pos:end="237:91">(<argument pos:start="237:48" pos:end="237:54"><expr pos:start="237:48" pos:end="237:54"><name pos:start="237:48" pos:end="237:54"><name pos:start="237:48" pos:end="237:50">pkt</name><operator pos:start="237:51" pos:end="237:51">.</operator><name pos:start="237:52" pos:end="237:54">pts</name></name></expr></argument>, <argument pos:start="237:57" pos:end="237:74"><expr pos:start="237:57" pos:end="237:74"><name pos:start="237:57" pos:end="237:74"><name pos:start="237:57" pos:end="237:59">ist</name><operator pos:start="237:60" pos:end="237:61">-&gt;</operator><name pos:start="237:62" pos:end="237:63">st</name><operator pos:start="237:64" pos:end="237:65">-&gt;</operator><name pos:start="237:66" pos:end="237:74">time_base</name></name></expr></argument>, <argument pos:start="237:77" pos:end="237:90"><expr pos:start="237:77" pos:end="237:90"><name pos:start="237:77" pos:end="237:90">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:50"><expr pos:start="239:17" pos:end="239:49"><name pos:start="239:17" pos:end="239:21">delta</name>   <operator pos:start="239:25" pos:end="239:25">=</operator> <name pos:start="239:27" pos:end="239:33">pkt_pts</name> <operator pos:start="239:35" pos:end="239:35">-</operator> <name pos:start="239:37" pos:end="239:49"><name pos:start="239:37" pos:end="239:39">ist</name><operator pos:start="239:40" pos:end="239:41">-&gt;</operator><name pos:start="239:42" pos:end="239:49">next_dts</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="241:17" pos:end="251:17"><if pos:start="241:17" pos:end="251:17">if <condition pos:start="241:20" pos:end="245:20">( <expr pos:start="241:22" pos:end="243:121"><name pos:start="241:22" pos:end="241:26">delta</name> <operator pos:start="241:28" pos:end="241:28">&lt;</operator> <operator pos:start="241:30" pos:end="241:30">-</operator><literal type="number" pos:start="241:31" pos:end="241:33">1LL</literal><operator pos:start="241:34" pos:end="241:34">*</operator><name pos:start="241:35" pos:end="241:53">dts_error_threshold</name><operator pos:start="241:54" pos:end="241:54">*</operator><name pos:start="241:55" pos:end="241:66">AV_TIME_BASE</name> <operator pos:start="241:68" pos:end="241:69">||</operator>

                    <operator pos:start="243:21" pos:end="243:21">(</operator><name pos:start="243:22" pos:end="243:26">delta</name> <operator pos:start="243:28" pos:end="243:28">&gt;</operator> <literal type="number" pos:start="243:30" pos:end="243:32">1LL</literal><operator pos:start="243:33" pos:end="243:33">*</operator><name pos:start="243:34" pos:end="243:52">dts_error_threshold</name><operator pos:start="243:53" pos:end="243:53">*</operator><name pos:start="243:54" pos:end="243:65">AV_TIME_BASE</name> <operator pos:start="243:67" pos:end="243:68">&amp;&amp;</operator> <name pos:start="243:70" pos:end="243:95"><name pos:start="243:70" pos:end="243:72">ist</name><operator pos:start="243:73" pos:end="243:74">-&gt;</operator><name pos:start="243:75" pos:end="243:76">st</name><operator pos:start="243:77" pos:end="243:78">-&gt;</operator><name pos:start="243:79" pos:end="243:83">codec</name><operator pos:start="243:84" pos:end="243:85">-&gt;</operator><name pos:start="243:86" pos:end="243:95">codec_type</name></name> <operator pos:start="243:97" pos:end="243:98">!=</operator> <name pos:start="243:100" pos:end="243:120">AVMEDIA_TYPE_SUBTITLE</name><operator pos:start="243:121" pos:end="243:121">)</operator></expr>

                   )</condition> <block pos:start="245:22" pos:end="251:17">{<block_content pos:start="247:21" pos:end="249:45">

                    <expr_stmt pos:start="247:21" pos:end="247:149"><expr pos:start="247:21" pos:end="247:148"><call pos:start="247:21" pos:end="247:148"><name pos:start="247:21" pos:end="247:26">av_log</name><argument_list pos:start="247:27" pos:end="247:148">(<argument pos:start="247:28" pos:end="247:31"><expr pos:start="247:28" pos:end="247:31"><name pos:start="247:28" pos:end="247:31">NULL</name></expr></argument>, <argument pos:start="247:34" pos:end="247:47"><expr pos:start="247:34" pos:end="247:47"><name pos:start="247:34" pos:end="247:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="247:50" pos:end="247:105"><expr pos:start="247:50" pos:end="247:105"><literal type="string" pos:start="247:50" pos:end="247:56">"PTS %"</literal><name pos:start="247:57" pos:end="247:62">PRId64</name><literal type="string" pos:start="247:63" pos:end="247:72">", next:%"</literal><name pos:start="247:73" pos:end="247:78">PRId64</name><literal type="string" pos:start="247:79" pos:end="247:105">" invalid dropping st:%d\n"</literal></expr></argument>, <argument pos:start="247:108" pos:end="247:114"><expr pos:start="247:108" pos:end="247:114"><name pos:start="247:108" pos:end="247:114"><name pos:start="247:108" pos:end="247:110">pkt</name><operator pos:start="247:111" pos:end="247:111">.</operator><name pos:start="247:112" pos:end="247:114">pts</name></name></expr></argument>, <argument pos:start="247:117" pos:end="247:129"><expr pos:start="247:117" pos:end="247:129"><name pos:start="247:117" pos:end="247:129"><name pos:start="247:117" pos:end="247:119">ist</name><operator pos:start="247:120" pos:end="247:121">-&gt;</operator><name pos:start="247:122" pos:end="247:129">next_dts</name></name></expr></argument>, <argument pos:start="247:132" pos:end="247:147"><expr pos:start="247:132" pos:end="247:147"><name pos:start="247:132" pos:end="247:147"><name pos:start="247:132" pos:end="247:134">pkt</name><operator pos:start="247:135" pos:end="247:135">.</operator><name pos:start="247:136" pos:end="247:147">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="249:21" pos:end="249:45"><expr pos:start="249:21" pos:end="249:44"><name pos:start="249:21" pos:end="249:27"><name pos:start="249:21" pos:end="249:23">pkt</name><operator pos:start="249:24" pos:end="249:24">.</operator><name pos:start="249:25" pos:end="249:27">pts</name></name> <operator pos:start="249:29" pos:end="249:29">=</operator> <name pos:start="249:31" pos:end="249:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="261:5" pos:end="261:38"><expr pos:start="261:5" pos:end="261:37"><call pos:start="261:5" pos:end="261:37"><name pos:start="261:5" pos:end="261:23">sub2video_heartbeat</name><argument_list pos:start="261:24" pos:end="261:37">(<argument pos:start="261:25" pos:end="261:27"><expr pos:start="261:25" pos:end="261:27"><name pos:start="261:25" pos:end="261:27">ist</name></expr></argument>, <argument pos:start="261:30" pos:end="261:36"><expr pos:start="261:30" pos:end="261:36"><name pos:start="261:30" pos:end="261:36"><name pos:start="261:30" pos:end="261:32">pkt</name><operator pos:start="261:33" pos:end="261:33">.</operator><name pos:start="261:34" pos:end="261:36">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:35"><expr pos:start="265:5" pos:end="265:34"><name pos:start="265:5" pos:end="265:7">ret</name> <operator pos:start="265:9" pos:end="265:9">=</operator> <call pos:start="265:11" pos:end="265:34"><name pos:start="265:11" pos:end="265:23">output_packet</name><argument_list pos:start="265:24" pos:end="265:34">(<argument pos:start="265:25" pos:end="265:27"><expr pos:start="265:25" pos:end="265:27"><name pos:start="265:25" pos:end="265:27">ist</name></expr></argument>, <argument pos:start="265:30" pos:end="265:33"><expr pos:start="265:30" pos:end="265:33"><operator pos:start="265:30" pos:end="265:30">&amp;</operator><name pos:start="265:31" pos:end="265:33">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="267:5" pos:end="281:5"><if pos:start="267:5" pos:end="281:5">if <condition pos:start="267:8" pos:end="267:16">(<expr pos:start="267:9" pos:end="267:15"><name pos:start="267:9" pos:end="267:11">ret</name> <operator pos:start="267:13" pos:end="267:13">&lt;</operator> <literal type="number" pos:start="267:15" pos:end="267:15">0</literal></expr>)</condition> <block pos:start="267:18" pos:end="281:5">{<block_content pos:start="269:9" pos:end="279:28">

        <decl_stmt pos:start="269:9" pos:end="269:22"><decl pos:start="269:9" pos:end="269:21"><type pos:start="269:9" pos:end="269:12"><name pos:start="269:9" pos:end="269:12">char</name></type> <name pos:start="269:14" pos:end="269:21"><name pos:start="269:14" pos:end="269:16">buf</name><index pos:start="269:17" pos:end="269:21">[<expr pos:start="269:18" pos:end="269:20"><literal type="number" pos:start="269:18" pos:end="269:20">128</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:43"><expr pos:start="271:9" pos:end="271:42"><call pos:start="271:9" pos:end="271:42"><name pos:start="271:9" pos:end="271:19">av_strerror</name><argument_list pos:start="271:20" pos:end="271:42">(<argument pos:start="271:21" pos:end="271:23"><expr pos:start="271:21" pos:end="271:23"><name pos:start="271:21" pos:end="271:23">ret</name></expr></argument>, <argument pos:start="271:26" pos:end="271:28"><expr pos:start="271:26" pos:end="271:28"><name pos:start="271:26" pos:end="271:28">buf</name></expr></argument>, <argument pos:start="271:31" pos:end="271:41"><expr pos:start="271:31" pos:end="271:41"><sizeof pos:start="271:31" pos:end="271:41">sizeof<argument_list pos:start="271:37" pos:end="271:41">(<argument pos:start="271:38" pos:end="271:40"><expr pos:start="271:38" pos:end="271:40"><name pos:start="271:38" pos:end="271:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="275:54"><expr pos:start="273:9" pos:end="275:53"><call pos:start="273:9" pos:end="275:53"><name pos:start="273:9" pos:end="273:14">av_log</name><argument_list pos:start="273:15" pos:end="275:53">(<argument pos:start="273:16" pos:end="273:19"><expr pos:start="273:16" pos:end="273:19"><name pos:start="273:16" pos:end="273:19">NULL</name></expr></argument>, <argument pos:start="273:22" pos:end="273:33"><expr pos:start="273:22" pos:end="273:33"><name pos:start="273:22" pos:end="273:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="273:36" pos:end="273:77"><expr pos:start="273:36" pos:end="273:77"><literal type="string" pos:start="273:36" pos:end="273:77">"Error while decoding stream #%d:%d: %s\n"</literal></expr></argument>,

                <argument pos:start="275:17" pos:end="275:31"><expr pos:start="275:17" pos:end="275:31"><name pos:start="275:17" pos:end="275:31"><name pos:start="275:17" pos:end="275:19">ist</name><operator pos:start="275:20" pos:end="275:21">-&gt;</operator><name pos:start="275:22" pos:end="275:31">file_index</name></name></expr></argument>, <argument pos:start="275:34" pos:end="275:47"><expr pos:start="275:34" pos:end="275:47"><name pos:start="275:34" pos:end="275:47"><name pos:start="275:34" pos:end="275:36">ist</name><operator pos:start="275:37" pos:end="275:38">-&gt;</operator><name pos:start="275:39" pos:end="275:40">st</name><operator pos:start="275:41" pos:end="275:42">-&gt;</operator><name pos:start="275:43" pos:end="275:47">index</name></name></expr></argument>, <argument pos:start="275:50" pos:end="275:52"><expr pos:start="275:50" pos:end="275:52"><name pos:start="275:50" pos:end="275:52">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="277:9" pos:end="279:28"><if pos:start="277:9" pos:end="279:28">if <condition pos:start="277:12" pos:end="277:26">(<expr pos:start="277:13" pos:end="277:25"><name pos:start="277:13" pos:end="277:25">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:28"><block_content pos:start="279:13" pos:end="279:28">

            <expr_stmt pos:start="279:13" pos:end="279:28"><expr pos:start="279:13" pos:end="279:27"><call pos:start="279:13" pos:end="279:27"><name pos:start="279:13" pos:end="279:24">exit_program</name><argument_list pos:start="279:25" pos:end="279:27">(<argument pos:start="279:26" pos:end="279:26"><expr pos:start="279:26" pos:end="279:26"><literal type="number" pos:start="279:26" pos:end="279:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="285:1" pos:end="285:15"><name pos:start="285:1" pos:end="285:14">discard_packet</name>:</label>

    <expr_stmt pos:start="287:5" pos:end="287:25"><expr pos:start="287:5" pos:end="287:24"><call pos:start="287:5" pos:end="287:24"><name pos:start="287:5" pos:end="287:18">av_free_packet</name><argument_list pos:start="287:19" pos:end="287:24">(<argument pos:start="287:20" pos:end="287:23"><expr pos:start="287:20" pos:end="287:23"><operator pos:start="287:20" pos:end="287:20">&amp;</operator><name pos:start="287:21" pos:end="287:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="291:5" pos:end="291:13">return <expr pos:start="291:12" pos:end="291:12"><literal type="number" pos:start="291:12" pos:end="291:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
