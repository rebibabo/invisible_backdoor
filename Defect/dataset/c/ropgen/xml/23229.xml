<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23229.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">vfio_spapr_create_window</name><parameter_list pos:start="1:29" pos:end="5:44">(<parameter pos:start="1:30" pos:end="1:53"><decl pos:start="1:30" pos:end="1:53"><type pos:start="1:30" pos:end="1:53"><name pos:start="1:30" pos:end="1:42">VFIOContainer</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:53">container</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:57"><decl pos:start="3:30" pos:end="3:57"><type pos:start="3:30" pos:end="3:57"><name pos:start="3:30" pos:end="3:48">MemoryRegionSection</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:57">section</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:43"><decl pos:start="5:30" pos:end="5:43"><type pos:start="5:30" pos:end="5:43"><name pos:start="5:30" pos:end="5:35">hwaddr</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:43">pgsize</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="97:1">{<block_content pos:start="9:5" pos:end="95:13">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:67"><decl pos:start="11:5" pos:end="11:66"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">IOMMUMemoryRegion</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:31">iommu_mr</name> <init pos:start="11:33" pos:end="11:66">= <expr pos:start="11:35" pos:end="11:66"><call pos:start="11:35" pos:end="11:66"><name pos:start="11:35" pos:end="11:53">IOMMU_MEMORY_REGION</name><argument_list pos:start="11:54" pos:end="11:66">(<argument pos:start="11:55" pos:end="11:65"><expr pos:start="11:55" pos:end="11:65"><name pos:start="11:55" pos:end="11:65"><name pos:start="11:55" pos:end="11:61">section</name><operator pos:start="11:62" pos:end="11:63">-&gt;</operator><name pos:start="11:64" pos:end="11:65">mr</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:72"><decl pos:start="13:5" pos:end="13:71"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:21">pagesize</name> <init pos:start="13:23" pos:end="13:71">= <expr pos:start="13:25" pos:end="13:71"><call pos:start="13:25" pos:end="13:71"><name pos:start="13:25" pos:end="13:61">memory_region_iommu_get_min_page_size</name><argument_list pos:start="13:62" pos:end="13:71">(<argument pos:start="13:63" pos:end="13:70"><expr pos:start="13:63" pos:end="13:70"><name pos:start="13:63" pos:end="13:70">iommu_mr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:20">entries</name></decl>, <decl pos:start="15:23" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:23" pos:end="15:27">pages</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:76"><decl pos:start="17:5" pos:end="17:75"><type pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:38">vfio_iommu_spapr_tce_create</name></name></type> <name pos:start="17:40" pos:end="17:45">create</name> <init pos:start="17:47" pos:end="17:75">= <expr pos:start="17:49" pos:end="17:75"><block pos:start="17:49" pos:end="17:75">{ <expr pos:start="17:51" pos:end="17:73"><operator pos:start="17:51" pos:end="17:51">.</operator><name pos:start="17:52" pos:end="17:56">argsz</name> <operator pos:start="17:58" pos:end="17:58">=</operator> sizeof<operator pos:start="17:66" pos:end="17:66">(</operator><name pos:start="17:67" pos:end="17:72">create</name><operator pos:start="17:73" pos:end="17:73">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="31:7">/*

     * FIXME: For VFIO iommu types which have KVM acceleration to

     * avoid bouncing all map/unmaps through qemu this way, this

     * would be the right place to wire that up (tell the KVM

     * device emulation the VFIO iommu handles to use).

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:53"><expr pos:start="33:5" pos:end="33:52"><name pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:10">create</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:22">window_size</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <call pos:start="33:26" pos:end="33:52"><name pos:start="33:26" pos:end="33:37">int128_get64</name><argument_list pos:start="33:38" pos:end="33:52">(<argument pos:start="33:39" pos:end="33:51"><expr pos:start="33:39" pos:end="33:51"><name pos:start="33:39" pos:end="33:51"><name pos:start="33:39" pos:end="33:45">section</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:51">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:10">create</name><operator pos:start="35:11" pos:end="35:11">.</operator><name pos:start="35:12" pos:end="35:21">page_shift</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:39"><name pos:start="35:25" pos:end="35:29">ctz64</name><argument_list pos:start="35:30" pos:end="35:39">(<argument pos:start="35:31" pos:end="35:38"><expr pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:38">pagesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="37:5" pos:end="45:7">/*

     * SPAPR host supports multilevel TCE tables, there is some

     * heuristic to decide how many levels we want for our table:

     * 0..64 = 1; 65..4096 = 2; 4097..262144 = 3; 262145.. = 4

     */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:11">entries</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:32"><name pos:start="47:15" pos:end="47:20">create</name><operator pos:start="47:21" pos:end="47:21">.</operator><name pos:start="47:22" pos:end="47:32">window_size</name></name> <operator pos:start="47:34" pos:end="47:35">&gt;&gt;</operator> <name pos:start="47:37" pos:end="47:53"><name pos:start="47:37" pos:end="47:42">create</name><operator pos:start="47:43" pos:end="47:43">.</operator><name pos:start="47:44" pos:end="47:53">page_shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:65"><expr pos:start="49:5" pos:end="49:64"><name pos:start="49:5" pos:end="49:9">pages</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:15">MAX</name><argument_list pos:start="49:16" pos:end="49:64">(<argument pos:start="49:17" pos:end="49:60"><expr pos:start="49:17" pos:end="49:60"><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:24">entries</name> <operator pos:start="49:26" pos:end="49:26">*</operator> <sizeof pos:start="49:28" pos:end="49:43">sizeof<argument_list pos:start="49:34" pos:end="49:43">(<argument pos:start="49:35" pos:end="49:42"><expr pos:start="49:35" pos:end="49:42"><name pos:start="49:35" pos:end="49:42">uint64_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="49:44" pos:end="49:44">)</operator> <operator pos:start="49:46" pos:end="49:46">/</operator> <call pos:start="49:48" pos:end="49:60"><name pos:start="49:48" pos:end="49:58">getpagesize</name><argument_list pos:start="49:59" pos:end="49:60">()</argument_list></call></expr></argument>, <argument pos:start="49:63" pos:end="49:63"><expr pos:start="49:63" pos:end="49:63"><literal type="number" pos:start="49:63" pos:end="49:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:9">pages</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:15">MAX</name><argument_list pos:start="51:16" pos:end="51:39">(<argument pos:start="51:17" pos:end="51:35"><expr pos:start="51:17" pos:end="51:35"><call pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:24">pow2ceil</name><argument_list pos:start="51:25" pos:end="51:31">(<argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:30">pages</name></expr></argument>)</argument_list></call> <operator pos:start="51:33" pos:end="51:33">-</operator> <literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:42" pos:end="51:55">/* Round up */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:10">create</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:17">levels</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <call pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:25">ctz64</name><argument_list pos:start="53:26" pos:end="53:32">(<argument pos:start="53:27" pos:end="53:31"><expr pos:start="53:27" pos:end="53:31"><name pos:start="53:27" pos:end="53:31">pages</name></expr></argument>)</argument_list></call> <operator pos:start="53:34" pos:end="53:34">/</operator> <literal type="number" pos:start="53:36" pos:end="53:38">6</literal> <operator pos:start="53:38" pos:end="53:38">+</operator> <literal type="number" pos:start="53:40" pos:end="53:40">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:69"><expr pos:start="57:5" pos:end="57:68"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:68"><name pos:start="57:11" pos:end="57:15">ioctl</name><argument_list pos:start="57:16" pos:end="57:68">(<argument pos:start="57:17" pos:end="57:29"><expr pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:25">container</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:29">fd</name></name></expr></argument>, <argument pos:start="57:32" pos:end="57:58"><expr pos:start="57:32" pos:end="57:58"><name pos:start="57:32" pos:end="57:58">VFIO_IOMMU_SPAPR_TCE_CREATE</name></expr></argument>, <argument pos:start="57:61" pos:end="57:67"><expr pos:start="57:61" pos:end="57:67"><operator pos:start="57:61" pos:end="57:61">&amp;</operator><name pos:start="57:62" pos:end="57:67">create</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:12">(<expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">ret</name></expr>)</condition> <block pos:start="59:14" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:22">

        <expr_stmt pos:start="61:9" pos:end="61:70"><expr pos:start="61:9" pos:end="61:69"><call pos:start="61:9" pos:end="61:69"><name pos:start="61:9" pos:end="61:20">error_report</name><argument_list pos:start="61:21" pos:end="61:69">(<argument pos:start="61:22" pos:end="61:63"><expr pos:start="61:22" pos:end="61:63"><literal type="string" pos:start="61:22" pos:end="61:63">"Failed to create a window, ret = %d (%m)"</literal></expr></argument>, <argument pos:start="61:66" pos:end="61:68"><expr pos:start="61:66" pos:end="61:68"><name pos:start="61:66" pos:end="61:68">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:22">return <expr pos:start="63:16" pos:end="63:21"><operator pos:start="63:16" pos:end="63:16">-</operator><name pos:start="63:17" pos:end="63:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:66">(<expr pos:start="69:9" pos:end="69:65"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:14">create</name><operator pos:start="69:15" pos:end="69:15">.</operator><name pos:start="69:16" pos:end="69:25">start_addr</name></name> <operator pos:start="69:27" pos:end="69:28">!=</operator> <name pos:start="69:30" pos:end="69:65"><name pos:start="69:30" pos:end="69:36">section</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:65">offset_within_address_space</name></name></expr>)</condition> <block pos:start="69:68" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:23">

        <expr_stmt pos:start="71:9" pos:end="71:63"><expr pos:start="71:9" pos:end="71:62"><call pos:start="71:9" pos:end="71:62"><name pos:start="71:9" pos:end="71:32">vfio_spapr_remove_window</name><argument_list pos:start="71:33" pos:end="71:62">(<argument pos:start="71:34" pos:end="71:42"><expr pos:start="71:34" pos:end="71:42"><name pos:start="71:34" pos:end="71:42">container</name></expr></argument>, <argument pos:start="71:45" pos:end="71:61"><expr pos:start="71:45" pos:end="71:61"><name pos:start="71:45" pos:end="71:61"><name pos:start="71:45" pos:end="71:50">create</name><operator pos:start="71:51" pos:end="71:51">.</operator><name pos:start="71:52" pos:end="71:61">start_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="79:50"><expr pos:start="75:9" pos:end="79:49"><call pos:start="75:9" pos:end="79:49"><name pos:start="75:9" pos:end="75:20">error_report</name><argument_list pos:start="75:21" pos:end="79:49">(<argument pos:start="75:22" pos:end="75:89"><expr pos:start="75:22" pos:end="75:89"><literal type="string" pos:start="75:22" pos:end="75:59">"Host doesn't support DMA window at %"</literal><name pos:start="75:60" pos:end="75:70">HWADDR_PRIx</name><literal type="string" pos:start="75:71" pos:end="75:83">", must be %"</literal><name pos:start="75:84" pos:end="75:89">PRIx64</name></expr></argument>,

                     <argument pos:start="77:22" pos:end="77:57"><expr pos:start="77:22" pos:end="77:57"><name pos:start="77:22" pos:end="77:57"><name pos:start="77:22" pos:end="77:28">section</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:57">offset_within_address_space</name></name></expr></argument>,

                     <argument pos:start="79:22" pos:end="79:48"><expr pos:start="79:22" pos:end="79:48"><operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:30">uint64_t</name><operator pos:start="79:31" pos:end="79:31">)</operator><name pos:start="79:32" pos:end="79:48"><name pos:start="79:32" pos:end="79:37">create</name><operator pos:start="79:38" pos:end="79:38">.</operator><name pos:start="79:39" pos:end="79:48">start_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:23">return <expr pos:start="81:16" pos:end="81:22"><operator pos:start="81:16" pos:end="81:16">-</operator><name pos:start="81:17" pos:end="81:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="89:54"><expr pos:start="85:5" pos:end="89:53"><call pos:start="85:5" pos:end="89:53"><name pos:start="85:5" pos:end="85:34">trace_vfio_spapr_create_window</name><argument_list pos:start="85:35" pos:end="89:53">(<argument pos:start="85:36" pos:end="85:52"><expr pos:start="85:36" pos:end="85:52"><name pos:start="85:36" pos:end="85:52"><name pos:start="85:36" pos:end="85:41">create</name><operator pos:start="85:42" pos:end="85:42">.</operator><name pos:start="85:43" pos:end="85:52">page_shift</name></name></expr></argument>,

                                   <argument pos:start="87:36" pos:end="87:53"><expr pos:start="87:36" pos:end="87:53"><name pos:start="87:36" pos:end="87:53"><name pos:start="87:36" pos:end="87:41">create</name><operator pos:start="87:42" pos:end="87:42">.</operator><name pos:start="87:43" pos:end="87:53">window_size</name></name></expr></argument>,

                                   <argument pos:start="89:36" pos:end="89:52"><expr pos:start="89:36" pos:end="89:52"><name pos:start="89:36" pos:end="89:52"><name pos:start="89:36" pos:end="89:41">create</name><operator pos:start="89:42" pos:end="89:42">.</operator><name pos:start="89:43" pos:end="89:52">start_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><operator pos:start="91:5" pos:end="91:5">*</operator><name pos:start="91:6" pos:end="91:11">pgsize</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:22">pagesize</name></expr>;</expr_stmt>



    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
