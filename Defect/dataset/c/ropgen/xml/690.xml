<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/690.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_trak</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">MOVStreamContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:6">st</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <call pos:start="13:10" pos:end="13:41"><name pos:start="13:10" pos:end="13:28">avformat_new_stream</name><argument_list pos:start="13:29" pos:end="13:41">(<argument pos:start="13:30" pos:end="13:34"><expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:30">c</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:34">fc</name></name></expr></argument>, <argument pos:start="13:37" pos:end="13:40"><expr pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="15:36"><if pos:start="15:5" pos:end="15:36">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:11">st</name></expr>)</condition><block type="pseudo" pos:start="15:14" pos:end="15:36"><block_content pos:start="15:14" pos:end="15:36"> <return pos:start="15:14" pos:end="15:36">return <expr pos:start="15:21" pos:end="15:35"><call pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:27">AVERROR</name><argument_list pos:start="15:28" pos:end="15:35">(<argument pos:start="15:29" pos:end="15:34"><expr pos:start="15:29" pos:end="15:34"><name pos:start="15:29" pos:end="15:34">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:6">st</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:10">id</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:30"><name pos:start="17:14" pos:end="17:14">c</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:18">fc</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:30">nb_streams</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:6">sc</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:45"><name pos:start="19:10" pos:end="19:19">av_mallocz</name><argument_list pos:start="19:20" pos:end="19:45">(<argument pos:start="19:21" pos:end="19:44"><expr pos:start="19:21" pos:end="19:44"><sizeof pos:start="19:21" pos:end="19:44">sizeof<argument_list pos:start="19:27" pos:end="19:44">(<argument pos:start="19:28" pos:end="19:43"><expr pos:start="19:28" pos:end="19:43"><name pos:start="19:28" pos:end="19:43">MOVStreamContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="21:36"><if pos:start="21:5" pos:end="21:36">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:11">sc</name></expr>)</condition><block type="pseudo" pos:start="21:14" pos:end="21:36"><block_content pos:start="21:14" pos:end="21:36"> <return pos:start="21:14" pos:end="21:36">return <expr pos:start="21:21" pos:end="21:35"><call pos:start="21:21" pos:end="21:35"><name pos:start="21:21" pos:end="21:27">AVERROR</name><argument_list pos:start="21:28" pos:end="21:35">(<argument pos:start="21:29" pos:end="21:34"><expr pos:start="21:29" pos:end="21:34"><name pos:start="21:29" pos:end="21:34">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:17">priv_data</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:22">sc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:6">st</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:13">codec</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">codec_type</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:45">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:6">sc</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:15">ffindex</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:27"><name pos:start="29:19" pos:end="29:20">st</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">trak_index</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:22">st</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:29">index</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:19"><if pos:start="35:5" pos:end="37:19">if <condition pos:start="35:8" pos:end="35:50">(<expr pos:start="35:9" pos:end="35:49"><operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:12">ret</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:44"><name pos:start="35:16" pos:end="35:31">mov_read_default</name><argument_list pos:start="35:32" pos:end="35:44">(<argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><name pos:start="35:33" pos:end="35:33">c</name></expr></argument>, <argument pos:start="35:36" pos:end="35:37"><expr pos:start="35:36" pos:end="35:37"><name pos:start="35:36" pos:end="35:37">pb</name></expr></argument>, <argument pos:start="35:40" pos:end="35:43"><expr pos:start="35:40" pos:end="35:43"><name pos:start="35:40" pos:end="35:43">atom</name></expr></argument>)</argument_list></call><operator pos:start="35:45" pos:end="35:45">)</operator> <operator pos:start="35:47" pos:end="35:47">&lt;</operator> <literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:19"><block_content pos:start="37:9" pos:end="37:19">

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:5">c</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:17">trak_index</name></name> <operator pos:start="41:19" pos:end="41:19">=</operator> <operator pos:start="41:21" pos:end="41:21">-</operator><literal type="number" pos:start="41:22" pos:end="41:22">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:23">/* sanity checks */</comment>

    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="49:69">(<expr pos:start="47:9" pos:end="49:68"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:10">sc</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:23">chunk_count</name></name> <operator pos:start="47:25" pos:end="47:26">&amp;&amp;</operator> <operator pos:start="47:28" pos:end="47:28">(</operator><operator pos:start="47:29" pos:end="47:29">!</operator><name pos:start="47:30" pos:end="47:43"><name pos:start="47:30" pos:end="47:31">sc</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:43">stts_count</name></name> <operator pos:start="47:45" pos:end="47:46">||</operator> <operator pos:start="47:48" pos:end="47:48">!</operator><name pos:start="47:49" pos:end="47:62"><name pos:start="47:49" pos:end="47:50">sc</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:62">stsc_count</name></name> <operator pos:start="47:64" pos:end="47:65">||</operator>

                            <operator pos:start="49:29" pos:end="49:29">(</operator><operator pos:start="49:30" pos:end="49:30">!</operator><name pos:start="49:31" pos:end="49:45"><name pos:start="49:31" pos:end="49:32">sc</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:45">sample_size</name></name> <operator pos:start="49:47" pos:end="49:48">&amp;&amp;</operator> <operator pos:start="49:50" pos:end="49:50">!</operator><name pos:start="49:51" pos:end="49:66"><name pos:start="49:51" pos:end="49:52">sc</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:66">sample_count</name></name><operator pos:start="49:67" pos:end="49:67">)</operator><operator pos:start="49:68" pos:end="49:68">)</operator></expr>)</condition> <block pos:start="49:71" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:17">

        <expr_stmt pos:start="51:9" pos:end="53:26"><expr pos:start="51:9" pos:end="53:25"><call pos:start="51:9" pos:end="53:25"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="53:25">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:16">c</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:20">fc</name></name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:89"><expr pos:start="51:37" pos:end="51:89"><literal type="string" pos:start="51:37" pos:end="51:89">"stream %d, missing mandatory atoms, broken header\n"</literal></expr></argument>,

               <argument pos:start="53:16" pos:end="53:24"><expr pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:17">st</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:17">fix_timescale</name><argument_list pos:start="61:18" pos:end="61:24">(<argument pos:start="61:19" pos:end="61:19"><expr pos:start="61:19" pos:end="61:19"><name pos:start="61:19" pos:end="61:19">c</name></expr></argument>, <argument pos:start="61:22" pos:end="61:23"><expr pos:start="61:22" pos:end="61:23"><name pos:start="61:22" pos:end="61:23">sc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:51"><expr pos:start="65:5" pos:end="65:50"><call pos:start="65:5" pos:end="65:50"><name pos:start="65:5" pos:end="65:23">avpriv_set_pts_info</name><argument_list pos:start="65:24" pos:end="65:50">(<argument pos:start="65:25" pos:end="65:26"><expr pos:start="65:25" pos:end="65:26"><name pos:start="65:25" pos:end="65:26">st</name></expr></argument>, <argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><literal type="number" pos:start="65:29" pos:end="65:30">64</literal></expr></argument>, <argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">1</literal></expr></argument>, <argument pos:start="65:36" pos:end="65:49"><expr pos:start="65:36" pos:end="65:49"><name pos:start="65:36" pos:end="65:49"><name pos:start="65:36" pos:end="65:37">sc</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:49">time_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:19">mov_build_index</name><argument_list pos:start="69:20" pos:end="69:26">(<argument pos:start="69:21" pos:end="69:21"><expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">c</name></expr></argument>, <argument pos:start="69:24" pos:end="69:25"><expr pos:start="69:24" pos:end="69:25"><name pos:start="69:24" pos:end="69:25">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="97:5"><if pos:start="73:5" pos:end="91:5">if <condition pos:start="73:8" pos:end="73:73">(<expr pos:start="73:9" pos:end="73:72"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:10">sc</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:19">dref_id</name></name><operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:39"><name pos:start="73:25" pos:end="73:26">sc</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:39">drefs_count</name></name> <operator pos:start="73:41" pos:end="73:42">&amp;&amp;</operator> <name pos:start="73:44" pos:end="73:67"><name pos:start="73:44" pos:end="73:45">sc</name><operator pos:start="73:46" pos:end="73:47">-&gt;</operator><name pos:start="73:48" pos:end="73:52">drefs</name><index pos:start="73:53" pos:end="73:67">[<expr pos:start="73:54" pos:end="73:66"><name pos:start="73:54" pos:end="73:64"><name pos:start="73:54" pos:end="73:55">sc</name><operator pos:start="73:56" pos:end="73:57">-&gt;</operator><name pos:start="73:58" pos:end="73:64">dref_id</name></name><operator pos:start="73:65" pos:end="73:65">-</operator><literal type="number" pos:start="73:66" pos:end="73:66">1</literal></expr>]</index></name><operator pos:start="73:68" pos:end="73:68">.</operator><name pos:start="73:69" pos:end="73:72">path</name></expr>)</condition> <block pos:start="73:75" pos:end="91:5">{<block_content pos:start="75:9" pos:end="89:65">

        <decl_stmt pos:start="75:9" pos:end="75:52"><decl pos:start="75:9" pos:end="75:51"><type pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:15">MOVDref</name> <modifier pos:start="75:17" pos:end="75:17">*</modifier></type><name pos:start="75:18" pos:end="75:21">dref</name> <init pos:start="75:23" pos:end="75:51">= <expr pos:start="75:25" pos:end="75:51"><operator pos:start="75:25" pos:end="75:25">&amp;</operator><name pos:start="75:26" pos:end="75:51"><name pos:start="75:26" pos:end="75:27">sc</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:34">drefs</name><index pos:start="75:35" pos:end="75:51">[<expr pos:start="75:36" pos:end="75:50"><name pos:start="75:36" pos:end="75:46"><name pos:start="75:36" pos:end="75:37">sc</name><operator pos:start="75:38" pos:end="75:39">-&gt;</operator><name pos:start="75:40" pos:end="75:46">dref_id</name></name> <operator pos:start="75:48" pos:end="75:48">-</operator> <literal type="number" pos:start="75:50" pos:end="75:50">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="77:9" pos:end="89:65"><if pos:start="77:9" pos:end="89:65">if <condition pos:start="77:12" pos:end="79:58">(<expr pos:start="77:13" pos:end="79:57"><call pos:start="77:13" pos:end="79:53"><name pos:start="77:13" pos:end="77:25">mov_open_dref</name><argument_list pos:start="77:26" pos:end="79:53">(<argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><name pos:start="77:27" pos:end="77:27">c</name></expr></argument>, <argument pos:start="77:30" pos:end="77:36"><expr pos:start="77:30" pos:end="77:36"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:36"><name pos:start="77:31" pos:end="77:32">sc</name><operator pos:start="77:33" pos:end="77:34">-&gt;</operator><name pos:start="77:35" pos:end="77:36">pb</name></name></expr></argument>, <argument pos:start="77:39" pos:end="77:53"><expr pos:start="77:39" pos:end="77:53"><name pos:start="77:39" pos:end="77:53"><name pos:start="77:39" pos:end="77:39">c</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:43">fc</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:53">filename</name></name></expr></argument>, <argument pos:start="77:56" pos:end="77:59"><expr pos:start="77:56" pos:end="77:59"><name pos:start="77:56" pos:end="77:59">dref</name></expr></argument>,

                          <argument pos:start="79:27" pos:end="79:52"><expr pos:start="79:27" pos:end="79:52"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:52"><name pos:start="79:28" pos:end="79:28">c</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:32">fc</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:52">interrupt_callback</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:55" pos:end="79:55">&lt;</operator> <literal type="number" pos:start="79:57" pos:end="79:57">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="89:65"><block_content pos:start="81:13" pos:end="89:65">

            <expr_stmt pos:start="81:13" pos:end="89:65"><expr pos:start="81:13" pos:end="89:64"><call pos:start="81:13" pos:end="89:64"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="89:64">(<argument pos:start="81:20" pos:end="81:24"><expr pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:24"><name pos:start="81:20" pos:end="81:20">c</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:24">fc</name></name></expr></argument>, <argument pos:start="81:27" pos:end="81:38"><expr pos:start="81:27" pos:end="81:38"><name pos:start="81:27" pos:end="81:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="83:20" pos:end="85:75"><expr pos:start="83:20" pos:end="85:75"><literal type="string" pos:start="83:20" pos:end="83:74">"stream %d, error opening alias: path='%s', dir='%s', "</literal>

                   <literal type="string" pos:start="85:20" pos:end="85:75">"filename='%s', volume='%s', nlvl_from=%d, nlvl_to=%d\n"</literal></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:28"><expr pos:start="87:20" pos:end="87:28"><name pos:start="87:20" pos:end="87:28"><name pos:start="87:20" pos:end="87:21">st</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:28">index</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:40"><expr pos:start="87:31" pos:end="87:40"><name pos:start="87:31" pos:end="87:40"><name pos:start="87:31" pos:end="87:34">dref</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:40">path</name></name></expr></argument>, <argument pos:start="87:43" pos:end="87:51"><expr pos:start="87:43" pos:end="87:51"><name pos:start="87:43" pos:end="87:51"><name pos:start="87:43" pos:end="87:46">dref</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:51">dir</name></name></expr></argument>, <argument pos:start="87:54" pos:end="87:67"><expr pos:start="87:54" pos:end="87:67"><name pos:start="87:54" pos:end="87:67"><name pos:start="87:54" pos:end="87:57">dref</name><operator pos:start="87:58" pos:end="87:59">-&gt;</operator><name pos:start="87:60" pos:end="87:67">filename</name></name></expr></argument>,

                   <argument pos:start="89:20" pos:end="89:31"><expr pos:start="89:20" pos:end="89:31"><name pos:start="89:20" pos:end="89:31"><name pos:start="89:20" pos:end="89:23">dref</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:31">volume</name></name></expr></argument>, <argument pos:start="89:34" pos:end="89:48"><expr pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:37">dref</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:48">nlvl_from</name></name></expr></argument>, <argument pos:start="89:51" pos:end="89:63"><expr pos:start="89:51" pos:end="89:63"><name pos:start="89:51" pos:end="89:63"><name pos:start="89:51" pos:end="89:54">dref</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:63">nlvl_to</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="97:5">else <block pos:start="91:12" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:29">

        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:10">sc</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:14">pb</name></name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:26"><name pos:start="93:18" pos:end="93:18">c</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:22">fc</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:26">pb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:24"><name pos:start="95:9" pos:end="95:10">sc</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:24">pb_is_copied</name></name> <operator pos:start="95:26" pos:end="95:26">=</operator> <literal type="number" pos:start="95:28" pos:end="95:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="101:5" pos:end="127:5"><if pos:start="101:5" pos:end="127:5">if <condition pos:start="101:8" pos:end="101:52">(<expr pos:start="101:9" pos:end="101:51"><name pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:10">st</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:17">codec</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:29">codec_type</name></name> <operator pos:start="101:31" pos:end="101:32">==</operator> <name pos:start="101:34" pos:end="101:51">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="101:54" pos:end="127:5">{<block_content pos:start="103:9" pos:end="126:0">

        <if_stmt pos:start="103:9" pos:end="118:0"><if pos:start="103:9" pos:end="118:0">if <condition pos:start="103:12" pos:end="107:79">(<expr pos:start="103:13" pos:end="107:78"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:40"><name pos:start="103:14" pos:end="103:15">st</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:36">sample_aspect_ratio</name><operator pos:start="103:37" pos:end="103:37">.</operator><name pos:start="103:38" pos:end="103:40">num</name></name> <operator pos:start="103:42" pos:end="103:43">&amp;&amp;</operator> <name pos:start="103:45" pos:end="103:60"><name pos:start="103:45" pos:end="103:46">st</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:53">codec</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:60">width</name></name> <operator pos:start="103:62" pos:end="103:63">&amp;&amp;</operator> <name pos:start="103:65" pos:end="103:81"><name pos:start="103:65" pos:end="103:66">st</name><operator pos:start="103:67" pos:end="103:68">-&gt;</operator><name pos:start="103:69" pos:end="103:73">codec</name><operator pos:start="103:74" pos:end="103:75">-&gt;</operator><name pos:start="103:76" pos:end="103:81">height</name></name> <operator pos:start="103:83" pos:end="103:84">&amp;&amp;</operator>

            <name pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:14">sc</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:22">height</name></name> <operator pos:start="105:24" pos:end="105:25">&amp;&amp;</operator> <name pos:start="105:27" pos:end="105:35"><name pos:start="105:27" pos:end="105:28">sc</name><operator pos:start="105:29" pos:end="105:30">-&gt;</operator><name pos:start="105:31" pos:end="105:35">width</name></name> <operator pos:start="105:37" pos:end="105:38">&amp;&amp;</operator>

            <operator pos:start="107:13" pos:end="107:13">(</operator><name pos:start="107:14" pos:end="107:29"><name pos:start="107:14" pos:end="107:15">st</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">codec</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:29">width</name></name> <operator pos:start="107:31" pos:end="107:32">!=</operator> <name pos:start="107:34" pos:end="107:42"><name pos:start="107:34" pos:end="107:35">sc</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:42">width</name></name> <operator pos:start="107:44" pos:end="107:45">||</operator> <name pos:start="107:47" pos:end="107:63"><name pos:start="107:47" pos:end="107:48">st</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:55">codec</name><operator pos:start="107:56" pos:end="107:57">-&gt;</operator><name pos:start="107:58" pos:end="107:63">height</name></name> <operator pos:start="107:65" pos:end="107:66">!=</operator> <name pos:start="107:68" pos:end="107:77"><name pos:start="107:68" pos:end="107:69">sc</name><operator pos:start="107:70" pos:end="107:71">-&gt;</operator><name pos:start="107:72" pos:end="107:77">height</name></name><operator pos:start="107:78" pos:end="107:78">)</operator></expr>)</condition> <block pos:start="107:81" pos:end="118:0">{<block_content pos:start="109:13" pos:end="111:95">

            <expr_stmt pos:start="109:13" pos:end="111:95"><expr pos:start="109:13" pos:end="111:94"><name pos:start="109:13" pos:end="109:35"><name pos:start="109:13" pos:end="109:14">st</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:35">sample_aspect_ratio</name></name> <operator pos:start="109:37" pos:end="109:37">=</operator> <call pos:start="109:39" pos:end="111:94"><name pos:start="109:39" pos:end="109:44">av_d2q</name><argument_list pos:start="109:45" pos:end="111:94">(<argument pos:start="109:46" pos:end="111:84"><expr pos:start="109:46" pos:end="111:84"><operator pos:start="109:46" pos:end="109:46">(</operator><operator pos:start="109:47" pos:end="109:47">(</operator><name pos:start="109:48" pos:end="109:53">double</name><operator pos:start="109:54" pos:end="109:54">)</operator><name pos:start="109:55" pos:end="109:71"><name pos:start="109:55" pos:end="109:56">st</name><operator pos:start="109:57" pos:end="109:58">-&gt;</operator><name pos:start="109:59" pos:end="109:63">codec</name><operator pos:start="109:64" pos:end="109:65">-&gt;</operator><name pos:start="109:66" pos:end="109:71">height</name></name> <operator pos:start="109:73" pos:end="109:73">*</operator> <name pos:start="109:75" pos:end="109:83"><name pos:start="109:75" pos:end="109:76">sc</name><operator pos:start="109:77" pos:end="109:78">-&gt;</operator><name pos:start="109:79" pos:end="109:83">width</name></name><operator pos:start="109:84" pos:end="109:84">)</operator> <operator pos:start="109:86" pos:end="109:86">/</operator>

                                             <operator pos:start="111:46" pos:end="111:46">(</operator><operator pos:start="111:47" pos:end="111:47">(</operator><name pos:start="111:48" pos:end="111:53">double</name><operator pos:start="111:54" pos:end="111:54">)</operator><name pos:start="111:55" pos:end="111:70"><name pos:start="111:55" pos:end="111:56">st</name><operator pos:start="111:57" pos:end="111:58">-&gt;</operator><name pos:start="111:59" pos:end="111:63">codec</name><operator pos:start="111:64" pos:end="111:65">-&gt;</operator><name pos:start="111:66" pos:end="111:70">width</name></name> <operator pos:start="111:72" pos:end="111:72">*</operator> <name pos:start="111:74" pos:end="111:83"><name pos:start="111:74" pos:end="111:75">sc</name><operator pos:start="111:76" pos:end="111:77">-&gt;</operator><name pos:start="111:78" pos:end="111:83">height</name></name><operator pos:start="111:84" pos:end="111:84">)</operator></expr></argument>, <argument pos:start="111:87" pos:end="111:93"><expr pos:start="111:87" pos:end="111:93"><name pos:start="111:87" pos:end="111:93">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



<cpp:if pos:start="117:1" pos:end="117:23">#<cpp:directive pos:start="117:2" pos:end="117:3">if</cpp:directive> <expr pos:start="117:5" pos:end="117:23"><name pos:start="117:5" pos:end="117:23">FF_API_R_FRAME_RATE</name></expr></cpp:if>

        <if_stmt pos:start="119:9" pos:end="126:0"><if pos:start="119:9" pos:end="126:0">if <condition pos:start="119:12" pos:end="119:88">(<expr pos:start="119:13" pos:end="119:87"><name pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:14">sc</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:26">stts_count</name></name> <operator pos:start="119:28" pos:end="119:29">==</operator> <literal type="number" pos:start="119:31" pos:end="119:31">1</literal> <operator pos:start="119:33" pos:end="119:34">||</operator> <operator pos:start="119:36" pos:end="119:36">(</operator><name pos:start="119:37" pos:end="119:50"><name pos:start="119:37" pos:end="119:38">sc</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:50">stts_count</name></name> <operator pos:start="119:52" pos:end="119:53">==</operator> <literal type="number" pos:start="119:55" pos:end="119:55">2</literal> <operator pos:start="119:57" pos:end="119:58">&amp;&amp;</operator> <name pos:start="119:60" pos:end="119:75"><name pos:start="119:60" pos:end="119:61">sc</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:72">stts_data</name><index pos:start="119:73" pos:end="119:75">[<expr pos:start="119:74" pos:end="119:74"><literal type="number" pos:start="119:74" pos:end="119:74">1</literal></expr>]</index></name><operator pos:start="119:76" pos:end="119:76">.</operator><name pos:start="119:77" pos:end="119:81">count</name> <operator pos:start="119:83" pos:end="119:84">==</operator> <literal type="number" pos:start="119:86" pos:end="119:86">1</literal><operator pos:start="119:87" pos:end="119:87">)</operator></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="126:0"><block_content pos:start="121:13" pos:end="126:0">

            <expr_stmt pos:start="121:13" pos:end="126:0"><expr pos:start="121:13" pos:end="123:73"><call pos:start="121:13" pos:end="123:73"><name pos:start="121:13" pos:end="121:21">av_reduce</name><argument_list pos:start="121:22" pos:end="123:73">(<argument pos:start="121:23" pos:end="121:43"><expr pos:start="121:23" pos:end="121:43"><operator pos:start="121:23" pos:end="121:23">&amp;</operator><name pos:start="121:24" pos:end="121:43"><name pos:start="121:24" pos:end="121:25">st</name><operator pos:start="121:26" pos:end="121:27">-&gt;</operator><name pos:start="121:28" pos:end="121:39">r_frame_rate</name><operator pos:start="121:40" pos:end="121:40">.</operator><name pos:start="121:41" pos:end="121:43">num</name></name></expr></argument>, <argument pos:start="121:46" pos:end="121:66"><expr pos:start="121:46" pos:end="121:66"><operator pos:start="121:46" pos:end="121:46">&amp;</operator><name pos:start="121:47" pos:end="121:66"><name pos:start="121:47" pos:end="121:48">st</name><operator pos:start="121:49" pos:end="121:50">-&gt;</operator><name pos:start="121:51" pos:end="121:62">r_frame_rate</name><operator pos:start="121:63" pos:end="121:63">.</operator><name pos:start="121:64" pos:end="121:66">den</name></name></expr></argument>,

                      <argument pos:start="123:23" pos:end="123:36"><expr pos:start="123:23" pos:end="123:36"><name pos:start="123:23" pos:end="123:36"><name pos:start="123:23" pos:end="123:24">sc</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:36">time_scale</name></name></expr></argument>, <argument pos:start="123:39" pos:end="123:63"><expr pos:start="123:39" pos:end="123:63"><name pos:start="123:39" pos:end="123:54"><name pos:start="123:39" pos:end="123:40">sc</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:51">stts_data</name><index pos:start="123:52" pos:end="123:54">[<expr pos:start="123:53" pos:end="123:53"><literal type="number" pos:start="123:53" pos:end="123:53">0</literal></expr>]</index></name><operator pos:start="123:55" pos:end="123:55">.</operator><name pos:start="123:56" pos:end="123:63">duration</name></expr></argument>, <argument pos:start="123:66" pos:end="123:72"><expr pos:start="123:66" pos:end="123:72"><name pos:start="123:66" pos:end="123:72">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="131:5" pos:end="131:54">// done for ai5q, ai52, ai55, ai1q, ai12 and ai15.</comment>

    <if_stmt pos:start="133:5" pos:end="143:5"><if pos:start="133:5" pos:end="143:5">if <condition pos:start="133:8" pos:end="135:42">(<expr pos:start="133:9" pos:end="135:41"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:34"><name pos:start="133:10" pos:end="133:11">st</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:18">codec</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:34">extradata_size</name></name> <operator pos:start="133:36" pos:end="133:37">&amp;&amp;</operator> <name pos:start="133:39" pos:end="133:57"><name pos:start="133:39" pos:end="133:40">st</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:47">codec</name><operator pos:start="133:48" pos:end="133:49">-&gt;</operator><name pos:start="133:50" pos:end="133:57">codec_id</name></name> <operator pos:start="133:59" pos:end="133:60">==</operator> <name pos:start="133:62" pos:end="133:77">AV_CODEC_ID_H264</name> <operator pos:start="133:79" pos:end="133:80">&amp;&amp;</operator>

        <call pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:19">TAG_IS_AVCI</name><argument_list pos:start="135:20" pos:end="135:41">(<argument pos:start="135:21" pos:end="135:40"><expr pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:40"><name pos:start="135:21" pos:end="135:22">st</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:29">codec</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:40">codec_tag</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:44" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:23">

        <expr_stmt pos:start="137:9" pos:end="137:45"><expr pos:start="137:9" pos:end="137:44"><name pos:start="137:9" pos:end="137:11">ret</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:44"><name pos:start="137:15" pos:end="137:40">ff_generate_avci_extradata</name><argument_list pos:start="137:41" pos:end="137:44">(<argument pos:start="137:42" pos:end="137:43"><expr pos:start="137:42" pos:end="137:43"><name pos:start="137:42" pos:end="137:43">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="141:23"><if pos:start="139:9" pos:end="141:23">if <condition pos:start="139:12" pos:end="139:20">(<expr pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">&lt;</operator> <literal type="number" pos:start="139:19" pos:end="139:19">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:23"><block_content pos:start="141:13" pos:end="141:23">

            <return pos:start="141:13" pos:end="141:23">return <expr pos:start="141:20" pos:end="141:22"><name pos:start="141:20" pos:end="141:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="147:5" pos:end="173:5">switch <condition pos:start="147:12" pos:end="147:32">(<expr pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:14">st</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:21">codec</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:31">codec_id</name></name></expr>)</condition> <block pos:start="147:34" pos:end="173:5">{<block_content pos:start="151:5" pos:end="171:14">

<cpp:if pos:start="149:1" pos:end="149:23">#<cpp:directive pos:start="149:2" pos:end="149:3">if</cpp:directive> <expr pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:23">CONFIG_H261_DECODER</name></expr></cpp:if>

    <case pos:start="151:5" pos:end="156:0">case <expr pos:start="151:10" pos:end="151:25"><name pos:start="151:10" pos:end="151:25">AV_CODEC_ID_H261</name></expr>:</case>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="155:1" pos:end="155:23">#<cpp:directive pos:start="155:2" pos:end="155:3">if</cpp:directive> <expr pos:start="155:5" pos:end="155:23"><name pos:start="155:5" pos:end="155:23">CONFIG_H263_DECODER</name></expr></cpp:if>

    <case pos:start="157:5" pos:end="162:0">case <expr pos:start="157:10" pos:end="157:25"><name pos:start="157:10" pos:end="157:25">AV_CODEC_ID_H263</name></expr>:</case>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="161:1" pos:end="161:24">#<cpp:directive pos:start="161:2" pos:end="161:3">if</cpp:directive> <expr pos:start="161:5" pos:end="161:24"><name pos:start="161:5" pos:end="161:24">CONFIG_MPEG4_DECODER</name></expr></cpp:if>

    <case pos:start="163:5" pos:end="166:0">case <expr pos:start="163:10" pos:end="163:26"><name pos:start="163:10" pos:end="163:26">AV_CODEC_ID_MPEG4</name></expr>:</case>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="167:9" pos:end="167:29"><expr pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:10">st</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:17">codec</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:24">width</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <literal type="number" pos:start="167:28" pos:end="167:28">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="167:31" pos:end="167:65">/* let decoder init width/height */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:29"><expr pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:10">st</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:17">codec</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:25">height</name></name><operator pos:start="169:26" pos:end="169:26">=</operator> <literal type="number" pos:start="169:28" pos:end="169:28">0</literal></expr>;</expr_stmt>

        <break pos:start="171:9" pos:end="171:14">break;</break>

    </block_content>}</block></switch>



    <comment type="line" pos:start="177:5" pos:end="177:88">// If the duration of the mp3 packets is not constant, then they could need a parser</comment>

    <if_stmt pos:start="179:5" pos:end="189:5"><if pos:start="179:5" pos:end="189:5">if <condition pos:start="179:8" pos:end="185:52">(<expr pos:start="179:9" pos:end="185:51"><name pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:10">st</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:17">codec</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:27">codec_id</name></name> <operator pos:start="179:29" pos:end="179:30">==</operator> <name pos:start="179:32" pos:end="179:46">AV_CODEC_ID_MP3</name>

        <operator pos:start="181:9" pos:end="181:10">&amp;&amp;</operator> <name pos:start="181:12" pos:end="181:25"><name pos:start="181:12" pos:end="181:13">sc</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:25">stts_count</name></name> <operator pos:start="181:27" pos:end="181:27">&gt;</operator> <literal type="number" pos:start="181:29" pos:end="181:29">3</literal>

        <operator pos:start="183:9" pos:end="183:10">&amp;&amp;</operator> <name pos:start="183:12" pos:end="183:25"><name pos:start="183:12" pos:end="183:13">sc</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:25">stts_count</name></name><operator pos:start="183:26" pos:end="183:26">*</operator><literal type="number" pos:start="183:27" pos:end="183:28">10</literal> <operator pos:start="183:30" pos:end="183:30">&gt;</operator> <name pos:start="183:32" pos:end="183:44"><name pos:start="183:32" pos:end="183:33">st</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:44">nb_frames</name></name>

        <operator pos:start="185:9" pos:end="185:10">&amp;&amp;</operator> <name pos:start="185:12" pos:end="185:25"><name pos:start="185:12" pos:end="185:13">sc</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:25">time_scale</name></name> <operator pos:start="185:27" pos:end="185:28">==</operator> <name pos:start="185:30" pos:end="185:51"><name pos:start="185:30" pos:end="185:31">st</name><operator pos:start="185:32" pos:end="185:33">-&gt;</operator><name pos:start="185:34" pos:end="185:38">codec</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:51">sample_rate</name></name></expr>)</condition> <block pos:start="185:54" pos:end="189:5">{<block_content pos:start="187:13" pos:end="187:51">

            <expr_stmt pos:start="187:13" pos:end="187:51"><expr pos:start="187:13" pos:end="187:50"><name pos:start="187:13" pos:end="187:28"><name pos:start="187:13" pos:end="187:14">st</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:28">need_parsing</name></name> <operator pos:start="187:30" pos:end="187:30">=</operator> <name pos:start="187:32" pos:end="187:50">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="191:5" pos:end="191:36">/* Do not need those anymore. */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:33"><expr pos:start="193:5" pos:end="193:32"><call pos:start="193:5" pos:end="193:32"><name pos:start="193:5" pos:end="193:12">av_freep</name><argument_list pos:start="193:13" pos:end="193:32">(<argument pos:start="193:14" pos:end="193:31"><expr pos:start="193:14" pos:end="193:31"><operator pos:start="193:14" pos:end="193:14">&amp;</operator><name pos:start="193:15" pos:end="193:31"><name pos:start="193:15" pos:end="193:16">sc</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:31">chunk_offsets</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:29"><expr pos:start="195:5" pos:end="195:28"><call pos:start="195:5" pos:end="195:28"><name pos:start="195:5" pos:end="195:12">av_freep</name><argument_list pos:start="195:13" pos:end="195:28">(<argument pos:start="195:14" pos:end="195:27"><expr pos:start="195:14" pos:end="195:27"><operator pos:start="195:14" pos:end="195:14">&amp;</operator><name pos:start="195:15" pos:end="195:27"><name pos:start="195:15" pos:end="195:16">sc</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:27">stsc_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:32"><expr pos:start="197:5" pos:end="197:31"><call pos:start="197:5" pos:end="197:31"><name pos:start="197:5" pos:end="197:12">av_freep</name><argument_list pos:start="197:13" pos:end="197:31">(<argument pos:start="197:14" pos:end="197:30"><expr pos:start="197:14" pos:end="197:30"><operator pos:start="197:14" pos:end="197:14">&amp;</operator><name pos:start="197:15" pos:end="197:30"><name pos:start="197:15" pos:end="197:16">sc</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:30">sample_sizes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:29"><expr pos:start="199:5" pos:end="199:28"><call pos:start="199:5" pos:end="199:28"><name pos:start="199:5" pos:end="199:12">av_freep</name><argument_list pos:start="199:13" pos:end="199:28">(<argument pos:start="199:14" pos:end="199:27"><expr pos:start="199:14" pos:end="199:27"><operator pos:start="199:14" pos:end="199:14">&amp;</operator><name pos:start="199:15" pos:end="199:27"><name pos:start="199:15" pos:end="199:16">sc</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:27">keyframes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:29"><expr pos:start="201:5" pos:end="201:28"><call pos:start="201:5" pos:end="201:28"><name pos:start="201:5" pos:end="201:12">av_freep</name><argument_list pos:start="201:13" pos:end="201:28">(<argument pos:start="201:14" pos:end="201:27"><expr pos:start="201:14" pos:end="201:27"><operator pos:start="201:14" pos:end="201:14">&amp;</operator><name pos:start="201:15" pos:end="201:27"><name pos:start="201:15" pos:end="201:16">sc</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:27">stts_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:29"><expr pos:start="203:5" pos:end="203:28"><call pos:start="203:5" pos:end="203:28"><name pos:start="203:5" pos:end="203:12">av_freep</name><argument_list pos:start="203:13" pos:end="203:28">(<argument pos:start="203:14" pos:end="203:27"><expr pos:start="203:14" pos:end="203:27"><operator pos:start="203:14" pos:end="203:14">&amp;</operator><name pos:start="203:15" pos:end="203:27"><name pos:start="203:15" pos:end="203:16">sc</name><operator pos:start="203:17" pos:end="203:18">-&gt;</operator><name pos:start="203:19" pos:end="203:27">stps_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:29"><expr pos:start="205:5" pos:end="205:28"><call pos:start="205:5" pos:end="205:28"><name pos:start="205:5" pos:end="205:12">av_freep</name><argument_list pos:start="205:13" pos:end="205:28">(<argument pos:start="205:14" pos:end="205:27"><expr pos:start="205:14" pos:end="205:27"><operator pos:start="205:14" pos:end="205:14">&amp;</operator><name pos:start="205:15" pos:end="205:27"><name pos:start="205:15" pos:end="205:16">sc</name><operator pos:start="205:17" pos:end="205:18">-&gt;</operator><name pos:start="205:19" pos:end="205:27">elst_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:29"><expr pos:start="207:5" pos:end="207:28"><call pos:start="207:5" pos:end="207:28"><name pos:start="207:5" pos:end="207:12">av_freep</name><argument_list pos:start="207:13" pos:end="207:28">(<argument pos:start="207:14" pos:end="207:27"><expr pos:start="207:14" pos:end="207:27"><operator pos:start="207:14" pos:end="207:14">&amp;</operator><name pos:start="207:15" pos:end="207:27"><name pos:start="207:15" pos:end="207:16">sc</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:27">rap_group</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><literal type="number" pos:start="211:12" pos:end="211:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
