<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25127.c" pos:tabs="8"><function pos:start="1:1" pos:end="290:14"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ffm_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="290:14">{<block_content pos:start="5:5" pos:end="290:14">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FFMContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ffm</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:29"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:27">AVCodecDescriptor</name> <modifier pos:start="13:29" pos:end="13:29">*</modifier></type><name pos:start="13:30" pos:end="13:39">codec_desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:21">nb_streams</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:16">tag</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:16">/* header */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:24"><expr pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:7">tag</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:23"><name pos:start="23:11" pos:end="23:19">avio_rl32</name><argument_list pos:start="23:20" pos:end="23:23">(<argument pos:start="23:21" pos:end="23:22"><expr pos:start="23:21" pos:end="23:22"><name pos:start="23:21" pos:end="23:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:41">(<expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:11">tag</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <call pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:20">MKTAG</name><argument_list pos:start="25:21" pos:end="25:40">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><literal type="char" pos:start="25:22" pos:end="25:24">'F'</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><literal type="char" pos:start="25:27" pos:end="25:29">'F'</literal></expr></argument>, <argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><literal type="char" pos:start="25:32" pos:end="25:34">'M'</literal></expr></argument>, <argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><literal type="char" pos:start="25:37" pos:end="25:39">'2'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><call pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:31">ffm2_read_header</name><argument_list pos:start="27:32" pos:end="27:34">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">s</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="32:37"><if pos:start="29:5" pos:end="32:37">if <condition pos:start="29:8" pos:end="29:41">(<expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:11">tag</name> <operator pos:start="29:13" pos:end="29:14">!=</operator> <call pos:start="29:16" pos:end="29:40"><name pos:start="29:16" pos:end="29:20">MKTAG</name><argument_list pos:start="29:21" pos:end="29:40">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><literal type="char" pos:start="29:22" pos:end="29:24">'F'</literal></expr></argument>, <argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><literal type="char" pos:start="29:27" pos:end="29:29">'F'</literal></expr></argument>, <argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><literal type="char" pos:start="29:32" pos:end="29:34">'M'</literal></expr></argument>, <argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><literal type="char" pos:start="29:37" pos:end="29:39">'1'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="32:5" pos:end="32:37"><block_content pos:start="32:5" pos:end="32:37">


    <expr_stmt pos:start="32:5" pos:end="32:37"><expr pos:start="32:5" pos:end="32:36"><name pos:start="32:5" pos:end="32:20"><name pos:start="32:5" pos:end="32:7">ffm</name><operator pos:start="32:8" pos:end="32:9">-&gt;</operator><name pos:start="32:10" pos:end="32:20">packet_size</name></name> <operator pos:start="32:22" pos:end="32:22">=</operator> <call pos:start="32:24" pos:end="32:36"><name pos:start="32:24" pos:end="32:32">avio_rb32</name><argument_list pos:start="32:33" pos:end="32:36">(<argument pos:start="32:34" pos:end="32:35"><expr pos:start="32:34" pos:end="32:35"><name pos:start="32:34" pos:end="32:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="34:5" pos:end="37:37"><if pos:start="34:5" pos:end="37:37">if <condition pos:start="34:8" pos:end="34:44">(<expr pos:start="34:9" pos:end="34:43"><name pos:start="34:9" pos:end="34:24"><name pos:start="34:9" pos:end="34:11">ffm</name><operator pos:start="34:12" pos:end="34:13">-&gt;</operator><name pos:start="34:14" pos:end="34:24">packet_size</name></name> <operator pos:start="34:26" pos:end="34:27">!=</operator> <name pos:start="34:29" pos:end="34:43">FFM_PACKET_SIZE</name></expr>)</condition><block type="pseudo" pos:start="37:5" pos:end="37:37"><block_content pos:start="37:5" pos:end="37:37">


    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:7">ffm</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:20">write_index</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:36"><name pos:start="37:24" pos:end="37:32">avio_rb64</name><argument_list pos:start="37:33" pos:end="37:36">(<argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:27">/* get also filesize */</comment>

    <if_stmt pos:start="41:5" pos:end="290:14"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:10">pb</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:20">seekable</name></name></expr>)</condition> <block pos:start="41:23" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:34">

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">ffm</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">file_size</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <call pos:start="43:26" pos:end="43:38"><name pos:start="43:26" pos:end="43:34">avio_size</name><argument_list pos:start="43:35" pos:end="43:38">(<argument pos:start="43:36" pos:end="43:37"><expr pos:start="43:36" pos:end="43:37"><name pos:start="43:36" pos:end="43:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:34"><if pos:start="45:9" pos:end="47:34">if <condition pos:start="45:12" pos:end="45:34">(<expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:15">ffm</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:28">write_index</name></name> <operator pos:start="45:30" pos:end="45:31">&amp;&amp;</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:34"><block_content pos:start="47:13" pos:end="47:34">

            <expr_stmt pos:start="47:13" pos:end="47:34"><expr pos:start="47:13" pos:end="47:33"><call pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:30">adjust_write_index</name><argument_list pos:start="47:31" pos:end="47:33">(<argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="290:14">else <block pos:start="49:12" pos:end="290:14">{<block_content pos:start="51:9" pos:end="290:14">

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:11">ffm</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:22">file_size</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <operator pos:start="51:26" pos:end="51:26">(</operator><call pos:start="51:27" pos:end="51:37"><name pos:start="51:27" pos:end="51:34">UINT64_C</name><argument_list pos:start="51:35" pos:end="51:37">(<argument pos:start="51:36" pos:end="51:36"><expr pos:start="51:36" pos:end="51:36"><literal type="number" pos:start="51:36" pos:end="51:36">1</literal></expr></argument>)</argument_list></call> <operator pos:start="51:39" pos:end="51:40">&lt;&lt;</operator> <literal type="number" pos:start="51:42" pos:end="51:43">63</literal><operator pos:start="51:44" pos:end="51:44">)</operator> <operator pos:start="51:46" pos:end="51:46">-</operator> <literal type="number" pos:start="51:48" pos:end="51:48">1</literal></expr>;</expr_stmt>




    <expr_stmt pos:start="56:5" pos:end="56:31"><expr pos:start="56:5" pos:end="56:30"><name pos:start="56:5" pos:end="56:14">nb_streams</name> <operator pos:start="56:16" pos:end="56:16">=</operator> <call pos:start="56:18" pos:end="56:30"><name pos:start="56:18" pos:end="56:26">avio_rb32</name><argument_list pos:start="56:27" pos:end="56:30">(<argument pos:start="56:28" pos:end="56:29"><expr pos:start="56:28" pos:end="56:29"><name pos:start="56:28" pos:end="56:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="58:5" pos:end="58:18"><expr pos:start="58:5" pos:end="58:17"><call pos:start="58:5" pos:end="58:17"><name pos:start="58:5" pos:end="58:13">avio_rb32</name><argument_list pos:start="58:14" pos:end="58:17">(<argument pos:start="58:15" pos:end="58:16"><expr pos:start="58:15" pos:end="58:16"><name pos:start="58:15" pos:end="58:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="58:20" pos:end="58:38">/* total bitrate */</comment>

    <comment type="block" pos:start="60:5" pos:end="60:26">/* read each stream */</comment>

    <for pos:start="62:5" pos:end="290:14">for<control pos:start="62:8" pos:end="62:29">(<init pos:start="62:9" pos:end="62:12"><expr pos:start="62:9" pos:end="62:11"><name pos:start="62:9" pos:end="62:9">i</name><operator pos:start="62:10" pos:end="62:10">=</operator><literal type="number" pos:start="62:11" pos:end="62:11">0</literal></expr>;</init><condition pos:start="62:13" pos:end="62:25"><expr pos:start="62:13" pos:end="62:24"><name pos:start="62:13" pos:end="62:13">i</name><operator pos:start="62:14" pos:end="62:14">&lt;</operator><name pos:start="62:15" pos:end="62:24">nb_streams</name></expr>;</condition><incr pos:start="62:26" pos:end="62:28"><expr pos:start="62:26" pos:end="62:28"><name pos:start="62:26" pos:end="62:26">i</name><operator pos:start="62:27" pos:end="62:28">++</operator></expr></incr>)</control> <block pos:start="62:31" pos:end="290:14">{<block_content pos:start="64:9" pos:end="290:14">

        <decl_stmt pos:start="64:9" pos:end="64:28"><decl pos:start="64:9" pos:end="64:27"><type pos:start="64:9" pos:end="64:12"><name pos:start="64:9" pos:end="64:12">char</name></type> <name pos:start="64:14" pos:end="64:27"><name pos:start="64:14" pos:end="64:22">rc_eq_buf</name><index pos:start="64:23" pos:end="64:27">[<expr pos:start="64:24" pos:end="64:26"><literal type="number" pos:start="64:24" pos:end="64:26">128</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="68:9" pos:end="68:42"><expr pos:start="68:9" pos:end="68:41"><name pos:start="68:9" pos:end="68:10">st</name> <operator pos:start="68:12" pos:end="68:12">=</operator> <call pos:start="68:14" pos:end="68:41"><name pos:start="68:14" pos:end="68:32">avformat_new_stream</name><argument_list pos:start="68:33" pos:end="68:41">(<argument pos:start="68:34" pos:end="68:34"><expr pos:start="68:34" pos:end="68:34"><name pos:start="68:34" pos:end="68:34">s</name></expr></argument>, <argument pos:start="68:37" pos:end="68:40"><expr pos:start="68:37" pos:end="68:40"><name pos:start="68:37" pos:end="68:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="70:9" pos:end="75:48"><if pos:start="70:9" pos:end="75:48">if <condition pos:start="70:12" pos:end="70:16">(<expr pos:start="70:13" pos:end="70:15"><operator pos:start="70:13" pos:end="70:13">!</operator><name pos:start="70:14" pos:end="70:15">st</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:48"><block_content pos:start="75:9" pos:end="75:48">




        <expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><call pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:27">avpriv_set_pts_info</name><argument_list pos:start="75:28" pos:end="75:47">(<argument pos:start="75:29" pos:end="75:30"><expr pos:start="75:29" pos:end="75:30"><name pos:start="75:29" pos:end="75:30">st</name></expr></argument>, <argument pos:start="75:33" pos:end="75:34"><expr pos:start="75:33" pos:end="75:34"><literal type="number" pos:start="75:33" pos:end="75:34">64</literal></expr></argument>, <argument pos:start="75:37" pos:end="75:37"><expr pos:start="75:37" pos:end="75:37"><literal type="number" pos:start="75:37" pos:end="75:37">1</literal></expr></argument>, <argument pos:start="75:40" pos:end="75:46"><expr pos:start="75:40" pos:end="75:46"><literal type="number" pos:start="75:40" pos:end="75:46">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:26"><expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:13">codec</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:18">st</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:25">codec</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="81:9" pos:end="81:26">/* generic info */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:40"><expr pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">codec_id</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <call pos:start="83:27" pos:end="83:39"><name pos:start="83:27" pos:end="83:35">avio_rb32</name><argument_list pos:start="83:36" pos:end="83:39">(<argument pos:start="83:37" pos:end="83:38"><expr pos:start="83:37" pos:end="83:38"><name pos:start="83:37" pos:end="83:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:61"><expr pos:start="85:9" pos:end="85:60"><name pos:start="85:9" pos:end="85:18">codec_desc</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:60"><name pos:start="85:22" pos:end="85:43">avcodec_descriptor_get</name><argument_list pos:start="85:44" pos:end="85:60">(<argument pos:start="85:45" pos:end="85:59"><expr pos:start="85:45" pos:end="85:59"><name pos:start="85:45" pos:end="85:59"><name pos:start="85:45" pos:end="85:49">codec</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:59">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="290:14"><if pos:start="87:9" pos:end="290:14">if <condition pos:start="87:12" pos:end="87:24">(<expr pos:start="87:13" pos:end="87:23"><operator pos:start="87:13" pos:end="87:13">!</operator><name pos:start="87:14" pos:end="87:23">codec_desc</name></expr>)</condition> <block pos:start="87:26" pos:end="290:14">{<block_content pos:start="89:13" pos:end="290:14">

            <expr_stmt pos:start="89:13" pos:end="89:79"><expr pos:start="89:13" pos:end="89:78"><call pos:start="89:13" pos:end="89:78"><name pos:start="89:13" pos:end="89:18">av_log</name><argument_list pos:start="89:19" pos:end="89:78">(<argument pos:start="89:20" pos:end="89:20"><expr pos:start="89:20" pos:end="89:20"><name pos:start="89:20" pos:end="89:20">s</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="89:60"><expr pos:start="89:37" pos:end="89:60"><literal type="string" pos:start="89:37" pos:end="89:60">"Invalid codec id: %d\n"</literal></expr></argument>, <argument pos:start="89:63" pos:end="89:77"><expr pos:start="89:63" pos:end="89:77"><name pos:start="89:63" pos:end="89:77"><name pos:start="89:63" pos:end="89:67">codec</name><operator pos:start="89:68" pos:end="89:69">-&gt;</operator><name pos:start="89:70" pos:end="89:77">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:47"><expr pos:start="91:13" pos:end="91:46"><name pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:17">codec</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:27">codec_id</name></name> <operator pos:start="91:29" pos:end="91:29">=</operator> <name pos:start="91:31" pos:end="91:46">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:13">codec</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:25">codec_type</name></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <call pos:start="95:29" pos:end="95:39"><name pos:start="95:29" pos:end="95:35">avio_r8</name><argument_list pos:start="95:36" pos:end="95:39">(<argument pos:start="95:37" pos:end="95:38"><expr pos:start="95:37" pos:end="95:38"><name pos:start="95:37" pos:end="95:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:42" pos:end="95:57">/* codec_type */</comment>

        <if_stmt pos:start="97:9" pos:end="290:14"><if pos:start="97:9" pos:end="290:14">if <condition pos:start="97:12" pos:end="97:50">(<expr pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:17">codec</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:29">codec_type</name></name> <operator pos:start="97:31" pos:end="97:32">!=</operator> <name pos:start="97:34" pos:end="97:49"><name pos:start="97:34" pos:end="97:43">codec_desc</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:49">type</name></name></expr>)</condition> <block pos:start="97:52" pos:end="290:14">{<block_content pos:start="99:13" pos:end="290:14">

            <expr_stmt pos:start="99:13" pos:end="101:56"><expr pos:start="99:13" pos:end="101:55"><call pos:start="99:13" pos:end="101:55"><name pos:start="99:13" pos:end="99:18">av_log</name><argument_list pos:start="99:19" pos:end="101:55">(<argument pos:start="99:20" pos:end="99:20"><expr pos:start="99:20" pos:end="99:20"><name pos:start="99:20" pos:end="99:20">s</name></expr></argument>, <argument pos:start="99:23" pos:end="99:34"><expr pos:start="99:23" pos:end="99:34"><name pos:start="99:23" pos:end="99:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:37" pos:end="99:82"><expr pos:start="99:37" pos:end="99:82"><literal type="string" pos:start="99:37" pos:end="99:82">"Codec type mismatch: expected %d, found %d\n"</literal></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:35"><expr pos:start="101:20" pos:end="101:35"><name pos:start="101:20" pos:end="101:35"><name pos:start="101:20" pos:end="101:29">codec_desc</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:35">type</name></name></expr></argument>, <argument pos:start="101:38" pos:end="101:54"><expr pos:start="101:38" pos:end="101:54"><name pos:start="101:38" pos:end="101:54"><name pos:start="101:38" pos:end="101:42">codec</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:54">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:47"><expr pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:17">codec</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:27">codec_id</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <name pos:start="103:31" pos:end="103:46">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:53"><expr pos:start="105:13" pos:end="105:52"><name pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:17">codec</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:29">codec_type</name></name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:52">AVMEDIA_TYPE_UNKNOWN</name></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><name pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:13">codec</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:23">bit_rate</name></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <call pos:start="109:27" pos:end="109:39"><name pos:start="109:27" pos:end="109:35">avio_rb32</name><argument_list pos:start="109:36" pos:end="109:39">(<argument pos:start="109:37" pos:end="109:38"><expr pos:start="109:37" pos:end="109:38"><name pos:start="109:37" pos:end="109:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:20"><name pos:start="111:9" pos:end="111:13">codec</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:20">flags</name></name> <operator pos:start="111:22" pos:end="111:22">=</operator> <call pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:32">avio_rb32</name><argument_list pos:start="111:33" pos:end="111:36">(<argument pos:start="111:34" pos:end="111:35"><expr pos:start="111:34" pos:end="111:35"><name pos:start="111:34" pos:end="111:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:38"><expr pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:21"><name pos:start="113:9" pos:end="113:13">codec</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:21">flags2</name></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <call pos:start="113:25" pos:end="113:37"><name pos:start="113:25" pos:end="113:33">avio_rb32</name><argument_list pos:start="113:34" pos:end="113:37">(<argument pos:start="113:35" pos:end="113:36"><expr pos:start="113:35" pos:end="113:36"><name pos:start="113:35" pos:end="113:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:37"><expr pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:13">codec</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:20">debug</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:32">avio_rb32</name><argument_list pos:start="115:33" pos:end="115:36">(<argument pos:start="115:34" pos:end="115:35"><expr pos:start="115:34" pos:end="115:35"><name pos:start="115:34" pos:end="115:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="117:9" pos:end="117:27">/* specific info */</comment>

        <switch pos:start="119:9" pos:end="290:14">switch<condition pos:start="119:15" pos:end="119:33">(<expr pos:start="119:16" pos:end="119:32"><name pos:start="119:16" pos:end="119:32"><name pos:start="119:16" pos:end="119:20">codec</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:32">codec_type</name></name></expr>)</condition> <block pos:start="119:35" pos:end="290:14">{<block_content pos:start="121:9" pos:end="290:14">

        <case pos:start="121:9" pos:end="121:32">case <expr pos:start="121:14" pos:end="121:31"><name pos:start="121:14" pos:end="121:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:49"><expr pos:start="123:13" pos:end="123:48"><name pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:17">codec</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:28">time_base</name><operator pos:start="123:29" pos:end="123:29">.</operator><name pos:start="123:30" pos:end="123:32">num</name></name> <operator pos:start="123:34" pos:end="123:34">=</operator> <call pos:start="123:36" pos:end="123:48"><name pos:start="123:36" pos:end="123:44">avio_rb32</name><argument_list pos:start="123:45" pos:end="123:48">(<argument pos:start="123:46" pos:end="123:47"><expr pos:start="123:46" pos:end="123:47"><name pos:start="123:46" pos:end="123:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:49"><expr pos:start="125:13" pos:end="125:48"><name pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:17">codec</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:28">time_base</name><operator pos:start="125:29" pos:end="125:29">.</operator><name pos:start="125:30" pos:end="125:32">den</name></name> <operator pos:start="125:34" pos:end="125:34">=</operator> <call pos:start="125:36" pos:end="125:48"><name pos:start="125:36" pos:end="125:44">avio_rb32</name><argument_list pos:start="125:45" pos:end="125:48">(<argument pos:start="125:46" pos:end="125:47"><expr pos:start="125:46" pos:end="125:47"><name pos:start="125:46" pos:end="125:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="290:14"><if pos:start="127:13" pos:end="290:14">if <condition pos:start="127:16" pos:end="127:71">(<expr pos:start="127:17" pos:end="127:70"><name pos:start="127:17" pos:end="127:36"><name pos:start="127:17" pos:end="127:21">codec</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:32">time_base</name><operator pos:start="127:33" pos:end="127:33">.</operator><name pos:start="127:34" pos:end="127:36">num</name></name> <operator pos:start="127:38" pos:end="127:39">&lt;=</operator> <literal type="number" pos:start="127:41" pos:end="127:41">0</literal> <operator pos:start="127:43" pos:end="127:44">||</operator> <name pos:start="127:46" pos:end="127:65"><name pos:start="127:46" pos:end="127:50">codec</name><operator pos:start="127:51" pos:end="127:52">-&gt;</operator><name pos:start="127:53" pos:end="127:61">time_base</name><operator pos:start="127:62" pos:end="127:62">.</operator><name pos:start="127:63" pos:end="127:65">den</name></name> <operator pos:start="127:67" pos:end="127:68">&lt;=</operator> <literal type="number" pos:start="127:70" pos:end="127:70">0</literal></expr>)</condition> <block pos:start="127:73" pos:end="290:14">{<block_content pos:start="129:17" pos:end="290:14">

                <expr_stmt pos:start="129:17" pos:end="131:67"><expr pos:start="129:17" pos:end="131:66"><call pos:start="129:17" pos:end="131:66"><name pos:start="129:17" pos:end="129:22">av_log</name><argument_list pos:start="129:23" pos:end="131:66">(<argument pos:start="129:24" pos:end="129:24"><expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">s</name></expr></argument>, <argument pos:start="129:27" pos:end="129:38"><expr pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:41" pos:end="129:67"><expr pos:start="129:41" pos:end="129:67"><literal type="string" pos:start="129:41" pos:end="129:67">"Invalid time base %d/%d\n"</literal></expr></argument>,

                       <argument pos:start="131:24" pos:end="131:43"><expr pos:start="131:24" pos:end="131:43"><name pos:start="131:24" pos:end="131:43"><name pos:start="131:24" pos:end="131:28">codec</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:39">time_base</name><operator pos:start="131:40" pos:end="131:40">.</operator><name pos:start="131:41" pos:end="131:43">num</name></name></expr></argument>, <argument pos:start="131:46" pos:end="131:65"><expr pos:start="131:46" pos:end="131:65"><name pos:start="131:46" pos:end="131:65"><name pos:start="131:46" pos:end="131:50">codec</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:61">time_base</name><operator pos:start="131:62" pos:end="131:62">.</operator><name pos:start="131:63" pos:end="131:65">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:24"><name pos:start="135:13" pos:end="135:17">codec</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:24">width</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <call pos:start="135:28" pos:end="135:40"><name pos:start="135:28" pos:end="135:36">avio_rb16</name><argument_list pos:start="135:37" pos:end="135:40">(<argument pos:start="135:38" pos:end="135:39"><expr pos:start="135:38" pos:end="135:39"><name pos:start="135:38" pos:end="135:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:17">codec</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:25">height</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <call pos:start="137:29" pos:end="137:41"><name pos:start="137:29" pos:end="137:37">avio_rb16</name><argument_list pos:start="137:38" pos:end="137:41">(<argument pos:start="137:39" pos:end="137:40"><expr pos:start="137:39" pos:end="137:40"><name pos:start="137:39" pos:end="137:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:44"><expr pos:start="139:13" pos:end="139:43"><name pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:17">codec</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:27">gop_size</name></name> <operator pos:start="139:29" pos:end="139:29">=</operator> <call pos:start="139:31" pos:end="139:43"><name pos:start="139:31" pos:end="139:39">avio_rb16</name><argument_list pos:start="139:40" pos:end="139:43">(<argument pos:start="139:41" pos:end="139:42"><expr pos:start="139:41" pos:end="139:42"><name pos:start="139:41" pos:end="139:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:43"><expr pos:start="141:13" pos:end="141:42"><name pos:start="141:13" pos:end="141:26"><name pos:start="141:13" pos:end="141:17">codec</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:26">pix_fmt</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <call pos:start="141:30" pos:end="141:42"><name pos:start="141:30" pos:end="141:38">avio_rb32</name><argument_list pos:start="141:39" pos:end="141:42">(<argument pos:start="141:40" pos:end="141:41"><expr pos:start="141:40" pos:end="141:41"><name pos:start="141:40" pos:end="141:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






            <expr_stmt pos:start="148:13" pos:end="148:38"><expr pos:start="148:13" pos:end="148:37"><name pos:start="148:13" pos:end="148:23"><name pos:start="148:13" pos:end="148:17">codec</name><operator pos:start="148:18" pos:end="148:19">-&gt;</operator><name pos:start="148:20" pos:end="148:23">qmin</name></name> <operator pos:start="148:25" pos:end="148:25">=</operator> <call pos:start="148:27" pos:end="148:37"><name pos:start="148:27" pos:end="148:33">avio_r8</name><argument_list pos:start="148:34" pos:end="148:37">(<argument pos:start="148:35" pos:end="148:36"><expr pos:start="148:35" pos:end="148:36"><name pos:start="148:35" pos:end="148:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="150:13" pos:end="150:38"><expr pos:start="150:13" pos:end="150:37"><name pos:start="150:13" pos:end="150:23"><name pos:start="150:13" pos:end="150:17">codec</name><operator pos:start="150:18" pos:end="150:19">-&gt;</operator><name pos:start="150:20" pos:end="150:23">qmax</name></name> <operator pos:start="150:25" pos:end="150:25">=</operator> <call pos:start="150:27" pos:end="150:37"><name pos:start="150:27" pos:end="150:33">avio_r8</name><argument_list pos:start="150:34" pos:end="150:37">(<argument pos:start="150:35" pos:end="150:36"><expr pos:start="150:35" pos:end="150:36"><name pos:start="150:35" pos:end="150:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="152:13" pos:end="152:43"><expr pos:start="152:13" pos:end="152:42"><name pos:start="152:13" pos:end="152:28"><name pos:start="152:13" pos:end="152:17">codec</name><operator pos:start="152:18" pos:end="152:19">-&gt;</operator><name pos:start="152:20" pos:end="152:28">max_qdiff</name></name> <operator pos:start="152:30" pos:end="152:30">=</operator> <call pos:start="152:32" pos:end="152:42"><name pos:start="152:32" pos:end="152:38">avio_r8</name><argument_list pos:start="152:39" pos:end="152:42">(<argument pos:start="152:40" pos:end="152:41"><expr pos:start="152:40" pos:end="152:41"><name pos:start="152:40" pos:end="152:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="154:13" pos:end="154:55"><expr pos:start="154:13" pos:end="154:54"><name pos:start="154:13" pos:end="154:28"><name pos:start="154:13" pos:end="154:17">codec</name><operator pos:start="154:18" pos:end="154:19">-&gt;</operator><name pos:start="154:20" pos:end="154:28">qcompress</name></name> <operator pos:start="154:30" pos:end="154:30">=</operator> <call pos:start="154:32" pos:end="154:44"><name pos:start="154:32" pos:end="154:40">avio_rb16</name><argument_list pos:start="154:41" pos:end="154:44">(<argument pos:start="154:42" pos:end="154:43"><expr pos:start="154:42" pos:end="154:43"><name pos:start="154:42" pos:end="154:43">pb</name></expr></argument>)</argument_list></call> <operator pos:start="154:46" pos:end="154:46">/</operator> <literal type="number" pos:start="154:48" pos:end="154:54">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="156:13" pos:end="156:51"><expr pos:start="156:13" pos:end="156:50"><name pos:start="156:13" pos:end="156:24"><name pos:start="156:13" pos:end="156:17">codec</name><operator pos:start="156:18" pos:end="156:19">-&gt;</operator><name pos:start="156:20" pos:end="156:24">qblur</name></name> <operator pos:start="156:26" pos:end="156:26">=</operator> <call pos:start="156:28" pos:end="156:40"><name pos:start="156:28" pos:end="156:36">avio_rb16</name><argument_list pos:start="156:37" pos:end="156:40">(<argument pos:start="156:38" pos:end="156:39"><expr pos:start="156:38" pos:end="156:39"><name pos:start="156:38" pos:end="156:39">pb</name></expr></argument>)</argument_list></call> <operator pos:start="156:42" pos:end="156:42">/</operator> <literal type="number" pos:start="156:44" pos:end="156:50">10000.0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="158:13" pos:end="158:54"><expr pos:start="158:13" pos:end="158:53"><name pos:start="158:13" pos:end="158:37"><name pos:start="158:13" pos:end="158:17">codec</name><operator pos:start="158:18" pos:end="158:19">-&gt;</operator><name pos:start="158:20" pos:end="158:37">bit_rate_tolerance</name></name> <operator pos:start="158:39" pos:end="158:39">=</operator> <call pos:start="158:41" pos:end="158:53"><name pos:start="158:41" pos:end="158:49">avio_rb32</name><argument_list pos:start="158:50" pos:end="158:53">(<argument pos:start="158:51" pos:end="158:52"><expr pos:start="158:51" pos:end="158:52"><name pos:start="158:51" pos:end="158:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="160:13" pos:end="160:68"><expr pos:start="160:13" pos:end="160:67"><call pos:start="160:13" pos:end="160:67"><name pos:start="160:13" pos:end="160:24">avio_get_str</name><argument_list pos:start="160:25" pos:end="160:67">(<argument pos:start="160:26" pos:end="160:27"><expr pos:start="160:26" pos:end="160:27"><name pos:start="160:26" pos:end="160:27">pb</name></expr></argument>, <argument pos:start="160:30" pos:end="160:36"><expr pos:start="160:30" pos:end="160:36"><name pos:start="160:30" pos:end="160:36">INT_MAX</name></expr></argument>, <argument pos:start="160:39" pos:end="160:47"><expr pos:start="160:39" pos:end="160:47"><name pos:start="160:39" pos:end="160:47">rc_eq_buf</name></expr></argument>, <argument pos:start="160:50" pos:end="160:66"><expr pos:start="160:50" pos:end="160:66"><sizeof pos:start="160:50" pos:end="160:66">sizeof<argument_list pos:start="160:56" pos:end="160:66">(<argument pos:start="160:57" pos:end="160:65"><expr pos:start="160:57" pos:end="160:65"><name pos:start="160:57" pos:end="160:65">rc_eq_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="162:13" pos:end="162:48"><expr pos:start="162:13" pos:end="162:47"><name pos:start="162:13" pos:end="162:24"><name pos:start="162:13" pos:end="162:17">codec</name><operator pos:start="162:18" pos:end="162:19">-&gt;</operator><name pos:start="162:20" pos:end="162:24">rc_eq</name></name> <operator pos:start="162:26" pos:end="162:26">=</operator> <call pos:start="162:28" pos:end="162:47"><name pos:start="162:28" pos:end="162:36">av_strdup</name><argument_list pos:start="162:37" pos:end="162:47">(<argument pos:start="162:38" pos:end="162:46"><expr pos:start="162:38" pos:end="162:46"><name pos:start="162:38" pos:end="162:46">rc_eq_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="164:13" pos:end="164:47"><expr pos:start="164:13" pos:end="164:46"><name pos:start="164:13" pos:end="164:30"><name pos:start="164:13" pos:end="164:17">codec</name><operator pos:start="164:18" pos:end="164:19">-&gt;</operator><name pos:start="164:20" pos:end="164:30">rc_max_rate</name></name> <operator pos:start="164:32" pos:end="164:32">=</operator> <call pos:start="164:34" pos:end="164:46"><name pos:start="164:34" pos:end="164:42">avio_rb32</name><argument_list pos:start="164:43" pos:end="164:46">(<argument pos:start="164:44" pos:end="164:45"><expr pos:start="164:44" pos:end="164:45"><name pos:start="164:44" pos:end="164:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="166:13" pos:end="166:47"><expr pos:start="166:13" pos:end="166:46"><name pos:start="166:13" pos:end="166:30"><name pos:start="166:13" pos:end="166:17">codec</name><operator pos:start="166:18" pos:end="166:19">-&gt;</operator><name pos:start="166:20" pos:end="166:30">rc_min_rate</name></name> <operator pos:start="166:32" pos:end="166:32">=</operator> <call pos:start="166:34" pos:end="166:46"><name pos:start="166:34" pos:end="166:42">avio_rb32</name><argument_list pos:start="166:43" pos:end="166:46">(<argument pos:start="166:44" pos:end="166:45"><expr pos:start="166:44" pos:end="166:45"><name pos:start="166:44" pos:end="166:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="168:13" pos:end="168:50"><expr pos:start="168:13" pos:end="168:49"><name pos:start="168:13" pos:end="168:33"><name pos:start="168:13" pos:end="168:17">codec</name><operator pos:start="168:18" pos:end="168:19">-&gt;</operator><name pos:start="168:20" pos:end="168:33">rc_buffer_size</name></name> <operator pos:start="168:35" pos:end="168:35">=</operator> <call pos:start="168:37" pos:end="168:49"><name pos:start="168:37" pos:end="168:45">avio_rb32</name><argument_list pos:start="168:46" pos:end="168:49">(<argument pos:start="168:47" pos:end="168:48"><expr pos:start="168:47" pos:end="168:48"><name pos:start="168:47" pos:end="168:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="170:13" pos:end="170:65"><expr pos:start="170:13" pos:end="170:64"><name pos:start="170:13" pos:end="170:33"><name pos:start="170:13" pos:end="170:17">codec</name><operator pos:start="170:18" pos:end="170:19">-&gt;</operator><name pos:start="170:20" pos:end="170:33">i_quant_factor</name></name> <operator pos:start="170:35" pos:end="170:35">=</operator> <call pos:start="170:37" pos:end="170:64"><name pos:start="170:37" pos:end="170:49">av_int2double</name><argument_list pos:start="170:50" pos:end="170:64">(<argument pos:start="170:51" pos:end="170:63"><expr pos:start="170:51" pos:end="170:63"><call pos:start="170:51" pos:end="170:63"><name pos:start="170:51" pos:end="170:59">avio_rb64</name><argument_list pos:start="170:60" pos:end="170:63">(<argument pos:start="170:61" pos:end="170:62"><expr pos:start="170:61" pos:end="170:62"><name pos:start="170:61" pos:end="170:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="172:13" pos:end="172:65"><expr pos:start="172:13" pos:end="172:64"><name pos:start="172:13" pos:end="172:33"><name pos:start="172:13" pos:end="172:17">codec</name><operator pos:start="172:18" pos:end="172:19">-&gt;</operator><name pos:start="172:20" pos:end="172:33">b_quant_factor</name></name> <operator pos:start="172:35" pos:end="172:35">=</operator> <call pos:start="172:37" pos:end="172:64"><name pos:start="172:37" pos:end="172:49">av_int2double</name><argument_list pos:start="172:50" pos:end="172:64">(<argument pos:start="172:51" pos:end="172:63"><expr pos:start="172:51" pos:end="172:63"><call pos:start="172:51" pos:end="172:63"><name pos:start="172:51" pos:end="172:59">avio_rb64</name><argument_list pos:start="172:60" pos:end="172:63">(<argument pos:start="172:61" pos:end="172:62"><expr pos:start="172:61" pos:end="172:62"><name pos:start="172:61" pos:end="172:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="174:13" pos:end="174:65"><expr pos:start="174:13" pos:end="174:64"><name pos:start="174:13" pos:end="174:33"><name pos:start="174:13" pos:end="174:17">codec</name><operator pos:start="174:18" pos:end="174:19">-&gt;</operator><name pos:start="174:20" pos:end="174:33">i_quant_offset</name></name> <operator pos:start="174:35" pos:end="174:35">=</operator> <call pos:start="174:37" pos:end="174:64"><name pos:start="174:37" pos:end="174:49">av_int2double</name><argument_list pos:start="174:50" pos:end="174:64">(<argument pos:start="174:51" pos:end="174:63"><expr pos:start="174:51" pos:end="174:63"><call pos:start="174:51" pos:end="174:63"><name pos:start="174:51" pos:end="174:59">avio_rb64</name><argument_list pos:start="174:60" pos:end="174:63">(<argument pos:start="174:61" pos:end="174:62"><expr pos:start="174:61" pos:end="174:62"><name pos:start="174:61" pos:end="174:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="176:13" pos:end="176:65"><expr pos:start="176:13" pos:end="176:64"><name pos:start="176:13" pos:end="176:33"><name pos:start="176:13" pos:end="176:17">codec</name><operator pos:start="176:18" pos:end="176:19">-&gt;</operator><name pos:start="176:20" pos:end="176:33">b_quant_offset</name></name> <operator pos:start="176:35" pos:end="176:35">=</operator> <call pos:start="176:37" pos:end="176:64"><name pos:start="176:37" pos:end="176:49">av_int2double</name><argument_list pos:start="176:50" pos:end="176:64">(<argument pos:start="176:51" pos:end="176:63"><expr pos:start="176:51" pos:end="176:63"><call pos:start="176:51" pos:end="176:63"><name pos:start="176:51" pos:end="176:59">avio_rb64</name><argument_list pos:start="176:60" pos:end="176:63">(<argument pos:start="176:61" pos:end="176:62"><expr pos:start="176:61" pos:end="176:62"><name pos:start="176:61" pos:end="176:62">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="178:13" pos:end="178:44"><expr pos:start="178:13" pos:end="178:43"><name pos:start="178:13" pos:end="178:27"><name pos:start="178:13" pos:end="178:17">codec</name><operator pos:start="178:18" pos:end="178:19">-&gt;</operator><name pos:start="178:20" pos:end="178:27">dct_algo</name></name> <operator pos:start="178:29" pos:end="178:29">=</operator> <call pos:start="178:31" pos:end="178:43"><name pos:start="178:31" pos:end="178:39">avio_rb32</name><argument_list pos:start="178:40" pos:end="178:43">(<argument pos:start="178:41" pos:end="178:42"><expr pos:start="178:41" pos:end="178:42"><name pos:start="178:41" pos:end="178:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="180:13" pos:end="180:57"><expr pos:start="180:13" pos:end="180:56"><name pos:start="180:13" pos:end="180:40"><name pos:start="180:13" pos:end="180:17">codec</name><operator pos:start="180:18" pos:end="180:19">-&gt;</operator><name pos:start="180:20" pos:end="180:40">strict_std_compliance</name></name> <operator pos:start="180:42" pos:end="180:42">=</operator> <call pos:start="180:44" pos:end="180:56"><name pos:start="180:44" pos:end="180:52">avio_rb32</name><argument_list pos:start="180:53" pos:end="180:56">(<argument pos:start="180:54" pos:end="180:55"><expr pos:start="180:54" pos:end="180:55"><name pos:start="180:54" pos:end="180:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="182:13" pos:end="182:48"><expr pos:start="182:13" pos:end="182:47"><name pos:start="182:13" pos:end="182:31"><name pos:start="182:13" pos:end="182:17">codec</name><operator pos:start="182:18" pos:end="182:19">-&gt;</operator><name pos:start="182:20" pos:end="182:31">max_b_frames</name></name> <operator pos:start="182:33" pos:end="182:33">=</operator> <call pos:start="182:35" pos:end="182:47"><name pos:start="182:35" pos:end="182:43">avio_rb32</name><argument_list pos:start="182:44" pos:end="182:47">(<argument pos:start="182:45" pos:end="182:46"><expr pos:start="182:45" pos:end="182:46"><name pos:start="182:45" pos:end="182:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="184:13" pos:end="184:46"><expr pos:start="184:13" pos:end="184:45"><name pos:start="184:13" pos:end="184:29"><name pos:start="184:13" pos:end="184:17">codec</name><operator pos:start="184:18" pos:end="184:19">-&gt;</operator><name pos:start="184:20" pos:end="184:29">mpeg_quant</name></name> <operator pos:start="184:31" pos:end="184:31">=</operator> <call pos:start="184:33" pos:end="184:45"><name pos:start="184:33" pos:end="184:41">avio_rb32</name><argument_list pos:start="184:42" pos:end="184:45">(<argument pos:start="184:43" pos:end="184:44"><expr pos:start="184:43" pos:end="184:44"><name pos:start="184:43" pos:end="184:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="186:13" pos:end="186:54"><expr pos:start="186:13" pos:end="186:53"><name pos:start="186:13" pos:end="186:37"><name pos:start="186:13" pos:end="186:17">codec</name><operator pos:start="186:18" pos:end="186:19">-&gt;</operator><name pos:start="186:20" pos:end="186:37">intra_dc_precision</name></name> <operator pos:start="186:39" pos:end="186:39">=</operator> <call pos:start="186:41" pos:end="186:53"><name pos:start="186:41" pos:end="186:49">avio_rb32</name><argument_list pos:start="186:50" pos:end="186:53">(<argument pos:start="186:51" pos:end="186:52"><expr pos:start="186:51" pos:end="186:52"><name pos:start="186:51" pos:end="186:52">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="188:13" pos:end="188:45"><expr pos:start="188:13" pos:end="188:44"><name pos:start="188:13" pos:end="188:28"><name pos:start="188:13" pos:end="188:17">codec</name><operator pos:start="188:18" pos:end="188:19">-&gt;</operator><name pos:start="188:20" pos:end="188:28">me_method</name></name> <operator pos:start="188:30" pos:end="188:30">=</operator> <call pos:start="188:32" pos:end="188:44"><name pos:start="188:32" pos:end="188:40">avio_rb32</name><argument_list pos:start="188:41" pos:end="188:44">(<argument pos:start="188:42" pos:end="188:43"><expr pos:start="188:42" pos:end="188:43"><name pos:start="188:42" pos:end="188:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="190:13" pos:end="190:47"><expr pos:start="190:13" pos:end="190:46"><name pos:start="190:13" pos:end="190:30"><name pos:start="190:13" pos:end="190:17">codec</name><operator pos:start="190:18" pos:end="190:19">-&gt;</operator><name pos:start="190:20" pos:end="190:30">mb_decision</name></name> <operator pos:start="190:32" pos:end="190:32">=</operator> <call pos:start="190:34" pos:end="190:46"><name pos:start="190:34" pos:end="190:42">avio_rb32</name><argument_list pos:start="190:43" pos:end="190:46">(<argument pos:start="190:44" pos:end="190:45"><expr pos:start="190:44" pos:end="190:45"><name pos:start="190:44" pos:end="190:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="192:13" pos:end="192:47"><expr pos:start="192:13" pos:end="192:46"><name pos:start="192:13" pos:end="192:30"><name pos:start="192:13" pos:end="192:17">codec</name><operator pos:start="192:18" pos:end="192:19">-&gt;</operator><name pos:start="192:20" pos:end="192:30">nsse_weight</name></name> <operator pos:start="192:32" pos:end="192:32">=</operator> <call pos:start="192:34" pos:end="192:46"><name pos:start="192:34" pos:end="192:42">avio_rb32</name><argument_list pos:start="192:43" pos:end="192:46">(<argument pos:start="192:44" pos:end="192:45"><expr pos:start="192:44" pos:end="192:45"><name pos:start="192:44" pos:end="192:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="194:13" pos:end="194:50"><expr pos:start="194:13" pos:end="194:49"><name pos:start="194:13" pos:end="194:33"><name pos:start="194:13" pos:end="194:17">codec</name><operator pos:start="194:18" pos:end="194:19">-&gt;</operator><name pos:start="194:20" pos:end="194:33">frame_skip_cmp</name></name> <operator pos:start="194:35" pos:end="194:35">=</operator> <call pos:start="194:37" pos:end="194:49"><name pos:start="194:37" pos:end="194:45">avio_rb32</name><argument_list pos:start="194:46" pos:end="194:49">(<argument pos:start="194:47" pos:end="194:48"><expr pos:start="194:47" pos:end="194:48"><name pos:start="194:47" pos:end="194:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="196:13" pos:end="196:73"><expr pos:start="196:13" pos:end="196:72"><name pos:start="196:13" pos:end="196:41"><name pos:start="196:13" pos:end="196:17">codec</name><operator pos:start="196:18" pos:end="196:19">-&gt;</operator><name pos:start="196:20" pos:end="196:41">rc_buffer_aggressivity</name></name> <operator pos:start="196:43" pos:end="196:43">=</operator> <call pos:start="196:45" pos:end="196:72"><name pos:start="196:45" pos:end="196:57">av_int2double</name><argument_list pos:start="196:58" pos:end="196:72">(<argument pos:start="196:59" pos:end="196:71"><expr pos:start="196:59" pos:end="196:71"><call pos:start="196:59" pos:end="196:71"><name pos:start="196:59" pos:end="196:67">avio_rb64</name><argument_list pos:start="196:68" pos:end="196:71">(<argument pos:start="196:69" pos:end="196:70"><expr pos:start="196:69" pos:end="196:70"><name pos:start="196:69" pos:end="196:70">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="198:13" pos:end="198:45"><expr pos:start="198:13" pos:end="198:44"><name pos:start="198:13" pos:end="198:28"><name pos:start="198:13" pos:end="198:17">codec</name><operator pos:start="198:18" pos:end="198:19">-&gt;</operator><name pos:start="198:20" pos:end="198:28">codec_tag</name></name> <operator pos:start="198:30" pos:end="198:30">=</operator> <call pos:start="198:32" pos:end="198:44"><name pos:start="198:32" pos:end="198:40">avio_rb32</name><argument_list pos:start="198:41" pos:end="198:44">(<argument pos:start="198:42" pos:end="198:43"><expr pos:start="198:42" pos:end="198:43"><name pos:start="198:42" pos:end="198:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="200:13" pos:end="200:46"><expr pos:start="200:13" pos:end="200:45"><name pos:start="200:13" pos:end="200:31"><name pos:start="200:13" pos:end="200:17">codec</name><operator pos:start="200:18" pos:end="200:19">-&gt;</operator><name pos:start="200:20" pos:end="200:31">thread_count</name></name> <operator pos:start="200:33" pos:end="200:33">=</operator> <call pos:start="200:35" pos:end="200:45"><name pos:start="200:35" pos:end="200:41">avio_r8</name><argument_list pos:start="200:42" pos:end="200:45">(<argument pos:start="200:43" pos:end="200:44"><expr pos:start="200:43" pos:end="200:44"><name pos:start="200:43" pos:end="200:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="202:13" pos:end="202:46"><expr pos:start="202:13" pos:end="202:45"><name pos:start="202:13" pos:end="202:29"><name pos:start="202:13" pos:end="202:17">codec</name><operator pos:start="202:18" pos:end="202:19">-&gt;</operator><name pos:start="202:20" pos:end="202:29">coder_type</name></name> <operator pos:start="202:31" pos:end="202:31">=</operator> <call pos:start="202:33" pos:end="202:45"><name pos:start="202:33" pos:end="202:41">avio_rb32</name><argument_list pos:start="202:42" pos:end="202:45">(<argument pos:start="202:43" pos:end="202:44"><expr pos:start="202:43" pos:end="202:44"><name pos:start="202:43" pos:end="202:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="204:13" pos:end="204:42"><expr pos:start="204:13" pos:end="204:41"><name pos:start="204:13" pos:end="204:25"><name pos:start="204:13" pos:end="204:17">codec</name><operator pos:start="204:18" pos:end="204:19">-&gt;</operator><name pos:start="204:20" pos:end="204:25">me_cmp</name></name> <operator pos:start="204:27" pos:end="204:27">=</operator> <call pos:start="204:29" pos:end="204:41"><name pos:start="204:29" pos:end="204:37">avio_rb32</name><argument_list pos:start="204:38" pos:end="204:41">(<argument pos:start="204:39" pos:end="204:40"><expr pos:start="204:39" pos:end="204:40"><name pos:start="204:39" pos:end="204:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="206:13" pos:end="206:53"><expr pos:start="206:13" pos:end="206:52"><name pos:start="206:13" pos:end="206:36"><name pos:start="206:13" pos:end="206:17">codec</name><operator pos:start="206:18" pos:end="206:19">-&gt;</operator><name pos:start="206:20" pos:end="206:36">me_subpel_quality</name></name> <operator pos:start="206:38" pos:end="206:38">=</operator> <call pos:start="206:40" pos:end="206:52"><name pos:start="206:40" pos:end="206:48">avio_rb32</name><argument_list pos:start="206:49" pos:end="206:52">(<argument pos:start="206:50" pos:end="206:51"><expr pos:start="206:50" pos:end="206:51"><name pos:start="206:50" pos:end="206:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="208:13" pos:end="208:44"><expr pos:start="208:13" pos:end="208:43"><name pos:start="208:13" pos:end="208:27"><name pos:start="208:13" pos:end="208:17">codec</name><operator pos:start="208:18" pos:end="208:19">-&gt;</operator><name pos:start="208:20" pos:end="208:27">me_range</name></name> <operator pos:start="208:29" pos:end="208:29">=</operator> <call pos:start="208:31" pos:end="208:43"><name pos:start="208:31" pos:end="208:39">avio_rb32</name><argument_list pos:start="208:40" pos:end="208:43">(<argument pos:start="208:41" pos:end="208:42"><expr pos:start="208:41" pos:end="208:42"><name pos:start="208:41" pos:end="208:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="210:13" pos:end="210:46"><expr pos:start="210:13" pos:end="210:45"><name pos:start="210:13" pos:end="210:29"><name pos:start="210:13" pos:end="210:17">codec</name><operator pos:start="210:18" pos:end="210:19">-&gt;</operator><name pos:start="210:20" pos:end="210:29">keyint_min</name></name> <operator pos:start="210:31" pos:end="210:31">=</operator> <call pos:start="210:33" pos:end="210:45"><name pos:start="210:33" pos:end="210:41">avio_rb32</name><argument_list pos:start="210:42" pos:end="210:45">(<argument pos:start="210:43" pos:end="210:44"><expr pos:start="210:43" pos:end="210:44"><name pos:start="210:43" pos:end="210:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="212:13" pos:end="212:57"><expr pos:start="212:13" pos:end="212:56"><name pos:start="212:13" pos:end="212:40"><name pos:start="212:13" pos:end="212:17">codec</name><operator pos:start="212:18" pos:end="212:19">-&gt;</operator><name pos:start="212:20" pos:end="212:40">scenechange_threshold</name></name> <operator pos:start="212:42" pos:end="212:42">=</operator> <call pos:start="212:44" pos:end="212:56"><name pos:start="212:44" pos:end="212:52">avio_rb32</name><argument_list pos:start="212:53" pos:end="212:56">(<argument pos:start="212:54" pos:end="212:55"><expr pos:start="212:54" pos:end="212:55"><name pos:start="212:54" pos:end="212:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="214:13" pos:end="214:52"><expr pos:start="214:13" pos:end="214:51"><name pos:start="214:13" pos:end="214:35"><name pos:start="214:13" pos:end="214:17">codec</name><operator pos:start="214:18" pos:end="214:19">-&gt;</operator><name pos:start="214:20" pos:end="214:35">b_frame_strategy</name></name> <operator pos:start="214:37" pos:end="214:37">=</operator> <call pos:start="214:39" pos:end="214:51"><name pos:start="214:39" pos:end="214:47">avio_rb32</name><argument_list pos:start="214:48" pos:end="214:51">(<argument pos:start="214:49" pos:end="214:50"><expr pos:start="214:49" pos:end="214:50"><name pos:start="214:49" pos:end="214:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="216:13" pos:end="216:60"><expr pos:start="216:13" pos:end="216:59"><name pos:start="216:13" pos:end="216:28"><name pos:start="216:13" pos:end="216:17">codec</name><operator pos:start="216:18" pos:end="216:19">-&gt;</operator><name pos:start="216:20" pos:end="216:28">qcompress</name></name> <operator pos:start="216:30" pos:end="216:30">=</operator> <call pos:start="216:32" pos:end="216:59"><name pos:start="216:32" pos:end="216:44">av_int2double</name><argument_list pos:start="216:45" pos:end="216:59">(<argument pos:start="216:46" pos:end="216:58"><expr pos:start="216:46" pos:end="216:58"><call pos:start="216:46" pos:end="216:58"><name pos:start="216:46" pos:end="216:54">avio_rb64</name><argument_list pos:start="216:55" pos:end="216:58">(<argument pos:start="216:56" pos:end="216:57"><expr pos:start="216:56" pos:end="216:57"><name pos:start="216:56" pos:end="216:57">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="218:13" pos:end="218:56"><expr pos:start="218:13" pos:end="218:55"><name pos:start="218:13" pos:end="218:24"><name pos:start="218:13" pos:end="218:17">codec</name><operator pos:start="218:18" pos:end="218:19">-&gt;</operator><name pos:start="218:20" pos:end="218:24">qblur</name></name> <operator pos:start="218:26" pos:end="218:26">=</operator> <call pos:start="218:28" pos:end="218:55"><name pos:start="218:28" pos:end="218:40">av_int2double</name><argument_list pos:start="218:41" pos:end="218:55">(<argument pos:start="218:42" pos:end="218:54"><expr pos:start="218:42" pos:end="218:54"><call pos:start="218:42" pos:end="218:54"><name pos:start="218:42" pos:end="218:50">avio_rb64</name><argument_list pos:start="218:51" pos:end="218:54">(<argument pos:start="218:52" pos:end="218:53"><expr pos:start="218:52" pos:end="218:53"><name pos:start="218:52" pos:end="218:53">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="220:13" pos:end="220:45"><expr pos:start="220:13" pos:end="220:44"><name pos:start="220:13" pos:end="220:28"><name pos:start="220:13" pos:end="220:17">codec</name><operator pos:start="220:18" pos:end="220:19">-&gt;</operator><name pos:start="220:20" pos:end="220:28">max_qdiff</name></name> <operator pos:start="220:30" pos:end="220:30">=</operator> <call pos:start="220:32" pos:end="220:44"><name pos:start="220:32" pos:end="220:40">avio_rb32</name><argument_list pos:start="220:41" pos:end="220:44">(<argument pos:start="220:42" pos:end="220:43"><expr pos:start="220:42" pos:end="220:43"><name pos:start="220:42" pos:end="220:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="222:13" pos:end="222:40"><expr pos:start="222:13" pos:end="222:39"><name pos:start="222:13" pos:end="222:23"><name pos:start="222:13" pos:end="222:17">codec</name><operator pos:start="222:18" pos:end="222:19">-&gt;</operator><name pos:start="222:20" pos:end="222:23">refs</name></name> <operator pos:start="222:25" pos:end="222:25">=</operator> <call pos:start="222:27" pos:end="222:39"><name pos:start="222:27" pos:end="222:35">avio_rb32</name><argument_list pos:start="222:36" pos:end="222:39">(<argument pos:start="222:37" pos:end="222:38"><expr pos:start="222:37" pos:end="222:38"><name pos:start="222:37" pos:end="222:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="224:13" pos:end="224:18">break;</break>

        <case pos:start="226:9" pos:end="226:32">case <expr pos:start="226:14" pos:end="226:31"><name pos:start="226:14" pos:end="226:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="228:13" pos:end="228:47"><expr pos:start="228:13" pos:end="228:46"><name pos:start="228:13" pos:end="228:30"><name pos:start="228:13" pos:end="228:17">codec</name><operator pos:start="228:18" pos:end="228:19">-&gt;</operator><name pos:start="228:20" pos:end="228:30">sample_rate</name></name> <operator pos:start="228:32" pos:end="228:32">=</operator> <call pos:start="228:34" pos:end="228:46"><name pos:start="228:34" pos:end="228:42">avio_rb32</name><argument_list pos:start="228:43" pos:end="228:46">(<argument pos:start="228:44" pos:end="228:45"><expr pos:start="228:44" pos:end="228:45"><name pos:start="228:44" pos:end="228:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="230:13" pos:end="230:44"><expr pos:start="230:13" pos:end="230:43"><name pos:start="230:13" pos:end="230:27"><name pos:start="230:13" pos:end="230:17">codec</name><operator pos:start="230:18" pos:end="230:19">-&gt;</operator><name pos:start="230:20" pos:end="230:27">channels</name></name> <operator pos:start="230:29" pos:end="230:29">=</operator> <call pos:start="230:31" pos:end="230:43"><name pos:start="230:31" pos:end="230:39">avio_rl16</name><argument_list pos:start="230:40" pos:end="230:43">(<argument pos:start="230:41" pos:end="230:42"><expr pos:start="230:41" pos:end="230:42"><name pos:start="230:41" pos:end="230:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="232:13" pos:end="232:46"><expr pos:start="232:13" pos:end="232:45"><name pos:start="232:13" pos:end="232:29"><name pos:start="232:13" pos:end="232:17">codec</name><operator pos:start="232:18" pos:end="232:19">-&gt;</operator><name pos:start="232:20" pos:end="232:29">frame_size</name></name> <operator pos:start="232:31" pos:end="232:31">=</operator> <call pos:start="232:33" pos:end="232:45"><name pos:start="232:33" pos:end="232:41">avio_rl16</name><argument_list pos:start="232:42" pos:end="232:45">(<argument pos:start="232:43" pos:end="232:44"><expr pos:start="232:43" pos:end="232:44"><name pos:start="232:43" pos:end="232:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="234:13" pos:end="234:18">break;</break>

        <default pos:start="236:9" pos:end="236:16">default:</default>



        <if_stmt pos:start="240:9" pos:end="290:14"><if pos:start="240:9" pos:end="290:14">if <condition pos:start="240:12" pos:end="240:55">(<expr pos:start="240:13" pos:end="240:54"><name pos:start="240:13" pos:end="240:24"><name pos:start="240:13" pos:end="240:17">codec</name><operator pos:start="240:18" pos:end="240:19">-&gt;</operator><name pos:start="240:20" pos:end="240:24">flags</name></name> <operator pos:start="240:26" pos:end="240:26">&amp;</operator> <name pos:start="240:28" pos:end="240:54">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="240:57" pos:end="290:14">{<block_content pos:start="242:13" pos:end="290:14">

            <decl_stmt pos:start="242:13" pos:end="242:37"><decl pos:start="242:13" pos:end="242:36"><type pos:start="242:13" pos:end="242:15"><name pos:start="242:13" pos:end="242:15">int</name></type> <name pos:start="242:17" pos:end="242:20">size</name> <init pos:start="242:22" pos:end="242:36">= <expr pos:start="242:24" pos:end="242:36"><call pos:start="242:24" pos:end="242:36"><name pos:start="242:24" pos:end="242:32">avio_rb32</name><argument_list pos:start="242:33" pos:end="242:36">(<argument pos:start="242:34" pos:end="242:35"><expr pos:start="242:34" pos:end="242:35"><name pos:start="242:34" pos:end="242:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="244:13" pos:end="244:79"><expr pos:start="244:13" pos:end="244:78"><name pos:start="244:13" pos:end="244:28"><name pos:start="244:13" pos:end="244:17">codec</name><operator pos:start="244:18" pos:end="244:19">-&gt;</operator><name pos:start="244:20" pos:end="244:28">extradata</name></name> <operator pos:start="244:30" pos:end="244:30">=</operator> <call pos:start="244:32" pos:end="244:78"><name pos:start="244:32" pos:end="244:41">av_mallocz</name><argument_list pos:start="244:42" pos:end="244:78">(<argument pos:start="244:43" pos:end="244:77"><expr pos:start="244:43" pos:end="244:77"><name pos:start="244:43" pos:end="244:46">size</name> <operator pos:start="244:48" pos:end="244:48">+</operator> <name pos:start="244:50" pos:end="244:77">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="246:13" pos:end="248:39"><if pos:start="246:13" pos:end="248:39">if <condition pos:start="246:16" pos:end="246:34">(<expr pos:start="246:17" pos:end="246:33"><operator pos:start="246:17" pos:end="246:17">!</operator><name pos:start="246:18" pos:end="246:33"><name pos:start="246:18" pos:end="246:22">codec</name><operator pos:start="246:23" pos:end="246:24">-&gt;</operator><name pos:start="246:25" pos:end="246:33">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="248:17" pos:end="248:39"><block_content pos:start="248:17" pos:end="248:39">

                <return pos:start="248:17" pos:end="248:39">return <expr pos:start="248:24" pos:end="248:38"><call pos:start="248:24" pos:end="248:38"><name pos:start="248:24" pos:end="248:30">AVERROR</name><argument_list pos:start="248:31" pos:end="248:38">(<argument pos:start="248:32" pos:end="248:37"><expr pos:start="248:32" pos:end="248:37"><name pos:start="248:32" pos:end="248:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="250:13" pos:end="250:41"><expr pos:start="250:13" pos:end="250:40"><name pos:start="250:13" pos:end="250:33"><name pos:start="250:13" pos:end="250:17">codec</name><operator pos:start="250:18" pos:end="250:19">-&gt;</operator><name pos:start="250:20" pos:end="250:33">extradata_size</name></name> <operator pos:start="250:35" pos:end="250:35">=</operator> <name pos:start="250:37" pos:end="250:40">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="252:13" pos:end="252:50"><expr pos:start="252:13" pos:end="252:49"><call pos:start="252:13" pos:end="252:49"><name pos:start="252:13" pos:end="252:21">avio_read</name><argument_list pos:start="252:22" pos:end="252:49">(<argument pos:start="252:23" pos:end="252:24"><expr pos:start="252:23" pos:end="252:24"><name pos:start="252:23" pos:end="252:24">pb</name></expr></argument>, <argument pos:start="252:27" pos:end="252:42"><expr pos:start="252:27" pos:end="252:42"><name pos:start="252:27" pos:end="252:42"><name pos:start="252:27" pos:end="252:31">codec</name><operator pos:start="252:32" pos:end="252:33">-&gt;</operator><name pos:start="252:34" pos:end="252:42">extradata</name></name></expr></argument>, <argument pos:start="252:45" pos:end="252:48"><expr pos:start="252:45" pos:end="252:48"><name pos:start="252:45" pos:end="252:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <expr_stmt pos:start="257:9" pos:end="257:61"><expr pos:start="257:9" pos:end="257:60"><call pos:start="257:9" pos:end="257:60"><name pos:start="257:9" pos:end="257:39">avcodec_parameters_from_context</name><argument_list pos:start="257:40" pos:end="257:60">(<argument pos:start="257:41" pos:end="257:52"><expr pos:start="257:41" pos:end="257:52"><name pos:start="257:41" pos:end="257:52"><name pos:start="257:41" pos:end="257:42">st</name><operator pos:start="257:43" pos:end="257:44">-&gt;</operator><name pos:start="257:45" pos:end="257:52">codecpar</name></name></expr></argument>, <argument pos:start="257:55" pos:end="257:59"><expr pos:start="257:55" pos:end="257:59"><name pos:start="257:55" pos:end="257:59">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <comment type="block" pos:start="262:5" pos:end="262:40">/* get until end of block reached */</comment>

    <while pos:start="264:5" pos:end="266:20">while <condition pos:start="264:11" pos:end="264:71">(<expr pos:start="264:12" pos:end="264:70"><operator pos:start="264:12" pos:end="264:12">(</operator><call pos:start="264:13" pos:end="264:25"><name pos:start="264:13" pos:end="264:21">avio_tell</name><argument_list pos:start="264:22" pos:end="264:25">(<argument pos:start="264:23" pos:end="264:24"><expr pos:start="264:23" pos:end="264:24"><name pos:start="264:23" pos:end="264:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="264:27" pos:end="264:27">%</operator> <name pos:start="264:29" pos:end="264:44"><name pos:start="264:29" pos:end="264:31">ffm</name><operator pos:start="264:32" pos:end="264:33">-&gt;</operator><name pos:start="264:34" pos:end="264:44">packet_size</name></name><operator pos:start="264:45" pos:end="264:45">)</operator> <operator pos:start="264:47" pos:end="264:48">!=</operator> <literal type="number" pos:start="264:50" pos:end="264:50">0</literal> <operator pos:start="264:52" pos:end="264:53">&amp;&amp;</operator> <operator pos:start="264:55" pos:end="264:55">!</operator><name pos:start="264:56" pos:end="264:70"><name pos:start="264:56" pos:end="264:57">pb</name><operator pos:start="264:58" pos:end="264:59">-&gt;</operator><name pos:start="264:60" pos:end="264:70">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="266:9" pos:end="266:20"><block_content pos:start="266:9" pos:end="266:20">

        <expr_stmt pos:start="266:9" pos:end="266:20"><expr pos:start="266:9" pos:end="266:19"><call pos:start="266:9" pos:end="266:19"><name pos:start="266:9" pos:end="266:15">avio_r8</name><argument_list pos:start="266:16" pos:end="266:19">(<argument pos:start="266:17" pos:end="266:18"><expr pos:start="266:17" pos:end="266:18"><name pos:start="266:17" pos:end="266:18">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <comment type="block" pos:start="270:5" pos:end="270:27">/* init packet demux */</comment>

    <expr_stmt pos:start="272:5" pos:end="272:34"><expr pos:start="272:5" pos:end="272:33"><name pos:start="272:5" pos:end="272:19"><name pos:start="272:5" pos:end="272:7">ffm</name><operator pos:start="272:8" pos:end="272:9">-&gt;</operator><name pos:start="272:10" pos:end="272:19">packet_ptr</name></name> <operator pos:start="272:21" pos:end="272:21">=</operator> <name pos:start="272:23" pos:end="272:33"><name pos:start="272:23" pos:end="272:25">ffm</name><operator pos:start="272:26" pos:end="272:27">-&gt;</operator><name pos:start="272:28" pos:end="272:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="274:5" pos:end="274:34"><expr pos:start="274:5" pos:end="274:33"><name pos:start="274:5" pos:end="274:19"><name pos:start="274:5" pos:end="274:7">ffm</name><operator pos:start="274:8" pos:end="274:9">-&gt;</operator><name pos:start="274:10" pos:end="274:19">packet_end</name></name> <operator pos:start="274:21" pos:end="274:21">=</operator> <name pos:start="274:23" pos:end="274:33"><name pos:start="274:23" pos:end="274:25">ffm</name><operator pos:start="274:26" pos:end="274:27">-&gt;</operator><name pos:start="274:28" pos:end="274:33">packet</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="276:5" pos:end="276:26"><expr pos:start="276:5" pos:end="276:25"><name pos:start="276:5" pos:end="276:21"><name pos:start="276:5" pos:end="276:7">ffm</name><operator pos:start="276:8" pos:end="276:9">-&gt;</operator><name pos:start="276:10" pos:end="276:21">frame_offset</name></name> <operator pos:start="276:23" pos:end="276:23">=</operator> <literal type="number" pos:start="276:25" pos:end="276:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="278:5" pos:end="278:17"><expr pos:start="278:5" pos:end="278:16"><name pos:start="278:5" pos:end="278:12"><name pos:start="278:5" pos:end="278:7">ffm</name><operator pos:start="278:8" pos:end="278:9">-&gt;</operator><name pos:start="278:10" pos:end="278:12">dts</name></name> <operator pos:start="278:14" pos:end="278:14">=</operator> <literal type="number" pos:start="278:16" pos:end="278:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="280:5" pos:end="280:34"><expr pos:start="280:5" pos:end="280:33"><name pos:start="280:5" pos:end="280:19"><name pos:start="280:5" pos:end="280:7">ffm</name><operator pos:start="280:8" pos:end="280:9">-&gt;</operator><name pos:start="280:10" pos:end="280:19">read_state</name></name> <operator pos:start="280:21" pos:end="280:21">=</operator> <name pos:start="280:23" pos:end="280:33">READ_HEADER</name></expr>;</expr_stmt>

    <expr_stmt pos:start="282:5" pos:end="282:26"><expr pos:start="282:5" pos:end="282:25"><name pos:start="282:5" pos:end="282:21"><name pos:start="282:5" pos:end="282:7">ffm</name><operator pos:start="282:8" pos:end="282:9">-&gt;</operator><name pos:start="282:10" pos:end="282:21">first_packet</name></name> <operator pos:start="282:23" pos:end="282:23">=</operator> <literal type="number" pos:start="282:25" pos:end="282:25">1</literal></expr>;</expr_stmt>

    <return pos:start="284:5" pos:end="284:13">return <expr pos:start="284:12" pos:end="284:12"><literal type="number" pos:start="284:12" pos:end="284:12">0</literal></expr>;</return>

 <label pos:start="286:2" pos:end="286:6"><name pos:start="286:2" pos:end="286:5">fail</name>:</label>

    <expr_stmt pos:start="288:5" pos:end="288:17"><expr pos:start="288:5" pos:end="288:16"><call pos:start="288:5" pos:end="288:16"><name pos:start="288:5" pos:end="288:13">ffm_close</name><argument_list pos:start="288:14" pos:end="288:16">(<argument pos:start="288:15" pos:end="288:15"><expr pos:start="288:15" pos:end="288:15"><name pos:start="288:15" pos:end="288:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="290:5" pos:end="290:14">return <expr pos:start="290:12" pos:end="290:13"><operator pos:start="290:12" pos:end="290:12">-</operator><literal type="number" pos:start="290:13" pos:end="290:13">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></function>
</unit>
