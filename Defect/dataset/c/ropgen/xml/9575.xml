<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9575.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">gen_store_exclusive</name><parameter_list pos:start="1:32" pos:end="3:56">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:44">DisasContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:55"><decl pos:start="1:50" pos:end="1:55"><type pos:start="1:50" pos:end="1:55"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:55">rd</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:63"><decl pos:start="1:58" pos:end="1:63"><type pos:start="1:58" pos:end="1:63"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:63">rt</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:72"><decl pos:start="1:66" pos:end="1:72"><type pos:start="1:66" pos:end="1:72"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:72">rt2</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">TCGv_i32</name></type> <name pos:start="3:42" pos:end="3:45">addr</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:55"><decl pos:start="3:48" pos:end="3:55"><type pos:start="3:48" pos:end="3:55"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="165:1">{<block_content pos:start="7:5" pos:end="163:45">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i64</name></type> <name pos:start="9:14" pos:end="9:18">val64</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:27">extaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">done_label</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">fail_label</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="27:11">/* if (env-&gt;exclusive_addr == addr &amp;&amp; env-&gt;exclusive_val == [addr]) {

         [addr] = {Rt};

         {Rd} = 0;

       } else {

         {Rd} = 1;

       } */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:14">fail_label</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:32"><name pos:start="29:18" pos:end="29:30">gen_new_label</name><argument_list pos:start="29:31" pos:end="29:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:14">done_label</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:32"><name pos:start="31:18" pos:end="31:30">gen_new_label</name><argument_list pos:start="31:31" pos:end="31:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:33"><expr pos:start="33:5" pos:end="33:32"><name pos:start="33:5" pos:end="33:11">extaddr</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:32"><name pos:start="33:15" pos:end="33:30">tcg_temp_new_i64</name><argument_list pos:start="33:31" pos:end="33:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><call pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:24">tcg_gen_extu_i32_i64</name><argument_list pos:start="35:25" pos:end="35:39">(<argument pos:start="35:26" pos:end="35:32"><expr pos:start="35:26" pos:end="35:32"><name pos:start="35:26" pos:end="35:32">extaddr</name></expr></argument>, <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:77"><expr pos:start="37:5" pos:end="37:76"><call pos:start="37:5" pos:end="37:76"><name pos:start="37:5" pos:end="37:22">tcg_gen_brcond_i64</name><argument_list pos:start="37:23" pos:end="37:76">(<argument pos:start="37:24" pos:end="37:34"><expr pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="37:37" pos:end="37:43"><expr pos:start="37:37" pos:end="37:43"><name pos:start="37:37" pos:end="37:43">extaddr</name></expr></argument>, <argument pos:start="37:46" pos:end="37:63"><expr pos:start="37:46" pos:end="37:63"><name pos:start="37:46" pos:end="37:63">cpu_exclusive_addr</name></expr></argument>, <argument pos:start="37:66" pos:end="37:75"><expr pos:start="37:66" pos:end="37:75"><name pos:start="37:66" pos:end="37:75">fail_label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><call pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:21">tcg_temp_free_i64</name><argument_list pos:start="39:22" pos:end="39:30">(<argument pos:start="39:23" pos:end="39:29"><expr pos:start="39:23" pos:end="39:29"><name pos:start="39:23" pos:end="39:29">extaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:7">tmp</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:28"><name pos:start="43:11" pos:end="43:26">tcg_temp_new_i32</name><argument_list pos:start="43:27" pos:end="43:28">()</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="45:5" pos:end="71:5">switch <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><name pos:start="45:13" pos:end="45:16">size</name></expr>)</condition> <block pos:start="45:19" pos:end="71:5">{<block_content pos:start="47:5" pos:end="69:16">

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">0</literal></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><call pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:21">gen_aa32_ld8u</name><argument_list pos:start="49:22" pos:end="49:50">(<argument pos:start="49:23" pos:end="49:25"><expr pos:start="49:23" pos:end="49:25"><name pos:start="49:23" pos:end="49:25">tmp</name></expr></argument>, <argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">addr</name></expr></argument>, <argument pos:start="49:34" pos:end="49:49"><expr pos:start="49:34" pos:end="49:49"><call pos:start="49:34" pos:end="49:49"><name pos:start="49:34" pos:end="49:46">get_mem_index</name><argument_list pos:start="49:47" pos:end="49:49">(<argument pos:start="49:48" pos:end="49:48"><expr pos:start="49:48" pos:end="49:48"><name pos:start="49:48" pos:end="49:48">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">1</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><call pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:22">gen_aa32_ld16u</name><argument_list pos:start="55:23" pos:end="55:51">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">tmp</name></expr></argument>, <argument pos:start="55:29" pos:end="55:32"><expr pos:start="55:29" pos:end="55:32"><name pos:start="55:29" pos:end="55:32">addr</name></expr></argument>, <argument pos:start="55:35" pos:end="55:50"><expr pos:start="55:35" pos:end="55:50"><call pos:start="55:35" pos:end="55:50"><name pos:start="55:35" pos:end="55:47">get_mem_index</name><argument_list pos:start="55:48" pos:end="55:50">(<argument pos:start="55:49" pos:end="55:49"><expr pos:start="55:49" pos:end="55:49"><name pos:start="55:49" pos:end="55:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <case pos:start="59:5" pos:end="59:11">case <expr pos:start="59:10" pos:end="59:10"><literal type="number" pos:start="59:10" pos:end="59:10">2</literal></expr>:</case>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">3</literal></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><call pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:22">gen_aa32_ld32u</name><argument_list pos:start="63:23" pos:end="63:51">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">tmp</name></expr></argument>, <argument pos:start="63:29" pos:end="63:32"><expr pos:start="63:29" pos:end="63:32"><name pos:start="63:29" pos:end="63:32">addr</name></expr></argument>, <argument pos:start="63:35" pos:end="63:50"><expr pos:start="63:35" pos:end="63:50"><call pos:start="63:35" pos:end="63:50"><name pos:start="63:35" pos:end="63:47">get_mem_index</name><argument_list pos:start="63:48" pos:end="63:50">(<argument pos:start="63:49" pos:end="63:49"><expr pos:start="63:49" pos:end="63:49"><name pos:start="63:49" pos:end="63:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <default pos:start="67:5" pos:end="67:12">default:</default>

        <expr_stmt pos:start="69:9" pos:end="69:16"><expr pos:start="69:9" pos:end="69:15"><call pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:13">abort</name><argument_list pos:start="69:14" pos:end="69:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:9">val64</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:30"><name pos:start="75:13" pos:end="75:28">tcg_temp_new_i64</name><argument_list pos:start="75:29" pos:end="75:30">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="97:5"><if pos:start="77:5" pos:end="93:5">if <condition pos:start="77:8" pos:end="77:18">(<expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:12">size</name> <operator pos:start="77:14" pos:end="77:15">==</operator> <literal type="number" pos:start="77:17" pos:end="77:17">3</literal></expr>)</condition> <block pos:start="77:20" pos:end="93:5">{<block_content pos:start="79:9" pos:end="91:32">

        <decl_stmt pos:start="79:9" pos:end="79:43"><decl pos:start="79:9" pos:end="79:42"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">TCGv_i32</name></type> <name pos:start="79:18" pos:end="79:21">tmp2</name> <init pos:start="79:23" pos:end="79:42">= <expr pos:start="79:25" pos:end="79:42"><call pos:start="79:25" pos:end="79:42"><name pos:start="79:25" pos:end="79:40">tcg_temp_new_i32</name><argument_list pos:start="79:41" pos:end="79:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:43"><decl pos:start="81:9" pos:end="81:42"><type pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:16">TCGv_i32</name></type> <name pos:start="81:18" pos:end="81:21">tmp3</name> <init pos:start="81:23" pos:end="81:42">= <expr pos:start="81:25" pos:end="81:42"><call pos:start="81:25" pos:end="81:42"><name pos:start="81:25" pos:end="81:40">tcg_temp_new_i32</name><argument_list pos:start="81:41" pos:end="81:42">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:40"><expr pos:start="83:9" pos:end="83:39"><call pos:start="83:9" pos:end="83:39"><name pos:start="83:9" pos:end="83:24">tcg_gen_addi_i32</name><argument_list pos:start="83:25" pos:end="83:39">(<argument pos:start="83:26" pos:end="83:29"><expr pos:start="83:26" pos:end="83:29"><name pos:start="83:26" pos:end="83:29">tmp2</name></expr></argument>, <argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">addr</name></expr></argument>, <argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><literal type="number" pos:start="83:38" pos:end="83:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:53"><expr pos:start="85:9" pos:end="85:52"><call pos:start="85:9" pos:end="85:52"><name pos:start="85:9" pos:end="85:22">gen_aa32_ld32u</name><argument_list pos:start="85:23" pos:end="85:52">(<argument pos:start="85:24" pos:end="85:27"><expr pos:start="85:24" pos:end="85:27"><name pos:start="85:24" pos:end="85:27">tmp3</name></expr></argument>, <argument pos:start="85:30" pos:end="85:33"><expr pos:start="85:30" pos:end="85:33"><name pos:start="85:30" pos:end="85:33">tmp2</name></expr></argument>, <argument pos:start="85:36" pos:end="85:51"><expr pos:start="85:36" pos:end="85:51"><call pos:start="85:36" pos:end="85:51"><name pos:start="85:36" pos:end="85:48">get_mem_index</name><argument_list pos:start="85:49" pos:end="85:51">(<argument pos:start="85:50" pos:end="85:50"><expr pos:start="85:50" pos:end="85:50"><name pos:start="85:50" pos:end="85:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:32"><expr pos:start="87:9" pos:end="87:31"><call pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:25">tcg_temp_free_i32</name><argument_list pos:start="87:26" pos:end="87:31">(<argument pos:start="87:27" pos:end="87:30"><expr pos:start="87:27" pos:end="87:30"><name pos:start="87:27" pos:end="87:30">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:49"><expr pos:start="89:9" pos:end="89:48"><call pos:start="89:9" pos:end="89:48"><name pos:start="89:9" pos:end="89:30">tcg_gen_concat_i32_i64</name><argument_list pos:start="89:31" pos:end="89:48">(<argument pos:start="89:32" pos:end="89:36"><expr pos:start="89:32" pos:end="89:36"><name pos:start="89:32" pos:end="89:36">val64</name></expr></argument>, <argument pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:41">tmp</name></expr></argument>, <argument pos:start="89:44" pos:end="89:47"><expr pos:start="89:44" pos:end="89:47"><name pos:start="89:44" pos:end="89:47">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:32"><expr pos:start="91:9" pos:end="91:31"><call pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:25">tcg_temp_free_i32</name><argument_list pos:start="91:26" pos:end="91:31">(<argument pos:start="91:27" pos:end="91:30"><expr pos:start="91:27" pos:end="91:30"><name pos:start="91:27" pos:end="91:30">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="97:5">else <block pos:start="93:12" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:41">

        <expr_stmt pos:start="95:9" pos:end="95:41"><expr pos:start="95:9" pos:end="95:40"><call pos:start="95:9" pos:end="95:40"><name pos:start="95:9" pos:end="95:28">tcg_gen_extu_i32_i64</name><argument_list pos:start="95:29" pos:end="95:40">(<argument pos:start="95:30" pos:end="95:34"><expr pos:start="95:30" pos:end="95:34"><name pos:start="95:30" pos:end="95:34">val64</name></expr></argument>, <argument pos:start="95:37" pos:end="95:39"><expr pos:start="95:37" pos:end="95:39"><name pos:start="95:37" pos:end="95:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:27"><expr pos:start="99:5" pos:end="99:26"><call pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:21">tcg_temp_free_i32</name><argument_list pos:start="99:22" pos:end="99:26">(<argument pos:start="99:23" pos:end="99:25"><expr pos:start="99:23" pos:end="99:25"><name pos:start="99:23" pos:end="99:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:74"><expr pos:start="103:5" pos:end="103:73"><call pos:start="103:5" pos:end="103:73"><name pos:start="103:5" pos:end="103:22">tcg_gen_brcond_i64</name><argument_list pos:start="103:23" pos:end="103:73">(<argument pos:start="103:24" pos:end="103:34"><expr pos:start="103:24" pos:end="103:34"><name pos:start="103:24" pos:end="103:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="103:37" pos:end="103:41"><expr pos:start="103:37" pos:end="103:41"><name pos:start="103:37" pos:end="103:41">val64</name></expr></argument>, <argument pos:start="103:44" pos:end="103:60"><expr pos:start="103:44" pos:end="103:60"><name pos:start="103:44" pos:end="103:60">cpu_exclusive_val</name></expr></argument>, <argument pos:start="103:63" pos:end="103:72"><expr pos:start="103:63" pos:end="103:72"><name pos:start="103:63" pos:end="103:72">fail_label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:29"><expr pos:start="105:5" pos:end="105:28"><call pos:start="105:5" pos:end="105:28"><name pos:start="105:5" pos:end="105:21">tcg_temp_free_i64</name><argument_list pos:start="105:22" pos:end="105:28">(<argument pos:start="105:23" pos:end="105:27"><expr pos:start="105:23" pos:end="105:27"><name pos:start="105:23" pos:end="105:27">val64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:7">tmp</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:25"><name pos:start="109:11" pos:end="109:18">load_reg</name><argument_list pos:start="109:19" pos:end="109:25">(<argument pos:start="109:20" pos:end="109:20"><expr pos:start="109:20" pos:end="109:20"><name pos:start="109:20" pos:end="109:20">s</name></expr></argument>, <argument pos:start="109:23" pos:end="109:24"><expr pos:start="109:23" pos:end="109:24"><name pos:start="109:23" pos:end="109:24">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="111:5" pos:end="137:5">switch <condition pos:start="111:12" pos:end="111:17">(<expr pos:start="111:13" pos:end="111:16"><name pos:start="111:13" pos:end="111:16">size</name></expr>)</condition> <block pos:start="111:19" pos:end="137:5">{<block_content pos:start="113:5" pos:end="135:16">

    <case pos:start="113:5" pos:end="113:11">case <expr pos:start="113:10" pos:end="113:10"><literal type="number" pos:start="113:10" pos:end="113:10">0</literal></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:50"><expr pos:start="115:9" pos:end="115:49"><call pos:start="115:9" pos:end="115:49"><name pos:start="115:9" pos:end="115:20">gen_aa32_st8</name><argument_list pos:start="115:21" pos:end="115:49">(<argument pos:start="115:22" pos:end="115:24"><expr pos:start="115:22" pos:end="115:24"><name pos:start="115:22" pos:end="115:24">tmp</name></expr></argument>, <argument pos:start="115:27" pos:end="115:30"><expr pos:start="115:27" pos:end="115:30"><name pos:start="115:27" pos:end="115:30">addr</name></expr></argument>, <argument pos:start="115:33" pos:end="115:48"><expr pos:start="115:33" pos:end="115:48"><call pos:start="115:33" pos:end="115:48"><name pos:start="115:33" pos:end="115:45">get_mem_index</name><argument_list pos:start="115:46" pos:end="115:48">(<argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><name pos:start="115:47" pos:end="115:47">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:11">case <expr pos:start="119:10" pos:end="119:10"><literal type="number" pos:start="119:10" pos:end="119:10">1</literal></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:51"><expr pos:start="121:9" pos:end="121:50"><call pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:21">gen_aa32_st16</name><argument_list pos:start="121:22" pos:end="121:50">(<argument pos:start="121:23" pos:end="121:25"><expr pos:start="121:23" pos:end="121:25"><name pos:start="121:23" pos:end="121:25">tmp</name></expr></argument>, <argument pos:start="121:28" pos:end="121:31"><expr pos:start="121:28" pos:end="121:31"><name pos:start="121:28" pos:end="121:31">addr</name></expr></argument>, <argument pos:start="121:34" pos:end="121:49"><expr pos:start="121:34" pos:end="121:49"><call pos:start="121:34" pos:end="121:49"><name pos:start="121:34" pos:end="121:46">get_mem_index</name><argument_list pos:start="121:47" pos:end="121:49">(<argument pos:start="121:48" pos:end="121:48"><expr pos:start="121:48" pos:end="121:48"><name pos:start="121:48" pos:end="121:48">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:11">case <expr pos:start="125:10" pos:end="125:10"><literal type="number" pos:start="125:10" pos:end="125:10">2</literal></expr>:</case>

    <case pos:start="127:5" pos:end="127:11">case <expr pos:start="127:10" pos:end="127:10"><literal type="number" pos:start="127:10" pos:end="127:10">3</literal></expr>:</case>

        <expr_stmt pos:start="129:9" pos:end="129:51"><expr pos:start="129:9" pos:end="129:50"><call pos:start="129:9" pos:end="129:50"><name pos:start="129:9" pos:end="129:21">gen_aa32_st32</name><argument_list pos:start="129:22" pos:end="129:50">(<argument pos:start="129:23" pos:end="129:25"><expr pos:start="129:23" pos:end="129:25"><name pos:start="129:23" pos:end="129:25">tmp</name></expr></argument>, <argument pos:start="129:28" pos:end="129:31"><expr pos:start="129:28" pos:end="129:31"><name pos:start="129:28" pos:end="129:31">addr</name></expr></argument>, <argument pos:start="129:34" pos:end="129:49"><expr pos:start="129:34" pos:end="129:49"><call pos:start="129:34" pos:end="129:49"><name pos:start="129:34" pos:end="129:46">get_mem_index</name><argument_list pos:start="129:47" pos:end="129:49">(<argument pos:start="129:48" pos:end="129:48"><expr pos:start="129:48" pos:end="129:48"><name pos:start="129:48" pos:end="129:48">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    <default pos:start="133:5" pos:end="133:12">default:</default>

        <expr_stmt pos:start="135:9" pos:end="135:16"><expr pos:start="135:9" pos:end="135:15"><call pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:13">abort</name><argument_list pos:start="135:14" pos:end="135:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="139:5" pos:end="139:27"><expr pos:start="139:5" pos:end="139:26"><call pos:start="139:5" pos:end="139:26"><name pos:start="139:5" pos:end="139:21">tcg_temp_free_i32</name><argument_list pos:start="139:22" pos:end="139:26">(<argument pos:start="139:23" pos:end="139:25"><expr pos:start="139:23" pos:end="139:25"><name pos:start="139:23" pos:end="139:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="151:5"><if pos:start="141:5" pos:end="151:5">if <condition pos:start="141:8" pos:end="141:18">(<expr pos:start="141:9" pos:end="141:17"><name pos:start="141:9" pos:end="141:12">size</name> <operator pos:start="141:14" pos:end="141:15">==</operator> <literal type="number" pos:start="141:17" pos:end="141:17">3</literal></expr>)</condition> <block pos:start="141:20" pos:end="151:5">{<block_content pos:start="143:9" pos:end="149:31">

        <expr_stmt pos:start="143:9" pos:end="143:40"><expr pos:start="143:9" pos:end="143:39"><call pos:start="143:9" pos:end="143:39"><name pos:start="143:9" pos:end="143:24">tcg_gen_addi_i32</name><argument_list pos:start="143:25" pos:end="143:39">(<argument pos:start="143:26" pos:end="143:29"><expr pos:start="143:26" pos:end="143:29"><name pos:start="143:26" pos:end="143:29">addr</name></expr></argument>, <argument pos:start="143:32" pos:end="143:35"><expr pos:start="143:32" pos:end="143:35"><name pos:start="143:32" pos:end="143:35">addr</name></expr></argument>, <argument pos:start="143:38" pos:end="143:38"><expr pos:start="143:38" pos:end="143:38"><literal type="number" pos:start="143:38" pos:end="143:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:31"><expr pos:start="145:9" pos:end="145:30"><name pos:start="145:9" pos:end="145:11">tmp</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <call pos:start="145:15" pos:end="145:30"><name pos:start="145:15" pos:end="145:22">load_reg</name><argument_list pos:start="145:23" pos:end="145:30">(<argument pos:start="145:24" pos:end="145:24"><expr pos:start="145:24" pos:end="145:24"><name pos:start="145:24" pos:end="145:24">s</name></expr></argument>, <argument pos:start="145:27" pos:end="145:29"><expr pos:start="145:27" pos:end="145:29"><name pos:start="145:27" pos:end="145:29">rt2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:51"><expr pos:start="147:9" pos:end="147:50"><call pos:start="147:9" pos:end="147:50"><name pos:start="147:9" pos:end="147:21">gen_aa32_st32</name><argument_list pos:start="147:22" pos:end="147:50">(<argument pos:start="147:23" pos:end="147:25"><expr pos:start="147:23" pos:end="147:25"><name pos:start="147:23" pos:end="147:25">tmp</name></expr></argument>, <argument pos:start="147:28" pos:end="147:31"><expr pos:start="147:28" pos:end="147:31"><name pos:start="147:28" pos:end="147:31">addr</name></expr></argument>, <argument pos:start="147:34" pos:end="147:49"><expr pos:start="147:34" pos:end="147:49"><call pos:start="147:34" pos:end="147:49"><name pos:start="147:34" pos:end="147:46">get_mem_index</name><argument_list pos:start="147:47" pos:end="147:49">(<argument pos:start="147:48" pos:end="147:48"><expr pos:start="147:48" pos:end="147:48"><name pos:start="147:48" pos:end="147:48">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:31"><expr pos:start="149:9" pos:end="149:30"><call pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:25">tcg_temp_free_i32</name><argument_list pos:start="149:26" pos:end="149:30">(<argument pos:start="149:27" pos:end="149:29"><expr pos:start="149:27" pos:end="149:29"><name pos:start="149:27" pos:end="149:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:35"><expr pos:start="153:5" pos:end="153:34"><call pos:start="153:5" pos:end="153:34"><name pos:start="153:5" pos:end="153:20">tcg_gen_movi_i32</name><argument_list pos:start="153:21" pos:end="153:34">(<argument pos:start="153:22" pos:end="153:30"><expr pos:start="153:22" pos:end="153:30"><name pos:start="153:22" pos:end="153:30"><name pos:start="153:22" pos:end="153:26">cpu_R</name><index pos:start="153:27" pos:end="153:30">[<expr pos:start="153:28" pos:end="153:29"><name pos:start="153:28" pos:end="153:29">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="153:33" pos:end="153:33"><expr pos:start="153:33" pos:end="153:33"><literal type="number" pos:start="153:33" pos:end="153:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:27"><expr pos:start="155:5" pos:end="155:26"><call pos:start="155:5" pos:end="155:26"><name pos:start="155:5" pos:end="155:14">tcg_gen_br</name><argument_list pos:start="155:15" pos:end="155:26">(<argument pos:start="155:16" pos:end="155:25"><expr pos:start="155:16" pos:end="155:25"><name pos:start="155:16" pos:end="155:25">done_label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:30"><expr pos:start="157:5" pos:end="157:29"><call pos:start="157:5" pos:end="157:29"><name pos:start="157:5" pos:end="157:17">gen_set_label</name><argument_list pos:start="157:18" pos:end="157:29">(<argument pos:start="157:19" pos:end="157:28"><expr pos:start="157:19" pos:end="157:28"><name pos:start="157:19" pos:end="157:28">fail_label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:35"><expr pos:start="159:5" pos:end="159:34"><call pos:start="159:5" pos:end="159:34"><name pos:start="159:5" pos:end="159:20">tcg_gen_movi_i32</name><argument_list pos:start="159:21" pos:end="159:34">(<argument pos:start="159:22" pos:end="159:30"><expr pos:start="159:22" pos:end="159:30"><name pos:start="159:22" pos:end="159:30"><name pos:start="159:22" pos:end="159:26">cpu_R</name><index pos:start="159:27" pos:end="159:30">[<expr pos:start="159:28" pos:end="159:29"><name pos:start="159:28" pos:end="159:29">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="159:33" pos:end="159:33"><expr pos:start="159:33" pos:end="159:33"><literal type="number" pos:start="159:33" pos:end="159:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:30"><expr pos:start="161:5" pos:end="161:29"><call pos:start="161:5" pos:end="161:29"><name pos:start="161:5" pos:end="161:17">gen_set_label</name><argument_list pos:start="161:18" pos:end="161:29">(<argument pos:start="161:19" pos:end="161:28"><expr pos:start="161:19" pos:end="161:28"><name pos:start="161:19" pos:end="161:28">done_label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="163:5" pos:end="163:45"><expr pos:start="163:5" pos:end="163:44"><call pos:start="163:5" pos:end="163:44"><name pos:start="163:5" pos:end="163:20">tcg_gen_movi_i64</name><argument_list pos:start="163:21" pos:end="163:44">(<argument pos:start="163:22" pos:end="163:39"><expr pos:start="163:22" pos:end="163:39"><name pos:start="163:22" pos:end="163:39">cpu_exclusive_addr</name></expr></argument>, <argument pos:start="163:42" pos:end="163:43"><expr pos:start="163:42" pos:end="163:43"><operator pos:start="163:42" pos:end="163:42">-</operator><literal type="number" pos:start="163:43" pos:end="163:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
