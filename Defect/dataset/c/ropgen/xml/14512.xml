<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14512.c" pos:tabs="8"><function pos:start="1:1" pos:end="320:14"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vc1_decode_frame</name><parameter_list pos:start="1:28" pos:end="2:60">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:42"><decl pos:start="2:29" pos:end="2:42"><type pos:start="2:29" pos:end="2:42"><name pos:start="2:29" pos:end="2:31">int</name> <modifier pos:start="2:33" pos:end="2:33">*</modifier></type><name pos:start="2:34" pos:end="2:42">data_size</name></decl></parameter>, <parameter pos:start="2:45" pos:end="2:59"><decl pos:start="2:45" pos:end="2:59"><type pos:start="2:45" pos:end="2:59"><name pos:start="2:45" pos:end="2:52">AVPacket</name> <modifier pos:start="2:54" pos:end="2:54">*</modifier></type><name pos:start="2:55" pos:end="2:59">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="320:14">{<block_content pos:start="4:5" pos:end="320:14">
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:36"><type pos:start="4:5" pos:end="4:19"><specifier pos:start="4:5" pos:end="4:9">const</specifier> <name pos:start="4:11" pos:end="4:17">uint8_t</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:22">buf</name> <init pos:start="4:24" pos:end="4:36">= <expr pos:start="4:26" pos:end="4:36"><name pos:start="4:26" pos:end="4:36"><name pos:start="4:26" pos:end="4:30">avpkt</name><operator pos:start="4:31" pos:end="4:32">-&gt;</operator><name pos:start="4:33" pos:end="4:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">buf_size</name> <init pos:start="5:18" pos:end="5:30">= <expr pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:30"><name pos:start="5:20" pos:end="5:24">avpkt</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:30">size</name></name></expr></init></decl>, <decl pos:start="5:33" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:40">n_slices</name> <init pos:start="5:42" pos:end="5:44">= <expr pos:start="5:44" pos:end="5:44"><literal type="number" pos:start="5:44" pos:end="5:44">0</literal></expr></init></decl>, <decl pos:start="5:47" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:47" pos:end="5:47">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:37"><decl pos:start="6:5" pos:end="6:36"><type pos:start="6:5" pos:end="6:16"><name pos:start="6:5" pos:end="6:14">VC1Context</name> <modifier pos:start="6:16" pos:end="6:16">*</modifier></type><name pos:start="6:17" pos:end="6:17">v</name> <init pos:start="6:19" pos:end="6:36">= <expr pos:start="6:21" pos:end="6:36"><name pos:start="6:21" pos:end="6:36"><name pos:start="6:21" pos:end="6:25">avctx</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:36">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name> <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:29"><name pos:start="7:26" pos:end="7:26">v</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:29">s</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:25"><decl pos:start="8:5" pos:end="8:24"><type pos:start="8:5" pos:end="8:13"><name pos:start="8:5" pos:end="8:11">AVFrame</name> <modifier pos:start="8:13" pos:end="8:13">*</modifier></type><name pos:start="8:14" pos:end="8:17">pict</name> <init pos:start="8:19" pos:end="8:24">= <expr pos:start="8:21" pos:end="8:24"><name pos:start="8:21" pos:end="8:24">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">buf2</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:67"><decl pos:start="10:5" pos:end="10:34"><type pos:start="10:5" pos:end="10:19"><specifier pos:start="10:5" pos:end="10:9">const</specifier> <name pos:start="10:11" pos:end="10:17">uint8_t</name> <modifier pos:start="10:19" pos:end="10:19">*</modifier></type><name pos:start="10:20" pos:end="10:28">buf_start</name> <init pos:start="10:30" pos:end="10:34">= <expr pos:start="10:32" pos:end="10:34"><name pos:start="10:32" pos:end="10:34">buf</name></expr></init></decl>, <decl pos:start="10:37" pos:end="10:66"><type ref="prev" pos:start="10:5" pos:end="10:19"><modifier pos:start="10:37" pos:end="10:37">*</modifier></type><name pos:start="10:38" pos:end="10:59">buf_start_second_field</name> <init pos:start="10:61" pos:end="10:66">= <expr pos:start="10:63" pos:end="10:66"><name pos:start="10:63" pos:end="10:66">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">mb_height</name></decl>, <decl pos:start="11:20" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:28">n_slices1</name><init pos:start="11:29" pos:end="11:31">=<expr pos:start="11:30" pos:end="11:31"><operator pos:start="11:30" pos:end="11:30">-</operator><literal type="number" pos:start="11:31" pos:end="11:31">1</literal></expr></init></decl>;</decl_stmt>
    <struct pos:start="12:5" pos:end="16:27">struct <block pos:start="12:12" pos:end="16:5">{
        <decl_stmt pos:start="13:9" pos:end="13:21"><decl pos:start="13:9" pos:end="13:20"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">buf</name></decl>;</decl_stmt>
        <decl_stmt pos:start="14:9" pos:end="14:25"><decl pos:start="14:9" pos:end="14:24"><type pos:start="14:9" pos:end="14:21"><name pos:start="14:9" pos:end="14:21">GetBitContext</name></type> <name pos:start="14:23" pos:end="14:24">gb</name></decl>;</decl_stmt>
        <decl_stmt pos:start="15:9" pos:end="15:22"><decl pos:start="15:9" pos:end="15:21"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:21">mby_start</name></decl>;</decl_stmt>
    }</block> <decl pos:start="16:7" pos:end="16:20"><modifier pos:start="16:7" pos:end="16:7">*</modifier><name pos:start="16:8" pos:end="16:13">slices</name> <init pos:start="16:15" pos:end="16:20">= <expr pos:start="16:17" pos:end="16:20"><name pos:start="16:17" pos:end="16:20">NULL</name></expr></init></decl>, <decl pos:start="16:23" pos:end="16:26"><type ref="prev" pos:start="15:9" pos:end="15:11"><modifier pos:start="16:23" pos:end="16:23">*</modifier></type><name pos:start="16:24" pos:end="16:26">tmp</name></decl>;</struct>
    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:19">second_field</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="19:25"><if pos:start="18:5" pos:end="19:25">if<condition pos:start="18:7" pos:end="18:39">(<expr pos:start="18:8" pos:end="18:38"><name pos:start="18:8" pos:end="18:15"><name pos:start="18:8" pos:end="18:8">s</name><operator pos:start="18:9" pos:end="18:10">-&gt;</operator><name pos:start="18:11" pos:end="18:15">flags</name></name> <operator pos:start="18:17" pos:end="18:17">&amp;</operator> <name pos:start="18:19" pos:end="18:38">CODEC_FLAG_LOW_DELAY</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:25"><block_content pos:start="19:9" pos:end="19:25">
        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">low_delay</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="block" pos:start="20:5" pos:end="20:34">/* no supplementary picture */</comment>
    <if_stmt pos:start="21:5" pos:end="320:14"><if pos:start="21:5" pos:end="320:14">if <condition pos:start="21:8" pos:end="21:78">(<expr pos:start="21:9" pos:end="21:77"><name pos:start="21:9" pos:end="21:16">buf_size</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal> <operator pos:start="21:23" pos:end="21:24">||</operator> <operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:34">buf_size</name> <operator pos:start="21:36" pos:end="21:37">==</operator> <literal type="number" pos:start="21:39" pos:end="21:39">4</literal> <operator pos:start="21:41" pos:end="21:42">&amp;&amp;</operator> <call pos:start="21:44" pos:end="21:55"><name pos:start="21:44" pos:end="21:50">AV_RB32</name><argument_list pos:start="21:51" pos:end="21:55">(<argument pos:start="21:52" pos:end="21:54"><expr pos:start="21:52" pos:end="21:54"><name pos:start="21:52" pos:end="21:54">buf</name></expr></argument>)</argument_list></call> <operator pos:start="21:57" pos:end="21:58">==</operator> <name pos:start="21:60" pos:end="21:76">VC1_CODE_ENDOFSEQ</name><operator pos:start="21:77" pos:end="21:77">)</operator></expr>)</condition> <block pos:start="21:80" pos:end="320:14">{<block_content pos:start="23:9" pos:end="320:14">
        <comment type="block" pos:start="22:9" pos:end="22:43">/* special case for last picture */</comment>
        <if_stmt pos:start="23:9" pos:end="320:14"><if pos:start="23:9" pos:end="320:14">if <condition pos:start="23:12" pos:end="23:53">(<expr pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:24">low_delay</name></name> <operator pos:start="23:26" pos:end="23:27">==</operator> <literal type="number" pos:start="23:29" pos:end="23:29">0</literal> <operator pos:start="23:31" pos:end="23:32">&amp;&amp;</operator> <name pos:start="23:34" pos:end="23:52"><name pos:start="23:34" pos:end="23:34">s</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:52">next_picture_ptr</name></name></expr>)</condition> <block pos:start="23:55" pos:end="320:14">{<block_content pos:start="24:13" pos:end="320:14">
            <expr_stmt pos:start="24:13" pos:end="24:43"><expr pos:start="24:13" pos:end="24:42"><operator pos:start="24:13" pos:end="24:13">*</operator><name pos:start="24:14" pos:end="24:17">pict</name> <operator pos:start="24:19" pos:end="24:19">=</operator> <name pos:start="24:21" pos:end="24:42"><name pos:start="24:21" pos:end="24:21">s</name><operator pos:start="24:22" pos:end="24:23">-&gt;</operator><name pos:start="24:24" pos:end="24:39">next_picture_ptr</name><operator pos:start="24:40" pos:end="24:41">-&gt;</operator><name pos:start="24:42" pos:end="24:42">f</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="25:39"><expr pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:31">next_picture_ptr</name></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <name pos:start="25:35" pos:end="25:38">NULL</name></expr>;</expr_stmt>
            <expr_stmt pos:start="26:13" pos:end="26:41"><expr pos:start="26:13" pos:end="26:40"><operator pos:start="26:13" pos:end="26:13">*</operator><name pos:start="26:14" pos:end="26:22">data_size</name> <operator pos:start="26:24" pos:end="26:24">=</operator> <sizeof pos:start="26:26" pos:end="26:40">sizeof<argument_list pos:start="26:32" pos:end="26:40">(<argument pos:start="26:33" pos:end="26:39"><expr pos:start="26:33" pos:end="26:39"><name pos:start="26:33" pos:end="26:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
        <return pos:start="27:9" pos:end="27:24">return <expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23">buf_size</name></expr>;</return>
    <if_stmt pos:start="28:5" pos:end="320:14"><if pos:start="28:5" pos:end="320:14">if <condition pos:start="28:8" pos:end="28:62">(<expr pos:start="28:9" pos:end="28:61"><name pos:start="28:9" pos:end="28:37"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:16">avctx</name><operator pos:start="28:17" pos:end="28:18">-&gt;</operator><name pos:start="28:19" pos:end="28:23">codec</name><operator pos:start="28:24" pos:end="28:25">-&gt;</operator><name pos:start="28:26" pos:end="28:37">capabilities</name></name><operator pos:start="28:38" pos:end="28:38">&amp;</operator><name pos:start="28:39" pos:end="28:61">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition> <block pos:start="28:64" pos:end="320:14">{<block_content pos:start="29:9" pos:end="320:14">
        <if_stmt pos:start="29:9" pos:end="32:50"><if pos:start="29:9" pos:end="30:51">if <condition pos:start="29:12" pos:end="29:42">(<expr pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:13">v</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">profile</name></name> <operator pos:start="29:24" pos:end="29:24">&lt;</operator> <name pos:start="29:26" pos:end="29:41">PROFILE_ADVANCED</name></expr>)</condition><block type="pseudo" pos:start="30:13" pos:end="30:51"><block_content pos:start="30:13" pos:end="30:51">
            <expr_stmt pos:start="30:13" pos:end="30:51"><expr pos:start="30:13" pos:end="30:50"><name pos:start="30:13" pos:end="30:26"><name pos:start="30:13" pos:end="30:17">avctx</name><operator pos:start="30:18" pos:end="30:19">-&gt;</operator><name pos:start="30:20" pos:end="30:26">pix_fmt</name></name> <operator pos:start="30:28" pos:end="30:28">=</operator> <name pos:start="30:30" pos:end="30:50">AV_PIX_FMT_VDPAU_WMV3</name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="31:9" pos:end="32:50">else<block type="pseudo" pos:start="32:13" pos:end="32:50"><block_content pos:start="32:13" pos:end="32:50">
            <expr_stmt pos:start="32:13" pos:end="32:50"><expr pos:start="32:13" pos:end="32:49"><name pos:start="32:13" pos:end="32:26"><name pos:start="32:13" pos:end="32:17">avctx</name><operator pos:start="32:18" pos:end="32:19">-&gt;</operator><name pos:start="32:20" pos:end="32:26">pix_fmt</name></name> <operator pos:start="32:28" pos:end="32:28">=</operator> <name pos:start="32:30" pos:end="32:49">AV_PIX_FMT_VDPAU_VC1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <comment type="line" pos:start="33:5" pos:end="33:65">//for advanced profile we may need to parse and unescape data</comment>
    <if_stmt pos:start="34:5" pos:end="320:14"><if pos:start="34:5" pos:end="320:14">if <condition pos:start="34:8" pos:end="34:86">(<expr pos:start="34:9" pos:end="34:85"><name pos:start="34:9" pos:end="34:23"><name pos:start="34:9" pos:end="34:13">avctx</name><operator pos:start="34:14" pos:end="34:15">-&gt;</operator><name pos:start="34:16" pos:end="34:23">codec_id</name></name> <operator pos:start="34:25" pos:end="34:26">==</operator> <name pos:start="34:28" pos:end="34:42">AV_CODEC_ID_VC1</name> <operator pos:start="34:44" pos:end="34:45">||</operator> <name pos:start="34:47" pos:end="34:61"><name pos:start="34:47" pos:end="34:51">avctx</name><operator pos:start="34:52" pos:end="34:53">-&gt;</operator><name pos:start="34:54" pos:end="34:61">codec_id</name></name> <operator pos:start="34:63" pos:end="34:64">==</operator> <name pos:start="34:66" pos:end="34:85">AV_CODEC_ID_VC1IMAGE</name></expr>)</condition> <block pos:start="34:88" pos:end="320:14">{<block_content pos:start="35:9" pos:end="320:14">
        <decl_stmt pos:start="35:9" pos:end="35:26"><decl pos:start="35:9" pos:end="35:25"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:21">buf_size2</name> <init pos:start="35:23" pos:end="35:25">= <expr pos:start="35:25" pos:end="35:25"><literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="36:9" pos:end="36:67"><expr pos:start="36:9" pos:end="36:66"><name pos:start="36:9" pos:end="36:12">buf2</name> <operator pos:start="36:14" pos:end="36:14">=</operator> <call pos:start="36:16" pos:end="36:66"><name pos:start="36:16" pos:end="36:25">av_mallocz</name><argument_list pos:start="36:26" pos:end="36:66">(<argument pos:start="36:27" pos:end="36:65"><expr pos:start="36:27" pos:end="36:65"><name pos:start="36:27" pos:end="36:34">buf_size</name> <operator pos:start="36:36" pos:end="36:36">+</operator> <name pos:start="36:38" pos:end="36:65">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="37:9" pos:end="320:14"><if pos:start="37:9" pos:end="320:14">if <condition pos:start="37:12" pos:end="37:36">(<expr pos:start="37:13" pos:end="37:35"><call pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:21">IS_MARKER</name><argument_list pos:start="37:22" pos:end="37:35">(<argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><call pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:29">AV_RB32</name><argument_list pos:start="37:30" pos:end="37:34">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:38" pos:end="320:14">{<block_content pos:start="38:13" pos:end="320:14"> <comment type="block" pos:start="37:40" pos:end="37:92">/* frame starts with marker and needs to be parsed */</comment>
            <decl_stmt pos:start="38:13" pos:end="38:46"><decl pos:start="38:13" pos:end="38:32"><type pos:start="38:13" pos:end="38:27"><specifier pos:start="38:13" pos:end="38:17">const</specifier> <name pos:start="38:19" pos:end="38:25">uint8_t</name> <modifier pos:start="38:27" pos:end="38:27">*</modifier></type><name pos:start="38:28" pos:end="38:32">start</name></decl>, <decl pos:start="38:35" pos:end="38:38"><type ref="prev" pos:start="38:13" pos:end="38:27"><modifier pos:start="38:35" pos:end="38:35">*</modifier></type><name pos:start="38:36" pos:end="38:38">end</name></decl>, <decl pos:start="38:41" pos:end="38:45"><type ref="prev" pos:start="38:13" pos:end="38:27"><modifier pos:start="38:41" pos:end="38:41">*</modifier></type><name pos:start="38:42" pos:end="38:45">next</name></decl>;</decl_stmt>
            <decl_stmt pos:start="39:13" pos:end="39:21"><decl pos:start="39:13" pos:end="39:20"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:20">size</name></decl>;</decl_stmt>
            <expr_stmt pos:start="40:13" pos:end="40:23"><expr pos:start="40:13" pos:end="40:22"><name pos:start="40:13" pos:end="40:16">next</name> <operator pos:start="40:18" pos:end="40:18">=</operator> <name pos:start="40:20" pos:end="40:22">buf</name></expr>;</expr_stmt>
            <for pos:start="41:13" pos:end="320:14">for <control pos:start="41:17" pos:end="41:77">(<init pos:start="41:18" pos:end="41:51"><expr pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:22">start</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:28">buf</name></expr><operator pos:start="41:29" pos:end="41:29">,</operator> <expr pos:start="41:31" pos:end="41:50"><name pos:start="41:31" pos:end="41:33">end</name> <operator pos:start="41:35" pos:end="41:35">=</operator> <name pos:start="41:37" pos:end="41:39">buf</name> <operator pos:start="41:41" pos:end="41:41">+</operator> <name pos:start="41:43" pos:end="41:50">buf_size</name></expr>;</init> <condition pos:start="41:53" pos:end="41:63"><expr pos:start="41:53" pos:end="41:62"><name pos:start="41:53" pos:end="41:56">next</name> <operator pos:start="41:58" pos:end="41:58">&lt;</operator> <name pos:start="41:60" pos:end="41:62">end</name></expr>;</condition> <incr pos:start="41:65" pos:end="41:76"><expr pos:start="41:65" pos:end="41:76"><name pos:start="41:65" pos:end="41:69">start</name> <operator pos:start="41:71" pos:end="41:71">=</operator> <name pos:start="41:73" pos:end="41:76">next</name></expr></incr>)</control> <block pos:start="41:79" pos:end="320:14">{<block_content pos:start="42:17" pos:end="320:14">
                <expr_stmt pos:start="42:17" pos:end="42:56"><expr pos:start="42:17" pos:end="42:55"><name pos:start="42:17" pos:end="42:20">next</name> <operator pos:start="42:22" pos:end="42:22">=</operator> <call pos:start="42:24" pos:end="42:55"><name pos:start="42:24" pos:end="42:39">find_next_marker</name><argument_list pos:start="42:40" pos:end="42:55">(<argument pos:start="42:41" pos:end="42:49"><expr pos:start="42:41" pos:end="42:49"><name pos:start="42:41" pos:end="42:45">start</name> <operator pos:start="42:47" pos:end="42:47">+</operator> <literal type="number" pos:start="42:49" pos:end="42:49">4</literal></expr></argument>, <argument pos:start="42:52" pos:end="42:54"><expr pos:start="42:52" pos:end="42:54"><name pos:start="42:52" pos:end="42:54">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="43:17" pos:end="43:40"><expr pos:start="43:17" pos:end="43:39"><name pos:start="43:17" pos:end="43:20">size</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:27">next</name> <operator pos:start="43:29" pos:end="43:29">-</operator> <name pos:start="43:31" pos:end="43:35">start</name> <operator pos:start="43:37" pos:end="43:37">-</operator> <literal type="number" pos:start="43:39" pos:end="43:39">4</literal></expr>;</expr_stmt>
                <if_stmt pos:start="44:17" pos:end="44:40"><if pos:start="44:17" pos:end="44:40">if <condition pos:start="44:20" pos:end="44:30">(<expr pos:start="44:21" pos:end="44:29"><name pos:start="44:21" pos:end="44:24">size</name> <operator pos:start="44:26" pos:end="44:27">&lt;=</operator> <literal type="number" pos:start="44:29" pos:end="44:29">0</literal></expr>)</condition><block type="pseudo" pos:start="44:32" pos:end="44:40"><block_content pos:start="44:32" pos:end="44:40"> <continue pos:start="44:32" pos:end="44:40">continue;</continue></block_content></block></if></if_stmt>
                <switch pos:start="45:17" pos:end="320:14">switch <condition pos:start="45:24" pos:end="45:39">(<expr pos:start="45:25" pos:end="45:38"><call pos:start="45:25" pos:end="45:38"><name pos:start="45:25" pos:end="45:31">AV_RB32</name><argument_list pos:start="45:32" pos:end="45:38">(<argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">start</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:41" pos:end="320:14">{<block_content pos:start="46:17" pos:end="320:14">
                <case pos:start="46:17" pos:end="46:36">case <expr pos:start="46:22" pos:end="46:35"><name pos:start="46:22" pos:end="46:35">VC1_CODE_FRAME</name></expr>:</case>
                    <if_stmt pos:start="47:21" pos:end="49:42"><if pos:start="47:21" pos:end="49:42">if <condition pos:start="47:24" pos:end="48:78">(<expr pos:start="47:25" pos:end="48:77"><name pos:start="47:25" pos:end="47:38"><name pos:start="47:25" pos:end="47:29">avctx</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:38">hwaccel</name></name> <operator pos:start="47:40" pos:end="47:41">||</operator>
                        <name pos:start="48:25" pos:end="48:53"><name pos:start="48:25" pos:end="48:25">s</name><operator pos:start="48:26" pos:end="48:27">-&gt;</operator><name pos:start="48:28" pos:end="48:32">avctx</name><operator pos:start="48:33" pos:end="48:34">-&gt;</operator><name pos:start="48:35" pos:end="48:39">codec</name><operator pos:start="48:40" pos:end="48:41">-&gt;</operator><name pos:start="48:42" pos:end="48:53">capabilities</name></name><operator pos:start="48:54" pos:end="48:54">&amp;</operator><name pos:start="48:55" pos:end="48:77">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="49:25" pos:end="49:42"><block_content pos:start="49:25" pos:end="49:42">
                        <expr_stmt pos:start="49:25" pos:end="49:42"><expr pos:start="49:25" pos:end="49:41"><name pos:start="49:25" pos:end="49:33">buf_start</name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:41">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="50:21" pos:end="50:75"><expr pos:start="50:21" pos:end="50:74"><name pos:start="50:21" pos:end="50:29">buf_size2</name> <operator pos:start="50:31" pos:end="50:31">=</operator> <call pos:start="50:33" pos:end="50:74"><name pos:start="50:33" pos:end="50:51">vc1_unescape_buffer</name><argument_list pos:start="50:52" pos:end="50:74">(<argument pos:start="50:53" pos:end="50:61"><expr pos:start="50:53" pos:end="50:61"><name pos:start="50:53" pos:end="50:57">start</name> <operator pos:start="50:59" pos:end="50:59">+</operator> <literal type="number" pos:start="50:61" pos:end="50:61">4</literal></expr></argument>, <argument pos:start="50:64" pos:end="50:67"><expr pos:start="50:64" pos:end="50:67"><name pos:start="50:64" pos:end="50:67">size</name></expr></argument>, <argument pos:start="50:70" pos:end="50:73"><expr pos:start="50:70" pos:end="50:73"><name pos:start="50:70" pos:end="50:73">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:start="51:21" pos:end="51:26">break;</break>
                <case pos:start="52:17" pos:end="52:36">case <expr pos:start="52:22" pos:end="52:35"><name pos:start="52:22" pos:end="52:35">VC1_CODE_FIELD</name></expr>:</case> <block pos:start="52:38" pos:end="320:14">{<block_content pos:start="53:21" pos:end="320:14">
                    <decl_stmt pos:start="53:21" pos:end="53:34"><decl pos:start="53:21" pos:end="53:33"><type pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:23">int</name></type> <name pos:start="53:25" pos:end="53:33">buf_size3</name></decl>;</decl_stmt>
                    <if_stmt pos:start="54:21" pos:end="56:55"><if pos:start="54:21" pos:end="56:55">if <condition pos:start="54:24" pos:end="55:78">(<expr pos:start="54:25" pos:end="55:77"><name pos:start="54:25" pos:end="54:38"><name pos:start="54:25" pos:end="54:29">avctx</name><operator pos:start="54:30" pos:end="54:31">-&gt;</operator><name pos:start="54:32" pos:end="54:38">hwaccel</name></name> <operator pos:start="54:40" pos:end="54:41">||</operator>
                        <name pos:start="55:25" pos:end="55:53"><name pos:start="55:25" pos:end="55:25">s</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:32">avctx</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:39">codec</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:53">capabilities</name></name><operator pos:start="55:54" pos:end="55:54">&amp;</operator><name pos:start="55:55" pos:end="55:77">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="56:25" pos:end="56:55"><block_content pos:start="56:25" pos:end="56:55">
                        <expr_stmt pos:start="56:25" pos:end="56:55"><expr pos:start="56:25" pos:end="56:54"><name pos:start="56:25" pos:end="56:46">buf_start_second_field</name> <operator pos:start="56:48" pos:end="56:48">=</operator> <name pos:start="56:50" pos:end="56:54">start</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="57:21" pos:end="57:77"><expr pos:start="57:21" pos:end="57:76"><name pos:start="57:21" pos:end="57:23">tmp</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <call pos:start="57:27" pos:end="57:76"><name pos:start="57:27" pos:end="57:36">av_realloc</name><argument_list pos:start="57:37" pos:end="57:76">(<argument pos:start="57:38" pos:end="57:43"><expr pos:start="57:38" pos:end="57:43"><name pos:start="57:38" pos:end="57:43">slices</name></expr></argument>, <argument pos:start="57:46" pos:end="57:75"><expr pos:start="57:46" pos:end="57:75"><sizeof pos:start="57:46" pos:end="57:60">sizeof<argument_list pos:start="57:52" pos:end="57:60">(<argument pos:start="57:53" pos:end="57:59"><expr pos:start="57:53" pos:end="57:59"><operator pos:start="57:53" pos:end="57:53">*</operator><name pos:start="57:54" pos:end="57:59">slices</name></expr></argument>)</argument_list></sizeof> <operator pos:start="57:62" pos:end="57:62">*</operator> <operator pos:start="57:64" pos:end="57:64">(</operator><name pos:start="57:65" pos:end="57:72">n_slices</name><operator pos:start="57:73" pos:end="57:73">+</operator><literal type="number" pos:start="57:74" pos:end="57:74">1</literal><operator pos:start="57:75" pos:end="57:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="58:21" pos:end="59:33"><if pos:start="58:21" pos:end="59:33">if <condition pos:start="58:24" pos:end="58:29">(<expr pos:start="58:25" pos:end="58:28"><operator pos:start="58:25" pos:end="58:25">!</operator><name pos:start="58:26" pos:end="58:28">tmp</name></expr>)</condition><block type="pseudo" pos:start="59:21" pos:end="59:33"><block_content pos:start="59:21" pos:end="59:33">
                    <expr_stmt pos:start="59:21" pos:end="59:33"><expr pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:26">slices</name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:32">tmp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="60:21" pos:end="60:95"><expr pos:start="60:21" pos:end="60:94"><name pos:start="60:21" pos:end="60:36"><name pos:start="60:21" pos:end="60:26">slices</name><index pos:start="60:27" pos:end="60:36">[<expr pos:start="60:28" pos:end="60:35"><name pos:start="60:28" pos:end="60:35">n_slices</name></expr>]</index></name><operator pos:start="60:37" pos:end="60:37">.</operator><name pos:start="60:38" pos:end="60:40">buf</name> <operator pos:start="60:42" pos:end="60:42">=</operator> <call pos:start="60:44" pos:end="60:94"><name pos:start="60:44" pos:end="60:53">av_mallocz</name><argument_list pos:start="60:54" pos:end="60:94">(<argument pos:start="60:55" pos:end="60:93"><expr pos:start="60:55" pos:end="60:93"><name pos:start="60:55" pos:end="60:62">buf_size</name> <operator pos:start="60:64" pos:end="60:64">+</operator> <name pos:start="60:66" pos:end="60:93">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="61:21" pos:end="63:74"><if pos:start="61:21" pos:end="63:74">if <condition pos:start="61:24" pos:end="61:46">(<expr pos:start="61:25" pos:end="61:45"><operator pos:start="61:25" pos:end="61:25">!</operator><name pos:start="61:26" pos:end="61:41"><name pos:start="61:26" pos:end="61:31">slices</name><index pos:start="61:32" pos:end="61:41">[<expr pos:start="61:33" pos:end="61:40"><name pos:start="61:33" pos:end="61:40">n_slices</name></expr>]</index></name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:45">buf</name></expr>)</condition><block type="pseudo" pos:start="62:21" pos:end="63:74"><block_content pos:start="62:21" pos:end="63:74">
                    <expr_stmt pos:start="62:21" pos:end="63:74"><expr pos:start="62:21" pos:end="63:73"><name pos:start="62:21" pos:end="62:29">buf_size3</name> <operator pos:start="62:31" pos:end="62:31">=</operator> <call pos:start="62:33" pos:end="63:73"><name pos:start="62:33" pos:end="62:51">vc1_unescape_buffer</name><argument_list pos:start="62:52" pos:end="63:73">(<argument pos:start="62:53" pos:end="62:61"><expr pos:start="62:53" pos:end="62:61"><name pos:start="62:53" pos:end="62:57">start</name> <operator pos:start="62:59" pos:end="62:59">+</operator> <literal type="number" pos:start="62:61" pos:end="62:61">4</literal></expr></argument>, <argument pos:start="62:64" pos:end="62:67"><expr pos:start="62:64" pos:end="62:67"><name pos:start="62:64" pos:end="62:67">size</name></expr></argument>,
                                                    <argument pos:start="63:53" pos:end="63:72"><expr pos:start="63:53" pos:end="63:72"><name pos:start="63:53" pos:end="63:68"><name pos:start="63:53" pos:end="63:58">slices</name><index pos:start="63:59" pos:end="63:68">[<expr pos:start="63:60" pos:end="63:67"><name pos:start="63:60" pos:end="63:67">n_slices</name></expr>]</index></name><operator pos:start="63:69" pos:end="63:69">.</operator><name pos:start="63:70" pos:end="63:72">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="64:21" pos:end="65:50"><expr pos:start="64:21" pos:end="65:49"><call pos:start="64:21" pos:end="65:49"><name pos:start="64:21" pos:end="64:33">init_get_bits</name><argument_list pos:start="64:34" pos:end="65:49">(<argument pos:start="64:35" pos:end="64:54"><expr pos:start="64:35" pos:end="64:54"><operator pos:start="64:35" pos:end="64:35">&amp;</operator><name pos:start="64:36" pos:end="64:51"><name pos:start="64:36" pos:end="64:41">slices</name><index pos:start="64:42" pos:end="64:51">[<expr pos:start="64:43" pos:end="64:50"><name pos:start="64:43" pos:end="64:50">n_slices</name></expr>]</index></name><operator pos:start="64:52" pos:end="64:52">.</operator><name pos:start="64:53" pos:end="64:54">gb</name></expr></argument>, <argument pos:start="64:57" pos:end="64:76"><expr pos:start="64:57" pos:end="64:76"><name pos:start="64:57" pos:end="64:72"><name pos:start="64:57" pos:end="64:62">slices</name><index pos:start="64:63" pos:end="64:72">[<expr pos:start="64:64" pos:end="64:71"><name pos:start="64:64" pos:end="64:71">n_slices</name></expr>]</index></name><operator pos:start="64:73" pos:end="64:73">.</operator><name pos:start="64:74" pos:end="64:76">buf</name></expr></argument>,
                                  <argument pos:start="65:35" pos:end="65:48"><expr pos:start="65:35" pos:end="65:48"><name pos:start="65:35" pos:end="65:43">buf_size3</name> <operator pos:start="65:45" pos:end="65:46">&lt;&lt;</operator> <literal type="number" pos:start="65:48" pos:end="65:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <comment type="block" pos:start="66:21" pos:end="67:43">/* assuming that the field marker is at the exact middle,
                       hope it's correct */</comment>
                    <expr_stmt pos:start="68:21" pos:end="68:67"><expr pos:start="68:21" pos:end="68:66"><name pos:start="68:21" pos:end="68:36"><name pos:start="68:21" pos:end="68:26">slices</name><index pos:start="68:27" pos:end="68:36">[<expr pos:start="68:28" pos:end="68:35"><name pos:start="68:28" pos:end="68:35">n_slices</name></expr>]</index></name><operator pos:start="68:37" pos:end="68:37">.</operator><name pos:start="68:38" pos:end="68:46">mby_start</name> <operator pos:start="68:48" pos:end="68:48">=</operator> <name pos:start="68:50" pos:end="68:61"><name pos:start="68:50" pos:end="68:50">s</name><operator pos:start="68:51" pos:end="68:52">-&gt;</operator><name pos:start="68:53" pos:end="68:61">mb_height</name></name> <operator pos:start="68:63" pos:end="68:64">&gt;&gt;</operator> <literal type="number" pos:start="68:66" pos:end="68:66">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="69:21" pos:end="69:45"><expr pos:start="69:21" pos:end="69:44"><name pos:start="69:21" pos:end="69:29">n_slices1</name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:40">n_slices</name> <operator pos:start="69:42" pos:end="69:42">-</operator> <literal type="number" pos:start="69:44" pos:end="69:44">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="69:47" pos:end="69:91">// index of the last slice of the first field</comment>
                    <expr_stmt pos:start="70:21" pos:end="70:31"><expr pos:start="70:21" pos:end="70:30"><name pos:start="70:21" pos:end="70:28">n_slices</name><operator pos:start="70:29" pos:end="70:30">++</operator></expr>;</expr_stmt>
                    <break pos:start="71:21" pos:end="71:26">break;</break>
                <case pos:start="72:17" pos:end="72:41">case <expr pos:start="72:22" pos:end="72:40"><name pos:start="72:22" pos:end="72:40">VC1_CODE_ENTRYPOINT</name></expr>:</case> <comment type="block" pos:start="72:43" pos:end="72:78">/* it should be before frame data */</comment>
                    <expr_stmt pos:start="73:21" pos:end="73:75"><expr pos:start="73:21" pos:end="73:74"><name pos:start="73:21" pos:end="73:29">buf_size2</name> <operator pos:start="73:31" pos:end="73:31">=</operator> <call pos:start="73:33" pos:end="73:74"><name pos:start="73:33" pos:end="73:51">vc1_unescape_buffer</name><argument_list pos:start="73:52" pos:end="73:74">(<argument pos:start="73:53" pos:end="73:61"><expr pos:start="73:53" pos:end="73:61"><name pos:start="73:53" pos:end="73:57">start</name> <operator pos:start="73:59" pos:end="73:59">+</operator> <literal type="number" pos:start="73:61" pos:end="73:61">4</literal></expr></argument>, <argument pos:start="73:64" pos:end="73:67"><expr pos:start="73:64" pos:end="73:67"><name pos:start="73:64" pos:end="73:67">size</name></expr></argument>, <argument pos:start="73:70" pos:end="73:73"><expr pos:start="73:70" pos:end="73:73"><name pos:start="73:70" pos:end="73:73">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="74:21" pos:end="74:63"><expr pos:start="74:21" pos:end="74:62"><call pos:start="74:21" pos:end="74:62"><name pos:start="74:21" pos:end="74:33">init_get_bits</name><argument_list pos:start="74:34" pos:end="74:62">(<argument pos:start="74:35" pos:end="74:40"><expr pos:start="74:35" pos:end="74:40"><operator pos:start="74:35" pos:end="74:35">&amp;</operator><name pos:start="74:36" pos:end="74:40"><name pos:start="74:36" pos:end="74:36">s</name><operator pos:start="74:37" pos:end="74:38">-&gt;</operator><name pos:start="74:39" pos:end="74:40">gb</name></name></expr></argument>, <argument pos:start="74:43" pos:end="74:46"><expr pos:start="74:43" pos:end="74:46"><name pos:start="74:43" pos:end="74:46">buf2</name></expr></argument>, <argument pos:start="74:49" pos:end="74:61"><expr pos:start="74:49" pos:end="74:61"><name pos:start="74:49" pos:end="74:57">buf_size2</name> <operator pos:start="74:59" pos:end="74:59">*</operator> <literal type="number" pos:start="74:61" pos:end="74:61">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="75:21" pos:end="75:64"><expr pos:start="75:21" pos:end="75:63"><call pos:start="75:21" pos:end="75:63"><name pos:start="75:21" pos:end="75:45">ff_vc1_decode_entry_point</name><argument_list pos:start="75:46" pos:end="75:63">(<argument pos:start="75:47" pos:end="75:51"><expr pos:start="75:47" pos:end="75:51"><name pos:start="75:47" pos:end="75:51">avctx</name></expr></argument>, <argument pos:start="75:54" pos:end="75:54"><expr pos:start="75:54" pos:end="75:54"><name pos:start="75:54" pos:end="75:54">v</name></expr></argument>, <argument pos:start="75:57" pos:end="75:62"><expr pos:start="75:57" pos:end="75:62"><operator pos:start="75:57" pos:end="75:57">&amp;</operator><name pos:start="75:58" pos:end="75:62"><name pos:start="75:58" pos:end="75:58">s</name><operator pos:start="75:59" pos:end="75:60">-&gt;</operator><name pos:start="75:61" pos:end="75:62">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:start="76:21" pos:end="76:26">break;</break>
                <case pos:start="77:17" pos:end="77:36">case <expr pos:start="77:22" pos:end="77:35"><name pos:start="77:22" pos:end="77:35">VC1_CODE_SLICE</name></expr>:</case> <block pos:start="77:38" pos:end="91:9">{<block_content pos:start="78:21" pos:end="90:26">
                    <decl_stmt pos:start="78:21" pos:end="78:34"><decl pos:start="78:21" pos:end="78:33"><type pos:start="78:21" pos:end="78:23"><name pos:start="78:21" pos:end="78:23">int</name></type> <name pos:start="78:25" pos:end="78:33">buf_size3</name></decl>;</decl_stmt>
                    <expr_stmt pos:start="79:21" pos:end="79:77"><expr pos:start="79:21" pos:end="79:76"><name pos:start="79:21" pos:end="79:23">tmp</name> <operator pos:start="79:25" pos:end="79:25">=</operator> <call pos:start="79:27" pos:end="79:76"><name pos:start="79:27" pos:end="79:36">av_realloc</name><argument_list pos:start="79:37" pos:end="79:76">(<argument pos:start="79:38" pos:end="79:43"><expr pos:start="79:38" pos:end="79:43"><name pos:start="79:38" pos:end="79:43">slices</name></expr></argument>, <argument pos:start="79:46" pos:end="79:75"><expr pos:start="79:46" pos:end="79:75"><sizeof pos:start="79:46" pos:end="79:60">sizeof<argument_list pos:start="79:52" pos:end="79:60">(<argument pos:start="79:53" pos:end="79:59"><expr pos:start="79:53" pos:end="79:59"><operator pos:start="79:53" pos:end="79:53">*</operator><name pos:start="79:54" pos:end="79:59">slices</name></expr></argument>)</argument_list></sizeof> <operator pos:start="79:62" pos:end="79:62">*</operator> <operator pos:start="79:64" pos:end="79:64">(</operator><name pos:start="79:65" pos:end="79:72">n_slices</name><operator pos:start="79:73" pos:end="79:73">+</operator><literal type="number" pos:start="79:74" pos:end="79:74">1</literal><operator pos:start="79:75" pos:end="79:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="80:21" pos:end="81:33"><if pos:start="80:21" pos:end="81:33">if <condition pos:start="80:24" pos:end="80:29">(<expr pos:start="80:25" pos:end="80:28"><operator pos:start="80:25" pos:end="80:25">!</operator><name pos:start="80:26" pos:end="80:28">tmp</name></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:33"><block_content pos:start="81:21" pos:end="81:33">
                    <expr_stmt pos:start="81:21" pos:end="81:33"><expr pos:start="81:21" pos:end="81:32"><name pos:start="81:21" pos:end="81:26">slices</name> <operator pos:start="81:28" pos:end="81:28">=</operator> <name pos:start="81:30" pos:end="81:32">tmp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="82:21" pos:end="82:95"><expr pos:start="82:21" pos:end="82:94"><name pos:start="82:21" pos:end="82:36"><name pos:start="82:21" pos:end="82:26">slices</name><index pos:start="82:27" pos:end="82:36">[<expr pos:start="82:28" pos:end="82:35"><name pos:start="82:28" pos:end="82:35">n_slices</name></expr>]</index></name><operator pos:start="82:37" pos:end="82:37">.</operator><name pos:start="82:38" pos:end="82:40">buf</name> <operator pos:start="82:42" pos:end="82:42">=</operator> <call pos:start="82:44" pos:end="82:94"><name pos:start="82:44" pos:end="82:53">av_mallocz</name><argument_list pos:start="82:54" pos:end="82:94">(<argument pos:start="82:55" pos:end="82:93"><expr pos:start="82:55" pos:end="82:93"><name pos:start="82:55" pos:end="82:62">buf_size</name> <operator pos:start="82:64" pos:end="82:64">+</operator> <name pos:start="82:66" pos:end="82:93">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="83:21" pos:end="85:74"><if pos:start="83:21" pos:end="85:74">if <condition pos:start="83:24" pos:end="83:46">(<expr pos:start="83:25" pos:end="83:45"><operator pos:start="83:25" pos:end="83:25">!</operator><name pos:start="83:26" pos:end="83:41"><name pos:start="83:26" pos:end="83:31">slices</name><index pos:start="83:32" pos:end="83:41">[<expr pos:start="83:33" pos:end="83:40"><name pos:start="83:33" pos:end="83:40">n_slices</name></expr>]</index></name><operator pos:start="83:42" pos:end="83:42">.</operator><name pos:start="83:43" pos:end="83:45">buf</name></expr>)</condition><block type="pseudo" pos:start="84:21" pos:end="85:74"><block_content pos:start="84:21" pos:end="85:74">
                    <expr_stmt pos:start="84:21" pos:end="85:74"><expr pos:start="84:21" pos:end="85:73"><name pos:start="84:21" pos:end="84:29">buf_size3</name> <operator pos:start="84:31" pos:end="84:31">=</operator> <call pos:start="84:33" pos:end="85:73"><name pos:start="84:33" pos:end="84:51">vc1_unescape_buffer</name><argument_list pos:start="84:52" pos:end="85:73">(<argument pos:start="84:53" pos:end="84:61"><expr pos:start="84:53" pos:end="84:61"><name pos:start="84:53" pos:end="84:57">start</name> <operator pos:start="84:59" pos:end="84:59">+</operator> <literal type="number" pos:start="84:61" pos:end="84:61">4</literal></expr></argument>, <argument pos:start="84:64" pos:end="84:67"><expr pos:start="84:64" pos:end="84:67"><name pos:start="84:64" pos:end="84:67">size</name></expr></argument>,
                                                    <argument pos:start="85:53" pos:end="85:72"><expr pos:start="85:53" pos:end="85:72"><name pos:start="85:53" pos:end="85:68"><name pos:start="85:53" pos:end="85:58">slices</name><index pos:start="85:59" pos:end="85:68">[<expr pos:start="85:60" pos:end="85:67"><name pos:start="85:60" pos:end="85:67">n_slices</name></expr>]</index></name><operator pos:start="85:69" pos:end="85:69">.</operator><name pos:start="85:70" pos:end="85:72">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    <expr_stmt pos:start="86:21" pos:end="87:50"><expr pos:start="86:21" pos:end="87:49"><call pos:start="86:21" pos:end="87:49"><name pos:start="86:21" pos:end="86:33">init_get_bits</name><argument_list pos:start="86:34" pos:end="87:49">(<argument pos:start="86:35" pos:end="86:54"><expr pos:start="86:35" pos:end="86:54"><operator pos:start="86:35" pos:end="86:35">&amp;</operator><name pos:start="86:36" pos:end="86:51"><name pos:start="86:36" pos:end="86:41">slices</name><index pos:start="86:42" pos:end="86:51">[<expr pos:start="86:43" pos:end="86:50"><name pos:start="86:43" pos:end="86:50">n_slices</name></expr>]</index></name><operator pos:start="86:52" pos:end="86:52">.</operator><name pos:start="86:53" pos:end="86:54">gb</name></expr></argument>, <argument pos:start="86:57" pos:end="86:76"><expr pos:start="86:57" pos:end="86:76"><name pos:start="86:57" pos:end="86:72"><name pos:start="86:57" pos:end="86:62">slices</name><index pos:start="86:63" pos:end="86:72">[<expr pos:start="86:64" pos:end="86:71"><name pos:start="86:64" pos:end="86:71">n_slices</name></expr>]</index></name><operator pos:start="86:73" pos:end="86:73">.</operator><name pos:start="86:74" pos:end="86:76">buf</name></expr></argument>,
                                  <argument pos:start="87:35" pos:end="87:48"><expr pos:start="87:35" pos:end="87:48"><name pos:start="87:35" pos:end="87:43">buf_size3</name> <operator pos:start="87:45" pos:end="87:46">&lt;&lt;</operator> <literal type="number" pos:start="87:48" pos:end="87:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="88:21" pos:end="88:83"><expr pos:start="88:21" pos:end="88:82"><name pos:start="88:21" pos:end="88:36"><name pos:start="88:21" pos:end="88:26">slices</name><index pos:start="88:27" pos:end="88:36">[<expr pos:start="88:28" pos:end="88:35"><name pos:start="88:28" pos:end="88:35">n_slices</name></expr>]</index></name><operator pos:start="88:37" pos:end="88:37">.</operator><name pos:start="88:38" pos:end="88:46">mby_start</name> <operator pos:start="88:48" pos:end="88:48">=</operator> <call pos:start="88:50" pos:end="88:82"><name pos:start="88:50" pos:end="88:57">get_bits</name><argument_list pos:start="88:58" pos:end="88:82">(<argument pos:start="88:59" pos:end="88:78"><expr pos:start="88:59" pos:end="88:78"><operator pos:start="88:59" pos:end="88:59">&amp;</operator><name pos:start="88:60" pos:end="88:75"><name pos:start="88:60" pos:end="88:65">slices</name><index pos:start="88:66" pos:end="88:75">[<expr pos:start="88:67" pos:end="88:74"><name pos:start="88:67" pos:end="88:74">n_slices</name></expr>]</index></name><operator pos:start="88:76" pos:end="88:76">.</operator><name pos:start="88:77" pos:end="88:78">gb</name></expr></argument>, <argument pos:start="88:81" pos:end="88:81"><expr pos:start="88:81" pos:end="88:81"><literal type="number" pos:start="88:81" pos:end="88:81">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="89:21" pos:end="89:31"><expr pos:start="89:21" pos:end="89:30"><name pos:start="89:21" pos:end="89:28">n_slices</name><operator pos:start="89:29" pos:end="89:30">++</operator></expr>;</expr_stmt>
                    <break pos:start="90:21" pos:end="90:26">break;</break>
        </block_content>}</block> <if_stmt pos:start="91:11" pos:end="320:14"><if type="elseif" pos:start="91:11" pos:end="320:14">else if <condition pos:start="91:19" pos:end="91:61">(<expr pos:start="91:20" pos:end="91:60"><name pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:20">v</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:31">interlace</name></name> <operator pos:start="91:33" pos:end="91:34">&amp;&amp;</operator> <operator pos:start="91:36" pos:end="91:36">(</operator><operator pos:start="91:37" pos:end="91:37">(</operator><name pos:start="91:38" pos:end="91:43"><name pos:start="91:38" pos:end="91:40">buf</name><index pos:start="91:41" pos:end="91:43">[<expr pos:start="91:42" pos:end="91:42"><literal type="number" pos:start="91:42" pos:end="91:42">0</literal></expr>]</index></name> <operator pos:start="91:45" pos:end="91:45">&amp;</operator> <literal type="number" pos:start="91:47" pos:end="91:50">0xC0</literal><operator pos:start="91:51" pos:end="91:51">)</operator> <operator pos:start="91:53" pos:end="91:54">==</operator> <literal type="number" pos:start="91:56" pos:end="91:59">0xC0</literal><operator pos:start="91:60" pos:end="91:60">)</operator></expr>)</condition> <block pos:start="91:63" pos:end="320:14">{<block_content pos:start="92:13" pos:end="320:14"> <comment type="block" pos:start="91:65" pos:end="91:122">/* WVC1 interlaced stores both fields divided by marker */</comment>
            <decl_stmt pos:start="92:13" pos:end="92:35"><decl pos:start="92:13" pos:end="92:34"><type pos:start="92:13" pos:end="92:27"><specifier pos:start="92:13" pos:end="92:17">const</specifier> <name pos:start="92:19" pos:end="92:25">uint8_t</name> <modifier pos:start="92:27" pos:end="92:27">*</modifier></type><name pos:start="92:28" pos:end="92:34">divider</name></decl>;</decl_stmt>
            <decl_stmt pos:start="93:13" pos:end="93:26"><decl pos:start="93:13" pos:end="93:25"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:25">buf_size3</name></decl>;</decl_stmt>
            <expr_stmt pos:start="94:13" pos:end="94:60"><expr pos:start="94:13" pos:end="94:59"><name pos:start="94:13" pos:end="94:19">divider</name> <operator pos:start="94:21" pos:end="94:21">=</operator> <call pos:start="94:23" pos:end="94:59"><name pos:start="94:23" pos:end="94:38">find_next_marker</name><argument_list pos:start="94:39" pos:end="94:59">(<argument pos:start="94:40" pos:end="94:42"><expr pos:start="94:40" pos:end="94:42"><name pos:start="94:40" pos:end="94:42">buf</name></expr></argument>, <argument pos:start="94:45" pos:end="94:58"><expr pos:start="94:45" pos:end="94:58"><name pos:start="94:45" pos:end="94:47">buf</name> <operator pos:start="94:49" pos:end="94:49">+</operator> <name pos:start="94:51" pos:end="94:58">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="95:13" pos:end="113:9"><if pos:start="95:13" pos:end="97:13">if <condition pos:start="95:16" pos:end="95:84">(<expr pos:start="95:17" pos:end="95:83"><operator pos:start="95:17" pos:end="95:17">(</operator><name pos:start="95:18" pos:end="95:24">divider</name> <operator pos:start="95:26" pos:end="95:27">==</operator> <operator pos:start="95:29" pos:end="95:29">(</operator><name pos:start="95:30" pos:end="95:32">buf</name> <operator pos:start="95:34" pos:end="95:34">+</operator> <name pos:start="95:36" pos:end="95:43">buf_size</name><operator pos:start="95:44" pos:end="95:44">)</operator><operator pos:start="95:45" pos:end="95:45">)</operator> <operator pos:start="95:47" pos:end="95:48">||</operator> <call pos:start="95:50" pos:end="95:65"><name pos:start="95:50" pos:end="95:56">AV_RB32</name><argument_list pos:start="95:57" pos:end="95:65">(<argument pos:start="95:58" pos:end="95:64"><expr pos:start="95:58" pos:end="95:64"><name pos:start="95:58" pos:end="95:64">divider</name></expr></argument>)</argument_list></call> <operator pos:start="95:67" pos:end="95:68">!=</operator> <name pos:start="95:70" pos:end="95:83">VC1_CODE_FIELD</name></expr>)</condition> <block pos:start="95:86" pos:end="97:13">{<block_content pos:start="96:17" pos:end="96:80">
                <expr_stmt pos:start="96:17" pos:end="96:80"><expr pos:start="96:17" pos:end="96:79"><call pos:start="96:17" pos:end="96:79"><name pos:start="96:17" pos:end="96:22">av_log</name><argument_list pos:start="96:23" pos:end="96:79">(<argument pos:start="96:24" pos:end="96:28"><expr pos:start="96:24" pos:end="96:28"><name pos:start="96:24" pos:end="96:28">avctx</name></expr></argument>, <argument pos:start="96:31" pos:end="96:42"><expr pos:start="96:31" pos:end="96:42"><name pos:start="96:31" pos:end="96:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="96:45" pos:end="96:78"><expr pos:start="96:45" pos:end="96:78"><literal type="string" pos:start="96:45" pos:end="96:78">"Error in WVC1 interlaced frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="97:15" pos:end="113:9">else <block pos:start="97:20" pos:end="113:9">{<block_content pos:start="98:17" pos:end="112:70"> <comment type="line" pos:start="97:22" pos:end="97:65">// found field marker, unescape second field</comment>
                <if_stmt pos:start="98:17" pos:end="100:53"><if pos:start="98:17" pos:end="100:53">if <condition pos:start="98:20" pos:end="99:74">(<expr pos:start="98:21" pos:end="99:73"><name pos:start="98:21" pos:end="98:34"><name pos:start="98:21" pos:end="98:25">avctx</name><operator pos:start="98:26" pos:end="98:27">-&gt;</operator><name pos:start="98:28" pos:end="98:34">hwaccel</name></name> <operator pos:start="98:36" pos:end="98:37">||</operator>
                    <name pos:start="99:21" pos:end="99:49"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:28">avctx</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:35">codec</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:49">capabilities</name></name><operator pos:start="99:50" pos:end="99:50">&amp;</operator><name pos:start="99:51" pos:end="99:73">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="100:21" pos:end="100:53"><block_content pos:start="100:21" pos:end="100:53">
                    <expr_stmt pos:start="100:21" pos:end="100:53"><expr pos:start="100:21" pos:end="100:52"><name pos:start="100:21" pos:end="100:42">buf_start_second_field</name> <operator pos:start="100:44" pos:end="100:44">=</operator> <name pos:start="100:46" pos:end="100:52">divider</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="101:17" pos:end="101:73"><expr pos:start="101:17" pos:end="101:72"><name pos:start="101:17" pos:end="101:19">tmp</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <call pos:start="101:23" pos:end="101:72"><name pos:start="101:23" pos:end="101:32">av_realloc</name><argument_list pos:start="101:33" pos:end="101:72">(<argument pos:start="101:34" pos:end="101:39"><expr pos:start="101:34" pos:end="101:39"><name pos:start="101:34" pos:end="101:39">slices</name></expr></argument>, <argument pos:start="101:42" pos:end="101:71"><expr pos:start="101:42" pos:end="101:71"><sizeof pos:start="101:42" pos:end="101:56">sizeof<argument_list pos:start="101:48" pos:end="101:56">(<argument pos:start="101:49" pos:end="101:55"><expr pos:start="101:49" pos:end="101:55"><operator pos:start="101:49" pos:end="101:49">*</operator><name pos:start="101:50" pos:end="101:55">slices</name></expr></argument>)</argument_list></sizeof> <operator pos:start="101:58" pos:end="101:58">*</operator> <operator pos:start="101:60" pos:end="101:60">(</operator><name pos:start="101:61" pos:end="101:68">n_slices</name><operator pos:start="101:69" pos:end="101:69">+</operator><literal type="number" pos:start="101:70" pos:end="101:70">1</literal><operator pos:start="101:71" pos:end="101:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="102:17" pos:end="103:29"><if pos:start="102:17" pos:end="103:29">if <condition pos:start="102:20" pos:end="102:25">(<expr pos:start="102:21" pos:end="102:24"><operator pos:start="102:21" pos:end="102:21">!</operator><name pos:start="102:22" pos:end="102:24">tmp</name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:29"><block_content pos:start="103:17" pos:end="103:29">
                <expr_stmt pos:start="103:17" pos:end="103:29"><expr pos:start="103:17" pos:end="103:28"><name pos:start="103:17" pos:end="103:22">slices</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <name pos:start="103:26" pos:end="103:28">tmp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="104:17" pos:end="104:91"><expr pos:start="104:17" pos:end="104:90"><name pos:start="104:17" pos:end="104:32"><name pos:start="104:17" pos:end="104:22">slices</name><index pos:start="104:23" pos:end="104:32">[<expr pos:start="104:24" pos:end="104:31"><name pos:start="104:24" pos:end="104:31">n_slices</name></expr>]</index></name><operator pos:start="104:33" pos:end="104:33">.</operator><name pos:start="104:34" pos:end="104:36">buf</name> <operator pos:start="104:38" pos:end="104:38">=</operator> <call pos:start="104:40" pos:end="104:90"><name pos:start="104:40" pos:end="104:49">av_mallocz</name><argument_list pos:start="104:50" pos:end="104:90">(<argument pos:start="104:51" pos:end="104:89"><expr pos:start="104:51" pos:end="104:89"><name pos:start="104:51" pos:end="104:58">buf_size</name> <operator pos:start="104:60" pos:end="104:60">+</operator> <name pos:start="104:62" pos:end="104:89">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="105:17" pos:end="106:113"><if pos:start="105:17" pos:end="106:113">if <condition pos:start="105:20" pos:end="105:42">(<expr pos:start="105:21" pos:end="105:41"><operator pos:start="105:21" pos:end="105:21">!</operator><name pos:start="105:22" pos:end="105:37"><name pos:start="105:22" pos:end="105:27">slices</name><index pos:start="105:28" pos:end="105:37">[<expr pos:start="105:29" pos:end="105:36"><name pos:start="105:29" pos:end="105:36">n_slices</name></expr>]</index></name><operator pos:start="105:38" pos:end="105:38">.</operator><name pos:start="105:39" pos:end="105:41">buf</name></expr>)</condition><block type="pseudo" pos:start="106:17" pos:end="106:113"><block_content pos:start="106:17" pos:end="106:113">
                <expr_stmt pos:start="106:17" pos:end="106:113"><expr pos:start="106:17" pos:end="106:112"><name pos:start="106:17" pos:end="106:25">buf_size3</name> <operator pos:start="106:27" pos:end="106:27">=</operator> <call pos:start="106:29" pos:end="106:112"><name pos:start="106:29" pos:end="106:47">vc1_unescape_buffer</name><argument_list pos:start="106:48" pos:end="106:112">(<argument pos:start="106:49" pos:end="106:59"><expr pos:start="106:49" pos:end="106:59"><name pos:start="106:49" pos:end="106:55">divider</name> <operator pos:start="106:57" pos:end="106:57">+</operator> <literal type="number" pos:start="106:59" pos:end="106:59">4</literal></expr></argument>, <argument pos:start="106:62" pos:end="106:89"><expr pos:start="106:62" pos:end="106:89"><name pos:start="106:62" pos:end="106:64">buf</name> <operator pos:start="106:66" pos:end="106:66">+</operator> <name pos:start="106:68" pos:end="106:75">buf_size</name> <operator pos:start="106:77" pos:end="106:77">-</operator> <name pos:start="106:79" pos:end="106:85">divider</name> <operator pos:start="106:87" pos:end="106:87">-</operator> <literal type="number" pos:start="106:89" pos:end="106:89">4</literal></expr></argument>, <argument pos:start="106:92" pos:end="106:111"><expr pos:start="106:92" pos:end="106:111"><name pos:start="106:92" pos:end="106:107"><name pos:start="106:92" pos:end="106:97">slices</name><index pos:start="106:98" pos:end="106:107">[<expr pos:start="106:99" pos:end="106:106"><name pos:start="106:99" pos:end="106:106">n_slices</name></expr>]</index></name><operator pos:start="106:108" pos:end="106:108">.</operator><name pos:start="106:109" pos:end="106:111">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="107:17" pos:end="108:46"><expr pos:start="107:17" pos:end="108:45"><call pos:start="107:17" pos:end="108:45"><name pos:start="107:17" pos:end="107:29">init_get_bits</name><argument_list pos:start="107:30" pos:end="108:45">(<argument pos:start="107:31" pos:end="107:50"><expr pos:start="107:31" pos:end="107:50"><operator pos:start="107:31" pos:end="107:31">&amp;</operator><name pos:start="107:32" pos:end="107:47"><name pos:start="107:32" pos:end="107:37">slices</name><index pos:start="107:38" pos:end="107:47">[<expr pos:start="107:39" pos:end="107:46"><name pos:start="107:39" pos:end="107:46">n_slices</name></expr>]</index></name><operator pos:start="107:48" pos:end="107:48">.</operator><name pos:start="107:49" pos:end="107:50">gb</name></expr></argument>, <argument pos:start="107:53" pos:end="107:72"><expr pos:start="107:53" pos:end="107:72"><name pos:start="107:53" pos:end="107:68"><name pos:start="107:53" pos:end="107:58">slices</name><index pos:start="107:59" pos:end="107:68">[<expr pos:start="107:60" pos:end="107:67"><name pos:start="107:60" pos:end="107:67">n_slices</name></expr>]</index></name><operator pos:start="107:69" pos:end="107:69">.</operator><name pos:start="107:70" pos:end="107:72">buf</name></expr></argument>,
                              <argument pos:start="108:31" pos:end="108:44"><expr pos:start="108:31" pos:end="108:44"><name pos:start="108:31" pos:end="108:39">buf_size3</name> <operator pos:start="108:41" pos:end="108:42">&lt;&lt;</operator> <literal type="number" pos:start="108:44" pos:end="108:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="109:17" pos:end="109:63"><expr pos:start="109:17" pos:end="109:62"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:22">slices</name><index pos:start="109:23" pos:end="109:32">[<expr pos:start="109:24" pos:end="109:31"><name pos:start="109:24" pos:end="109:31">n_slices</name></expr>]</index></name><operator pos:start="109:33" pos:end="109:33">.</operator><name pos:start="109:34" pos:end="109:42">mby_start</name> <operator pos:start="109:44" pos:end="109:44">=</operator> <name pos:start="109:46" pos:end="109:57"><name pos:start="109:46" pos:end="109:46">s</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:57">mb_height</name></name> <operator pos:start="109:59" pos:end="109:60">&gt;&gt;</operator> <literal type="number" pos:start="109:62" pos:end="109:62">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="110:17" pos:end="110:41"><expr pos:start="110:17" pos:end="110:40"><name pos:start="110:17" pos:end="110:25">n_slices1</name> <operator pos:start="110:27" pos:end="110:27">=</operator> <name pos:start="110:29" pos:end="110:36">n_slices</name> <operator pos:start="110:38" pos:end="110:38">-</operator> <literal type="number" pos:start="110:40" pos:end="110:40">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="111:17" pos:end="111:27"><expr pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:24">n_slices</name><operator pos:start="111:25" pos:end="111:26">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="112:13" pos:end="112:70"><expr pos:start="112:13" pos:end="112:69"><name pos:start="112:13" pos:end="112:21">buf_size2</name> <operator pos:start="112:23" pos:end="112:23">=</operator> <call pos:start="112:25" pos:end="112:69"><name pos:start="112:25" pos:end="112:43">vc1_unescape_buffer</name><argument_list pos:start="112:44" pos:end="112:69">(<argument pos:start="112:45" pos:end="112:47"><expr pos:start="112:45" pos:end="112:47"><name pos:start="112:45" pos:end="112:47">buf</name></expr></argument>, <argument pos:start="112:50" pos:end="112:62"><expr pos:start="112:50" pos:end="112:62"><name pos:start="112:50" pos:end="112:56">divider</name> <operator pos:start="112:58" pos:end="112:58">-</operator> <name pos:start="112:60" pos:end="112:62">buf</name></expr></argument>, <argument pos:start="112:65" pos:end="112:68"><expr pos:start="112:65" pos:end="112:68"><name pos:start="112:65" pos:end="112:68">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt> <if_stmt pos:start="113:11" pos:end="116:5"><else pos:start="113:11" pos:end="116:5">else <block pos:start="113:16" pos:end="116:5">{<block_content pos:start="114:13" pos:end="115:49">
            <expr_stmt pos:start="114:13" pos:end="114:65"><expr pos:start="114:13" pos:end="114:64"><name pos:start="114:13" pos:end="114:21">buf_size2</name> <operator pos:start="114:23" pos:end="114:23">=</operator> <call pos:start="114:25" pos:end="114:64"><name pos:start="114:25" pos:end="114:43">vc1_unescape_buffer</name><argument_list pos:start="114:44" pos:end="114:64">(<argument pos:start="114:45" pos:end="114:47"><expr pos:start="114:45" pos:end="114:47"><name pos:start="114:45" pos:end="114:47">buf</name></expr></argument>, <argument pos:start="114:50" pos:end="114:57"><expr pos:start="114:50" pos:end="114:57"><name pos:start="114:50" pos:end="114:57">buf_size</name></expr></argument>, <argument pos:start="114:60" pos:end="114:63"><expr pos:start="114:60" pos:end="114:63"><name pos:start="114:60" pos:end="114:63">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="115:9" pos:end="115:49"><expr pos:start="115:9" pos:end="115:48"><call pos:start="115:9" pos:end="115:48"><name pos:start="115:9" pos:end="115:21">init_get_bits</name><argument_list pos:start="115:22" pos:end="115:48">(<argument pos:start="115:23" pos:end="115:28"><expr pos:start="115:23" pos:end="115:28"><operator pos:start="115:23" pos:end="115:23">&amp;</operator><name pos:start="115:24" pos:end="115:28"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:28">gb</name></name></expr></argument>, <argument pos:start="115:31" pos:end="115:34"><expr pos:start="115:31" pos:end="115:34"><name pos:start="115:31" pos:end="115:34">buf2</name></expr></argument>, <argument pos:start="115:37" pos:end="115:47"><expr pos:start="115:37" pos:end="115:47"><name pos:start="115:37" pos:end="115:45">buf_size2</name><operator pos:start="115:46" pos:end="115:46">*</operator><literal type="number" pos:start="115:47" pos:end="115:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="116:7" pos:end="117:47"><else pos:start="116:7" pos:end="117:47">else<block type="pseudo" pos:start="117:9" pos:end="117:47"><block_content pos:start="117:9" pos:end="117:47">
        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><call pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:21">init_get_bits</name><argument_list pos:start="117:22" pos:end="117:46">(<argument pos:start="117:23" pos:end="117:28"><expr pos:start="117:23" pos:end="117:28"><operator pos:start="117:23" pos:end="117:23">&amp;</operator><name pos:start="117:24" pos:end="117:28"><name pos:start="117:24" pos:end="117:24">s</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:28">gb</name></name></expr></argument>, <argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">buf</name></expr></argument>, <argument pos:start="117:36" pos:end="117:45"><expr pos:start="117:36" pos:end="117:45"><name pos:start="117:36" pos:end="117:43">buf_size</name><operator pos:start="117:44" pos:end="117:44">*</operator><literal type="number" pos:start="117:45" pos:end="117:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="118:5" pos:end="320:14"><if pos:start="118:5" pos:end="320:14">if <condition pos:start="118:8" pos:end="118:22">(<expr pos:start="118:9" pos:end="118:21"><name pos:start="118:9" pos:end="118:21"><name pos:start="118:9" pos:end="118:9">v</name><operator pos:start="118:10" pos:end="118:11">-&gt;</operator><name pos:start="118:12" pos:end="118:21">res_sprite</name></name></expr>)</condition> <block pos:start="118:24" pos:end="320:14">{<block_content pos:start="119:9" pos:end="320:14">
        <expr_stmt pos:start="119:9" pos:end="119:44"><expr pos:start="119:9" pos:end="119:43"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:9">v</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:21">new_sprite</name></name>  <operator pos:start="119:24" pos:end="119:24">=</operator> <operator pos:start="119:26" pos:end="119:26">!</operator><call pos:start="119:27" pos:end="119:43"><name pos:start="119:27" pos:end="119:35">get_bits1</name><argument_list pos:start="119:36" pos:end="119:43">(<argument pos:start="119:37" pos:end="119:42"><expr pos:start="119:37" pos:end="119:42"><operator pos:start="119:37" pos:end="119:37">&amp;</operator><name pos:start="119:38" pos:end="119:42"><name pos:start="119:38" pos:end="119:38">s</name><operator pos:start="119:39" pos:end="119:40">-&gt;</operator><name pos:start="119:41" pos:end="119:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="120:9" pos:end="120:44"><expr pos:start="120:9" pos:end="120:43"><name pos:start="120:9" pos:end="120:22"><name pos:start="120:9" pos:end="120:9">v</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:22">two_sprites</name></name> <operator pos:start="120:24" pos:end="120:24">=</operator>  <call pos:start="120:27" pos:end="120:43"><name pos:start="120:27" pos:end="120:35">get_bits1</name><argument_list pos:start="120:36" pos:end="120:43">(<argument pos:start="120:37" pos:end="120:42"><expr pos:start="120:37" pos:end="120:42"><operator pos:start="120:37" pos:end="120:37">&amp;</operator><name pos:start="120:38" pos:end="120:42"><name pos:start="120:38" pos:end="120:38">s</name><operator pos:start="120:39" pos:end="120:40">-&gt;</operator><name pos:start="120:41" pos:end="120:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="121:9" pos:end="124:34">/* res_sprite means a Windows Media Image stream, AV_CODEC_ID_*IMAGE means
           we're using the sprite compositor. These are intentionally kept separate
           so you can get the raw sprites by using the wmv3 decoder for WMVP or
           the vc1 one for WVP2 */</comment>
        <if_stmt pos:start="125:9" pos:end="320:14"><if pos:start="125:9" pos:end="320:14">if <condition pos:start="125:12" pos:end="125:96">(<expr pos:start="125:13" pos:end="125:95"><name pos:start="125:13" pos:end="125:27"><name pos:start="125:13" pos:end="125:17">avctx</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:27">codec_id</name></name> <operator pos:start="125:29" pos:end="125:30">==</operator> <name pos:start="125:32" pos:end="125:52">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="125:54" pos:end="125:55">||</operator> <name pos:start="125:57" pos:end="125:71"><name pos:start="125:57" pos:end="125:61">avctx</name><operator pos:start="125:62" pos:end="125:63">-&gt;</operator><name pos:start="125:64" pos:end="125:71">codec_id</name></name> <operator pos:start="125:73" pos:end="125:74">==</operator> <name pos:start="125:76" pos:end="125:95">AV_CODEC_ID_VC1IMAGE</name></expr>)</condition> <block pos:start="125:98" pos:end="320:14">{<block_content pos:start="126:13" pos:end="320:14">
            <if_stmt pos:start="126:13" pos:end="320:14"><if pos:start="126:13" pos:end="130:13">if <condition pos:start="126:16" pos:end="126:30">(<expr pos:start="126:17" pos:end="126:29"><name pos:start="126:17" pos:end="126:29"><name pos:start="126:17" pos:end="126:17">v</name><operator pos:start="126:18" pos:end="126:19">-&gt;</operator><name pos:start="126:20" pos:end="126:29">new_sprite</name></name></expr>)</condition> <block pos:start="126:32" pos:end="130:13">{<block_content pos:start="128:17" pos:end="129:71">
                <comment type="line" pos:start="127:17" pos:end="127:75">// switch AVCodecContext parameters to those of the sprites</comment>
                <expr_stmt pos:start="128:17" pos:end="128:70"><expr pos:start="128:17" pos:end="128:69"><name pos:start="128:17" pos:end="128:28"><name pos:start="128:17" pos:end="128:21">avctx</name><operator pos:start="128:22" pos:end="128:23">-&gt;</operator><name pos:start="128:24" pos:end="128:28">width</name></name>  <operator pos:start="128:31" pos:end="128:31">=</operator> <name pos:start="128:33" pos:end="128:50"><name pos:start="128:33" pos:end="128:37">avctx</name><operator pos:start="128:38" pos:end="128:39">-&gt;</operator><name pos:start="128:40" pos:end="128:50">coded_width</name></name>  <operator pos:start="128:53" pos:end="128:53">=</operator> <name pos:start="128:55" pos:end="128:69"><name pos:start="128:55" pos:end="128:55">v</name><operator pos:start="128:56" pos:end="128:57">-&gt;</operator><name pos:start="128:58" pos:end="128:69">sprite_width</name></name></expr>;</expr_stmt>
                <expr_stmt pos:start="129:17" pos:end="129:71"><expr pos:start="129:17" pos:end="129:70"><name pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:21">avctx</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:29">height</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:51"><name pos:start="129:33" pos:end="129:37">avctx</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:51">coded_height</name></name> <operator pos:start="129:53" pos:end="129:53">=</operator> <name pos:start="129:55" pos:end="129:70"><name pos:start="129:55" pos:end="129:55">v</name><operator pos:start="129:56" pos:end="129:57">-&gt;</operator><name pos:start="129:58" pos:end="129:70">sprite_height</name></name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="130:15" pos:end="320:14">else <block pos:start="130:20" pos:end="320:14">{<block_content pos:start="131:17" pos:end="320:14">
                <goto pos:start="131:17" pos:end="131:27">goto <name pos:start="131:22" pos:end="131:26">image</name>;</goto>
    <if_stmt pos:start="132:5" pos:end="320:14"><if pos:start="132:5" pos:end="320:14">if <condition pos:start="132:8" pos:end="134:43">(<expr pos:start="132:9" pos:end="134:42"><name pos:start="132:9" pos:end="132:30"><name pos:start="132:9" pos:end="132:9">s</name><operator pos:start="132:10" pos:end="132:11">-&gt;</operator><name pos:start="132:12" pos:end="132:30">context_initialized</name></name> <operator pos:start="132:32" pos:end="132:33">&amp;&amp;</operator>
        <operator pos:start="133:9" pos:end="133:9">(</operator><name pos:start="133:10" pos:end="133:17"><name pos:start="133:10" pos:end="133:10">s</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:17">width</name></name>  <operator pos:start="133:20" pos:end="133:21">!=</operator> <name pos:start="133:23" pos:end="133:40"><name pos:start="133:23" pos:end="133:27">avctx</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:40">coded_width</name></name> <operator pos:start="133:42" pos:end="133:43">||</operator>
         <name pos:start="134:10" pos:end="134:18"><name pos:start="134:10" pos:end="134:10">s</name><operator pos:start="134:11" pos:end="134:12">-&gt;</operator><name pos:start="134:13" pos:end="134:18">height</name></name> <operator pos:start="134:20" pos:end="134:21">!=</operator> <name pos:start="134:23" pos:end="134:41"><name pos:start="134:23" pos:end="134:27">avctx</name><operator pos:start="134:28" pos:end="134:29">-&gt;</operator><name pos:start="134:30" pos:end="134:41">coded_height</name></name><operator pos:start="134:42" pos:end="134:42">)</operator></expr>)</condition> <block pos:start="134:45" pos:end="320:14">{<block_content pos:start="135:9" pos:end="320:14">
        <expr_stmt pos:start="135:9" pos:end="135:33"><expr pos:start="135:9" pos:end="135:32"><call pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:25">ff_vc1_decode_end</name><argument_list pos:start="135:26" pos:end="135:32">(<argument pos:start="135:27" pos:end="135:31"><expr pos:start="135:27" pos:end="135:31"><name pos:start="135:27" pos:end="135:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="136:5" pos:end="320:14"><if pos:start="136:5" pos:end="320:14">if <condition pos:start="136:8" pos:end="136:32">(<expr pos:start="136:9" pos:end="136:31"><operator pos:start="136:9" pos:end="136:9">!</operator><name pos:start="136:10" pos:end="136:31"><name pos:start="136:10" pos:end="136:10">s</name><operator pos:start="136:11" pos:end="136:12">-&gt;</operator><name pos:start="136:13" pos:end="136:31">context_initialized</name></name></expr>)</condition> <block pos:start="136:34" pos:end="320:14">{<block_content pos:start="137:9" pos:end="320:14">
        <if_stmt pos:start="137:9" pos:end="138:61"><if pos:start="137:9" pos:end="138:61">if <condition pos:start="137:12" pos:end="137:88">(<expr pos:start="137:13" pos:end="137:87"><call pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:34">ff_msmpeg4_decode_init</name><argument_list pos:start="137:35" pos:end="137:41">(<argument pos:start="137:36" pos:end="137:40"><expr pos:start="137:36" pos:end="137:40"><name pos:start="137:36" pos:end="137:40">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="137:43" pos:end="137:43">&lt;</operator> <literal type="number" pos:start="137:45" pos:end="137:45">0</literal> <operator pos:start="137:47" pos:end="137:48">||</operator> <call pos:start="137:50" pos:end="137:83"><name pos:start="137:50" pos:end="137:80">ff_vc1_decode_init_alloc_tables</name><argument_list pos:start="137:81" pos:end="137:83">(<argument pos:start="137:82" pos:end="137:82"><expr pos:start="137:82" pos:end="137:82"><name pos:start="137:82" pos:end="137:82">v</name></expr></argument>)</argument_list></call> <operator pos:start="137:85" pos:end="137:85">&lt;</operator> <literal type="number" pos:start="137:87" pos:end="137:87">0</literal></expr>)</condition><block type="pseudo" pos:start="138:9" pos:end="138:61"><block_content pos:start="138:9" pos:end="138:61">
        <expr_stmt pos:start="138:9" pos:end="138:61"><expr pos:start="138:9" pos:end="138:60"><name pos:start="138:9" pos:end="138:20"><name pos:start="138:9" pos:end="138:9">s</name><operator pos:start="138:10" pos:end="138:11">-&gt;</operator><name pos:start="138:12" pos:end="138:20">low_delay</name></name> <operator pos:start="138:22" pos:end="138:22">=</operator> <operator pos:start="138:24" pos:end="138:24">!</operator><name pos:start="138:25" pos:end="138:43"><name pos:start="138:25" pos:end="138:29">avctx</name><operator pos:start="138:30" pos:end="138:31">-&gt;</operator><name pos:start="138:32" pos:end="138:43">has_b_frames</name></name> <operator pos:start="138:45" pos:end="138:46">||</operator> <name pos:start="138:48" pos:end="138:60"><name pos:start="138:48" pos:end="138:48">v</name><operator pos:start="138:49" pos:end="138:50">-&gt;</operator><name pos:start="138:51" pos:end="138:60">res_sprite</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="139:9" pos:end="320:14"><if pos:start="139:9" pos:end="320:14">if <condition pos:start="139:12" pos:end="139:43">(<expr pos:start="139:13" pos:end="139:42"><name pos:start="139:13" pos:end="139:22"><name pos:start="139:13" pos:end="139:13">v</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:22">profile</name></name> <operator pos:start="139:24" pos:end="139:25">==</operator> <name pos:start="139:27" pos:end="139:42">PROFILE_ADVANCED</name></expr>)</condition> <block pos:start="139:45" pos:end="320:14">{<block_content pos:start="140:13" pos:end="320:14">
            <expr_stmt pos:start="140:13" pos:end="140:47"><expr pos:start="140:13" pos:end="140:46"><name pos:start="140:13" pos:end="140:25"><name pos:start="140:13" pos:end="140:13">s</name><operator pos:start="140:14" pos:end="140:15">-&gt;</operator><name pos:start="140:16" pos:end="140:25">h_edge_pos</name></name> <operator pos:start="140:27" pos:end="140:27">=</operator> <name pos:start="140:29" pos:end="140:46"><name pos:start="140:29" pos:end="140:33">avctx</name><operator pos:start="140:34" pos:end="140:35">-&gt;</operator><name pos:start="140:36" pos:end="140:46">coded_width</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="141:13" pos:end="141:48"><expr pos:start="141:13" pos:end="141:47"><name pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:13">s</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:25">v_edge_pos</name></name> <operator pos:start="141:27" pos:end="141:27">=</operator> <name pos:start="141:29" pos:end="141:47"><name pos:start="141:29" pos:end="141:33">avctx</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:47">coded_height</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="142:5" pos:end="143:54">/* We need to set current_picture_ptr before reading the header,
     * otherwise we cannot store anything in there. */</comment>
    <if_stmt pos:start="144:5" pos:end="320:14"><if pos:start="144:5" pos:end="320:14">if <condition pos:start="144:8" pos:end="144:76">(<expr pos:start="144:9" pos:end="144:75"><name pos:start="144:9" pos:end="144:30"><name pos:start="144:9" pos:end="144:9">s</name><operator pos:start="144:10" pos:end="144:11">-&gt;</operator><name pos:start="144:12" pos:end="144:30">current_picture_ptr</name></name> <operator pos:start="144:32" pos:end="144:33">==</operator> <name pos:start="144:35" pos:end="144:38">NULL</name> <operator pos:start="144:40" pos:end="144:41">||</operator> <name pos:start="144:43" pos:end="144:75"><name pos:start="144:43" pos:end="144:43">s</name><operator pos:start="144:44" pos:end="144:45">-&gt;</operator><name pos:start="144:46" pos:end="144:64">current_picture_ptr</name><operator pos:start="144:65" pos:end="144:66">-&gt;</operator><name pos:start="144:67" pos:end="144:67">f</name><operator pos:start="144:68" pos:end="144:68">.</operator><name pos:start="144:69" pos:end="144:72">data</name><index pos:start="144:73" pos:end="144:75">[<expr pos:start="144:74" pos:end="144:74"><literal type="number" pos:start="144:74" pos:end="144:74">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="144:78" pos:end="320:14">{<block_content pos:start="145:9" pos:end="320:14">
        <decl_stmt pos:start="145:9" pos:end="145:45"><decl pos:start="145:9" pos:end="145:44"><type pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:11">int</name></type> <name pos:start="145:13" pos:end="145:13">i</name> <init pos:start="145:15" pos:end="145:44">= <expr pos:start="145:17" pos:end="145:44"><call pos:start="145:17" pos:end="145:44"><name pos:start="145:17" pos:end="145:38">ff_find_unused_picture</name><argument_list pos:start="145:39" pos:end="145:44">(<argument pos:start="145:40" pos:end="145:40"><expr pos:start="145:40" pos:end="145:40"><name pos:start="145:40" pos:end="145:40">s</name></expr></argument>, <argument pos:start="145:43" pos:end="145:43"><expr pos:start="145:43" pos:end="145:43"><literal type="number" pos:start="145:43" pos:end="145:43">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="146:9" pos:end="147:48"><if pos:start="146:9" pos:end="147:48">if <condition pos:start="146:12" pos:end="146:18">(<expr pos:start="146:13" pos:end="146:17"><name pos:start="146:13" pos:end="146:13">i</name> <operator pos:start="146:15" pos:end="146:15">&lt;</operator> <literal type="number" pos:start="146:17" pos:end="146:17">0</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:48"><block_content pos:start="147:9" pos:end="147:48">
        <expr_stmt pos:start="147:9" pos:end="147:48"><expr pos:start="147:9" pos:end="147:47"><name pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:30">current_picture_ptr</name></name> <operator pos:start="147:32" pos:end="147:32">=</operator> <operator pos:start="147:34" pos:end="147:34">&amp;</operator><name pos:start="147:35" pos:end="147:47"><name pos:start="147:35" pos:end="147:35">s</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:44">picture</name><index pos:start="147:45" pos:end="147:47">[<expr pos:start="147:46" pos:end="147:46"><name pos:start="147:46" pos:end="147:46">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <comment type="line" pos:start="148:5" pos:end="148:28">// do parse frame header</comment>
    <expr_stmt pos:start="149:5" pos:end="149:27"><expr pos:start="149:5" pos:end="149:26"><name pos:start="149:5" pos:end="149:22"><name pos:start="149:5" pos:end="149:5">v</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:22">pic_header_flag</name></name> <operator pos:start="149:24" pos:end="149:24">=</operator> <literal type="number" pos:start="149:26" pos:end="149:26">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="150:5" pos:end="320:14"><if pos:start="150:5" pos:end="320:14">if <condition pos:start="150:8" pos:end="150:38">(<expr pos:start="150:9" pos:end="150:37"><name pos:start="150:9" pos:end="150:18"><name pos:start="150:9" pos:end="150:9">v</name><operator pos:start="150:10" pos:end="150:11">-&gt;</operator><name pos:start="150:12" pos:end="150:18">profile</name></name> <operator pos:start="150:20" pos:end="150:20">&lt;</operator> <name pos:start="150:22" pos:end="150:37">PROFILE_ADVANCED</name></expr>)</condition> <block pos:start="150:40" pos:end="320:14">{<block_content pos:start="151:9" pos:end="320:14">
        <if_stmt pos:start="151:9" pos:end="320:14"><if pos:start="151:9" pos:end="152:5">if <condition pos:start="151:12" pos:end="151:53">(<expr pos:start="151:13" pos:end="151:52"><call pos:start="151:13" pos:end="151:48"><name pos:start="151:13" pos:end="151:37">ff_vc1_parse_frame_header</name><argument_list pos:start="151:38" pos:end="151:48">(<argument pos:start="151:39" pos:end="151:39"><expr pos:start="151:39" pos:end="151:39"><name pos:start="151:39" pos:end="151:39">v</name></expr></argument>, <argument pos:start="151:42" pos:end="151:47"><expr pos:start="151:42" pos:end="151:47"><operator pos:start="151:42" pos:end="151:42">&amp;</operator><name pos:start="151:43" pos:end="151:47"><name pos:start="151:43" pos:end="151:43">s</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:47">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="151:50" pos:end="151:50">&lt;</operator> <literal type="number" pos:start="151:52" pos:end="151:52">0</literal></expr>)</condition> <block pos:start="151:55" pos:end="152:5">{<block_content>
    </block_content>}</block></if> <else pos:start="152:7" pos:end="320:14">else <block pos:start="152:12" pos:end="320:14">{<block_content pos:start="153:9" pos:end="320:14">
        <if_stmt pos:start="153:9" pos:end="320:14"><if pos:start="153:9" pos:end="320:14">if <condition pos:start="153:12" pos:end="153:57">(<expr pos:start="153:13" pos:end="153:56"><call pos:start="153:13" pos:end="153:52"><name pos:start="153:13" pos:end="153:41">ff_vc1_parse_frame_header_adv</name><argument_list pos:start="153:42" pos:end="153:52">(<argument pos:start="153:43" pos:end="153:43"><expr pos:start="153:43" pos:end="153:43"><name pos:start="153:43" pos:end="153:43">v</name></expr></argument>, <argument pos:start="153:46" pos:end="153:51"><expr pos:start="153:46" pos:end="153:51"><operator pos:start="153:46" pos:end="153:46">&amp;</operator><name pos:start="153:47" pos:end="153:51"><name pos:start="153:47" pos:end="153:47">s</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:51">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="153:54" pos:end="153:54">&lt;</operator> <literal type="number" pos:start="153:56" pos:end="153:56">0</literal></expr>)</condition> <block pos:start="153:59" pos:end="320:14">{<block_content pos:start="154:5" pos:end="320:14">
    <if_stmt pos:start="154:5" pos:end="155:100"><if pos:start="154:5" pos:end="155:100">if <condition pos:start="154:8" pos:end="154:42">(<expr pos:start="154:9" pos:end="154:41"><name pos:start="154:9" pos:end="154:20"><name pos:start="154:9" pos:end="154:13">avctx</name><operator pos:start="154:14" pos:end="154:15">-&gt;</operator><name pos:start="154:16" pos:end="154:20">debug</name></name> <operator pos:start="154:22" pos:end="154:22">&amp;</operator> <name pos:start="154:24" pos:end="154:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:100"><block_content pos:start="155:9" pos:end="155:100">
        <expr_stmt pos:start="155:9" pos:end="155:100"><expr pos:start="155:9" pos:end="155:99"><call pos:start="155:9" pos:end="155:99"><name pos:start="155:9" pos:end="155:14">av_log</name><argument_list pos:start="155:15" pos:end="155:99">(<argument pos:start="155:16" pos:end="155:25"><expr pos:start="155:16" pos:end="155:25"><name pos:start="155:16" pos:end="155:25"><name pos:start="155:16" pos:end="155:16">v</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:19">s</name><operator pos:start="155:20" pos:end="155:20">.</operator><name pos:start="155:21" pos:end="155:25">avctx</name></name></expr></argument>, <argument pos:start="155:28" pos:end="155:39"><expr pos:start="155:28" pos:end="155:39"><name pos:start="155:28" pos:end="155:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="155:42" pos:end="155:58"><expr pos:start="155:42" pos:end="155:58"><literal type="string" pos:start="155:42" pos:end="155:58">"pict_type: %c\n"</literal></expr></argument>, <argument pos:start="155:61" pos:end="155:98"><expr pos:start="155:61" pos:end="155:98"><call pos:start="155:61" pos:end="155:98"><name pos:start="155:61" pos:end="155:84">av_get_picture_type_char</name><argument_list pos:start="155:85" pos:end="155:98">(<argument pos:start="155:86" pos:end="155:97"><expr pos:start="155:86" pos:end="155:97"><name pos:start="155:86" pos:end="155:97"><name pos:start="155:86" pos:end="155:86">s</name><operator pos:start="155:87" pos:end="155:88">-&gt;</operator><name pos:start="155:89" pos:end="155:97">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="156:5" pos:end="320:14"><if pos:start="156:5" pos:end="320:14">if <condition pos:start="156:8" pos:end="157:45">(<expr pos:start="156:9" pos:end="157:44"><operator pos:start="156:9" pos:end="156:9">(</operator><name pos:start="156:10" pos:end="156:24"><name pos:start="156:10" pos:end="156:14">avctx</name><operator pos:start="156:15" pos:end="156:16">-&gt;</operator><name pos:start="156:17" pos:end="156:24">codec_id</name></name> <operator pos:start="156:26" pos:end="156:27">==</operator> <name pos:start="156:29" pos:end="156:49">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="156:51" pos:end="156:52">||</operator> <name pos:start="156:54" pos:end="156:68"><name pos:start="156:54" pos:end="156:58">avctx</name><operator pos:start="156:59" pos:end="156:60">-&gt;</operator><name pos:start="156:61" pos:end="156:68">codec_id</name></name> <operator pos:start="156:70" pos:end="156:71">==</operator> <name pos:start="156:73" pos:end="156:92">AV_CODEC_ID_VC1IMAGE</name><operator pos:start="156:93" pos:end="156:93">)</operator>
        <operator pos:start="157:9" pos:end="157:10">&amp;&amp;</operator> <name pos:start="157:12" pos:end="157:23"><name pos:start="157:12" pos:end="157:12">s</name><operator pos:start="157:13" pos:end="157:14">-&gt;</operator><name pos:start="157:15" pos:end="157:23">pict_type</name></name> <operator pos:start="157:25" pos:end="157:26">!=</operator> <name pos:start="157:28" pos:end="157:44">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="157:47" pos:end="320:14">{<block_content pos:start="158:9" pos:end="320:14">
        <expr_stmt pos:start="158:9" pos:end="158:79"><expr pos:start="158:9" pos:end="158:78"><call pos:start="158:9" pos:end="158:78"><name pos:start="158:9" pos:end="158:14">av_log</name><argument_list pos:start="158:15" pos:end="158:78">(<argument pos:start="158:16" pos:end="158:25"><expr pos:start="158:16" pos:end="158:25"><name pos:start="158:16" pos:end="158:25"><name pos:start="158:16" pos:end="158:16">v</name><operator pos:start="158:17" pos:end="158:18">-&gt;</operator><name pos:start="158:19" pos:end="158:19">s</name><operator pos:start="158:20" pos:end="158:20">.</operator><name pos:start="158:21" pos:end="158:25">avctx</name></name></expr></argument>, <argument pos:start="158:28" pos:end="158:39"><expr pos:start="158:28" pos:end="158:39"><name pos:start="158:28" pos:end="158:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="158:42" pos:end="158:77"><expr pos:start="158:42" pos:end="158:77"><literal type="string" pos:start="158:42" pos:end="158:77">"Sprite decoder: expected I-frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="line" pos:start="159:5" pos:end="159:29">// process pulldown flags</comment>
    <expr_stmt pos:start="160:5" pos:end="160:46"><expr pos:start="160:5" pos:end="160:45"><name pos:start="160:5" pos:end="160:41"><name pos:start="160:5" pos:end="160:5">s</name><operator pos:start="160:6" pos:end="160:7">-&gt;</operator><name pos:start="160:8" pos:end="160:26">current_picture_ptr</name><operator pos:start="160:27" pos:end="160:28">-&gt;</operator><name pos:start="160:29" pos:end="160:29">f</name><operator pos:start="160:30" pos:end="160:30">.</operator><name pos:start="160:31" pos:end="160:41">repeat_pict</name></name> <operator pos:start="160:43" pos:end="160:43">=</operator> <literal type="number" pos:start="160:45" pos:end="160:45">0</literal></expr>;</expr_stmt>
    <comment type="line" pos:start="161:5" pos:end="161:67">// Pulldown flags are only valid when 'broadcast' has been set.</comment>
    <comment type="line" pos:start="162:5" pos:end="162:35">// So ticks_per_frame will be 2</comment>
    <if_stmt pos:start="163:5" pos:end="320:14"><if pos:start="163:5" pos:end="166:5">if <condition pos:start="163:8" pos:end="163:15">(<expr pos:start="163:9" pos:end="163:14"><name pos:start="163:9" pos:end="163:14"><name pos:start="163:9" pos:end="163:9">v</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:14">rff</name></name></expr>)</condition> <block pos:start="163:17" pos:end="166:5">{<block_content pos:start="165:9" pos:end="165:50">
        <comment type="line" pos:start="164:9" pos:end="164:23">// repeat field</comment>
        <expr_stmt pos:start="165:9" pos:end="165:50"><expr pos:start="165:9" pos:end="165:49"><name pos:start="165:9" pos:end="165:45"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:30">current_picture_ptr</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:33">f</name><operator pos:start="165:34" pos:end="165:34">.</operator><name pos:start="165:35" pos:end="165:45">repeat_pict</name></name> <operator pos:start="165:47" pos:end="165:47">=</operator> <literal type="number" pos:start="165:49" pos:end="165:49">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="166:7" pos:end="320:14">else if <condition pos:start="166:15" pos:end="166:25">(<expr pos:start="166:16" pos:end="166:24"><name pos:start="166:16" pos:end="166:24"><name pos:start="166:16" pos:end="166:16">v</name><operator pos:start="166:17" pos:end="166:18">-&gt;</operator><name pos:start="166:19" pos:end="166:24">rptfrm</name></name></expr>)</condition> <block pos:start="166:27" pos:end="320:14">{<block_content pos:start="168:9" pos:end="320:14">
        <comment type="line" pos:start="167:9" pos:end="167:24">// repeat frames</comment>
        <expr_stmt pos:start="168:9" pos:end="168:62"><expr pos:start="168:9" pos:end="168:61"><name pos:start="168:9" pos:end="168:45"><name pos:start="168:9" pos:end="168:9">s</name><operator pos:start="168:10" pos:end="168:11">-&gt;</operator><name pos:start="168:12" pos:end="168:30">current_picture_ptr</name><operator pos:start="168:31" pos:end="168:32">-&gt;</operator><name pos:start="168:33" pos:end="168:33">f</name><operator pos:start="168:34" pos:end="168:34">.</operator><name pos:start="168:35" pos:end="168:45">repeat_pict</name></name> <operator pos:start="168:47" pos:end="168:47">=</operator> <name pos:start="168:49" pos:end="168:57"><name pos:start="168:49" pos:end="168:49">v</name><operator pos:start="168:50" pos:end="168:51">-&gt;</operator><name pos:start="168:52" pos:end="168:57">rptfrm</name></name> <operator pos:start="168:59" pos:end="168:59">*</operator> <literal type="number" pos:start="168:61" pos:end="168:61">2</literal></expr>;</expr_stmt>
    <comment type="line" pos:start="169:5" pos:end="169:29">// for skipping the frame</comment>
    <expr_stmt pos:start="170:5" pos:end="170:50"><expr pos:start="170:5" pos:end="170:49"><name pos:start="170:5" pos:end="170:34"><name pos:start="170:5" pos:end="170:5">s</name><operator pos:start="170:6" pos:end="170:7">-&gt;</operator><name pos:start="170:8" pos:end="170:22">current_picture</name><operator pos:start="170:23" pos:end="170:23">.</operator><name pos:start="170:24" pos:end="170:24">f</name><operator pos:start="170:25" pos:end="170:25">.</operator><name pos:start="170:26" pos:end="170:34">pict_type</name></name> <operator pos:start="170:36" pos:end="170:36">=</operator> <name pos:start="170:38" pos:end="170:49"><name pos:start="170:38" pos:end="170:38">s</name><operator pos:start="170:39" pos:end="170:40">-&gt;</operator><name pos:start="170:41" pos:end="170:49">pict_type</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="171:5" pos:end="171:71"><expr pos:start="171:5" pos:end="171:70"><name pos:start="171:5" pos:end="171:34"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:22">current_picture</name><operator pos:start="171:23" pos:end="171:23">.</operator><name pos:start="171:24" pos:end="171:24">f</name><operator pos:start="171:25" pos:end="171:25">.</operator><name pos:start="171:26" pos:end="171:34">key_frame</name></name> <operator pos:start="171:36" pos:end="171:36">=</operator> <name pos:start="171:38" pos:end="171:49"><name pos:start="171:38" pos:end="171:38">s</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:49">pict_type</name></name> <operator pos:start="171:51" pos:end="171:52">==</operator> <name pos:start="171:54" pos:end="171:70">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
    <comment type="block" pos:start="172:5" pos:end="172:57">/* skip B-frames if we don't have reference frames */</comment>
    <if_stmt pos:start="173:5" pos:end="320:14"><if pos:start="173:5" pos:end="320:14">if <condition pos:start="173:8" pos:end="173:90">(<expr pos:start="173:9" pos:end="173:89"><name pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:27">last_picture_ptr</name></name> <operator pos:start="173:29" pos:end="173:30">==</operator> <name pos:start="173:32" pos:end="173:35">NULL</name> <operator pos:start="173:37" pos:end="173:38">&amp;&amp;</operator> <operator pos:start="173:40" pos:end="173:40">(</operator><name pos:start="173:41" pos:end="173:52"><name pos:start="173:41" pos:end="173:41">s</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:52">pict_type</name></name> <operator pos:start="173:54" pos:end="173:55">==</operator> <name pos:start="173:57" pos:end="173:73">AV_PICTURE_TYPE_B</name> <operator pos:start="173:75" pos:end="173:76">||</operator> <name pos:start="173:78" pos:end="173:88"><name pos:start="173:78" pos:end="173:78">s</name><operator pos:start="173:79" pos:end="173:80">-&gt;</operator><name pos:start="173:81" pos:end="173:88">dropable</name></name><operator pos:start="173:89" pos:end="173:89">)</operator></expr>)</condition> <block pos:start="173:92" pos:end="320:14">{<block_content pos:start="174:5" pos:end="320:14">
    <if_stmt pos:start="174:5" pos:end="320:14"><if pos:start="174:5" pos:end="320:14">if <condition pos:start="174:8" pos:end="176:44">(<expr pos:start="174:9" pos:end="176:43"><operator pos:start="174:9" pos:end="174:9">(</operator><name pos:start="174:10" pos:end="174:26"><name pos:start="174:10" pos:end="174:14">avctx</name><operator pos:start="174:15" pos:end="174:16">-&gt;</operator><name pos:start="174:17" pos:end="174:26">skip_frame</name></name> <operator pos:start="174:28" pos:end="174:29">&gt;=</operator> <name pos:start="174:31" pos:end="174:46">AVDISCARD_NONREF</name> <operator pos:start="174:48" pos:end="174:49">&amp;&amp;</operator> <name pos:start="174:51" pos:end="174:62"><name pos:start="174:51" pos:end="174:51">s</name><operator pos:start="174:52" pos:end="174:53">-&gt;</operator><name pos:start="174:54" pos:end="174:62">pict_type</name></name> <operator pos:start="174:64" pos:end="174:65">==</operator> <name pos:start="174:67" pos:end="174:83">AV_PICTURE_TYPE_B</name><operator pos:start="174:84" pos:end="174:84">)</operator> <operator pos:start="174:86" pos:end="174:87">||</operator>
        <operator pos:start="175:9" pos:end="175:9">(</operator><name pos:start="175:10" pos:end="175:26"><name pos:start="175:10" pos:end="175:14">avctx</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:26">skip_frame</name></name> <operator pos:start="175:28" pos:end="175:29">&gt;=</operator> <name pos:start="175:31" pos:end="175:46">AVDISCARD_NONKEY</name> <operator pos:start="175:48" pos:end="175:49">&amp;&amp;</operator> <name pos:start="175:51" pos:end="175:62"><name pos:start="175:51" pos:end="175:51">s</name><operator pos:start="175:52" pos:end="175:53">-&gt;</operator><name pos:start="175:54" pos:end="175:62">pict_type</name></name> <operator pos:start="175:64" pos:end="175:65">!=</operator> <name pos:start="175:67" pos:end="175:83">AV_PICTURE_TYPE_I</name><operator pos:start="175:84" pos:end="175:84">)</operator> <operator pos:start="175:86" pos:end="175:87">||</operator>
         <name pos:start="176:10" pos:end="176:26"><name pos:start="176:10" pos:end="176:14">avctx</name><operator pos:start="176:15" pos:end="176:16">-&gt;</operator><name pos:start="176:17" pos:end="176:26">skip_frame</name></name> <operator pos:start="176:28" pos:end="176:29">&gt;=</operator> <name pos:start="176:31" pos:end="176:43">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="176:46" pos:end="320:14">{<block_content pos:start="177:9" pos:end="320:14">
        <goto pos:start="177:9" pos:end="177:17">goto <name pos:start="177:14" pos:end="177:16">end</name>;</goto>
    <if_stmt pos:start="178:5" pos:end="320:14"><if pos:start="178:5" pos:end="320:14">if <condition pos:start="178:8" pos:end="178:32">(<expr pos:start="178:9" pos:end="178:31"><name pos:start="178:9" pos:end="178:31"><name pos:start="178:9" pos:end="178:9">s</name><operator pos:start="178:10" pos:end="178:11">-&gt;</operator><name pos:start="178:12" pos:end="178:31">next_p_frame_damaged</name></name></expr>)</condition> <block pos:start="178:34" pos:end="320:14">{<block_content pos:start="179:9" pos:end="320:14">
        <if_stmt pos:start="179:9" pos:end="182:40"><if pos:start="179:9" pos:end="180:21">if <condition pos:start="179:12" pos:end="179:46">(<expr pos:start="179:13" pos:end="179:45"><name pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:24">pict_type</name></name> <operator pos:start="179:26" pos:end="179:27">==</operator> <name pos:start="179:29" pos:end="179:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="180:13" pos:end="180:21"><block_content pos:start="180:13" pos:end="180:21">
            <goto pos:start="180:13" pos:end="180:21">goto <name pos:start="180:18" pos:end="180:20">end</name>;</goto></block_content></block></if>
        <else pos:start="181:9" pos:end="182:40">else<block type="pseudo" pos:start="182:13" pos:end="182:40"><block_content pos:start="182:13" pos:end="182:40">
            <expr_stmt pos:start="182:13" pos:end="182:40"><expr pos:start="182:13" pos:end="182:39"><name pos:start="182:13" pos:end="182:35"><name pos:start="182:13" pos:end="182:13">s</name><operator pos:start="182:14" pos:end="182:15">-&gt;</operator><name pos:start="182:16" pos:end="182:35">next_p_frame_damaged</name></name> <operator pos:start="182:37" pos:end="182:37">=</operator> <literal type="number" pos:start="182:39" pos:end="182:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="183:5" pos:end="320:14"><if pos:start="183:5" pos:end="320:14">if <condition pos:start="183:8" pos:end="183:41">(<expr pos:start="183:9" pos:end="183:40"><call pos:start="183:9" pos:end="183:36"><name pos:start="183:9" pos:end="183:26">ff_MPV_frame_start</name><argument_list pos:start="183:27" pos:end="183:36">(<argument pos:start="183:28" pos:end="183:28"><expr pos:start="183:28" pos:end="183:28"><name pos:start="183:28" pos:end="183:28">s</name></expr></argument>, <argument pos:start="183:31" pos:end="183:35"><expr pos:start="183:31" pos:end="183:35"><name pos:start="183:31" pos:end="183:35">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="183:38" pos:end="183:38">&lt;</operator> <literal type="number" pos:start="183:40" pos:end="183:40">0</literal></expr>)</condition> <block pos:start="183:43" pos:end="320:14">{<block_content pos:start="184:5" pos:end="320:14">
    <expr_stmt pos:start="184:5" pos:end="184:75"><expr pos:start="184:5" pos:end="184:74"><name pos:start="184:5" pos:end="184:48"><name pos:start="184:5" pos:end="184:5">v</name><operator pos:start="184:6" pos:end="184:7">-&gt;</operator><name pos:start="184:8" pos:end="184:8">s</name><operator pos:start="184:9" pos:end="184:9">.</operator><name pos:start="184:10" pos:end="184:28">current_picture_ptr</name><operator pos:start="184:29" pos:end="184:30">-&gt;</operator><name pos:start="184:31" pos:end="184:31">f</name><operator pos:start="184:32" pos:end="184:32">.</operator><name pos:start="184:33" pos:end="184:48">interlaced_frame</name></name> <operator pos:start="184:50" pos:end="184:50">=</operator> <operator pos:start="184:52" pos:end="184:52">(</operator><name pos:start="184:53" pos:end="184:58"><name pos:start="184:53" pos:end="184:53">v</name><operator pos:start="184:54" pos:end="184:55">-&gt;</operator><name pos:start="184:56" pos:end="184:58">fcm</name></name> <operator pos:start="184:60" pos:end="184:61">!=</operator> <name pos:start="184:63" pos:end="184:73">PROGRESSIVE</name><operator pos:start="184:74" pos:end="184:74">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="185:5" pos:end="185:58"><expr pos:start="185:5" pos:end="185:57"><name pos:start="185:5" pos:end="185:47"><name pos:start="185:5" pos:end="185:5">v</name><operator pos:start="185:6" pos:end="185:7">-&gt;</operator><name pos:start="185:8" pos:end="185:8">s</name><operator pos:start="185:9" pos:end="185:9">.</operator><name pos:start="185:10" pos:end="185:28">current_picture_ptr</name><operator pos:start="185:29" pos:end="185:30">-&gt;</operator><name pos:start="185:31" pos:end="185:31">f</name><operator pos:start="185:32" pos:end="185:32">.</operator><name pos:start="185:33" pos:end="185:47">top_field_first</name></name>  <operator pos:start="185:50" pos:end="185:50">=</operator> <name pos:start="185:52" pos:end="185:57"><name pos:start="185:52" pos:end="185:52">v</name><operator pos:start="185:53" pos:end="185:54">-&gt;</operator><name pos:start="185:55" pos:end="185:57">tff</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="186:5" pos:end="186:48"><expr pos:start="186:5" pos:end="186:47"><name pos:start="186:5" pos:end="186:18"><name pos:start="186:5" pos:end="186:5">s</name><operator pos:start="186:6" pos:end="186:7">-&gt;</operator><name pos:start="186:8" pos:end="186:9">me</name><operator pos:start="186:10" pos:end="186:10">.</operator><name pos:start="186:11" pos:end="186:18">qpel_put</name></name> <operator pos:start="186:20" pos:end="186:20">=</operator> <name pos:start="186:22" pos:end="186:47"><name pos:start="186:22" pos:end="186:22">s</name><operator pos:start="186:23" pos:end="186:24">-&gt;</operator><name pos:start="186:25" pos:end="186:27">dsp</name><operator pos:start="186:28" pos:end="186:28">.</operator><name pos:start="186:29" pos:end="186:47">put_qpel_pixels_tab</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="187:5" pos:end="187:48"><expr pos:start="187:5" pos:end="187:47"><name pos:start="187:5" pos:end="187:18"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:9">me</name><operator pos:start="187:10" pos:end="187:10">.</operator><name pos:start="187:11" pos:end="187:18">qpel_avg</name></name> <operator pos:start="187:20" pos:end="187:20">=</operator> <name pos:start="187:22" pos:end="187:47"><name pos:start="187:22" pos:end="187:22">s</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:27">dsp</name><operator pos:start="187:28" pos:end="187:28">.</operator><name pos:start="187:29" pos:end="187:47">avg_qpel_pixels_tab</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="188:5" pos:end="320:14"><if pos:start="188:5" pos:end="190:80">if <condition pos:start="188:8" pos:end="189:64">(<expr pos:start="188:9" pos:end="189:63"><operator pos:start="188:9" pos:end="188:9">(</operator><name pos:start="188:10" pos:end="188:33">CONFIG_VC1_VDPAU_DECODER</name><operator pos:start="188:34" pos:end="188:34">)</operator>
        <operator pos:start="189:9" pos:end="189:10">&amp;&amp;</operator><name pos:start="189:11" pos:end="189:39"><name pos:start="189:11" pos:end="189:11">s</name><operator pos:start="189:12" pos:end="189:13">-&gt;</operator><name pos:start="189:14" pos:end="189:18">avctx</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:25">codec</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:39">capabilities</name></name><operator pos:start="189:40" pos:end="189:40">&amp;</operator><name pos:start="189:41" pos:end="189:63">CODEC_CAP_HWACCEL_VDPAU</name></expr>)</condition><block type="pseudo" pos:start="190:9" pos:end="190:80"><block_content pos:start="190:9" pos:end="190:80">
        <expr_stmt pos:start="190:9" pos:end="190:80"><expr pos:start="190:9" pos:end="190:79"><call pos:start="190:9" pos:end="190:79"><name pos:start="190:9" pos:end="190:35">ff_vdpau_vc1_decode_picture</name><argument_list pos:start="190:36" pos:end="190:79">(<argument pos:start="190:37" pos:end="190:37"><expr pos:start="190:37" pos:end="190:37"><name pos:start="190:37" pos:end="190:37">s</name></expr></argument>, <argument pos:start="190:40" pos:end="190:48"><expr pos:start="190:40" pos:end="190:48"><name pos:start="190:40" pos:end="190:48">buf_start</name></expr></argument>, <argument pos:start="190:51" pos:end="190:78"><expr pos:start="190:51" pos:end="190:78"><operator pos:start="190:51" pos:end="190:51">(</operator><name pos:start="190:52" pos:end="190:54">buf</name> <operator pos:start="190:56" pos:end="190:56">+</operator> <name pos:start="190:58" pos:end="190:65">buf_size</name><operator pos:start="190:66" pos:end="190:66">)</operator> <operator pos:start="190:68" pos:end="190:68">-</operator> <name pos:start="190:70" pos:end="190:78">buf_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="191:5" pos:end="320:14">else if <condition pos:start="191:13" pos:end="191:28">(<expr pos:start="191:14" pos:end="191:27"><name pos:start="191:14" pos:end="191:27"><name pos:start="191:14" pos:end="191:18">avctx</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:27">hwaccel</name></name></expr>)</condition> <block pos:start="191:30" pos:end="320:14">{<block_content pos:start="192:9" pos:end="320:14">
        <if_stmt pos:start="192:9" pos:end="320:14"><if pos:start="192:9" pos:end="320:14">if <condition pos:start="192:12" pos:end="192:52">(<expr pos:start="192:13" pos:end="192:51"><name pos:start="192:13" pos:end="192:25"><name pos:start="192:13" pos:end="192:13">v</name><operator pos:start="192:14" pos:end="192:15">-&gt;</operator><name pos:start="192:16" pos:end="192:25">field_mode</name></name> <operator pos:start="192:27" pos:end="192:28">&amp;&amp;</operator> <name pos:start="192:30" pos:end="192:51">buf_start_second_field</name></expr>)</condition> <block pos:start="192:54" pos:end="320:14">{<block_content pos:start="194:13" pos:end="320:14">
            <comment type="line" pos:start="193:13" pos:end="193:33">// decode first field</comment>
            <expr_stmt pos:start="194:13" pos:end="194:62"><expr pos:start="194:13" pos:end="194:61"><name pos:start="194:13" pos:end="194:32"><name pos:start="194:13" pos:end="194:13">s</name><operator pos:start="194:14" pos:end="194:15">-&gt;</operator><name pos:start="194:16" pos:end="194:32">picture_structure</name></name> <operator pos:start="194:34" pos:end="194:34">=</operator> <name pos:start="194:36" pos:end="194:52">PICT_BOTTOM_FIELD</name> <operator pos:start="194:54" pos:end="194:54">-</operator> <name pos:start="194:56" pos:end="194:61"><name pos:start="194:56" pos:end="194:56">v</name><operator pos:start="194:57" pos:end="194:58">-&gt;</operator><name pos:start="194:59" pos:end="194:61">tff</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="195:13" pos:end="199:45"><if pos:start="195:13" pos:end="199:45">if <condition pos:start="195:16" pos:end="195:102">(<expr pos:start="195:17" pos:end="195:101"><call pos:start="195:17" pos:end="195:97"><name pos:start="195:17" pos:end="195:43"><name pos:start="195:17" pos:end="195:21">avctx</name><operator pos:start="195:22" pos:end="195:23">-&gt;</operator><name pos:start="195:24" pos:end="195:30">hwaccel</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:43">start_frame</name></name><argument_list pos:start="195:44" pos:end="195:97">(<argument pos:start="195:45" pos:end="195:49"><expr pos:start="195:45" pos:end="195:49"><name pos:start="195:45" pos:end="195:49">avctx</name></expr></argument>, <argument pos:start="195:52" pos:end="195:60"><expr pos:start="195:52" pos:end="195:60"><name pos:start="195:52" pos:end="195:60">buf_start</name></expr></argument>, <argument pos:start="195:63" pos:end="195:96"><expr pos:start="195:63" pos:end="195:96"><name pos:start="195:63" pos:end="195:84">buf_start_second_field</name> <operator pos:start="195:86" pos:end="195:86">-</operator> <name pos:start="195:88" pos:end="195:96">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="195:99" pos:end="195:99">&lt;</operator> <literal type="number" pos:start="195:101" pos:end="195:101">0</literal></expr>)</condition><block type="pseudo" pos:start="196:13" pos:end="199:45"><block_content pos:start="196:13" pos:end="199:45">
            <if_stmt pos:start="196:13" pos:end="199:45"><if pos:start="196:13" pos:end="199:45">if <condition pos:start="196:16" pos:end="196:103">(<expr pos:start="196:17" pos:end="196:102"><call pos:start="196:17" pos:end="196:98"><name pos:start="196:17" pos:end="196:44"><name pos:start="196:17" pos:end="196:21">avctx</name><operator pos:start="196:22" pos:end="196:23">-&gt;</operator><name pos:start="196:24" pos:end="196:30">hwaccel</name><operator pos:start="196:31" pos:end="196:32">-&gt;</operator><name pos:start="196:33" pos:end="196:44">decode_slice</name></name><argument_list pos:start="196:45" pos:end="196:98">(<argument pos:start="196:46" pos:end="196:50"><expr pos:start="196:46" pos:end="196:50"><name pos:start="196:46" pos:end="196:50">avctx</name></expr></argument>, <argument pos:start="196:53" pos:end="196:61"><expr pos:start="196:53" pos:end="196:61"><name pos:start="196:53" pos:end="196:61">buf_start</name></expr></argument>, <argument pos:start="196:64" pos:end="196:97"><expr pos:start="196:64" pos:end="196:97"><name pos:start="196:64" pos:end="196:85">buf_start_second_field</name> <operator pos:start="196:87" pos:end="196:87">-</operator> <name pos:start="196:89" pos:end="196:97">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="196:100" pos:end="196:100">&lt;</operator> <literal type="number" pos:start="196:102" pos:end="196:102">0</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="199:45"><block_content pos:start="197:13" pos:end="199:45">
            <if_stmt pos:start="197:13" pos:end="199:45"><if pos:start="197:13" pos:end="199:45">if <condition pos:start="197:16" pos:end="197:53">(<expr pos:start="197:17" pos:end="197:52"><call pos:start="197:17" pos:end="197:48"><name pos:start="197:17" pos:end="197:41"><name pos:start="197:17" pos:end="197:21">avctx</name><operator pos:start="197:22" pos:end="197:23">-&gt;</operator><name pos:start="197:24" pos:end="197:30">hwaccel</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:41">end_frame</name></name><argument_list pos:start="197:42" pos:end="197:48">(<argument pos:start="197:43" pos:end="197:47"><expr pos:start="197:43" pos:end="197:47"><name pos:start="197:43" pos:end="197:47">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="197:50" pos:end="197:50">&lt;</operator> <literal type="number" pos:start="197:52" pos:end="197:52">0</literal></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:45"><block_content pos:start="199:13" pos:end="199:45">
            <comment type="line" pos:start="198:13" pos:end="198:34">// decode second field</comment>
            <expr_stmt pos:start="199:13" pos:end="199:45"><expr pos:start="199:13" pos:end="199:44"><name pos:start="199:13" pos:end="199:17"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:17">gb</name></name> <operator pos:start="199:19" pos:end="199:19">=</operator> <name pos:start="199:21" pos:end="199:41"><name pos:start="199:21" pos:end="199:26">slices</name><index pos:start="199:27" pos:end="199:41">[<expr pos:start="199:28" pos:end="199:40"><name pos:start="199:28" pos:end="199:36">n_slices1</name> <operator pos:start="199:38" pos:end="199:38">+</operator> <literal type="number" pos:start="199:40" pos:end="199:40">1</literal></expr>]</index></name><operator pos:start="199:42" pos:end="199:42">.</operator><name pos:start="199:43" pos:end="199:44">gb</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="200:13" pos:end="200:59"><expr pos:start="200:13" pos:end="200:58"><name pos:start="200:13" pos:end="200:32"><name pos:start="200:13" pos:end="200:13">s</name><operator pos:start="200:14" pos:end="200:15">-&gt;</operator><name pos:start="200:16" pos:end="200:32">picture_structure</name></name> <operator pos:start="200:34" pos:end="200:34">=</operator> <name pos:start="200:36" pos:end="200:49">PICT_TOP_FIELD</name> <operator pos:start="200:51" pos:end="200:51">+</operator> <name pos:start="200:53" pos:end="200:58"><name pos:start="200:53" pos:end="200:53">v</name><operator pos:start="200:54" pos:end="200:55">-&gt;</operator><name pos:start="200:56" pos:end="200:58">tff</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="201:13" pos:end="201:32"><expr pos:start="201:13" pos:end="201:31"><name pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:13">v</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:27">second_field</name></name> <operator pos:start="201:29" pos:end="201:29">=</operator> <literal type="number" pos:start="201:31" pos:end="201:31">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="202:13" pos:end="202:35"><expr pos:start="202:13" pos:end="202:34"><name pos:start="202:13" pos:end="202:30"><name pos:start="202:13" pos:end="202:13">v</name><operator pos:start="202:14" pos:end="202:15">-&gt;</operator><name pos:start="202:16" pos:end="202:30">pic_header_flag</name></name> <operator pos:start="202:32" pos:end="202:32">=</operator> <literal type="number" pos:start="202:34" pos:end="202:34">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="203:13" pos:end="214:5"><if pos:start="203:13" pos:end="209:9">if <condition pos:start="203:16" pos:end="203:61">(<expr pos:start="203:17" pos:end="203:60"><call pos:start="203:17" pos:end="203:56"><name pos:start="203:17" pos:end="203:45">ff_vc1_parse_frame_header_adv</name><argument_list pos:start="203:46" pos:end="203:56">(<argument pos:start="203:47" pos:end="203:47"><expr pos:start="203:47" pos:end="203:47"><name pos:start="203:47" pos:end="203:47">v</name></expr></argument>, <argument pos:start="203:50" pos:end="203:55"><expr pos:start="203:50" pos:end="203:55"><operator pos:start="203:50" pos:end="203:50">&amp;</operator><name pos:start="203:51" pos:end="203:55"><name pos:start="203:51" pos:end="203:51">s</name><operator pos:start="203:52" pos:end="203:53">-&gt;</operator><name pos:start="203:54" pos:end="203:55">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="203:58" pos:end="203:58">&lt;</operator> <literal type="number" pos:start="203:60" pos:end="203:60">0</literal></expr>)</condition> <block pos:start="203:63" pos:end="209:9">{<block_content pos:start="204:17" pos:end="208:53">
                <expr_stmt pos:start="204:17" pos:end="204:86"><expr pos:start="204:17" pos:end="204:85"><call pos:start="204:17" pos:end="204:85"><name pos:start="204:17" pos:end="204:22">av_log</name><argument_list pos:start="204:23" pos:end="204:85">(<argument pos:start="204:24" pos:end="204:28"><expr pos:start="204:24" pos:end="204:28"><name pos:start="204:24" pos:end="204:28">avctx</name></expr></argument>, <argument pos:start="204:31" pos:end="204:42"><expr pos:start="204:31" pos:end="204:42"><name pos:start="204:31" pos:end="204:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="204:45" pos:end="204:84"><expr pos:start="204:45" pos:end="204:84"><literal type="string" pos:start="204:45" pos:end="204:84">"parsing header for second field failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="205:13" pos:end="205:67"><expr pos:start="205:13" pos:end="205:66"><name pos:start="205:13" pos:end="205:49"><name pos:start="205:13" pos:end="205:13">v</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:16">s</name><operator pos:start="205:17" pos:end="205:17">.</operator><name pos:start="205:18" pos:end="205:36">current_picture_ptr</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:39">f</name><operator pos:start="205:40" pos:end="205:40">.</operator><name pos:start="205:41" pos:end="205:49">pict_type</name></name> <operator pos:start="205:51" pos:end="205:51">=</operator> <name pos:start="205:53" pos:end="205:66"><name pos:start="205:53" pos:end="205:53">v</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:56">s</name><operator pos:start="205:57" pos:end="205:57">.</operator><name pos:start="205:58" pos:end="205:66">pict_type</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="206:13" pos:end="208:53"><if pos:start="206:13" pos:end="208:53">if <condition pos:start="206:16" pos:end="206:122">(<expr pos:start="206:17" pos:end="206:121"><call pos:start="206:17" pos:end="206:117"><name pos:start="206:17" pos:end="206:43"><name pos:start="206:17" pos:end="206:21">avctx</name><operator pos:start="206:22" pos:end="206:23">-&gt;</operator><name pos:start="206:24" pos:end="206:30">hwaccel</name><operator pos:start="206:31" pos:end="206:32">-&gt;</operator><name pos:start="206:33" pos:end="206:43">start_frame</name></name><argument_list pos:start="206:44" pos:end="206:117">(<argument pos:start="206:45" pos:end="206:49"><expr pos:start="206:45" pos:end="206:49"><name pos:start="206:45" pos:end="206:49">avctx</name></expr></argument>, <argument pos:start="206:52" pos:end="206:73"><expr pos:start="206:52" pos:end="206:73"><name pos:start="206:52" pos:end="206:73">buf_start_second_field</name></expr></argument>, <argument pos:start="206:76" pos:end="206:116"><expr pos:start="206:76" pos:end="206:116"><operator pos:start="206:76" pos:end="206:76">(</operator><name pos:start="206:77" pos:end="206:79">buf</name> <operator pos:start="206:81" pos:end="206:81">+</operator> <name pos:start="206:83" pos:end="206:90">buf_size</name><operator pos:start="206:91" pos:end="206:91">)</operator> <operator pos:start="206:93" pos:end="206:93">-</operator> <name pos:start="206:95" pos:end="206:116">buf_start_second_field</name></expr></argument>)</argument_list></call> <operator pos:start="206:119" pos:end="206:119">&lt;</operator> <literal type="number" pos:start="206:121" pos:end="206:121">0</literal></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="208:53"><block_content pos:start="207:13" pos:end="208:53">
            <if_stmt pos:start="207:13" pos:end="208:53"><if pos:start="207:13" pos:end="208:53">if <condition pos:start="207:16" pos:end="207:123">(<expr pos:start="207:17" pos:end="207:122"><call pos:start="207:17" pos:end="207:118"><name pos:start="207:17" pos:end="207:44"><name pos:start="207:17" pos:end="207:21">avctx</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:30">hwaccel</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:44">decode_slice</name></name><argument_list pos:start="207:45" pos:end="207:118">(<argument pos:start="207:46" pos:end="207:50"><expr pos:start="207:46" pos:end="207:50"><name pos:start="207:46" pos:end="207:50">avctx</name></expr></argument>, <argument pos:start="207:53" pos:end="207:74"><expr pos:start="207:53" pos:end="207:74"><name pos:start="207:53" pos:end="207:74">buf_start_second_field</name></expr></argument>, <argument pos:start="207:77" pos:end="207:117"><expr pos:start="207:77" pos:end="207:117"><operator pos:start="207:77" pos:end="207:77">(</operator><name pos:start="207:78" pos:end="207:80">buf</name> <operator pos:start="207:82" pos:end="207:82">+</operator> <name pos:start="207:84" pos:end="207:91">buf_size</name><operator pos:start="207:92" pos:end="207:92">)</operator> <operator pos:start="207:94" pos:end="207:94">-</operator> <name pos:start="207:96" pos:end="207:117">buf_start_second_field</name></expr></argument>)</argument_list></call> <operator pos:start="207:120" pos:end="207:120">&lt;</operator> <literal type="number" pos:start="207:122" pos:end="207:122">0</literal></expr>)</condition><block type="pseudo" pos:start="208:13" pos:end="208:53"><block_content pos:start="208:13" pos:end="208:53">
            <if_stmt pos:start="208:13" pos:end="208:53"><if pos:start="208:13" pos:end="208:53">if <condition pos:start="208:16" pos:end="208:53">(<expr pos:start="208:17" pos:end="208:52"><call pos:start="208:17" pos:end="208:48"><name pos:start="208:17" pos:end="208:41"><name pos:start="208:17" pos:end="208:21">avctx</name><operator pos:start="208:22" pos:end="208:23">-&gt;</operator><name pos:start="208:24" pos:end="208:30">hwaccel</name><operator pos:start="208:31" pos:end="208:32">-&gt;</operator><name pos:start="208:33" pos:end="208:41">end_frame</name></name><argument_list pos:start="208:42" pos:end="208:48">(<argument pos:start="208:43" pos:end="208:47"><expr pos:start="208:43" pos:end="208:47"><name pos:start="208:43" pos:end="208:47">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="208:50" pos:end="208:50">&lt;</operator> <literal type="number" pos:start="208:52" pos:end="208:52">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="209:11" pos:end="214:5">else <block pos:start="209:16" pos:end="214:5">{<block_content pos:start="210:13" pos:end="213:53">
            <expr_stmt pos:start="210:13" pos:end="210:46"><expr pos:start="210:13" pos:end="210:45"><name pos:start="210:13" pos:end="210:32"><name pos:start="210:13" pos:end="210:13">s</name><operator pos:start="210:14" pos:end="210:15">-&gt;</operator><name pos:start="210:16" pos:end="210:32">picture_structure</name></name> <operator pos:start="210:34" pos:end="210:34">=</operator> <name pos:start="210:36" pos:end="210:45">PICT_FRAME</name></expr>;</expr_stmt>
            <if_stmt pos:start="211:13" pos:end="213:53"><if pos:start="211:13" pos:end="213:53">if <condition pos:start="211:16" pos:end="211:96">(<expr pos:start="211:17" pos:end="211:95"><call pos:start="211:17" pos:end="211:91"><name pos:start="211:17" pos:end="211:43"><name pos:start="211:17" pos:end="211:21">avctx</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:30">hwaccel</name><operator pos:start="211:31" pos:end="211:32">-&gt;</operator><name pos:start="211:33" pos:end="211:43">start_frame</name></name><argument_list pos:start="211:44" pos:end="211:91">(<argument pos:start="211:45" pos:end="211:49"><expr pos:start="211:45" pos:end="211:49"><name pos:start="211:45" pos:end="211:49">avctx</name></expr></argument>, <argument pos:start="211:52" pos:end="211:60"><expr pos:start="211:52" pos:end="211:60"><name pos:start="211:52" pos:end="211:60">buf_start</name></expr></argument>, <argument pos:start="211:63" pos:end="211:90"><expr pos:start="211:63" pos:end="211:90"><operator pos:start="211:63" pos:end="211:63">(</operator><name pos:start="211:64" pos:end="211:66">buf</name> <operator pos:start="211:68" pos:end="211:68">+</operator> <name pos:start="211:70" pos:end="211:77">buf_size</name><operator pos:start="211:78" pos:end="211:78">)</operator> <operator pos:start="211:80" pos:end="211:80">-</operator> <name pos:start="211:82" pos:end="211:90">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="211:93" pos:end="211:93">&lt;</operator> <literal type="number" pos:start="211:95" pos:end="211:95">0</literal></expr>)</condition><block type="pseudo" pos:start="212:13" pos:end="213:53"><block_content pos:start="212:13" pos:end="213:53">
            <if_stmt pos:start="212:13" pos:end="213:53"><if pos:start="212:13" pos:end="213:53">if <condition pos:start="212:16" pos:end="212:97">(<expr pos:start="212:17" pos:end="212:96"><call pos:start="212:17" pos:end="212:92"><name pos:start="212:17" pos:end="212:44"><name pos:start="212:17" pos:end="212:21">avctx</name><operator pos:start="212:22" pos:end="212:23">-&gt;</operator><name pos:start="212:24" pos:end="212:30">hwaccel</name><operator pos:start="212:31" pos:end="212:32">-&gt;</operator><name pos:start="212:33" pos:end="212:44">decode_slice</name></name><argument_list pos:start="212:45" pos:end="212:92">(<argument pos:start="212:46" pos:end="212:50"><expr pos:start="212:46" pos:end="212:50"><name pos:start="212:46" pos:end="212:50">avctx</name></expr></argument>, <argument pos:start="212:53" pos:end="212:61"><expr pos:start="212:53" pos:end="212:61"><name pos:start="212:53" pos:end="212:61">buf_start</name></expr></argument>, <argument pos:start="212:64" pos:end="212:91"><expr pos:start="212:64" pos:end="212:91"><operator pos:start="212:64" pos:end="212:64">(</operator><name pos:start="212:65" pos:end="212:67">buf</name> <operator pos:start="212:69" pos:end="212:69">+</operator> <name pos:start="212:71" pos:end="212:78">buf_size</name><operator pos:start="212:79" pos:end="212:79">)</operator> <operator pos:start="212:81" pos:end="212:81">-</operator> <name pos:start="212:83" pos:end="212:91">buf_start</name></expr></argument>)</argument_list></call> <operator pos:start="212:94" pos:end="212:94">&lt;</operator> <literal type="number" pos:start="212:96" pos:end="212:96">0</literal></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:53"><block_content pos:start="213:13" pos:end="213:53">
            <if_stmt pos:start="213:13" pos:end="213:53"><if pos:start="213:13" pos:end="213:53">if <condition pos:start="213:16" pos:end="213:53">(<expr pos:start="213:17" pos:end="213:52"><call pos:start="213:17" pos:end="213:48"><name pos:start="213:17" pos:end="213:41"><name pos:start="213:17" pos:end="213:21">avctx</name><operator pos:start="213:22" pos:end="213:23">-&gt;</operator><name pos:start="213:24" pos:end="213:30">hwaccel</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:41">end_frame</name></name><argument_list pos:start="213:42" pos:end="213:48">(<argument pos:start="213:43" pos:end="213:47"><expr pos:start="213:43" pos:end="213:47"><name pos:start="213:43" pos:end="213:47">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="213:50" pos:end="213:50">&lt;</operator> <literal type="number" pos:start="213:52" pos:end="213:52">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="214:7" pos:end="320:14"><else pos:start="214:7" pos:end="320:14">else <block pos:start="214:12" pos:end="320:14">{<block_content pos:start="215:9" pos:end="320:14">
        <if_stmt pos:start="215:9" pos:end="216:21"><if pos:start="215:9" pos:end="216:21">if <condition pos:start="215:12" pos:end="215:71">(<expr pos:start="215:13" pos:end="215:70"><name pos:start="215:13" pos:end="215:18"><name pos:start="215:13" pos:end="215:13">v</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:18">fcm</name></name> <operator pos:start="215:20" pos:end="215:21">==</operator> <name pos:start="215:23" pos:end="215:33">ILACE_FRAME</name> <operator pos:start="215:35" pos:end="215:36">&amp;&amp;</operator> <name pos:start="215:38" pos:end="215:49"><name pos:start="215:38" pos:end="215:38">s</name><operator pos:start="215:39" pos:end="215:40">-&gt;</operator><name pos:start="215:41" pos:end="215:49">pict_type</name></name> <operator pos:start="215:51" pos:end="215:52">==</operator> <name pos:start="215:54" pos:end="215:70">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="216:13" pos:end="216:21"><block_content pos:start="216:13" pos:end="216:21">
            <goto pos:start="216:13" pos:end="216:21">goto <name pos:start="216:18" pos:end="216:20">err</name>;</goto></block_content></block></if></if_stmt> <comment type="line" pos:start="216:23" pos:end="216:78">// This codepath is still incomplete thus it is disabled</comment>
        <expr_stmt pos:start="217:9" pos:end="217:29"><expr pos:start="217:9" pos:end="217:28"><call pos:start="217:9" pos:end="217:28"><name pos:start="217:9" pos:end="217:25">ff_er_frame_start</name><argument_list pos:start="217:26" pos:end="217:28">(<argument pos:start="217:27" pos:end="217:27"><expr pos:start="217:27" pos:end="217:27"><name pos:start="217:27" pos:end="217:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="218:9" pos:end="218:31"><expr pos:start="218:9" pos:end="218:30"><name pos:start="218:9" pos:end="218:15"><name pos:start="218:9" pos:end="218:9">v</name><operator pos:start="218:10" pos:end="218:11">-&gt;</operator><name pos:start="218:12" pos:end="218:15">bits</name></name> <operator pos:start="218:17" pos:end="218:17">=</operator> <name pos:start="218:19" pos:end="218:26">buf_size</name> <operator pos:start="218:28" pos:end="218:28">*</operator> <literal type="number" pos:start="218:30" pos:end="218:30">8</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="219:9" pos:end="219:34"><expr pos:start="219:9" pos:end="219:33"><name pos:start="219:9" pos:end="219:19"><name pos:start="219:9" pos:end="219:9">v</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:19">end_mb_x</name></name> <operator pos:start="219:21" pos:end="219:21">=</operator> <name pos:start="219:23" pos:end="219:33"><name pos:start="219:23" pos:end="219:23">s</name><operator pos:start="219:24" pos:end="219:25">-&gt;</operator><name pos:start="219:26" pos:end="219:33">mb_width</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="220:9" pos:end="320:14"><if pos:start="220:9" pos:end="320:14">if <condition pos:start="220:12" pos:end="220:26">(<expr pos:start="220:13" pos:end="220:25"><name pos:start="220:13" pos:end="220:25"><name pos:start="220:13" pos:end="220:13">v</name><operator pos:start="220:14" pos:end="220:15">-&gt;</operator><name pos:start="220:16" pos:end="220:25">field_mode</name></name></expr>)</condition> <block pos:start="220:28" pos:end="320:14">{<block_content pos:start="221:13" pos:end="320:14">
            <decl_stmt pos:start="221:13" pos:end="221:28"><decl pos:start="221:13" pos:end="221:27"><type pos:start="221:13" pos:end="221:21"><name pos:start="221:13" pos:end="221:19">uint8_t</name> <modifier pos:start="221:21" pos:end="221:21">*</modifier></type><name pos:start="221:22" pos:end="221:27"><name pos:start="221:22" pos:end="221:24">tmp</name><index pos:start="221:25" pos:end="221:27">[<expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">2</literal></expr>]</index></name></decl>;</decl_stmt>
            <expr_stmt pos:start="222:13" pos:end="222:51"><expr pos:start="222:13" pos:end="222:50"><name pos:start="222:13" pos:end="222:44"><name pos:start="222:13" pos:end="222:13">s</name><operator pos:start="222:14" pos:end="222:15">-&gt;</operator><name pos:start="222:16" pos:end="222:30">current_picture</name><operator pos:start="222:31" pos:end="222:31">.</operator><name pos:start="222:32" pos:end="222:32">f</name><operator pos:start="222:33" pos:end="222:33">.</operator><name pos:start="222:34" pos:end="222:41">linesize</name><index pos:start="222:42" pos:end="222:44">[<expr pos:start="222:43" pos:end="222:43"><literal type="number" pos:start="222:43" pos:end="222:43">0</literal></expr>]</index></name> <operator pos:start="222:46" pos:end="222:48">&lt;&lt;=</operator> <literal type="number" pos:start="222:50" pos:end="222:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="223:13" pos:end="223:51"><expr pos:start="223:13" pos:end="223:50"><name pos:start="223:13" pos:end="223:44"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:30">current_picture</name><operator pos:start="223:31" pos:end="223:31">.</operator><name pos:start="223:32" pos:end="223:32">f</name><operator pos:start="223:33" pos:end="223:33">.</operator><name pos:start="223:34" pos:end="223:41">linesize</name><index pos:start="223:42" pos:end="223:44">[<expr pos:start="223:43" pos:end="223:43"><literal type="number" pos:start="223:43" pos:end="223:43">1</literal></expr>]</index></name> <operator pos:start="223:46" pos:end="223:48">&lt;&lt;=</operator> <literal type="number" pos:start="223:50" pos:end="223:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="224:13" pos:end="224:51"><expr pos:start="224:13" pos:end="224:50"><name pos:start="224:13" pos:end="224:44"><name pos:start="224:13" pos:end="224:13">s</name><operator pos:start="224:14" pos:end="224:15">-&gt;</operator><name pos:start="224:16" pos:end="224:30">current_picture</name><operator pos:start="224:31" pos:end="224:31">.</operator><name pos:start="224:32" pos:end="224:32">f</name><operator pos:start="224:33" pos:end="224:33">.</operator><name pos:start="224:34" pos:end="224:41">linesize</name><index pos:start="224:42" pos:end="224:44">[<expr pos:start="224:43" pos:end="224:43"><literal type="number" pos:start="224:43" pos:end="224:43">2</literal></expr>]</index></name> <operator pos:start="224:46" pos:end="224:48">&lt;&lt;=</operator> <literal type="number" pos:start="224:50" pos:end="224:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="225:13" pos:end="225:51"><expr pos:start="225:13" pos:end="225:50"><name pos:start="225:13" pos:end="225:23"><name pos:start="225:13" pos:end="225:13">s</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:23">linesize</name></name>                      <operator pos:start="225:46" pos:end="225:48">&lt;&lt;=</operator> <literal type="number" pos:start="225:50" pos:end="225:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="226:13" pos:end="226:51"><expr pos:start="226:13" pos:end="226:50"><name pos:start="226:13" pos:end="226:25"><name pos:start="226:13" pos:end="226:13">s</name><operator pos:start="226:14" pos:end="226:15">-&gt;</operator><name pos:start="226:16" pos:end="226:25">uvlinesize</name></name>                    <operator pos:start="226:46" pos:end="226:48">&lt;&lt;=</operator> <literal type="number" pos:start="226:50" pos:end="226:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="227:13" pos:end="227:46"><expr pos:start="227:13" pos:end="227:45"><name pos:start="227:13" pos:end="227:18"><name pos:start="227:13" pos:end="227:15">tmp</name><index pos:start="227:16" pos:end="227:18">[<expr pos:start="227:17" pos:end="227:17"><literal type="number" pos:start="227:17" pos:end="227:17">0</literal></expr>]</index></name>          <operator pos:start="227:29" pos:end="227:29">=</operator> <name pos:start="227:31" pos:end="227:45"><name pos:start="227:31" pos:end="227:31">v</name><operator pos:start="227:32" pos:end="227:33">-&gt;</operator><name pos:start="227:34" pos:end="227:42">mv_f_last</name><index pos:start="227:43" pos:end="227:45">[<expr pos:start="227:44" pos:end="227:44"><literal type="number" pos:start="227:44" pos:end="227:44">0</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="228:13" pos:end="228:46"><expr pos:start="228:13" pos:end="228:45"><name pos:start="228:13" pos:end="228:18"><name pos:start="228:13" pos:end="228:15">tmp</name><index pos:start="228:16" pos:end="228:18">[<expr pos:start="228:17" pos:end="228:17"><literal type="number" pos:start="228:17" pos:end="228:17">1</literal></expr>]</index></name>          <operator pos:start="228:29" pos:end="228:29">=</operator> <name pos:start="228:31" pos:end="228:45"><name pos:start="228:31" pos:end="228:31">v</name><operator pos:start="228:32" pos:end="228:33">-&gt;</operator><name pos:start="228:34" pos:end="228:42">mv_f_last</name><index pos:start="228:43" pos:end="228:45">[<expr pos:start="228:44" pos:end="228:44"><literal type="number" pos:start="228:44" pos:end="228:44">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="229:13" pos:end="229:46"><expr pos:start="229:13" pos:end="229:45"><name pos:start="229:13" pos:end="229:27"><name pos:start="229:13" pos:end="229:13">v</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:24">mv_f_last</name><index pos:start="229:25" pos:end="229:27">[<expr pos:start="229:26" pos:end="229:26"><literal type="number" pos:start="229:26" pos:end="229:26">0</literal></expr>]</index></name> <operator pos:start="229:29" pos:end="229:29">=</operator> <name pos:start="229:31" pos:end="229:45"><name pos:start="229:31" pos:end="229:31">v</name><operator pos:start="229:32" pos:end="229:33">-&gt;</operator><name pos:start="229:34" pos:end="229:42">mv_f_next</name><index pos:start="229:43" pos:end="229:45">[<expr pos:start="229:44" pos:end="229:44"><literal type="number" pos:start="229:44" pos:end="229:44">0</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="230:13" pos:end="230:46"><expr pos:start="230:13" pos:end="230:45"><name pos:start="230:13" pos:end="230:27"><name pos:start="230:13" pos:end="230:13">v</name><operator pos:start="230:14" pos:end="230:15">-&gt;</operator><name pos:start="230:16" pos:end="230:24">mv_f_last</name><index pos:start="230:25" pos:end="230:27">[<expr pos:start="230:26" pos:end="230:26"><literal type="number" pos:start="230:26" pos:end="230:26">1</literal></expr>]</index></name> <operator pos:start="230:29" pos:end="230:29">=</operator> <name pos:start="230:31" pos:end="230:45"><name pos:start="230:31" pos:end="230:31">v</name><operator pos:start="230:32" pos:end="230:33">-&gt;</operator><name pos:start="230:34" pos:end="230:42">mv_f_next</name><index pos:start="230:43" pos:end="230:45">[<expr pos:start="230:44" pos:end="230:44"><literal type="number" pos:start="230:44" pos:end="230:44">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="231:13" pos:end="231:41"><expr pos:start="231:13" pos:end="231:40"><name pos:start="231:13" pos:end="231:27"><name pos:start="231:13" pos:end="231:13">v</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:24">mv_f_next</name><index pos:start="231:25" pos:end="231:27">[<expr pos:start="231:26" pos:end="231:26"><literal type="number" pos:start="231:26" pos:end="231:26">0</literal></expr>]</index></name> <operator pos:start="231:29" pos:end="231:29">=</operator> <name pos:start="231:31" pos:end="231:40"><name pos:start="231:31" pos:end="231:31">v</name><operator pos:start="231:32" pos:end="231:33">-&gt;</operator><name pos:start="231:34" pos:end="231:37">mv_f</name><index pos:start="231:38" pos:end="231:40">[<expr pos:start="231:39" pos:end="231:39"><literal type="number" pos:start="231:39" pos:end="231:39">0</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="232:13" pos:end="232:41"><expr pos:start="232:13" pos:end="232:40"><name pos:start="232:13" pos:end="232:27"><name pos:start="232:13" pos:end="232:13">v</name><operator pos:start="232:14" pos:end="232:15">-&gt;</operator><name pos:start="232:16" pos:end="232:24">mv_f_next</name><index pos:start="232:25" pos:end="232:27">[<expr pos:start="232:26" pos:end="232:26"><literal type="number" pos:start="232:26" pos:end="232:26">1</literal></expr>]</index></name> <operator pos:start="232:29" pos:end="232:29">=</operator> <name pos:start="232:31" pos:end="232:40"><name pos:start="232:31" pos:end="232:31">v</name><operator pos:start="232:32" pos:end="232:33">-&gt;</operator><name pos:start="232:34" pos:end="232:37">mv_f</name><index pos:start="232:38" pos:end="232:40">[<expr pos:start="232:39" pos:end="232:39"><literal type="number" pos:start="232:39" pos:end="232:39">1</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="233:13" pos:end="233:32"><expr pos:start="233:13" pos:end="233:31"><name pos:start="233:13" pos:end="233:22"><name pos:start="233:13" pos:end="233:13">v</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:19">mv_f</name><index pos:start="233:20" pos:end="233:22">[<expr pos:start="233:21" pos:end="233:21"><literal type="number" pos:start="233:21" pos:end="233:21">0</literal></expr>]</index></name> <operator pos:start="233:24" pos:end="233:24">=</operator> <name pos:start="233:26" pos:end="233:31"><name pos:start="233:26" pos:end="233:28">tmp</name><index pos:start="233:29" pos:end="233:31">[<expr pos:start="233:30" pos:end="233:30"><literal type="number" pos:start="233:30" pos:end="233:30">0</literal></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt pos:start="234:13" pos:end="234:32"><expr pos:start="234:13" pos:end="234:31"><name pos:start="234:13" pos:end="234:22"><name pos:start="234:13" pos:end="234:13">v</name><operator pos:start="234:14" pos:end="234:15">-&gt;</operator><name pos:start="234:16" pos:end="234:19">mv_f</name><index pos:start="234:20" pos:end="234:22">[<expr pos:start="234:21" pos:end="234:21"><literal type="number" pos:start="234:21" pos:end="234:21">1</literal></expr>]</index></name> <operator pos:start="234:24" pos:end="234:24">=</operator> <name pos:start="234:26" pos:end="234:31"><name pos:start="234:26" pos:end="234:28">tmp</name><index pos:start="234:29" pos:end="234:31">[<expr pos:start="234:30" pos:end="234:30"><literal type="number" pos:start="234:30" pos:end="234:30">1</literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="235:9" pos:end="235:50"><expr pos:start="235:9" pos:end="235:49"><name pos:start="235:9" pos:end="235:17">mb_height</name> <operator pos:start="235:19" pos:end="235:19">=</operator> <name pos:start="235:21" pos:end="235:32"><name pos:start="235:21" pos:end="235:21">s</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:32">mb_height</name></name> <operator pos:start="235:34" pos:end="235:35">&gt;&gt;</operator> <name pos:start="235:37" pos:end="235:49"><name pos:start="235:37" pos:end="235:37">v</name><operator pos:start="235:38" pos:end="235:39">-&gt;</operator><name pos:start="235:40" pos:end="235:49">field_mode</name></name></expr>;</expr_stmt>
        <for pos:start="236:9" pos:end="320:14">for <control pos:start="236:13" pos:end="236:39">(<init pos:start="236:14" pos:end="236:19"><expr pos:start="236:14" pos:end="236:18"><name pos:start="236:14" pos:end="236:14">i</name> <operator pos:start="236:16" pos:end="236:16">=</operator> <literal type="number" pos:start="236:18" pos:end="236:18">0</literal></expr>;</init> <condition pos:start="236:21" pos:end="236:34"><expr pos:start="236:21" pos:end="236:33"><name pos:start="236:21" pos:end="236:21">i</name> <operator pos:start="236:23" pos:end="236:24">&lt;=</operator> <name pos:start="236:26" pos:end="236:33">n_slices</name></expr>;</condition> <incr pos:start="236:36" pos:end="236:38"><expr pos:start="236:36" pos:end="236:38"><name pos:start="236:36" pos:end="236:36">i</name><operator pos:start="236:37" pos:end="236:38">++</operator></expr></incr>)</control> <block pos:start="236:41" pos:end="320:14">{<block_content pos:start="237:13" pos:end="320:14">
            <if_stmt pos:start="237:13" pos:end="320:14"><if pos:start="237:13" pos:end="320:14">if <condition pos:start="237:16" pos:end="237:63">(<expr pos:start="237:17" pos:end="237:62"><name pos:start="237:17" pos:end="237:17">i</name> <operator pos:start="237:19" pos:end="237:19">&gt;</operator> <literal type="number" pos:start="237:21" pos:end="237:21">0</literal> <operator pos:start="237:23" pos:end="237:24">&amp;&amp;</operator>  <name pos:start="237:27" pos:end="237:39"><name pos:start="237:27" pos:end="237:32">slices</name><index pos:start="237:33" pos:end="237:39">[<expr pos:start="237:34" pos:end="237:38"><name pos:start="237:34" pos:end="237:34">i</name> <operator pos:start="237:36" pos:end="237:36">-</operator> <literal type="number" pos:start="237:38" pos:end="237:38">1</literal></expr>]</index></name><operator pos:start="237:40" pos:end="237:40">.</operator><name pos:start="237:41" pos:end="237:49">mby_start</name> <operator pos:start="237:51" pos:end="237:52">&gt;=</operator> <name pos:start="237:54" pos:end="237:62">mb_height</name></expr>)</condition> <block pos:start="237:65" pos:end="320:14">{<block_content pos:start="238:17" pos:end="320:14">
                <if_stmt pos:start="238:17" pos:end="320:14"><if pos:start="238:17" pos:end="246:13">if <condition pos:start="238:20" pos:end="238:39">(<expr pos:start="238:21" pos:end="238:38"><name pos:start="238:21" pos:end="238:33"><name pos:start="238:21" pos:end="238:21">v</name><operator pos:start="238:22" pos:end="238:23">-&gt;</operator><name pos:start="238:24" pos:end="238:33">field_mode</name></name> <operator pos:start="238:35" pos:end="238:36">&lt;=</operator> <literal type="number" pos:start="238:38" pos:end="238:38">0</literal></expr>)</condition> <block pos:start="238:41" pos:end="246:13">{<block_content pos:start="239:21" pos:end="245:67">
                    <expr_stmt pos:start="239:21" pos:end="241:63"><expr pos:start="239:21" pos:end="241:62"><call pos:start="239:21" pos:end="241:62"><name pos:start="239:21" pos:end="239:26">av_log</name><argument_list pos:start="239:27" pos:end="241:62">(<argument pos:start="239:28" pos:end="239:37"><expr pos:start="239:28" pos:end="239:37"><name pos:start="239:28" pos:end="239:37"><name pos:start="239:28" pos:end="239:28">v</name><operator pos:start="239:29" pos:end="239:30">-&gt;</operator><name pos:start="239:31" pos:end="239:31">s</name><operator pos:start="239:32" pos:end="239:32">.</operator><name pos:start="239:33" pos:end="239:37">avctx</name></name></expr></argument>, <argument pos:start="239:40" pos:end="239:51"><expr pos:start="239:40" pos:end="239:51"><name pos:start="239:40" pos:end="239:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:54" pos:end="240:58"><expr pos:start="239:54" pos:end="240:58"><literal type="string" pos:start="239:54" pos:end="239:78">"Slice %d starts beyond "</literal>
                           <literal type="string" pos:start="240:28" pos:end="240:58">"picture boundary (%d &gt;= %d)\n"</literal></expr></argument>, <argument pos:start="240:61" pos:end="240:61"><expr pos:start="240:61" pos:end="240:61"><name pos:start="240:61" pos:end="240:61">i</name></expr></argument>,
                           <argument pos:start="241:28" pos:end="241:50"><expr pos:start="241:28" pos:end="241:50"><name pos:start="241:28" pos:end="241:40"><name pos:start="241:28" pos:end="241:33">slices</name><index pos:start="241:34" pos:end="241:40">[<expr pos:start="241:35" pos:end="241:39"><name pos:start="241:35" pos:end="241:35">i</name> <operator pos:start="241:37" pos:end="241:37">-</operator> <literal type="number" pos:start="241:39" pos:end="241:39">1</literal></expr>]</index></name><operator pos:start="241:41" pos:end="241:41">.</operator><name pos:start="241:42" pos:end="241:50">mby_start</name></expr></argument>, <argument pos:start="241:53" pos:end="241:61"><expr pos:start="241:53" pos:end="241:61"><name pos:start="241:53" pos:end="241:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <continue pos:start="242:21" pos:end="242:29">continue;</continue>
                <expr_stmt pos:start="243:17" pos:end="243:36"><expr pos:start="243:17" pos:end="243:35"><name pos:start="243:17" pos:end="243:31"><name pos:start="243:17" pos:end="243:17">v</name><operator pos:start="243:18" pos:end="243:19">-&gt;</operator><name pos:start="243:20" pos:end="243:31">second_field</name></name> <operator pos:start="243:33" pos:end="243:33">=</operator> <literal type="number" pos:start="243:35" pos:end="243:35">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="244:17" pos:end="244:67"><expr pos:start="244:17" pos:end="244:66"><name pos:start="244:17" pos:end="244:29"><name pos:start="244:17" pos:end="244:17">v</name><operator pos:start="244:18" pos:end="244:19">-&gt;</operator><name pos:start="244:20" pos:end="244:29">blocks_off</name></name>   <operator pos:start="244:33" pos:end="244:33">=</operator> <name pos:start="244:35" pos:end="244:45"><name pos:start="244:35" pos:end="244:35">s</name><operator pos:start="244:36" pos:end="244:37">-&gt;</operator><name pos:start="244:38" pos:end="244:45">mb_width</name></name>  <operator pos:start="244:48" pos:end="244:48">*</operator> <name pos:start="244:50" pos:end="244:61"><name pos:start="244:50" pos:end="244:50">s</name><operator pos:start="244:51" pos:end="244:52">-&gt;</operator><name pos:start="244:53" pos:end="244:61">mb_height</name></name> <operator pos:start="244:63" pos:end="244:64">&lt;&lt;</operator> <literal type="number" pos:start="244:66" pos:end="244:66">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="245:17" pos:end="245:67"><expr pos:start="245:17" pos:end="245:66"><name pos:start="245:17" pos:end="245:25"><name pos:start="245:17" pos:end="245:17">v</name><operator pos:start="245:18" pos:end="245:19">-&gt;</operator><name pos:start="245:20" pos:end="245:25">mb_off</name></name>       <operator pos:start="245:33" pos:end="245:33">=</operator> <name pos:start="245:35" pos:end="245:46"><name pos:start="245:35" pos:end="245:35">s</name><operator pos:start="245:36" pos:end="245:37">-&gt;</operator><name pos:start="245:38" pos:end="245:46">mb_stride</name></name> <operator pos:start="245:48" pos:end="245:48">*</operator> <name pos:start="245:50" pos:end="245:61"><name pos:start="245:50" pos:end="245:50">s</name><operator pos:start="245:51" pos:end="245:52">-&gt;</operator><name pos:start="245:53" pos:end="245:61">mb_height</name></name> <operator pos:start="245:63" pos:end="245:64">&gt;&gt;</operator> <literal type="number" pos:start="245:66" pos:end="245:66">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="246:15" pos:end="320:14">else <block pos:start="246:20" pos:end="320:14">{<block_content pos:start="247:17" pos:end="320:14">
                <expr_stmt pos:start="247:17" pos:end="247:36"><expr pos:start="247:17" pos:end="247:35"><name pos:start="247:17" pos:end="247:31"><name pos:start="247:17" pos:end="247:17">v</name><operator pos:start="247:18" pos:end="247:19">-&gt;</operator><name pos:start="247:20" pos:end="247:31">second_field</name></name> <operator pos:start="247:33" pos:end="247:33">=</operator> <literal type="number" pos:start="247:35" pos:end="247:35">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="248:17" pos:end="248:36"><expr pos:start="248:17" pos:end="248:35"><name pos:start="248:17" pos:end="248:29"><name pos:start="248:17" pos:end="248:17">v</name><operator pos:start="248:18" pos:end="248:19">-&gt;</operator><name pos:start="248:20" pos:end="248:29">blocks_off</name></name>   <operator pos:start="248:33" pos:end="248:33">=</operator> <literal type="number" pos:start="248:35" pos:end="248:35">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="249:17" pos:end="249:36"><expr pos:start="249:17" pos:end="249:35"><name pos:start="249:17" pos:end="249:25"><name pos:start="249:17" pos:end="249:17">v</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:25">mb_off</name></name>       <operator pos:start="249:33" pos:end="249:33">=</operator> <literal type="number" pos:start="249:35" pos:end="249:35">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="250:13" pos:end="320:14"><if pos:start="250:13" pos:end="320:14">if <condition pos:start="250:16" pos:end="250:18">(<expr pos:start="250:17" pos:end="250:17"><name pos:start="250:17" pos:end="250:17">i</name></expr>)</condition> <block pos:start="250:20" pos:end="320:14">{<block_content pos:start="251:17" pos:end="320:14">
                <expr_stmt pos:start="251:17" pos:end="251:39"><expr pos:start="251:17" pos:end="251:38"><name pos:start="251:17" pos:end="251:34"><name pos:start="251:17" pos:end="251:17">v</name><operator pos:start="251:18" pos:end="251:19">-&gt;</operator><name pos:start="251:20" pos:end="251:34">pic_header_flag</name></name> <operator pos:start="251:36" pos:end="251:36">=</operator> <literal type="number" pos:start="251:38" pos:end="251:38">0</literal></expr>;</expr_stmt>
                <if_stmt pos:start="252:17" pos:end="320:14"><if pos:start="252:17" pos:end="320:14">if <condition pos:start="252:20" pos:end="252:56">(<expr pos:start="252:21" pos:end="252:55"><name pos:start="252:21" pos:end="252:33"><name pos:start="252:21" pos:end="252:21">v</name><operator pos:start="252:22" pos:end="252:23">-&gt;</operator><name pos:start="252:24" pos:end="252:33">field_mode</name></name> <operator pos:start="252:35" pos:end="252:36">&amp;&amp;</operator> <name pos:start="252:38" pos:end="252:38">i</name> <operator pos:start="252:40" pos:end="252:41">==</operator> <name pos:start="252:43" pos:end="252:51">n_slices1</name> <operator pos:start="252:53" pos:end="252:53">+</operator> <literal type="number" pos:start="252:55" pos:end="252:55">2</literal></expr>)</condition> <block pos:start="252:58" pos:end="320:14">{<block_content pos:start="253:21" pos:end="320:14">
                    <if_stmt pos:start="253:21" pos:end="320:14"><if pos:start="253:21" pos:end="256:17">if <condition pos:start="253:24" pos:end="253:69">(<expr pos:start="253:25" pos:end="253:68"><call pos:start="253:25" pos:end="253:64"><name pos:start="253:25" pos:end="253:53">ff_vc1_parse_frame_header_adv</name><argument_list pos:start="253:54" pos:end="253:64">(<argument pos:start="253:55" pos:end="253:55"><expr pos:start="253:55" pos:end="253:55"><name pos:start="253:55" pos:end="253:55">v</name></expr></argument>, <argument pos:start="253:58" pos:end="253:63"><expr pos:start="253:58" pos:end="253:63"><operator pos:start="253:58" pos:end="253:58">&amp;</operator><name pos:start="253:59" pos:end="253:63"><name pos:start="253:59" pos:end="253:59">s</name><operator pos:start="253:60" pos:end="253:61">-&gt;</operator><name pos:start="253:62" pos:end="253:63">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="253:66" pos:end="253:66">&lt;</operator> <literal type="number" pos:start="253:68" pos:end="253:68">0</literal></expr>)</condition> <block pos:start="253:71" pos:end="256:17">{<block_content pos:start="254:25" pos:end="255:33">
                        <expr_stmt pos:start="254:25" pos:end="254:83"><expr pos:start="254:25" pos:end="254:82"><call pos:start="254:25" pos:end="254:82"><name pos:start="254:25" pos:end="254:30">av_log</name><argument_list pos:start="254:31" pos:end="254:82">(<argument pos:start="254:32" pos:end="254:41"><expr pos:start="254:32" pos:end="254:41"><name pos:start="254:32" pos:end="254:41"><name pos:start="254:32" pos:end="254:32">v</name><operator pos:start="254:33" pos:end="254:34">-&gt;</operator><name pos:start="254:35" pos:end="254:35">s</name><operator pos:start="254:36" pos:end="254:36">.</operator><name pos:start="254:37" pos:end="254:41">avctx</name></name></expr></argument>, <argument pos:start="254:44" pos:end="254:55"><expr pos:start="254:44" pos:end="254:55"><name pos:start="254:44" pos:end="254:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="254:58" pos:end="254:81"><expr pos:start="254:58" pos:end="254:81"><literal type="string" pos:start="254:58" pos:end="254:81">"Field header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <continue pos:start="255:25" pos:end="255:33">continue;</continue>
                </block_content>}</block></if> <if type="elseif" pos:start="256:19" pos:end="320:14">else if <condition pos:start="256:27" pos:end="256:45">(<expr pos:start="256:28" pos:end="256:44"><call pos:start="256:28" pos:end="256:44"><name pos:start="256:28" pos:end="256:36">get_bits1</name><argument_list pos:start="256:37" pos:end="256:44">(<argument pos:start="256:38" pos:end="256:43"><expr pos:start="256:38" pos:end="256:43"><operator pos:start="256:38" pos:end="256:38">&amp;</operator><name pos:start="256:39" pos:end="256:43"><name pos:start="256:39" pos:end="256:39">s</name><operator pos:start="256:40" pos:end="256:41">-&gt;</operator><name pos:start="256:42" pos:end="256:43">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="256:47" pos:end="320:14">{<block_content pos:start="257:21" pos:end="320:14">
                    <expr_stmt pos:start="257:21" pos:end="257:43"><expr pos:start="257:21" pos:end="257:42"><name pos:start="257:21" pos:end="257:38"><name pos:start="257:21" pos:end="257:21">v</name><operator pos:start="257:22" pos:end="257:23">-&gt;</operator><name pos:start="257:24" pos:end="257:38">pic_header_flag</name></name> <operator pos:start="257:40" pos:end="257:40">=</operator> <literal type="number" pos:start="257:42" pos:end="257:42">1</literal></expr>;</expr_stmt>
                    <if_stmt pos:start="258:21" pos:end="320:14"><if pos:start="258:21" pos:end="320:14">if <condition pos:start="258:24" pos:end="258:69">(<expr pos:start="258:25" pos:end="258:68"><call pos:start="258:25" pos:end="258:64"><name pos:start="258:25" pos:end="258:53">ff_vc1_parse_frame_header_adv</name><argument_list pos:start="258:54" pos:end="258:64">(<argument pos:start="258:55" pos:end="258:55"><expr pos:start="258:55" pos:end="258:55"><name pos:start="258:55" pos:end="258:55">v</name></expr></argument>, <argument pos:start="258:58" pos:end="258:63"><expr pos:start="258:58" pos:end="258:63"><operator pos:start="258:58" pos:end="258:58">&amp;</operator><name pos:start="258:59" pos:end="258:63"><name pos:start="258:59" pos:end="258:59">s</name><operator pos:start="258:60" pos:end="258:61">-&gt;</operator><name pos:start="258:62" pos:end="258:63">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="258:66" pos:end="258:66">&lt;</operator> <literal type="number" pos:start="258:68" pos:end="258:68">0</literal></expr>)</condition> <block pos:start="258:71" pos:end="320:14">{<block_content pos:start="259:25" pos:end="320:14">
                        <expr_stmt pos:start="259:25" pos:end="259:83"><expr pos:start="259:25" pos:end="259:82"><call pos:start="259:25" pos:end="259:82"><name pos:start="259:25" pos:end="259:30">av_log</name><argument_list pos:start="259:31" pos:end="259:82">(<argument pos:start="259:32" pos:end="259:41"><expr pos:start="259:32" pos:end="259:41"><name pos:start="259:32" pos:end="259:41"><name pos:start="259:32" pos:end="259:32">v</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:35">s</name><operator pos:start="259:36" pos:end="259:36">.</operator><name pos:start="259:37" pos:end="259:41">avctx</name></name></expr></argument>, <argument pos:start="259:44" pos:end="259:55"><expr pos:start="259:44" pos:end="259:55"><name pos:start="259:44" pos:end="259:55">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:58" pos:end="259:81"><expr pos:start="259:58" pos:end="259:81"><literal type="string" pos:start="259:58" pos:end="259:81">"Slice header damaged\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <continue pos:start="260:25" pos:end="260:33">continue;</continue>
            <expr_stmt pos:start="261:13" pos:end="261:87"><expr pos:start="261:13" pos:end="261:86"><name pos:start="261:13" pos:end="261:25"><name pos:start="261:13" pos:end="261:13">s</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:25">start_mb_y</name></name> <operator pos:start="261:27" pos:end="261:27">=</operator> <ternary pos:start="261:29" pos:end="261:86"><condition pos:start="261:29" pos:end="261:38"><expr pos:start="261:29" pos:end="261:36"><operator pos:start="261:29" pos:end="261:29">(</operator><name pos:start="261:30" pos:end="261:30">i</name> <operator pos:start="261:32" pos:end="261:33">==</operator> <literal type="number" pos:start="261:35" pos:end="261:35">0</literal><operator pos:start="261:36" pos:end="261:36">)</operator></expr> ?</condition><then pos:start="261:40" pos:end="261:40"> <expr pos:start="261:40" pos:end="261:40"><literal type="number" pos:start="261:40" pos:end="261:40">0</literal></expr> </then><else pos:start="261:42" pos:end="261:86">: <expr pos:start="261:44" pos:end="261:86"><call pos:start="261:44" pos:end="261:86"><name pos:start="261:44" pos:end="261:48">FFMAX</name><argument_list pos:start="261:49" pos:end="261:86">(<argument pos:start="261:50" pos:end="261:50"><expr pos:start="261:50" pos:end="261:50"><literal type="number" pos:start="261:50" pos:end="261:50">0</literal></expr></argument>, <argument pos:start="261:53" pos:end="261:85"><expr pos:start="261:53" pos:end="261:85"><name pos:start="261:53" pos:end="261:63"><name pos:start="261:53" pos:end="261:58">slices</name><index pos:start="261:59" pos:end="261:63">[<expr pos:start="261:60" pos:end="261:62"><name pos:start="261:60" pos:end="261:60">i</name><operator pos:start="261:61" pos:end="261:61">-</operator><literal type="number" pos:start="261:62" pos:end="261:62">1</literal></expr>]</index></name><operator pos:start="261:64" pos:end="261:64">.</operator><name pos:start="261:65" pos:end="261:73">mby_start</name> <operator pos:start="261:75" pos:end="261:75">%</operator> <name pos:start="261:77" pos:end="261:85">mb_height</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
            <if_stmt pos:start="262:13" pos:end="265:115"><if pos:start="262:13" pos:end="263:115">if <condition pos:start="262:16" pos:end="262:50">(<expr pos:start="262:17" pos:end="262:49"><operator pos:start="262:17" pos:end="262:17">!</operator><name pos:start="262:18" pos:end="262:30"><name pos:start="262:18" pos:end="262:18">v</name><operator pos:start="262:19" pos:end="262:20">-&gt;</operator><name pos:start="262:21" pos:end="262:30">field_mode</name></name> <operator pos:start="262:32" pos:end="262:33">||</operator> <name pos:start="262:35" pos:end="262:49"><name pos:start="262:35" pos:end="262:35">v</name><operator pos:start="262:36" pos:end="262:37">-&gt;</operator><name pos:start="262:38" pos:end="262:49">second_field</name></name></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:115"><block_content pos:start="263:17" pos:end="263:115">
                <expr_stmt pos:start="263:17" pos:end="263:115"><expr pos:start="263:17" pos:end="263:114"><name pos:start="263:17" pos:end="263:27"><name pos:start="263:17" pos:end="263:17">s</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:27">end_mb_y</name></name> <operator pos:start="263:29" pos:end="263:29">=</operator> <ternary pos:start="263:31" pos:end="263:114"><condition pos:start="263:31" pos:end="263:52"><expr pos:start="263:31" pos:end="263:50"><operator pos:start="263:31" pos:end="263:31">(</operator><name pos:start="263:32" pos:end="263:32">i</name> <operator pos:start="263:34" pos:end="263:35">==</operator> <name pos:start="263:37" pos:end="263:44">n_slices</name>     <operator pos:start="263:50" pos:end="263:50">)</operator></expr> ?</condition><then pos:start="263:54" pos:end="263:62"> <expr pos:start="263:54" pos:end="263:62"><name pos:start="263:54" pos:end="263:62">mb_height</name></expr> </then><else pos:start="263:64" pos:end="263:114">: <expr pos:start="263:66" pos:end="263:114"><call pos:start="263:66" pos:end="263:114"><name pos:start="263:66" pos:end="263:70">FFMIN</name><argument_list pos:start="263:71" pos:end="263:114">(<argument pos:start="263:72" pos:end="263:80"><expr pos:start="263:72" pos:end="263:80"><name pos:start="263:72" pos:end="263:80">mb_height</name></expr></argument>, <argument pos:start="263:83" pos:end="263:113"><expr pos:start="263:83" pos:end="263:113"><name pos:start="263:83" pos:end="263:91"><name pos:start="263:83" pos:end="263:88">slices</name><index pos:start="263:89" pos:end="263:91">[<expr pos:start="263:90" pos:end="263:90"><name pos:start="263:90" pos:end="263:90">i</name></expr>]</index></name><operator pos:start="263:92" pos:end="263:92">.</operator><name pos:start="263:93" pos:end="263:101">mby_start</name> <operator pos:start="263:103" pos:end="263:103">%</operator> <name pos:start="263:105" pos:end="263:113">mb_height</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="264:13" pos:end="265:115">else<block type="pseudo" pos:start="265:17" pos:end="265:115"><block_content pos:start="265:17" pos:end="265:115">
                <expr_stmt pos:start="265:17" pos:end="265:115"><expr pos:start="265:17" pos:end="265:114"><name pos:start="265:17" pos:end="265:27"><name pos:start="265:17" pos:end="265:17">s</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:27">end_mb_y</name></name> <operator pos:start="265:29" pos:end="265:29">=</operator> <ternary pos:start="265:31" pos:end="265:114"><condition pos:start="265:31" pos:end="265:52"><expr pos:start="265:31" pos:end="265:50"><operator pos:start="265:31" pos:end="265:31">(</operator><name pos:start="265:32" pos:end="265:32">i</name> <operator pos:start="265:34" pos:end="265:35">&lt;=</operator> <name pos:start="265:37" pos:end="265:45">n_slices1</name> <operator pos:start="265:47" pos:end="265:47">+</operator> <literal type="number" pos:start="265:49" pos:end="265:49">1</literal><operator pos:start="265:50" pos:end="265:50">)</operator></expr> ?</condition><then pos:start="265:54" pos:end="265:62"> <expr pos:start="265:54" pos:end="265:62"><name pos:start="265:54" pos:end="265:62">mb_height</name></expr> </then><else pos:start="265:64" pos:end="265:114">: <expr pos:start="265:66" pos:end="265:114"><call pos:start="265:66" pos:end="265:114"><name pos:start="265:66" pos:end="265:70">FFMIN</name><argument_list pos:start="265:71" pos:end="265:114">(<argument pos:start="265:72" pos:end="265:80"><expr pos:start="265:72" pos:end="265:80"><name pos:start="265:72" pos:end="265:80">mb_height</name></expr></argument>, <argument pos:start="265:83" pos:end="265:113"><expr pos:start="265:83" pos:end="265:113"><name pos:start="265:83" pos:end="265:91"><name pos:start="265:83" pos:end="265:88">slices</name><index pos:start="265:89" pos:end="265:91">[<expr pos:start="265:90" pos:end="265:90"><name pos:start="265:90" pos:end="265:90">i</name></expr>]</index></name><operator pos:start="265:92" pos:end="265:92">.</operator><name pos:start="265:93" pos:end="265:101">mby_start</name> <operator pos:start="265:103" pos:end="265:103">%</operator> <name pos:start="265:105" pos:end="265:113">mb_height</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <if_stmt pos:start="266:13" pos:end="320:14"><if pos:start="266:13" pos:end="320:14">if <condition pos:start="266:16" pos:end="266:45">(<expr pos:start="266:17" pos:end="266:44"><name pos:start="266:17" pos:end="266:27"><name pos:start="266:17" pos:end="266:17">s</name><operator pos:start="266:18" pos:end="266:19">-&gt;</operator><name pos:start="266:20" pos:end="266:27">end_mb_y</name></name> <operator pos:start="266:29" pos:end="266:30">&lt;=</operator> <name pos:start="266:32" pos:end="266:44"><name pos:start="266:32" pos:end="266:32">s</name><operator pos:start="266:33" pos:end="266:34">-&gt;</operator><name pos:start="266:35" pos:end="266:44">start_mb_y</name></name></expr>)</condition> <block pos:start="266:47" pos:end="320:14">{<block_content pos:start="267:17" pos:end="320:14">
                <expr_stmt pos:start="267:17" pos:end="267:105"><expr pos:start="267:17" pos:end="267:104"><call pos:start="267:17" pos:end="267:104"><name pos:start="267:17" pos:end="267:22">av_log</name><argument_list pos:start="267:23" pos:end="267:104">(<argument pos:start="267:24" pos:end="267:33"><expr pos:start="267:24" pos:end="267:33"><name pos:start="267:24" pos:end="267:33"><name pos:start="267:24" pos:end="267:24">v</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:27">s</name><operator pos:start="267:28" pos:end="267:28">.</operator><name pos:start="267:29" pos:end="267:33">avctx</name></name></expr></argument>, <argument pos:start="267:36" pos:end="267:47"><expr pos:start="267:36" pos:end="267:47"><name pos:start="267:36" pos:end="267:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="267:50" pos:end="267:75"><expr pos:start="267:50" pos:end="267:75"><literal type="string" pos:start="267:50" pos:end="267:75">"end mb y %d %d invalid\n"</literal></expr></argument>, <argument pos:start="267:78" pos:end="267:88"><expr pos:start="267:78" pos:end="267:88"><name pos:start="267:78" pos:end="267:88"><name pos:start="267:78" pos:end="267:78">s</name><operator pos:start="267:79" pos:end="267:80">-&gt;</operator><name pos:start="267:81" pos:end="267:88">end_mb_y</name></name></expr></argument>, <argument pos:start="267:91" pos:end="267:103"><expr pos:start="267:91" pos:end="267:103"><name pos:start="267:91" pos:end="267:103"><name pos:start="267:91" pos:end="267:91">s</name><operator pos:start="267:92" pos:end="267:93">-&gt;</operator><name pos:start="267:94" pos:end="267:103">start_mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <continue pos:start="268:17" pos:end="268:25">continue;</continue>
            <expr_stmt pos:start="269:13" pos:end="269:36"><expr pos:start="269:13" pos:end="269:35"><call pos:start="269:13" pos:end="269:35"><name pos:start="269:13" pos:end="269:32">ff_vc1_decode_blocks</name><argument_list pos:start="269:33" pos:end="269:35">(<argument pos:start="269:34" pos:end="269:34"><expr pos:start="269:34" pos:end="269:34"><name pos:start="269:34" pos:end="269:34">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="270:13" pos:end="271:37"><if pos:start="270:13" pos:end="271:37">if <condition pos:start="270:16" pos:end="270:30">(<expr pos:start="270:17" pos:end="270:29"><name pos:start="270:17" pos:end="270:17">i</name> <operator pos:start="270:19" pos:end="270:20">!=</operator> <name pos:start="270:22" pos:end="270:29">n_slices</name></expr>)</condition><block type="pseudo" pos:start="271:17" pos:end="271:37"><block_content pos:start="271:17" pos:end="271:37">
                <expr_stmt pos:start="271:17" pos:end="271:37"><expr pos:start="271:17" pos:end="271:36"><name pos:start="271:17" pos:end="271:21"><name pos:start="271:17" pos:end="271:17">s</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:21">gb</name></name> <operator pos:start="271:23" pos:end="271:23">=</operator> <name pos:start="271:25" pos:end="271:33"><name pos:start="271:25" pos:end="271:30">slices</name><index pos:start="271:31" pos:end="271:33">[<expr pos:start="271:32" pos:end="271:32"><name pos:start="271:32" pos:end="271:32">i</name></expr>]</index></name><operator pos:start="271:34" pos:end="271:34">.</operator><name pos:start="271:35" pos:end="271:36">gb</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="272:9" pos:end="320:14"><if pos:start="272:9" pos:end="320:14">if <condition pos:start="272:12" pos:end="272:26">(<expr pos:start="272:13" pos:end="272:25"><name pos:start="272:13" pos:end="272:25"><name pos:start="272:13" pos:end="272:13">v</name><operator pos:start="272:14" pos:end="272:15">-&gt;</operator><name pos:start="272:16" pos:end="272:25">field_mode</name></name></expr>)</condition> <block pos:start="272:28" pos:end="320:14">{<block_content pos:start="273:13" pos:end="320:14">
            <expr_stmt pos:start="273:13" pos:end="273:32"><expr pos:start="273:13" pos:end="273:31"><name pos:start="273:13" pos:end="273:27"><name pos:start="273:13" pos:end="273:13">v</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:27">second_field</name></name> <operator pos:start="273:29" pos:end="273:29">=</operator> <literal type="number" pos:start="273:31" pos:end="273:31">0</literal></expr>;</expr_stmt>
            <if_stmt pos:start="274:13" pos:end="320:14"><if pos:start="274:13" pos:end="320:14">if <condition pos:start="274:16" pos:end="274:50">(<expr pos:start="274:17" pos:end="274:49"><name pos:start="274:17" pos:end="274:28"><name pos:start="274:17" pos:end="274:17">s</name><operator pos:start="274:18" pos:end="274:19">-&gt;</operator><name pos:start="274:20" pos:end="274:28">pict_type</name></name> <operator pos:start="274:30" pos:end="274:31">==</operator> <name pos:start="274:33" pos:end="274:49">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="274:52" pos:end="320:14">{<block_content pos:start="275:17" pos:end="320:14">
                <expr_stmt pos:start="275:17" pos:end="276:108"><expr pos:start="275:17" pos:end="276:107"><call pos:start="275:17" pos:end="276:107"><name pos:start="275:17" pos:end="275:22">memcpy</name><argument_list pos:start="275:23" pos:end="276:107">(<argument pos:start="275:24" pos:end="275:35"><expr pos:start="275:24" pos:end="275:35"><name pos:start="275:24" pos:end="275:35"><name pos:start="275:24" pos:end="275:24">v</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:35">mv_f_base</name></name></expr></argument>, <argument pos:start="275:38" pos:end="275:54"><expr pos:start="275:38" pos:end="275:54"><name pos:start="275:38" pos:end="275:54"><name pos:start="275:38" pos:end="275:38">v</name><operator pos:start="275:39" pos:end="275:40">-&gt;</operator><name pos:start="275:41" pos:end="275:54">mv_f_next_base</name></name></expr></argument>,
                       <argument pos:start="276:24" pos:end="276:106"><expr pos:start="276:24" pos:end="276:106"><literal type="number" pos:start="276:24" pos:end="276:24">2</literal> <operator pos:start="276:26" pos:end="276:26">*</operator> <operator pos:start="276:28" pos:end="276:28">(</operator><name pos:start="276:29" pos:end="276:40"><name pos:start="276:29" pos:end="276:29">s</name><operator pos:start="276:30" pos:end="276:31">-&gt;</operator><name pos:start="276:32" pos:end="276:40">b8_stride</name></name> <operator pos:start="276:42" pos:end="276:42">*</operator> <operator pos:start="276:44" pos:end="276:44">(</operator><name pos:start="276:45" pos:end="276:56"><name pos:start="276:45" pos:end="276:45">s</name><operator pos:start="276:46" pos:end="276:47">-&gt;</operator><name pos:start="276:48" pos:end="276:56">mb_height</name></name> <operator pos:start="276:58" pos:end="276:58">*</operator> <literal type="number" pos:start="276:60" pos:end="276:62">2</literal> <operator pos:start="276:62" pos:end="276:62">+</operator> <literal type="number" pos:start="276:64" pos:end="276:64">1</literal><operator pos:start="276:65" pos:end="276:65">)</operator> <operator pos:start="276:67" pos:end="276:67">+</operator> <name pos:start="276:69" pos:end="276:80"><name pos:start="276:69" pos:end="276:69">s</name><operator pos:start="276:70" pos:end="276:71">-&gt;</operator><name pos:start="276:72" pos:end="276:80">mb_stride</name></name> <operator pos:start="276:82" pos:end="276:82">*</operator> <operator pos:start="276:84" pos:end="276:84">(</operator><name pos:start="276:85" pos:end="276:96"><name pos:start="276:85" pos:end="276:85">s</name><operator pos:start="276:86" pos:end="276:87">-&gt;</operator><name pos:start="276:88" pos:end="276:96">mb_height</name></name> <operator pos:start="276:98" pos:end="276:98">+</operator> <literal type="number" pos:start="276:100" pos:end="276:100">1</literal><operator pos:start="276:101" pos:end="276:101">)</operator> <operator pos:start="276:103" pos:end="276:103">*</operator> <literal type="number" pos:start="276:105" pos:end="276:105">2</literal><operator pos:start="276:106" pos:end="276:106">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="277:13" pos:end="277:51"><expr pos:start="277:13" pos:end="277:50"><name pos:start="277:13" pos:end="277:44"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:30">current_picture</name><operator pos:start="277:31" pos:end="277:31">.</operator><name pos:start="277:32" pos:end="277:32">f</name><operator pos:start="277:33" pos:end="277:33">.</operator><name pos:start="277:34" pos:end="277:41">linesize</name><index pos:start="277:42" pos:end="277:44">[<expr pos:start="277:43" pos:end="277:43"><literal type="number" pos:start="277:43" pos:end="277:43">0</literal></expr>]</index></name> <operator pos:start="277:46" pos:end="277:48">&gt;&gt;=</operator> <literal type="number" pos:start="277:50" pos:end="277:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="278:13" pos:end="278:51"><expr pos:start="278:13" pos:end="278:50"><name pos:start="278:13" pos:end="278:44"><name pos:start="278:13" pos:end="278:13">s</name><operator pos:start="278:14" pos:end="278:15">-&gt;</operator><name pos:start="278:16" pos:end="278:30">current_picture</name><operator pos:start="278:31" pos:end="278:31">.</operator><name pos:start="278:32" pos:end="278:32">f</name><operator pos:start="278:33" pos:end="278:33">.</operator><name pos:start="278:34" pos:end="278:41">linesize</name><index pos:start="278:42" pos:end="278:44">[<expr pos:start="278:43" pos:end="278:43"><literal type="number" pos:start="278:43" pos:end="278:43">1</literal></expr>]</index></name> <operator pos:start="278:46" pos:end="278:48">&gt;&gt;=</operator> <literal type="number" pos:start="278:50" pos:end="278:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="279:13" pos:end="279:51"><expr pos:start="279:13" pos:end="279:50"><name pos:start="279:13" pos:end="279:44"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:30">current_picture</name><operator pos:start="279:31" pos:end="279:31">.</operator><name pos:start="279:32" pos:end="279:32">f</name><operator pos:start="279:33" pos:end="279:33">.</operator><name pos:start="279:34" pos:end="279:41">linesize</name><index pos:start="279:42" pos:end="279:44">[<expr pos:start="279:43" pos:end="279:43"><literal type="number" pos:start="279:43" pos:end="279:43">2</literal></expr>]</index></name> <operator pos:start="279:46" pos:end="279:48">&gt;&gt;=</operator> <literal type="number" pos:start="279:50" pos:end="279:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="280:13" pos:end="280:51"><expr pos:start="280:13" pos:end="280:50"><name pos:start="280:13" pos:end="280:23"><name pos:start="280:13" pos:end="280:13">s</name><operator pos:start="280:14" pos:end="280:15">-&gt;</operator><name pos:start="280:16" pos:end="280:23">linesize</name></name>                      <operator pos:start="280:46" pos:end="280:48">&gt;&gt;=</operator> <literal type="number" pos:start="280:50" pos:end="280:50">1</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="281:13" pos:end="281:51"><expr pos:start="281:13" pos:end="281:50"><name pos:start="281:13" pos:end="281:25"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:25">uvlinesize</name></name>                    <operator pos:start="281:46" pos:end="281:48">&gt;&gt;=</operator> <literal type="number" pos:start="281:50" pos:end="281:50">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="282:9" pos:end="283:60"><expr pos:start="282:9" pos:end="283:59"><call pos:start="282:9" pos:end="283:59"><name pos:start="282:9" pos:end="282:15">av_dlog</name><argument_list pos:start="282:16" pos:end="283:59">(<argument pos:start="282:17" pos:end="282:24"><expr pos:start="282:17" pos:end="282:24"><name pos:start="282:17" pos:end="282:24"><name pos:start="282:17" pos:end="282:17">s</name><operator pos:start="282:18" pos:end="282:19">-&gt;</operator><name pos:start="282:20" pos:end="282:24">avctx</name></name></expr></argument>, <argument pos:start="282:27" pos:end="282:49"><expr pos:start="282:27" pos:end="282:49"><literal type="string" pos:start="282:27" pos:end="282:49">"Consumed %i/%i bits\n"</literal></expr></argument>,
                <argument pos:start="283:17" pos:end="283:38"><expr pos:start="283:17" pos:end="283:38"><call pos:start="283:17" pos:end="283:38"><name pos:start="283:17" pos:end="283:30">get_bits_count</name><argument_list pos:start="283:31" pos:end="283:38">(<argument pos:start="283:32" pos:end="283:37"><expr pos:start="283:32" pos:end="283:37"><operator pos:start="283:32" pos:end="283:32">&amp;</operator><name pos:start="283:33" pos:end="283:37"><name pos:start="283:33" pos:end="283:33">s</name><operator pos:start="283:34" pos:end="283:35">-&gt;</operator><name pos:start="283:36" pos:end="283:37">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="283:41" pos:end="283:58"><expr pos:start="283:41" pos:end="283:58"><name pos:start="283:41" pos:end="283:58"><name pos:start="283:41" pos:end="283:41">s</name><operator pos:start="283:42" pos:end="283:43">-&gt;</operator><name pos:start="283:44" pos:end="283:45">gb</name><operator pos:start="283:46" pos:end="283:46">.</operator><name pos:start="283:47" pos:end="283:58">size_in_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="line" pos:start="284:1" pos:end="284:46">//  if (get_bits_count(&amp;s-&gt;gb) &gt; buf_size * 8)</comment>
<comment type="line" pos:start="285:1" pos:end="285:18">//      return -1;</comment>
        <if_stmt pos:start="286:9" pos:end="288:31"><if pos:start="286:9" pos:end="288:31">if<condition pos:start="286:11" pos:end="286:66">(<expr pos:start="286:12" pos:end="286:65"><name pos:start="286:12" pos:end="286:28"><name pos:start="286:12" pos:end="286:12">s</name><operator pos:start="286:13" pos:end="286:14">-&gt;</operator><name pos:start="286:15" pos:end="286:28">error_occurred</name></name> <operator pos:start="286:30" pos:end="286:31">&amp;&amp;</operator> <name pos:start="286:33" pos:end="286:44"><name pos:start="286:33" pos:end="286:33">s</name><operator pos:start="286:34" pos:end="286:35">-&gt;</operator><name pos:start="286:36" pos:end="286:44">pict_type</name></name> <operator pos:start="286:46" pos:end="286:47">==</operator> <name pos:start="286:49" pos:end="286:65">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="288:31"><block_content pos:start="287:9" pos:end="288:31">
        <if_stmt pos:start="287:9" pos:end="288:31"><if pos:start="287:9" pos:end="288:31">if<condition pos:start="287:11" pos:end="287:26">(<expr pos:start="287:12" pos:end="287:25"><operator pos:start="287:12" pos:end="287:12">!</operator><name pos:start="287:13" pos:end="287:25"><name pos:start="287:13" pos:end="287:13">v</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:25">field_mode</name></name></expr>)</condition><block type="pseudo" pos:start="288:13" pos:end="288:31"><block_content pos:start="288:13" pos:end="288:31">
            <expr_stmt pos:start="288:13" pos:end="288:31"><expr pos:start="288:13" pos:end="288:30"><call pos:start="288:13" pos:end="288:30"><name pos:start="288:13" pos:end="288:27">ff_er_frame_end</name><argument_list pos:start="288:28" pos:end="288:30">(<argument pos:start="288:29" pos:end="288:29"><expr pos:start="288:29" pos:end="288:29"><name pos:start="288:29" pos:end="288:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="289:5" pos:end="289:24"><expr pos:start="289:5" pos:end="289:23"><call pos:start="289:5" pos:end="289:23"><name pos:start="289:5" pos:end="289:20">ff_MPV_frame_end</name><argument_list pos:start="289:21" pos:end="289:23">(<argument pos:start="289:22" pos:end="289:22"><expr pos:start="289:22" pos:end="289:22"><name pos:start="289:22" pos:end="289:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="290:5" pos:end="320:14"><if pos:start="290:5" pos:end="301:5">if <condition pos:start="290:8" pos:end="290:92">(<expr pos:start="290:9" pos:end="290:91"><name pos:start="290:9" pos:end="290:23"><name pos:start="290:9" pos:end="290:13">avctx</name><operator pos:start="290:14" pos:end="290:15">-&gt;</operator><name pos:start="290:16" pos:end="290:23">codec_id</name></name> <operator pos:start="290:25" pos:end="290:26">==</operator> <name pos:start="290:28" pos:end="290:48">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="290:50" pos:end="290:51">||</operator> <name pos:start="290:53" pos:end="290:67"><name pos:start="290:53" pos:end="290:57">avctx</name><operator pos:start="290:58" pos:end="290:59">-&gt;</operator><name pos:start="290:60" pos:end="290:67">codec_id</name></name> <operator pos:start="290:69" pos:end="290:70">==</operator> <name pos:start="290:72" pos:end="290:91">AV_CODEC_ID_VC1IMAGE</name></expr>)</condition> <block pos:start="290:94" pos:end="301:5">{<block_content pos:start="291:1" pos:end="300:37">
<label pos:start="291:1" pos:end="291:6"><name pos:start="291:1" pos:end="291:5">image</name>:</label>
        <expr_stmt pos:start="292:9" pos:end="292:62"><expr pos:start="292:9" pos:end="292:61"><name pos:start="292:9" pos:end="292:20"><name pos:start="292:9" pos:end="292:13">avctx</name><operator pos:start="292:14" pos:end="292:15">-&gt;</operator><name pos:start="292:16" pos:end="292:20">width</name></name>  <operator pos:start="292:23" pos:end="292:23">=</operator> <name pos:start="292:25" pos:end="292:42"><name pos:start="292:25" pos:end="292:29">avctx</name><operator pos:start="292:30" pos:end="292:31">-&gt;</operator><name pos:start="292:32" pos:end="292:42">coded_width</name></name>  <operator pos:start="292:45" pos:end="292:45">=</operator> <name pos:start="292:47" pos:end="292:61"><name pos:start="292:47" pos:end="292:47">v</name><operator pos:start="292:48" pos:end="292:49">-&gt;</operator><name pos:start="292:50" pos:end="292:61">output_width</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="293:9" pos:end="293:63"><expr pos:start="293:9" pos:end="293:62"><name pos:start="293:9" pos:end="293:21"><name pos:start="293:9" pos:end="293:13">avctx</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:21">height</name></name> <operator pos:start="293:23" pos:end="293:23">=</operator> <name pos:start="293:25" pos:end="293:43"><name pos:start="293:25" pos:end="293:29">avctx</name><operator pos:start="293:30" pos:end="293:31">-&gt;</operator><name pos:start="293:32" pos:end="293:43">coded_height</name></name> <operator pos:start="293:45" pos:end="293:45">=</operator> <name pos:start="293:47" pos:end="293:62"><name pos:start="293:47" pos:end="293:47">v</name><operator pos:start="293:48" pos:end="293:49">-&gt;</operator><name pos:start="293:50" pos:end="293:62">output_height</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="294:9" pos:end="297:0"><if pos:start="294:9" pos:end="297:0">if <condition pos:start="294:12" pos:end="294:50">(<expr pos:start="294:13" pos:end="294:49"><name pos:start="294:13" pos:end="294:29"><name pos:start="294:13" pos:end="294:17">avctx</name><operator pos:start="294:18" pos:end="294:19">-&gt;</operator><name pos:start="294:20" pos:end="294:29">skip_frame</name></name> <operator pos:start="294:31" pos:end="294:32">&gt;=</operator> <name pos:start="294:34" pos:end="294:49">AVDISCARD_NONREF</name></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="297:0"><block_content pos:start="295:13" pos:end="297:0">
            <goto pos:start="295:13" pos:end="297:0">goto <name pos:start="295:18" pos:end="295:20">end</name>;</goto></block_content></block></if></if_stmt>
<cpp:if pos:start="296:1" pos:end="296:55">#<cpp:directive pos:start="296:2" pos:end="296:3">if</cpp:directive> <expr pos:start="296:5" pos:end="296:55"><name pos:start="296:5" pos:end="296:28">CONFIG_WMV3IMAGE_DECODER</name> <operator pos:start="296:30" pos:end="296:31">||</operator> <name pos:start="296:33" pos:end="296:55">CONFIG_VC1IMAGE_DECODER</name></expr></cpp:if>
        <if_stmt pos:start="297:9" pos:end="299:44"><if pos:start="297:9" pos:end="299:44">if <condition pos:start="297:12" pos:end="299:0">(<expr pos:start="297:13" pos:end="297:41"><call pos:start="297:13" pos:end="297:41"><name pos:start="297:13" pos:end="297:30">vc1_decode_sprites</name><argument_list pos:start="297:31" pos:end="297:41">(<argument pos:start="297:32" pos:end="297:32"><expr pos:start="297:32" pos:end="297:32"><name pos:start="297:32" pos:end="297:32">v</name></expr></argument>, <argument pos:start="297:35" pos:end="297:40"><expr pos:start="297:35" pos:end="297:40"><operator pos:start="297:35" pos:end="297:35">&amp;</operator><name pos:start="297:36" pos:end="297:40"><name pos:start="297:36" pos:end="297:36">s</name><operator pos:start="297:37" pos:end="297:38">-&gt;</operator><name pos:start="297:39" pos:end="297:40">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="299:9" pos:end="299:44"><block_content pos:start="299:9" pos:end="299:44">
<cpp:endif pos:start="298:1" pos:end="298:6">#<cpp:directive pos:start="298:2" pos:end="298:6">endif</cpp:directive></cpp:endif>
        <expr_stmt pos:start="299:9" pos:end="299:44"><expr pos:start="299:9" pos:end="299:43"><operator pos:start="299:9" pos:end="299:9">*</operator><name pos:start="299:10" pos:end="299:13">pict</name>      <operator pos:start="299:20" pos:end="299:20">=</operator> <name pos:start="299:22" pos:end="299:43"><name pos:start="299:22" pos:end="299:22">v</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:43">sprite_output_frame</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="300:9" pos:end="300:37"><expr pos:start="300:9" pos:end="300:36"><operator pos:start="300:9" pos:end="300:9">*</operator><name pos:start="300:10" pos:end="300:18">data_size</name> <operator pos:start="300:20" pos:end="300:20">=</operator> <sizeof pos:start="300:22" pos:end="300:36">sizeof<argument_list pos:start="300:28" pos:end="300:36">(<argument pos:start="300:29" pos:end="300:35"><expr pos:start="300:29" pos:end="300:35"><name pos:start="300:29" pos:end="300:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="301:7" pos:end="320:14">else <block pos:start="301:12" pos:end="320:14">{<block_content pos:start="302:9" pos:end="320:14">
        <if_stmt pos:start="302:9" pos:end="320:14"><if pos:start="302:9" pos:end="304:9">if <condition pos:start="302:12" pos:end="302:62">(<expr pos:start="302:13" pos:end="302:61"><name pos:start="302:13" pos:end="302:24"><name pos:start="302:13" pos:end="302:13">s</name><operator pos:start="302:14" pos:end="302:15">-&gt;</operator><name pos:start="302:16" pos:end="302:24">pict_type</name></name> <operator pos:start="302:26" pos:end="302:27">==</operator> <name pos:start="302:29" pos:end="302:45">AV_PICTURE_TYPE_B</name> <operator pos:start="302:47" pos:end="302:48">||</operator> <name pos:start="302:50" pos:end="302:61"><name pos:start="302:50" pos:end="302:50">s</name><operator pos:start="302:51" pos:end="302:52">-&gt;</operator><name pos:start="302:53" pos:end="302:61">low_delay</name></name></expr>)</condition> <block pos:start="302:64" pos:end="304:9">{<block_content pos:start="303:13" pos:end="303:46">
            <expr_stmt pos:start="303:13" pos:end="303:46"><expr pos:start="303:13" pos:end="303:45"><operator pos:start="303:13" pos:end="303:13">*</operator><name pos:start="303:14" pos:end="303:17">pict</name> <operator pos:start="303:19" pos:end="303:19">=</operator> <name pos:start="303:21" pos:end="303:45"><name pos:start="303:21" pos:end="303:21">s</name><operator pos:start="303:22" pos:end="303:23">-&gt;</operator><name pos:start="303:24" pos:end="303:42">current_picture_ptr</name><operator pos:start="303:43" pos:end="303:44">-&gt;</operator><name pos:start="303:45" pos:end="303:45">f</name></name></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="304:11" pos:end="320:14">else if <condition pos:start="304:19" pos:end="304:47">(<expr pos:start="304:20" pos:end="304:46"><name pos:start="304:20" pos:end="304:38"><name pos:start="304:20" pos:end="304:20">s</name><operator pos:start="304:21" pos:end="304:22">-&gt;</operator><name pos:start="304:23" pos:end="304:38">last_picture_ptr</name></name> <operator pos:start="304:40" pos:end="304:41">!=</operator> <name pos:start="304:43" pos:end="304:46">NULL</name></expr>)</condition> <block pos:start="304:49" pos:end="320:14">{<block_content pos:start="305:13" pos:end="320:14">
            <expr_stmt pos:start="305:13" pos:end="305:43"><expr pos:start="305:13" pos:end="305:42"><operator pos:start="305:13" pos:end="305:13">*</operator><name pos:start="305:14" pos:end="305:17">pict</name> <operator pos:start="305:19" pos:end="305:19">=</operator> <name pos:start="305:21" pos:end="305:42"><name pos:start="305:21" pos:end="305:21">s</name><operator pos:start="305:22" pos:end="305:23">-&gt;</operator><name pos:start="305:24" pos:end="305:39">last_picture_ptr</name><operator pos:start="305:40" pos:end="305:41">-&gt;</operator><name pos:start="305:42" pos:end="305:42">f</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="306:9" pos:end="320:14"><if pos:start="306:9" pos:end="320:14">if <condition pos:start="306:12" pos:end="306:48">(<expr pos:start="306:13" pos:end="306:47"><name pos:start="306:13" pos:end="306:31"><name pos:start="306:13" pos:end="306:13">s</name><operator pos:start="306:14" pos:end="306:15">-&gt;</operator><name pos:start="306:16" pos:end="306:31">last_picture_ptr</name></name> <operator pos:start="306:33" pos:end="306:34">||</operator> <name pos:start="306:36" pos:end="306:47"><name pos:start="306:36" pos:end="306:36">s</name><operator pos:start="306:37" pos:end="306:38">-&gt;</operator><name pos:start="306:39" pos:end="306:47">low_delay</name></name></expr>)</condition> <block pos:start="306:50" pos:end="320:14">{<block_content pos:start="307:13" pos:end="320:14">
            <expr_stmt pos:start="307:13" pos:end="307:41"><expr pos:start="307:13" pos:end="307:40"><operator pos:start="307:13" pos:end="307:13">*</operator><name pos:start="307:14" pos:end="307:22">data_size</name> <operator pos:start="307:24" pos:end="307:24">=</operator> <sizeof pos:start="307:26" pos:end="307:40">sizeof<argument_list pos:start="307:32" pos:end="307:40">(<argument pos:start="307:33" pos:end="307:39"><expr pos:start="307:33" pos:end="307:39"><name pos:start="307:33" pos:end="307:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
            <expr_stmt pos:start="308:13" pos:end="308:41"><expr pos:start="308:13" pos:end="308:40"><call pos:start="308:13" pos:end="308:40"><name pos:start="308:13" pos:end="308:31">ff_print_debug_info</name><argument_list pos:start="308:32" pos:end="308:40">(<argument pos:start="308:33" pos:end="308:33"><expr pos:start="308:33" pos:end="308:33"><name pos:start="308:33" pos:end="308:33">s</name></expr></argument>, <argument pos:start="308:36" pos:end="308:39"><expr pos:start="308:36" pos:end="308:39"><name pos:start="308:36" pos:end="308:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="309:1" pos:end="309:4"><name pos:start="309:1" pos:end="309:3">end</name>:</label>
    <expr_stmt pos:start="310:5" pos:end="310:18"><expr pos:start="310:5" pos:end="310:17"><call pos:start="310:5" pos:end="310:17"><name pos:start="310:5" pos:end="310:11">av_free</name><argument_list pos:start="310:12" pos:end="310:17">(<argument pos:start="310:13" pos:end="310:16"><expr pos:start="310:13" pos:end="310:16"><name pos:start="310:13" pos:end="310:16">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="311:5" pos:end="312:31">for <control pos:start="311:9" pos:end="311:34">(<init pos:start="311:10" pos:end="311:15"><expr pos:start="311:10" pos:end="311:14"><name pos:start="311:10" pos:end="311:10">i</name> <operator pos:start="311:12" pos:end="311:12">=</operator> <literal type="number" pos:start="311:14" pos:end="311:14">0</literal></expr>;</init> <condition pos:start="311:17" pos:end="311:29"><expr pos:start="311:17" pos:end="311:28"><name pos:start="311:17" pos:end="311:17">i</name> <operator pos:start="311:19" pos:end="311:19">&lt;</operator> <name pos:start="311:21" pos:end="311:28">n_slices</name></expr>;</condition> <incr pos:start="311:31" pos:end="311:33"><expr pos:start="311:31" pos:end="311:33"><name pos:start="311:31" pos:end="311:31">i</name><operator pos:start="311:32" pos:end="311:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="312:9" pos:end="312:31"><block_content pos:start="312:9" pos:end="312:31">
        <expr_stmt pos:start="312:9" pos:end="312:31"><expr pos:start="312:9" pos:end="312:30"><call pos:start="312:9" pos:end="312:30"><name pos:start="312:9" pos:end="312:15">av_free</name><argument_list pos:start="312:16" pos:end="312:30">(<argument pos:start="312:17" pos:end="312:29"><expr pos:start="312:17" pos:end="312:29"><name pos:start="312:17" pos:end="312:25"><name pos:start="312:17" pos:end="312:22">slices</name><index pos:start="312:23" pos:end="312:25">[<expr pos:start="312:24" pos:end="312:24"><name pos:start="312:24" pos:end="312:24">i</name></expr>]</index></name><operator pos:start="312:26" pos:end="312:26">.</operator><name pos:start="312:27" pos:end="312:29">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="313:5" pos:end="313:20"><expr pos:start="313:5" pos:end="313:19"><call pos:start="313:5" pos:end="313:19"><name pos:start="313:5" pos:end="313:11">av_free</name><argument_list pos:start="313:12" pos:end="313:19">(<argument pos:start="313:13" pos:end="313:18"><expr pos:start="313:13" pos:end="313:18"><name pos:start="313:13" pos:end="313:18">slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="314:5" pos:end="314:20">return <expr pos:start="314:12" pos:end="314:19"><name pos:start="314:12" pos:end="314:19">buf_size</name></expr>;</return>
<label pos:start="315:1" pos:end="315:4"><name pos:start="315:1" pos:end="315:3">err</name>:</label>
    <expr_stmt pos:start="316:5" pos:end="316:18"><expr pos:start="316:5" pos:end="316:17"><call pos:start="316:5" pos:end="316:17"><name pos:start="316:5" pos:end="316:11">av_free</name><argument_list pos:start="316:12" pos:end="316:17">(<argument pos:start="316:13" pos:end="316:16"><expr pos:start="316:13" pos:end="316:16"><name pos:start="316:13" pos:end="316:16">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="317:5" pos:end="318:31">for <control pos:start="317:9" pos:end="317:34">(<init pos:start="317:10" pos:end="317:15"><expr pos:start="317:10" pos:end="317:14"><name pos:start="317:10" pos:end="317:10">i</name> <operator pos:start="317:12" pos:end="317:12">=</operator> <literal type="number" pos:start="317:14" pos:end="317:14">0</literal></expr>;</init> <condition pos:start="317:17" pos:end="317:29"><expr pos:start="317:17" pos:end="317:28"><name pos:start="317:17" pos:end="317:17">i</name> <operator pos:start="317:19" pos:end="317:19">&lt;</operator> <name pos:start="317:21" pos:end="317:28">n_slices</name></expr>;</condition> <incr pos:start="317:31" pos:end="317:33"><expr pos:start="317:31" pos:end="317:33"><name pos:start="317:31" pos:end="317:31">i</name><operator pos:start="317:32" pos:end="317:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="318:9" pos:end="318:31"><block_content pos:start="318:9" pos:end="318:31">
        <expr_stmt pos:start="318:9" pos:end="318:31"><expr pos:start="318:9" pos:end="318:30"><call pos:start="318:9" pos:end="318:30"><name pos:start="318:9" pos:end="318:15">av_free</name><argument_list pos:start="318:16" pos:end="318:30">(<argument pos:start="318:17" pos:end="318:29"><expr pos:start="318:17" pos:end="318:29"><name pos:start="318:17" pos:end="318:25"><name pos:start="318:17" pos:end="318:22">slices</name><index pos:start="318:23" pos:end="318:25">[<expr pos:start="318:24" pos:end="318:24"><name pos:start="318:24" pos:end="318:24">i</name></expr>]</index></name><operator pos:start="318:26" pos:end="318:26">.</operator><name pos:start="318:27" pos:end="318:29">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="319:5" pos:end="319:20"><expr pos:start="319:5" pos:end="319:19"><call pos:start="319:5" pos:end="319:19"><name pos:start="319:5" pos:end="319:11">av_free</name><argument_list pos:start="319:12" pos:end="319:19">(<argument pos:start="319:13" pos:end="319:18"><expr pos:start="319:13" pos:end="319:18"><name pos:start="319:13" pos:end="319:18">slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="320:5" pos:end="320:14">return <expr pos:start="320:12" pos:end="320:13"><operator pos:start="320:12" pos:end="320:12">-</operator><literal type="number" pos:start="320:13" pos:end="320:13">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></switch></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
