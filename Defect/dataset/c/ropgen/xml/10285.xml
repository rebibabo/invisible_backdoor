<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10285.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">bdrv_add_key</name><parameter_list pos:start="1:18" pos:end="1:70">(<parameter pos:start="1:19" pos:end="1:38"><decl pos:start="1:19" pos:end="1:38"><type pos:start="1:19" pos:end="1:38"><name pos:start="1:19" pos:end="1:34">BlockDriverState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">bs</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">key</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <if_stmt pos:start="5:5" pos:end="33:5"><if pos:start="5:5" pos:end="19:5">if <condition pos:start="5:8" pos:end="5:12">(<expr pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">key</name></expr>)</condition> <block pos:start="5:14" pos:end="19:5">{<block_content pos:start="7:9" pos:end="17:9">

        <if_stmt pos:start="7:9" pos:end="17:9"><if pos:start="7:9" pos:end="13:9">if <condition pos:start="7:12" pos:end="7:35">(<expr pos:start="7:13" pos:end="7:34"><operator pos:start="7:13" pos:end="7:13">!</operator><call pos:start="7:14" pos:end="7:34"><name pos:start="7:14" pos:end="7:30">bdrv_is_encrypted</name><argument_list pos:start="7:31" pos:end="7:34">(<argument pos:start="7:32" pos:end="7:33"><expr pos:start="7:32" pos:end="7:33"><name pos:start="7:32" pos:end="7:33">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:37" pos:end="13:9">{<block_content pos:start="9:13" pos:end="11:56">

            <expr_stmt pos:start="9:13" pos:end="11:56"><expr pos:start="9:13" pos:end="11:55"><call pos:start="9:13" pos:end="11:55"><name pos:start="9:13" pos:end="9:22">error_setg</name><argument_list pos:start="9:23" pos:end="11:55">(<argument pos:start="9:24" pos:end="9:27"><expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">errp</name></expr></argument>, <argument pos:start="9:30" pos:end="9:57"><expr pos:start="9:30" pos:end="9:57"><literal type="string" pos:start="9:30" pos:end="9:57">"Node '%s' is not encrypted"</literal></expr></argument>,

                      <argument pos:start="11:23" pos:end="11:54"><expr pos:start="11:23" pos:end="11:54"><call pos:start="11:23" pos:end="11:54"><name pos:start="11:23" pos:end="11:50">bdrv_get_device_or_node_name</name><argument_list pos:start="11:51" pos:end="11:54">(<argument pos:start="11:52" pos:end="11:53"><expr pos:start="11:52" pos:end="11:53"><name pos:start="11:52" pos:end="11:53">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="13:11" pos:end="17:9">else if <condition pos:start="13:19" pos:end="13:45">(<expr pos:start="13:20" pos:end="13:44"><call pos:start="13:20" pos:end="13:40"><name pos:start="13:20" pos:end="13:31">bdrv_set_key</name><argument_list pos:start="13:32" pos:end="13:40">(<argument pos:start="13:33" pos:end="13:34"><expr pos:start="13:33" pos:end="13:34"><name pos:start="13:33" pos:end="13:34">bs</name></expr></argument>, <argument pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:39">key</name></expr></argument>)</argument_list></call> <operator pos:start="13:42" pos:end="13:42">&lt;</operator> <literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr>)</condition> <block pos:start="13:47" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:51">

            <expr_stmt pos:start="15:13" pos:end="15:51"><expr pos:start="15:13" pos:end="15:50"><call pos:start="15:13" pos:end="15:50"><name pos:start="15:13" pos:end="15:21">error_set</name><argument_list pos:start="15:22" pos:end="15:50">(<argument pos:start="15:23" pos:end="15:26"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">errp</name></expr></argument>, <argument pos:start="15:29" pos:end="15:49"><expr pos:start="15:29" pos:end="15:49"><name pos:start="15:29" pos:end="15:49">QERR_INVALID_PASSWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="33:5">else <block pos:start="19:12" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:9">

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><call pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:29">bdrv_key_required</name><argument_list pos:start="21:30" pos:end="21:33">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:36" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:55">

            <expr_stmt pos:start="23:13" pos:end="29:55"><expr pos:start="23:13" pos:end="29:54"><call pos:start="23:13" pos:end="29:54"><name pos:start="23:13" pos:end="23:21">error_set</name><argument_list pos:start="23:22" pos:end="29:54">(<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">errp</name></expr></argument>, <argument pos:start="23:29" pos:end="23:56"><expr pos:start="23:29" pos:end="23:56"><name pos:start="23:29" pos:end="23:56">ERROR_CLASS_DEVICE_ENCRYPTED</name></expr></argument>,

                      <argument pos:start="25:23" pos:end="25:46"><expr pos:start="25:23" pos:end="25:46"><literal type="string" pos:start="25:23" pos:end="25:46">"'%s' (%s) is encrypted"</literal></expr></argument>,

                      <argument pos:start="27:23" pos:end="27:54"><expr pos:start="27:23" pos:end="27:54"><call pos:start="27:23" pos:end="27:54"><name pos:start="27:23" pos:end="27:50">bdrv_get_device_or_node_name</name><argument_list pos:start="27:51" pos:end="27:54">(<argument pos:start="27:52" pos:end="27:53"><expr pos:start="27:52" pos:end="27:53"><name pos:start="27:52" pos:end="27:53">bs</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="29:23" pos:end="29:53"><expr pos:start="29:23" pos:end="29:53"><call pos:start="29:23" pos:end="29:53"><name pos:start="29:23" pos:end="29:49">bdrv_get_encrypted_filename</name><argument_list pos:start="29:50" pos:end="29:53">(<argument pos:start="29:51" pos:end="29:52"><expr pos:start="29:51" pos:end="29:52"><name pos:start="29:51" pos:end="29:52">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
