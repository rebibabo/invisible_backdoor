<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16860.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_parse_packing_format</name><parameter_list pos:start="1:28" pos:end="1:69">(<parameter pos:start="1:29" pos:end="1:36"><decl pos:start="1:29" pos:end="1:36"><type pos:start="1:29" pos:end="1:36"><name pos:start="1:29" pos:end="1:31">int</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">ret</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">arg</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:68">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14">tail</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">planar</name> <init pos:start="7:16" pos:end="7:39">= <expr pos:start="7:18" pos:end="7:39"><call pos:start="7:18" pos:end="7:39"><name pos:start="7:18" pos:end="7:23">strtol</name><argument_list pos:start="7:24" pos:end="7:39">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">arg</name></expr></argument>, <argument pos:start="7:30" pos:end="7:34"><expr pos:start="7:30" pos:end="7:34"><operator pos:start="7:30" pos:end="7:30">&amp;</operator><name pos:start="7:31" pos:end="7:34">tail</name></expr></argument>, <argument pos:start="7:37" pos:end="7:38"><expr pos:start="7:37" pos:end="7:38"><literal type="number" pos:start="7:37" pos:end="7:38">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:14">(<expr pos:start="9:9" pos:end="9:13"><operator pos:start="9:9" pos:end="9:9">*</operator><name pos:start="9:10" pos:end="9:13">tail</name></expr>)</condition> <block pos:start="9:16" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:46">

        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:14">planar</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <operator pos:start="11:18" pos:end="11:18">(</operator><call pos:start="11:19" pos:end="11:39"><name pos:start="11:19" pos:end="11:24">strcmp</name><argument_list pos:start="11:25" pos:end="11:39">(<argument pos:start="11:26" pos:end="11:28"><expr pos:start="11:26" pos:end="11:28"><name pos:start="11:26" pos:end="11:28">arg</name></expr></argument>, <argument pos:start="11:31" pos:end="11:38"><expr pos:start="11:31" pos:end="11:38"><literal type="string" pos:start="11:31" pos:end="11:38">"packed"</literal></expr></argument>)</argument_list></call> <operator pos:start="11:41" pos:end="11:42">!=</operator> <literal type="number" pos:start="11:44" pos:end="11:44">0</literal><operator pos:start="11:45" pos:end="11:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="13:7" pos:end="19:5">else if <condition pos:start="13:15" pos:end="13:42">(<expr pos:start="13:16" pos:end="13:41"><name pos:start="13:16" pos:end="13:21">planar</name> <operator pos:start="13:23" pos:end="13:24">!=</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal> <operator pos:start="13:28" pos:end="13:29">&amp;&amp;</operator> <name pos:start="13:31" pos:end="13:36">planar</name> <operator pos:start="13:38" pos:end="13:39">!=</operator> <literal type="number" pos:start="13:41" pos:end="13:41">1</literal></expr>)</condition> <block pos:start="13:44" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:31">

        <expr_stmt pos:start="15:9" pos:end="15:76"><expr pos:start="15:9" pos:end="15:75"><call pos:start="15:9" pos:end="15:75"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:75">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">log_ctx</name></expr></argument>, <argument pos:start="15:25" pos:end="15:36"><expr pos:start="15:25" pos:end="15:36"><name pos:start="15:25" pos:end="15:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:39" pos:end="15:69"><expr pos:start="15:39" pos:end="15:69"><literal type="string" pos:start="15:39" pos:end="15:69">"Invalid packing format '%s'\n"</literal></expr></argument>, <argument pos:start="15:72" pos:end="15:74"><expr pos:start="15:72" pos:end="15:74"><name pos:start="15:72" pos:end="15:74">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:8">ret</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:17">planar</name></expr>;</expr_stmt>

    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
