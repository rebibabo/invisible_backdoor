<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21927.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_hextile</name><parameter_list pos:start="1:26" pos:end="3:51">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">VmncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:49">uint8_t</name><modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:54">dst</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><name pos:start="1:57" pos:end="1:70">GetByteContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:74">gb</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:31"><decl pos:start="3:27" pos:end="3:31"><type pos:start="3:27" pos:end="3:31"><name pos:start="3:27" pos:end="3:29">int</name></type> <name pos:start="3:31" pos:end="3:31">w</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:38"><decl pos:start="3:34" pos:end="3:38"><type pos:start="3:34" pos:end="3:38"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:38">h</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:50"><decl pos:start="3:41" pos:end="3:50"><type pos:start="3:41" pos:end="3:50"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:50">stride</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="115:1">{<block_content pos:start="7:5" pos:end="113:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">bg</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>, <decl pos:start="9:17" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:18">fg</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>, <decl pos:start="9:25" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:29">rects</name></decl>, <decl pos:start="9:32" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:36">color</name></decl>, <decl pos:start="9:39" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:39" pos:end="9:43">flags</name></decl>, <decl pos:start="9:46" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:46" pos:end="9:47">xy</name></decl>, <decl pos:start="9:50" pos:end="9:51"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:50" pos:end="9:51">wh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:17">bpp</name> <init pos:start="11:19" pos:end="11:27">= <expr pos:start="11:21" pos:end="11:27"><name pos:start="11:21" pos:end="11:27"><name pos:start="11:21" pos:end="11:21">c</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:27">bpp2</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">dst2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">bw</name> <init pos:start="15:12" pos:end="15:15">= <expr pos:start="15:14" pos:end="15:15"><literal type="number" pos:start="15:14" pos:end="15:15">16</literal></expr></init></decl>, <decl pos:start="15:18" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:19">bh</name> <init pos:start="15:21" pos:end="15:24">= <expr pos:start="15:23" pos:end="15:24"><literal type="number" pos:start="15:23" pos:end="15:24">16</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="111:5">for <control pos:start="19:9" pos:end="19:31">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">j</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:21"><name pos:start="19:17" pos:end="19:17">j</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:21">h</name></expr>;</condition> <incr pos:start="19:24" pos:end="19:30"><expr pos:start="19:24" pos:end="19:30"><name pos:start="19:24" pos:end="19:24">j</name> <operator pos:start="19:26" pos:end="19:27">+=</operator> <literal type="number" pos:start="19:29" pos:end="19:30">16</literal></expr></incr>)</control> <block pos:start="19:33" pos:end="111:5">{<block_content pos:start="21:9" pos:end="109:27">

        <expr_stmt pos:start="21:9" pos:end="21:19"><expr pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:12">dst2</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:18">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:10">bw</name>   <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:17">16</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:23"><if pos:start="25:9" pos:end="27:23">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:13">j</name> <operator pos:start="25:15" pos:end="25:15">+</operator> <literal type="number" pos:start="25:17" pos:end="25:18">16</literal> <operator pos:start="25:20" pos:end="25:20">&gt;</operator> <name pos:start="25:22" pos:end="25:22">h</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">

            <expr_stmt pos:start="27:13" pos:end="27:23"><expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:14">bh</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:18">h</name> <operator pos:start="27:20" pos:end="27:20">-</operator> <name pos:start="27:22" pos:end="27:22">j</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="29:9" pos:end="107:9">for <control pos:start="29:13" pos:end="29:53">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:25">w</name></expr>;</condition> <incr pos:start="29:28" pos:end="29:52"><expr pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:28">i</name> <operator pos:start="29:30" pos:end="29:31">+=</operator> <literal type="number" pos:start="29:33" pos:end="29:34">16</literal></expr><operator pos:start="29:35" pos:end="29:35">,</operator> <expr pos:start="29:37" pos:end="29:52"><name pos:start="29:37" pos:end="29:40">dst2</name> <operator pos:start="29:42" pos:end="29:43">+=</operator> <literal type="number" pos:start="29:45" pos:end="29:46">16</literal> <operator pos:start="29:48" pos:end="29:48">*</operator> <name pos:start="29:50" pos:end="29:52">bpp</name></expr></incr>)</control> <block pos:start="29:55" pos:end="107:9">{<block_content pos:start="31:13" pos:end="105:13">

            <if_stmt pos:start="31:13" pos:end="37:13"><if pos:start="31:13" pos:end="37:13">if <condition pos:start="31:16" pos:end="31:52">(<expr pos:start="31:17" pos:end="31:51"><call pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:42">bytestream2_get_bytes_left</name><argument_list pos:start="31:43" pos:end="31:46">(<argument pos:start="31:44" pos:end="31:45"><expr pos:start="31:44" pos:end="31:45"><name pos:start="31:44" pos:end="31:45">gb</name></expr></argument>)</argument_list></call> <operator pos:start="31:48" pos:end="31:49">&lt;=</operator> <literal type="number" pos:start="31:51" pos:end="31:51">0</literal></expr>)</condition> <block pos:start="31:54" pos:end="37:13">{<block_content pos:start="33:17" pos:end="35:43">

                <expr_stmt pos:start="33:17" pos:end="33:75"><expr pos:start="33:17" pos:end="33:74"><call pos:start="33:17" pos:end="33:74"><name pos:start="33:17" pos:end="33:22">av_log</name><argument_list pos:start="33:23" pos:end="33:74">(<argument pos:start="33:24" pos:end="33:31"><expr pos:start="33:24" pos:end="33:31"><name pos:start="33:24" pos:end="33:31"><name pos:start="33:24" pos:end="33:24">c</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:31">avctx</name></name></expr></argument>, <argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><name pos:start="33:34" pos:end="33:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:48" pos:end="33:73"><expr pos:start="33:48" pos:end="33:73"><literal type="string" pos:start="33:48" pos:end="33:73">"Premature end of data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="35:17" pos:end="35:43">return <expr pos:start="35:24" pos:end="35:42"><name pos:start="35:24" pos:end="35:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="41:27"><if pos:start="39:13" pos:end="41:27">if <condition pos:start="39:16" pos:end="39:27">(<expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">+</operator> <literal type="number" pos:start="39:21" pos:end="39:22">16</literal> <operator pos:start="39:24" pos:end="39:24">&gt;</operator> <name pos:start="39:26" pos:end="39:26">w</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:27"><block_content pos:start="41:17" pos:end="41:27">

                <expr_stmt pos:start="41:17" pos:end="41:27"><expr pos:start="41:17" pos:end="41:26"><name pos:start="41:17" pos:end="41:18">bw</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:22">w</name> <operator pos:start="41:24" pos:end="41:24">-</operator> <name pos:start="41:26" pos:end="41:26">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:17">flags</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:44"><name pos:start="43:21" pos:end="43:40">bytestream2_get_byte</name><argument_list pos:start="43:41" pos:end="43:44">(<argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><name pos:start="43:42" pos:end="43:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="105:13"><if pos:start="45:13" pos:end="57:13">if <condition pos:start="45:16" pos:end="45:31">(<expr pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:21">flags</name> <operator pos:start="45:23" pos:end="45:23">&amp;</operator> <name pos:start="45:25" pos:end="45:30">HT_RAW</name></expr>)</condition> <block pos:start="45:33" pos:end="57:13">{<block_content pos:start="47:17" pos:end="55:71">

                <if_stmt pos:start="47:17" pos:end="53:17"><if pos:start="47:17" pos:end="53:17">if <condition pos:start="47:20" pos:end="47:67">(<expr pos:start="47:21" pos:end="47:66"><call pos:start="47:21" pos:end="47:50"><name pos:start="47:21" pos:end="47:46">bytestream2_get_bytes_left</name><argument_list pos:start="47:47" pos:end="47:50">(<argument pos:start="47:48" pos:end="47:49"><expr pos:start="47:48" pos:end="47:49"><name pos:start="47:48" pos:end="47:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="47:52" pos:end="47:52">&lt;</operator> <name pos:start="47:54" pos:end="47:55">bw</name> <operator pos:start="47:57" pos:end="47:57">*</operator> <name pos:start="47:59" pos:end="47:60">bh</name> <operator pos:start="47:62" pos:end="47:62">*</operator> <name pos:start="47:64" pos:end="47:66">bpp</name></expr>)</condition> <block pos:start="47:69" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:47">

                    <expr_stmt pos:start="49:21" pos:end="49:79"><expr pos:start="49:21" pos:end="49:78"><call pos:start="49:21" pos:end="49:78"><name pos:start="49:21" pos:end="49:26">av_log</name><argument_list pos:start="49:27" pos:end="49:78">(<argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:35"><name pos:start="49:28" pos:end="49:28">c</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:35">avctx</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:49"><expr pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:52" pos:end="49:77"><expr pos:start="49:52" pos:end="49:77"><literal type="string" pos:start="49:52" pos:end="49:77">"Premature end of data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="51:21" pos:end="51:47">return <expr pos:start="51:28" pos:end="51:46"><name pos:start="51:28" pos:end="51:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:71"><expr pos:start="55:17" pos:end="55:70"><call pos:start="55:17" pos:end="55:70"><name pos:start="55:17" pos:end="55:25">paint_raw</name><argument_list pos:start="55:26" pos:end="55:70">(<argument pos:start="55:27" pos:end="55:30"><expr pos:start="55:27" pos:end="55:30"><name pos:start="55:27" pos:end="55:30">dst2</name></expr></argument>, <argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">bw</name></expr></argument>, <argument pos:start="55:37" pos:end="55:38"><expr pos:start="55:37" pos:end="55:38"><name pos:start="55:37" pos:end="55:38">bh</name></expr></argument>, <argument pos:start="55:41" pos:end="55:42"><expr pos:start="55:41" pos:end="55:42"><name pos:start="55:41" pos:end="55:42">gb</name></expr></argument>, <argument pos:start="55:45" pos:end="55:47"><expr pos:start="55:45" pos:end="55:47"><name pos:start="55:45" pos:end="55:47">bpp</name></expr></argument>, <argument pos:start="55:50" pos:end="55:61"><expr pos:start="55:50" pos:end="55:61"><name pos:start="55:50" pos:end="55:61"><name pos:start="55:50" pos:end="55:50">c</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:61">bigendian</name></name></expr></argument>, <argument pos:start="55:64" pos:end="55:69"><expr pos:start="55:64" pos:end="55:69"><name pos:start="55:64" pos:end="55:69">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="105:13">else <block pos:start="57:20" pos:end="105:13">{<block_content pos:start="59:17" pos:end="103:17">

                <if_stmt pos:start="59:17" pos:end="61:63"><if pos:start="59:17" pos:end="61:63">if <condition pos:start="59:20" pos:end="59:35">(<expr pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:25">flags</name> <operator pos:start="59:27" pos:end="59:27">&amp;</operator> <name pos:start="59:29" pos:end="59:34">HT_BKG</name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:63"><block_content pos:start="61:21" pos:end="61:63">

                    <expr_stmt pos:start="61:21" pos:end="61:63"><expr pos:start="61:21" pos:end="61:62"><name pos:start="61:21" pos:end="61:22">bg</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:62"><name pos:start="61:26" pos:end="61:39">vmnc_get_pixel</name><argument_list pos:start="61:40" pos:end="61:62">(<argument pos:start="61:41" pos:end="61:42"><expr pos:start="61:41" pos:end="61:42"><name pos:start="61:41" pos:end="61:42">gb</name></expr></argument>, <argument pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:47">bpp</name></expr></argument>, <argument pos:start="61:50" pos:end="61:61"><expr pos:start="61:50" pos:end="61:61"><name pos:start="61:50" pos:end="61:61"><name pos:start="61:50" pos:end="61:50">c</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:61">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="63:17" pos:end="65:63"><if pos:start="63:17" pos:end="65:63">if <condition pos:start="63:20" pos:end="63:34">(<expr pos:start="63:21" pos:end="63:33"><name pos:start="63:21" pos:end="63:25">flags</name> <operator pos:start="63:27" pos:end="63:27">&amp;</operator> <name pos:start="63:29" pos:end="63:33">HT_FG</name></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:63"><block_content pos:start="65:21" pos:end="65:63">

                    <expr_stmt pos:start="65:21" pos:end="65:63"><expr pos:start="65:21" pos:end="65:62"><name pos:start="65:21" pos:end="65:22">fg</name> <operator pos:start="65:24" pos:end="65:24">=</operator> <call pos:start="65:26" pos:end="65:62"><name pos:start="65:26" pos:end="65:39">vmnc_get_pixel</name><argument_list pos:start="65:40" pos:end="65:62">(<argument pos:start="65:41" pos:end="65:42"><expr pos:start="65:41" pos:end="65:42"><name pos:start="65:41" pos:end="65:42">gb</name></expr></argument>, <argument pos:start="65:45" pos:end="65:47"><expr pos:start="65:45" pos:end="65:47"><name pos:start="65:45" pos:end="65:47">bpp</name></expr></argument>, <argument pos:start="65:50" pos:end="65:61"><expr pos:start="65:50" pos:end="65:61"><name pos:start="65:50" pos:end="65:61"><name pos:start="65:50" pos:end="65:50">c</name><operator pos:start="65:51" pos:end="65:52">-&gt;</operator><name pos:start="65:53" pos:end="65:61">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:26"><expr pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:21">rects</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="69:17" pos:end="71:53"><if pos:start="69:17" pos:end="71:53">if <condition pos:start="69:20" pos:end="69:35">(<expr pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:25">flags</name> <operator pos:start="69:27" pos:end="69:27">&amp;</operator> <name pos:start="69:29" pos:end="69:34">HT_SUB</name></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:53"><block_content pos:start="71:21" pos:end="71:53">

                    <expr_stmt pos:start="71:21" pos:end="71:53"><expr pos:start="71:21" pos:end="71:52"><name pos:start="71:21" pos:end="71:25">rects</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <call pos:start="71:29" pos:end="71:52"><name pos:start="71:29" pos:end="71:48">bytestream2_get_byte</name><argument_list pos:start="71:49" pos:end="71:52">(<argument pos:start="71:50" pos:end="71:51"><expr pos:start="71:50" pos:end="71:51"><name pos:start="71:50" pos:end="71:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:43"><expr pos:start="73:17" pos:end="73:42"><name pos:start="73:17" pos:end="73:21">color</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">!</operator><operator pos:start="73:26" pos:end="73:26">!</operator><operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:32">flags</name> <operator pos:start="73:34" pos:end="73:34">&amp;</operator> <name pos:start="73:36" pos:end="73:41">HT_CLR</name><operator pos:start="73:42" pos:end="73:42">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="77:17" pos:end="77:64"><expr pos:start="77:17" pos:end="77:63"><call pos:start="77:17" pos:end="77:63"><name pos:start="77:17" pos:end="77:26">paint_rect</name><argument_list pos:start="77:27" pos:end="77:63">(<argument pos:start="77:28" pos:end="77:31"><expr pos:start="77:28" pos:end="77:31"><name pos:start="77:28" pos:end="77:31">dst2</name></expr></argument>, <argument pos:start="77:34" pos:end="77:34"><expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr></argument>, <argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><literal type="number" pos:start="77:37" pos:end="77:37">0</literal></expr></argument>, <argument pos:start="77:40" pos:end="77:41"><expr pos:start="77:40" pos:end="77:41"><name pos:start="77:40" pos:end="77:41">bw</name></expr></argument>, <argument pos:start="77:44" pos:end="77:45"><expr pos:start="77:44" pos:end="77:45"><name pos:start="77:44" pos:end="77:45">bh</name></expr></argument>, <argument pos:start="77:48" pos:end="77:49"><expr pos:start="77:48" pos:end="77:49"><name pos:start="77:48" pos:end="77:49">bg</name></expr></argument>, <argument pos:start="77:52" pos:end="77:54"><expr pos:start="77:52" pos:end="77:54"><name pos:start="77:52" pos:end="77:54">bpp</name></expr></argument>, <argument pos:start="77:57" pos:end="77:62"><expr pos:start="77:57" pos:end="77:62"><name pos:start="77:57" pos:end="77:62">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="81:17" pos:end="87:17"><if pos:start="81:17" pos:end="87:17">if <condition pos:start="81:20" pos:end="81:79">(<expr pos:start="81:21" pos:end="81:78"><call pos:start="81:21" pos:end="81:50"><name pos:start="81:21" pos:end="81:46">bytestream2_get_bytes_left</name><argument_list pos:start="81:47" pos:end="81:50">(<argument pos:start="81:48" pos:end="81:49"><expr pos:start="81:48" pos:end="81:49"><name pos:start="81:48" pos:end="81:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="81:52" pos:end="81:52">&lt;</operator> <name pos:start="81:54" pos:end="81:58">rects</name> <operator pos:start="81:60" pos:end="81:60">*</operator> <operator pos:start="81:62" pos:end="81:62">(</operator><name pos:start="81:63" pos:end="81:67">color</name> <operator pos:start="81:69" pos:end="81:69">*</operator> <name pos:start="81:71" pos:end="81:73">bpp</name> <operator pos:start="81:75" pos:end="81:75">+</operator> <literal type="number" pos:start="81:77" pos:end="81:77">2</literal><operator pos:start="81:78" pos:end="81:78">)</operator></expr>)</condition> <block pos:start="81:81" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:47">

                    <expr_stmt pos:start="83:21" pos:end="83:79"><expr pos:start="83:21" pos:end="83:78"><call pos:start="83:21" pos:end="83:78"><name pos:start="83:21" pos:end="83:26">av_log</name><argument_list pos:start="83:27" pos:end="83:78">(<argument pos:start="83:28" pos:end="83:35"><expr pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:35"><name pos:start="83:28" pos:end="83:28">c</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:35">avctx</name></name></expr></argument>, <argument pos:start="83:38" pos:end="83:49"><expr pos:start="83:38" pos:end="83:49"><name pos:start="83:38" pos:end="83:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:52" pos:end="83:77"><expr pos:start="83:52" pos:end="83:77"><literal type="string" pos:start="83:52" pos:end="83:77">"Premature end of data!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="85:21" pos:end="85:47">return <expr pos:start="85:28" pos:end="85:46"><name pos:start="85:28" pos:end="85:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <for pos:start="89:17" pos:end="103:17">for <control pos:start="89:21" pos:end="89:43">(<init pos:start="89:22" pos:end="89:27"><expr pos:start="89:22" pos:end="89:26"><name pos:start="89:22" pos:end="89:22">k</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>;</init> <condition pos:start="89:29" pos:end="89:38"><expr pos:start="89:29" pos:end="89:37"><name pos:start="89:29" pos:end="89:29">k</name> <operator pos:start="89:31" pos:end="89:31">&lt;</operator> <name pos:start="89:33" pos:end="89:37">rects</name></expr>;</condition> <incr pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:40">k</name><operator pos:start="89:41" pos:end="89:42">++</operator></expr></incr>)</control> <block pos:start="89:45" pos:end="103:17">{<block_content pos:start="91:21" pos:end="101:73">

                    <if_stmt pos:start="91:21" pos:end="93:67"><if pos:start="91:21" pos:end="93:67">if <condition pos:start="91:24" pos:end="91:30">(<expr pos:start="91:25" pos:end="91:29"><name pos:start="91:25" pos:end="91:29">color</name></expr>)</condition><block type="pseudo" pos:start="93:25" pos:end="93:67"><block_content pos:start="93:25" pos:end="93:67">

                        <expr_stmt pos:start="93:25" pos:end="93:67"><expr pos:start="93:25" pos:end="93:66"><name pos:start="93:25" pos:end="93:26">fg</name> <operator pos:start="93:28" pos:end="93:28">=</operator> <call pos:start="93:30" pos:end="93:66"><name pos:start="93:30" pos:end="93:43">vmnc_get_pixel</name><argument_list pos:start="93:44" pos:end="93:66">(<argument pos:start="93:45" pos:end="93:46"><expr pos:start="93:45" pos:end="93:46"><name pos:start="93:45" pos:end="93:46">gb</name></expr></argument>, <argument pos:start="93:49" pos:end="93:51"><expr pos:start="93:49" pos:end="93:51"><name pos:start="93:49" pos:end="93:51">bpp</name></expr></argument>, <argument pos:start="93:54" pos:end="93:65"><expr pos:start="93:54" pos:end="93:65"><name pos:start="93:54" pos:end="93:65"><name pos:start="93:54" pos:end="93:54">c</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:65">bigendian</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:50"><expr pos:start="95:21" pos:end="95:49"><name pos:start="95:21" pos:end="95:22">xy</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <call pos:start="95:26" pos:end="95:49"><name pos:start="95:26" pos:end="95:45">bytestream2_get_byte</name><argument_list pos:start="95:46" pos:end="95:49">(<argument pos:start="95:47" pos:end="95:48"><expr pos:start="95:47" pos:end="95:48"><name pos:start="95:47" pos:end="95:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:50"><expr pos:start="97:21" pos:end="97:49"><name pos:start="97:21" pos:end="97:22">wh</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <call pos:start="97:26" pos:end="97:49"><name pos:start="97:26" pos:end="97:45">bytestream2_get_byte</name><argument_list pos:start="97:46" pos:end="97:49">(<argument pos:start="97:47" pos:end="97:48"><expr pos:start="97:47" pos:end="97:48"><name pos:start="97:47" pos:end="97:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="101:73"><expr pos:start="99:21" pos:end="101:72"><call pos:start="99:21" pos:end="101:72"><name pos:start="99:21" pos:end="99:30">paint_rect</name><argument_list pos:start="99:31" pos:end="101:72">(<argument pos:start="99:32" pos:end="99:35"><expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:35">dst2</name></expr></argument>, <argument pos:start="99:38" pos:end="99:44"><expr pos:start="99:38" pos:end="99:44"><name pos:start="99:38" pos:end="99:39">xy</name> <operator pos:start="99:41" pos:end="99:42">&gt;&gt;</operator> <literal type="number" pos:start="99:44" pos:end="99:44">4</literal></expr></argument>, <argument pos:start="99:47" pos:end="99:54"><expr pos:start="99:47" pos:end="99:54"><name pos:start="99:47" pos:end="99:48">xy</name> <operator pos:start="99:50" pos:end="99:50">&amp;</operator> <literal type="number" pos:start="99:52" pos:end="99:54">0xF</literal></expr></argument>,

                               <argument pos:start="101:32" pos:end="101:40"><expr pos:start="101:32" pos:end="101:40"><operator pos:start="101:32" pos:end="101:32">(</operator><name pos:start="101:33" pos:end="101:34">wh</name><operator pos:start="101:35" pos:end="101:36">&gt;&gt;</operator><literal type="number" pos:start="101:37" pos:end="101:37">4</literal><operator pos:start="101:38" pos:end="101:38">)</operator><operator pos:start="101:39" pos:end="101:39">+</operator><literal type="number" pos:start="101:40" pos:end="101:40">1</literal></expr></argument>, <argument pos:start="101:43" pos:end="101:54"><expr pos:start="101:43" pos:end="101:54"><operator pos:start="101:43" pos:end="101:43">(</operator><name pos:start="101:44" pos:end="101:45">wh</name> <operator pos:start="101:47" pos:end="101:47">&amp;</operator> <literal type="number" pos:start="101:49" pos:end="101:51">0xF</literal><operator pos:start="101:52" pos:end="101:52">)</operator><operator pos:start="101:53" pos:end="101:53">+</operator><literal type="number" pos:start="101:54" pos:end="101:54">1</literal></expr></argument>, <argument pos:start="101:57" pos:end="101:58"><expr pos:start="101:57" pos:end="101:58"><name pos:start="101:57" pos:end="101:58">fg</name></expr></argument>, <argument pos:start="101:61" pos:end="101:63"><expr pos:start="101:61" pos:end="101:63"><name pos:start="101:61" pos:end="101:63">bpp</name></expr></argument>, <argument pos:start="101:66" pos:end="101:71"><expr pos:start="101:66" pos:end="101:71"><name pos:start="101:66" pos:end="101:71">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="109:9" pos:end="109:27"><expr pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:11">dst</name> <operator pos:start="109:13" pos:end="109:14">+=</operator> <name pos:start="109:16" pos:end="109:21">stride</name> <operator pos:start="109:23" pos:end="109:23">*</operator> <literal type="number" pos:start="109:25" pos:end="109:26">16</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
