<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7807.c" pos:tabs="8"><function pos:start="1:1" pos:end="375:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">execute_ref_pic_marking</name><parameter_list pos:start="1:35" pos:end="1:78">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">MMCO</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">mmco</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:77">mmco_count</name></decl></parameter>)</parameter_list><block pos:start="1:79" pos:end="375:1">{<block_content pos:start="3:5" pos:end="373:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:28">current_ref_assigned</name><init pos:start="7:29" pos:end="7:30">=<expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Picture</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">pic</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:59"><if pos:start="13:5" pos:end="15:59">if<condition pos:start="13:7" pos:end="13:56">(<expr pos:start="13:8" pos:end="13:55"><operator pos:start="13:8" pos:end="13:8">(</operator><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:16">avctx</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:23">debug</name></name><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:37">FF_DEBUG_MMCO</name><operator pos:start="13:38" pos:end="13:38">)</operator> <operator pos:start="13:40" pos:end="13:41">&amp;&amp;</operator> <name pos:start="13:43" pos:end="13:52">mmco_count</name><operator pos:start="13:53" pos:end="13:54">==</operator><literal type="number" pos:start="13:55" pos:end="13:55">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:59"><block_content pos:start="15:9" pos:end="15:59">

        <expr_stmt pos:start="15:9" pos:end="15:59"><expr pos:start="15:9" pos:end="15:58"><call pos:start="15:9" pos:end="15:58"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:58">(<argument pos:start="15:16" pos:end="15:25"><expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:16">h</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:19">s</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:25">avctx</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:39"><expr pos:start="15:28" pos:end="15:39"><name pos:start="15:28" pos:end="15:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:42" pos:end="15:57"><expr pos:start="15:42" pos:end="15:57"><literal type="string" pos:start="15:42" pos:end="15:57">"no mmco here\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="19:5" pos:end="227:5">for<control pos:start="19:8" pos:end="19:31">(<init pos:start="19:9" pos:end="19:12"><expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:9">i</name><operator pos:start="19:10" pos:end="19:10">=</operator><literal type="number" pos:start="19:11" pos:end="19:11">0</literal></expr>;</init> <condition pos:start="19:14" pos:end="19:26"><expr pos:start="19:14" pos:end="19:25"><name pos:start="19:14" pos:end="19:14">i</name><operator pos:start="19:15" pos:end="19:15">&lt;</operator><name pos:start="19:16" pos:end="19:25">mmco_count</name></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">i</name><operator pos:start="19:29" pos:end="19:30">++</operator></expr></incr>)</control><block pos:start="19:32" pos:end="227:5">{<block_content pos:start="21:9" pos:end="225:9">

        <decl_stmt pos:start="21:9" pos:end="21:44"><decl pos:start="21:9" pos:end="21:21"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:21">structure</name></decl>, <decl pos:start="21:24" pos:end="21:32"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:24" pos:end="21:32">frame_num</name></decl>, <decl pos:start="21:35" pos:end="21:43"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:35" pos:end="21:43">unref_pic</name></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="25:130"><if pos:start="23:9" pos:end="25:130">if<condition pos:start="23:11" pos:end="23:41">(<expr pos:start="23:12" pos:end="23:40"><name pos:start="23:12" pos:end="23:26"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">avctx</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:26">debug</name></name><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:40">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:130"><block_content pos:start="25:13" pos:end="25:130">

            <expr_stmt pos:start="25:13" pos:end="25:130"><expr pos:start="25:13" pos:end="25:129"><call pos:start="25:13" pos:end="25:129"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:129">(<argument pos:start="25:20" pos:end="25:29"><expr pos:start="25:20" pos:end="25:29"><name pos:start="25:20" pos:end="25:29"><name pos:start="25:20" pos:end="25:20">h</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:29">avctx</name></name></expr></argument>, <argument pos:start="25:32" pos:end="25:43"><expr pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:46" pos:end="25:62"><expr pos:start="25:46" pos:end="25:62"><literal type="string" pos:start="25:46" pos:end="25:62">"mmco:%d %d %d\n"</literal></expr></argument>, <argument pos:start="25:65" pos:end="25:81"><expr pos:start="25:65" pos:end="25:81"><name pos:start="25:65" pos:end="25:74"><name pos:start="25:65" pos:end="25:65">h</name><operator pos:start="25:66" pos:end="25:67">-&gt;</operator><name pos:start="25:68" pos:end="25:71">mmco</name><index pos:start="25:72" pos:end="25:74">[<expr pos:start="25:73" pos:end="25:73"><name pos:start="25:73" pos:end="25:73">i</name></expr>]</index></name><operator pos:start="25:75" pos:end="25:75">.</operator><name pos:start="25:76" pos:end="25:81">opcode</name></expr></argument>, <argument pos:start="25:84" pos:end="25:107"><expr pos:start="25:84" pos:end="25:107"><name pos:start="25:84" pos:end="25:93"><name pos:start="25:84" pos:end="25:84">h</name><operator pos:start="25:85" pos:end="25:86">-&gt;</operator><name pos:start="25:87" pos:end="25:90">mmco</name><index pos:start="25:91" pos:end="25:93">[<expr pos:start="25:92" pos:end="25:92"><name pos:start="25:92" pos:end="25:92">i</name></expr>]</index></name><operator pos:start="25:94" pos:end="25:94">.</operator><name pos:start="25:95" pos:end="25:107">short_pic_num</name></expr></argument>, <argument pos:start="25:110" pos:end="25:128"><expr pos:start="25:110" pos:end="25:128"><name pos:start="25:110" pos:end="25:119"><name pos:start="25:110" pos:end="25:110">h</name><operator pos:start="25:111" pos:end="25:112">-&gt;</operator><name pos:start="25:113" pos:end="25:116">mmco</name><index pos:start="25:117" pos:end="25:119">[<expr pos:start="25:118" pos:end="25:118"><name pos:start="25:118" pos:end="25:118">i</name></expr>]</index></name><operator pos:start="25:120" pos:end="25:120">.</operator><name pos:start="25:121" pos:end="25:128">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <switch pos:start="29:9" pos:end="225:9">switch<condition pos:start="29:15" pos:end="29:30">(<expr pos:start="29:16" pos:end="29:29"><name pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:19">mmco</name><index pos:start="29:20" pos:end="29:22">[<expr pos:start="29:21" pos:end="29:21"><name pos:start="29:21" pos:end="29:21">i</name></expr>]</index></name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:29">opcode</name></expr>)</condition><block pos:start="29:31" pos:end="225:9">{<block_content pos:start="31:9" pos:end="223:27">

        <case pos:start="31:9" pos:end="31:31">case <expr pos:start="31:14" pos:end="31:30"><name pos:start="31:14" pos:end="31:30">MMCO_SHORT2UNUSED</name></expr>:</case>

            <if_stmt pos:start="33:13" pos:end="35:130"><if pos:start="33:13" pos:end="35:130">if<condition pos:start="33:15" pos:end="33:45">(<expr pos:start="33:16" pos:end="33:44"><name pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:30">debug</name></name><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:44">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:130"><block_content pos:start="35:17" pos:end="35:130">

                <expr_stmt pos:start="35:17" pos:end="35:130"><expr pos:start="35:17" pos:end="35:129"><call pos:start="35:17" pos:end="35:129"><name pos:start="35:17" pos:end="35:22">av_log</name><argument_list pos:start="35:23" pos:end="35:129">(<argument pos:start="35:24" pos:end="35:33"><expr pos:start="35:24" pos:end="35:33"><name pos:start="35:24" pos:end="35:33"><name pos:start="35:24" pos:end="35:24">h</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:33">avctx</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:47"><expr pos:start="35:36" pos:end="35:47"><name pos:start="35:36" pos:end="35:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="35:50" pos:end="35:82"><expr pos:start="35:50" pos:end="35:82"><literal type="string" pos:start="35:50" pos:end="35:82">"mmco: unref short %d count %d\n"</literal></expr></argument>, <argument pos:start="35:85" pos:end="35:108"><expr pos:start="35:85" pos:end="35:108"><name pos:start="35:85" pos:end="35:94"><name pos:start="35:85" pos:end="35:85">h</name><operator pos:start="35:86" pos:end="35:87">-&gt;</operator><name pos:start="35:88" pos:end="35:91">mmco</name><index pos:start="35:92" pos:end="35:94">[<expr pos:start="35:93" pos:end="35:93"><name pos:start="35:93" pos:end="35:93">i</name></expr>]</index></name><operator pos:start="35:95" pos:end="35:95">.</operator><name pos:start="35:96" pos:end="35:108">short_pic_num</name></expr></argument>, <argument pos:start="35:111" pos:end="35:128"><expr pos:start="35:111" pos:end="35:128"><name pos:start="35:111" pos:end="35:128"><name pos:start="35:111" pos:end="35:111">h</name><operator pos:start="35:112" pos:end="35:113">-&gt;</operator><name pos:start="35:114" pos:end="35:128">short_ref_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:78"><expr pos:start="37:13" pos:end="37:77"><name pos:start="37:13" pos:end="37:21">frame_num</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:77"><name pos:start="37:25" pos:end="37:39">pic_num_extract</name><argument_list pos:start="37:40" pos:end="37:77">(<argument pos:start="37:41" pos:end="37:41"><expr pos:start="37:41" pos:end="37:41"><name pos:start="37:41" pos:end="37:41">h</name></expr></argument>, <argument pos:start="37:44" pos:end="37:64"><expr pos:start="37:44" pos:end="37:64"><name pos:start="37:44" pos:end="37:50"><name pos:start="37:44" pos:end="37:47">mmco</name><index pos:start="37:48" pos:end="37:50">[<expr pos:start="37:49" pos:end="37:49"><name pos:start="37:49" pos:end="37:49">i</name></expr>]</index></name><operator pos:start="37:51" pos:end="37:51">.</operator><name pos:start="37:52" pos:end="37:64">short_pic_num</name></expr></argument>, <argument pos:start="37:67" pos:end="37:76"><expr pos:start="37:67" pos:end="37:76"><operator pos:start="37:67" pos:end="37:67">&amp;</operator><name pos:start="37:68" pos:end="37:76">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:15">pic</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:46"><name pos:start="39:19" pos:end="39:28">find_short</name><argument_list pos:start="39:29" pos:end="39:46">(<argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">h</name></expr></argument>, <argument pos:start="39:33" pos:end="39:41"><expr pos:start="39:33" pos:end="39:41"><name pos:start="39:33" pos:end="39:41">frame_num</name></expr></argument>, <argument pos:start="39:44" pos:end="39:45"><expr pos:start="39:44" pos:end="39:45"><operator pos:start="39:44" pos:end="39:44">&amp;</operator><name pos:start="39:45" pos:end="39:45">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="49:80"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:20">(<expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">pic</name></expr>)</condition> <block pos:start="41:22" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:48">

                <if_stmt pos:start="43:17" pos:end="45:48"><if pos:start="43:17" pos:end="45:48">if <condition pos:start="43:20" pos:end="43:68">(<expr pos:start="43:21" pos:end="43:67"><call pos:start="43:21" pos:end="43:67"><name pos:start="43:21" pos:end="43:35">unreference_pic</name><argument_list pos:start="43:36" pos:end="43:67">(<argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">h</name></expr></argument>, <argument pos:start="43:40" pos:end="43:42"><expr pos:start="43:40" pos:end="43:42"><name pos:start="43:40" pos:end="43:42">pic</name></expr></argument>, <argument pos:start="43:45" pos:end="43:66"><expr pos:start="43:45" pos:end="43:66"><name pos:start="43:45" pos:end="43:53">structure</name> <operator pos:start="43:55" pos:end="43:55">^</operator> <name pos:start="43:57" pos:end="43:66">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:48"><block_content pos:start="45:21" pos:end="45:48">

                    <expr_stmt pos:start="45:21" pos:end="45:48"><expr pos:start="45:21" pos:end="45:47"><call pos:start="45:21" pos:end="45:47"><name pos:start="45:21" pos:end="45:41">remove_short_at_index</name><argument_list pos:start="45:42" pos:end="45:47">(<argument pos:start="45:43" pos:end="45:43"><expr pos:start="45:43" pos:end="45:43"><name pos:start="45:43" pos:end="45:43">h</name></expr></argument>, <argument pos:start="45:46" pos:end="45:46"><expr pos:start="45:46" pos:end="45:46"><name pos:start="45:46" pos:end="45:46">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="47:15" pos:end="49:80">else if<condition pos:start="47:22" pos:end="47:52">(<expr pos:start="47:23" pos:end="47:51"><name pos:start="47:23" pos:end="47:37"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:30">avctx</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:37">debug</name></name><operator pos:start="47:38" pos:end="47:38">&amp;</operator><name pos:start="47:39" pos:end="47:51">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:80"><block_content pos:start="49:17" pos:end="49:80">

                <expr_stmt pos:start="49:17" pos:end="49:80"><expr pos:start="49:17" pos:end="49:79"><call pos:start="49:17" pos:end="49:79"><name pos:start="49:17" pos:end="49:22">av_log</name><argument_list pos:start="49:23" pos:end="49:79">(<argument pos:start="49:24" pos:end="49:33"><expr pos:start="49:24" pos:end="49:33"><name pos:start="49:24" pos:end="49:33"><name pos:start="49:24" pos:end="49:24">h</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:27">s</name><operator pos:start="49:28" pos:end="49:28">.</operator><name pos:start="49:29" pos:end="49:33">avctx</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:47"><expr pos:start="49:36" pos:end="49:47"><name pos:start="49:36" pos:end="49:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="49:50" pos:end="49:78"><expr pos:start="49:50" pos:end="49:78"><literal type="string" pos:start="49:50" pos:end="49:78">"mmco: unref short failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:29">case <expr pos:start="53:14" pos:end="53:28"><name pos:start="53:14" pos:end="53:28">MMCO_SHORT2LONG</name></expr>:</case>

            <if_stmt pos:start="55:13" pos:end="85:13"><if pos:start="55:13" pos:end="63:13">if <condition pos:start="55:16" pos:end="59:72">(<expr pos:start="55:17" pos:end="59:71"><name pos:start="55:17" pos:end="55:29">FIELD_PICTURE</name> <operator pos:start="55:31" pos:end="55:32">&amp;&amp;</operator> <name pos:start="55:34" pos:end="55:40"><name pos:start="55:34" pos:end="55:37">mmco</name><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">i</name></expr>]</index></name><operator pos:start="55:41" pos:end="55:41">.</operator><name pos:start="55:42" pos:end="55:49">long_arg</name> <operator pos:start="55:51" pos:end="55:51">&lt;</operator> <name pos:start="55:53" pos:end="55:69"><name pos:start="55:53" pos:end="55:53">h</name><operator pos:start="55:54" pos:end="55:55">-&gt;</operator><name pos:start="55:56" pos:end="55:69">long_ref_count</name></name> <operator pos:start="55:71" pos:end="55:72">&amp;&amp;</operator>

                    <name pos:start="57:21" pos:end="57:49"><name pos:start="57:21" pos:end="57:21">h</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:31">long_ref</name><index pos:start="57:32" pos:end="57:49">[<expr pos:start="57:33" pos:end="57:48"><name pos:start="57:33" pos:end="57:39"><name pos:start="57:33" pos:end="57:36">mmco</name><index pos:start="57:37" pos:end="57:39">[<expr pos:start="57:38" pos:end="57:38"><name pos:start="57:38" pos:end="57:38">i</name></expr>]</index></name><operator pos:start="57:40" pos:end="57:40">.</operator><name pos:start="57:41" pos:end="57:48">long_arg</name></expr>]</index></name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:60">frame_num</name> <operator pos:start="57:62" pos:end="57:63">==</operator>

                                              <name pos:start="59:47" pos:end="59:53"><name pos:start="59:47" pos:end="59:50">mmco</name><index pos:start="59:51" pos:end="59:53">[<expr pos:start="59:52" pos:end="59:52"><name pos:start="59:52" pos:end="59:52">i</name></expr>]</index></name><operator pos:start="59:54" pos:end="59:54">.</operator><name pos:start="59:55" pos:end="59:67">short_pic_num</name> <operator pos:start="59:69" pos:end="59:69">/</operator> <literal type="number" pos:start="59:71" pos:end="59:71">2</literal></expr>)</condition> <block pos:start="59:74" pos:end="63:13">{<block_content>

                <comment type="block" pos:start="61:17" pos:end="61:70">/* do nothing, we've already moved this field pair. */</comment>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="85:13">else <block pos:start="63:20" pos:end="85:13">{<block_content pos:start="65:17" pos:end="83:17">

                <decl_stmt pos:start="65:17" pos:end="65:71"><decl pos:start="65:17" pos:end="65:70"><type pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">int</name></type> <name pos:start="65:21" pos:end="65:29">frame_num</name> <init pos:start="65:31" pos:end="65:70">= <expr pos:start="65:33" pos:end="65:70"><name pos:start="65:33" pos:end="65:39"><name pos:start="65:33" pos:end="65:36">mmco</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><name pos:start="65:38" pos:end="65:38">i</name></expr>]</index></name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:53">short_pic_num</name> <operator pos:start="65:55" pos:end="65:56">&gt;&gt;</operator> <name pos:start="65:58" pos:end="65:70">FIELD_PICTURE</name></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="69:17" pos:end="69:54"><expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:19">pic</name><operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:53"><name pos:start="69:22" pos:end="69:32">remove_long</name><argument_list pos:start="69:33" pos:end="69:53">(<argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">h</name></expr></argument>, <argument pos:start="69:37" pos:end="69:52"><expr pos:start="69:37" pos:end="69:52"><name pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:40">mmco</name><index pos:start="69:41" pos:end="69:43">[<expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">i</name></expr>]</index></name><operator pos:start="69:44" pos:end="69:44">.</operator><name pos:start="69:45" pos:end="69:52">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="71:17" pos:end="71:51"><if pos:start="71:17" pos:end="71:51">if<condition pos:start="71:19" pos:end="71:23">(<expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">pic</name></expr>)</condition><block type="pseudo" pos:start="71:25" pos:end="71:51"><block_content pos:start="71:25" pos:end="71:51"> <expr_stmt pos:start="71:25" pos:end="71:51"><expr pos:start="71:25" pos:end="71:50"><call pos:start="71:25" pos:end="71:50"><name pos:start="71:25" pos:end="71:39">unreference_pic</name><argument_list pos:start="71:40" pos:end="71:50">(<argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">h</name></expr></argument>, <argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:46">pic</name></expr></argument>, <argument pos:start="71:49" pos:end="71:49"><expr pos:start="71:49" pos:end="71:49"><literal type="number" pos:start="71:49" pos:end="71:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:76"><expr pos:start="75:17" pos:end="75:75"><name pos:start="75:17" pos:end="75:47"><name pos:start="75:17" pos:end="75:17">h</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:27">long_ref</name><index pos:start="75:28" pos:end="75:47">[ <expr pos:start="75:30" pos:end="75:45"><name pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:33">mmco</name><index pos:start="75:34" pos:end="75:36">[<expr pos:start="75:35" pos:end="75:35"><name pos:start="75:35" pos:end="75:35">i</name></expr>]</index></name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:45">long_arg</name></expr> ]</index></name><operator pos:start="75:48" pos:end="75:48">=</operator> <call pos:start="75:50" pos:end="75:75"><name pos:start="75:50" pos:end="75:61">remove_short</name><argument_list pos:start="75:62" pos:end="75:75">(<argument pos:start="75:63" pos:end="75:63"><expr pos:start="75:63" pos:end="75:63"><name pos:start="75:63" pos:end="75:63">h</name></expr></argument>, <argument pos:start="75:66" pos:end="75:74"><expr pos:start="75:66" pos:end="75:74"><name pos:start="75:66" pos:end="75:74">frame_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="83:17"><if pos:start="77:17" pos:end="83:17">if <condition pos:start="77:20" pos:end="77:52">(<expr pos:start="77:21" pos:end="77:51"><name pos:start="77:21" pos:end="77:51"><name pos:start="77:21" pos:end="77:21">h</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:31">long_ref</name><index pos:start="77:32" pos:end="77:51">[ <expr pos:start="77:34" pos:end="77:49"><name pos:start="77:34" pos:end="77:40"><name pos:start="77:34" pos:end="77:37">mmco</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><name pos:start="77:39" pos:end="77:39">i</name></expr>]</index></name><operator pos:start="77:41" pos:end="77:41">.</operator><name pos:start="77:42" pos:end="77:49">long_arg</name></expr> ]</index></name></expr>)</condition><block pos:start="77:53" pos:end="83:17">{<block_content pos:start="79:21" pos:end="81:40">

                    <expr_stmt pos:start="79:21" pos:end="79:64"><expr pos:start="79:21" pos:end="79:63"><name pos:start="79:21" pos:end="79:51"><name pos:start="79:21" pos:end="79:21">h</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:31">long_ref</name><index pos:start="79:32" pos:end="79:51">[ <expr pos:start="79:34" pos:end="79:49"><name pos:start="79:34" pos:end="79:40"><name pos:start="79:34" pos:end="79:37">mmco</name><index pos:start="79:38" pos:end="79:40">[<expr pos:start="79:39" pos:end="79:39"><name pos:start="79:39" pos:end="79:39">i</name></expr>]</index></name><operator pos:start="79:41" pos:end="79:41">.</operator><name pos:start="79:42" pos:end="79:49">long_arg</name></expr> ]</index></name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:61">long_ref</name><operator pos:start="79:62" pos:end="79:62">=</operator><literal type="number" pos:start="79:63" pos:end="79:63">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:40"><expr pos:start="81:21" pos:end="81:39"><name pos:start="81:21" pos:end="81:37"><name pos:start="81:21" pos:end="81:21">h</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:37">long_ref_count</name></name><operator pos:start="81:38" pos:end="81:39">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:30">case <expr pos:start="89:14" pos:end="89:29"><name pos:start="89:14" pos:end="89:29">MMCO_LONG2UNUSED</name></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:65"><expr pos:start="91:13" pos:end="91:64"><name pos:start="91:13" pos:end="91:13">j</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:64"><name pos:start="91:17" pos:end="91:31">pic_num_extract</name><argument_list pos:start="91:32" pos:end="91:64">(<argument pos:start="91:33" pos:end="91:33"><expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">h</name></expr></argument>, <argument pos:start="91:36" pos:end="91:51"><expr pos:start="91:36" pos:end="91:51"><name pos:start="91:36" pos:end="91:42"><name pos:start="91:36" pos:end="91:39">mmco</name><index pos:start="91:40" pos:end="91:42">[<expr pos:start="91:41" pos:end="91:41"><name pos:start="91:41" pos:end="91:41">i</name></expr>]</index></name><operator pos:start="91:43" pos:end="91:43">.</operator><name pos:start="91:44" pos:end="91:51">long_arg</name></expr></argument>, <argument pos:start="91:54" pos:end="91:63"><expr pos:start="91:54" pos:end="91:63"><operator pos:start="91:54" pos:end="91:54">&amp;</operator><name pos:start="91:55" pos:end="91:63">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:15">pic</name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:32"><name pos:start="93:19" pos:end="93:19">h</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:29">long_ref</name><index pos:start="93:30" pos:end="93:32">[<expr pos:start="93:31" pos:end="93:31"><name pos:start="93:31" pos:end="93:31">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="103:79"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:20">(<expr pos:start="95:17" pos:end="95:19"><name pos:start="95:17" pos:end="95:19">pic</name></expr>)</condition> <block pos:start="95:22" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:47">

                <if_stmt pos:start="97:17" pos:end="99:47"><if pos:start="97:17" pos:end="99:47">if <condition pos:start="97:20" pos:end="97:68">(<expr pos:start="97:21" pos:end="97:67"><call pos:start="97:21" pos:end="97:67"><name pos:start="97:21" pos:end="97:35">unreference_pic</name><argument_list pos:start="97:36" pos:end="97:67">(<argument pos:start="97:37" pos:end="97:37"><expr pos:start="97:37" pos:end="97:37"><name pos:start="97:37" pos:end="97:37">h</name></expr></argument>, <argument pos:start="97:40" pos:end="97:42"><expr pos:start="97:40" pos:end="97:42"><name pos:start="97:40" pos:end="97:42">pic</name></expr></argument>, <argument pos:start="97:45" pos:end="97:66"><expr pos:start="97:45" pos:end="97:66"><name pos:start="97:45" pos:end="97:53">structure</name> <operator pos:start="97:55" pos:end="97:55">^</operator> <name pos:start="97:57" pos:end="97:66">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:21" pos:end="99:47"><block_content pos:start="99:21" pos:end="99:47">

                    <expr_stmt pos:start="99:21" pos:end="99:47"><expr pos:start="99:21" pos:end="99:46"><call pos:start="99:21" pos:end="99:46"><name pos:start="99:21" pos:end="99:40">remove_long_at_index</name><argument_list pos:start="99:41" pos:end="99:46">(<argument pos:start="99:42" pos:end="99:42"><expr pos:start="99:42" pos:end="99:42"><name pos:start="99:42" pos:end="99:42">h</name></expr></argument>, <argument pos:start="99:45" pos:end="99:45"><expr pos:start="99:45" pos:end="99:45"><name pos:start="99:45" pos:end="99:45">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="101:15" pos:end="103:79">else if<condition pos:start="101:22" pos:end="101:52">(<expr pos:start="101:23" pos:end="101:51"><name pos:start="101:23" pos:end="101:37"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:30">avctx</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:37">debug</name></name><operator pos:start="101:38" pos:end="101:38">&amp;</operator><name pos:start="101:39" pos:end="101:51">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:79"><block_content pos:start="103:17" pos:end="103:79">

                <expr_stmt pos:start="103:17" pos:end="103:79"><expr pos:start="103:17" pos:end="103:78"><call pos:start="103:17" pos:end="103:78"><name pos:start="103:17" pos:end="103:22">av_log</name><argument_list pos:start="103:23" pos:end="103:78">(<argument pos:start="103:24" pos:end="103:33"><expr pos:start="103:24" pos:end="103:33"><name pos:start="103:24" pos:end="103:33"><name pos:start="103:24" pos:end="103:24">h</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:27">s</name><operator pos:start="103:28" pos:end="103:28">.</operator><name pos:start="103:29" pos:end="103:33">avctx</name></name></expr></argument>, <argument pos:start="103:36" pos:end="103:47"><expr pos:start="103:36" pos:end="103:47"><name pos:start="103:36" pos:end="103:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="103:50" pos:end="103:77"><expr pos:start="103:50" pos:end="103:77"><literal type="string" pos:start="103:50" pos:end="103:77">"mmco: unref long failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:23">case <expr pos:start="107:14" pos:end="107:22"><name pos:start="107:14" pos:end="107:22">MMCO_LONG</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:26"><expr pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:21">unref_pic</name> <operator pos:start="109:23" pos:end="109:23">=</operator> <literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="145:13"><if pos:start="111:13" pos:end="145:13">if <condition pos:start="111:16" pos:end="111:49">(<expr pos:start="111:17" pos:end="111:48"><name pos:start="111:17" pos:end="111:29">FIELD_PICTURE</name> <operator pos:start="111:31" pos:end="111:32">&amp;&amp;</operator> <operator pos:start="111:34" pos:end="111:34">!</operator><name pos:start="111:35" pos:end="111:48"><name pos:start="111:35" pos:end="111:35">s</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:48">first_field</name></name></expr>)</condition> <block pos:start="111:51" pos:end="145:13">{<block_content pos:start="113:17" pos:end="143:17">

                <if_stmt pos:start="113:17" pos:end="143:17"><if pos:start="113:17" pos:end="119:17">if <condition pos:start="113:20" pos:end="113:76">(<expr pos:start="113:21" pos:end="113:75"><name pos:start="113:21" pos:end="113:49"><name pos:start="113:21" pos:end="113:21">h</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:31">long_ref</name><index pos:start="113:32" pos:end="113:49">[<expr pos:start="113:33" pos:end="113:48"><name pos:start="113:33" pos:end="113:39"><name pos:start="113:33" pos:end="113:36">mmco</name><index pos:start="113:37" pos:end="113:39">[<expr pos:start="113:38" pos:end="113:38"><name pos:start="113:38" pos:end="113:38">i</name></expr>]</index></name><operator pos:start="113:40" pos:end="113:40">.</operator><name pos:start="113:41" pos:end="113:48">long_arg</name></expr>]</index></name> <operator pos:start="113:51" pos:end="113:52">==</operator> <name pos:start="113:54" pos:end="113:75"><name pos:start="113:54" pos:end="113:54">s</name><operator pos:start="113:55" pos:end="113:56">-&gt;</operator><name pos:start="113:57" pos:end="113:75">current_picture_ptr</name></name></expr>)</condition> <block pos:start="113:78" pos:end="119:17">{<block_content pos:start="117:21" pos:end="117:34">

                    <comment type="block" pos:start="115:21" pos:end="115:62">/* Just mark second field as referenced */</comment>

                    <expr_stmt pos:start="117:21" pos:end="117:34"><expr pos:start="117:21" pos:end="117:33"><name pos:start="117:21" pos:end="117:29">unref_pic</name> <operator pos:start="117:31" pos:end="117:31">=</operator> <literal type="number" pos:start="117:33" pos:end="117:33">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="119:19" pos:end="143:17">else if <condition pos:start="119:27" pos:end="119:61">(<expr pos:start="119:28" pos:end="119:60"><name pos:start="119:28" pos:end="119:60"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:49">current_picture_ptr</name><operator pos:start="119:50" pos:end="119:51">-&gt;</operator><name pos:start="119:52" pos:end="119:60">reference</name></name></expr>)</condition> <block pos:start="119:63" pos:end="143:17">{<block_content pos:start="133:21" pos:end="141:34">

                    <comment type="block" pos:start="121:21" pos:end="131:23">/* First field in pair is in short term list or

                     * at a different long term index.

                     * This is not allowed; see 7.4.3, notes 2 and 3.

                     * Report the problem and keep the pair where it is,

                     * and mark this field valid.

                     */</comment>

                    <expr_stmt pos:start="133:21" pos:end="139:72"><expr pos:start="133:21" pos:end="139:71"><call pos:start="133:21" pos:end="139:71"><name pos:start="133:21" pos:end="133:26">av_log</name><argument_list pos:start="133:27" pos:end="139:71">(<argument pos:start="133:28" pos:end="133:37"><expr pos:start="133:28" pos:end="133:37"><name pos:start="133:28" pos:end="133:37"><name pos:start="133:28" pos:end="133:28">h</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:31">s</name><operator pos:start="133:32" pos:end="133:32">.</operator><name pos:start="133:33" pos:end="133:37">avctx</name></name></expr></argument>, <argument pos:start="133:40" pos:end="133:51"><expr pos:start="133:40" pos:end="133:51"><name pos:start="133:40" pos:end="133:51">AV_LOG_ERROR</name></expr></argument>,

                        <argument pos:start="135:25" pos:end="139:70"><expr pos:start="135:25" pos:end="139:70"><literal type="string" pos:start="135:25" pos:end="135:76">"illegal long term reference assignment for second "</literal>

                        <literal type="string" pos:start="137:25" pos:end="137:76">"field in complementary field pair (first field is "</literal>

                        <literal type="string" pos:start="139:25" pos:end="139:70">"short term or has non-matching long index)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="141:21" pos:end="141:34"><expr pos:start="141:21" pos:end="141:33"><name pos:start="141:21" pos:end="141:29">unref_pic</name> <operator pos:start="141:31" pos:end="141:31">=</operator> <literal type="number" pos:start="141:33" pos:end="141:33">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="149:13" pos:end="163:13"><if pos:start="149:13" pos:end="163:13">if <condition pos:start="149:16" pos:end="149:26">(<expr pos:start="149:17" pos:end="149:25"><name pos:start="149:17" pos:end="149:25">unref_pic</name></expr>)</condition> <block pos:start="149:28" pos:end="163:13">{<block_content pos:start="151:17" pos:end="161:36">

                <expr_stmt pos:start="151:17" pos:end="151:54"><expr pos:start="151:17" pos:end="151:53"><name pos:start="151:17" pos:end="151:19">pic</name><operator pos:start="151:20" pos:end="151:20">=</operator> <call pos:start="151:22" pos:end="151:53"><name pos:start="151:22" pos:end="151:32">remove_long</name><argument_list pos:start="151:33" pos:end="151:53">(<argument pos:start="151:34" pos:end="151:34"><expr pos:start="151:34" pos:end="151:34"><name pos:start="151:34" pos:end="151:34">h</name></expr></argument>, <argument pos:start="151:37" pos:end="151:52"><expr pos:start="151:37" pos:end="151:52"><name pos:start="151:37" pos:end="151:43"><name pos:start="151:37" pos:end="151:40">mmco</name><index pos:start="151:41" pos:end="151:43">[<expr pos:start="151:42" pos:end="151:42"><name pos:start="151:42" pos:end="151:42">i</name></expr>]</index></name><operator pos:start="151:44" pos:end="151:44">.</operator><name pos:start="151:45" pos:end="151:52">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="153:17" pos:end="153:51"><if pos:start="153:17" pos:end="153:51">if<condition pos:start="153:19" pos:end="153:23">(<expr pos:start="153:20" pos:end="153:22"><name pos:start="153:20" pos:end="153:22">pic</name></expr>)</condition><block type="pseudo" pos:start="153:25" pos:end="153:51"><block_content pos:start="153:25" pos:end="153:51"> <expr_stmt pos:start="153:25" pos:end="153:51"><expr pos:start="153:25" pos:end="153:50"><call pos:start="153:25" pos:end="153:50"><name pos:start="153:25" pos:end="153:39">unreference_pic</name><argument_list pos:start="153:40" pos:end="153:50">(<argument pos:start="153:41" pos:end="153:41"><expr pos:start="153:41" pos:end="153:41"><name pos:start="153:41" pos:end="153:41">h</name></expr></argument>, <argument pos:start="153:44" pos:end="153:46"><expr pos:start="153:44" pos:end="153:46"><name pos:start="153:44" pos:end="153:46">pic</name></expr></argument>, <argument pos:start="153:49" pos:end="153:49"><expr pos:start="153:49" pos:end="153:49"><literal type="number" pos:start="153:49" pos:end="153:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="157:17" pos:end="157:72"><expr pos:start="157:17" pos:end="157:71"><name pos:start="157:17" pos:end="157:47"><name pos:start="157:17" pos:end="157:17">h</name><operator pos:start="157:18" pos:end="157:19">-&gt;</operator><name pos:start="157:20" pos:end="157:27">long_ref</name><index pos:start="157:28" pos:end="157:47">[ <expr pos:start="157:30" pos:end="157:45"><name pos:start="157:30" pos:end="157:36"><name pos:start="157:30" pos:end="157:33">mmco</name><index pos:start="157:34" pos:end="157:36">[<expr pos:start="157:35" pos:end="157:35"><name pos:start="157:35" pos:end="157:35">i</name></expr>]</index></name><operator pos:start="157:37" pos:end="157:37">.</operator><name pos:start="157:38" pos:end="157:45">long_arg</name></expr> ]</index></name><operator pos:start="157:48" pos:end="157:48">=</operator> <name pos:start="157:50" pos:end="157:71"><name pos:start="157:50" pos:end="157:50">s</name><operator pos:start="157:51" pos:end="157:52">-&gt;</operator><name pos:start="157:53" pos:end="157:71">current_picture_ptr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:60"><expr pos:start="159:17" pos:end="159:59"><name pos:start="159:17" pos:end="159:47"><name pos:start="159:17" pos:end="159:17">h</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:27">long_ref</name><index pos:start="159:28" pos:end="159:47">[ <expr pos:start="159:30" pos:end="159:45"><name pos:start="159:30" pos:end="159:36"><name pos:start="159:30" pos:end="159:33">mmco</name><index pos:start="159:34" pos:end="159:36">[<expr pos:start="159:35" pos:end="159:35"><name pos:start="159:35" pos:end="159:35">i</name></expr>]</index></name><operator pos:start="159:37" pos:end="159:37">.</operator><name pos:start="159:38" pos:end="159:45">long_arg</name></expr> ]</index></name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:57">long_ref</name><operator pos:start="159:58" pos:end="159:58">=</operator><literal type="number" pos:start="159:59" pos:end="159:59">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:36"><expr pos:start="161:17" pos:end="161:35"><name pos:start="161:17" pos:end="161:33"><name pos:start="161:17" pos:end="161:17">h</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:33">long_ref_count</name></name><operator pos:start="161:34" pos:end="161:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="167:13" pos:end="167:70"><expr pos:start="167:13" pos:end="167:69"><name pos:start="167:13" pos:end="167:45"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:34">current_picture_ptr</name><operator pos:start="167:35" pos:end="167:36">-&gt;</operator><name pos:start="167:37" pos:end="167:45">reference</name></name> <operator pos:start="167:47" pos:end="167:48">|=</operator> <name pos:start="167:50" pos:end="167:69"><name pos:start="167:50" pos:end="167:50">s</name><operator pos:start="167:51" pos:end="167:52">-&gt;</operator><name pos:start="167:53" pos:end="167:69">picture_structure</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:35"><expr pos:start="169:13" pos:end="169:34"><name pos:start="169:13" pos:end="169:32">current_ref_assigned</name><operator pos:start="169:33" pos:end="169:33">=</operator><literal type="number" pos:start="169:34" pos:end="169:34">1</literal></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:31">case <expr pos:start="173:14" pos:end="173:30"><name pos:start="173:14" pos:end="173:30">MMCO_SET_MAX_LONG</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:43"><expr pos:start="175:13" pos:end="175:42"><call pos:start="175:13" pos:end="175:42"><name pos:start="175:13" pos:end="175:18">assert</name><argument_list pos:start="175:19" pos:end="175:42">(<argument pos:start="175:20" pos:end="175:41"><expr pos:start="175:20" pos:end="175:41"><name pos:start="175:20" pos:end="175:26"><name pos:start="175:20" pos:end="175:23">mmco</name><index pos:start="175:24" pos:end="175:26">[<expr pos:start="175:25" pos:end="175:25"><name pos:start="175:25" pos:end="175:25">i</name></expr>]</index></name><operator pos:start="175:27" pos:end="175:27">.</operator><name pos:start="175:28" pos:end="175:35">long_arg</name> <operator pos:start="175:37" pos:end="175:38">&lt;=</operator> <literal type="number" pos:start="175:40" pos:end="175:41">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="177:13" pos:end="177:76">// just remove the long term which index is greater than new max</comment>

            <for pos:start="179:13" pos:end="185:13">for<control pos:start="179:16" pos:end="179:48">(<init pos:start="179:17" pos:end="179:37"><expr pos:start="179:17" pos:end="179:36"><name pos:start="179:17" pos:end="179:17">j</name> <operator pos:start="179:19" pos:end="179:19">=</operator> <name pos:start="179:21" pos:end="179:27"><name pos:start="179:21" pos:end="179:24">mmco</name><index pos:start="179:25" pos:end="179:27">[<expr pos:start="179:26" pos:end="179:26"><name pos:start="179:26" pos:end="179:26">i</name></expr>]</index></name><operator pos:start="179:28" pos:end="179:28">.</operator><name pos:start="179:29" pos:end="179:36">long_arg</name></expr>;</init> <condition pos:start="179:39" pos:end="179:43"><expr pos:start="179:39" pos:end="179:42"><name pos:start="179:39" pos:end="179:39">j</name><operator pos:start="179:40" pos:end="179:40">&lt;</operator><literal type="number" pos:start="179:41" pos:end="179:42">16</literal></expr>;</condition> <incr pos:start="179:45" pos:end="179:47"><expr pos:start="179:45" pos:end="179:47"><name pos:start="179:45" pos:end="179:45">j</name><operator pos:start="179:46" pos:end="179:47">++</operator></expr></incr>)</control><block pos:start="179:49" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:52">

                <expr_stmt pos:start="181:17" pos:end="181:40"><expr pos:start="181:17" pos:end="181:39"><name pos:start="181:17" pos:end="181:19">pic</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <call pos:start="181:23" pos:end="181:39"><name pos:start="181:23" pos:end="181:33">remove_long</name><argument_list pos:start="181:34" pos:end="181:39">(<argument pos:start="181:35" pos:end="181:35"><expr pos:start="181:35" pos:end="181:35"><name pos:start="181:35" pos:end="181:35">h</name></expr></argument>, <argument pos:start="181:38" pos:end="181:38"><expr pos:start="181:38" pos:end="181:38"><name pos:start="181:38" pos:end="181:38">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="183:17" pos:end="183:52"><if pos:start="183:17" pos:end="183:52">if <condition pos:start="183:20" pos:end="183:24">(<expr pos:start="183:21" pos:end="183:23"><name pos:start="183:21" pos:end="183:23">pic</name></expr>)</condition><block type="pseudo" pos:start="183:26" pos:end="183:52"><block_content pos:start="183:26" pos:end="183:52"> <expr_stmt pos:start="183:26" pos:end="183:52"><expr pos:start="183:26" pos:end="183:51"><call pos:start="183:26" pos:end="183:51"><name pos:start="183:26" pos:end="183:40">unreference_pic</name><argument_list pos:start="183:41" pos:end="183:51">(<argument pos:start="183:42" pos:end="183:42"><expr pos:start="183:42" pos:end="183:42"><name pos:start="183:42" pos:end="183:42">h</name></expr></argument>, <argument pos:start="183:45" pos:end="183:47"><expr pos:start="183:45" pos:end="183:47"><name pos:start="183:45" pos:end="183:47">pic</name></expr></argument>, <argument pos:start="183:50" pos:end="183:50"><expr pos:start="183:50" pos:end="183:50"><literal type="number" pos:start="183:50" pos:end="183:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:24">case <expr pos:start="189:14" pos:end="189:23"><name pos:start="189:14" pos:end="189:23">MMCO_RESET</name></expr>:</case>

            <while pos:start="191:13" pos:end="197:13">while<condition pos:start="191:18" pos:end="191:37">(<expr pos:start="191:19" pos:end="191:36"><name pos:start="191:19" pos:end="191:36"><name pos:start="191:19" pos:end="191:19">h</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:36">short_ref_count</name></name></expr>)</condition><block pos:start="191:38" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:51">

                <expr_stmt pos:start="193:17" pos:end="193:65"><expr pos:start="193:17" pos:end="193:64"><name pos:start="193:17" pos:end="193:19">pic</name><operator pos:start="193:20" pos:end="193:20">=</operator> <call pos:start="193:22" pos:end="193:64"><name pos:start="193:22" pos:end="193:33">remove_short</name><argument_list pos:start="193:34" pos:end="193:64">(<argument pos:start="193:35" pos:end="193:35"><expr pos:start="193:35" pos:end="193:35"><name pos:start="193:35" pos:end="193:35">h</name></expr></argument>, <argument pos:start="193:38" pos:end="193:63"><expr pos:start="193:38" pos:end="193:63"><name pos:start="193:38" pos:end="193:52"><name pos:start="193:38" pos:end="193:38">h</name><operator pos:start="193:39" pos:end="193:40">-&gt;</operator><name pos:start="193:41" pos:end="193:49">short_ref</name><index pos:start="193:50" pos:end="193:52">[<expr pos:start="193:51" pos:end="193:51"><literal type="number" pos:start="193:51" pos:end="193:51">0</literal></expr>]</index></name><operator pos:start="193:53" pos:end="193:54">-&gt;</operator><name pos:start="193:55" pos:end="193:63">frame_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="195:17" pos:end="195:51"><if pos:start="195:17" pos:end="195:51">if<condition pos:start="195:19" pos:end="195:23">(<expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">pic</name></expr>)</condition><block type="pseudo" pos:start="195:25" pos:end="195:51"><block_content pos:start="195:25" pos:end="195:51"> <expr_stmt pos:start="195:25" pos:end="195:51"><expr pos:start="195:25" pos:end="195:50"><call pos:start="195:25" pos:end="195:50"><name pos:start="195:25" pos:end="195:39">unreference_pic</name><argument_list pos:start="195:40" pos:end="195:50">(<argument pos:start="195:41" pos:end="195:41"><expr pos:start="195:41" pos:end="195:41"><name pos:start="195:41" pos:end="195:41">h</name></expr></argument>, <argument pos:start="195:44" pos:end="195:46"><expr pos:start="195:44" pos:end="195:46"><name pos:start="195:44" pos:end="195:46">pic</name></expr></argument>, <argument pos:start="195:49" pos:end="195:49"><expr pos:start="195:49" pos:end="195:49"><literal type="number" pos:start="195:49" pos:end="195:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <for pos:start="199:13" pos:end="205:13">for<control pos:start="199:16" pos:end="199:35">(<init pos:start="199:17" pos:end="199:22"><expr pos:start="199:17" pos:end="199:21"><name pos:start="199:17" pos:end="199:17">j</name> <operator pos:start="199:19" pos:end="199:19">=</operator> <literal type="number" pos:start="199:21" pos:end="199:21">0</literal></expr>;</init> <condition pos:start="199:24" pos:end="199:30"><expr pos:start="199:24" pos:end="199:29"><name pos:start="199:24" pos:end="199:24">j</name> <operator pos:start="199:26" pos:end="199:26">&lt;</operator> <literal type="number" pos:start="199:28" pos:end="199:29">16</literal></expr>;</condition> <incr pos:start="199:32" pos:end="199:34"><expr pos:start="199:32" pos:end="199:34"><name pos:start="199:32" pos:end="199:32">j</name><operator pos:start="199:33" pos:end="199:34">++</operator></expr></incr>)</control> <block pos:start="199:37" pos:end="205:13">{<block_content pos:start="201:17" pos:end="203:51">

                <expr_stmt pos:start="201:17" pos:end="201:39"><expr pos:start="201:17" pos:end="201:38"><name pos:start="201:17" pos:end="201:19">pic</name><operator pos:start="201:20" pos:end="201:20">=</operator> <call pos:start="201:22" pos:end="201:38"><name pos:start="201:22" pos:end="201:32">remove_long</name><argument_list pos:start="201:33" pos:end="201:38">(<argument pos:start="201:34" pos:end="201:34"><expr pos:start="201:34" pos:end="201:34"><name pos:start="201:34" pos:end="201:34">h</name></expr></argument>, <argument pos:start="201:37" pos:end="201:37"><expr pos:start="201:37" pos:end="201:37"><name pos:start="201:37" pos:end="201:37">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="203:17" pos:end="203:51"><if pos:start="203:17" pos:end="203:51">if<condition pos:start="203:19" pos:end="203:23">(<expr pos:start="203:20" pos:end="203:22"><name pos:start="203:20" pos:end="203:22">pic</name></expr>)</condition><block type="pseudo" pos:start="203:25" pos:end="203:51"><block_content pos:start="203:25" pos:end="203:51"> <expr_stmt pos:start="203:25" pos:end="203:51"><expr pos:start="203:25" pos:end="203:50"><call pos:start="203:25" pos:end="203:50"><name pos:start="203:25" pos:end="203:39">unreference_pic</name><argument_list pos:start="203:40" pos:end="203:50">(<argument pos:start="203:41" pos:end="203:41"><expr pos:start="203:41" pos:end="203:41"><name pos:start="203:41" pos:end="203:41">h</name></expr></argument>, <argument pos:start="203:44" pos:end="203:46"><expr pos:start="203:44" pos:end="203:46"><name pos:start="203:44" pos:end="203:46">pic</name></expr></argument>, <argument pos:start="203:49" pos:end="203:49"><expr pos:start="203:49" pos:end="203:49"><literal type="number" pos:start="203:49" pos:end="203:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="207:13" pos:end="219:49"><expr pos:start="207:13" pos:end="219:48"><name pos:start="207:13" pos:end="207:39"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:34">current_picture_ptr</name><operator pos:start="207:35" pos:end="207:36">-&gt;</operator><name pos:start="207:37" pos:end="207:39">poc</name></name><operator pos:start="207:40" pos:end="207:40">=</operator>

            <name pos:start="209:13" pos:end="209:48"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:34">current_picture_ptr</name><operator pos:start="209:35" pos:end="209:36">-&gt;</operator><name pos:start="209:37" pos:end="209:45">field_poc</name><index pos:start="209:46" pos:end="209:48">[<expr pos:start="209:47" pos:end="209:47"><literal type="number" pos:start="209:47" pos:end="209:47">0</literal></expr>]</index></name><operator pos:start="209:49" pos:end="209:49">=</operator>

            <name pos:start="211:13" pos:end="211:48"><name pos:start="211:13" pos:end="211:13">s</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:34">current_picture_ptr</name><operator pos:start="211:35" pos:end="211:36">-&gt;</operator><name pos:start="211:37" pos:end="211:45">field_poc</name><index pos:start="211:46" pos:end="211:48">[<expr pos:start="211:47" pos:end="211:47"><literal type="number" pos:start="211:47" pos:end="211:47">1</literal></expr>]</index></name><operator pos:start="211:49" pos:end="211:49">=</operator>

            <name pos:start="213:13" pos:end="213:22"><name pos:start="213:13" pos:end="213:13">h</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:22">poc_lsb</name></name><operator pos:start="213:23" pos:end="213:23">=</operator>

            <name pos:start="215:13" pos:end="215:22"><name pos:start="215:13" pos:end="215:13">h</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:22">poc_msb</name></name><operator pos:start="215:23" pos:end="215:23">=</operator>

            <name pos:start="217:13" pos:end="217:24"><name pos:start="217:13" pos:end="217:13">h</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:24">frame_num</name></name><operator pos:start="217:25" pos:end="217:25">=</operator>

            <name pos:start="219:13" pos:end="219:45"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:34">current_picture_ptr</name><operator pos:start="219:35" pos:end="219:36">-&gt;</operator><name pos:start="219:37" pos:end="219:45">frame_num</name></name><operator pos:start="219:46" pos:end="219:46">=</operator> <literal type="number" pos:start="219:48" pos:end="219:48">0</literal></expr>;</expr_stmt>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        <default pos:start="223:9" pos:end="223:16">default:</default> <expr_stmt pos:start="223:18" pos:end="223:27"><expr pos:start="223:18" pos:end="223:26"><call pos:start="223:18" pos:end="223:26"><name pos:start="223:18" pos:end="223:23">assert</name><argument_list pos:start="223:24" pos:end="223:26">(<argument pos:start="223:25" pos:end="223:25"><expr pos:start="223:25" pos:end="223:25"><literal type="number" pos:start="223:25" pos:end="223:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="231:5" pos:end="283:5"><if pos:start="231:5" pos:end="283:5">if <condition pos:start="231:8" pos:end="233:65">(<expr pos:start="231:9" pos:end="233:64"><operator pos:start="231:9" pos:end="231:9">!</operator><name pos:start="231:10" pos:end="231:29">current_ref_assigned</name> <operator pos:start="231:31" pos:end="231:32">&amp;&amp;</operator> <name pos:start="231:34" pos:end="231:46">FIELD_PICTURE</name> <operator pos:start="231:48" pos:end="231:49">&amp;&amp;</operator>

            <operator pos:start="233:13" pos:end="233:13">!</operator><name pos:start="233:14" pos:end="233:27"><name pos:start="233:14" pos:end="233:14">s</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:27">first_field</name></name> <operator pos:start="233:29" pos:end="233:30">&amp;&amp;</operator> <name pos:start="233:32" pos:end="233:64"><name pos:start="233:32" pos:end="233:32">s</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:53">current_picture_ptr</name><operator pos:start="233:54" pos:end="233:55">-&gt;</operator><name pos:start="233:56" pos:end="233:64">reference</name></name></expr>)</condition> <block pos:start="233:67" pos:end="283:5">{<block_content pos:start="249:9" pos:end="281:33">



        <comment type="block" pos:start="237:9" pos:end="247:11">/* Second field of complementary field pair; the first field of

         * which is already referenced. If short referenced, it

         * should be first entry in short_ref. If not, it must exist

         * in long_ref; trying to put it on the short list here is an

         * error in the encoded bit stream (ref: 7.4.3, NOTE 2 and 3).

         */</comment>

        <if_stmt pos:start="249:9" pos:end="279:9"><if pos:start="249:9" pos:end="255:9">if <condition pos:start="249:12" pos:end="249:76">(<expr pos:start="249:13" pos:end="249:75"><name pos:start="249:13" pos:end="249:30"><name pos:start="249:13" pos:end="249:13">h</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:30">short_ref_count</name></name> <operator pos:start="249:32" pos:end="249:33">&amp;&amp;</operator> <name pos:start="249:35" pos:end="249:49"><name pos:start="249:35" pos:end="249:35">h</name><operator pos:start="249:36" pos:end="249:37">-&gt;</operator><name pos:start="249:38" pos:end="249:46">short_ref</name><index pos:start="249:47" pos:end="249:49">[<expr pos:start="249:48" pos:end="249:48"><literal type="number" pos:start="249:48" pos:end="249:48">0</literal></expr>]</index></name> <operator pos:start="249:51" pos:end="249:52">==</operator> <name pos:start="249:54" pos:end="249:75"><name pos:start="249:54" pos:end="249:54">s</name><operator pos:start="249:55" pos:end="249:56">-&gt;</operator><name pos:start="249:57" pos:end="249:75">current_picture_ptr</name></name></expr>)</condition> <block pos:start="249:78" pos:end="255:9">{<block_content pos:start="253:13" pos:end="253:59">

            <comment type="block" pos:start="251:13" pos:end="251:50">/* Just mark the second field valid */</comment>

            <expr_stmt pos:start="253:13" pos:end="253:59"><expr pos:start="253:13" pos:end="253:58"><name pos:start="253:13" pos:end="253:45"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:34">current_picture_ptr</name><operator pos:start="253:35" pos:end="253:36">-&gt;</operator><name pos:start="253:37" pos:end="253:45">reference</name></name> <operator pos:start="253:47" pos:end="253:47">=</operator> <name pos:start="253:49" pos:end="253:58">PICT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="255:11" pos:end="265:9">else if <condition pos:start="255:19" pos:end="255:52">(<expr pos:start="255:20" pos:end="255:51"><name pos:start="255:20" pos:end="255:51"><name pos:start="255:20" pos:end="255:20">s</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:41">current_picture_ptr</name><operator pos:start="255:42" pos:end="255:43">-&gt;</operator><name pos:start="255:44" pos:end="255:51">long_ref</name></name></expr>)</condition> <block pos:start="255:54" pos:end="265:9">{<block_content pos:start="257:13" pos:end="263:77">

            <expr_stmt pos:start="257:13" pos:end="263:77"><expr pos:start="257:13" pos:end="263:76"><call pos:start="257:13" pos:end="263:76"><name pos:start="257:13" pos:end="257:18">av_log</name><argument_list pos:start="257:19" pos:end="263:76">(<argument pos:start="257:20" pos:end="257:29"><expr pos:start="257:20" pos:end="257:29"><name pos:start="257:20" pos:end="257:29"><name pos:start="257:20" pos:end="257:20">h</name><operator pos:start="257:21" pos:end="257:22">-&gt;</operator><name pos:start="257:23" pos:end="257:23">s</name><operator pos:start="257:24" pos:end="257:24">.</operator><name pos:start="257:25" pos:end="257:29">avctx</name></name></expr></argument>, <argument pos:start="257:32" pos:end="257:43"><expr pos:start="257:32" pos:end="257:43"><name pos:start="257:32" pos:end="257:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="257:46" pos:end="263:75"><expr pos:start="257:46" pos:end="263:75"><literal type="string" pos:start="257:46" pos:end="257:76">"illegal short term reference "</literal>

                                             <literal type="string" pos:start="259:46" pos:end="259:75">"assignment for second field "</literal>

                                             <literal type="string" pos:start="261:46" pos:end="261:75">"in complementary field pair "</literal>

                                             <literal type="string" pos:start="263:46" pos:end="263:75">"(first field is long term)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="265:11" pos:end="279:9">else <block pos:start="265:16" pos:end="279:9">{<block_content pos:start="277:13" pos:end="277:22">

            <comment type="block" pos:start="267:13" pos:end="275:15">/*

             * First field in reference, but not in any sensible place on our

             * reference lists. This shouldn't happen unless reference

             * handling somewhere else is wrong.

             */</comment>

            <expr_stmt pos:start="277:13" pos:end="277:22"><expr pos:start="277:13" pos:end="277:21"><call pos:start="277:13" pos:end="277:21"><name pos:start="277:13" pos:end="277:18">assert</name><argument_list pos:start="277:19" pos:end="277:21">(<argument pos:start="277:20" pos:end="277:20"><expr pos:start="277:20" pos:end="277:20"><literal type="number" pos:start="277:20" pos:end="277:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:33"><expr pos:start="281:9" pos:end="281:32"><name pos:start="281:9" pos:end="281:28">current_ref_assigned</name> <operator pos:start="281:30" pos:end="281:30">=</operator> <literal type="number" pos:start="281:32" pos:end="281:32">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="315:5"><if pos:start="287:5" pos:end="315:5">if<condition pos:start="287:7" pos:end="287:29">(<expr pos:start="287:8" pos:end="287:28"><operator pos:start="287:8" pos:end="287:8">!</operator><name pos:start="287:9" pos:end="287:28">current_ref_assigned</name></expr>)</condition><block pos:start="287:30" pos:end="315:5">{<block_content pos:start="289:9" pos:end="313:66">

        <expr_stmt pos:start="289:9" pos:end="289:64"><expr pos:start="289:9" pos:end="289:63"><name pos:start="289:9" pos:end="289:11">pic</name><operator pos:start="289:12" pos:end="289:12">=</operator> <call pos:start="289:14" pos:end="289:63"><name pos:start="289:14" pos:end="289:25">remove_short</name><argument_list pos:start="289:26" pos:end="289:63">(<argument pos:start="289:27" pos:end="289:27"><expr pos:start="289:27" pos:end="289:27"><name pos:start="289:27" pos:end="289:27">h</name></expr></argument>, <argument pos:start="289:30" pos:end="289:62"><expr pos:start="289:30" pos:end="289:62"><name pos:start="289:30" pos:end="289:62"><name pos:start="289:30" pos:end="289:30">s</name><operator pos:start="289:31" pos:end="289:32">-&gt;</operator><name pos:start="289:33" pos:end="289:51">current_picture_ptr</name><operator pos:start="289:52" pos:end="289:53">-&gt;</operator><name pos:start="289:54" pos:end="289:62">frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="291:9" pos:end="297:9"><if pos:start="291:9" pos:end="297:9">if<condition pos:start="291:11" pos:end="291:15">(<expr pos:start="291:12" pos:end="291:14"><name pos:start="291:12" pos:end="291:14">pic</name></expr>)</condition><block pos:start="291:16" pos:end="297:9">{<block_content pos:start="293:13" pos:end="295:91">

            <expr_stmt pos:start="293:13" pos:end="293:39"><expr pos:start="293:13" pos:end="293:38"><call pos:start="293:13" pos:end="293:38"><name pos:start="293:13" pos:end="293:27">unreference_pic</name><argument_list pos:start="293:28" pos:end="293:38">(<argument pos:start="293:29" pos:end="293:29"><expr pos:start="293:29" pos:end="293:29"><name pos:start="293:29" pos:end="293:29">h</name></expr></argument>, <argument pos:start="293:32" pos:end="293:34"><expr pos:start="293:32" pos:end="293:34"><name pos:start="293:32" pos:end="293:34">pic</name></expr></argument>, <argument pos:start="293:37" pos:end="293:37"><expr pos:start="293:37" pos:end="293:37"><literal type="number" pos:start="293:37" pos:end="293:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:91"><expr pos:start="295:13" pos:end="295:90"><call pos:start="295:13" pos:end="295:90"><name pos:start="295:13" pos:end="295:18">av_log</name><argument_list pos:start="295:19" pos:end="295:90">(<argument pos:start="295:20" pos:end="295:29"><expr pos:start="295:20" pos:end="295:29"><name pos:start="295:20" pos:end="295:29"><name pos:start="295:20" pos:end="295:20">h</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:23">s</name><operator pos:start="295:24" pos:end="295:24">.</operator><name pos:start="295:25" pos:end="295:29">avctx</name></name></expr></argument>, <argument pos:start="295:32" pos:end="295:43"><expr pos:start="295:32" pos:end="295:43"><name pos:start="295:32" pos:end="295:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="295:46" pos:end="295:89"><expr pos:start="295:46" pos:end="295:89"><literal type="string" pos:start="295:46" pos:end="295:89">"illegal short term buffer state detected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="301:9" pos:end="303:93"><if pos:start="301:9" pos:end="303:93">if<condition pos:start="301:11" pos:end="301:30">(<expr pos:start="301:12" pos:end="301:29"><name pos:start="301:12" pos:end="301:29"><name pos:start="301:12" pos:end="301:12">h</name><operator pos:start="301:13" pos:end="301:14">-&gt;</operator><name pos:start="301:15" pos:end="301:29">short_ref_count</name></name></expr>)</condition><block type="pseudo" pos:start="303:13" pos:end="303:93"><block_content pos:start="303:13" pos:end="303:93">

            <expr_stmt pos:start="303:13" pos:end="303:93"><expr pos:start="303:13" pos:end="303:92"><call pos:start="303:13" pos:end="303:92"><name pos:start="303:13" pos:end="303:19">memmove</name><argument_list pos:start="303:20" pos:end="303:92">(<argument pos:start="303:21" pos:end="303:36"><expr pos:start="303:21" pos:end="303:36"><operator pos:start="303:21" pos:end="303:21">&amp;</operator><name pos:start="303:22" pos:end="303:36"><name pos:start="303:22" pos:end="303:22">h</name><operator pos:start="303:23" pos:end="303:24">-&gt;</operator><name pos:start="303:25" pos:end="303:33">short_ref</name><index pos:start="303:34" pos:end="303:36">[<expr pos:start="303:35" pos:end="303:35"><literal type="number" pos:start="303:35" pos:end="303:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="303:39" pos:end="303:54"><expr pos:start="303:39" pos:end="303:54"><operator pos:start="303:39" pos:end="303:39">&amp;</operator><name pos:start="303:40" pos:end="303:54"><name pos:start="303:40" pos:end="303:40">h</name><operator pos:start="303:41" pos:end="303:42">-&gt;</operator><name pos:start="303:43" pos:end="303:51">short_ref</name><index pos:start="303:52" pos:end="303:54">[<expr pos:start="303:53" pos:end="303:53"><literal type="number" pos:start="303:53" pos:end="303:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="303:57" pos:end="303:91"><expr pos:start="303:57" pos:end="303:91"><name pos:start="303:57" pos:end="303:74"><name pos:start="303:57" pos:end="303:57">h</name><operator pos:start="303:58" pos:end="303:59">-&gt;</operator><name pos:start="303:60" pos:end="303:74">short_ref_count</name></name><operator pos:start="303:75" pos:end="303:75">*</operator><sizeof pos:start="303:76" pos:end="303:91">sizeof<argument_list pos:start="303:82" pos:end="303:91">(<argument pos:start="303:83" pos:end="303:90"><expr pos:start="303:83" pos:end="303:90"><name pos:start="303:83" pos:end="303:89">Picture</name><operator pos:start="303:90" pos:end="303:90">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:48"><expr pos:start="307:9" pos:end="307:47"><name pos:start="307:9" pos:end="307:23"><name pos:start="307:9" pos:end="307:9">h</name><operator pos:start="307:10" pos:end="307:11">-&gt;</operator><name pos:start="307:12" pos:end="307:20">short_ref</name><index pos:start="307:21" pos:end="307:23">[<expr pos:start="307:22" pos:end="307:22"><literal type="number" pos:start="307:22" pos:end="307:22">0</literal></expr>]</index></name><operator pos:start="307:24" pos:end="307:24">=</operator> <name pos:start="307:26" pos:end="307:47"><name pos:start="307:26" pos:end="307:26">s</name><operator pos:start="307:27" pos:end="307:28">-&gt;</operator><name pos:start="307:29" pos:end="307:47">current_picture_ptr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:36"><expr pos:start="309:9" pos:end="309:35"><name pos:start="309:9" pos:end="309:23"><name pos:start="309:9" pos:end="309:9">h</name><operator pos:start="309:10" pos:end="309:11">-&gt;</operator><name pos:start="309:12" pos:end="309:20">short_ref</name><index pos:start="309:21" pos:end="309:23">[<expr pos:start="309:22" pos:end="309:22"><literal type="number" pos:start="309:22" pos:end="309:22">0</literal></expr>]</index></name><operator pos:start="309:24" pos:end="309:25">-&gt;</operator><name pos:start="309:26" pos:end="309:33">long_ref</name><operator pos:start="309:34" pos:end="309:34">=</operator><literal type="number" pos:start="309:35" pos:end="309:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:29"><expr pos:start="311:9" pos:end="311:28"><name pos:start="311:9" pos:end="311:26"><name pos:start="311:9" pos:end="311:9">h</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:26">short_ref_count</name></name><operator pos:start="311:27" pos:end="311:28">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:66"><expr pos:start="313:9" pos:end="313:65"><name pos:start="313:9" pos:end="313:41"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:30">current_picture_ptr</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:41">reference</name></name> <operator pos:start="313:43" pos:end="313:44">|=</operator> <name pos:start="313:46" pos:end="313:65"><name pos:start="313:46" pos:end="313:46">s</name><operator pos:start="313:47" pos:end="313:48">-&gt;</operator><name pos:start="313:49" pos:end="313:65">picture_structure</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="319:5" pos:end="365:5"><if pos:start="319:5" pos:end="365:5">if <condition pos:start="319:8" pos:end="319:72">(<expr pos:start="319:9" pos:end="319:71"><name pos:start="319:9" pos:end="319:25"><name pos:start="319:9" pos:end="319:9">h</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:25">long_ref_count</name></name> <operator pos:start="319:27" pos:end="319:27">+</operator> <name pos:start="319:29" pos:end="319:46"><name pos:start="319:29" pos:end="319:29">h</name><operator pos:start="319:30" pos:end="319:31">-&gt;</operator><name pos:start="319:32" pos:end="319:46">short_ref_count</name></name> <operator pos:start="319:48" pos:end="319:48">&gt;</operator> <name pos:start="319:50" pos:end="319:71"><name pos:start="319:50" pos:end="319:50">h</name><operator pos:start="319:51" pos:end="319:52">-&gt;</operator><name pos:start="319:53" pos:end="319:55">sps</name><operator pos:start="319:56" pos:end="319:56">.</operator><name pos:start="319:57" pos:end="319:71">ref_frame_count</name></name></expr>)</condition><block pos:start="319:73" pos:end="365:5">{<block_content pos:start="331:9" pos:end="363:35">



        <comment type="block" pos:start="323:9" pos:end="329:11">/* We have too many reference frames, probably due to corrupted

         * stream. Need to discard one frame. Prevents overrun of the

         * short_ref and long_ref buffers.

         */</comment>

        <expr_stmt pos:start="331:9" pos:end="335:51"><expr pos:start="331:9" pos:end="335:50"><call pos:start="331:9" pos:end="335:50"><name pos:start="331:9" pos:end="331:14">av_log</name><argument_list pos:start="331:15" pos:end="335:50">(<argument pos:start="331:16" pos:end="331:25"><expr pos:start="331:16" pos:end="331:25"><name pos:start="331:16" pos:end="331:25"><name pos:start="331:16" pos:end="331:16">h</name><operator pos:start="331:17" pos:end="331:18">-&gt;</operator><name pos:start="331:19" pos:end="331:19">s</name><operator pos:start="331:20" pos:end="331:20">.</operator><name pos:start="331:21" pos:end="331:25">avctx</name></name></expr></argument>, <argument pos:start="331:28" pos:end="331:39"><expr pos:start="331:28" pos:end="331:39"><name pos:start="331:28" pos:end="331:39">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="333:16" pos:end="335:49"><expr pos:start="333:16" pos:end="335:49"><literal type="string" pos:start="333:16" pos:end="333:66">"number of reference frames exceeds max (probably "</literal>

               <literal type="string" pos:start="335:16" pos:end="335:49">"corrupt input), discarding one\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="339:9" pos:end="361:9"><if pos:start="339:9" pos:end="355:9">if <condition pos:start="339:12" pos:end="339:53">(<expr pos:start="339:13" pos:end="339:52"><name pos:start="339:13" pos:end="339:29"><name pos:start="339:13" pos:end="339:13">h</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:29">long_ref_count</name></name> <operator pos:start="339:31" pos:end="339:32">&amp;&amp;</operator> <operator pos:start="339:34" pos:end="339:34">!</operator><name pos:start="339:35" pos:end="339:52"><name pos:start="339:35" pos:end="339:35">h</name><operator pos:start="339:36" pos:end="339:37">-&gt;</operator><name pos:start="339:38" pos:end="339:52">short_ref_count</name></name></expr>)</condition> <block pos:start="339:55" pos:end="355:9">{<block_content pos:start="341:13" pos:end="353:39">

            <for pos:start="341:13" pos:end="345:26">for <control pos:start="341:17" pos:end="341:36">(<init pos:start="341:18" pos:end="341:23"><expr pos:start="341:18" pos:end="341:22"><name pos:start="341:18" pos:end="341:18">i</name> <operator pos:start="341:20" pos:end="341:20">=</operator> <literal type="number" pos:start="341:22" pos:end="341:22">0</literal></expr>;</init> <condition pos:start="341:25" pos:end="341:31"><expr pos:start="341:25" pos:end="341:30"><name pos:start="341:25" pos:end="341:25">i</name> <operator pos:start="341:27" pos:end="341:27">&lt;</operator> <literal type="number" pos:start="341:29" pos:end="341:30">16</literal></expr>;</condition> <incr pos:start="341:33" pos:end="341:35"><expr pos:start="341:33" pos:end="341:35"><operator pos:start="341:33" pos:end="341:34">++</operator><name pos:start="341:35" pos:end="341:35">i</name></expr></incr>)</control><block type="pseudo" pos:start="343:17" pos:end="345:26"><block_content pos:start="343:17" pos:end="345:26">

                <if_stmt pos:start="343:17" pos:end="345:26"><if pos:start="343:17" pos:end="345:26">if <condition pos:start="343:20" pos:end="343:35">(<expr pos:start="343:21" pos:end="343:34"><name pos:start="343:21" pos:end="343:34"><name pos:start="343:21" pos:end="343:21">h</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:31">long_ref</name><index pos:start="343:32" pos:end="343:34">[<expr pos:start="343:33" pos:end="343:33"><name pos:start="343:33" pos:end="343:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="345:21" pos:end="345:26"><block_content pos:start="345:21" pos:end="345:26">

                    <break pos:start="345:21" pos:end="345:26">break;</break></block_content></block></if></if_stmt></block_content></block></for>



            <expr_stmt pos:start="349:13" pos:end="349:27"><expr pos:start="349:13" pos:end="349:26"><call pos:start="349:13" pos:end="349:26"><name pos:start="349:13" pos:end="349:18">assert</name><argument_list pos:start="349:19" pos:end="349:26">(<argument pos:start="349:20" pos:end="349:25"><expr pos:start="349:20" pos:end="349:25"><name pos:start="349:20" pos:end="349:20">i</name> <operator pos:start="349:22" pos:end="349:22">&lt;</operator> <literal type="number" pos:start="349:24" pos:end="349:25">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:33"><expr pos:start="351:13" pos:end="351:32"><name pos:start="351:13" pos:end="351:15">pic</name> <operator pos:start="351:17" pos:end="351:17">=</operator> <name pos:start="351:19" pos:end="351:32"><name pos:start="351:19" pos:end="351:19">h</name><operator pos:start="351:20" pos:end="351:21">-&gt;</operator><name pos:start="351:22" pos:end="351:29">long_ref</name><index pos:start="351:30" pos:end="351:32">[<expr pos:start="351:31" pos:end="351:31"><name pos:start="351:31" pos:end="351:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:39"><expr pos:start="353:13" pos:end="353:38"><call pos:start="353:13" pos:end="353:38"><name pos:start="353:13" pos:end="353:32">remove_long_at_index</name><argument_list pos:start="353:33" pos:end="353:38">(<argument pos:start="353:34" pos:end="353:34"><expr pos:start="353:34" pos:end="353:34"><name pos:start="353:34" pos:end="353:34">h</name></expr></argument>, <argument pos:start="353:37" pos:end="353:37"><expr pos:start="353:37" pos:end="353:37"><name pos:start="353:37" pos:end="353:37">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="355:11" pos:end="361:9">else <block pos:start="355:16" pos:end="361:9">{<block_content pos:start="357:13" pos:end="359:61">

            <expr_stmt pos:start="357:13" pos:end="357:55"><expr pos:start="357:13" pos:end="357:54"><name pos:start="357:13" pos:end="357:15">pic</name> <operator pos:start="357:17" pos:end="357:17">=</operator> <name pos:start="357:19" pos:end="357:54"><name pos:start="357:19" pos:end="357:19">h</name><operator pos:start="357:20" pos:end="357:21">-&gt;</operator><name pos:start="357:22" pos:end="357:30">short_ref</name><index pos:start="357:31" pos:end="357:54">[<expr pos:start="357:32" pos:end="357:53"><name pos:start="357:32" pos:end="357:49"><name pos:start="357:32" pos:end="357:32">h</name><operator pos:start="357:33" pos:end="357:34">-&gt;</operator><name pos:start="357:35" pos:end="357:49">short_ref_count</name></name> <operator pos:start="357:51" pos:end="357:51">-</operator> <literal type="number" pos:start="357:53" pos:end="357:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:61"><expr pos:start="359:13" pos:end="359:60"><call pos:start="359:13" pos:end="359:60"><name pos:start="359:13" pos:end="359:33">remove_short_at_index</name><argument_list pos:start="359:34" pos:end="359:60">(<argument pos:start="359:35" pos:end="359:35"><expr pos:start="359:35" pos:end="359:35"><name pos:start="359:35" pos:end="359:35">h</name></expr></argument>, <argument pos:start="359:38" pos:end="359:59"><expr pos:start="359:38" pos:end="359:59"><name pos:start="359:38" pos:end="359:55"><name pos:start="359:38" pos:end="359:38">h</name><operator pos:start="359:39" pos:end="359:40">-&gt;</operator><name pos:start="359:41" pos:end="359:55">short_ref_count</name></name> <operator pos:start="359:57" pos:end="359:57">-</operator> <literal type="number" pos:start="359:59" pos:end="359:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:35"><expr pos:start="363:9" pos:end="363:34"><call pos:start="363:9" pos:end="363:34"><name pos:start="363:9" pos:end="363:23">unreference_pic</name><argument_list pos:start="363:24" pos:end="363:34">(<argument pos:start="363:25" pos:end="363:25"><expr pos:start="363:25" pos:end="363:25"><name pos:start="363:25" pos:end="363:25">h</name></expr></argument>, <argument pos:start="363:28" pos:end="363:30"><expr pos:start="363:28" pos:end="363:30"><name pos:start="363:28" pos:end="363:30">pic</name></expr></argument>, <argument pos:start="363:33" pos:end="363:33"><expr pos:start="363:33" pos:end="363:33"><literal type="number" pos:start="363:33" pos:end="363:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="369:5" pos:end="369:24"><expr pos:start="369:5" pos:end="369:23"><call pos:start="369:5" pos:end="369:23"><name pos:start="369:5" pos:end="369:20">print_short_term</name><argument_list pos:start="369:21" pos:end="369:23">(<argument pos:start="369:22" pos:end="369:22"><expr pos:start="369:22" pos:end="369:22"><name pos:start="369:22" pos:end="369:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="371:5" pos:end="371:23"><expr pos:start="371:5" pos:end="371:22"><call pos:start="371:5" pos:end="371:22"><name pos:start="371:5" pos:end="371:19">print_long_term</name><argument_list pos:start="371:20" pos:end="371:22">(<argument pos:start="371:21" pos:end="371:21"><expr pos:start="371:21" pos:end="371:21"><name pos:start="371:21" pos:end="371:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="373:5" pos:end="373:13">return <expr pos:start="373:12" pos:end="373:12"><literal type="number" pos:start="373:12" pos:end="373:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
