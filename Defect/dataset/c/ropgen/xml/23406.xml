<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23406.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_hrd</name><parameter_list pos:start="1:22" pos:end="1:55">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">VC9Context</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">v</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:50">GetBitContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">num</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:7">num</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:25"><name pos:start="9:11" pos:end="9:18">get_bits</name><argument_list pos:start="9:19" pos:end="9:25">(<argument pos:start="9:20" pos:end="9:21"><expr pos:start="9:20" pos:end="9:21"><name pos:start="9:20" pos:end="9:21">gb</name></expr></argument>, <argument pos:start="9:24" pos:end="9:24"><expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:55">(<expr pos:start="13:9" pos:end="13:54"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:9">v</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:19">hrd_rate</name></name> <operator pos:start="13:21" pos:end="13:22">||</operator> <name pos:start="13:24" pos:end="13:26">num</name> <operator pos:start="13:28" pos:end="13:29">!=</operator> <name pos:start="13:31" pos:end="13:54"><name pos:start="13:31" pos:end="13:31">v</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:54">hrd_num_leaky_buckets</name></name></expr>)</condition>

    <block pos:start="15:5" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:31">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><call pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:16">av_freep</name><argument_list pos:start="17:17" pos:end="17:30">(<argument pos:start="17:18" pos:end="17:29"><expr pos:start="17:18" pos:end="17:29"><operator pos:start="17:18" pos:end="17:18">&amp;</operator><name pos:start="17:19" pos:end="17:29"><name pos:start="17:19" pos:end="17:19">v</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:29">hrd_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="21:51"><if pos:start="21:5" pos:end="21:51">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:10">v</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:20">hrd_rate</name></name></expr>)</condition><block type="pseudo" pos:start="21:23" pos:end="21:51"><block_content pos:start="21:23" pos:end="21:51"> <expr_stmt pos:start="21:23" pos:end="21:51"><expr pos:start="21:23" pos:end="21:50"><name pos:start="21:23" pos:end="21:33"><name pos:start="21:23" pos:end="21:23">v</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:33">hrd_rate</name></name> <operator pos:start="21:35" pos:end="21:35">=</operator> <call pos:start="21:37" pos:end="21:50"><name pos:start="21:37" pos:end="21:45">av_malloc</name><argument_list pos:start="21:46" pos:end="21:50">(<argument pos:start="21:47" pos:end="21:49"><expr pos:start="21:47" pos:end="21:49"><name pos:start="21:47" pos:end="21:49">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="23:32"><if pos:start="23:5" pos:end="23:32">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:10">v</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:20">hrd_rate</name></name></expr>)</condition><block type="pseudo" pos:start="23:23" pos:end="23:32"><block_content pos:start="23:23" pos:end="23:32"> <return pos:start="23:23" pos:end="23:32">return <expr pos:start="23:30" pos:end="23:31"><operator pos:start="23:30" pos:end="23:30">-</operator><literal type="number" pos:start="23:31" pos:end="23:31">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:57">(<expr pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:9">v</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:21">hrd_buffer</name></name> <operator pos:start="27:23" pos:end="27:24">||</operator> <name pos:start="27:26" pos:end="27:28">num</name> <operator pos:start="27:30" pos:end="27:31">!=</operator> <name pos:start="27:33" pos:end="27:56"><name pos:start="27:33" pos:end="27:33">v</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:56">hrd_num_leaky_buckets</name></name></expr>)</condition>

    <block pos:start="29:5" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:33">

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><call pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:16">av_freep</name><argument_list pos:start="31:17" pos:end="31:32">(<argument pos:start="31:18" pos:end="31:31"><expr pos:start="31:18" pos:end="31:31"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:31"><name pos:start="31:19" pos:end="31:19">v</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:31">hrd_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="35:55"><if pos:start="35:5" pos:end="35:55">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:10">v</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:22">hrd_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="35:25" pos:end="35:55"><block_content pos:start="35:25" pos:end="35:55"> <expr_stmt pos:start="35:25" pos:end="35:55"><expr pos:start="35:25" pos:end="35:54"><name pos:start="35:25" pos:end="35:37"><name pos:start="35:25" pos:end="35:25">v</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:37">hrd_buffer</name></name> <operator pos:start="35:39" pos:end="35:39">=</operator> <call pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:49">av_malloc</name><argument_list pos:start="35:50" pos:end="35:54">(<argument pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:53">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="37:34"><if pos:start="37:5" pos:end="37:34">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:22"><name pos:start="37:10" pos:end="37:10">v</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:22">hrd_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="37:25" pos:end="37:34"><block_content pos:start="37:25" pos:end="37:34"> <return pos:start="37:25" pos:end="37:34">return <expr pos:start="37:32" pos:end="37:33"><operator pos:start="37:32" pos:end="37:32">-</operator><literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:5">v</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:28">hrd_num_leaky_buckets</name></name> <operator pos:start="41:30" pos:end="41:30">=</operator> <name pos:start="41:32" pos:end="41:34">num</name></expr>;</expr_stmt>



    <comment type="line" pos:start="45:5" pos:end="45:33">//exponent in base-2 for rate</comment>

    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><name pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:5">v</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:24">bit_rate_exponent</name></name> <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="47:42"><name pos:start="47:28" pos:end="47:35">get_bits</name><argument_list pos:start="47:36" pos:end="47:42">(<argument pos:start="47:37" pos:end="47:38"><expr pos:start="47:37" pos:end="47:38"><name pos:start="47:37" pos:end="47:38">gb</name></expr></argument>, <argument pos:start="47:41" pos:end="47:41"><expr pos:start="47:41" pos:end="47:41"><literal type="number" pos:start="47:41" pos:end="47:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="49:5" pos:end="49:40">//exponent in base-2 for buffer_size</comment>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:5">v</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:27">buffer_size_exponent</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <call pos:start="51:31" pos:end="51:45"><name pos:start="51:31" pos:end="51:38">get_bits</name><argument_list pos:start="51:39" pos:end="51:45">(<argument pos:start="51:40" pos:end="51:41"><expr pos:start="51:40" pos:end="51:41"><name pos:start="51:40" pos:end="51:41">gb</name></expr></argument>, <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="55:5" pos:end="89:5">for <control pos:start="55:9" pos:end="55:25">(<init pos:start="55:10" pos:end="55:13"><expr pos:start="55:10" pos:end="55:12"><name pos:start="55:10" pos:end="55:10">i</name><operator pos:start="55:11" pos:end="55:11">=</operator><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</init> <condition pos:start="55:15" pos:end="55:20"><expr pos:start="55:15" pos:end="55:19"><name pos:start="55:15" pos:end="55:15">i</name><operator pos:start="55:16" pos:end="55:16">&lt;</operator><name pos:start="55:17" pos:end="55:19">num</name></expr>;</condition> <incr pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:22">i</name><operator pos:start="55:23" pos:end="55:24">++</operator></expr></incr>)</control>

    <block pos:start="57:5" pos:end="89:5">{<block_content pos:start="61:9" pos:end="87:9">

        <comment type="line" pos:start="59:9" pos:end="59:54">//mantissae, ordered (if not, use a function ?</comment>

        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:9">v</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:19">hrd_rate</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">i</name></expr>]</index></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:41"><name pos:start="61:26" pos:end="61:33">get_bits</name><argument_list pos:start="61:34" pos:end="61:41">(<argument pos:start="61:35" pos:end="61:36"><expr pos:start="61:35" pos:end="61:36"><name pos:start="61:35" pos:end="61:36">gb</name></expr></argument>, <argument pos:start="61:39" pos:end="61:40"><expr pos:start="61:39" pos:end="61:40"><literal type="number" pos:start="61:39" pos:end="61:40">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="73:9"><if pos:start="63:9" pos:end="73:9">if <condition pos:start="63:12" pos:end="63:50">(<expr pos:start="63:13" pos:end="63:49"><name pos:start="63:13" pos:end="63:13">i</name> <operator pos:start="63:15" pos:end="63:16">&amp;&amp;</operator> <name pos:start="63:18" pos:end="63:33"><name pos:start="63:18" pos:end="63:18">v</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:28">hrd_rate</name><index pos:start="63:29" pos:end="63:33">[<expr pos:start="63:30" pos:end="63:32"><name pos:start="63:30" pos:end="63:30">i</name><operator pos:start="63:31" pos:end="63:31">-</operator><literal type="number" pos:start="63:32" pos:end="63:32">1</literal></expr>]</index></name><operator pos:start="63:34" pos:end="63:35">&gt;=</operator><name pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:36">v</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:46">hrd_rate</name><index pos:start="63:47" pos:end="63:49">[<expr pos:start="63:48" pos:end="63:48"><name pos:start="63:48" pos:end="63:48">i</name></expr>]</index></name></expr>)</condition>

        <block pos:start="65:9" pos:end="73:9">{<block_content pos:start="67:13" pos:end="71:22">

            <expr_stmt pos:start="67:13" pos:end="69:67"><expr pos:start="67:13" pos:end="69:66"><call pos:start="67:13" pos:end="69:66"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="69:66">(<argument pos:start="67:20" pos:end="67:20"><expr pos:start="67:20" pos:end="67:20"><name pos:start="67:20" pos:end="67:20">v</name></expr></argument>, <argument pos:start="67:23" pos:end="67:34"><expr pos:start="67:23" pos:end="67:34"><name pos:start="67:23" pos:end="67:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:37" pos:end="69:31"><expr pos:start="67:37" pos:end="69:31"><literal type="string" pos:start="67:37" pos:end="67:75">"HDR Rates aren't strictly increasing:"</literal>

                   <literal type="string" pos:start="69:20" pos:end="69:31">"%i vs %i\n"</literal></expr></argument>, <argument pos:start="69:34" pos:end="69:49"><expr pos:start="69:34" pos:end="69:49"><name pos:start="69:34" pos:end="69:49"><name pos:start="69:34" pos:end="69:34">v</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:44">hrd_rate</name><index pos:start="69:45" pos:end="69:49">[<expr pos:start="69:46" pos:end="69:48"><name pos:start="69:46" pos:end="69:46">i</name><operator pos:start="69:47" pos:end="69:47">-</operator><literal type="number" pos:start="69:48" pos:end="69:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:52" pos:end="69:65"><expr pos:start="69:52" pos:end="69:65"><name pos:start="69:52" pos:end="69:65"><name pos:start="69:52" pos:end="69:52">v</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:62">hrd_rate</name><index pos:start="69:63" pos:end="69:65">[<expr pos:start="69:64" pos:end="69:64"><name pos:start="69:64" pos:end="69:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="71:13" pos:end="71:22">return <expr pos:start="71:20" pos:end="71:21"><operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:44"><expr pos:start="75:9" pos:end="75:43"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:9">v</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">hrd_buffer</name><index pos:start="75:22" pos:end="75:24">[<expr pos:start="75:23" pos:end="75:23"><name pos:start="75:23" pos:end="75:23">i</name></expr>]</index></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <call pos:start="75:28" pos:end="75:43"><name pos:start="75:28" pos:end="75:35">get_bits</name><argument_list pos:start="75:36" pos:end="75:43">(<argument pos:start="75:37" pos:end="75:38"><expr pos:start="75:37" pos:end="75:38"><name pos:start="75:37" pos:end="75:38">gb</name></expr></argument>, <argument pos:start="75:41" pos:end="75:42"><expr pos:start="75:41" pos:end="75:42"><literal type="number" pos:start="75:41" pos:end="75:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="87:9">if <condition pos:start="77:12" pos:end="77:53">(<expr pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:13">i</name> <operator pos:start="77:15" pos:end="77:16">&amp;&amp;</operator> <name pos:start="77:18" pos:end="77:35"><name pos:start="77:18" pos:end="77:18">v</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:30">hrd_buffer</name><index pos:start="77:31" pos:end="77:35">[<expr pos:start="77:32" pos:end="77:34"><name pos:start="77:32" pos:end="77:32">i</name><operator pos:start="77:33" pos:end="77:33">-</operator><literal type="number" pos:start="77:34" pos:end="77:34">1</literal></expr>]</index></name><operator pos:start="77:36" pos:end="77:36">&lt;</operator><name pos:start="77:37" pos:end="77:52"><name pos:start="77:37" pos:end="77:37">v</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:49">hrd_buffer</name><index pos:start="77:50" pos:end="77:52">[<expr pos:start="77:51" pos:end="77:51"><name pos:start="77:51" pos:end="77:51">i</name></expr>]</index></name></expr>)</condition>

        <block pos:start="79:9" pos:end="87:9">{<block_content pos:start="81:13" pos:end="85:22">

            <expr_stmt pos:start="81:13" pos:end="83:71"><expr pos:start="81:13" pos:end="83:70"><call pos:start="81:13" pos:end="83:70"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="83:70">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">v</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="83:31"><expr pos:start="81:37" pos:end="83:31"><literal type="string" pos:start="81:37" pos:end="81:68">"HDR Buffers aren't decreasing:"</literal>

                   <literal type="string" pos:start="83:20" pos:end="83:31">"%i vs %i\n"</literal></expr></argument>, <argument pos:start="83:34" pos:end="83:51"><expr pos:start="83:34" pos:end="83:51"><name pos:start="83:34" pos:end="83:51"><name pos:start="83:34" pos:end="83:34">v</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:46">hrd_buffer</name><index pos:start="83:47" pos:end="83:51">[<expr pos:start="83:48" pos:end="83:50"><name pos:start="83:48" pos:end="83:48">i</name><operator pos:start="83:49" pos:end="83:49">-</operator><literal type="number" pos:start="83:50" pos:end="83:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="83:54" pos:end="83:69"><expr pos:start="83:54" pos:end="83:69"><name pos:start="83:54" pos:end="83:69"><name pos:start="83:54" pos:end="83:54">v</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:66">hrd_buffer</name><index pos:start="83:67" pos:end="83:69">[<expr pos:start="83:68" pos:end="83:68"><name pos:start="83:68" pos:end="83:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:22">return <expr pos:start="85:20" pos:end="85:21"><operator pos:start="85:20" pos:end="85:20">-</operator><literal type="number" pos:start="85:21" pos:end="85:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
