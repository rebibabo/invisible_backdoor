<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18498.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">skeleton_header</name><parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:14">ogg</name></name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ogg</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">ogg_stream</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:25">os</name> <init pos:start="7:27" pos:end="7:46">= <expr pos:start="7:29" pos:end="7:46"><name pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:31">ogg</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">streams</name></name> <operator pos:start="7:42" pos:end="7:42">+</operator> <name pos:start="7:44" pos:end="7:46">idx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:34">[<expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name> <init pos:start="11:18" pos:end="11:39">= <expr pos:start="11:20" pos:end="11:39"><name pos:start="11:20" pos:end="11:26"><name pos:start="11:20" pos:end="11:21">os</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:26">buf</name></name> <operator pos:start="11:28" pos:end="11:28">+</operator> <name pos:start="11:30" pos:end="11:39"><name pos:start="11:30" pos:end="11:31">os</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:39">pstart</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:21">version_major</name></decl>, <decl pos:start="13:24" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:36">version_minor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:48"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:21">start_num</name></decl>, <decl pos:start="15:24" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:24" pos:end="15:32">start_den</name></decl>, <decl pos:start="15:35" pos:end="15:47"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:35" pos:end="15:47">start_granule</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">target_idx</name></decl>, <decl pos:start="17:21" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:30">start_time</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:10">strcpy</name><argument_list pos:start="21:11" pos:end="21:45">(<argument pos:start="21:12" pos:end="21:32"><expr pos:start="21:12" pos:end="21:32"><name pos:start="21:12" pos:end="21:32"><name pos:start="21:12" pos:end="21:13">st</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:20">codec</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:32">codec_name</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:44"><expr pos:start="21:35" pos:end="21:44"><literal type="string" pos:start="21:35" pos:end="21:44">"skeleton"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:6">st</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:13">codec</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">codec_type</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:45">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:22">(<expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:10">os</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">psize</name></name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">8</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="109:5"><if pos:start="33:5" pos:end="89:5">if <condition pos:start="33:8" pos:end="33:36">(<expr pos:start="33:9" pos:end="33:35"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:35"><name pos:start="33:10" pos:end="33:16">strncmp</name><argument_list pos:start="33:17" pos:end="33:35">(<argument pos:start="33:18" pos:end="33:20"><expr pos:start="33:18" pos:end="33:20"><name pos:start="33:18" pos:end="33:20">buf</name></expr></argument>, <argument pos:start="33:23" pos:end="33:31"><expr pos:start="33:23" pos:end="33:31"><literal type="string" pos:start="33:23" pos:end="33:31">"fishead"</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:34"><expr pos:start="33:34" pos:end="33:34"><literal type="number" pos:start="33:34" pos:end="33:34">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:38" pos:end="89:5">{<block_content pos:start="35:9" pos:end="87:9">

        <if_stmt pos:start="35:9" pos:end="37:22"><if pos:start="35:9" pos:end="37:22">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:14">os</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:21">psize</name></name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <literal type="number" pos:start="35:25" pos:end="35:26">64</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:22"><block_content pos:start="37:13" pos:end="37:22">

            <return pos:start="37:13" pos:end="37:22">return <expr pos:start="37:20" pos:end="37:21"><operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:21">version_major</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:31">AV_RL16</name><argument_list pos:start="41:32" pos:end="41:38">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:35">buf</name><operator pos:start="41:36" pos:end="41:36">+</operator><literal type="number" pos:start="41:37" pos:end="41:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:21">version_minor</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <call pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:31">AV_RL16</name><argument_list pos:start="43:32" pos:end="43:39">(<argument pos:start="43:33" pos:end="43:38"><expr pos:start="43:33" pos:end="43:38"><name pos:start="43:33" pos:end="43:35">buf</name><operator pos:start="43:36" pos:end="43:36">+</operator><literal type="number" pos:start="43:37" pos:end="43:38">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:53">(<expr pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:25">version_major</name> <operator pos:start="47:27" pos:end="47:28">!=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">3</literal> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <name pos:start="47:35" pos:end="47:47">version_major</name> <operator pos:start="47:49" pos:end="47:50">!=</operator> <literal type="number" pos:start="47:52" pos:end="47:52">4</literal></expr>)</condition> <block pos:start="47:55" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:22">

            <expr_stmt pos:start="49:13" pos:end="51:49"><expr pos:start="49:13" pos:end="51:48"><call pos:start="49:13" pos:end="51:48"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="51:48">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">s</name></expr></argument>, <argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="49:39" pos:end="49:72"><expr pos:start="49:39" pos:end="49:72"><literal type="string" pos:start="49:39" pos:end="49:72">"Unknown skeleton version %d.%d\n"</literal></expr></argument>,

                   <argument pos:start="51:20" pos:end="51:32"><expr pos:start="51:20" pos:end="51:32"><name pos:start="51:20" pos:end="51:32">version_major</name></expr></argument>, <argument pos:start="51:35" pos:end="51:47"><expr pos:start="51:35" pos:end="51:47"><name pos:start="51:35" pos:end="51:47">version_minor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="59:9" pos:end="59:74">// This is the overall start time. We use it for the start time of</comment>

        <comment type="line" pos:start="61:9" pos:end="61:69">// of the skeleton stream since if left unset lavf assumes 0,</comment>

        <comment type="line" pos:start="63:9" pos:end="63:57">// which we don't want since skeleton is timeless</comment>

        <comment type="line" pos:start="65:9" pos:end="65:70">// FIXME: the real meaning of this field is "start playback at</comment>

        <comment type="line" pos:start="67:9" pos:end="67:59">// this time which can be in the middle of a packet</comment>

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:17">start_num</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="69:35"><name pos:start="69:21" pos:end="69:27">AV_RL64</name><argument_list pos:start="69:28" pos:end="69:35">(<argument pos:start="69:29" pos:end="69:34"><expr pos:start="69:29" pos:end="69:34"><name pos:start="69:29" pos:end="69:31">buf</name><operator pos:start="69:32" pos:end="69:32">+</operator><literal type="number" pos:start="69:33" pos:end="69:34">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:17">start_den</name> <operator pos:start="71:19" pos:end="71:19">=</operator> <call pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:27">AV_RL64</name><argument_list pos:start="71:28" pos:end="71:35">(<argument pos:start="71:29" pos:end="71:34"><expr pos:start="71:29" pos:end="71:34"><name pos:start="71:29" pos:end="71:31">buf</name><operator pos:start="71:32" pos:end="71:32">+</operator><literal type="number" pos:start="71:33" pos:end="71:34">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="75:9" pos:end="87:9"><if pos:start="75:9" pos:end="87:9">if <condition pos:start="75:12" pos:end="75:22">(<expr pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:21">start_den</name></expr>)</condition> <block pos:start="75:24" pos:end="87:9">{<block_content pos:start="77:13" pos:end="85:40">

            <decl_stmt pos:start="77:13" pos:end="77:25"><decl pos:start="77:13" pos:end="77:24"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:24">base_den</name></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:77"><expr pos:start="79:13" pos:end="79:76"><call pos:start="79:13" pos:end="79:76"><name pos:start="79:13" pos:end="79:21">av_reduce</name><argument_list pos:start="79:22" pos:end="79:76">(<argument pos:start="79:23" pos:end="79:33"><expr pos:start="79:23" pos:end="79:33"><operator pos:start="79:23" pos:end="79:23">&amp;</operator><name pos:start="79:24" pos:end="79:33">start_time</name></expr></argument>, <argument pos:start="79:36" pos:end="79:44"><expr pos:start="79:36" pos:end="79:44"><operator pos:start="79:36" pos:end="79:36">&amp;</operator><name pos:start="79:37" pos:end="79:44">base_den</name></expr></argument>, <argument pos:start="79:47" pos:end="79:55"><expr pos:start="79:47" pos:end="79:55"><name pos:start="79:47" pos:end="79:55">start_num</name></expr></argument>, <argument pos:start="79:58" pos:end="79:66"><expr pos:start="79:58" pos:end="79:66"><name pos:start="79:58" pos:end="79:66">start_den</name></expr></argument>, <argument pos:start="79:69" pos:end="79:75"><expr pos:start="79:69" pos:end="79:75"><name pos:start="79:69" pos:end="79:75">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:53"><expr pos:start="81:13" pos:end="81:52"><call pos:start="81:13" pos:end="81:52"><name pos:start="81:13" pos:end="81:31">avpriv_set_pts_info</name><argument_list pos:start="81:32" pos:end="81:52">(<argument pos:start="81:33" pos:end="81:34"><expr pos:start="81:33" pos:end="81:34"><name pos:start="81:33" pos:end="81:34">st</name></expr></argument>, <argument pos:start="81:37" pos:end="81:38"><expr pos:start="81:37" pos:end="81:38"><literal type="number" pos:start="81:37" pos:end="81:38">64</literal></expr></argument>, <argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">1</literal></expr></argument>, <argument pos:start="81:44" pos:end="81:51"><expr pos:start="81:44" pos:end="81:51"><name pos:start="81:44" pos:end="81:51">base_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="85:40"><expr pos:start="83:13" pos:end="85:39"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:14">os</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:23">lastpts</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator>

            <name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:14">st</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:26">start_time</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <name pos:start="85:30" pos:end="85:39">start_time</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="109:5">else if <condition pos:start="89:15" pos:end="89:43">(<expr pos:start="89:16" pos:end="89:42"><operator pos:start="89:16" pos:end="89:16">!</operator><call pos:start="89:17" pos:end="89:42"><name pos:start="89:17" pos:end="89:23">strncmp</name><argument_list pos:start="89:24" pos:end="89:42">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">buf</name></expr></argument>, <argument pos:start="89:30" pos:end="89:38"><expr pos:start="89:30" pos:end="89:38"><literal type="string" pos:start="89:30" pos:end="89:38">"fisbone"</literal></expr></argument>, <argument pos:start="89:41" pos:end="89:41"><expr pos:start="89:41" pos:end="89:41"><literal type="number" pos:start="89:41" pos:end="89:41">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:45" pos:end="109:5">{<block_content pos:start="91:9" pos:end="107:9">

        <if_stmt pos:start="91:9" pos:end="93:22"><if pos:start="91:9" pos:end="93:22">if <condition pos:start="91:12" pos:end="91:27">(<expr pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:14">os</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">psize</name></name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <literal type="number" pos:start="91:25" pos:end="91:26">52</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:22"><block_content pos:start="93:13" pos:end="93:22">

            <return pos:start="93:13" pos:end="93:22">return <expr pos:start="93:20" pos:end="93:21"><operator pos:start="93:20" pos:end="93:20">-</operator><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:59"><expr pos:start="97:9" pos:end="97:58"><name pos:start="97:9" pos:end="97:18">target_idx</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <call pos:start="97:22" pos:end="97:58"><name pos:start="97:22" pos:end="97:36">ogg_find_stream</name><argument_list pos:start="97:37" pos:end="97:58">(<argument pos:start="97:38" pos:end="97:40"><expr pos:start="97:38" pos:end="97:40"><name pos:start="97:38" pos:end="97:40">ogg</name></expr></argument>, <argument pos:start="97:43" pos:end="97:57"><expr pos:start="97:43" pos:end="97:57"><call pos:start="97:43" pos:end="97:57"><name pos:start="97:43" pos:end="97:49">AV_RL32</name><argument_list pos:start="97:50" pos:end="97:57">(<argument pos:start="97:51" pos:end="97:56"><expr pos:start="97:51" pos:end="97:56"><name pos:start="97:51" pos:end="97:53">buf</name><operator pos:start="97:54" pos:end="97:54">+</operator><literal type="number" pos:start="97:55" pos:end="97:56">12</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:40"><expr pos:start="99:9" pos:end="99:39"><name pos:start="99:9" pos:end="99:21">start_granule</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <call pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:31">AV_RL64</name><argument_list pos:start="99:32" pos:end="99:39">(<argument pos:start="99:33" pos:end="99:38"><expr pos:start="99:33" pos:end="99:38"><name pos:start="99:33" pos:end="99:35">buf</name><operator pos:start="99:36" pos:end="99:36">+</operator><literal type="number" pos:start="99:37" pos:end="99:38">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:51">(<expr pos:start="101:13" pos:end="101:50"><name pos:start="101:13" pos:end="101:22">target_idx</name> <operator pos:start="101:24" pos:end="101:25">&gt;=</operator> <literal type="number" pos:start="101:27" pos:end="101:27">0</literal> <operator pos:start="101:29" pos:end="101:30">&amp;&amp;</operator> <name pos:start="101:32" pos:end="101:44">start_granule</name> <operator pos:start="101:46" pos:end="101:47">!=</operator> <operator pos:start="101:49" pos:end="101:49">-</operator><literal type="number" pos:start="101:50" pos:end="101:50">1</literal></expr>)</condition> <block pos:start="101:53" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:97">

            <expr_stmt pos:start="103:13" pos:end="105:97"><expr pos:start="103:13" pos:end="105:96"><name pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:15">ogg</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:24">streams</name><index pos:start="103:25" pos:end="103:36">[<expr pos:start="103:26" pos:end="103:35"><name pos:start="103:26" pos:end="103:35">target_idx</name></expr>]</index></name><operator pos:start="103:37" pos:end="103:37">.</operator><name pos:start="103:38" pos:end="103:44">lastpts</name> <operator pos:start="103:46" pos:end="103:46">=</operator>

            <name pos:start="105:13" pos:end="105:34"><name pos:start="105:13" pos:end="105:13">s</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:22">streams</name><index pos:start="105:23" pos:end="105:34">[<expr pos:start="105:24" pos:end="105:33"><name pos:start="105:24" pos:end="105:33">target_idx</name></expr>]</index></name><operator pos:start="105:35" pos:end="105:36">-&gt;</operator><name pos:start="105:37" pos:end="105:46">start_time</name> <operator pos:start="105:48" pos:end="105:48">=</operator> <call pos:start="105:50" pos:end="105:96"><name pos:start="105:50" pos:end="105:60">ogg_gptopts</name><argument_list pos:start="105:61" pos:end="105:96">(<argument pos:start="105:62" pos:end="105:62"><expr pos:start="105:62" pos:end="105:62"><name pos:start="105:62" pos:end="105:62">s</name></expr></argument>, <argument pos:start="105:65" pos:end="105:74"><expr pos:start="105:65" pos:end="105:74"><name pos:start="105:65" pos:end="105:74">target_idx</name></expr></argument>, <argument pos:start="105:77" pos:end="105:89"><expr pos:start="105:77" pos:end="105:89"><name pos:start="105:77" pos:end="105:89">start_granule</name></expr></argument>, <argument pos:start="105:92" pos:end="105:95"><expr pos:start="105:92" pos:end="105:95"><name pos:start="105:92" pos:end="105:95">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
