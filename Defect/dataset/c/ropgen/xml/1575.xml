<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1575.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">os_set_proc_name</name><parameter_list pos:start="1:22" pos:end="1:36">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:34"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:32">char</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="36:0">

<cpp:if pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:24"><call pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:24">(<argument pos:start="5:13" pos:end="5:23"><expr pos:start="5:13" pos:end="5:23"><name pos:start="5:13" pos:end="5:23">PR_SET_NAME</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:13">name</name><index pos:start="7:14" pos:end="7:17">[<expr pos:start="7:15" pos:end="7:16"><literal type="number" pos:start="7:15" pos:end="7:16">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:11">(<expr pos:start="9:9" pos:end="9:10"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:10">s</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:8">name</name><index pos:start="13:9" pos:end="13:26">[<expr pos:start="13:10" pos:end="13:25"><sizeof pos:start="13:10" pos:end="13:21">sizeof<argument_list pos:start="13:16" pos:end="13:21">(<argument pos:start="13:17" pos:end="13:20"><expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20">name</name></expr></argument>)</argument_list></sizeof> <operator pos:start="13:23" pos:end="13:23">-</operator> <literal type="number" pos:start="13:25" pos:end="13:25">1</literal></expr>]</index></name> <operator pos:start="13:28" pos:end="13:28">=</operator> <literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:11">strncpy</name><argument_list pos:start="15:12" pos:end="15:34">(<argument pos:start="15:13" pos:end="15:16"><expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">name</name></expr></argument>, <argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">s</name></expr></argument>, <argument pos:start="15:22" pos:end="15:33"><expr pos:start="15:22" pos:end="15:33"><sizeof pos:start="15:22" pos:end="15:33">sizeof<argument_list pos:start="15:28" pos:end="15:33">(<argument pos:start="15:29" pos:end="15:32"><expr pos:start="15:29" pos:end="15:32"><name pos:start="15:29" pos:end="15:32">name</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="17:5" pos:end="19:46">/* Could rewrite argv[0] too, but that's a bit more complicated.

       This simple way is enough for `top'. */</comment>

    <if_stmt pos:start="21:5" pos:end="30:0"><if pos:start="21:5" pos:end="30:0">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:13">prctl</name><argument_list pos:start="21:14" pos:end="21:32">(<argument pos:start="21:15" pos:end="21:25"><expr pos:start="21:15" pos:end="21:25"><name pos:start="21:15" pos:end="21:25">PR_SET_NAME</name></expr></argument>, <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">name</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:35" pos:end="30:0">{<block_content pos:start="23:9" pos:end="25:16">

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><call pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:14">perror</name><argument_list pos:start="23:15" pos:end="23:47">(<argument pos:start="23:16" pos:end="23:46"><expr pos:start="23:16" pos:end="23:46"><literal type="string" pos:start="23:16" pos:end="23:46">"unable to change process name"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:16"><expr pos:start="25:9" pos:end="25:15"><call pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:12">exit</name><argument_list pos:start="25:13" pos:end="25:15">(<argument pos:start="25:14" pos:end="25:14"><expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:else pos:start="29:1" pos:end="29:5">#<cpp:directive pos:start="29:2" pos:end="29:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="31:5" pos:end="31:73"><expr pos:start="31:5" pos:end="31:72"><call pos:start="31:5" pos:end="31:72"><name pos:start="31:5" pos:end="31:11">fprintf</name><argument_list pos:start="31:12" pos:end="31:72">(<argument pos:start="31:13" pos:end="31:18"><expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18">stderr</name></expr></argument>, <argument pos:start="31:21" pos:end="31:71"><expr pos:start="31:21" pos:end="31:71"><literal type="string" pos:start="31:21" pos:end="31:71">"Change of process name not supported by your OS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:11"><call pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:8">exit</name><argument_list pos:start="33:9" pos:end="33:11">(<argument pos:start="33:10" pos:end="33:10"><expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
