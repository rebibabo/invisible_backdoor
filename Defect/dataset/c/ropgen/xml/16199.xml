<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16199.c" pos:tabs="8"><function pos:start="1:1" pos:end="94:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_fill_line_with_color</name><parameter_list pos:start="1:28" pos:end="5:73">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:35">uint8_t</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:44"><name pos:start="1:38" pos:end="1:41">line</name><index pos:start="1:42" pos:end="1:44">[<expr pos:start="1:43" pos:end="1:43"><literal type="number" pos:start="1:43" pos:end="1:43">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:60">pixel_step</name><index pos:start="1:61" pos:end="1:63">[<expr pos:start="1:62" pos:end="1:62"><literal type="number" pos:start="1:62" pos:end="1:62">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">w</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:92"><decl pos:start="1:73" pos:end="1:92"><type pos:start="1:73" pos:end="1:89"><name pos:start="1:73" pos:end="1:79">uint8_t</name></type> <name pos:start="1:81" pos:end="1:92"><name pos:start="1:81" pos:end="1:89">dst_color</name><index pos:start="1:90" pos:end="1:92">[<expr pos:start="1:91" pos:end="1:91"><literal type="number" pos:start="1:91" pos:end="1:91">4</literal></expr>]</index></name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:54"><decl pos:start="3:29" pos:end="3:54"><type pos:start="3:29" pos:end="3:54"><name pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:32">enum</name> <name pos:start="3:34" pos:end="3:46">AVPixelFormat</name></name></type> <name pos:start="3:48" pos:end="3:54">pix_fmt</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:77"><decl pos:start="3:57" pos:end="3:77"><type pos:start="3:57" pos:end="3:74"><name pos:start="3:57" pos:end="3:63">uint8_t</name></type> <name pos:start="3:65" pos:end="3:77"><name pos:start="3:65" pos:end="3:74">rgba_color</name><index pos:start="3:75" pos:end="3:77">[<expr pos:start="3:76" pos:end="3:76"><literal type="number" pos:start="3:76" pos:end="3:76">4</literal></expr>]</index></name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:47"><decl pos:start="5:29" pos:end="5:47"><type pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:31">int</name> <modifier pos:start="5:33" pos:end="5:33">*</modifier></type><name pos:start="5:34" pos:end="5:47">is_packed_rgba</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:72"><decl pos:start="5:50" pos:end="5:72"><type pos:start="5:50" pos:end="5:69"><name pos:start="5:50" pos:end="5:56">uint8_t</name></type> <name pos:start="5:58" pos:end="5:72"><name pos:start="5:58" pos:end="5:69">rgba_map_ptr</name><index pos:start="5:70" pos:end="5:72">[<expr pos:start="5:71" pos:end="5:71"><literal type="number" pos:start="5:71" pos:end="5:71">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="94:1">{<block_content pos:start="9:5" pos:end="92:13">

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:20">rgba_map</name><index pos:start="9:21" pos:end="9:23">[<expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">4</literal></expr>]</index></name> <init pos:start="9:25" pos:end="9:29">= <expr pos:start="9:27" pos:end="9:29"><block pos:start="9:27" pos:end="9:29">{<expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:70"><decl pos:start="13:5" pos:end="13:69"><type pos:start="13:5" pos:end="13:30"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:28">AVPixFmtDescriptor</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:38">pix_desc</name> <init pos:start="13:40" pos:end="13:69">= <expr pos:start="13:42" pos:end="13:69"><call pos:start="13:42" pos:end="13:69"><name pos:start="13:42" pos:end="13:60">av_pix_fmt_desc_get</name><argument_list pos:start="13:61" pos:end="13:69">(<argument pos:start="13:62" pos:end="13:68"><expr pos:start="13:62" pos:end="13:68"><name pos:start="13:62" pos:end="13:68">pix_fmt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">hsub</name> <init pos:start="15:14" pos:end="15:38">= <expr pos:start="15:16" pos:end="15:38"><name pos:start="15:16" pos:end="15:38"><name pos:start="15:16" pos:end="15:23">pix_desc</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:38">log2_chroma_w</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:19">is_packed_rgba</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:57"><name pos:start="19:23" pos:end="19:38">ff_fill_rgba_map</name><argument_list pos:start="19:39" pos:end="19:57">(<argument pos:start="19:40" pos:end="19:47"><expr pos:start="19:40" pos:end="19:47"><name pos:start="19:40" pos:end="19:47">rgba_map</name></expr></argument>, <argument pos:start="19:50" pos:end="19:56"><expr pos:start="19:50" pos:end="19:56"><name pos:start="19:50" pos:end="19:56">pix_fmt</name></expr></argument>)</argument_list></call> <operator pos:start="19:59" pos:end="19:60">&gt;=</operator> <literal type="number" pos:start="19:62" pos:end="19:62">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="88:5"><if pos:start="23:5" pos:end="45:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:23">is_packed_rgba</name></expr>)</condition> <block pos:start="23:26" pos:end="45:5">{<block_content pos:start="25:9" pos:end="43:68">

        <expr_stmt pos:start="25:9" pos:end="25:61"><expr pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:18">pixel_step</name><index pos:start="25:19" pos:end="25:21">[<expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>]</index></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <operator pos:start="25:25" pos:end="25:25">(</operator><call pos:start="25:26" pos:end="25:56"><name pos:start="25:26" pos:end="25:46">av_get_bits_per_pixel</name><argument_list pos:start="25:47" pos:end="25:56">(<argument pos:start="25:48" pos:end="25:55"><expr pos:start="25:48" pos:end="25:55"><name pos:start="25:48" pos:end="25:55">pix_desc</name></expr></argument>)</argument_list></call><operator pos:start="25:57" pos:end="25:57">)</operator><operator pos:start="25:58" pos:end="25:59">&gt;&gt;</operator><literal type="number" pos:start="25:60" pos:end="25:60">3</literal></expr>;</expr_stmt>

        <for pos:start="27:9" pos:end="29:51">for <control pos:start="27:13" pos:end="27:31">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <literal type="number" pos:start="27:25" pos:end="27:25">4</literal></expr>;</condition> <incr pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:28">i</name><operator pos:start="27:29" pos:end="27:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:51"><block_content pos:start="29:13" pos:end="29:51">

            <expr_stmt pos:start="29:13" pos:end="29:51"><expr pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:21">dst_color</name><index pos:start="29:22" pos:end="29:34">[<expr pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:33"><name pos:start="29:23" pos:end="29:30">rgba_map</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><name pos:start="29:32" pos:end="29:32">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="29:36" pos:end="29:36">=</operator> <name pos:start="29:38" pos:end="29:50"><name pos:start="29:38" pos:end="29:47">rgba_color</name><index pos:start="29:48" pos:end="29:50">[<expr pos:start="29:49" pos:end="29:49"><name pos:start="29:49" pos:end="29:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">line</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>]</index></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:51"><name pos:start="33:19" pos:end="33:33">av_malloc_array</name><argument_list pos:start="33:34" pos:end="33:51">(<argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><name pos:start="33:35" pos:end="33:35">w</name></expr></argument>, <argument pos:start="33:38" pos:end="33:50"><expr pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:47">pixel_step</name><index pos:start="33:48" pos:end="33:50">[<expr pos:start="33:49" pos:end="33:49"><literal type="number" pos:start="33:49" pos:end="33:49">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="37:9" pos:end="39:74">for <control pos:start="37:13" pos:end="37:31">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:25">w</name></expr>;</condition> <incr pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:28">i</name><operator pos:start="37:29" pos:end="37:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:13" pos:end="39:74"><block_content pos:start="39:13" pos:end="39:74">

            <expr_stmt pos:start="39:13" pos:end="39:74"><expr pos:start="39:13" pos:end="39:73"><call pos:start="39:13" pos:end="39:73"><name pos:start="39:13" pos:end="39:18">memcpy</name><argument_list pos:start="39:19" pos:end="39:73">(<argument pos:start="39:20" pos:end="39:46"><expr pos:start="39:20" pos:end="39:46"><name pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:23">line</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr>]</index></name> <operator pos:start="39:28" pos:end="39:28">+</operator> <name pos:start="39:30" pos:end="39:30">i</name> <operator pos:start="39:32" pos:end="39:32">*</operator> <name pos:start="39:34" pos:end="39:46"><name pos:start="39:34" pos:end="39:43">pixel_step</name><index pos:start="39:44" pos:end="39:46">[<expr pos:start="39:45" pos:end="39:45"><literal type="number" pos:start="39:45" pos:end="39:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:49" pos:end="39:57"><expr pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:57">dst_color</name></expr></argument>, <argument pos:start="39:60" pos:end="39:72"><expr pos:start="39:60" pos:end="39:72"><name pos:start="39:60" pos:end="39:72"><name pos:start="39:60" pos:end="39:69">pixel_step</name><index pos:start="39:70" pos:end="39:72">[<expr pos:start="39:71" pos:end="39:71"><literal type="number" pos:start="39:71" pos:end="39:71">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="41:9" pos:end="43:68"><if pos:start="41:9" pos:end="43:68">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:24">rgba_map_ptr</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:68"><block_content pos:start="43:13" pos:end="43:68">

            <expr_stmt pos:start="43:13" pos:end="43:68"><expr pos:start="43:13" pos:end="43:67"><call pos:start="43:13" pos:end="43:67"><name pos:start="43:13" pos:end="43:18">memcpy</name><argument_list pos:start="43:19" pos:end="43:67">(<argument pos:start="43:20" pos:end="43:31"><expr pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:31">rgba_map_ptr</name></expr></argument>, <argument pos:start="43:34" pos:end="43:41"><expr pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:41">rgba_map</name></expr></argument>, <argument pos:start="43:44" pos:end="43:66"><expr pos:start="43:44" pos:end="43:66"><sizeof pos:start="43:44" pos:end="43:62">sizeof<argument_list pos:start="43:50" pos:end="43:62">(<argument pos:start="43:51" pos:end="43:61"><expr pos:start="43:51" pos:end="43:61"><name pos:start="43:51" pos:end="43:61"><name pos:start="43:51" pos:end="43:58">rgba_map</name><index pos:start="43:59" pos:end="43:61">[<expr pos:start="43:60" pos:end="43:60"><literal type="number" pos:start="43:60" pos:end="43:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:64" pos:end="43:64">*</operator> <literal type="number" pos:start="43:66" pos:end="43:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="88:5">else <block pos:start="45:12" pos:end="88:5">{<block_content pos:start="47:9" pos:end="86:9">

        <decl_stmt pos:start="47:9" pos:end="47:18"><decl pos:start="47:9" pos:end="47:17"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:17">plane</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:82"><expr pos:start="51:9" pos:end="51:81"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:17">dst_color</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>]</index></name> <operator pos:start="51:22" pos:end="51:22">=</operator> <call pos:start="51:24" pos:end="51:81"><name pos:start="51:24" pos:end="51:36">RGB_TO_Y_CCIR</name><argument_list pos:start="51:37" pos:end="51:81">(<argument pos:start="51:38" pos:end="51:50"><expr pos:start="51:38" pos:end="51:50"><name pos:start="51:38" pos:end="51:50"><name pos:start="51:38" pos:end="51:47">rgba_color</name><index pos:start="51:48" pos:end="51:50">[<expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:53" pos:end="51:65"><expr pos:start="51:53" pos:end="51:65"><name pos:start="51:53" pos:end="51:65"><name pos:start="51:53" pos:end="51:62">rgba_color</name><index pos:start="51:63" pos:end="51:65">[<expr pos:start="51:64" pos:end="51:64"><literal type="number" pos:start="51:64" pos:end="51:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:68" pos:end="51:80"><expr pos:start="51:68" pos:end="51:80"><name pos:start="51:68" pos:end="51:80"><name pos:start="51:68" pos:end="51:77">rgba_color</name><index pos:start="51:78" pos:end="51:80">[<expr pos:start="51:79" pos:end="51:79"><literal type="number" pos:start="51:79" pos:end="51:79">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:85"><expr pos:start="53:9" pos:end="53:84"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:17">dst_color</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><literal type="number" pos:start="53:19" pos:end="53:19">1</literal></expr>]</index></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:84"><name pos:start="53:24" pos:end="53:36">RGB_TO_U_CCIR</name><argument_list pos:start="53:37" pos:end="53:84">(<argument pos:start="53:38" pos:end="53:50"><expr pos:start="53:38" pos:end="53:50"><name pos:start="53:38" pos:end="53:50"><name pos:start="53:38" pos:end="53:47">rgba_color</name><index pos:start="53:48" pos:end="53:50">[<expr pos:start="53:49" pos:end="53:49"><literal type="number" pos:start="53:49" pos:end="53:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:53" pos:end="53:65"><expr pos:start="53:53" pos:end="53:65"><name pos:start="53:53" pos:end="53:65"><name pos:start="53:53" pos:end="53:62">rgba_color</name><index pos:start="53:63" pos:end="53:65">[<expr pos:start="53:64" pos:end="53:64"><literal type="number" pos:start="53:64" pos:end="53:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:68" pos:end="53:80"><expr pos:start="53:68" pos:end="53:80"><name pos:start="53:68" pos:end="53:80"><name pos:start="53:68" pos:end="53:77">rgba_color</name><index pos:start="53:78" pos:end="53:80">[<expr pos:start="53:79" pos:end="53:79"><literal type="number" pos:start="53:79" pos:end="53:79">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:83" pos:end="53:83"><expr pos:start="53:83" pos:end="53:83"><literal type="number" pos:start="53:83" pos:end="53:83">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:85"><expr pos:start="55:9" pos:end="55:84"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:17">dst_color</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">2</literal></expr>]</index></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="55:84"><name pos:start="55:24" pos:end="55:36">RGB_TO_V_CCIR</name><argument_list pos:start="55:37" pos:end="55:84">(<argument pos:start="55:38" pos:end="55:50"><expr pos:start="55:38" pos:end="55:50"><name pos:start="55:38" pos:end="55:50"><name pos:start="55:38" pos:end="55:47">rgba_color</name><index pos:start="55:48" pos:end="55:50">[<expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:53" pos:end="55:65"><expr pos:start="55:53" pos:end="55:65"><name pos:start="55:53" pos:end="55:65"><name pos:start="55:53" pos:end="55:62">rgba_color</name><index pos:start="55:63" pos:end="55:65">[<expr pos:start="55:64" pos:end="55:64"><literal type="number" pos:start="55:64" pos:end="55:64">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:68" pos:end="55:80"><expr pos:start="55:68" pos:end="55:80"><name pos:start="55:68" pos:end="55:80"><name pos:start="55:68" pos:end="55:77">rgba_color</name><index pos:start="55:78" pos:end="55:80">[<expr pos:start="55:79" pos:end="55:79"><literal type="number" pos:start="55:79" pos:end="55:79">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:83" pos:end="55:83"><expr pos:start="55:83" pos:end="55:83"><literal type="number" pos:start="55:83" pos:end="55:83">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:17">dst_color</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">3</literal></expr>]</index></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:33">rgba_color</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">3</literal></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="61:9" pos:end="86:9">for <control pos:start="61:13" pos:end="61:43">(<init pos:start="61:14" pos:end="61:23"><expr pos:start="61:14" pos:end="61:22"><name pos:start="61:14" pos:end="61:18">plane</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:34"><expr pos:start="61:25" pos:end="61:33"><name pos:start="61:25" pos:end="61:29">plane</name> <operator pos:start="61:31" pos:end="61:31">&lt;</operator> <literal type="number" pos:start="61:33" pos:end="61:33">4</literal></expr>;</condition> <incr pos:start="61:36" pos:end="61:42"><expr pos:start="61:36" pos:end="61:42"><name pos:start="61:36" pos:end="61:40">plane</name><operator pos:start="61:41" pos:end="61:42">++</operator></expr></incr>)</control> <block pos:start="61:45" pos:end="86:9">{<block_content pos:start="63:13" pos:end="84:61">

            <decl_stmt pos:start="63:13" pos:end="63:26"><decl pos:start="63:13" pos:end="63:25"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:25">line_size</name></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:62"><decl pos:start="65:13" pos:end="65:61"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:21">hsub1</name> <init pos:start="65:23" pos:end="65:61">= <expr pos:start="65:25" pos:end="65:61"><ternary pos:start="65:25" pos:end="65:61"><condition pos:start="65:25" pos:end="65:52"><expr pos:start="65:25" pos:end="65:50"><operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:30">plane</name> <operator pos:start="65:32" pos:end="65:33">==</operator> <literal type="number" pos:start="65:35" pos:end="65:35">1</literal> <operator pos:start="65:37" pos:end="65:38">||</operator> <name pos:start="65:40" pos:end="65:44">plane</name> <operator pos:start="65:46" pos:end="65:47">==</operator> <literal type="number" pos:start="65:49" pos:end="65:49">2</literal><operator pos:start="65:50" pos:end="65:50">)</operator></expr> ?</condition><then pos:start="65:54" pos:end="65:57"> <expr pos:start="65:54" pos:end="65:57"><name pos:start="65:54" pos:end="65:57">hsub</name></expr> </then><else pos:start="65:59" pos:end="65:61">: <expr pos:start="65:61" pos:end="65:61"><literal type="number" pos:start="65:61" pos:end="65:61">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:22">pixel_step</name><index pos:start="69:23" pos:end="69:29">[<expr pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:28">plane</name></expr>]</index></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <literal type="number" pos:start="69:33" pos:end="69:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:69"><expr pos:start="71:13" pos:end="71:68"><name pos:start="71:13" pos:end="71:21">line_size</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:48"><name pos:start="71:25" pos:end="71:38">FF_CEIL_RSHIFT</name><argument_list pos:start="71:39" pos:end="71:48">(<argument pos:start="71:40" pos:end="71:40"><expr pos:start="71:40" pos:end="71:40"><name pos:start="71:40" pos:end="71:40">w</name></expr></argument>, <argument pos:start="71:43" pos:end="71:47"><expr pos:start="71:43" pos:end="71:47"><name pos:start="71:43" pos:end="71:47">hsub1</name></expr></argument>)</argument_list></call> <operator pos:start="71:50" pos:end="71:50">*</operator> <name pos:start="71:52" pos:end="71:68"><name pos:start="71:52" pos:end="71:61">pixel_step</name><index pos:start="71:62" pos:end="71:68">[<expr pos:start="71:63" pos:end="71:67"><name pos:start="71:63" pos:end="71:67">plane</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:16">line</name><index pos:start="73:17" pos:end="73:23">[<expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:22">plane</name></expr>]</index></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <call pos:start="73:27" pos:end="73:46"><name pos:start="73:27" pos:end="73:35">av_malloc</name><argument_list pos:start="73:36" pos:end="73:46">(<argument pos:start="73:37" pos:end="73:45"><expr pos:start="73:37" pos:end="73:45"><name pos:start="73:37" pos:end="73:45">line_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="82:13"><if pos:start="75:13" pos:end="82:13">if <condition pos:start="75:16" pos:end="75:29">(<expr pos:start="75:17" pos:end="75:28"><operator pos:start="75:17" pos:end="75:17">!</operator><name pos:start="75:18" pos:end="75:28"><name pos:start="75:18" pos:end="75:21">line</name><index pos:start="75:22" pos:end="75:28">[<expr pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:27">plane</name></expr>]</index></name></expr>)</condition> <block pos:start="75:31" pos:end="82:13">{<block_content pos:start="77:17" pos:end="79:45">

                <while pos:start="77:17" pos:end="79:45">while<condition pos:start="77:22" pos:end="77:45">(<expr pos:start="77:23" pos:end="77:44"><name pos:start="77:23" pos:end="77:27">plane</name> <operator pos:start="77:29" pos:end="77:30">&amp;&amp;</operator> <name pos:start="77:32" pos:end="77:44"><name pos:start="77:32" pos:end="77:35">line</name><index pos:start="77:36" pos:end="77:44">[<expr pos:start="77:37" pos:end="77:43"><name pos:start="77:37" pos:end="77:41">plane</name><operator pos:start="77:42" pos:end="77:42">-</operator><literal type="number" pos:start="77:43" pos:end="77:43">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:45"><block_content pos:start="79:21" pos:end="79:45">

                    <expr_stmt pos:start="79:21" pos:end="79:45"><expr pos:start="79:21" pos:end="79:44"><call pos:start="79:21" pos:end="79:44"><name pos:start="79:21" pos:end="79:28">av_freep</name><argument_list pos:start="79:29" pos:end="79:44">(<argument pos:start="79:30" pos:end="79:43"><expr pos:start="79:30" pos:end="79:43"><operator pos:start="79:30" pos:end="79:30">&amp;</operator><name pos:start="79:31" pos:end="79:43"><name pos:start="79:31" pos:end="79:34">line</name><index pos:start="79:35" pos:end="79:43">[<expr pos:start="79:36" pos:end="79:42"><operator pos:start="79:36" pos:end="79:37">--</operator><name pos:start="79:38" pos:end="79:42">plane</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>


            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="84:13" pos:end="84:61"><expr pos:start="84:13" pos:end="84:60"><call pos:start="84:13" pos:end="84:60"><name pos:start="84:13" pos:end="84:18">memset</name><argument_list pos:start="84:19" pos:end="84:60">(<argument pos:start="84:20" pos:end="84:30"><expr pos:start="84:20" pos:end="84:30"><name pos:start="84:20" pos:end="84:30"><name pos:start="84:20" pos:end="84:23">line</name><index pos:start="84:24" pos:end="84:30">[<expr pos:start="84:25" pos:end="84:29"><name pos:start="84:25" pos:end="84:29">plane</name></expr>]</index></name></expr></argument>, <argument pos:start="84:33" pos:end="84:48"><expr pos:start="84:33" pos:end="84:48"><name pos:start="84:33" pos:end="84:48"><name pos:start="84:33" pos:end="84:41">dst_color</name><index pos:start="84:42" pos:end="84:48">[<expr pos:start="84:43" pos:end="84:47"><name pos:start="84:43" pos:end="84:47">plane</name></expr>]</index></name></expr></argument>, <argument pos:start="84:51" pos:end="84:59"><expr pos:start="84:51" pos:end="84:59"><name pos:start="84:51" pos:end="84:59">line_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="92:5" pos:end="92:13">return <expr pos:start="92:12" pos:end="92:12"><literal type="number" pos:start="92:12" pos:end="92:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
