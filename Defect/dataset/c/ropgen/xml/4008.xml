<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4008.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:52"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:11">MemTxResult</name></type> <name pos:start="1:13" pos:end="1:40">memory_region_dispatch_write</name><parameter_list pos:start="1:41" pos:end="5:58">(<parameter pos:start="1:42" pos:end="1:57"><decl pos:start="1:42" pos:end="1:57"><type pos:start="1:42" pos:end="1:57"><name pos:start="1:42" pos:end="1:53">MemoryRegion</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">mr</name></decl></parameter>,
                                         <parameter pos:start="2:42" pos:end="2:52"><decl pos:start="2:42" pos:end="2:52"><type pos:start="2:42" pos:end="2:52"><name pos:start="2:42" pos:end="2:47">hwaddr</name></type> <name pos:start="2:49" pos:end="2:52">addr</name></decl></parameter>,
                                         <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:49">uint64_t</name></type> <name pos:start="3:51" pos:end="3:54">data</name></decl></parameter>,
                                         <parameter pos:start="4:42" pos:end="4:54"><decl pos:start="4:42" pos:end="4:54"><type pos:start="4:42" pos:end="4:54"><name pos:start="4:42" pos:end="4:49">unsigned</name></type> <name pos:start="4:51" pos:end="4:54">size</name></decl></parameter>,
                                         <parameter pos:start="5:42" pos:end="5:57"><decl pos:start="5:42" pos:end="5:57"><type pos:start="5:42" pos:end="5:57"><name pos:start="5:42" pos:end="5:51">MemTxAttrs</name></type> <name pos:start="5:53" pos:end="5:57">attrs</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="27:52">{<block_content pos:start="7:5" pos:end="27:52">
    <if_stmt pos:start="7:5" pos:end="27:52"><if pos:start="7:5" pos:end="27:52">if <condition pos:start="7:8" pos:end="7:58">(<expr pos:start="7:9" pos:end="7:57"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:57"><name pos:start="7:10" pos:end="7:35">memory_region_access_valid</name><argument_list pos:start="7:36" pos:end="7:57">(<argument pos:start="7:37" pos:end="7:38"><expr pos:start="7:37" pos:end="7:38"><name pos:start="7:37" pos:end="7:38">mr</name></expr></argument>, <argument pos:start="7:41" pos:end="7:44"><expr pos:start="7:41" pos:end="7:44"><name pos:start="7:41" pos:end="7:44">addr</name></expr></argument>, <argument pos:start="7:47" pos:end="7:50"><expr pos:start="7:47" pos:end="7:50"><name pos:start="7:47" pos:end="7:50">size</name></expr></argument>, <argument pos:start="7:53" pos:end="7:56"><expr pos:start="7:53" pos:end="7:56"><name pos:start="7:53" pos:end="7:56">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:60" pos:end="27:52">{<block_content pos:start="8:9" pos:end="27:52">
        <expr_stmt pos:start="8:9" pos:end="8:51"><expr pos:start="8:9" pos:end="8:50"><call pos:start="8:9" pos:end="8:50"><name pos:start="8:9" pos:end="8:28">unassigned_mem_write</name><argument_list pos:start="8:29" pos:end="8:50">(<argument pos:start="8:30" pos:end="8:31"><expr pos:start="8:30" pos:end="8:31"><name pos:start="8:30" pos:end="8:31">mr</name></expr></argument>, <argument pos:start="8:34" pos:end="8:37"><expr pos:start="8:34" pos:end="8:37"><name pos:start="8:34" pos:end="8:37">addr</name></expr></argument>, <argument pos:start="8:40" pos:end="8:43"><expr pos:start="8:40" pos:end="8:43"><name pos:start="8:40" pos:end="8:43">data</name></expr></argument>, <argument pos:start="8:46" pos:end="8:49"><expr pos:start="8:46" pos:end="8:49"><name pos:start="8:46" pos:end="8:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="9:9" pos:end="9:34">return <expr pos:start="9:16" pos:end="9:33"><name pos:start="9:16" pos:end="9:33">MEMTX_DECODE_ERROR</name></expr>;</return>
    <expr_stmt pos:start="10:5" pos:end="10:39"><expr pos:start="10:5" pos:end="10:38"><call pos:start="10:5" pos:end="10:38"><name pos:start="10:5" pos:end="10:21">adjust_endianness</name><argument_list pos:start="10:22" pos:end="10:38">(<argument pos:start="10:23" pos:end="10:24"><expr pos:start="10:23" pos:end="10:24"><name pos:start="10:23" pos:end="10:24">mr</name></expr></argument>, <argument pos:start="10:27" pos:end="10:31"><expr pos:start="10:27" pos:end="10:31"><operator pos:start="10:27" pos:end="10:27">&amp;</operator><name pos:start="10:28" pos:end="10:31">data</name></expr></argument>, <argument pos:start="10:34" pos:end="10:37"><expr pos:start="10:34" pos:end="10:37"><name pos:start="10:34" pos:end="10:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="27:52"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:10">mr</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:15">ops</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:22">write</name></name></expr>)</condition> <block pos:start="11:25" pos:end="17:5">{<block_content pos:start="12:9" pos:end="16:48">
        <return pos:start="12:9" pos:end="16:48">return <expr pos:start="12:16" pos:end="16:47"><call pos:start="12:16" pos:end="16:47"><name pos:start="12:16" pos:end="12:40">access_with_adjusted_size</name><argument_list pos:start="12:41" pos:end="16:47">(<argument pos:start="12:42" pos:end="12:45"><expr pos:start="12:42" pos:end="12:45"><name pos:start="12:42" pos:end="12:45">addr</name></expr></argument>, <argument pos:start="12:48" pos:end="12:52"><expr pos:start="12:48" pos:end="12:52"><operator pos:start="12:48" pos:end="12:48">&amp;</operator><name pos:start="12:49" pos:end="12:52">data</name></expr></argument>, <argument pos:start="12:55" pos:end="12:58"><expr pos:start="12:55" pos:end="12:58"><name pos:start="12:55" pos:end="12:58">size</name></expr></argument>,
                                         <argument pos:start="13:42" pos:end="13:70"><expr pos:start="13:42" pos:end="13:70"><name pos:start="13:42" pos:end="13:70"><name pos:start="13:42" pos:end="13:43">mr</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:48">ops</name><operator pos:start="13:49" pos:end="13:50">-&gt;</operator><name pos:start="13:51" pos:end="13:54">impl</name><operator pos:start="13:55" pos:end="13:55">.</operator><name pos:start="13:56" pos:end="13:70">min_access_size</name></name></expr></argument>,
                                         <argument pos:start="14:42" pos:end="14:70"><expr pos:start="14:42" pos:end="14:70"><name pos:start="14:42" pos:end="14:70"><name pos:start="14:42" pos:end="14:43">mr</name><operator pos:start="14:44" pos:end="14:45">-&gt;</operator><name pos:start="14:46" pos:end="14:48">ops</name><operator pos:start="14:49" pos:end="14:50">-&gt;</operator><name pos:start="14:51" pos:end="14:54">impl</name><operator pos:start="14:55" pos:end="14:55">.</operator><name pos:start="14:56" pos:end="14:70">max_access_size</name></name></expr></argument>,
                                         <argument pos:start="15:42" pos:end="15:69"><expr pos:start="15:42" pos:end="15:69"><name pos:start="15:42" pos:end="15:69">memory_region_write_accessor</name></expr></argument>, <argument pos:start="15:72" pos:end="15:73"><expr pos:start="15:72" pos:end="15:73"><name pos:start="15:72" pos:end="15:73">mr</name></expr></argument>,
                                         <argument pos:start="16:42" pos:end="16:46"><expr pos:start="16:42" pos:end="16:46"><name pos:start="16:42" pos:end="16:46">attrs</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="24:5">else if <condition pos:start="17:15" pos:end="17:41">(<expr pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:17">mr</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:22">ops</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:40">write_with_attrs</name></name></expr>)</condition> <block pos:start="17:43" pos:end="24:5">{<block_content pos:start="18:9" pos:end="23:49">
        <return pos:start="18:9" pos:end="23:49">return
            <expr pos:start="19:13" pos:end="23:48"><call pos:start="19:13" pos:end="23:48"><name pos:start="19:13" pos:end="19:37">access_with_adjusted_size</name><argument_list pos:start="19:38" pos:end="23:48">(<argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">addr</name></expr></argument>, <argument pos:start="19:45" pos:end="19:49"><expr pos:start="19:45" pos:end="19:49"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:49">data</name></expr></argument>, <argument pos:start="19:52" pos:end="19:55"><expr pos:start="19:52" pos:end="19:55"><name pos:start="19:52" pos:end="19:55">size</name></expr></argument>,
                                      <argument pos:start="20:39" pos:end="20:67"><expr pos:start="20:39" pos:end="20:67"><name pos:start="20:39" pos:end="20:67"><name pos:start="20:39" pos:end="20:40">mr</name><operator pos:start="20:41" pos:end="20:42">-&gt;</operator><name pos:start="20:43" pos:end="20:45">ops</name><operator pos:start="20:46" pos:end="20:47">-&gt;</operator><name pos:start="20:48" pos:end="20:51">impl</name><operator pos:start="20:52" pos:end="20:52">.</operator><name pos:start="20:53" pos:end="20:67">min_access_size</name></name></expr></argument>,
                                      <argument pos:start="21:39" pos:end="21:67"><expr pos:start="21:39" pos:end="21:67"><name pos:start="21:39" pos:end="21:67"><name pos:start="21:39" pos:end="21:40">mr</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:45">ops</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:51">impl</name><operator pos:start="21:52" pos:end="21:52">.</operator><name pos:start="21:53" pos:end="21:67">max_access_size</name></name></expr></argument>,
                                      <argument pos:start="22:39" pos:end="22:77"><expr pos:start="22:39" pos:end="22:77"><name pos:start="22:39" pos:end="22:77">memory_region_write_with_attrs_accessor</name></expr></argument>,
                                      <argument pos:start="23:39" pos:end="23:40"><expr pos:start="23:39" pos:end="23:40"><name pos:start="23:39" pos:end="23:40">mr</name></expr></argument>, <argument pos:start="23:43" pos:end="23:47"><expr pos:start="23:43" pos:end="23:47"><name pos:start="23:43" pos:end="23:47">attrs</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></if> <else pos:start="24:7" pos:end="27:52">else <block pos:start="24:12" pos:end="27:52">{<block_content pos:start="25:9" pos:end="27:52">
        <return pos:start="25:9" pos:end="27:52">return <expr pos:start="25:16" pos:end="27:51"><call pos:start="25:16" pos:end="27:51"><name pos:start="25:16" pos:end="25:40">access_with_adjusted_size</name><argument_list pos:start="25:41" pos:end="27:51">(<argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">addr</name></expr></argument>, <argument pos:start="25:48" pos:end="25:52"><expr pos:start="25:48" pos:end="25:52"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:52">data</name></expr></argument>, <argument pos:start="25:55" pos:end="25:58"><expr pos:start="25:55" pos:end="25:58"><name pos:start="25:55" pos:end="25:58">size</name></expr></argument>, <argument pos:start="25:61" pos:end="25:61"><expr pos:start="25:61" pos:end="25:61"><literal type="number" pos:start="25:61" pos:end="25:61">1</literal></expr></argument>, <argument pos:start="25:64" pos:end="25:64"><expr pos:start="25:64" pos:end="25:64"><literal type="number" pos:start="25:64" pos:end="25:64">4</literal></expr></argument>,
                                         <argument pos:start="26:42" pos:end="26:77"><expr pos:start="26:42" pos:end="26:77"><name pos:start="26:42" pos:end="26:77">memory_region_oldmmio_write_accessor</name></expr></argument>,
                                         <argument pos:start="27:42" pos:end="27:43"><expr pos:start="27:42" pos:end="27:43"><name pos:start="27:42" pos:end="27:43">mr</name></expr></argument>, <argument pos:start="27:46" pos:end="27:50"><expr pos:start="27:46" pos:end="27:50"><name pos:start="27:46" pos:end="27:50">attrs</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
