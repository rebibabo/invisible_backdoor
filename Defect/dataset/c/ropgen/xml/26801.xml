<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26801.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:35">rgb16to15</name>)<parameter_list pos:start="1:37" pos:end="1:85">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">src</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">dst</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:84"><decl pos:start="1:72" pos:end="1:84"><type pos:start="1:72" pos:end="1:84"><name pos:start="1:72" pos:end="1:75">long</name></type> <name pos:start="1:77" pos:end="1:84">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="99:1">{<block_content pos:start="5:5" pos:end="97:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:27"><specifier pos:start="5:5" pos:end="5:12">register</specifier> <specifier pos:start="5:14" pos:end="5:18">const</specifier> <name pos:start="5:20" pos:end="5:26">uint8_t</name><modifier pos:start="5:27" pos:end="5:27">*</modifier></type> <name pos:start="5:29" pos:end="5:29">s</name><init pos:start="5:30" pos:end="5:33">=<expr pos:start="5:31" pos:end="5:33"><name pos:start="5:31" pos:end="5:33">src</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:21"><specifier pos:start="7:5" pos:end="7:12">register</specifier> <name pos:start="7:14" pos:end="7:20">uint8_t</name><modifier pos:start="7:21" pos:end="7:21">*</modifier></type> <name pos:start="7:23" pos:end="7:23">d</name><init pos:start="7:24" pos:end="7:27">=<expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:28"><specifier pos:start="9:5" pos:end="9:12">register</specifier> <specifier pos:start="9:14" pos:end="9:18">const</specifier> <name pos:start="9:20" pos:end="9:26">uint8_t</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:25">mm_end</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:7">end</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:11">s</name> <operator pos:start="13:13" pos:end="13:13">+</operator> <name pos:start="13:15" pos:end="13:22">src_size</name></expr>;</expr_stmt>

<cpp:if pos:start="15:1" pos:end="15:24">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="17:5" pos:end="17:48">__asm__ <specifier pos:start="17:13" pos:end="17:20">volatile</specifier>(PREFETCH"    %0"::"m"(*s));</asm>

    <asm pos:start="19:5" pos:end="19:61">__asm__ <specifier pos:start="19:13" pos:end="19:20">volatile</specifier>("movq        %0, %%mm7"::"m"(mask15rg));</asm>

    <asm pos:start="21:5" pos:end="21:60">__asm__ <specifier pos:start="21:13" pos:end="21:20">volatile</specifier>("movq        %0, %%mm6"::"m"(mask15b));</asm>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:10">mm_end</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:16">end</name> <operator pos:start="23:18" pos:end="23:18">-</operator> <literal type="number" pos:start="23:20" pos:end="23:21">15</literal></expr>;</expr_stmt>

    <while pos:start="25:5" pos:end="69:5">while <condition pos:start="25:11" pos:end="25:20">(<expr pos:start="25:12" pos:end="25:19"><name pos:start="25:12" pos:end="25:12">s</name><operator pos:start="25:13" pos:end="25:13">&lt;</operator><name pos:start="25:14" pos:end="25:19">mm_end</name></expr>)</condition> <block pos:start="25:22" pos:end="69:5">{<block_content pos:start="27:9" pos:end="67:14">

        <asm pos:start="27:9" pos:end="63:10">__asm__ <specifier pos:start="27:17" pos:end="27:24">volatile</specifier>(

            PREFETCH"  32%1         \n\t"

            "movq        %1, %%mm0  \n\t"

            "movq       8%1, %%mm2  \n\t"

            "movq     %%mm0, %%mm1  \n\t"

            "movq     %%mm2, %%mm3  \n\t"

            "psrlq       $1, %%mm0  \n\t"

            "psrlq       $1, %%mm2  \n\t"

            "pand     %%mm7, %%mm0  \n\t"

            "pand     %%mm7, %%mm2  \n\t"

            "pand     %%mm6, %%mm1  \n\t"

            "pand     %%mm6, %%mm3  \n\t"

            "por      %%mm1, %%mm0  \n\t"

            "por      %%mm3, %%mm2  \n\t"

            MOVNTQ"   %%mm0,  %0    \n\t"

            MOVNTQ"   %%mm2, 8%0"

            :"=m"(*d)

            :"m"(*s)

        );</asm>

        <expr_stmt pos:start="65:9" pos:end="65:14"><expr pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">d</name><operator pos:start="65:10" pos:end="65:11">+=</operator><literal type="number" pos:start="65:12" pos:end="65:13">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:14"><expr pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">+=</operator><literal type="number" pos:start="67:12" pos:end="67:13">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <asm pos:start="71:5" pos:end="71:40">__asm__ <specifier pos:start="71:13" pos:end="71:20">volatile</specifier>(SFENCE:::"memory");</asm>

    <asm pos:start="73:5" pos:end="76:0">__asm__ <specifier pos:start="73:13" pos:end="73:20">volatile</specifier>(EMMS:::"memory");</asm>

<cpp:endif pos:start="75:1" pos:end="75:6">#<cpp:directive pos:start="75:2" pos:end="75:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="77:5" pos:end="77:21"><expr pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:10">mm_end</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <name pos:start="77:14" pos:end="77:16">end</name> <operator pos:start="77:18" pos:end="77:18">-</operator> <literal type="number" pos:start="77:20" pos:end="77:20">3</literal></expr>;</expr_stmt>

    <while pos:start="79:5" pos:end="89:5">while <condition pos:start="79:11" pos:end="79:22">(<expr pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:12">s</name> <operator pos:start="79:14" pos:end="79:14">&lt;</operator> <name pos:start="79:16" pos:end="79:21">mm_end</name></expr>)</condition> <block pos:start="79:24" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:13">

        <decl_stmt pos:start="81:9" pos:end="81:51"><decl pos:start="81:9" pos:end="81:50"><type pos:start="81:9" pos:end="81:25"><specifier pos:start="81:9" pos:end="81:16">register</specifier> <name pos:start="81:18" pos:end="81:25">uint32_t</name></type> <name pos:start="81:27" pos:end="81:27">x</name><init pos:start="81:28" pos:end="81:50">= <expr pos:start="81:30" pos:end="81:50"><operator pos:start="81:30" pos:end="81:30">*</operator><operator pos:start="81:31" pos:end="81:31">(</operator><operator pos:start="81:32" pos:end="81:32">(</operator><specifier pos:start="81:33" pos:end="81:37">const</specifier> <name pos:start="81:39" pos:end="81:46">uint32_t</name><operator pos:start="81:47" pos:end="81:47">*</operator><operator pos:start="81:48" pos:end="81:48">)</operator><name pos:start="81:49" pos:end="81:49">s</name><operator pos:start="81:50" pos:end="81:50">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:64"><expr pos:start="83:9" pos:end="83:63"><operator pos:start="83:9" pos:end="83:9">*</operator><operator pos:start="83:10" pos:end="83:10">(</operator><operator pos:start="83:11" pos:end="83:11">(</operator><name pos:start="83:12" pos:end="83:19">uint32_t</name> <operator pos:start="83:21" pos:end="83:21">*</operator><operator pos:start="83:22" pos:end="83:22">)</operator><name pos:start="83:23" pos:end="83:23">d</name><operator pos:start="83:24" pos:end="83:24">)</operator> <operator pos:start="83:26" pos:end="83:26">=</operator> <operator pos:start="83:28" pos:end="83:28">(</operator><operator pos:start="83:29" pos:end="83:29">(</operator><name pos:start="83:30" pos:end="83:30">x</name><operator pos:start="83:31" pos:end="83:32">&gt;&gt;</operator><literal type="number" pos:start="83:33" pos:end="83:33">1</literal><operator pos:start="83:34" pos:end="83:34">)</operator><operator pos:start="83:35" pos:end="83:35">&amp;</operator><literal type="number" pos:start="83:36" pos:end="83:45">0x7FE07FE0</literal><operator pos:start="83:46" pos:end="83:46">)</operator> <operator pos:start="83:48" pos:end="83:48">|</operator> <operator pos:start="83:50" pos:end="83:50">(</operator><name pos:start="83:51" pos:end="83:51">x</name><operator pos:start="83:52" pos:end="83:52">&amp;</operator><literal type="number" pos:start="83:53" pos:end="83:62">0x001F001F</literal><operator pos:start="83:63" pos:end="83:63">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:13"><expr pos:start="85:9" pos:end="85:12"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">+=</operator><literal type="number" pos:start="85:12" pos:end="85:12">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:13"><expr pos:start="87:9" pos:end="87:12"><name pos:start="87:9" pos:end="87:9">d</name><operator pos:start="87:10" pos:end="87:11">+=</operator><literal type="number" pos:start="87:12" pos:end="87:12">4</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:16">(<expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:9">s</name> <operator pos:start="91:11" pos:end="91:11">&lt;</operator> <name pos:start="91:13" pos:end="91:15">end</name></expr>)</condition> <block pos:start="91:18" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:56">

        <decl_stmt pos:start="93:9" pos:end="93:51"><decl pos:start="93:9" pos:end="93:50"><type pos:start="93:9" pos:end="93:25"><specifier pos:start="93:9" pos:end="93:16">register</specifier> <name pos:start="93:18" pos:end="93:25">uint16_t</name></type> <name pos:start="93:27" pos:end="93:27">x</name><init pos:start="93:28" pos:end="93:50">= <expr pos:start="93:30" pos:end="93:50"><operator pos:start="93:30" pos:end="93:30">*</operator><operator pos:start="93:31" pos:end="93:31">(</operator><operator pos:start="93:32" pos:end="93:32">(</operator><specifier pos:start="93:33" pos:end="93:37">const</specifier> <name pos:start="93:39" pos:end="93:46">uint16_t</name><operator pos:start="93:47" pos:end="93:47">*</operator><operator pos:start="93:48" pos:end="93:48">)</operator><name pos:start="93:49" pos:end="93:49">s</name><operator pos:start="93:50" pos:end="93:50">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:56"><expr pos:start="95:9" pos:end="95:55"><operator pos:start="95:9" pos:end="95:9">*</operator><operator pos:start="95:10" pos:end="95:10">(</operator><operator pos:start="95:11" pos:end="95:11">(</operator><name pos:start="95:12" pos:end="95:19">uint16_t</name> <operator pos:start="95:21" pos:end="95:21">*</operator><operator pos:start="95:22" pos:end="95:22">)</operator><name pos:start="95:23" pos:end="95:23">d</name><operator pos:start="95:24" pos:end="95:24">)</operator> <operator pos:start="95:26" pos:end="95:26">=</operator> <operator pos:start="95:28" pos:end="95:28">(</operator><operator pos:start="95:29" pos:end="95:29">(</operator><name pos:start="95:30" pos:end="95:30">x</name><operator pos:start="95:31" pos:end="95:32">&gt;&gt;</operator><literal type="number" pos:start="95:33" pos:end="95:33">1</literal><operator pos:start="95:34" pos:end="95:34">)</operator><operator pos:start="95:35" pos:end="95:35">&amp;</operator><literal type="number" pos:start="95:36" pos:end="95:41">0x7FE0</literal><operator pos:start="95:42" pos:end="95:42">)</operator> <operator pos:start="95:44" pos:end="95:44">|</operator> <operator pos:start="95:46" pos:end="95:46">(</operator><name pos:start="95:47" pos:end="95:47">x</name><operator pos:start="95:48" pos:end="95:48">&amp;</operator><literal type="number" pos:start="95:49" pos:end="95:54">0x001F</literal><operator pos:start="95:55" pos:end="95:55">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
