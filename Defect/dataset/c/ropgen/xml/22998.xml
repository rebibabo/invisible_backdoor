<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22998.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vfio_pci_size_rom</name><parameter_list pos:start="1:30" pos:end="1:50">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:43">VFIOPCIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:34">

    <decl_stmt pos:start="5:5" pos:end="5:70"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">orig</name></decl>, <decl pos:start="5:20" pos:end="5:69"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:23">size</name> <init pos:start="5:25" pos:end="5:69">= <expr pos:start="5:27" pos:end="5:69"><call pos:start="5:27" pos:end="5:69"><name pos:start="5:27" pos:end="5:37">cpu_to_le32</name><argument_list pos:start="5:38" pos:end="5:69">(<argument pos:start="5:39" pos:end="5:68"><expr pos:start="5:39" pos:end="5:68"><operator pos:start="5:39" pos:end="5:39">(</operator><name pos:start="5:40" pos:end="5:47">uint32_t</name><operator pos:start="5:48" pos:end="5:48">)</operator><name pos:start="5:49" pos:end="5:68">PCI_ROM_ADDRESS_MASK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">off_t</name></type> <name pos:start="7:11" pos:end="7:16">offset</name> <init pos:start="7:18" pos:end="7:56">= <expr pos:start="7:20" pos:end="7:56"><name pos:start="7:20" pos:end="7:38"><name pos:start="7:20" pos:end="7:23">vdev</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:38">config_offset</name></name> <operator pos:start="7:40" pos:end="7:40">+</operator> <name pos:start="7:42" pos:end="7:56">PCI_ROM_ADDRESS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name> <init pos:start="9:22" pos:end="9:35">= <expr pos:start="9:24" pos:end="9:35"><call pos:start="9:24" pos:end="9:35"><name pos:start="9:24" pos:end="9:29">DEVICE</name><argument_list pos:start="9:30" pos:end="9:35">(<argument pos:start="9:31" pos:end="9:34"><expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:13">name</name><index pos:start="11:14" pos:end="11:17">[<expr pos:start="11:15" pos:end="11:16"><literal type="number" pos:start="11:15" pos:end="11:16">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name> <init pos:start="13:12" pos:end="13:30">= <expr pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:17">vdev</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:27">vbasedev</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:30">fd</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="39:5"><if pos:start="17:5" pos:end="39:5">if <condition pos:start="17:8" pos:end="17:50">(<expr pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:12">vdev</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:18">pdev</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:26">romfile</name></name> <operator pos:start="17:28" pos:end="17:29">||</operator> <operator pos:start="17:31" pos:end="17:31">!</operator><name pos:start="17:32" pos:end="17:49"><name pos:start="17:32" pos:end="17:35">vdev</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:41">pdev</name><operator pos:start="17:42" pos:end="17:42">.</operator><name pos:start="17:43" pos:end="17:49">rom_bar</name></name></expr>)</condition> <block pos:start="17:52" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:15">

        <comment type="block" pos:start="19:9" pos:end="19:72">/* Since pci handles romfile, just print a message and return */</comment>

        <if_stmt pos:start="21:9" pos:end="35:9"><if pos:start="21:9" pos:end="35:9">if <condition pos:start="21:12" pos:end="21:63">(<expr pos:start="21:13" pos:end="21:62"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:34">vfio_blacklist_opt_rom</name><argument_list pos:start="21:35" pos:end="21:40">(<argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">vdev</name></expr></argument>)</argument_list></call> <operator pos:start="21:42" pos:end="21:43">&amp;&amp;</operator> <name pos:start="21:45" pos:end="21:62"><name pos:start="21:45" pos:end="21:48">vdev</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:54">pdev</name><operator pos:start="21:55" pos:end="21:55">.</operator><name pos:start="21:56" pos:end="21:62">romfile</name></name></expr>)</condition> <block pos:start="21:65" pos:end="35:9">{<block_content pos:start="23:13" pos:end="33:46">

            <expr_stmt pos:start="23:13" pos:end="33:46"><expr pos:start="23:13" pos:end="33:45"><call pos:start="23:13" pos:end="33:45"><name pos:start="23:13" pos:end="23:24">error_printf</name><argument_list pos:start="23:25" pos:end="33:45">(<argument pos:start="23:26" pos:end="29:75"><expr pos:start="23:26" pos:end="29:75"><literal type="string" pos:start="23:26" pos:end="23:65">"Warning : Device at %04x:%02x:%02x.%x "</literal>

                         <literal type="string" pos:start="25:26" pos:end="25:78">"is known to cause system instability issues during "</literal>

                         <literal type="string" pos:start="27:26" pos:end="27:49">"option rom execution. "</literal>

                         <literal type="string" pos:start="29:26" pos:end="29:75">"Proceeding anyway since user specified romfile\n"</literal></expr></argument>,

                         <argument pos:start="31:26" pos:end="31:42"><expr pos:start="31:26" pos:end="31:42"><name pos:start="31:26" pos:end="31:42"><name pos:start="31:26" pos:end="31:29">vdev</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:35">host</name><operator pos:start="31:36" pos:end="31:36">.</operator><name pos:start="31:37" pos:end="31:42">domain</name></name></expr></argument>, <argument pos:start="31:45" pos:end="31:58"><expr pos:start="31:45" pos:end="31:58"><name pos:start="31:45" pos:end="31:58"><name pos:start="31:45" pos:end="31:48">vdev</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:54">host</name><operator pos:start="31:55" pos:end="31:55">.</operator><name pos:start="31:56" pos:end="31:58">bus</name></name></expr></argument>, <argument pos:start="31:61" pos:end="31:75"><expr pos:start="31:61" pos:end="31:75"><name pos:start="31:61" pos:end="31:75"><name pos:start="31:61" pos:end="31:64">vdev</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:70">host</name><operator pos:start="31:71" pos:end="31:71">.</operator><name pos:start="31:72" pos:end="31:75">slot</name></name></expr></argument>,

                         <argument pos:start="33:26" pos:end="33:44"><expr pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:44"><name pos:start="33:26" pos:end="33:29">vdev</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:35">host</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:44">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="49:7">/*

     * Use the same size ROM BAR as the physical device.  The contents

     * will get filled in later when the guest tries to read it.

     */</comment>

    <if_stmt pos:start="51:5" pos:end="67:5"><if pos:start="51:5" pos:end="67:5">if <condition pos:start="51:8" pos:end="57:42">(<expr pos:start="51:9" pos:end="57:41"><call pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:13">pread</name><argument_list pos:start="51:14" pos:end="51:35">(<argument pos:start="51:15" pos:end="51:16"><expr pos:start="51:15" pos:end="51:16"><name pos:start="51:15" pos:end="51:16">fd</name></expr></argument>, <argument pos:start="51:19" pos:end="51:23"><expr pos:start="51:19" pos:end="51:23"><operator pos:start="51:19" pos:end="51:19">&amp;</operator><name pos:start="51:20" pos:end="51:23">orig</name></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">4</literal></expr></argument>, <argument pos:start="51:29" pos:end="51:34"><expr pos:start="51:29" pos:end="51:34"><name pos:start="51:29" pos:end="51:34">offset</name></expr></argument>)</argument_list></call> <operator pos:start="51:37" pos:end="51:38">!=</operator> <literal type="number" pos:start="51:40" pos:end="51:40">4</literal> <operator pos:start="51:42" pos:end="51:43">||</operator>

        <call pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:14">pwrite</name><argument_list pos:start="53:15" pos:end="53:36">(<argument pos:start="53:16" pos:end="53:17"><expr pos:start="53:16" pos:end="53:17"><name pos:start="53:16" pos:end="53:17">fd</name></expr></argument>, <argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:24">size</name></expr></argument>, <argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><literal type="number" pos:start="53:27" pos:end="53:27">4</literal></expr></argument>, <argument pos:start="53:30" pos:end="53:35"><expr pos:start="53:30" pos:end="53:35"><name pos:start="53:30" pos:end="53:35">offset</name></expr></argument>)</argument_list></call> <operator pos:start="53:38" pos:end="53:39">!=</operator> <literal type="number" pos:start="53:41" pos:end="53:41">4</literal> <operator pos:start="53:43" pos:end="53:44">||</operator>

        <call pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:13">pread</name><argument_list pos:start="55:14" pos:end="55:35">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">fd</name></expr></argument>, <argument pos:start="55:19" pos:end="55:23"><expr pos:start="55:19" pos:end="55:23"><operator pos:start="55:19" pos:end="55:19">&amp;</operator><name pos:start="55:20" pos:end="55:23">size</name></expr></argument>, <argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">4</literal></expr></argument>, <argument pos:start="55:29" pos:end="55:34"><expr pos:start="55:29" pos:end="55:34"><name pos:start="55:29" pos:end="55:34">offset</name></expr></argument>)</argument_list></call> <operator pos:start="55:37" pos:end="55:38">!=</operator> <literal type="number" pos:start="55:40" pos:end="55:40">4</literal> <operator pos:start="55:42" pos:end="55:43">||</operator>

        <call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:14">pwrite</name><argument_list pos:start="57:15" pos:end="57:36">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">fd</name></expr></argument>, <argument pos:start="57:20" pos:end="57:24"><expr pos:start="57:20" pos:end="57:24"><operator pos:start="57:20" pos:end="57:20">&amp;</operator><name pos:start="57:21" pos:end="57:24">orig</name></expr></argument>, <argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">4</literal></expr></argument>, <argument pos:start="57:30" pos:end="57:35"><expr pos:start="57:30" pos:end="57:35"><name pos:start="57:30" pos:end="57:35">offset</name></expr></argument>)</argument_list></call> <operator pos:start="57:38" pos:end="57:39">!=</operator> <literal type="number" pos:start="57:41" pos:end="57:41">4</literal></expr>)</condition> <block pos:start="57:44" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:15">

        <expr_stmt pos:start="59:9" pos:end="63:59"><expr pos:start="59:9" pos:end="63:58"><call pos:start="59:9" pos:end="63:58"><name pos:start="59:9" pos:end="59:20">error_report</name><argument_list pos:start="59:21" pos:end="63:58">(<argument pos:start="59:22" pos:end="59:55"><expr pos:start="59:22" pos:end="59:55"><literal type="string" pos:start="59:22" pos:end="59:55">"%s(%04x:%02x:%02x.%x) failed: %m"</literal></expr></argument>,

                     <argument pos:start="61:22" pos:end="61:29"><expr pos:start="61:22" pos:end="61:29"><name pos:start="61:22" pos:end="61:29">__func__</name></expr></argument>, <argument pos:start="61:32" pos:end="61:48"><expr pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:48"><name pos:start="61:32" pos:end="61:35">vdev</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:41">host</name><operator pos:start="61:42" pos:end="61:42">.</operator><name pos:start="61:43" pos:end="61:48">domain</name></name></expr></argument>, <argument pos:start="61:51" pos:end="61:64"><expr pos:start="61:51" pos:end="61:64"><name pos:start="61:51" pos:end="61:64"><name pos:start="61:51" pos:end="61:54">vdev</name><operator pos:start="61:55" pos:end="61:56">-&gt;</operator><name pos:start="61:57" pos:end="61:60">host</name><operator pos:start="61:61" pos:end="61:61">.</operator><name pos:start="61:62" pos:end="61:64">bus</name></name></expr></argument>,

                     <argument pos:start="63:22" pos:end="63:36"><expr pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:36"><name pos:start="63:22" pos:end="63:25">vdev</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:31">host</name><operator pos:start="63:32" pos:end="63:32">.</operator><name pos:start="63:33" pos:end="63:36">slot</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:57"><expr pos:start="63:39" pos:end="63:57"><name pos:start="63:39" pos:end="63:57"><name pos:start="63:39" pos:end="63:42">vdev</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:48">host</name><operator pos:start="63:49" pos:end="63:49">.</operator><name pos:start="63:50" pos:end="63:57">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:59"><expr pos:start="71:5" pos:end="71:58"><name pos:start="71:5" pos:end="71:8">size</name> <operator pos:start="71:10" pos:end="71:10">=</operator> <operator pos:start="71:12" pos:end="71:12">~</operator><operator pos:start="71:13" pos:end="71:13">(</operator><call pos:start="71:14" pos:end="71:30"><name pos:start="71:14" pos:end="71:24">le32_to_cpu</name><argument_list pos:start="71:25" pos:end="71:30">(<argument pos:start="71:26" pos:end="71:29"><expr pos:start="71:26" pos:end="71:29"><name pos:start="71:26" pos:end="71:29">size</name></expr></argument>)</argument_list></call> <operator pos:start="71:32" pos:end="71:32">&amp;</operator> <name pos:start="71:34" pos:end="71:53">PCI_ROM_ADDRESS_MASK</name><operator pos:start="71:54" pos:end="71:54">)</operator> <operator pos:start="71:56" pos:end="71:56">+</operator> <literal type="number" pos:start="71:58" pos:end="71:58">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:14">(<expr pos:start="75:9" pos:end="75:13"><operator pos:start="75:9" pos:end="75:9">!</operator><name pos:start="75:10" pos:end="75:13">size</name></expr>)</condition> <block pos:start="75:16" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:15">

        <return pos:start="77:9" pos:end="77:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="119:5"><if pos:start="83:5" pos:end="119:5">if <condition pos:start="83:8" pos:end="83:37">(<expr pos:start="83:9" pos:end="83:36"><call pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:30">vfio_blacklist_opt_rom</name><argument_list pos:start="83:31" pos:end="83:36">(<argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">vdev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:39" pos:end="119:5">{<block_content pos:start="85:9" pos:end="117:9">

        <if_stmt pos:start="85:9" pos:end="117:9"><if pos:start="85:9" pos:end="101:9">if <condition pos:start="85:12" pos:end="85:59">(<expr pos:start="85:13" pos:end="85:58"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:15">dev</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:21">opts</name></name> <operator pos:start="85:23" pos:end="85:24">&amp;&amp;</operator> <call pos:start="85:26" pos:end="85:58"><name pos:start="85:26" pos:end="85:37">qemu_opt_get</name><argument_list pos:start="85:38" pos:end="85:58">(<argument pos:start="85:39" pos:end="85:47"><expr pos:start="85:39" pos:end="85:47"><name pos:start="85:39" pos:end="85:47"><name pos:start="85:39" pos:end="85:41">dev</name><operator pos:start="85:42" pos:end="85:43">-&gt;</operator><name pos:start="85:44" pos:end="85:47">opts</name></name></expr></argument>, <argument pos:start="85:50" pos:end="85:57"><expr pos:start="85:50" pos:end="85:57"><literal type="string" pos:start="85:50" pos:end="85:57">"rombar"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:61" pos:end="101:9">{<block_content pos:start="87:13" pos:end="99:46">

            <expr_stmt pos:start="87:13" pos:end="99:46"><expr pos:start="87:13" pos:end="99:45"><call pos:start="87:13" pos:end="99:45"><name pos:start="87:13" pos:end="87:24">error_printf</name><argument_list pos:start="87:25" pos:end="99:45">(<argument pos:start="87:26" pos:end="95:35"><expr pos:start="87:26" pos:end="95:35"><literal type="string" pos:start="87:26" pos:end="87:65">"Warning : Device at %04x:%02x:%02x.%x "</literal>

                         <literal type="string" pos:start="89:26" pos:end="89:78">"is known to cause system instability issues during "</literal>

                         <literal type="string" pos:start="91:26" pos:end="91:49">"option rom execution. "</literal>

                         <literal type="string" pos:start="93:26" pos:end="93:85">"Proceeding anyway since user specified non zero value for "</literal>

                         <literal type="string" pos:start="95:26" pos:end="95:35">"rombar\n"</literal></expr></argument>,

                         <argument pos:start="97:26" pos:end="97:42"><expr pos:start="97:26" pos:end="97:42"><name pos:start="97:26" pos:end="97:42"><name pos:start="97:26" pos:end="97:29">vdev</name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:35">host</name><operator pos:start="97:36" pos:end="97:36">.</operator><name pos:start="97:37" pos:end="97:42">domain</name></name></expr></argument>, <argument pos:start="97:45" pos:end="97:58"><expr pos:start="97:45" pos:end="97:58"><name pos:start="97:45" pos:end="97:58"><name pos:start="97:45" pos:end="97:48">vdev</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:54">host</name><operator pos:start="97:55" pos:end="97:55">.</operator><name pos:start="97:56" pos:end="97:58">bus</name></name></expr></argument>, <argument pos:start="97:61" pos:end="97:75"><expr pos:start="97:61" pos:end="97:75"><name pos:start="97:61" pos:end="97:75"><name pos:start="97:61" pos:end="97:64">vdev</name><operator pos:start="97:65" pos:end="97:66">-&gt;</operator><name pos:start="97:67" pos:end="97:70">host</name><operator pos:start="97:71" pos:end="97:71">.</operator><name pos:start="97:72" pos:end="97:75">slot</name></name></expr></argument>,

                         <argument pos:start="99:26" pos:end="99:44"><expr pos:start="99:26" pos:end="99:44"><name pos:start="99:26" pos:end="99:44"><name pos:start="99:26" pos:end="99:29">vdev</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:35">host</name><operator pos:start="99:36" pos:end="99:36">.</operator><name pos:start="99:37" pos:end="99:44">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="117:9">else <block pos:start="101:16" pos:end="117:9">{<block_content pos:start="103:13" pos:end="115:19">

            <expr_stmt pos:start="103:13" pos:end="113:46"><expr pos:start="103:13" pos:end="113:45"><call pos:start="103:13" pos:end="113:45"><name pos:start="103:13" pos:end="103:24">error_printf</name><argument_list pos:start="103:25" pos:end="113:45">(<argument pos:start="103:26" pos:end="109:65"><expr pos:start="103:26" pos:end="109:65"><literal type="string" pos:start="103:26" pos:end="103:63">"Warning : Rom loading for device at "</literal>

                         <literal type="string" pos:start="105:26" pos:end="105:70">"%04x:%02x:%02x.%x has been disabled due to "</literal>

                         <literal type="string" pos:start="107:26" pos:end="107:54">"system instability issues. "</literal>

                         <literal type="string" pos:start="109:26" pos:end="109:65">"Specify rombar=1 or romfile to force\n"</literal></expr></argument>,

                         <argument pos:start="111:26" pos:end="111:42"><expr pos:start="111:26" pos:end="111:42"><name pos:start="111:26" pos:end="111:42"><name pos:start="111:26" pos:end="111:29">vdev</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:35">host</name><operator pos:start="111:36" pos:end="111:36">.</operator><name pos:start="111:37" pos:end="111:42">domain</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:58"><expr pos:start="111:45" pos:end="111:58"><name pos:start="111:45" pos:end="111:58"><name pos:start="111:45" pos:end="111:48">vdev</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:54">host</name><operator pos:start="111:55" pos:end="111:55">.</operator><name pos:start="111:56" pos:end="111:58">bus</name></name></expr></argument>, <argument pos:start="111:61" pos:end="111:75"><expr pos:start="111:61" pos:end="111:75"><name pos:start="111:61" pos:end="111:75"><name pos:start="111:61" pos:end="111:64">vdev</name><operator pos:start="111:65" pos:end="111:66">-&gt;</operator><name pos:start="111:67" pos:end="111:70">host</name><operator pos:start="111:71" pos:end="111:71">.</operator><name pos:start="111:72" pos:end="111:75">slot</name></name></expr></argument>,

                         <argument pos:start="113:26" pos:end="113:44"><expr pos:start="113:26" pos:end="113:44"><name pos:start="113:26" pos:end="113:44"><name pos:start="113:26" pos:end="113:29">vdev</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:35">host</name><operator pos:start="113:36" pos:end="113:36">.</operator><name pos:start="113:37" pos:end="113:44">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="115:13" pos:end="115:19">return;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:55"><expr pos:start="123:5" pos:end="123:54"><call pos:start="123:5" pos:end="123:54"><name pos:start="123:5" pos:end="123:27">trace_vfio_pci_size_rom</name><argument_list pos:start="123:28" pos:end="123:54">(<argument pos:start="123:29" pos:end="123:47"><expr pos:start="123:29" pos:end="123:47"><name pos:start="123:29" pos:end="123:47"><name pos:start="123:29" pos:end="123:32">vdev</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:42">vbasedev</name><operator pos:start="123:43" pos:end="123:43">.</operator><name pos:start="123:44" pos:end="123:47">name</name></name></expr></argument>, <argument pos:start="123:50" pos:end="123:53"><expr pos:start="123:50" pos:end="123:53"><name pos:start="123:50" pos:end="123:53">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="131:34"><expr pos:start="127:5" pos:end="131:33"><call pos:start="127:5" pos:end="131:33"><name pos:start="127:5" pos:end="127:12">snprintf</name><argument_list pos:start="127:13" pos:end="131:33">(<argument pos:start="127:14" pos:end="127:17"><expr pos:start="127:14" pos:end="127:17"><name pos:start="127:14" pos:end="127:17">name</name></expr></argument>, <argument pos:start="127:20" pos:end="127:31"><expr pos:start="127:20" pos:end="127:31"><sizeof pos:start="127:20" pos:end="127:31">sizeof<argument_list pos:start="127:26" pos:end="127:31">(<argument pos:start="127:27" pos:end="127:30"><expr pos:start="127:27" pos:end="127:30"><name pos:start="127:27" pos:end="127:30">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="127:34" pos:end="127:62"><expr pos:start="127:34" pos:end="127:62"><literal type="string" pos:start="127:34" pos:end="127:62">"vfio[%04x:%02x:%02x.%x].rom"</literal></expr></argument>,

             <argument pos:start="129:14" pos:end="129:30"><expr pos:start="129:14" pos:end="129:30"><name pos:start="129:14" pos:end="129:30"><name pos:start="129:14" pos:end="129:17">vdev</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:23">host</name><operator pos:start="129:24" pos:end="129:24">.</operator><name pos:start="129:25" pos:end="129:30">domain</name></name></expr></argument>, <argument pos:start="129:33" pos:end="129:46"><expr pos:start="129:33" pos:end="129:46"><name pos:start="129:33" pos:end="129:46"><name pos:start="129:33" pos:end="129:36">vdev</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:42">host</name><operator pos:start="129:43" pos:end="129:43">.</operator><name pos:start="129:44" pos:end="129:46">bus</name></name></expr></argument>, <argument pos:start="129:49" pos:end="129:63"><expr pos:start="129:49" pos:end="129:63"><name pos:start="129:49" pos:end="129:63"><name pos:start="129:49" pos:end="129:52">vdev</name><operator pos:start="129:53" pos:end="129:54">-&gt;</operator><name pos:start="129:55" pos:end="129:58">host</name><operator pos:start="129:59" pos:end="129:59">.</operator><name pos:start="129:60" pos:end="129:63">slot</name></name></expr></argument>,

             <argument pos:start="131:14" pos:end="131:32"><expr pos:start="131:14" pos:end="131:32"><name pos:start="131:14" pos:end="131:32"><name pos:start="131:14" pos:end="131:17">vdev</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:23">host</name><operator pos:start="131:24" pos:end="131:24">.</operator><name pos:start="131:25" pos:end="131:32">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="137:59"><expr pos:start="135:5" pos:end="137:58"><call pos:start="135:5" pos:end="137:58"><name pos:start="135:5" pos:end="135:25">memory_region_init_io</name><argument_list pos:start="135:26" pos:end="137:58">(<argument pos:start="135:27" pos:end="135:41"><expr pos:start="135:27" pos:end="135:41"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:41"><name pos:start="135:28" pos:end="135:31">vdev</name><operator pos:start="135:32" pos:end="135:33">-&gt;</operator><name pos:start="135:34" pos:end="135:37">pdev</name><operator pos:start="135:38" pos:end="135:38">.</operator><name pos:start="135:39" pos:end="135:41">rom</name></name></expr></argument>, <argument pos:start="135:44" pos:end="135:55"><expr pos:start="135:44" pos:end="135:55"><call pos:start="135:44" pos:end="135:55"><name pos:start="135:44" pos:end="135:49">OBJECT</name><argument_list pos:start="135:50" pos:end="135:55">(<argument pos:start="135:51" pos:end="135:54"><expr pos:start="135:51" pos:end="135:54"><name pos:start="135:51" pos:end="135:54">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="137:27" pos:end="137:39"><expr pos:start="137:27" pos:end="137:39"><operator pos:start="137:27" pos:end="137:27">&amp;</operator><name pos:start="137:28" pos:end="137:39">vfio_rom_ops</name></expr></argument>, <argument pos:start="137:42" pos:end="137:45"><expr pos:start="137:42" pos:end="137:45"><name pos:start="137:42" pos:end="137:45">vdev</name></expr></argument>, <argument pos:start="137:48" pos:end="137:51"><expr pos:start="137:48" pos:end="137:51"><name pos:start="137:48" pos:end="137:51">name</name></expr></argument>, <argument pos:start="137:54" pos:end="137:57"><expr pos:start="137:54" pos:end="137:57"><name pos:start="137:54" pos:end="137:57">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="143:69"><expr pos:start="141:5" pos:end="143:68"><call pos:start="141:5" pos:end="143:68"><name pos:start="141:5" pos:end="141:20">pci_register_bar</name><argument_list pos:start="141:21" pos:end="143:68">(<argument pos:start="141:22" pos:end="141:32"><expr pos:start="141:22" pos:end="141:32"><operator pos:start="141:22" pos:end="141:22">&amp;</operator><name pos:start="141:23" pos:end="141:32"><name pos:start="141:23" pos:end="141:26">vdev</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:32">pdev</name></name></expr></argument>, <argument pos:start="141:35" pos:end="141:46"><expr pos:start="141:35" pos:end="141:46"><name pos:start="141:35" pos:end="141:46">PCI_ROM_SLOT</name></expr></argument>,

                     <argument pos:start="143:22" pos:end="143:50"><expr pos:start="143:22" pos:end="143:50"><name pos:start="143:22" pos:end="143:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="143:53" pos:end="143:67"><expr pos:start="143:53" pos:end="143:67"><operator pos:start="143:53" pos:end="143:53">&amp;</operator><name pos:start="143:54" pos:end="143:67"><name pos:start="143:54" pos:end="143:57">vdev</name><operator pos:start="143:58" pos:end="143:59">-&gt;</operator><name pos:start="143:60" pos:end="143:63">pdev</name><operator pos:start="143:64" pos:end="143:64">.</operator><name pos:start="143:65" pos:end="143:67">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:30"><expr pos:start="147:5" pos:end="147:29"><name pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:8">vdev</name><operator pos:start="147:9" pos:end="147:10">-&gt;</operator><name pos:start="147:11" pos:end="147:14">pdev</name><operator pos:start="147:15" pos:end="147:15">.</operator><name pos:start="147:16" pos:end="147:22">has_rom</name></name> <operator pos:start="147:24" pos:end="147:24">=</operator> <name pos:start="147:26" pos:end="147:29">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:34"><expr pos:start="149:5" pos:end="149:33"><name pos:start="149:5" pos:end="149:25"><name pos:start="149:5" pos:end="149:8">vdev</name><operator pos:start="149:9" pos:end="149:10">-&gt;</operator><name pos:start="149:11" pos:end="149:25">rom_read_failed</name></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:33">false</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
