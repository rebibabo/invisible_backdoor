<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18319.c" pos:tabs="8"><function pos:start="1:1" pos:end="277:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:44">commit_bitstream_and_slice_buffer</name><parameter_list pos:start="1:45" pos:end="5:69">(<parameter pos:start="1:46" pos:end="1:66"><decl pos:start="1:46" pos:end="1:66"><type pos:start="1:46" pos:end="1:66"><name pos:start="1:46" pos:end="1:59">AVCodecContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">avctx</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:68"><decl pos:start="3:46" pos:end="3:68"><type pos:start="3:46" pos:end="3:68"><name pos:start="3:46" pos:end="3:64">DECODER_BUFFER_DESC</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:68">bs</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:68"><decl pos:start="5:46" pos:end="5:68"><type pos:start="5:46" pos:end="5:68"><name pos:start="5:46" pos:end="5:64">DECODER_BUFFER_DESC</name> <modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:68">sc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="277:1">{<block_content pos:start="9:5" pos:end="275:68">

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:21">H264Context</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">h</name> <init pos:start="9:26" pos:end="9:43">= <expr pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:43"><name pos:start="9:28" pos:end="9:32">avctx</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:18"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">unsigned</name></type> <name pos:start="11:20" pos:end="11:27">mb_count</name> <init pos:start="11:29" pos:end="11:56">= <expr pos:start="11:31" pos:end="11:56"><name pos:start="11:31" pos:end="11:41"><name pos:start="11:31" pos:end="11:31">h</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:41">mb_width</name></name> <operator pos:start="11:43" pos:end="11:43">*</operator> <name pos:start="11:45" pos:end="11:56"><name pos:start="11:45" pos:end="11:45">h</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:56">mb_height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">AVDXVAContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">ctx</name> <init pos:start="13:24" pos:end="13:47">= <expr pos:start="13:26" pos:end="13:47"><name pos:start="13:26" pos:end="13:47"><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:47">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:56"><decl pos:start="15:5" pos:end="15:55"><type pos:start="15:5" pos:end="15:23"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:21">H264Picture</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:38">current_picture</name> <init pos:start="15:40" pos:end="15:55">= <expr pos:start="15:42" pos:end="15:55"><name pos:start="15:42" pos:end="15:55"><name pos:start="15:42" pos:end="15:42">h</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:55">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:85"><decl pos:start="17:5" pos:end="17:84"><type pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:32">dxva2_picture_context</name></name> <modifier pos:start="17:34" pos:end="17:34">*</modifier></type><name pos:start="17:35" pos:end="17:41">ctx_pic</name> <init pos:start="17:43" pos:end="17:84">= <expr pos:start="17:45" pos:end="17:84"><name pos:start="17:45" pos:end="17:84"><name pos:start="17:45" pos:end="17:59">current_picture</name><operator pos:start="17:60" pos:end="17:61">-&gt;</operator><name pos:start="17:62" pos:end="17:84">hwaccel_picture_private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:39"><type pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:25">DXVA_Slice_H264_Short</name> <modifier pos:start="19:27" pos:end="19:27">*</modifier></type><name pos:start="19:28" pos:end="19:32">slice</name> <init pos:start="19:34" pos:end="19:39">= <expr pos:start="19:36" pos:end="19:39"><name pos:start="19:36" pos:end="19:39">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">void</name>     <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:27">dxva_data_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:40"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:11">uint8_t</name>  <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:23">dxva_data</name></decl>, <decl pos:start="23:26" pos:end="23:33"><type ref="prev" pos:start="23:5" pos:end="23:14"><modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:33">current</name></decl>, <decl pos:start="23:36" pos:end="23:39"><type ref="prev" pos:start="23:5" pos:end="23:14"><modifier pos:start="23:36" pos:end="23:36">*</modifier></type><name pos:start="23:37" pos:end="23:39">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">unsigned</name></type> <name pos:start="25:14" pos:end="25:22">dxva_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:8">void</name>     <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:24">slice_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">unsigned</name></type> <name pos:start="29:14" pos:end="29:23">slice_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:20"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">unsigned</name></type> <name pos:start="31:14" pos:end="31:20">padding</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:15"><decl pos:start="33:5" pos:end="33:14"><type pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:12">unsigned</name></type> <name pos:start="33:14" pos:end="33:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="42:0"><decl pos:start="35:5" pos:end="35:17"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">unsigned</name></type> <name pos:start="35:14" pos:end="35:17">type</name></decl>;</decl_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:83">/* Create an annex B bitstream buffer with only slice NAL and finalize slice */</comment>

<cpp:if pos:start="41:1" pos:end="41:18">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="43:5" pos:end="62:0"><if pos:start="43:5" pos:end="62:0">if <condition pos:start="43:8" pos:end="43:49">(<expr pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:22">pix_fmt</name></name> <operator pos:start="43:24" pos:end="43:25">==</operator> <name pos:start="43:27" pos:end="43:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="43:51" pos:end="62:0">{<block_content pos:start="45:9" pos:end="55:22">

        <expr_stmt pos:start="45:9" pos:end="45:52"><expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:12">type</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:51">D3D11_VIDEO_DECODER_BUFFER_BITSTREAM</name></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:22"><if pos:start="47:9" pos:end="55:22">if <condition pos:start="47:12" pos:end="53:84">(<expr pos:start="47:13" pos:end="53:83"><call pos:start="47:13" pos:end="53:83"><name pos:start="47:13" pos:end="47:18">FAILED</name><argument_list pos:start="47:19" pos:end="53:83">(<argument pos:start="47:20" pos:end="53:82"><expr pos:start="47:20" pos:end="53:82"><call pos:start="47:20" pos:end="53:82"><name pos:start="47:20" pos:end="47:54">ID3D11VideoContext_GetDecoderBuffer</name><argument_list pos:start="47:55" pos:end="53:82">(<argument pos:start="47:56" pos:end="47:90"><expr pos:start="47:56" pos:end="47:90"><call pos:start="47:56" pos:end="47:75"><name pos:start="47:56" pos:end="47:70">D3D11VA_CONTEXT</name><argument_list pos:start="47:71" pos:end="47:75">(<argument pos:start="47:72" pos:end="47:74"><expr pos:start="47:72" pos:end="47:74"><name pos:start="47:72" pos:end="47:74">ctx</name></expr></argument>)</argument_list></call><operator pos:start="47:76" pos:end="47:77">-&gt;</operator><name pos:start="47:78" pos:end="47:90">video_context</name></expr></argument>,

                                                       <argument pos:start="49:56" pos:end="49:84"><expr pos:start="49:56" pos:end="49:84"><call pos:start="49:56" pos:end="49:75"><name pos:start="49:56" pos:end="49:70">D3D11VA_CONTEXT</name><argument_list pos:start="49:71" pos:end="49:75">(<argument pos:start="49:72" pos:end="49:74"><expr pos:start="49:72" pos:end="49:74"><name pos:start="49:72" pos:end="49:74">ctx</name></expr></argument>)</argument_list></call><operator pos:start="49:76" pos:end="49:77">-&gt;</operator><name pos:start="49:78" pos:end="49:84">decoder</name></expr></argument>,

                                                       <argument pos:start="51:56" pos:end="51:59"><expr pos:start="51:56" pos:end="51:59"><name pos:start="51:56" pos:end="51:59">type</name></expr></argument>,

                                                       <argument pos:start="53:56" pos:end="53:65"><expr pos:start="53:56" pos:end="53:65"><operator pos:start="53:56" pos:end="53:56">&amp;</operator><name pos:start="53:57" pos:end="53:65">dxva_size</name></expr></argument>, <argument pos:start="53:68" pos:end="53:81"><expr pos:start="53:68" pos:end="53:81"><operator pos:start="53:68" pos:end="53:68">&amp;</operator><name pos:start="53:69" pos:end="53:81">dxva_data_ptr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:22"><block_content pos:start="55:13" pos:end="55:22">

            <return pos:start="55:13" pos:end="55:22">return <expr pos:start="55:20" pos:end="55:21"><operator pos:start="55:20" pos:end="55:20">-</operator><literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="61:1" pos:end="61:16">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="63:5" pos:end="78:0"><if pos:start="63:5" pos:end="78:0">if <condition pos:start="63:8" pos:end="63:47">(<expr pos:start="63:9" pos:end="63:46"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">avctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">pix_fmt</name></name> <operator pos:start="63:24" pos:end="63:25">==</operator> <name pos:start="63:27" pos:end="63:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="63:49" pos:end="78:0">{<block_content pos:start="65:9" pos:end="73:22">

        <expr_stmt pos:start="65:9" pos:end="65:45"><expr pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:12">type</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:44">DXVA2_BitStreamDateBufferType</name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="73:22"><if pos:start="67:9" pos:end="73:22">if <condition pos:start="67:12" pos:end="71:79">(<expr pos:start="67:13" pos:end="71:78"><call pos:start="67:13" pos:end="71:78"><name pos:start="67:13" pos:end="67:18">FAILED</name><argument_list pos:start="67:19" pos:end="71:78">(<argument pos:start="67:20" pos:end="71:77"><expr pos:start="67:20" pos:end="71:77"><call pos:start="67:20" pos:end="71:77"><name pos:start="67:20" pos:end="67:49">IDirectXVideoDecoder_GetBuffer</name><argument_list pos:start="67:50" pos:end="71:77">(<argument pos:start="67:51" pos:end="67:77"><expr pos:start="67:51" pos:end="67:77"><call pos:start="67:51" pos:end="67:68"><name pos:start="67:51" pos:end="67:63">DXVA2_CONTEXT</name><argument_list pos:start="67:64" pos:end="67:68">(<argument pos:start="67:65" pos:end="67:67"><expr pos:start="67:65" pos:end="67:67"><name pos:start="67:65" pos:end="67:67">ctx</name></expr></argument>)</argument_list></call><operator pos:start="67:69" pos:end="67:70">-&gt;</operator><name pos:start="67:71" pos:end="67:77">decoder</name></expr></argument>,

                                                  <argument pos:start="69:51" pos:end="69:54"><expr pos:start="69:51" pos:end="69:54"><name pos:start="69:51" pos:end="69:54">type</name></expr></argument>,

                                                  <argument pos:start="71:51" pos:end="71:64"><expr pos:start="71:51" pos:end="71:64"><operator pos:start="71:51" pos:end="71:51">&amp;</operator><name pos:start="71:52" pos:end="71:64">dxva_data_ptr</name></expr></argument>, <argument pos:start="71:67" pos:end="71:76"><expr pos:start="71:67" pos:end="71:76"><operator pos:start="71:67" pos:end="71:67">&amp;</operator><name pos:start="71:68" pos:end="71:76">dxva_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <return pos:start="73:13" pos:end="73:22">return <expr pos:start="73:20" pos:end="73:21"><operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:13">dxva_data</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <name pos:start="81:17" pos:end="81:29">dxva_data_ptr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:11">current</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:23">dxva_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:32"><expr pos:start="85:5" pos:end="85:31"><name pos:start="85:5" pos:end="85:7">end</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <name pos:start="85:11" pos:end="85:19">dxva_data</name> <operator pos:start="85:21" pos:end="85:21">+</operator> <name pos:start="85:23" pos:end="85:31">dxva_size</name></expr>;</expr_stmt>



    <for pos:start="89:5" pos:end="167:5">for <control pos:start="89:9" pos:end="89:46">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:41"><expr pos:start="89:17" pos:end="89:40"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:27">ctx_pic</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:40">slice_count</name></name></expr>;</condition> <incr pos:start="89:43" pos:end="89:45"><expr pos:start="89:43" pos:end="89:45"><name pos:start="89:43" pos:end="89:43">i</name><operator pos:start="89:44" pos:end="89:45">++</operator></expr></incr>)</control> <block pos:start="89:48" pos:end="167:5">{<block_content pos:start="91:9" pos:end="165:24">

        <decl_stmt pos:start="91:9" pos:end="91:56"><decl pos:start="91:9" pos:end="91:55"><type pos:start="91:9" pos:end="91:28"><specifier pos:start="91:9" pos:end="91:14">static</specifier> <specifier pos:start="91:16" pos:end="91:20">const</specifier> <name pos:start="91:22" pos:end="91:28">uint8_t</name></type> <name pos:start="91:30" pos:end="91:41"><name pos:start="91:30" pos:end="91:39">start_code</name><index pos:start="91:40" pos:end="91:41">[]</index></name> <init pos:start="91:43" pos:end="91:55">= <expr pos:start="91:45" pos:end="91:55"><block pos:start="91:45" pos:end="91:55">{ <expr pos:start="91:47" pos:end="91:47"><literal type="number" pos:start="91:47" pos:end="91:47">0</literal></expr>, <expr pos:start="91:50" pos:end="91:50"><literal type="number" pos:start="91:50" pos:end="91:50">0</literal></expr>, <expr pos:start="91:53" pos:end="91:53"><literal type="number" pos:start="91:53" pos:end="91:53">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:67"><decl pos:start="93:9" pos:end="93:66"><type pos:start="93:9" pos:end="93:29"><specifier pos:start="93:9" pos:end="93:14">static</specifier> <specifier pos:start="93:16" pos:end="93:20">const</specifier> <name pos:start="93:22" pos:end="93:29">unsigned</name></type> <name pos:start="93:31" pos:end="93:45">start_code_size</name> <init pos:start="93:47" pos:end="93:66">= <expr pos:start="93:49" pos:end="93:66"><sizeof pos:start="93:49" pos:end="93:66">sizeof<argument_list pos:start="93:55" pos:end="93:66">(<argument pos:start="93:56" pos:end="93:65"><expr pos:start="93:56" pos:end="93:65"><name pos:start="93:56" pos:end="93:65">start_code</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:32"><decl pos:start="95:9" pos:end="95:25"><type pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:16">unsigned</name></type> <name pos:start="95:18" pos:end="95:25">position</name></decl>, <decl pos:start="95:28" pos:end="95:31"><type ref="prev" pos:start="95:9" pos:end="95:16"/><name pos:start="95:28" pos:end="95:31">size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="101:71"><expr pos:start="99:9" pos:end="101:70"><call pos:start="99:9" pos:end="101:70"><name pos:start="99:9" pos:end="99:14">assert</name><argument_list pos:start="99:15" pos:end="101:70">(<argument pos:start="99:16" pos:end="101:69"><expr pos:start="99:16" pos:end="101:69"><call pos:start="99:16" pos:end="99:69"><name pos:start="99:16" pos:end="99:23">offsetof</name><argument_list pos:start="99:24" pos:end="99:69">(<argument pos:start="99:25" pos:end="99:45"><expr pos:start="99:25" pos:end="99:45"><name pos:start="99:25" pos:end="99:45">DXVA_Slice_H264_Short</name></expr></argument>, <argument pos:start="99:48" pos:end="99:68"><expr pos:start="99:48" pos:end="99:68"><name pos:start="99:48" pos:end="99:68">BSNALunitDataLocation</name></expr></argument>)</argument_list></call> <operator pos:start="99:71" pos:end="99:72">==</operator>

               <call pos:start="101:16" pos:end="101:69"><name pos:start="101:16" pos:end="101:23">offsetof</name><argument_list pos:start="101:24" pos:end="101:69">(<argument pos:start="101:25" pos:end="101:44"><expr pos:start="101:25" pos:end="101:44"><name pos:start="101:25" pos:end="101:44">DXVA_Slice_H264_Long</name></expr></argument>,  <argument pos:start="101:48" pos:end="101:68"><expr pos:start="101:48" pos:end="101:68"><name pos:start="101:48" pos:end="101:68">BSNALunitDataLocation</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="105:68"><expr pos:start="103:9" pos:end="105:67"><call pos:start="103:9" pos:end="105:67"><name pos:start="103:9" pos:end="103:14">assert</name><argument_list pos:start="103:15" pos:end="105:67">(<argument pos:start="103:16" pos:end="105:66"><expr pos:start="103:16" pos:end="105:66"><call pos:start="103:16" pos:end="103:66"><name pos:start="103:16" pos:end="103:23">offsetof</name><argument_list pos:start="103:24" pos:end="103:66">(<argument pos:start="103:25" pos:end="103:45"><expr pos:start="103:25" pos:end="103:45"><name pos:start="103:25" pos:end="103:45">DXVA_Slice_H264_Short</name></expr></argument>, <argument pos:start="103:48" pos:end="103:65"><expr pos:start="103:48" pos:end="103:65"><name pos:start="103:48" pos:end="103:65">SliceBytesInBuffer</name></expr></argument>)</argument_list></call> <operator pos:start="103:68" pos:end="103:69">==</operator>

               <call pos:start="105:16" pos:end="105:66"><name pos:start="105:16" pos:end="105:23">offsetof</name><argument_list pos:start="105:24" pos:end="105:66">(<argument pos:start="105:25" pos:end="105:44"><expr pos:start="105:25" pos:end="105:44"><name pos:start="105:25" pos:end="105:44">DXVA_Slice_H264_Long</name></expr></argument>,  <argument pos:start="105:48" pos:end="105:65"><expr pos:start="105:48" pos:end="105:65"><name pos:start="105:48" pos:end="105:65">SliceBytesInBuffer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="109:9" pos:end="115:68"><if pos:start="109:9" pos:end="111:45">if <condition pos:start="109:12" pos:end="109:39">(<expr pos:start="109:13" pos:end="109:38"><call pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:26">is_slice_short</name><argument_list pos:start="109:27" pos:end="109:38">(<argument pos:start="109:28" pos:end="109:32"><expr pos:start="109:28" pos:end="109:32"><name pos:start="109:28" pos:end="109:32">avctx</name></expr></argument>, <argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><name pos:start="109:35" pos:end="109:37">ctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:45"><block_content pos:start="111:13" pos:end="111:45">

            <expr_stmt pos:start="111:13" pos:end="111:45"><expr pos:start="111:13" pos:end="111:44"><name pos:start="111:13" pos:end="111:17">slice</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <operator pos:start="111:21" pos:end="111:21">&amp;</operator><name pos:start="111:22" pos:end="111:44"><name pos:start="111:22" pos:end="111:28">ctx_pic</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:41">slice_short</name><index pos:start="111:42" pos:end="111:44">[<expr pos:start="111:43" pos:end="111:43"><name pos:start="111:43" pos:end="111:43">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="113:9" pos:end="115:68">else<block type="pseudo" pos:start="115:13" pos:end="115:68"><block_content pos:start="115:13" pos:end="115:68">

            <expr_stmt pos:start="115:13" pos:end="115:68"><expr pos:start="115:13" pos:end="115:67"><name pos:start="115:13" pos:end="115:17">slice</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <operator pos:start="115:21" pos:end="115:21">(</operator><name pos:start="115:22" pos:end="115:42">DXVA_Slice_H264_Short</name><operator pos:start="115:43" pos:end="115:43">*</operator><operator pos:start="115:44" pos:end="115:44">)</operator><operator pos:start="115:45" pos:end="115:45">&amp;</operator><name pos:start="115:46" pos:end="115:67"><name pos:start="115:46" pos:end="115:52">ctx_pic</name><operator pos:start="115:53" pos:end="115:54">-&gt;</operator><name pos:start="115:55" pos:end="115:64">slice_long</name><index pos:start="115:65" pos:end="115:67">[<expr pos:start="115:66" pos:end="115:66"><name pos:start="115:66" pos:end="115:66">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:48"><expr pos:start="119:9" pos:end="119:47"><name pos:start="119:9" pos:end="119:16">position</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <name pos:start="119:20" pos:end="119:47"><name pos:start="119:20" pos:end="119:24">slice</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:47">BSNALunitDataLocation</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><name pos:start="121:9" pos:end="121:12">size</name>     <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:44"><name pos:start="121:20" pos:end="121:24">slice</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:44">SliceBytesInBuffer</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:51">(<expr pos:start="123:13" pos:end="123:50"><name pos:start="123:13" pos:end="123:27">start_code_size</name> <operator pos:start="123:29" pos:end="123:29">+</operator> <name pos:start="123:31" pos:end="123:34">size</name> <operator pos:start="123:36" pos:end="123:36">&gt;</operator> <name pos:start="123:38" pos:end="123:40">end</name> <operator pos:start="123:42" pos:end="123:42">-</operator> <name pos:start="123:44" pos:end="123:50">current</name></expr>)</condition> <block pos:start="123:53" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:18">

            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><call pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:68">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">avctx</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:41" pos:end="125:67"><expr pos:start="125:41" pos:end="125:67"><literal type="string" pos:start="125:41" pos:end="125:67">"Failed to build bitstream"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:59"><expr pos:start="133:9" pos:end="133:58"><name pos:start="133:9" pos:end="133:36"><name pos:start="133:9" pos:end="133:13">slice</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:36">BSNALunitDataLocation</name></name> <operator pos:start="133:38" pos:end="133:38">=</operator> <name pos:start="133:40" pos:end="133:46">current</name> <operator pos:start="133:48" pos:end="133:48">-</operator> <name pos:start="133:50" pos:end="133:58">dxva_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:62"><expr pos:start="135:9" pos:end="135:61"><name pos:start="135:9" pos:end="135:33"><name pos:start="135:9" pos:end="135:13">slice</name><operator pos:start="135:14" pos:end="135:15">-&gt;</operator><name pos:start="135:16" pos:end="135:33">SliceBytesInBuffer</name></name>    <operator pos:start="135:38" pos:end="135:38">=</operator> <name pos:start="135:40" pos:end="135:54">start_code_size</name> <operator pos:start="135:56" pos:end="135:56">+</operator> <name pos:start="135:58" pos:end="135:61">size</name></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="153:9"><if pos:start="139:9" pos:end="153:9">if <condition pos:start="139:12" pos:end="139:40">(<expr pos:start="139:13" pos:end="139:39"><operator pos:start="139:13" pos:end="139:13">!</operator><call pos:start="139:14" pos:end="139:39"><name pos:start="139:14" pos:end="139:27">is_slice_short</name><argument_list pos:start="139:28" pos:end="139:39">(<argument pos:start="139:29" pos:end="139:33"><expr pos:start="139:29" pos:end="139:33"><name pos:start="139:29" pos:end="139:33">avctx</name></expr></argument>, <argument pos:start="139:36" pos:end="139:38"><expr pos:start="139:36" pos:end="139:38"><name pos:start="139:36" pos:end="139:38">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:42" pos:end="153:9">{<block_content pos:start="141:13" pos:end="151:86">

            <decl_stmt pos:start="141:13" pos:end="141:76"><decl pos:start="141:13" pos:end="141:75"><type pos:start="141:13" pos:end="141:34"><name pos:start="141:13" pos:end="141:32">DXVA_Slice_H264_Long</name> <modifier pos:start="141:34" pos:end="141:34">*</modifier></type><name pos:start="141:35" pos:end="141:44">slice_long</name> <init pos:start="141:46" pos:end="141:75">= <expr pos:start="141:48" pos:end="141:75"><operator pos:start="141:48" pos:end="141:48">(</operator><name pos:start="141:49" pos:end="141:68">DXVA_Slice_H264_Long</name><operator pos:start="141:69" pos:end="141:69">*</operator><operator pos:start="141:70" pos:end="141:70">)</operator><name pos:start="141:71" pos:end="141:75">slice</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="143:13" pos:end="151:86"><if pos:start="143:13" pos:end="147:86">if <condition pos:start="143:16" pos:end="143:45">(<expr pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:17">i</name> <operator pos:start="143:19" pos:end="143:19">&lt;</operator> <name pos:start="143:21" pos:end="143:40"><name pos:start="143:21" pos:end="143:27">ctx_pic</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:40">slice_count</name></name> <operator pos:start="143:42" pos:end="143:42">-</operator> <literal type="number" pos:start="143:44" pos:end="143:44">1</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="147:86"><block_content pos:start="145:17" pos:end="147:86">

                <expr_stmt pos:start="145:17" pos:end="147:86"><expr pos:start="145:17" pos:end="147:85"><name pos:start="145:17" pos:end="145:42"><name pos:start="145:17" pos:end="145:26">slice_long</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:42">NumMbsForSlice</name></name> <operator pos:start="145:44" pos:end="145:44">=</operator>

                    <name pos:start="147:21" pos:end="147:33"><name pos:start="147:21" pos:end="147:30">slice_long</name><index pos:start="147:31" pos:end="147:33">[<expr pos:start="147:32" pos:end="147:32"><literal type="number" pos:start="147:32" pos:end="147:32">1</literal></expr>]</index></name><operator pos:start="147:34" pos:end="147:34">.</operator><name pos:start="147:35" pos:end="147:51">first_mb_in_slice</name> <operator pos:start="147:53" pos:end="147:53">-</operator> <name pos:start="147:55" pos:end="147:67"><name pos:start="147:55" pos:end="147:64">slice_long</name><index pos:start="147:65" pos:end="147:67">[<expr pos:start="147:66" pos:end="147:66"><literal type="number" pos:start="147:66" pos:end="147:66">0</literal></expr>]</index></name><operator pos:start="147:68" pos:end="147:68">.</operator><name pos:start="147:69" pos:end="147:85">first_mb_in_slice</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="149:13" pos:end="151:86">else<block type="pseudo" pos:start="151:17" pos:end="151:86"><block_content pos:start="151:17" pos:end="151:86">

                <expr_stmt pos:start="151:17" pos:end="151:86"><expr pos:start="151:17" pos:end="151:85"><name pos:start="151:17" pos:end="151:42"><name pos:start="151:17" pos:end="151:26">slice_long</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:42">NumMbsForSlice</name></name> <operator pos:start="151:44" pos:end="151:44">=</operator> <name pos:start="151:46" pos:end="151:53">mb_count</name> <operator pos:start="151:55" pos:end="151:55">-</operator> <name pos:start="151:57" pos:end="151:85"><name pos:start="151:57" pos:end="151:66">slice_long</name><operator pos:start="151:67" pos:end="151:68">-&gt;</operator><name pos:start="151:69" pos:end="151:85">first_mb_in_slice</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:53"><expr pos:start="157:9" pos:end="157:52"><call pos:start="157:9" pos:end="157:52"><name pos:start="157:9" pos:end="157:14">memcpy</name><argument_list pos:start="157:15" pos:end="157:52">(<argument pos:start="157:16" pos:end="157:22"><expr pos:start="157:16" pos:end="157:22"><name pos:start="157:16" pos:end="157:22">current</name></expr></argument>, <argument pos:start="157:25" pos:end="157:34"><expr pos:start="157:25" pos:end="157:34"><name pos:start="157:25" pos:end="157:34">start_code</name></expr></argument>, <argument pos:start="157:37" pos:end="157:51"><expr pos:start="157:37" pos:end="157:51"><name pos:start="157:37" pos:end="157:51">start_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:35"><expr pos:start="159:9" pos:end="159:34"><name pos:start="159:9" pos:end="159:15">current</name> <operator pos:start="159:17" pos:end="159:18">+=</operator> <name pos:start="159:20" pos:end="159:34">start_code_size</name></expr>;</expr_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:61"><expr pos:start="163:9" pos:end="163:60"><call pos:start="163:9" pos:end="163:60"><name pos:start="163:9" pos:end="163:14">memcpy</name><argument_list pos:start="163:15" pos:end="163:60">(<argument pos:start="163:16" pos:end="163:22"><expr pos:start="163:16" pos:end="163:22"><name pos:start="163:16" pos:end="163:22">current</name></expr></argument>, <argument pos:start="163:25" pos:end="163:53"><expr pos:start="163:25" pos:end="163:53"><operator pos:start="163:25" pos:end="163:25">&amp;</operator><name pos:start="163:26" pos:end="163:53"><name pos:start="163:26" pos:end="163:32">ctx_pic</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:43">bitstream</name><index pos:start="163:44" pos:end="163:53">[<expr pos:start="163:45" pos:end="163:52"><name pos:start="163:45" pos:end="163:52">position</name></expr>]</index></name></expr></argument>, <argument pos:start="163:56" pos:end="163:59"><expr pos:start="163:56" pos:end="163:59"><name pos:start="163:56" pos:end="163:59">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:24"><expr pos:start="165:9" pos:end="165:23"><name pos:start="165:9" pos:end="165:15">current</name> <operator pos:start="165:17" pos:end="165:18">+=</operator> <name pos:start="165:20" pos:end="165:23">size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="169:5" pos:end="169:72"><expr pos:start="169:5" pos:end="169:71"><name pos:start="169:5" pos:end="169:11">padding</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:71"><name pos:start="169:15" pos:end="169:19">FFMIN</name><argument_list pos:start="169:20" pos:end="169:71">(<argument pos:start="169:21" pos:end="169:55"><expr pos:start="169:21" pos:end="169:55"><literal type="number" pos:start="169:21" pos:end="169:25">128</literal> <operator pos:start="169:25" pos:end="169:25">-</operator> <operator pos:start="169:27" pos:end="169:27">(</operator><operator pos:start="169:28" pos:end="169:28">(</operator><name pos:start="169:29" pos:end="169:35">current</name> <operator pos:start="169:37" pos:end="169:37">-</operator> <name pos:start="169:39" pos:end="169:47">dxva_data</name><operator pos:start="169:48" pos:end="169:48">)</operator> <operator pos:start="169:50" pos:end="169:50">&amp;</operator> <literal type="number" pos:start="169:52" pos:end="169:54">127</literal><operator pos:start="169:55" pos:end="169:55">)</operator></expr></argument>, <argument pos:start="169:58" pos:end="169:70"><expr pos:start="169:58" pos:end="169:70"><name pos:start="169:58" pos:end="169:60">end</name> <operator pos:start="169:62" pos:end="169:62">-</operator> <name pos:start="169:64" pos:end="169:70">current</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="171:5" pos:end="184:0"><if pos:start="171:5" pos:end="184:0">if <condition pos:start="171:8" pos:end="171:29">(<expr pos:start="171:9" pos:end="171:28"><name pos:start="171:9" pos:end="171:13">slice</name> <operator pos:start="171:15" pos:end="171:16">&amp;&amp;</operator> <name pos:start="171:18" pos:end="171:24">padding</name> <operator pos:start="171:26" pos:end="171:26">&gt;</operator> <literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr>)</condition> <block pos:start="171:31" pos:end="184:0">{<block_content pos:start="173:9" pos:end="179:45">

        <expr_stmt pos:start="173:9" pos:end="173:36"><expr pos:start="173:9" pos:end="173:35"><call pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:14">memset</name><argument_list pos:start="173:15" pos:end="173:35">(<argument pos:start="173:16" pos:end="173:22"><expr pos:start="173:16" pos:end="173:22"><name pos:start="173:16" pos:end="173:22">current</name></expr></argument>, <argument pos:start="173:25" pos:end="173:25"><expr pos:start="173:25" pos:end="173:25"><literal type="number" pos:start="173:25" pos:end="173:25">0</literal></expr></argument>, <argument pos:start="173:28" pos:end="173:34"><expr pos:start="173:28" pos:end="173:34"><name pos:start="173:28" pos:end="173:34">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:27"><expr pos:start="175:9" pos:end="175:26"><name pos:start="175:9" pos:end="175:15">current</name> <operator pos:start="175:17" pos:end="175:18">+=</operator> <name pos:start="175:20" pos:end="175:26">padding</name></expr>;</expr_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:45"><expr pos:start="179:9" pos:end="179:44"><name pos:start="179:9" pos:end="179:33"><name pos:start="179:9" pos:end="179:13">slice</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:33">SliceBytesInBuffer</name></name> <operator pos:start="179:35" pos:end="179:36">+=</operator> <name pos:start="179:38" pos:end="179:44">padding</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="183:1" pos:end="183:18">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="185:5" pos:end="194:0"><if pos:start="185:5" pos:end="194:0">if <condition pos:start="185:8" pos:end="185:49">(<expr pos:start="185:9" pos:end="185:48"><name pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:13">avctx</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:22">pix_fmt</name></name> <operator pos:start="185:24" pos:end="185:25">==</operator> <name pos:start="185:27" pos:end="185:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition><block type="pseudo" pos:start="187:9" pos:end="194:0"><block_content pos:start="187:9" pos:end="194:0">

        <if_stmt pos:start="187:9" pos:end="194:0"><if pos:start="187:9" pos:end="194:0">if <condition pos:start="187:12" pos:end="187:134">(<expr pos:start="187:13" pos:end="187:133"><call pos:start="187:13" pos:end="187:133"><name pos:start="187:13" pos:end="187:18">FAILED</name><argument_list pos:start="187:19" pos:end="187:133">(<argument pos:start="187:20" pos:end="187:132"><expr pos:start="187:20" pos:end="187:132"><call pos:start="187:20" pos:end="187:132"><name pos:start="187:20" pos:end="187:58">ID3D11VideoContext_ReleaseDecoderBuffer</name><argument_list pos:start="187:59" pos:end="187:132">(<argument pos:start="187:60" pos:end="187:94"><expr pos:start="187:60" pos:end="187:94"><call pos:start="187:60" pos:end="187:79"><name pos:start="187:60" pos:end="187:74">D3D11VA_CONTEXT</name><argument_list pos:start="187:75" pos:end="187:79">(<argument pos:start="187:76" pos:end="187:78"><expr pos:start="187:76" pos:end="187:78"><name pos:start="187:76" pos:end="187:78">ctx</name></expr></argument>)</argument_list></call><operator pos:start="187:80" pos:end="187:81">-&gt;</operator><name pos:start="187:82" pos:end="187:94">video_context</name></expr></argument>, <argument pos:start="187:97" pos:end="187:125"><expr pos:start="187:97" pos:end="187:125"><call pos:start="187:97" pos:end="187:116"><name pos:start="187:97" pos:end="187:111">D3D11VA_CONTEXT</name><argument_list pos:start="187:112" pos:end="187:116">(<argument pos:start="187:113" pos:end="187:115"><expr pos:start="187:113" pos:end="187:115"><name pos:start="187:113" pos:end="187:115">ctx</name></expr></argument>)</argument_list></call><operator pos:start="187:117" pos:end="187:118">-&gt;</operator><name pos:start="187:119" pos:end="187:125">decoder</name></expr></argument>, <argument pos:start="187:128" pos:end="187:131"><expr pos:start="187:128" pos:end="187:131"><name pos:start="187:128" pos:end="187:131">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="194:0"><block_content pos:start="189:13" pos:end="194:0">

            <return pos:start="189:13" pos:end="194:0">return <expr pos:start="189:20" pos:end="189:21"><operator pos:start="189:20" pos:end="189:20">-</operator><literal type="number" pos:start="189:21" pos:end="189:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="193:1" pos:end="193:16">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:16"><name pos:start="193:5" pos:end="193:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="195:5" pos:end="202:0"><if pos:start="195:5" pos:end="202:0">if <condition pos:start="195:8" pos:end="195:47">(<expr pos:start="195:9" pos:end="195:46"><name pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:13">avctx</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:22">pix_fmt</name></name> <operator pos:start="195:24" pos:end="195:25">==</operator> <name pos:start="195:27" pos:end="195:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="202:0"><block_content pos:start="197:9" pos:end="202:0">

        <if_stmt pos:start="197:9" pos:end="202:0"><if pos:start="197:9" pos:end="202:0">if <condition pos:start="197:12" pos:end="197:90">(<expr pos:start="197:13" pos:end="197:89"><call pos:start="197:13" pos:end="197:89"><name pos:start="197:13" pos:end="197:18">FAILED</name><argument_list pos:start="197:19" pos:end="197:89">(<argument pos:start="197:20" pos:end="197:88"><expr pos:start="197:20" pos:end="197:88"><call pos:start="197:20" pos:end="197:88"><name pos:start="197:20" pos:end="197:53">IDirectXVideoDecoder_ReleaseBuffer</name><argument_list pos:start="197:54" pos:end="197:88">(<argument pos:start="197:55" pos:end="197:81"><expr pos:start="197:55" pos:end="197:81"><call pos:start="197:55" pos:end="197:72"><name pos:start="197:55" pos:end="197:67">DXVA2_CONTEXT</name><argument_list pos:start="197:68" pos:end="197:72">(<argument pos:start="197:69" pos:end="197:71"><expr pos:start="197:69" pos:end="197:71"><name pos:start="197:69" pos:end="197:71">ctx</name></expr></argument>)</argument_list></call><operator pos:start="197:73" pos:end="197:74">-&gt;</operator><name pos:start="197:75" pos:end="197:81">decoder</name></expr></argument>, <argument pos:start="197:84" pos:end="197:87"><expr pos:start="197:84" pos:end="197:87"><name pos:start="197:84" pos:end="197:87">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="202:0"><block_content pos:start="199:13" pos:end="202:0">

            <return pos:start="199:13" pos:end="202:0">return <expr pos:start="199:20" pos:end="199:21"><operator pos:start="199:20" pos:end="199:20">-</operator><literal type="number" pos:start="199:21" pos:end="199:21">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="201:1" pos:end="201:6">#<cpp:directive pos:start="201:2" pos:end="201:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="203:5" pos:end="210:0"><if pos:start="203:5" pos:end="210:0">if <condition pos:start="203:8" pos:end="203:33">(<expr pos:start="203:9" pos:end="203:32"><name pos:start="203:9" pos:end="203:9">i</name> <operator pos:start="203:11" pos:end="203:11">&lt;</operator> <name pos:start="203:13" pos:end="203:32"><name pos:start="203:13" pos:end="203:19">ctx_pic</name><operator pos:start="203:20" pos:end="203:21">-&gt;</operator><name pos:start="203:22" pos:end="203:32">slice_count</name></name></expr>)</condition><block type="pseudo" pos:start="205:9" pos:end="210:0"><block_content pos:start="205:9" pos:end="210:0">

        <return pos:start="205:9" pos:end="210:0">return <expr pos:start="205:16" pos:end="205:17"><operator pos:start="205:16" pos:end="205:16">-</operator><literal type="number" pos:start="205:17" pos:end="205:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="209:1" pos:end="209:18">#<cpp:directive pos:start="209:2" pos:end="209:3">if</cpp:directive> <expr pos:start="209:5" pos:end="209:18"><name pos:start="209:5" pos:end="209:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="211:5" pos:end="232:0"><if pos:start="211:5" pos:end="232:0">if <condition pos:start="211:8" pos:end="211:49">(<expr pos:start="211:9" pos:end="211:48"><name pos:start="211:9" pos:end="211:22"><name pos:start="211:9" pos:end="211:13">avctx</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:22">pix_fmt</name></name> <operator pos:start="211:24" pos:end="211:25">==</operator> <name pos:start="211:27" pos:end="211:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="211:51" pos:end="232:0">{<block_content pos:start="213:9" pos:end="225:56">

        <decl_stmt pos:start="213:9" pos:end="213:52"><decl pos:start="213:9" pos:end="213:51"><type pos:start="213:9" pos:end="213:41"><name pos:start="213:9" pos:end="213:39">D3D11_VIDEO_DECODER_BUFFER_DESC</name> <modifier pos:start="213:41" pos:end="213:41">*</modifier></type><name pos:start="213:42" pos:end="213:46">dsc11</name> <init pos:start="213:48" pos:end="213:51">= <expr pos:start="213:50" pos:end="213:51"><name pos:start="213:50" pos:end="213:51">bs</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:41"><expr pos:start="215:9" pos:end="215:40"><call pos:start="215:9" pos:end="215:40"><name pos:start="215:9" pos:end="215:14">memset</name><argument_list pos:start="215:15" pos:end="215:40">(<argument pos:start="215:16" pos:end="215:20"><expr pos:start="215:16" pos:end="215:20"><name pos:start="215:16" pos:end="215:20">dsc11</name></expr></argument>, <argument pos:start="215:23" pos:end="215:23"><expr pos:start="215:23" pos:end="215:23"><literal type="number" pos:start="215:23" pos:end="215:23">0</literal></expr></argument>, <argument pos:start="215:26" pos:end="215:39"><expr pos:start="215:26" pos:end="215:39"><sizeof pos:start="215:26" pos:end="215:39">sizeof<argument_list pos:start="215:32" pos:end="215:39">(<argument pos:start="215:33" pos:end="215:38"><expr pos:start="215:33" pos:end="215:38"><operator pos:start="215:33" pos:end="215:33">*</operator><name pos:start="215:34" pos:end="215:38">dsc11</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:43"><expr pos:start="217:9" pos:end="217:42"><name pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:13">dsc11</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:25">BufferType</name></name>           <operator pos:start="217:37" pos:end="217:37">=</operator> <name pos:start="217:39" pos:end="217:42">type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:58"><expr pos:start="219:9" pos:end="219:57"><name pos:start="219:9" pos:end="219:23"><name pos:start="219:9" pos:end="219:13">dsc11</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:23">DataSize</name></name>             <operator pos:start="219:37" pos:end="219:37">=</operator> <name pos:start="219:39" pos:end="219:45">current</name> <operator pos:start="219:47" pos:end="219:47">-</operator> <name pos:start="219:49" pos:end="219:57">dxva_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:47"><expr pos:start="221:9" pos:end="221:46"><name pos:start="221:9" pos:end="221:29"><name pos:start="221:9" pos:end="221:13">dsc11</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:29">NumMBsInBuffer</name></name>       <operator pos:start="221:37" pos:end="221:37">=</operator> <name pos:start="221:39" pos:end="221:46">mb_count</name></expr>;</expr_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:56"><expr pos:start="225:9" pos:end="225:55"><name pos:start="225:9" pos:end="225:12">type</name> <operator pos:start="225:14" pos:end="225:14">=</operator> <name pos:start="225:16" pos:end="225:55">D3D11_VIDEO_DECODER_BUFFER_SLICE_CONTROL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="229:1" pos:end="229:6">#<cpp:directive pos:start="229:2" pos:end="229:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="231:1" pos:end="231:16">#<cpp:directive pos:start="231:2" pos:end="231:3">if</cpp:directive> <expr pos:start="231:5" pos:end="231:16"><name pos:start="231:5" pos:end="231:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="233:5" pos:end="252:0"><if pos:start="233:5" pos:end="252:0">if <condition pos:start="233:8" pos:end="233:47">(<expr pos:start="233:9" pos:end="233:46"><name pos:start="233:9" pos:end="233:22"><name pos:start="233:9" pos:end="233:13">avctx</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:22">pix_fmt</name></name> <operator pos:start="233:24" pos:end="233:25">==</operator> <name pos:start="233:27" pos:end="233:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="233:49" pos:end="252:0">{<block_content pos:start="235:9" pos:end="247:44">

        <decl_stmt pos:start="235:9" pos:end="235:42"><decl pos:start="235:9" pos:end="235:41"><type pos:start="235:9" pos:end="235:32"><name pos:start="235:9" pos:end="235:30">DXVA2_DecodeBufferDesc</name> <modifier pos:start="235:32" pos:end="235:32">*</modifier></type><name pos:start="235:33" pos:end="235:36">dsc2</name> <init pos:start="235:38" pos:end="235:41">= <expr pos:start="235:40" pos:end="235:41"><name pos:start="235:40" pos:end="235:41">bs</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:39"><expr pos:start="237:9" pos:end="237:38"><call pos:start="237:9" pos:end="237:38"><name pos:start="237:9" pos:end="237:14">memset</name><argument_list pos:start="237:15" pos:end="237:38">(<argument pos:start="237:16" pos:end="237:19"><expr pos:start="237:16" pos:end="237:19"><name pos:start="237:16" pos:end="237:19">dsc2</name></expr></argument>, <argument pos:start="237:22" pos:end="237:22"><expr pos:start="237:22" pos:end="237:22"><literal type="number" pos:start="237:22" pos:end="237:22">0</literal></expr></argument>, <argument pos:start="237:25" pos:end="237:37"><expr pos:start="237:25" pos:end="237:37"><sizeof pos:start="237:25" pos:end="237:37">sizeof<argument_list pos:start="237:31" pos:end="237:37">(<argument pos:start="237:32" pos:end="237:36"><expr pos:start="237:32" pos:end="237:36"><operator pos:start="237:32" pos:end="237:32">*</operator><name pos:start="237:33" pos:end="237:36">dsc2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:42"><expr pos:start="239:9" pos:end="239:41"><name pos:start="239:9" pos:end="239:34"><name pos:start="239:9" pos:end="239:12">dsc2</name><operator pos:start="239:13" pos:end="239:14">-&gt;</operator><name pos:start="239:15" pos:end="239:34">CompressedBufferType</name></name> <operator pos:start="239:36" pos:end="239:36">=</operator> <name pos:start="239:38" pos:end="239:41">type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:57"><expr pos:start="241:9" pos:end="241:56"><name pos:start="241:9" pos:end="241:22"><name pos:start="241:9" pos:end="241:12">dsc2</name><operator pos:start="241:13" pos:end="241:14">-&gt;</operator><name pos:start="241:15" pos:end="241:22">DataSize</name></name>             <operator pos:start="241:36" pos:end="241:36">=</operator> <name pos:start="241:38" pos:end="241:44">current</name> <operator pos:start="241:46" pos:end="241:46">-</operator> <name pos:start="241:48" pos:end="241:56">dxva_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:46"><expr pos:start="243:9" pos:end="243:45"><name pos:start="243:9" pos:end="243:28"><name pos:start="243:9" pos:end="243:12">dsc2</name><operator pos:start="243:13" pos:end="243:14">-&gt;</operator><name pos:start="243:15" pos:end="243:28">NumMBsInBuffer</name></name>       <operator pos:start="243:36" pos:end="243:36">=</operator> <name pos:start="243:38" pos:end="243:45">mb_count</name></expr>;</expr_stmt>



        <expr_stmt pos:start="247:9" pos:end="247:44"><expr pos:start="247:9" pos:end="247:43"><name pos:start="247:9" pos:end="247:12">type</name> <operator pos:start="247:14" pos:end="247:14">=</operator> <name pos:start="247:16" pos:end="247:43">DXVA2_SliceControlBufferType</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="251:1" pos:end="251:6">#<cpp:directive pos:start="251:2" pos:end="251:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="255:5" pos:end="267:5"><if pos:start="255:5" pos:end="261:5">if <condition pos:start="255:8" pos:end="255:35">(<expr pos:start="255:9" pos:end="255:34"><call pos:start="255:9" pos:end="255:34"><name pos:start="255:9" pos:end="255:22">is_slice_short</name><argument_list pos:start="255:23" pos:end="255:34">(<argument pos:start="255:24" pos:end="255:28"><expr pos:start="255:24" pos:end="255:28"><name pos:start="255:24" pos:end="255:28">avctx</name></expr></argument>, <argument pos:start="255:31" pos:end="255:33"><expr pos:start="255:31" pos:end="255:33"><name pos:start="255:31" pos:end="255:33">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="255:37" pos:end="261:5">{<block_content pos:start="257:9" pos:end="259:74">

        <expr_stmt pos:start="257:9" pos:end="257:42"><expr pos:start="257:9" pos:end="257:41"><name pos:start="257:9" pos:end="257:18">slice_data</name> <operator pos:start="257:20" pos:end="257:20">=</operator> <name pos:start="257:22" pos:end="257:41"><name pos:start="257:22" pos:end="257:28">ctx_pic</name><operator pos:start="257:29" pos:end="257:30">-&gt;</operator><name pos:start="257:31" pos:end="257:41">slice_short</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:74"><expr pos:start="259:9" pos:end="259:73"><name pos:start="259:9" pos:end="259:18">slice_size</name> <operator pos:start="259:20" pos:end="259:20">=</operator> <name pos:start="259:22" pos:end="259:41"><name pos:start="259:22" pos:end="259:28">ctx_pic</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:41">slice_count</name></name> <operator pos:start="259:43" pos:end="259:43">*</operator> <sizeof pos:start="259:45" pos:end="259:73">sizeof<argument_list pos:start="259:51" pos:end="259:73">(<argument pos:start="259:52" pos:end="259:72"><expr pos:start="259:52" pos:end="259:72"><operator pos:start="259:52" pos:end="259:52">*</operator><name pos:start="259:53" pos:end="259:72"><name pos:start="259:53" pos:end="259:59">ctx_pic</name><operator pos:start="259:60" pos:end="259:61">-&gt;</operator><name pos:start="259:62" pos:end="259:72">slice_short</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="261:7" pos:end="267:5">else <block pos:start="261:12" pos:end="267:5">{<block_content pos:start="263:9" pos:end="265:73">

        <expr_stmt pos:start="263:9" pos:end="263:41"><expr pos:start="263:9" pos:end="263:40"><name pos:start="263:9" pos:end="263:18">slice_data</name> <operator pos:start="263:20" pos:end="263:20">=</operator> <name pos:start="263:22" pos:end="263:40"><name pos:start="263:22" pos:end="263:28">ctx_pic</name><operator pos:start="263:29" pos:end="263:30">-&gt;</operator><name pos:start="263:31" pos:end="263:40">slice_long</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:73"><expr pos:start="265:9" pos:end="265:72"><name pos:start="265:9" pos:end="265:18">slice_size</name> <operator pos:start="265:20" pos:end="265:20">=</operator> <name pos:start="265:22" pos:end="265:41"><name pos:start="265:22" pos:end="265:28">ctx_pic</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:41">slice_count</name></name> <operator pos:start="265:43" pos:end="265:43">*</operator> <sizeof pos:start="265:45" pos:end="265:72">sizeof<argument_list pos:start="265:51" pos:end="265:72">(<argument pos:start="265:52" pos:end="265:71"><expr pos:start="265:52" pos:end="265:71"><operator pos:start="265:52" pos:end="265:52">*</operator><name pos:start="265:53" pos:end="265:71"><name pos:start="265:53" pos:end="265:59">ctx_pic</name><operator pos:start="265:60" pos:end="265:61">-&gt;</operator><name pos:start="265:62" pos:end="265:71">slice_long</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:38"><expr pos:start="269:5" pos:end="269:37"><call pos:start="269:5" pos:end="269:37"><name pos:start="269:5" pos:end="269:10">assert</name><argument_list pos:start="269:11" pos:end="269:37">(<argument pos:start="269:12" pos:end="269:36"><expr pos:start="269:12" pos:end="269:36"><operator pos:start="269:12" pos:end="269:12">(</operator><name pos:start="269:13" pos:end="269:24"><name pos:start="269:13" pos:end="269:14">bs</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:24">DataSize</name></name> <operator pos:start="269:26" pos:end="269:26">&amp;</operator> <literal type="number" pos:start="269:28" pos:end="269:30">127</literal><operator pos:start="269:31" pos:end="269:31">)</operator> <operator pos:start="269:33" pos:end="269:34">==</operator> <literal type="number" pos:start="269:36" pos:end="269:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="271:5" pos:end="275:68">return <expr pos:start="271:12" pos:end="275:67"><call pos:start="271:12" pos:end="275:67"><name pos:start="271:12" pos:end="271:33">ff_dxva2_commit_buffer</name><argument_list pos:start="271:34" pos:end="275:67">(<argument pos:start="271:35" pos:end="271:39"><expr pos:start="271:35" pos:end="271:39"><name pos:start="271:35" pos:end="271:39">avctx</name></expr></argument>, <argument pos:start="271:42" pos:end="271:44"><expr pos:start="271:42" pos:end="271:44"><name pos:start="271:42" pos:end="271:44">ctx</name></expr></argument>, <argument pos:start="271:47" pos:end="271:48"><expr pos:start="271:47" pos:end="271:48"><name pos:start="271:47" pos:end="271:48">sc</name></expr></argument>,

                                  <argument pos:start="273:35" pos:end="273:38"><expr pos:start="273:35" pos:end="273:38"><name pos:start="273:35" pos:end="273:38">type</name></expr></argument>,

                                  <argument pos:start="275:35" pos:end="275:44"><expr pos:start="275:35" pos:end="275:44"><name pos:start="275:35" pos:end="275:44">slice_data</name></expr></argument>, <argument pos:start="275:47" pos:end="275:56"><expr pos:start="275:47" pos:end="275:56"><name pos:start="275:47" pos:end="275:56">slice_size</name></expr></argument>, <argument pos:start="275:59" pos:end="275:66"><expr pos:start="275:59" pos:end="275:66"><name pos:start="275:59" pos:end="275:66">mb_count</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
