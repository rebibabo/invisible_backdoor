<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3491.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="1:58">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">s1</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:52">AVPacket</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:5">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VideoDemuxData</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:37">= <expr pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:37"><name pos:start="5:25" pos:end="5:26">s1</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:17">filename</name><index pos:start="7:18" pos:end="7:23">[<expr pos:start="7:19" pos:end="7:22"><literal type="number" pos:start="7:19" pos:end="7:22">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">size</name><index pos:start="11:13" pos:end="11:15">[<expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">3</literal></expr>]</index></name><init pos:start="11:16" pos:end="11:19">=<expr pos:start="11:17" pos:end="11:19"><block pos:start="11:17" pos:end="11:19">{<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>}</block></expr></init></decl>, <decl pos:start="11:22" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:24">ret</name><index pos:start="11:25" pos:end="11:27">[<expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">3</literal></expr>]</index></name><init pos:start="11:28" pos:end="11:31">=<expr pos:start="11:29" pos:end="11:31"><block pos:start="11:29" pos:end="11:31">{<expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:18">f</name><index pos:start="13:19" pos:end="13:21">[<expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:25">codec</name><init pos:start="15:26" pos:end="15:48">= <expr pos:start="15:28" pos:end="15:48"><name pos:start="15:28" pos:end="15:41"><name pos:start="15:28" pos:end="15:29">s1</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:38">streams</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>]</index></name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:48">codec</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="83:5"><if pos:start="19:5" pos:end="73:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:19"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:19">is_pipe</name></name></expr>)</condition> <block pos:start="19:22" pos:end="73:5">{<block_content pos:start="23:9" pos:end="71:63">

        <comment type="block" pos:start="21:9" pos:end="21:29">/* loop over input */</comment>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:51">(<expr pos:start="23:13" pos:end="23:50"><name pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">loop</name></name> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:36"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:36">img_number</name></name> <operator pos:start="23:38" pos:end="23:38">&gt;</operator> <name pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:50">img_last</name></name></expr>)</condition> <block pos:start="23:53" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:41">

            <expr_stmt pos:start="25:13" pos:end="25:41"><expr pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">img_number</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:40"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:40">img_first</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:31"><if pos:start="29:9" pos:end="31:31">if <condition pos:start="29:12" pos:end="29:40">(<expr pos:start="29:13" pos:end="29:39"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">img_number</name></name> <operator pos:start="29:27" pos:end="29:27">&gt;</operator> <name pos:start="29:29" pos:end="29:39"><name pos:start="29:29" pos:end="29:29">s</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:39">img_last</name></name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:31"><block_content pos:start="31:13" pos:end="31:31">

            <return pos:start="31:13" pos:end="31:31">return <expr pos:start="31:20" pos:end="31:30"><name pos:start="31:20" pos:end="31:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:32"><if pos:start="33:9" pos:end="37:32">if <condition pos:start="33:12" pos:end="35:81">(<expr pos:start="33:13" pos:end="35:80"><call pos:start="33:13" pos:end="35:57"><name pos:start="33:13" pos:end="33:33">av_get_frame_filename</name><argument_list pos:start="33:34" pos:end="35:57">(<argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:42">filename</name></expr></argument>, <argument pos:start="33:45" pos:end="33:60"><expr pos:start="33:45" pos:end="33:60"><sizeof pos:start="33:45" pos:end="33:60">sizeof<argument_list pos:start="33:51" pos:end="33:60">(<argument pos:start="33:52" pos:end="33:59"><expr pos:start="33:52" pos:end="33:59"><name pos:start="33:52" pos:end="33:59">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                  <argument pos:start="35:35" pos:end="35:41"><expr pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:41"><name pos:start="35:35" pos:end="35:35">s</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:41">path</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:56"><expr pos:start="35:44" pos:end="35:56"><name pos:start="35:44" pos:end="35:56"><name pos:start="35:44" pos:end="35:44">s</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:56">img_number</name></name></expr></argument>)</argument_list></call><operator pos:start="35:58" pos:end="35:58">&lt;</operator><literal type="number" pos:start="35:59" pos:end="35:59">0</literal> <operator pos:start="35:61" pos:end="35:62">&amp;&amp;</operator> <name pos:start="35:64" pos:end="35:76"><name pos:start="35:64" pos:end="35:64">s</name><operator pos:start="35:65" pos:end="35:66">-&gt;</operator><name pos:start="35:67" pos:end="35:76">img_number</name></name> <operator pos:start="35:78" pos:end="35:78">&gt;</operator> <literal type="number" pos:start="35:80" pos:end="35:80">1</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:32"><block_content pos:start="37:13" pos:end="37:32">

            <return pos:start="37:13" pos:end="37:32">return <expr pos:start="37:20" pos:end="37:31"><call pos:start="37:20" pos:end="37:31"><name pos:start="37:20" pos:end="37:26">AVERROR</name><argument_list pos:start="37:27" pos:end="37:31">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <for pos:start="39:9" pos:end="65:9">for<control pos:start="39:12" pos:end="39:26">(<init pos:start="39:13" pos:end="39:16"><expr pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:13">i</name><operator pos:start="39:14" pos:end="39:14">=</operator><literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>;</init> <condition pos:start="39:18" pos:end="39:21"><expr pos:start="39:18" pos:end="39:20"><name pos:start="39:18" pos:end="39:18">i</name><operator pos:start="39:19" pos:end="39:19">&lt;</operator><literal type="number" pos:start="39:20" pos:end="39:20">3</literal></expr>;</condition> <incr pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:23">i</name><operator pos:start="39:24" pos:end="39:25">++</operator></expr></incr>)</control><block pos:start="39:27" pos:end="65:9">{<block_content pos:start="41:13" pos:end="63:54">

            <if_stmt pos:start="41:13" pos:end="53:13"><if pos:start="41:13" pos:end="53:13">if <condition pos:start="41:16" pos:end="43:62">(<expr pos:start="41:17" pos:end="43:61"><call pos:start="41:17" pos:end="43:57"><name pos:start="41:17" pos:end="41:26">avio_open2</name><argument_list pos:start="41:27" pos:end="43:57">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:29">f</name><index pos:start="41:30" pos:end="41:32">[<expr pos:start="41:31" pos:end="41:31"><name pos:start="41:31" pos:end="41:31">i</name></expr>]</index></name></expr></argument>, <argument pos:start="41:35" pos:end="41:42"><expr pos:start="41:35" pos:end="41:42"><name pos:start="41:35" pos:end="41:42">filename</name></expr></argument>, <argument pos:start="41:45" pos:end="41:58"><expr pos:start="41:45" pos:end="41:58"><name pos:start="41:45" pos:end="41:58">AVIO_FLAG_READ</name></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:50"><expr pos:start="43:28" pos:end="43:50"><operator pos:start="43:28" pos:end="43:28">&amp;</operator><name pos:start="43:29" pos:end="43:50"><name pos:start="43:29" pos:end="43:30">s1</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:50">interrupt_callback</name></name></expr></argument>, <argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="43:59" pos:end="43:59">&lt;</operator> <literal type="number" pos:start="43:61" pos:end="43:61">0</literal></expr>)</condition> <block pos:start="43:64" pos:end="53:13">{<block_content pos:start="45:17" pos:end="51:36">

                <if_stmt pos:start="45:17" pos:end="47:26"><if pos:start="45:17" pos:end="47:26">if<condition pos:start="45:19" pos:end="45:24">(<expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:20">i</name><operator pos:start="45:21" pos:end="45:22">==</operator><literal type="number" pos:start="45:23" pos:end="45:23">1</literal></expr>)</condition><block type="pseudo" pos:start="47:21" pos:end="47:26"><block_content pos:start="47:21" pos:end="47:26">

                    <break pos:start="47:21" pos:end="47:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:80"><expr pos:start="49:17" pos:end="49:79"><call pos:start="49:17" pos:end="49:79"><name pos:start="49:17" pos:end="49:22">av_log</name><argument_list pos:start="49:23" pos:end="49:79">(<argument pos:start="49:24" pos:end="49:25"><expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">s1</name></expr></argument>, <argument pos:start="49:28" pos:end="49:39"><expr pos:start="49:28" pos:end="49:39"><name pos:start="49:28" pos:end="49:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:42" pos:end="49:69"><expr pos:start="49:42" pos:end="49:69"><literal type="string" pos:start="49:42" pos:end="49:69">"Could not open file : %s\n"</literal></expr></argument>,<argument pos:start="49:71" pos:end="49:78"><expr pos:start="49:71" pos:end="49:78"><name pos:start="49:71" pos:end="49:78">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:36">return <expr pos:start="51:24" pos:end="51:35"><call pos:start="51:24" pos:end="51:35"><name pos:start="51:24" pos:end="51:30">AVERROR</name><argument_list pos:start="51:31" pos:end="51:35">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:37"><expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:16">size</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">i</name></expr>]</index></name><operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:36"><name pos:start="55:22" pos:end="55:30">avio_size</name><argument_list pos:start="55:31" pos:end="55:36">(<argument pos:start="55:32" pos:end="55:35"><expr pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:35"><name pos:start="55:32" pos:end="55:32">f</name><index pos:start="55:33" pos:end="55:35">[<expr pos:start="55:34" pos:end="55:34"><name pos:start="55:34" pos:end="55:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="59:13" pos:end="61:22"><if pos:start="59:13" pos:end="61:22">if<condition pos:start="59:15" pos:end="59:55">(<expr pos:start="59:16" pos:end="59:54"><name pos:start="59:16" pos:end="59:30"><name pos:start="59:16" pos:end="59:20">codec</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:30">codec_id</name></name> <operator pos:start="59:32" pos:end="59:33">!=</operator> <name pos:start="59:35" pos:end="59:54">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:22"><block_content pos:start="61:17" pos:end="61:22">

                <break pos:start="61:17" pos:end="61:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:54"><expr pos:start="63:13" pos:end="63:53"><name pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:20">filename</name><index pos:start="63:21" pos:end="63:44">[ <expr pos:start="63:23" pos:end="63:42"><call pos:start="63:23" pos:end="63:38"><name pos:start="63:23" pos:end="63:28">strlen</name><argument_list pos:start="63:29" pos:end="63:38">(<argument pos:start="63:30" pos:end="63:37"><expr pos:start="63:30" pos:end="63:37"><name pos:start="63:30" pos:end="63:37">filename</name></expr></argument>)</argument_list></call> <operator pos:start="63:40" pos:end="63:40">-</operator> <literal type="number" pos:start="63:42" pos:end="63:42">1</literal></expr> ]</index></name><operator pos:start="63:45" pos:end="63:45">=</operator> <literal type="char" pos:start="63:47" pos:end="63:49">'U'</literal> <operator pos:start="63:51" pos:end="63:51">+</operator> <name pos:start="63:53" pos:end="63:53">i</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="69:9" pos:end="71:63"><if pos:start="69:9" pos:end="71:63">if<condition pos:start="69:11" pos:end="69:68">(<expr pos:start="69:12" pos:end="69:67"><name pos:start="69:12" pos:end="69:26"><name pos:start="69:12" pos:end="69:16">codec</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:26">codec_id</name></name> <operator pos:start="69:28" pos:end="69:29">==</operator> <name pos:start="69:31" pos:end="69:50">AV_CODEC_ID_RAWVIDEO</name> <operator pos:start="69:52" pos:end="69:53">&amp;&amp;</operator> <operator pos:start="69:55" pos:end="69:55">!</operator><name pos:start="69:56" pos:end="69:67"><name pos:start="69:56" pos:end="69:60">codec</name><operator pos:start="69:61" pos:end="69:62">-&gt;</operator><name pos:start="69:63" pos:end="69:67">width</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:63"><block_content pos:start="71:13" pos:end="71:63">

            <expr_stmt pos:start="71:13" pos:end="71:63"><expr pos:start="71:13" pos:end="71:62"><call pos:start="71:13" pos:end="71:62"><name pos:start="71:13" pos:end="71:22">infer_size</name><argument_list pos:start="71:23" pos:end="71:62">(<argument pos:start="71:24" pos:end="71:36"><expr pos:start="71:24" pos:end="71:36"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:36"><name pos:start="71:25" pos:end="71:29">codec</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:36">width</name></name></expr></argument>, <argument pos:start="71:39" pos:end="71:52"><expr pos:start="71:39" pos:end="71:52"><operator pos:start="71:39" pos:end="71:39">&amp;</operator><name pos:start="71:40" pos:end="71:52"><name pos:start="71:40" pos:end="71:44">codec</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:52">height</name></name></expr></argument>, <argument pos:start="71:55" pos:end="71:61"><expr pos:start="71:55" pos:end="71:61"><name pos:start="71:55" pos:end="71:61"><name pos:start="71:55" pos:end="71:58">size</name><index pos:start="71:59" pos:end="71:61">[<expr pos:start="71:60" pos:end="71:60"><literal type="number" pos:start="71:60" pos:end="71:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="83:5">else <block pos:start="73:12" pos:end="83:5">{<block_content pos:start="75:9" pos:end="81:22">

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:9">f</name><index pos:start="75:10" pos:end="75:12">[<expr pos:start="75:11" pos:end="75:11"><literal type="number" pos:start="75:11" pos:end="75:11">0</literal></expr>]</index></name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:17">s1</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:21">pb</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:32"><if pos:start="77:9" pos:end="79:32">if <condition pos:start="77:12" pos:end="77:30">(<expr pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:16"><name pos:start="77:13" pos:end="77:13">f</name><index pos:start="77:14" pos:end="77:16">[<expr pos:start="77:15" pos:end="77:15"><literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>]</index></name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:29">eof_reached</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:32"><block_content pos:start="79:13" pos:end="79:32">

            <return pos:start="79:13" pos:end="79:32">return <expr pos:start="79:20" pos:end="79:31"><call pos:start="79:20" pos:end="79:31"><name pos:start="79:20" pos:end="79:26">AVERROR</name><argument_list pos:start="79:27" pos:end="79:31">(<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><name pos:start="79:28" pos:end="79:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:22"><expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:12">size</name><index pos:start="81:13" pos:end="81:15">[<expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>]</index></name><operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:21">4096</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:52"><expr pos:start="87:5" pos:end="87:51"><call pos:start="87:5" pos:end="87:51"><name pos:start="87:5" pos:end="87:17">av_new_packet</name><argument_list pos:start="87:18" pos:end="87:51">(<argument pos:start="87:19" pos:end="87:21"><expr pos:start="87:19" pos:end="87:21"><name pos:start="87:19" pos:end="87:21">pkt</name></expr></argument>, <argument pos:start="87:24" pos:end="87:50"><expr pos:start="87:24" pos:end="87:50"><name pos:start="87:24" pos:end="87:30"><name pos:start="87:24" pos:end="87:27">size</name><index pos:start="87:28" pos:end="87:30">[<expr pos:start="87:29" pos:end="87:29"><literal type="number" pos:start="87:29" pos:end="87:29">0</literal></expr>]</index></name> <operator pos:start="87:32" pos:end="87:32">+</operator> <name pos:start="87:34" pos:end="87:40"><name pos:start="87:34" pos:end="87:37">size</name><index pos:start="87:38" pos:end="87:40">[<expr pos:start="87:39" pos:end="87:39"><literal type="number" pos:start="87:39" pos:end="87:39">1</literal></expr>]</index></name> <operator pos:start="87:42" pos:end="87:42">+</operator> <name pos:start="87:44" pos:end="87:50"><name pos:start="87:44" pos:end="87:47">size</name><index pos:start="87:48" pos:end="87:50">[<expr pos:start="87:49" pos:end="87:49"><literal type="number" pos:start="87:49" pos:end="87:49">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:26"><expr pos:start="89:5" pos:end="89:25"><name pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:7">pkt</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:21">stream_index</name></name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:34"><expr pos:start="91:5" pos:end="91:33"><name pos:start="91:5" pos:end="91:14"><name pos:start="91:5" pos:end="91:7">pkt</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:14">flags</name></name> <operator pos:start="91:16" pos:end="91:17">|=</operator> <name pos:start="91:19" pos:end="91:33">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:17"><expr pos:start="95:5" pos:end="95:16"><name pos:start="95:5" pos:end="95:13"><name pos:start="95:5" pos:end="95:7">pkt</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:13">size</name></name><operator pos:start="95:14" pos:end="95:14">=</operator> <literal type="number" pos:start="95:16" pos:end="95:16">0</literal></expr>;</expr_stmt>

    <for pos:start="97:5" pos:end="113:5">for<control pos:start="97:8" pos:end="97:22">(<init pos:start="97:9" pos:end="97:12"><expr pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:9">i</name><operator pos:start="97:10" pos:end="97:10">=</operator><literal type="number" pos:start="97:11" pos:end="97:11">0</literal></expr>;</init> <condition pos:start="97:14" pos:end="97:17"><expr pos:start="97:14" pos:end="97:16"><name pos:start="97:14" pos:end="97:14">i</name><operator pos:start="97:15" pos:end="97:15">&lt;</operator><literal type="number" pos:start="97:16" pos:end="97:16">3</literal></expr>;</condition> <incr pos:start="97:19" pos:end="97:21"><expr pos:start="97:19" pos:end="97:21"><name pos:start="97:19" pos:end="97:19">i</name><operator pos:start="97:20" pos:end="97:21">++</operator></expr></incr>)</control><block pos:start="97:23" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:9">

        <if_stmt pos:start="99:9" pos:end="111:9"><if pos:start="99:9" pos:end="111:9">if<condition pos:start="99:11" pos:end="99:19">(<expr pos:start="99:12" pos:end="99:18"><name pos:start="99:12" pos:end="99:18"><name pos:start="99:12" pos:end="99:15">size</name><index pos:start="99:16" pos:end="99:18">[<expr pos:start="99:17" pos:end="99:17"><name pos:start="99:17" pos:end="99:17">i</name></expr>]</index></name></expr>)</condition><block pos:start="99:20" pos:end="111:9">{<block_content pos:start="101:13" pos:end="109:36">

            <expr_stmt pos:start="101:13" pos:end="101:68"><expr pos:start="101:13" pos:end="101:67"><name pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:15">ret</name><index pos:start="101:16" pos:end="101:18">[<expr pos:start="101:17" pos:end="101:17"><name pos:start="101:17" pos:end="101:17">i</name></expr>]</index></name><operator pos:start="101:19" pos:end="101:19">=</operator> <call pos:start="101:21" pos:end="101:67"><name pos:start="101:21" pos:end="101:29">avio_read</name><argument_list pos:start="101:30" pos:end="101:67">(<argument pos:start="101:31" pos:end="101:34"><expr pos:start="101:31" pos:end="101:34"><name pos:start="101:31" pos:end="101:34"><name pos:start="101:31" pos:end="101:31">f</name><index pos:start="101:32" pos:end="101:34">[<expr pos:start="101:33" pos:end="101:33"><name pos:start="101:33" pos:end="101:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="101:37" pos:end="101:57"><expr pos:start="101:37" pos:end="101:57"><name pos:start="101:37" pos:end="101:45"><name pos:start="101:37" pos:end="101:39">pkt</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:45">data</name></name> <operator pos:start="101:47" pos:end="101:47">+</operator> <name pos:start="101:49" pos:end="101:57"><name pos:start="101:49" pos:end="101:51">pkt</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:57">size</name></name></expr></argument>, <argument pos:start="101:60" pos:end="101:66"><expr pos:start="101:60" pos:end="101:66"><name pos:start="101:60" pos:end="101:66"><name pos:start="101:60" pos:end="101:63">size</name><index pos:start="101:64" pos:end="101:66">[<expr pos:start="101:65" pos:end="101:65"><name pos:start="101:65" pos:end="101:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:33"><if pos:start="103:13" pos:end="105:33">if <condition pos:start="103:16" pos:end="103:28">(<expr pos:start="103:17" pos:end="103:27"><operator pos:start="103:17" pos:end="103:17">!</operator><name pos:start="103:18" pos:end="103:27"><name pos:start="103:18" pos:end="103:18">s</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:27">is_pipe</name></name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:33"><block_content pos:start="105:17" pos:end="105:33">

                <expr_stmt pos:start="105:17" pos:end="105:33"><expr pos:start="105:17" pos:end="105:32"><call pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:26">avio_close</name><argument_list pos:start="105:27" pos:end="105:32">(<argument pos:start="105:28" pos:end="105:31"><expr pos:start="105:28" pos:end="105:31"><name pos:start="105:28" pos:end="105:31"><name pos:start="105:28" pos:end="105:28">f</name><index pos:start="105:29" pos:end="105:31">[<expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="107:13" pos:end="109:36"><if pos:start="107:13" pos:end="109:36">if<condition pos:start="107:15" pos:end="107:24">(<expr pos:start="107:16" pos:end="107:23"><name pos:start="107:16" pos:end="107:21"><name pos:start="107:16" pos:end="107:18">ret</name><index pos:start="107:19" pos:end="107:21">[<expr pos:start="107:20" pos:end="107:20"><name pos:start="107:20" pos:end="107:20">i</name></expr>]</index></name><operator pos:start="107:22" pos:end="107:22">&gt;</operator><literal type="number" pos:start="107:23" pos:end="107:23">0</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:36"><block_content pos:start="109:17" pos:end="109:36">

                <expr_stmt pos:start="109:17" pos:end="109:36"><expr pos:start="109:17" pos:end="109:35"><name pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:19">pkt</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:25">size</name></name> <operator pos:start="109:27" pos:end="109:28">+=</operator> <name pos:start="109:30" pos:end="109:35"><name pos:start="109:30" pos:end="109:32">ret</name><index pos:start="109:33" pos:end="109:35">[<expr pos:start="109:34" pos:end="109:34"><name pos:start="109:34" pos:end="109:34">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="117:5" pos:end="131:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:44">(<expr pos:start="117:9" pos:end="117:43"><name pos:start="117:9" pos:end="117:14"><name pos:start="117:9" pos:end="117:11">ret</name><index pos:start="117:12" pos:end="117:14">[<expr pos:start="117:13" pos:end="117:13"><literal type="number" pos:start="117:13" pos:end="117:13">0</literal></expr>]</index></name> <operator pos:start="117:16" pos:end="117:17">&lt;=</operator> <literal type="number" pos:start="117:19" pos:end="117:19">0</literal> <operator pos:start="117:21" pos:end="117:22">||</operator> <name pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:26">ret</name><index pos:start="117:27" pos:end="117:29">[<expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">1</literal></expr>]</index></name><operator pos:start="117:30" pos:end="117:30">&lt;</operator><literal type="number" pos:start="117:31" pos:end="117:31">0</literal> <operator pos:start="117:33" pos:end="117:34">||</operator> <name pos:start="117:36" pos:end="117:41"><name pos:start="117:36" pos:end="117:38">ret</name><index pos:start="117:39" pos:end="117:41">[<expr pos:start="117:40" pos:end="117:40"><literal type="number" pos:start="117:40" pos:end="117:40">2</literal></expr>]</index></name><operator pos:start="117:42" pos:end="117:42">&lt;</operator><literal type="number" pos:start="117:43" pos:end="117:43">0</literal></expr>)</condition> <block pos:start="117:46" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:28">

        <expr_stmt pos:start="119:9" pos:end="119:28"><expr pos:start="119:9" pos:end="119:27"><call pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:22">av_free_packet</name><argument_list pos:start="119:23" pos:end="119:27">(<argument pos:start="119:24" pos:end="119:26"><expr pos:start="119:24" pos:end="119:26"><name pos:start="119:24" pos:end="119:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:28">return <expr pos:start="121:16" pos:end="121:27"><call pos:start="121:16" pos:end="121:27"><name pos:start="121:16" pos:end="121:22">AVERROR</name><argument_list pos:start="121:23" pos:end="121:27">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return> <comment type="block" pos:start="121:30" pos:end="121:45">/* signal EOF */</comment>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="131:5">else <block pos:start="123:12" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:17">

        <expr_stmt pos:start="125:9" pos:end="125:23"><expr pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:20"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:20">img_count</name></name><operator pos:start="125:21" pos:end="125:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:24"><expr pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:21">img_number</name></name><operator pos:start="127:22" pos:end="127:23">++</operator></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:17">return <expr pos:start="129:16" pos:end="129:16"><literal type="number" pos:start="129:16" pos:end="129:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
