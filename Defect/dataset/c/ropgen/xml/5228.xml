<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5228.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">pxa2xx_descriptor_load</name><parameter_list pos:start="1:35" pos:end="1:53">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">PXA2xxLCDState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">PXAFrameDescriptor</name></type> <name pos:start="5:24" pos:end="5:27">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:22">target_phys_addr_t</name></type> <name pos:start="7:24" pos:end="7:30">descptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="59:5">for <control pos:start="13:9" pos:end="13:43">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:37"><expr pos:start="13:17" pos:end="13:36"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:36">PXA_LCDDMA_CHANS</name></expr>;</condition> <incr pos:start="13:39" pos:end="13:42"><expr pos:start="13:39" pos:end="13:42"><name pos:start="13:39" pos:end="13:39">i</name> <operator pos:start="13:41" pos:end="13:42">++</operator></expr></incr>)</control> <block pos:start="13:45" pos:end="59:5">{<block_content pos:start="15:9" pos:end="57:51">

        <expr_stmt pos:start="15:9" pos:end="15:32"><expr pos:start="15:9" pos:end="15:31"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:17">dma_ch</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><name pos:start="15:19" pos:end="15:19">i</name></expr>]</index></name><operator pos:start="15:21" pos:end="15:21">.</operator><name pos:start="15:22" pos:end="15:27">source</name> <operator pos:start="15:29" pos:end="15:29">=</operator> <literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><operator pos:start="19:13" pos:end="19:13">!</operator><name pos:start="19:14" pos:end="19:25"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">dma_ch</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">i</name></expr>]</index></name><operator pos:start="19:26" pos:end="19:26">.</operator><name pos:start="19:27" pos:end="19:28">up</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="25:9" pos:end="37:46"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:42">(<expr pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">dma_ch</name><index pos:start="25:22" pos:end="25:24">[<expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">i</name></expr>]</index></name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:31">branch</name> <operator pos:start="25:33" pos:end="25:33">&amp;</operator> <name pos:start="25:35" pos:end="25:41">FBR_BRA</name></expr>)</condition> <block pos:start="25:44" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:44">

            <expr_stmt pos:start="27:13" pos:end="27:56"><expr pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:19">descptr</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:31">dma_ch</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">i</name></expr>]</index></name><operator pos:start="27:35" pos:end="27:35">.</operator><name pos:start="27:36" pos:end="27:41">branch</name> <operator pos:start="27:43" pos:end="27:43">&amp;</operator> <name pos:start="27:45" pos:end="27:55">FBR_SRCADDR</name></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="31:40"><if pos:start="29:13" pos:end="31:40">if <condition pos:start="29:16" pos:end="29:47">(<expr pos:start="29:17" pos:end="29:46"><name pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">dma_ch</name><index pos:start="29:26" pos:end="29:28">[<expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">i</name></expr>]</index></name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:35">branch</name> <operator pos:start="29:37" pos:end="29:37">&amp;</operator> <name pos:start="29:39" pos:end="29:46">FBR_BINT</name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:40"><block_content pos:start="31:17" pos:end="31:40">

                <expr_stmt pos:start="31:17" pos:end="31:40"><expr pos:start="31:17" pos:end="31:39"><call pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:33">pxa2xx_dma_bs_set</name><argument_list pos:start="31:34" pos:end="31:39">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">s</name></expr></argument>, <argument pos:start="31:38" pos:end="31:38"><expr pos:start="31:38" pos:end="31:38"><name pos:start="31:38" pos:end="31:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:44"><expr pos:start="33:13" pos:end="33:43"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:21">dma_ch</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">i</name></expr>]</index></name><operator pos:start="33:25" pos:end="33:25">.</operator><name pos:start="33:26" pos:end="33:31">branch</name> <operator pos:start="33:33" pos:end="33:34">&amp;=</operator> <operator pos:start="33:36" pos:end="33:36">~</operator><name pos:start="33:37" pos:end="33:43">FBR_BRA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="35:11" pos:end="37:46">else<block type="pseudo" pos:start="37:13" pos:end="37:46"><block_content pos:start="37:13" pos:end="37:46">

            <expr_stmt pos:start="37:13" pos:end="37:46"><expr pos:start="37:13" pos:end="37:45"><name pos:start="37:13" pos:end="37:19">descptr</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:31">dma_ch</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">i</name></expr>]</index></name><operator pos:start="37:35" pos:end="37:35">.</operator><name pos:start="37:36" pos:end="37:45">descriptor</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="41:9" pos:end="45:21"><if pos:start="41:9" pos:end="45:21">if <condition pos:start="41:12" pos:end="43:66">(<expr pos:start="41:13" pos:end="43:65"><operator pos:start="41:13" pos:end="41:13">!</operator><operator pos:start="41:14" pos:end="41:14">(</operator><name pos:start="41:15" pos:end="41:21">descptr</name> <operator pos:start="41:23" pos:end="41:24">&gt;=</operator> <name pos:start="41:26" pos:end="41:42">PXA2XX_SDRAM_BASE</name> <operator pos:start="41:44" pos:end="41:45">&amp;&amp;</operator> <name pos:start="41:47" pos:end="41:53">descptr</name> <operator pos:start="41:55" pos:end="41:55">+</operator>

                    <sizeof pos:start="43:21" pos:end="43:32">sizeof<argument_list pos:start="43:27" pos:end="43:32">(<argument pos:start="43:28" pos:end="43:31"><expr pos:start="43:28" pos:end="43:31"><name pos:start="43:28" pos:end="43:31">desc</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:34" pos:end="43:35">&lt;=</operator> <name pos:start="43:37" pos:end="43:53">PXA2XX_SDRAM_BASE</name> <operator pos:start="43:55" pos:end="43:55">+</operator> <name pos:start="43:57" pos:end="43:64">ram_size</name><operator pos:start="43:65" pos:end="43:65">)</operator></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:21"><block_content pos:start="45:13" pos:end="45:21">

            <continue pos:start="45:13" pos:end="45:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:71"><expr pos:start="49:9" pos:end="49:70"><call pos:start="49:9" pos:end="49:70"><name pos:start="49:9" pos:end="49:32">cpu_physical_memory_read</name><argument_list pos:start="49:33" pos:end="49:70">(<argument pos:start="49:34" pos:end="49:40"><expr pos:start="49:34" pos:end="49:40"><name pos:start="49:34" pos:end="49:40">descptr</name></expr></argument>, <argument pos:start="49:43" pos:end="49:55"><expr pos:start="49:43" pos:end="49:55"><operator pos:start="49:43" pos:end="49:43">(</operator><name pos:start="49:44" pos:end="49:47">void</name> <operator pos:start="49:49" pos:end="49:49">*</operator><operator pos:start="49:50" pos:end="49:50">)</operator><operator pos:start="49:51" pos:end="49:51">&amp;</operator><name pos:start="49:52" pos:end="49:55">desc</name></expr></argument>, <argument pos:start="49:58" pos:end="49:69"><expr pos:start="49:58" pos:end="49:69"><sizeof pos:start="49:58" pos:end="49:69">sizeof<argument_list pos:start="49:64" pos:end="49:69">(<argument pos:start="49:65" pos:end="49:68"><expr pos:start="49:65" pos:end="49:68"><name pos:start="49:65" pos:end="49:68">desc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:55"><expr pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">dma_ch</name><index pos:start="51:18" pos:end="51:20">[<expr pos:start="51:19" pos:end="51:19"><name pos:start="51:19" pos:end="51:19">i</name></expr>]</index></name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:31">descriptor</name> <operator pos:start="51:33" pos:end="51:33">=</operator> <call pos:start="51:35" pos:end="51:54"><name pos:start="51:35" pos:end="51:41">tswap32</name><argument_list pos:start="51:42" pos:end="51:54">(<argument pos:start="51:43" pos:end="51:53"><expr pos:start="51:43" pos:end="51:53"><name pos:start="51:43" pos:end="51:53"><name pos:start="51:43" pos:end="51:46">desc</name><operator pos:start="51:47" pos:end="51:47">.</operator><name pos:start="51:48" pos:end="51:53">fdaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">dma_ch</name><index pos:start="53:18" pos:end="53:20">[<expr pos:start="53:19" pos:end="53:19"><name pos:start="53:19" pos:end="53:19">i</name></expr>]</index></name><operator pos:start="53:21" pos:end="53:21">.</operator><name pos:start="53:22" pos:end="53:27">source</name> <operator pos:start="53:29" pos:end="53:29">=</operator> <call pos:start="53:31" pos:end="53:50"><name pos:start="53:31" pos:end="53:37">tswap32</name><argument_list pos:start="53:38" pos:end="53:50">(<argument pos:start="53:39" pos:end="53:49"><expr pos:start="53:39" pos:end="53:49"><name pos:start="53:39" pos:end="53:49"><name pos:start="53:39" pos:end="53:42">desc</name><operator pos:start="53:43" pos:end="53:43">.</operator><name pos:start="53:44" pos:end="53:49">fsaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">dma_ch</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><name pos:start="55:19" pos:end="55:19">i</name></expr>]</index></name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:23">id</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:44"><name pos:start="55:27" pos:end="55:33">tswap32</name><argument_list pos:start="55:34" pos:end="55:44">(<argument pos:start="55:35" pos:end="55:43"><expr pos:start="55:35" pos:end="55:43"><name pos:start="55:35" pos:end="55:43"><name pos:start="55:35" pos:end="55:38">desc</name><operator pos:start="55:39" pos:end="55:39">.</operator><name pos:start="55:40" pos:end="55:43">fidr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:51"><expr pos:start="57:9" pos:end="57:50"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">dma_ch</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><name pos:start="57:19" pos:end="57:19">i</name></expr>]</index></name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:28">command</name> <operator pos:start="57:30" pos:end="57:30">=</operator> <call pos:start="57:32" pos:end="57:50"><name pos:start="57:32" pos:end="57:38">tswap32</name><argument_list pos:start="57:39" pos:end="57:50">(<argument pos:start="57:40" pos:end="57:49"><expr pos:start="57:40" pos:end="57:49"><name pos:start="57:40" pos:end="57:49"><name pos:start="57:40" pos:end="57:43">desc</name><operator pos:start="57:44" pos:end="57:44">.</operator><name pos:start="57:45" pos:end="57:49">ldcmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
