<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7850.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">config</name><parameter_list pos:start="1:18" pos:end="5:48">(<parameter pos:start="1:19" pos:end="1:40"><decl pos:start="1:19" pos:end="1:40"><type pos:start="1:19" pos:end="1:40"><name pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:24">struct</name> <name pos:start="1:26" pos:end="1:36">vf_instance</name></name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">vf</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:17"><decl pos:start="3:9" pos:end="3:17"><type pos:start="3:9" pos:end="3:17"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:17">width</name></decl></parameter>, <parameter pos:start="3:20" pos:end="3:29"><decl pos:start="3:20" pos:end="3:29"><type pos:start="3:20" pos:end="3:29"><name pos:start="3:20" pos:end="3:22">int</name></type> <name pos:start="3:24" pos:end="3:29">height</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:42"><decl pos:start="3:32" pos:end="3:42"><type pos:start="3:32" pos:end="3:42"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:42">d_width</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:56"><decl pos:start="3:45" pos:end="3:56"><type pos:start="3:45" pos:end="3:56"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:56">d_height</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:26"><decl pos:start="5:9" pos:end="5:26"><type pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:16">unsigned</name> <name pos:start="5:18" pos:end="5:20">int</name></type> <name pos:start="5:22" pos:end="5:26">flags</name></decl></parameter>, <parameter pos:start="5:29" pos:end="5:47"><decl pos:start="5:29" pos:end="5:47"><type pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:36">unsigned</name> <name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:47">outfmt</name></decl></parameter>)</parameter_list><block pos:start="5:49" pos:end="85:1">{<block_content pos:start="7:9" pos:end="83:80">

        <decl_stmt pos:start="7:9" pos:end="7:14"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:61"><decl pos:start="9:9" pos:end="9:60"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:15">AVCodec</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">enc</name><init pos:start="9:21" pos:end="9:60">= <expr pos:start="9:23" pos:end="9:60"><call pos:start="9:23" pos:end="9:60"><name pos:start="9:23" pos:end="9:42">avcodec_find_encoder</name><argument_list pos:start="9:43" pos:end="9:60">(<argument pos:start="9:44" pos:end="9:59"><expr pos:start="9:44" pos:end="9:59"><name pos:start="9:44" pos:end="9:59">AV_CODEC_ID_SNOW</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <for pos:start="13:9" pos:end="29:9">for<control pos:start="13:12" pos:end="13:26">(<init pos:start="13:13" pos:end="13:16"><expr pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:13">i</name><operator pos:start="13:14" pos:end="13:14">=</operator><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>;</init> <condition pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:20"><name pos:start="13:18" pos:end="13:18">i</name><operator pos:start="13:19" pos:end="13:19">&lt;</operator><literal type="number" pos:start="13:20" pos:end="13:20">3</literal></expr>;</condition> <incr pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:23">i</name><operator pos:start="13:24" pos:end="13:25">++</operator></expr></incr>)</control><block pos:start="13:27" pos:end="29:9">{<block_content pos:start="15:13" pos:end="27:82">

            <decl_stmt pos:start="15:13" pos:end="15:31"><decl pos:start="15:13" pos:end="15:30"><type pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">int</name></type> <name pos:start="15:17" pos:end="15:25">is_chroma</name><init pos:start="15:26" pos:end="15:30">= <expr pos:start="15:28" pos:end="15:30"><operator pos:start="15:28" pos:end="15:28">!</operator><operator pos:start="15:29" pos:end="15:29">!</operator><name pos:start="15:30" pos:end="15:30">i</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="17:13" pos:end="17:70"><decl pos:start="17:13" pos:end="17:69"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">w</name><init pos:start="17:18" pos:end="17:69">= <expr pos:start="17:20" pos:end="17:69"><operator pos:start="17:20" pos:end="17:20">(</operator><operator pos:start="17:21" pos:end="17:21">(</operator><name pos:start="17:22" pos:end="17:26">width</name>  <operator pos:start="17:29" pos:end="17:29">+</operator> <literal type="number" pos:start="17:31" pos:end="17:31">4</literal><operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:37">BLOCK</name><operator pos:start="17:38" pos:end="17:38">-</operator><literal type="number" pos:start="17:39" pos:end="17:39">1</literal><operator pos:start="17:40" pos:end="17:40">)</operator> <operator pos:start="17:42" pos:end="17:42">&amp;</operator> <operator pos:start="17:44" pos:end="17:44">(</operator><operator pos:start="17:45" pos:end="17:45">~</operator><operator pos:start="17:46" pos:end="17:46">(</operator><literal type="number" pos:start="17:47" pos:end="17:47">2</literal><operator pos:start="17:48" pos:end="17:48">*</operator><name pos:start="17:49" pos:end="17:53">BLOCK</name><operator pos:start="17:54" pos:end="17:54">-</operator><literal type="number" pos:start="17:55" pos:end="17:55">1</literal><operator pos:start="17:56" pos:end="17:56">)</operator><operator pos:start="17:57" pos:end="17:57">)</operator><operator pos:start="17:58" pos:end="17:58">)</operator><operator pos:start="17:59" pos:end="17:60">&gt;&gt;</operator><name pos:start="17:61" pos:end="17:69">is_chroma</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="19:13" pos:end="19:70"><decl pos:start="19:13" pos:end="19:69"><type pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">int</name></type> <name pos:start="19:17" pos:end="19:17">h</name><init pos:start="19:18" pos:end="19:69">= <expr pos:start="19:20" pos:end="19:69"><operator pos:start="19:20" pos:end="19:20">(</operator><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:27">height</name> <operator pos:start="19:29" pos:end="19:29">+</operator> <literal type="number" pos:start="19:31" pos:end="19:31">4</literal><operator pos:start="19:32" pos:end="19:32">*</operator><name pos:start="19:33" pos:end="19:37">BLOCK</name><operator pos:start="19:38" pos:end="19:38">-</operator><literal type="number" pos:start="19:39" pos:end="19:39">1</literal><operator pos:start="19:40" pos:end="19:40">)</operator> <operator pos:start="19:42" pos:end="19:42">&amp;</operator> <operator pos:start="19:44" pos:end="19:44">(</operator><operator pos:start="19:45" pos:end="19:45">~</operator><operator pos:start="19:46" pos:end="19:46">(</operator><literal type="number" pos:start="19:47" pos:end="19:47">2</literal><operator pos:start="19:48" pos:end="19:48">*</operator><name pos:start="19:49" pos:end="19:53">BLOCK</name><operator pos:start="19:54" pos:end="19:54">-</operator><literal type="number" pos:start="19:55" pos:end="19:55">1</literal><operator pos:start="19:56" pos:end="19:56">)</operator><operator pos:start="19:57" pos:end="19:57">)</operator><operator pos:start="19:58" pos:end="19:58">)</operator><operator pos:start="19:59" pos:end="19:60">&gt;&gt;</operator><name pos:start="19:61" pos:end="19:69">is_chroma</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="23:13" pos:end="23:40"><expr pos:start="23:13" pos:end="23:39"><name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:14">vf</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">priv</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:33">temp_stride</name><index pos:start="23:34" pos:end="23:36">[<expr pos:start="23:35" pos:end="23:35"><name pos:start="23:35" pos:end="23:35">i</name></expr>]</index></name><operator pos:start="23:37" pos:end="23:37">=</operator> <name pos:start="23:39" pos:end="23:39">w</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:82"><expr pos:start="25:13" pos:end="25:81"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:14">vf</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:20">priv</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:26">temp</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">i</name></expr>]</index></name><operator pos:start="25:30" pos:end="25:30">=</operator> <call pos:start="25:32" pos:end="25:81"><name pos:start="25:32" pos:end="25:37">malloc</name><argument_list pos:start="25:38" pos:end="25:81">(<argument pos:start="25:39" pos:end="25:80"><expr pos:start="25:39" pos:end="25:80"><name pos:start="25:39" pos:end="25:62"><name pos:start="25:39" pos:end="25:40">vf</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:46">priv</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:59">temp_stride</name><index pos:start="25:60" pos:end="25:62">[<expr pos:start="25:61" pos:end="25:61"><name pos:start="25:61" pos:end="25:61">i</name></expr>]</index></name><operator pos:start="25:63" pos:end="25:63">*</operator><name pos:start="25:64" pos:end="25:64">h</name><operator pos:start="25:65" pos:end="25:65">*</operator><sizeof pos:start="25:66" pos:end="25:80">sizeof<argument_list pos:start="25:72" pos:end="25:80">(<argument pos:start="25:73" pos:end="25:79"><expr pos:start="25:73" pos:end="25:79"><name pos:start="25:73" pos:end="25:79">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:82"><expr pos:start="27:13" pos:end="27:81"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:14">vf</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">priv</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:25">src</name> <index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">=</operator> <call pos:start="27:32" pos:end="27:81"><name pos:start="27:32" pos:end="27:37">malloc</name><argument_list pos:start="27:38" pos:end="27:81">(<argument pos:start="27:39" pos:end="27:80"><expr pos:start="27:39" pos:end="27:80"><name pos:start="27:39" pos:end="27:62"><name pos:start="27:39" pos:end="27:40">vf</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:46">priv</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:59">temp_stride</name><index pos:start="27:60" pos:end="27:62">[<expr pos:start="27:61" pos:end="27:61"><name pos:start="27:61" pos:end="27:61">i</name></expr>]</index></name><operator pos:start="27:63" pos:end="27:63">*</operator><name pos:start="27:64" pos:end="27:64">h</name><operator pos:start="27:65" pos:end="27:65">*</operator><sizeof pos:start="27:66" pos:end="27:80">sizeof<argument_list pos:start="27:72" pos:end="27:80">(<argument pos:start="27:73" pos:end="27:79"><expr pos:start="27:73" pos:end="27:79"><name pos:start="27:73" pos:end="27:79">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="31:9" pos:end="69:9">for<control pos:start="31:12" pos:end="31:51">(<init pos:start="31:13" pos:end="31:16"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:13">i</name><operator pos:start="31:14" pos:end="31:14">=</operator><literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>;</init> <condition pos:start="31:18" pos:end="31:46"><expr pos:start="31:18" pos:end="31:45"><name pos:start="31:18" pos:end="31:18">i</name><operator pos:start="31:19" pos:end="31:19">&lt;</operator> <operator pos:start="31:21" pos:end="31:21">(</operator><literal type="number" pos:start="31:22" pos:end="31:22">1</literal><operator pos:start="31:23" pos:end="31:24">&lt;&lt;</operator><name pos:start="31:25" pos:end="31:44"><name pos:start="31:25" pos:end="31:26">vf</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:32">priv</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:44">log2_count</name></name><operator pos:start="31:45" pos:end="31:45">)</operator></expr>;</condition> <incr pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:48">i</name><operator pos:start="31:49" pos:end="31:50">++</operator></expr></incr>)</control><block pos:start="31:52" pos:end="69:9">{<block_content pos:start="33:13" pos:end="67:37">

            <decl_stmt pos:start="33:13" pos:end="33:38"><decl pos:start="33:13" pos:end="33:37"><type pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:26">AVCodecContext</name> <modifier pos:start="33:28" pos:end="33:28">*</modifier></type><name pos:start="33:29" pos:end="33:37">avctx_enc</name></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:38"><decl pos:start="35:13" pos:end="35:37"><type pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:24">AVDictionary</name> <modifier pos:start="35:26" pos:end="35:26">*</modifier></type><name pos:start="35:27" pos:end="35:30">opts</name> <init pos:start="35:32" pos:end="35:37">= <expr pos:start="35:34" pos:end="35:37"><name pos:start="35:34" pos:end="35:37">NULL</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="39:13" pos:end="41:65"><expr pos:start="39:13" pos:end="41:64"><name pos:start="39:13" pos:end="39:21">avctx_enc</name><operator pos:start="39:22" pos:end="39:22">=</operator>

            <name pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:14">vf</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">priv</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:31">avctx_enc</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name><operator pos:start="41:35" pos:end="41:35">=</operator> <call pos:start="41:37" pos:end="41:64"><name pos:start="41:37" pos:end="41:58">avcodec_alloc_context3</name><argument_list pos:start="41:59" pos:end="41:64">(<argument pos:start="41:60" pos:end="41:63"><expr pos:start="41:60" pos:end="41:63"><name pos:start="41:60" pos:end="41:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:21">avctx_enc</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:28">width</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:36">width</name> <operator pos:start="43:38" pos:end="43:38">+</operator> <name pos:start="43:40" pos:end="43:44">BLOCK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:47"><expr pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:21">avctx_enc</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:29">height</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <name pos:start="45:33" pos:end="45:38">height</name> <operator pos:start="45:40" pos:end="45:40">+</operator> <name pos:start="45:42" pos:end="45:46">BLOCK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:53"><expr pos:start="47:13" pos:end="47:52"><name pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:21">avctx_enc</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:32">time_base</name></name><operator pos:start="47:33" pos:end="47:33">=</operator> <operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:45">AVRational</name><operator pos:start="47:46" pos:end="47:46">)</operator><block pos:start="47:47" pos:end="47:52">{<expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">1</literal></expr>,<expr pos:start="47:50" pos:end="47:51"><literal type="number" pos:start="47:50" pos:end="47:51">25</literal></expr>}</block></expr>;</expr_stmt>  <comment type="line" pos:start="47:56" pos:end="47:69">// meaningless</comment>

            <expr_stmt pos:start="49:13" pos:end="49:38"><expr pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:21">avctx_enc</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:31">gop_size</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:37">300</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:39"><expr pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:21">avctx_enc</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:35">max_b_frames</name></name><operator pos:start="51:36" pos:end="51:36">=</operator> <literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:52"><expr pos:start="53:13" pos:end="53:51"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:21">avctx_enc</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:30">pix_fmt</name></name> <operator pos:start="53:32" pos:end="53:32">=</operator> <name pos:start="53:34" pos:end="53:51">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:72"><expr pos:start="55:13" pos:end="55:71"><name pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:21">avctx_enc</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:28">flags</name></name> <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:48">CODEC_FLAG_QSCALE</name> <operator pos:start="55:50" pos:end="55:50">|</operator> <name pos:start="55:52" pos:end="55:71">CODEC_FLAG_LOW_DELAY</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:74"><expr pos:start="57:13" pos:end="57:73"><name pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:21">avctx_enc</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:44">strict_std_compliance</name></name> <operator pos:start="57:46" pos:end="57:46">=</operator> <name pos:start="57:48" pos:end="57:73">FF_COMPLIANCE_EXPERIMENTAL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:21">avctx_enc</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:37">global_quality</name></name><operator pos:start="59:38" pos:end="59:38">=</operator> <literal type="number" pos:start="59:40" pos:end="59:42">123</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:55"><expr pos:start="61:13" pos:end="61:54"><call pos:start="61:13" pos:end="61:54"><name pos:start="61:13" pos:end="61:23">av_dict_set</name><argument_list pos:start="61:24" pos:end="61:54">(<argument pos:start="61:25" pos:end="61:29"><expr pos:start="61:25" pos:end="61:29"><operator pos:start="61:25" pos:end="61:25">&amp;</operator><name pos:start="61:26" pos:end="61:29">opts</name></expr></argument>, <argument pos:start="61:32" pos:end="61:45"><expr pos:start="61:32" pos:end="61:45"><literal type="string" pos:start="61:32" pos:end="61:45">"no_bitstream"</literal></expr></argument>, <argument pos:start="61:48" pos:end="61:50"><expr pos:start="61:48" pos:end="61:50"><literal type="string" pos:start="61:48" pos:end="61:50">"1"</literal></expr></argument>, <argument pos:start="61:53" pos:end="61:53"><expr pos:start="61:53" pos:end="61:53"><literal type="number" pos:start="61:53" pos:end="61:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:49"><expr pos:start="63:13" pos:end="63:48"><call pos:start="63:13" pos:end="63:48"><name pos:start="63:13" pos:end="63:25">avcodec_open2</name><argument_list pos:start="63:26" pos:end="63:48">(<argument pos:start="63:27" pos:end="63:35"><expr pos:start="63:27" pos:end="63:35"><name pos:start="63:27" pos:end="63:35">avctx_enc</name></expr></argument>, <argument pos:start="63:38" pos:end="63:40"><expr pos:start="63:38" pos:end="63:40"><name pos:start="63:38" pos:end="63:40">enc</name></expr></argument>, <argument pos:start="63:43" pos:end="63:47"><expr pos:start="63:43" pos:end="63:47"><operator pos:start="63:43" pos:end="63:43">&amp;</operator><name pos:start="63:44" pos:end="63:47">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><call pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:24">av_dict_free</name><argument_list pos:start="65:25" pos:end="65:31">(<argument pos:start="65:26" pos:end="65:30"><expr pos:start="65:26" pos:end="65:30"><operator pos:start="65:26" pos:end="65:26">&amp;</operator><name pos:start="65:27" pos:end="65:30">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><call pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:18">assert</name><argument_list pos:start="67:19" pos:end="67:36">(<argument pos:start="67:20" pos:end="67:35"><expr pos:start="67:20" pos:end="67:35"><name pos:start="67:20" pos:end="67:35"><name pos:start="67:20" pos:end="67:28">avctx_enc</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:35">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:10">vf</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:16">priv</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">frame</name></name><operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:41"><name pos:start="71:26" pos:end="71:39">av_frame_alloc</name><argument_list pos:start="71:40" pos:end="71:41">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:46"><expr pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:10">vf</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:16">priv</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:27">frame_dec</name></name><operator pos:start="73:28" pos:end="73:28">=</operator> <call pos:start="73:30" pos:end="73:45"><name pos:start="73:30" pos:end="73:43">av_frame_alloc</name><argument_list pos:start="73:44" pos:end="73:45">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:67"><expr pos:start="77:9" pos:end="77:66"><name pos:start="77:9" pos:end="77:29"><name pos:start="77:9" pos:end="77:10">vf</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:16">priv</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:29">outbuf_size</name></name><operator pos:start="77:30" pos:end="77:30">=</operator> <operator pos:start="77:32" pos:end="77:32">(</operator><name pos:start="77:33" pos:end="77:37">width</name> <operator pos:start="77:39" pos:end="77:39">+</operator> <name pos:start="77:41" pos:end="77:45">BLOCK</name><operator pos:start="77:46" pos:end="77:46">)</operator><operator pos:start="77:47" pos:end="77:47">*</operator><operator pos:start="77:48" pos:end="77:48">(</operator><name pos:start="77:49" pos:end="77:54">height</name> <operator pos:start="77:56" pos:end="77:56">+</operator> <name pos:start="77:58" pos:end="77:62">BLOCK</name><operator pos:start="77:63" pos:end="77:63">)</operator><operator pos:start="77:64" pos:end="77:64">*</operator><literal type="number" pos:start="77:65" pos:end="77:66">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:56"><expr pos:start="79:9" pos:end="79:55"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:10">vf</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:16">priv</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:24">outbuf</name></name><operator pos:start="79:25" pos:end="79:25">=</operator> <call pos:start="79:27" pos:end="79:55"><name pos:start="79:27" pos:end="79:32">malloc</name><argument_list pos:start="79:33" pos:end="79:55">(<argument pos:start="79:34" pos:end="79:54"><expr pos:start="79:34" pos:end="79:54"><name pos:start="79:34" pos:end="79:54"><name pos:start="79:34" pos:end="79:35">vf</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:41">priv</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:54">outbuf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="83:9" pos:end="83:80">return <expr pos:start="83:16" pos:end="83:79"><call pos:start="83:16" pos:end="83:79"><name pos:start="83:16" pos:end="83:32">ff_vf_next_config</name><argument_list pos:start="83:33" pos:end="83:79">(<argument pos:start="83:34" pos:end="83:35"><expr pos:start="83:34" pos:end="83:35"><name pos:start="83:34" pos:end="83:35">vf</name></expr></argument>,<argument pos:start="83:37" pos:end="83:41"><expr pos:start="83:37" pos:end="83:41"><name pos:start="83:37" pos:end="83:41">width</name></expr></argument>,<argument pos:start="83:43" pos:end="83:48"><expr pos:start="83:43" pos:end="83:48"><name pos:start="83:43" pos:end="83:48">height</name></expr></argument>,<argument pos:start="83:50" pos:end="83:56"><expr pos:start="83:50" pos:end="83:56"><name pos:start="83:50" pos:end="83:56">d_width</name></expr></argument>,<argument pos:start="83:58" pos:end="83:65"><expr pos:start="83:58" pos:end="83:65"><name pos:start="83:58" pos:end="83:65">d_height</name></expr></argument>,<argument pos:start="83:67" pos:end="83:71"><expr pos:start="83:67" pos:end="83:71"><name pos:start="83:67" pos:end="83:71">flags</name></expr></argument>,<argument pos:start="83:73" pos:end="83:78"><expr pos:start="83:73" pos:end="83:78"><name pos:start="83:73" pos:end="83:78">outfmt</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
