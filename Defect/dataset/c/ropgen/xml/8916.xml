<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8916.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">monitor_init</name><parameter_list pos:start="1:18" pos:end="1:55">(<parameter pos:start="1:19" pos:end="1:37"><decl pos:start="1:19" pos:end="1:37"><type pos:start="1:19" pos:end="1:37"><name pos:start="1:19" pos:end="1:33">CharDriverState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">hd</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:54">show_banner</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:57">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="25:5"><if pos:start="9:5" pos:end="25:5">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:21">is_first_init</name></expr>)</condition> <block pos:start="9:24" pos:end="25:5">{<block_content pos:start="11:9" pos:end="23:26">

        <expr_stmt pos:start="11:9" pos:end="11:65"><expr pos:start="11:9" pos:end="11:64"><name pos:start="11:9" pos:end="11:17">key_timer</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <call pos:start="11:21" pos:end="11:64"><name pos:start="11:21" pos:end="11:34">qemu_new_timer</name><argument_list pos:start="11:35" pos:end="11:64">(<argument pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43">vm_clock</name></expr></argument>, <argument pos:start="11:46" pos:end="11:57"><expr pos:start="11:46" pos:end="11:57"><name pos:start="11:46" pos:end="11:57">release_keys</name></expr></argument>, <argument pos:start="11:60" pos:end="11:63"><expr pos:start="11:60" pos:end="11:63"><name pos:start="11:60" pos:end="11:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:19"><if pos:start="13:9" pos:end="15:19">if <condition pos:start="13:12" pos:end="13:23">(<expr pos:start="13:13" pos:end="13:22"><operator pos:start="13:13" pos:end="13:13">!</operator><name pos:start="13:14" pos:end="13:22">key_timer</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:19"><block_content pos:start="15:13" pos:end="15:19">

            <return pos:start="15:13" pos:end="15:19">return;</return></block_content></block></if></if_stmt>

        <for pos:start="17:9" pos:end="21:9">for <control pos:start="17:13" pos:end="17:37">(<init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">i</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:32"><expr pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:21">i</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <name pos:start="17:25" pos:end="17:31">MAX_MON</name></expr>;</condition> <incr pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:34">i</name><operator pos:start="17:35" pos:end="17:36">++</operator></expr></incr>)</control> <block pos:start="17:39" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:33">

            <expr_stmt pos:start="19:13" pos:end="19:33"><expr pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:22">monitor_hd</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">i</name></expr>]</index></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:32">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:21">is_first_init</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="27:5" pos:end="37:5">for <control pos:start="27:9" pos:end="27:33">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:28"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:27">MAX_MON</name></expr>;</condition> <incr pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:30">i</name><operator pos:start="27:31" pos:end="27:32">++</operator></expr></incr>)</control> <block pos:start="27:35" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:9">

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:34">(<expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:22">monitor_hd</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name> <operator pos:start="29:27" pos:end="29:28">==</operator> <name pos:start="29:30" pos:end="29:33">NULL</name></expr>)</condition> <block pos:start="29:36" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:31"><expr pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:22">monitor_hd</name><index pos:start="31:23" pos:end="31:25">[<expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">i</name></expr>]</index></name> <operator pos:start="31:27" pos:end="31:27">=</operator> <name pos:start="31:29" pos:end="31:30">hd</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:15">hide_banner</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <operator pos:start="41:19" pos:end="41:19">!</operator><name pos:start="41:20" pos:end="41:30">show_banner</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:74"><expr pos:start="45:5" pos:end="45:73"><call pos:start="45:5" pos:end="45:73"><name pos:start="45:5" pos:end="45:25">qemu_chr_add_handlers</name><argument_list pos:start="45:26" pos:end="45:73">(<argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><name pos:start="45:27" pos:end="45:28">hd</name></expr></argument>, <argument pos:start="45:31" pos:end="45:43"><expr pos:start="45:31" pos:end="45:43"><name pos:start="45:31" pos:end="45:43">term_can_read</name></expr></argument>, <argument pos:start="45:46" pos:end="45:54"><expr pos:start="45:46" pos:end="45:54"><name pos:start="45:46" pos:end="45:54">term_read</name></expr></argument>, <argument pos:start="45:57" pos:end="45:66"><expr pos:start="45:57" pos:end="45:66"><name pos:start="45:57" pos:end="45:66">term_event</name></expr></argument>, <argument pos:start="45:69" pos:end="45:72"><expr pos:start="45:69" pos:end="45:72"><name pos:start="45:69" pos:end="45:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><call pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:18">readline_start</name><argument_list pos:start="49:19" pos:end="49:56">(<argument pos:start="49:20" pos:end="49:21"><expr pos:start="49:20" pos:end="49:21"><literal type="string" pos:start="49:20" pos:end="49:21">""</literal></expr></argument>, <argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr></argument>, <argument pos:start="49:27" pos:end="49:49"><expr pos:start="49:27" pos:end="49:49"><name pos:start="49:27" pos:end="49:49">monitor_handle_command1</name></expr></argument>, <argument pos:start="49:52" pos:end="49:55"><expr pos:start="49:52" pos:end="49:55"><name pos:start="49:52" pos:end="49:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
