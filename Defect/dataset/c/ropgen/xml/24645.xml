<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24645.c" pos:tabs="8"><function pos:start="1:1" pos:end="523:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:34">spapr_create_fdt_skel</name><parameter_list pos:start="1:35" pos:end="13:51">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">cpu_model</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:62"><decl pos:start="3:36" pos:end="3:62"><type pos:start="3:36" pos:end="3:62"><name pos:start="3:36" pos:end="3:53">target_phys_addr_t</name></type> <name pos:start="3:55" pos:end="3:62">rma_size</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:65"><decl pos:start="5:36" pos:end="5:65"><type pos:start="5:36" pos:end="5:65"><name pos:start="5:36" pos:end="5:53">target_phys_addr_t</name></type> <name pos:start="5:55" pos:end="5:65">initrd_base</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:65"><decl pos:start="7:36" pos:end="7:65"><type pos:start="7:36" pos:end="7:65"><name pos:start="7:36" pos:end="7:53">target_phys_addr_t</name></type> <name pos:start="7:55" pos:end="7:65">initrd_size</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:58"><decl pos:start="9:36" pos:end="9:58"><type pos:start="9:36" pos:end="9:58"><specifier pos:start="9:36" pos:end="9:40">const</specifier> <name pos:start="9:42" pos:end="9:45">char</name> <modifier pos:start="9:47" pos:end="9:47">*</modifier></type><name pos:start="9:48" pos:end="9:58">boot_device</name></decl></parameter>,

                                   <parameter pos:start="11:36" pos:end="11:61"><decl pos:start="11:36" pos:end="11:61"><type pos:start="11:36" pos:end="11:61"><specifier pos:start="11:36" pos:end="11:40">const</specifier> <name pos:start="11:42" pos:end="11:45">char</name> <modifier pos:start="11:47" pos:end="11:47">*</modifier></type><name pos:start="11:48" pos:end="11:61">kernel_cmdline</name></decl></parameter>,

                                   <parameter pos:start="13:36" pos:end="13:50"><decl pos:start="13:36" pos:end="13:50"><type pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:39">long</name></type> <name pos:start="13:41" pos:end="13:50">hash_shift</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="523:1">{<block_content pos:start="17:5" pos:end="521:15">

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">CPUState</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:32"><name pos:start="21:14" pos:end="21:29">mem_reg_property</name><index pos:start="21:30" pos:end="21:32">[<expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:51"><decl pos:start="23:5" pos:end="23:50"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:23">start_prop</name> <init pos:start="23:25" pos:end="23:50">= <expr pos:start="23:27" pos:end="23:50"><call pos:start="23:27" pos:end="23:50"><name pos:start="23:27" pos:end="23:37">cpu_to_be32</name><argument_list pos:start="23:38" pos:end="23:50">(<argument pos:start="23:39" pos:end="23:49"><expr pos:start="23:39" pos:end="23:49"><name pos:start="23:39" pos:end="23:49">initrd_base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:63"><decl pos:start="25:5" pos:end="25:62"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:21">end_prop</name> <init pos:start="25:23" pos:end="25:62">= <expr pos:start="25:25" pos:end="25:62"><call pos:start="25:25" pos:end="25:62"><name pos:start="25:25" pos:end="25:35">cpu_to_be32</name><argument_list pos:start="25:36" pos:end="25:62">(<argument pos:start="25:37" pos:end="25:61"><expr pos:start="25:37" pos:end="25:61"><name pos:start="25:37" pos:end="25:47">initrd_base</name> <operator pos:start="25:49" pos:end="25:49">+</operator> <name pos:start="25:51" pos:end="25:61">initrd_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:60"><decl pos:start="27:5" pos:end="27:59"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:26">pft_size_prop</name><index pos:start="27:27" pos:end="27:28">[]</index></name> <init pos:start="27:30" pos:end="27:59">= <expr pos:start="27:32" pos:end="27:59"><block pos:start="27:32" pos:end="27:59">{<expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr>, <macro pos:start="27:36" pos:end="27:58"><name pos:start="27:36" pos:end="27:46">cpu_to_be32</name><argument_list pos:start="27:47" pos:end="27:58">(<argument pos:start="27:48" pos:end="27:57">hash_shift</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="31:59"><decl pos:start="29:5" pos:end="31:58"><type pos:start="29:5" pos:end="29:8"><name pos:start="29:5" pos:end="29:8">char</name></type> <name pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:22">hypertas_prop</name><index pos:start="29:23" pos:end="29:24">[]</index></name> <init pos:start="29:26" pos:end="31:58">= <expr pos:start="29:28" pos:end="31:58"><literal type="string" pos:start="29:28" pos:end="29:79">"hcall-pft\0hcall-term\0hcall-dabr\0hcall-interrupt"</literal>

        <literal type="string" pos:start="31:9" pos:end="31:58">"\0hcall-tce\0hcall-vio\0hcall-splpar\0hcall-bulk"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:73"><decl pos:start="33:5" pos:end="33:72"><type pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:12">uint32_t</name></type> <name pos:start="33:14" pos:end="33:43"><name pos:start="33:14" pos:end="33:41">interrupt_server_ranges_prop</name><index pos:start="33:42" pos:end="33:43">[]</index></name> <init pos:start="33:45" pos:end="33:72">= <expr pos:start="33:47" pos:end="33:72"><block pos:start="33:47" pos:end="33:72">{<expr pos:start="33:48" pos:end="33:48"><literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>, <macro pos:start="33:51" pos:end="33:71"><name pos:start="33:51" pos:end="33:61">cpu_to_be32</name><argument_list pos:start="33:62" pos:end="33:71">(<argument pos:start="33:63" pos:end="33:70">smp_cpus</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:10"><decl pos:start="35:5" pos:end="35:9"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:20"><decl pos:start="37:5" pos:end="37:19"><type pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:8">char</name> <modifier pos:start="37:10" pos:end="37:10">*</modifier></type><name pos:start="37:11" pos:end="37:19">modelname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:35"><decl pos:start="39:5" pos:end="39:34"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:11">smt</name> <init pos:start="39:13" pos:end="39:34">= <expr pos:start="39:15" pos:end="39:34"><call pos:start="39:15" pos:end="39:34"><name pos:start="39:15" pos:end="39:32">kvmppc_smt_threads</name><argument_list pos:start="39:33" pos:end="39:34">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:59"><decl pos:start="41:5" pos:end="41:58"><type pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:12">unsigned</name> <name pos:start="41:14" pos:end="41:17">char</name></type> <name pos:start="41:19" pos:end="41:24"><name pos:start="41:19" pos:end="41:22">vec5</name><index pos:start="41:23" pos:end="41:24">[]</index></name> <init pos:start="41:26" pos:end="41:58">= <expr pos:start="41:28" pos:end="41:58"><block pos:start="41:28" pos:end="41:58">{<expr pos:start="41:29" pos:end="41:31"><literal type="number" pos:start="41:29" pos:end="41:31">0x0</literal></expr>, <expr pos:start="41:34" pos:end="41:36"><literal type="number" pos:start="41:34" pos:end="41:36">0x0</literal></expr>, <expr pos:start="41:39" pos:end="41:41"><literal type="number" pos:start="41:39" pos:end="41:41">0x0</literal></expr>, <expr pos:start="41:44" pos:end="41:46"><literal type="number" pos:start="41:44" pos:end="41:46">0x0</literal></expr>, <expr pos:start="41:49" pos:end="41:51"><literal type="number" pos:start="41:49" pos:end="41:51">0x0</literal></expr>, <expr pos:start="41:54" pos:end="41:57"><literal type="number" pos:start="41:54" pos:end="41:57">0x80</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:64"><decl pos:start="43:5" pos:end="43:63"><type pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:12">uint32_t</name></type> <name pos:start="43:14" pos:end="43:24"><name pos:start="43:14" pos:end="43:22">refpoints</name><index pos:start="43:23" pos:end="43:24">[]</index></name> <init pos:start="43:26" pos:end="43:63">= <expr pos:start="43:28" pos:end="43:63"><block pos:start="43:28" pos:end="43:63">{<expr pos:start="43:29" pos:end="43:44"><call pos:start="43:29" pos:end="43:44"><name pos:start="43:29" pos:end="43:39">cpu_to_be32</name><argument_list pos:start="43:40" pos:end="43:44">(<argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><literal type="number" pos:start="43:41" pos:end="43:43">0x4</literal></expr></argument>)</argument_list></call></expr>, <macro pos:start="43:47" pos:end="43:62"><name pos:start="43:47" pos:end="43:57">cpu_to_be32</name><argument_list pos:start="43:58" pos:end="43:62">(<argument pos:start="43:59" pos:end="43:61"><literal type="number" pos:start="43:59" pos:end="43:61">0x4</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="49:50"><decl pos:start="45:5" pos:end="49:49"><type pos:start="45:5" pos:end="45:12"><name pos:start="45:5" pos:end="45:12">uint32_t</name></type> <name pos:start="45:14" pos:end="45:28"><name pos:start="45:14" pos:end="45:26">associativity</name><index pos:start="45:27" pos:end="45:28">[]</index></name> <init pos:start="45:30" pos:end="49:49">= <expr pos:start="45:32" pos:end="49:49"><block pos:start="45:32" pos:end="49:49">{<expr pos:start="45:33" pos:end="45:48"><call pos:start="45:33" pos:end="45:48"><name pos:start="45:33" pos:end="45:43">cpu_to_be32</name><argument_list pos:start="45:44" pos:end="45:48">(<argument pos:start="45:45" pos:end="45:47"><expr pos:start="45:45" pos:end="45:47"><literal type="number" pos:start="45:45" pos:end="45:47">0x4</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="45:51" pos:end="45:66"><call pos:start="45:51" pos:end="45:66"><name pos:start="45:51" pos:end="45:61">cpu_to_be32</name><argument_list pos:start="45:62" pos:end="45:66">(<argument pos:start="45:63" pos:end="45:65"><expr pos:start="45:63" pos:end="45:65"><literal type="number" pos:start="45:63" pos:end="45:65">0x0</literal></expr></argument>)</argument_list></call></expr>,

                                <expr pos:start="47:33" pos:end="47:48"><call pos:start="47:33" pos:end="47:48"><name pos:start="47:33" pos:end="47:43">cpu_to_be32</name><argument_list pos:start="47:44" pos:end="47:48">(<argument pos:start="47:45" pos:end="47:47"><expr pos:start="47:45" pos:end="47:47"><literal type="number" pos:start="47:45" pos:end="47:47">0x0</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="47:51" pos:end="47:66"><call pos:start="47:51" pos:end="47:66"><name pos:start="47:51" pos:end="47:61">cpu_to_be32</name><argument_list pos:start="47:62" pos:end="47:66">(<argument pos:start="47:63" pos:end="47:65"><expr pos:start="47:63" pos:end="47:65"><literal type="number" pos:start="47:63" pos:end="47:65">0x0</literal></expr></argument>)</argument_list></call></expr>,

                                <macro pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:43">cpu_to_be32</name><argument_list pos:start="49:44" pos:end="49:48">(<argument pos:start="49:45" pos:end="49:47"><literal type="number" pos:start="49:45" pos:end="49:47">0x0</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:22"><decl pos:start="51:5" pos:end="51:21"><type pos:start="51:5" pos:end="51:8"><name pos:start="51:5" pos:end="51:8">char</name></type> <name pos:start="51:10" pos:end="51:21"><name pos:start="51:10" pos:end="51:17">mem_name</name><index pos:start="51:18" pos:end="51:21">[<expr pos:start="51:19" pos:end="51:20"><literal type="number" pos:start="51:19" pos:end="51:20">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="74:0"><decl pos:start="53:5" pos:end="53:33"><type pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:22">target_phys_addr_t</name></type> <name pos:start="53:24" pos:end="53:33">node0_size</name></decl>, <decl pos:start="53:36" pos:end="53:44"><type ref="prev" pos:start="53:5" pos:end="53:22"/><name pos:start="53:36" pos:end="53:44">mem_start</name></decl>;</decl_stmt>



<cpp:define pos:start="57:1" pos:end="73:15">#<cpp:directive pos:start="57:2" pos:end="57:7">define</cpp:directive> <cpp:macro pos:start="57:9" pos:end="57:17"><name pos:start="57:9" pos:end="57:12">_FDT</name><parameter_list pos:start="57:13" pos:end="57:17">(<parameter pos:start="57:14" pos:end="57:16"><type pos:start="57:14" pos:end="57:16"><name pos:start="57:14" pos:end="57:16">exp</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="59:5" pos:end="73:15">do { \

        int ret = (exp);                                           \

        if (ret &lt; 0) {                                             \

            fprintf(stderr, "qemu: error creating device tree: %s: %s\n", \

                    #exp, fdt_strerror(ret));                      \

            exit(1);                                               \

        }                                                          \

    } while (0)</cpp:value></cpp:define>



    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:7">fdt</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:33"><name pos:start="77:11" pos:end="77:19">g_malloc0</name><argument_list pos:start="77:20" pos:end="77:33">(<argument pos:start="77:21" pos:end="77:32"><expr pos:start="77:21" pos:end="77:32"><name pos:start="77:21" pos:end="77:32">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:42"><expr pos:start="79:5" pos:end="79:41"><call pos:start="79:5" pos:end="79:41"><name pos:start="79:5" pos:end="79:8">_FDT</name><argument_list pos:start="79:9" pos:end="79:41">(<argument pos:start="79:10" pos:end="79:40"><expr pos:start="79:10" pos:end="79:40"><operator pos:start="79:10" pos:end="79:10">(</operator><call pos:start="79:11" pos:end="79:39"><name pos:start="79:11" pos:end="79:20">fdt_create</name><argument_list pos:start="79:21" pos:end="79:39">(<argument pos:start="79:22" pos:end="79:24"><expr pos:start="79:22" pos:end="79:24"><name pos:start="79:22" pos:end="79:24">fdt</name></expr></argument>, <argument pos:start="79:27" pos:end="79:38"><expr pos:start="79:27" pos:end="79:38"><name pos:start="79:27" pos:end="79:38">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="79:40" pos:end="79:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><call pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:8">_FDT</name><argument_list pos:start="83:9" pos:end="83:38">(<argument pos:start="83:10" pos:end="83:37"><expr pos:start="83:10" pos:end="83:37"><operator pos:start="83:10" pos:end="83:10">(</operator><call pos:start="83:11" pos:end="83:36"><name pos:start="83:11" pos:end="83:31">fdt_finish_reservemap</name><argument_list pos:start="83:32" pos:end="83:36">(<argument pos:start="83:33" pos:end="83:35"><expr pos:start="83:33" pos:end="83:35"><name pos:start="83:33" pos:end="83:35">fdt</name></expr></argument>)</argument_list></call><operator pos:start="83:37" pos:end="83:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:19">/* Root node */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:36"><expr pos:start="89:5" pos:end="89:35"><call pos:start="89:5" pos:end="89:35"><name pos:start="89:5" pos:end="89:8">_FDT</name><argument_list pos:start="89:9" pos:end="89:35">(<argument pos:start="89:10" pos:end="89:34"><expr pos:start="89:10" pos:end="89:34"><operator pos:start="89:10" pos:end="89:10">(</operator><call pos:start="89:11" pos:end="89:33"><name pos:start="89:11" pos:end="89:24">fdt_begin_node</name><argument_list pos:start="89:25" pos:end="89:33">(<argument pos:start="89:26" pos:end="89:28"><expr pos:start="89:26" pos:end="89:28"><name pos:start="89:26" pos:end="89:28">fdt</name></expr></argument>, <argument pos:start="89:31" pos:end="89:32"><expr pos:start="89:31" pos:end="89:32"><literal type="string" pos:start="89:31" pos:end="89:32">""</literal></expr></argument>)</argument_list></call><operator pos:start="89:34" pos:end="89:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:60"><expr pos:start="91:5" pos:end="91:59"><call pos:start="91:5" pos:end="91:59"><name pos:start="91:5" pos:end="91:8">_FDT</name><argument_list pos:start="91:9" pos:end="91:59">(<argument pos:start="91:10" pos:end="91:58"><expr pos:start="91:10" pos:end="91:58"><operator pos:start="91:10" pos:end="91:10">(</operator><call pos:start="91:11" pos:end="91:57"><name pos:start="91:11" pos:end="91:29">fdt_property_string</name><argument_list pos:start="91:30" pos:end="91:57">(<argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:33">fdt</name></expr></argument>, <argument pos:start="91:36" pos:end="91:48"><expr pos:start="91:36" pos:end="91:48"><literal type="string" pos:start="91:36" pos:end="91:48">"device_type"</literal></expr></argument>, <argument pos:start="91:51" pos:end="91:56"><expr pos:start="91:51" pos:end="91:56"><literal type="string" pos:start="91:51" pos:end="91:56">"chrp"</literal></expr></argument>)</argument_list></call><operator pos:start="91:58" pos:end="91:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:80"><expr pos:start="93:5" pos:end="93:79"><call pos:start="93:5" pos:end="93:79"><name pos:start="93:5" pos:end="93:8">_FDT</name><argument_list pos:start="93:9" pos:end="93:79">(<argument pos:start="93:10" pos:end="93:78"><expr pos:start="93:10" pos:end="93:78"><operator pos:start="93:10" pos:end="93:10">(</operator><call pos:start="93:11" pos:end="93:77"><name pos:start="93:11" pos:end="93:29">fdt_property_string</name><argument_list pos:start="93:30" pos:end="93:77">(<argument pos:start="93:31" pos:end="93:33"><expr pos:start="93:31" pos:end="93:33"><name pos:start="93:31" pos:end="93:33">fdt</name></expr></argument>, <argument pos:start="93:36" pos:end="93:42"><expr pos:start="93:36" pos:end="93:42"><literal type="string" pos:start="93:36" pos:end="93:42">"model"</literal></expr></argument>, <argument pos:start="93:45" pos:end="93:76"><expr pos:start="93:45" pos:end="93:76"><literal type="string" pos:start="93:45" pos:end="93:76">"IBM pSeries (emulated by qemu)"</literal></expr></argument>)</argument_list></call><operator pos:start="93:78" pos:end="93:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:58"><expr pos:start="97:5" pos:end="97:57"><call pos:start="97:5" pos:end="97:57"><name pos:start="97:5" pos:end="97:8">_FDT</name><argument_list pos:start="97:9" pos:end="97:57">(<argument pos:start="97:10" pos:end="97:56"><expr pos:start="97:10" pos:end="97:56"><operator pos:start="97:10" pos:end="97:10">(</operator><call pos:start="97:11" pos:end="97:55"><name pos:start="97:11" pos:end="97:27">fdt_property_cell</name><argument_list pos:start="97:28" pos:end="97:55">(<argument pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:31">fdt</name></expr></argument>, <argument pos:start="97:34" pos:end="97:49"><expr pos:start="97:34" pos:end="97:49"><literal type="string" pos:start="97:34" pos:end="97:49">"#address-cells"</literal></expr></argument>, <argument pos:start="97:52" pos:end="97:54"><expr pos:start="97:52" pos:end="97:54"><literal type="number" pos:start="97:52" pos:end="97:54">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="97:56" pos:end="97:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:55"><expr pos:start="99:5" pos:end="99:54"><call pos:start="99:5" pos:end="99:54"><name pos:start="99:5" pos:end="99:8">_FDT</name><argument_list pos:start="99:9" pos:end="99:54">(<argument pos:start="99:10" pos:end="99:53"><expr pos:start="99:10" pos:end="99:53"><operator pos:start="99:10" pos:end="99:10">(</operator><call pos:start="99:11" pos:end="99:52"><name pos:start="99:11" pos:end="99:27">fdt_property_cell</name><argument_list pos:start="99:28" pos:end="99:52">(<argument pos:start="99:29" pos:end="99:31"><expr pos:start="99:29" pos:end="99:31"><name pos:start="99:29" pos:end="99:31">fdt</name></expr></argument>, <argument pos:start="99:34" pos:end="99:46"><expr pos:start="99:34" pos:end="99:46"><literal type="string" pos:start="99:34" pos:end="99:46">"#size-cells"</literal></expr></argument>, <argument pos:start="99:49" pos:end="99:51"><expr pos:start="99:49" pos:end="99:51"><literal type="number" pos:start="99:49" pos:end="99:51">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="99:53" pos:end="99:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:17">/* /chosen */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:42"><expr pos:start="105:5" pos:end="105:41"><call pos:start="105:5" pos:end="105:41"><name pos:start="105:5" pos:end="105:8">_FDT</name><argument_list pos:start="105:9" pos:end="105:41">(<argument pos:start="105:10" pos:end="105:40"><expr pos:start="105:10" pos:end="105:40"><operator pos:start="105:10" pos:end="105:10">(</operator><call pos:start="105:11" pos:end="105:39"><name pos:start="105:11" pos:end="105:24">fdt_begin_node</name><argument_list pos:start="105:25" pos:end="105:39">(<argument pos:start="105:26" pos:end="105:28"><expr pos:start="105:26" pos:end="105:28"><name pos:start="105:26" pos:end="105:28">fdt</name></expr></argument>, <argument pos:start="105:31" pos:end="105:38"><expr pos:start="105:31" pos:end="105:38"><literal type="string" pos:start="105:31" pos:end="105:38">"chosen"</literal></expr></argument>)</argument_list></call><operator pos:start="105:40" pos:end="105:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:28">/* Set Form1_affinity */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:76"><expr pos:start="111:5" pos:end="111:75"><call pos:start="111:5" pos:end="111:75"><name pos:start="111:5" pos:end="111:8">_FDT</name><argument_list pos:start="111:9" pos:end="111:75">(<argument pos:start="111:10" pos:end="111:74"><expr pos:start="111:10" pos:end="111:74"><operator pos:start="111:10" pos:end="111:10">(</operator><call pos:start="111:11" pos:end="111:73"><name pos:start="111:11" pos:end="111:22">fdt_property</name><argument_list pos:start="111:23" pos:end="111:73">(<argument pos:start="111:24" pos:end="111:26"><expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">fdt</name></expr></argument>, <argument pos:start="111:29" pos:end="111:52"><expr pos:start="111:29" pos:end="111:52"><literal type="string" pos:start="111:29" pos:end="111:52">"ibm,architecture-vec-5"</literal></expr></argument>, <argument pos:start="111:55" pos:end="111:58"><expr pos:start="111:55" pos:end="111:58"><name pos:start="111:55" pos:end="111:58">vec5</name></expr></argument>, <argument pos:start="111:61" pos:end="111:72"><expr pos:start="111:61" pos:end="111:72"><sizeof pos:start="111:61" pos:end="111:72">sizeof<argument_list pos:start="111:67" pos:end="111:72">(<argument pos:start="111:68" pos:end="111:71"><expr pos:start="111:68" pos:end="111:71"><name pos:start="111:68" pos:end="111:71">vec5</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="111:74" pos:end="111:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:65"><expr pos:start="115:5" pos:end="115:64"><call pos:start="115:5" pos:end="115:64"><name pos:start="115:5" pos:end="115:8">_FDT</name><argument_list pos:start="115:9" pos:end="115:64">(<argument pos:start="115:10" pos:end="115:63"><expr pos:start="115:10" pos:end="115:63"><operator pos:start="115:10" pos:end="115:10">(</operator><call pos:start="115:11" pos:end="115:62"><name pos:start="115:11" pos:end="115:29">fdt_property_string</name><argument_list pos:start="115:30" pos:end="115:62">(<argument pos:start="115:31" pos:end="115:33"><expr pos:start="115:31" pos:end="115:33"><name pos:start="115:31" pos:end="115:33">fdt</name></expr></argument>, <argument pos:start="115:36" pos:end="115:45"><expr pos:start="115:36" pos:end="115:45"><literal type="string" pos:start="115:36" pos:end="115:45">"bootargs"</literal></expr></argument>, <argument pos:start="115:48" pos:end="115:61"><expr pos:start="115:48" pos:end="115:61"><name pos:start="115:48" pos:end="115:61">kernel_cmdline</name></expr></argument>)</argument_list></call><operator pos:start="115:63" pos:end="115:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="119:58"><expr pos:start="117:5" pos:end="119:57"><call pos:start="117:5" pos:end="119:57"><name pos:start="117:5" pos:end="117:8">_FDT</name><argument_list pos:start="117:9" pos:end="119:57">(<argument pos:start="117:10" pos:end="119:56"><expr pos:start="117:10" pos:end="119:56"><operator pos:start="117:10" pos:end="117:10">(</operator><call pos:start="117:11" pos:end="119:55"><name pos:start="117:11" pos:end="117:22">fdt_property</name><argument_list pos:start="117:23" pos:end="119:55">(<argument pos:start="117:24" pos:end="117:26"><expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">fdt</name></expr></argument>, <argument pos:start="117:29" pos:end="117:48"><expr pos:start="117:29" pos:end="117:48"><literal type="string" pos:start="117:29" pos:end="117:48">"linux,initrd-start"</literal></expr></argument>,

                       <argument pos:start="119:24" pos:end="119:34"><expr pos:start="119:24" pos:end="119:34"><operator pos:start="119:24" pos:end="119:24">&amp;</operator><name pos:start="119:25" pos:end="119:34">start_prop</name></expr></argument>, <argument pos:start="119:37" pos:end="119:54"><expr pos:start="119:37" pos:end="119:54"><sizeof pos:start="119:37" pos:end="119:54">sizeof<argument_list pos:start="119:43" pos:end="119:54">(<argument pos:start="119:44" pos:end="119:53"><expr pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:53">start_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="119:56" pos:end="119:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="123:54"><expr pos:start="121:5" pos:end="123:53"><call pos:start="121:5" pos:end="123:53"><name pos:start="121:5" pos:end="121:8">_FDT</name><argument_list pos:start="121:9" pos:end="123:53">(<argument pos:start="121:10" pos:end="123:52"><expr pos:start="121:10" pos:end="123:52"><operator pos:start="121:10" pos:end="121:10">(</operator><call pos:start="121:11" pos:end="123:51"><name pos:start="121:11" pos:end="121:22">fdt_property</name><argument_list pos:start="121:23" pos:end="123:51">(<argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">fdt</name></expr></argument>, <argument pos:start="121:29" pos:end="121:46"><expr pos:start="121:29" pos:end="121:46"><literal type="string" pos:start="121:29" pos:end="121:46">"linux,initrd-end"</literal></expr></argument>,

                       <argument pos:start="123:24" pos:end="123:32"><expr pos:start="123:24" pos:end="123:32"><operator pos:start="123:24" pos:end="123:24">&amp;</operator><name pos:start="123:25" pos:end="123:32">end_prop</name></expr></argument>, <argument pos:start="123:35" pos:end="123:50"><expr pos:start="123:35" pos:end="123:50"><sizeof pos:start="123:35" pos:end="123:50">sizeof<argument_list pos:start="123:41" pos:end="123:50">(<argument pos:start="123:42" pos:end="123:49"><expr pos:start="123:42" pos:end="123:49"><name pos:start="123:42" pos:end="123:49">end_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="123:52" pos:end="123:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:70"><expr pos:start="125:5" pos:end="125:69"><call pos:start="125:5" pos:end="125:69"><name pos:start="125:5" pos:end="125:8">_FDT</name><argument_list pos:start="125:9" pos:end="125:69">(<argument pos:start="125:10" pos:end="125:68"><expr pos:start="125:10" pos:end="125:68"><operator pos:start="125:10" pos:end="125:10">(</operator><call pos:start="125:11" pos:end="125:67"><name pos:start="125:11" pos:end="125:29">fdt_property_string</name><argument_list pos:start="125:30" pos:end="125:67">(<argument pos:start="125:31" pos:end="125:33"><expr pos:start="125:31" pos:end="125:33"><name pos:start="125:31" pos:end="125:33">fdt</name></expr></argument>, <argument pos:start="125:36" pos:end="125:53"><expr pos:start="125:36" pos:end="125:53"><literal type="string" pos:start="125:36" pos:end="125:53">"qemu,boot-device"</literal></expr></argument>, <argument pos:start="125:56" pos:end="125:66"><expr pos:start="125:56" pos:end="125:66"><name pos:start="125:56" pos:end="125:66">boot_device</name></expr></argument>)</argument_list></call><operator pos:start="125:68" pos:end="125:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="129:5" pos:end="139:35">/*

     * Because we don't always invoke any firmware, we can't rely on

     * that to do BAR allocation.  Long term, we should probably do

     * that ourselves, but for now, this setting (plus advertising the

     * current BARs as 0) causes sufficiently recent kernels to to the

     * BAR assignment themselves */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:62"><expr pos:start="141:5" pos:end="141:61"><call pos:start="141:5" pos:end="141:61"><name pos:start="141:5" pos:end="141:8">_FDT</name><argument_list pos:start="141:9" pos:end="141:61">(<argument pos:start="141:10" pos:end="141:60"><expr pos:start="141:10" pos:end="141:60"><operator pos:start="141:10" pos:end="141:10">(</operator><call pos:start="141:11" pos:end="141:59"><name pos:start="141:11" pos:end="141:27">fdt_property_cell</name><argument_list pos:start="141:28" pos:end="141:59">(<argument pos:start="141:29" pos:end="141:31"><expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:31">fdt</name></expr></argument>, <argument pos:start="141:34" pos:end="141:55"><expr pos:start="141:34" pos:end="141:55"><literal type="string" pos:start="141:34" pos:end="141:55">"linux,pci-probe-only"</literal></expr></argument>, <argument pos:start="141:58" pos:end="141:58"><expr pos:start="141:58" pos:end="141:58"><literal type="number" pos:start="141:58" pos:end="141:58">0</literal></expr></argument>)</argument_list></call><operator pos:start="141:60" pos:end="141:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><call pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:8">_FDT</name><argument_list pos:start="145:9" pos:end="145:29">(<argument pos:start="145:10" pos:end="145:28"><expr pos:start="145:10" pos:end="145:28"><operator pos:start="145:10" pos:end="145:10">(</operator><call pos:start="145:11" pos:end="145:27"><name pos:start="145:11" pos:end="145:22">fdt_end_node</name><argument_list pos:start="145:23" pos:end="145:27">(<argument pos:start="145:24" pos:end="145:26"><expr pos:start="145:24" pos:end="145:26"><name pos:start="145:24" pos:end="145:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="145:28" pos:end="145:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:24">/* memory node(s) */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:62"><expr pos:start="151:5" pos:end="151:61"><name pos:start="151:5" pos:end="151:14">node0_size</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <ternary pos:start="151:18" pos:end="151:61"><condition pos:start="151:18" pos:end="151:38"><expr pos:start="151:18" pos:end="151:36"><operator pos:start="151:18" pos:end="151:18">(</operator><name pos:start="151:19" pos:end="151:31">nb_numa_nodes</name> <operator pos:start="151:33" pos:end="151:33">&gt;</operator> <literal type="number" pos:start="151:35" pos:end="151:35">1</literal><operator pos:start="151:36" pos:end="151:36">)</operator></expr> ?</condition><then pos:start="151:40" pos:end="151:50"> <expr pos:start="151:40" pos:end="151:50"><name pos:start="151:40" pos:end="151:50"><name pos:start="151:40" pos:end="151:47">node_mem</name><index pos:start="151:48" pos:end="151:50">[<expr pos:start="151:49" pos:end="151:49"><literal type="number" pos:start="151:49" pos:end="151:49">0</literal></expr>]</index></name></expr> </then><else pos:start="151:52" pos:end="151:61">: <expr pos:start="151:54" pos:end="151:61"><name pos:start="151:54" pos:end="151:61">ram_size</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:30">(<expr pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:16">rma_size</name> <operator pos:start="153:18" pos:end="153:18">&gt;</operator> <name pos:start="153:20" pos:end="153:29">node0_size</name></expr>)</condition> <block pos:start="153:32" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:30">

        <expr_stmt pos:start="155:9" pos:end="155:30"><expr pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:16">rma_size</name> <operator pos:start="155:18" pos:end="155:18">=</operator> <name pos:start="155:20" pos:end="155:29">node0_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:13">/* RMA */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:28"><expr pos:start="163:5" pos:end="163:27"><name pos:start="163:5" pos:end="163:23"><name pos:start="163:5" pos:end="163:20">mem_reg_property</name><index pos:start="163:21" pos:end="163:23">[<expr pos:start="163:22" pos:end="163:22"><literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>]</index></name> <operator pos:start="163:25" pos:end="163:25">=</operator> <literal type="number" pos:start="163:27" pos:end="163:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:48"><expr pos:start="165:5" pos:end="165:47"><name pos:start="165:5" pos:end="165:23"><name pos:start="165:5" pos:end="165:20">mem_reg_property</name><index pos:start="165:21" pos:end="165:23">[<expr pos:start="165:22" pos:end="165:22"><literal type="number" pos:start="165:22" pos:end="165:22">1</literal></expr>]</index></name> <operator pos:start="165:25" pos:end="165:25">=</operator> <call pos:start="165:27" pos:end="165:47"><name pos:start="165:27" pos:end="165:37">cpu_to_be64</name><argument_list pos:start="165:38" pos:end="165:47">(<argument pos:start="165:39" pos:end="165:46"><expr pos:start="165:39" pos:end="165:46"><name pos:start="165:39" pos:end="165:46">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:44"><expr pos:start="167:5" pos:end="167:43"><call pos:start="167:5" pos:end="167:43"><name pos:start="167:5" pos:end="167:8">_FDT</name><argument_list pos:start="167:9" pos:end="167:43">(<argument pos:start="167:10" pos:end="167:42"><expr pos:start="167:10" pos:end="167:42"><operator pos:start="167:10" pos:end="167:10">(</operator><call pos:start="167:11" pos:end="167:41"><name pos:start="167:11" pos:end="167:24">fdt_begin_node</name><argument_list pos:start="167:25" pos:end="167:41">(<argument pos:start="167:26" pos:end="167:28"><expr pos:start="167:26" pos:end="167:28"><name pos:start="167:26" pos:end="167:28">fdt</name></expr></argument>, <argument pos:start="167:31" pos:end="167:40"><expr pos:start="167:31" pos:end="167:40"><literal type="string" pos:start="167:31" pos:end="167:40">"memory@0"</literal></expr></argument>)</argument_list></call><operator pos:start="167:42" pos:end="167:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:62"><expr pos:start="169:5" pos:end="169:61"><call pos:start="169:5" pos:end="169:61"><name pos:start="169:5" pos:end="169:8">_FDT</name><argument_list pos:start="169:9" pos:end="169:61">(<argument pos:start="169:10" pos:end="169:60"><expr pos:start="169:10" pos:end="169:60"><operator pos:start="169:10" pos:end="169:10">(</operator><call pos:start="169:11" pos:end="169:59"><name pos:start="169:11" pos:end="169:29">fdt_property_string</name><argument_list pos:start="169:30" pos:end="169:59">(<argument pos:start="169:31" pos:end="169:33"><expr pos:start="169:31" pos:end="169:33"><name pos:start="169:31" pos:end="169:33">fdt</name></expr></argument>, <argument pos:start="169:36" pos:end="169:48"><expr pos:start="169:36" pos:end="169:48"><literal type="string" pos:start="169:36" pos:end="169:48">"device_type"</literal></expr></argument>, <argument pos:start="169:51" pos:end="169:58"><expr pos:start="169:51" pos:end="169:58"><literal type="string" pos:start="169:51" pos:end="169:58">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="169:60" pos:end="169:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="173:36"><expr pos:start="171:5" pos:end="173:35"><call pos:start="171:5" pos:end="173:35"><name pos:start="171:5" pos:end="171:8">_FDT</name><argument_list pos:start="171:9" pos:end="173:35">(<argument pos:start="171:10" pos:end="173:34"><expr pos:start="171:10" pos:end="173:34"><operator pos:start="171:10" pos:end="171:10">(</operator><call pos:start="171:11" pos:end="173:33"><name pos:start="171:11" pos:end="171:22">fdt_property</name><argument_list pos:start="171:23" pos:end="173:33">(<argument pos:start="171:24" pos:end="171:26"><expr pos:start="171:24" pos:end="171:26"><name pos:start="171:24" pos:end="171:26">fdt</name></expr></argument>, <argument pos:start="171:29" pos:end="171:33"><expr pos:start="171:29" pos:end="171:33"><literal type="string" pos:start="171:29" pos:end="171:33">"reg"</literal></expr></argument>, <argument pos:start="171:36" pos:end="171:51"><expr pos:start="171:36" pos:end="171:51"><name pos:start="171:36" pos:end="171:51">mem_reg_property</name></expr></argument>,

        <argument pos:start="173:9" pos:end="173:32"><expr pos:start="173:9" pos:end="173:32"><sizeof pos:start="173:9" pos:end="173:32">sizeof<argument_list pos:start="173:15" pos:end="173:32">(<argument pos:start="173:16" pos:end="173:31"><expr pos:start="173:16" pos:end="173:31"><name pos:start="173:16" pos:end="173:31">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="173:34" pos:end="173:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="177:33"><expr pos:start="175:5" pos:end="177:32"><call pos:start="175:5" pos:end="177:32"><name pos:start="175:5" pos:end="175:8">_FDT</name><argument_list pos:start="175:9" pos:end="177:32">(<argument pos:start="175:10" pos:end="177:31"><expr pos:start="175:10" pos:end="177:31"><operator pos:start="175:10" pos:end="175:10">(</operator><call pos:start="175:11" pos:end="177:30"><name pos:start="175:11" pos:end="175:22">fdt_property</name><argument_list pos:start="175:23" pos:end="177:30">(<argument pos:start="175:24" pos:end="175:26"><expr pos:start="175:24" pos:end="175:26"><name pos:start="175:24" pos:end="175:26">fdt</name></expr></argument>, <argument pos:start="175:29" pos:end="175:47"><expr pos:start="175:29" pos:end="175:47"><literal type="string" pos:start="175:29" pos:end="175:47">"ibm,associativity"</literal></expr></argument>, <argument pos:start="175:50" pos:end="175:62"><expr pos:start="175:50" pos:end="175:62"><name pos:start="175:50" pos:end="175:62">associativity</name></expr></argument>,

        <argument pos:start="177:9" pos:end="177:29"><expr pos:start="177:9" pos:end="177:29"><sizeof pos:start="177:9" pos:end="177:29">sizeof<argument_list pos:start="177:15" pos:end="177:29">(<argument pos:start="177:16" pos:end="177:28"><expr pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:28">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="177:31" pos:end="177:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:30"><expr pos:start="179:5" pos:end="179:29"><call pos:start="179:5" pos:end="179:29"><name pos:start="179:5" pos:end="179:8">_FDT</name><argument_list pos:start="179:9" pos:end="179:29">(<argument pos:start="179:10" pos:end="179:28"><expr pos:start="179:10" pos:end="179:28"><operator pos:start="179:10" pos:end="179:10">(</operator><call pos:start="179:11" pos:end="179:27"><name pos:start="179:11" pos:end="179:22">fdt_end_node</name><argument_list pos:start="179:23" pos:end="179:27">(<argument pos:start="179:24" pos:end="179:26"><expr pos:start="179:24" pos:end="179:26"><name pos:start="179:24" pos:end="179:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="179:28" pos:end="179:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="183:5" pos:end="183:21">/* RAM: Node 0 */</comment>

    <if_stmt pos:start="185:5" pos:end="209:5"><if pos:start="185:5" pos:end="209:5">if <condition pos:start="185:8" pos:end="185:30">(<expr pos:start="185:9" pos:end="185:29"><name pos:start="185:9" pos:end="185:18">node0_size</name> <operator pos:start="185:20" pos:end="185:20">&gt;</operator> <name pos:start="185:22" pos:end="185:29">rma_size</name></expr>)</condition> <block pos:start="185:32" pos:end="209:5">{<block_content pos:start="187:9" pos:end="207:34">

        <expr_stmt pos:start="187:9" pos:end="187:52"><expr pos:start="187:9" pos:end="187:51"><name pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:24">mem_reg_property</name><index pos:start="187:25" pos:end="187:27">[<expr pos:start="187:26" pos:end="187:26"><literal type="number" pos:start="187:26" pos:end="187:26">0</literal></expr>]</index></name> <operator pos:start="187:29" pos:end="187:29">=</operator> <call pos:start="187:31" pos:end="187:51"><name pos:start="187:31" pos:end="187:41">cpu_to_be64</name><argument_list pos:start="187:42" pos:end="187:51">(<argument pos:start="187:43" pos:end="187:50"><expr pos:start="187:43" pos:end="187:50"><name pos:start="187:43" pos:end="187:50">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:65"><expr pos:start="189:9" pos:end="189:64"><name pos:start="189:9" pos:end="189:27"><name pos:start="189:9" pos:end="189:24">mem_reg_property</name><index pos:start="189:25" pos:end="189:27">[<expr pos:start="189:26" pos:end="189:26"><literal type="number" pos:start="189:26" pos:end="189:26">1</literal></expr>]</index></name> <operator pos:start="189:29" pos:end="189:29">=</operator> <call pos:start="189:31" pos:end="189:64"><name pos:start="189:31" pos:end="189:41">cpu_to_be64</name><argument_list pos:start="189:42" pos:end="189:64">(<argument pos:start="189:43" pos:end="189:63"><expr pos:start="189:43" pos:end="189:63"><name pos:start="189:43" pos:end="189:52">node0_size</name> <operator pos:start="189:54" pos:end="189:54">-</operator> <name pos:start="189:56" pos:end="189:63">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:61"><expr pos:start="193:9" pos:end="193:60"><call pos:start="193:9" pos:end="193:60"><name pos:start="193:9" pos:end="193:15">sprintf</name><argument_list pos:start="193:16" pos:end="193:60">(<argument pos:start="193:17" pos:end="193:24"><expr pos:start="193:17" pos:end="193:24"><name pos:start="193:17" pos:end="193:24">mem_name</name></expr></argument>, <argument pos:start="193:27" pos:end="193:49"><expr pos:start="193:27" pos:end="193:49"><literal type="string" pos:start="193:27" pos:end="193:35">"memory@"</literal> <name pos:start="193:37" pos:end="193:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="193:52" pos:end="193:59"><expr pos:start="193:52" pos:end="193:59"><name pos:start="193:52" pos:end="193:59">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:46"><expr pos:start="195:9" pos:end="195:45"><call pos:start="195:9" pos:end="195:45"><name pos:start="195:9" pos:end="195:12">_FDT</name><argument_list pos:start="195:13" pos:end="195:45">(<argument pos:start="195:14" pos:end="195:44"><expr pos:start="195:14" pos:end="195:44"><operator pos:start="195:14" pos:end="195:14">(</operator><call pos:start="195:15" pos:end="195:43"><name pos:start="195:15" pos:end="195:28">fdt_begin_node</name><argument_list pos:start="195:29" pos:end="195:43">(<argument pos:start="195:30" pos:end="195:32"><expr pos:start="195:30" pos:end="195:32"><name pos:start="195:30" pos:end="195:32">fdt</name></expr></argument>, <argument pos:start="195:35" pos:end="195:42"><expr pos:start="195:35" pos:end="195:42"><name pos:start="195:35" pos:end="195:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="195:44" pos:end="195:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:66"><expr pos:start="197:9" pos:end="197:65"><call pos:start="197:9" pos:end="197:65"><name pos:start="197:9" pos:end="197:12">_FDT</name><argument_list pos:start="197:13" pos:end="197:65">(<argument pos:start="197:14" pos:end="197:64"><expr pos:start="197:14" pos:end="197:64"><operator pos:start="197:14" pos:end="197:14">(</operator><call pos:start="197:15" pos:end="197:63"><name pos:start="197:15" pos:end="197:33">fdt_property_string</name><argument_list pos:start="197:34" pos:end="197:63">(<argument pos:start="197:35" pos:end="197:37"><expr pos:start="197:35" pos:end="197:37"><name pos:start="197:35" pos:end="197:37">fdt</name></expr></argument>, <argument pos:start="197:40" pos:end="197:52"><expr pos:start="197:40" pos:end="197:52"><literal type="string" pos:start="197:40" pos:end="197:52">"device_type"</literal></expr></argument>, <argument pos:start="197:55" pos:end="197:62"><expr pos:start="197:55" pos:end="197:62"><literal type="string" pos:start="197:55" pos:end="197:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="197:64" pos:end="197:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="201:55"><expr pos:start="199:9" pos:end="201:54"><call pos:start="199:9" pos:end="201:54"><name pos:start="199:9" pos:end="199:12">_FDT</name><argument_list pos:start="199:13" pos:end="201:54">(<argument pos:start="199:14" pos:end="201:53"><expr pos:start="199:14" pos:end="201:53"><operator pos:start="199:14" pos:end="199:14">(</operator><call pos:start="199:15" pos:end="201:52"><name pos:start="199:15" pos:end="199:26">fdt_property</name><argument_list pos:start="199:27" pos:end="201:52">(<argument pos:start="199:28" pos:end="199:30"><expr pos:start="199:28" pos:end="199:30"><name pos:start="199:28" pos:end="199:30">fdt</name></expr></argument>, <argument pos:start="199:33" pos:end="199:37"><expr pos:start="199:33" pos:end="199:37"><literal type="string" pos:start="199:33" pos:end="199:37">"reg"</literal></expr></argument>, <argument pos:start="199:40" pos:end="199:55"><expr pos:start="199:40" pos:end="199:55"><name pos:start="199:40" pos:end="199:55">mem_reg_property</name></expr></argument>,

                           <argument pos:start="201:28" pos:end="201:51"><expr pos:start="201:28" pos:end="201:51"><sizeof pos:start="201:28" pos:end="201:51">sizeof<argument_list pos:start="201:34" pos:end="201:51">(<argument pos:start="201:35" pos:end="201:50"><expr pos:start="201:35" pos:end="201:50"><name pos:start="201:35" pos:end="201:50">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="201:53" pos:end="201:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="205:52"><expr pos:start="203:9" pos:end="205:51"><call pos:start="203:9" pos:end="205:51"><name pos:start="203:9" pos:end="203:12">_FDT</name><argument_list pos:start="203:13" pos:end="205:51">(<argument pos:start="203:14" pos:end="205:50"><expr pos:start="203:14" pos:end="205:50"><operator pos:start="203:14" pos:end="203:14">(</operator><call pos:start="203:15" pos:end="205:49"><name pos:start="203:15" pos:end="203:26">fdt_property</name><argument_list pos:start="203:27" pos:end="205:49">(<argument pos:start="203:28" pos:end="203:30"><expr pos:start="203:28" pos:end="203:30"><name pos:start="203:28" pos:end="203:30">fdt</name></expr></argument>, <argument pos:start="203:33" pos:end="203:51"><expr pos:start="203:33" pos:end="203:51"><literal type="string" pos:start="203:33" pos:end="203:51">"ibm,associativity"</literal></expr></argument>, <argument pos:start="203:54" pos:end="203:66"><expr pos:start="203:54" pos:end="203:66"><name pos:start="203:54" pos:end="203:66">associativity</name></expr></argument>,

                           <argument pos:start="205:28" pos:end="205:48"><expr pos:start="205:28" pos:end="205:48"><sizeof pos:start="205:28" pos:end="205:48">sizeof<argument_list pos:start="205:34" pos:end="205:48">(<argument pos:start="205:35" pos:end="205:47"><expr pos:start="205:35" pos:end="205:47"><name pos:start="205:35" pos:end="205:47">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="205:50" pos:end="205:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:34"><expr pos:start="207:9" pos:end="207:33"><call pos:start="207:9" pos:end="207:33"><name pos:start="207:9" pos:end="207:12">_FDT</name><argument_list pos:start="207:13" pos:end="207:33">(<argument pos:start="207:14" pos:end="207:32"><expr pos:start="207:14" pos:end="207:32"><operator pos:start="207:14" pos:end="207:14">(</operator><call pos:start="207:15" pos:end="207:31"><name pos:start="207:15" pos:end="207:26">fdt_end_node</name><argument_list pos:start="207:27" pos:end="207:31">(<argument pos:start="207:28" pos:end="207:30"><expr pos:start="207:28" pos:end="207:30"><name pos:start="207:28" pos:end="207:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="207:32" pos:end="207:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="213:5" pos:end="213:32">/* RAM: Node 1 and beyond */</comment>

    <expr_stmt pos:start="215:5" pos:end="215:27"><expr pos:start="215:5" pos:end="215:26"><name pos:start="215:5" pos:end="215:13">mem_start</name> <operator pos:start="215:15" pos:end="215:15">=</operator> <name pos:start="215:17" pos:end="215:26">node0_size</name></expr>;</expr_stmt>

    <for pos:start="217:5" pos:end="243:5">for <control pos:start="217:9" pos:end="217:39">(<init pos:start="217:10" pos:end="217:15"><expr pos:start="217:10" pos:end="217:14"><name pos:start="217:10" pos:end="217:10">i</name> <operator pos:start="217:12" pos:end="217:12">=</operator> <literal type="number" pos:start="217:14" pos:end="217:14">1</literal></expr>;</init> <condition pos:start="217:17" pos:end="217:34"><expr pos:start="217:17" pos:end="217:33"><name pos:start="217:17" pos:end="217:17">i</name> <operator pos:start="217:19" pos:end="217:19">&lt;</operator> <name pos:start="217:21" pos:end="217:33">nb_numa_nodes</name></expr>;</condition> <incr pos:start="217:36" pos:end="217:38"><expr pos:start="217:36" pos:end="217:38"><name pos:start="217:36" pos:end="217:36">i</name><operator pos:start="217:37" pos:end="217:38">++</operator></expr></incr>)</control> <block pos:start="217:41" pos:end="243:5">{<block_content pos:start="219:9" pos:end="241:33">

        <expr_stmt pos:start="219:9" pos:end="219:53"><expr pos:start="219:9" pos:end="219:52"><name pos:start="219:9" pos:end="219:27"><name pos:start="219:9" pos:end="219:24">mem_reg_property</name><index pos:start="219:25" pos:end="219:27">[<expr pos:start="219:26" pos:end="219:26"><literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>]</index></name> <operator pos:start="219:29" pos:end="219:29">=</operator> <call pos:start="219:31" pos:end="219:52"><name pos:start="219:31" pos:end="219:41">cpu_to_be64</name><argument_list pos:start="219:42" pos:end="219:52">(<argument pos:start="219:43" pos:end="219:51"><expr pos:start="219:43" pos:end="219:51"><name pos:start="219:43" pos:end="219:51">mem_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:55"><expr pos:start="221:9" pos:end="221:54"><name pos:start="221:9" pos:end="221:27"><name pos:start="221:9" pos:end="221:24">mem_reg_property</name><index pos:start="221:25" pos:end="221:27">[<expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">1</literal></expr>]</index></name> <operator pos:start="221:29" pos:end="221:29">=</operator> <call pos:start="221:31" pos:end="221:54"><name pos:start="221:31" pos:end="221:41">cpu_to_be64</name><argument_list pos:start="221:42" pos:end="221:54">(<argument pos:start="221:43" pos:end="221:53"><expr pos:start="221:43" pos:end="221:53"><name pos:start="221:43" pos:end="221:53"><name pos:start="221:43" pos:end="221:50">node_mem</name><index pos:start="221:51" pos:end="221:53">[<expr pos:start="221:52" pos:end="221:52"><name pos:start="221:52" pos:end="221:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:61"><expr pos:start="223:9" pos:end="223:60"><name pos:start="223:9" pos:end="223:24"><name pos:start="223:9" pos:end="223:21">associativity</name><index pos:start="223:22" pos:end="223:24">[<expr pos:start="223:23" pos:end="223:23"><literal type="number" pos:start="223:23" pos:end="223:23">3</literal></expr>]</index></name> <operator pos:start="223:26" pos:end="223:26">=</operator> <name pos:start="223:28" pos:end="223:43"><name pos:start="223:28" pos:end="223:40">associativity</name><index pos:start="223:41" pos:end="223:43">[<expr pos:start="223:42" pos:end="223:42"><literal type="number" pos:start="223:42" pos:end="223:42">4</literal></expr>]</index></name> <operator pos:start="223:45" pos:end="223:45">=</operator> <call pos:start="223:47" pos:end="223:60"><name pos:start="223:47" pos:end="223:57">cpu_to_be32</name><argument_list pos:start="223:58" pos:end="223:60">(<argument pos:start="223:59" pos:end="223:59"><expr pos:start="223:59" pos:end="223:59"><name pos:start="223:59" pos:end="223:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:62"><expr pos:start="225:9" pos:end="225:61"><call pos:start="225:9" pos:end="225:61"><name pos:start="225:9" pos:end="225:15">sprintf</name><argument_list pos:start="225:16" pos:end="225:61">(<argument pos:start="225:17" pos:end="225:24"><expr pos:start="225:17" pos:end="225:24"><name pos:start="225:17" pos:end="225:24">mem_name</name></expr></argument>, <argument pos:start="225:27" pos:end="225:49"><expr pos:start="225:27" pos:end="225:49"><literal type="string" pos:start="225:27" pos:end="225:35">"memory@"</literal> <name pos:start="225:37" pos:end="225:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="225:52" pos:end="225:60"><expr pos:start="225:52" pos:end="225:60"><name pos:start="225:52" pos:end="225:60">mem_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:46"><expr pos:start="227:9" pos:end="227:45"><call pos:start="227:9" pos:end="227:45"><name pos:start="227:9" pos:end="227:12">_FDT</name><argument_list pos:start="227:13" pos:end="227:45">(<argument pos:start="227:14" pos:end="227:44"><expr pos:start="227:14" pos:end="227:44"><operator pos:start="227:14" pos:end="227:14">(</operator><call pos:start="227:15" pos:end="227:43"><name pos:start="227:15" pos:end="227:28">fdt_begin_node</name><argument_list pos:start="227:29" pos:end="227:43">(<argument pos:start="227:30" pos:end="227:32"><expr pos:start="227:30" pos:end="227:32"><name pos:start="227:30" pos:end="227:32">fdt</name></expr></argument>, <argument pos:start="227:35" pos:end="227:42"><expr pos:start="227:35" pos:end="227:42"><name pos:start="227:35" pos:end="227:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="227:44" pos:end="227:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:66"><expr pos:start="229:9" pos:end="229:65"><call pos:start="229:9" pos:end="229:65"><name pos:start="229:9" pos:end="229:12">_FDT</name><argument_list pos:start="229:13" pos:end="229:65">(<argument pos:start="229:14" pos:end="229:64"><expr pos:start="229:14" pos:end="229:64"><operator pos:start="229:14" pos:end="229:14">(</operator><call pos:start="229:15" pos:end="229:63"><name pos:start="229:15" pos:end="229:33">fdt_property_string</name><argument_list pos:start="229:34" pos:end="229:63">(<argument pos:start="229:35" pos:end="229:37"><expr pos:start="229:35" pos:end="229:37"><name pos:start="229:35" pos:end="229:37">fdt</name></expr></argument>, <argument pos:start="229:40" pos:end="229:52"><expr pos:start="229:40" pos:end="229:52"><literal type="string" pos:start="229:40" pos:end="229:52">"device_type"</literal></expr></argument>, <argument pos:start="229:55" pos:end="229:62"><expr pos:start="229:55" pos:end="229:62"><literal type="string" pos:start="229:55" pos:end="229:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="229:64" pos:end="229:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="233:40"><expr pos:start="231:9" pos:end="233:39"><call pos:start="231:9" pos:end="233:39"><name pos:start="231:9" pos:end="231:12">_FDT</name><argument_list pos:start="231:13" pos:end="233:39">(<argument pos:start="231:14" pos:end="233:38"><expr pos:start="231:14" pos:end="233:38"><operator pos:start="231:14" pos:end="231:14">(</operator><call pos:start="231:15" pos:end="233:37"><name pos:start="231:15" pos:end="231:26">fdt_property</name><argument_list pos:start="231:27" pos:end="233:37">(<argument pos:start="231:28" pos:end="231:30"><expr pos:start="231:28" pos:end="231:30"><name pos:start="231:28" pos:end="231:30">fdt</name></expr></argument>, <argument pos:start="231:33" pos:end="231:37"><expr pos:start="231:33" pos:end="231:37"><literal type="string" pos:start="231:33" pos:end="231:37">"reg"</literal></expr></argument>, <argument pos:start="231:40" pos:end="231:55"><expr pos:start="231:40" pos:end="231:55"><name pos:start="231:40" pos:end="231:55">mem_reg_property</name></expr></argument>,

            <argument pos:start="233:13" pos:end="233:36"><expr pos:start="233:13" pos:end="233:36"><sizeof pos:start="233:13" pos:end="233:36">sizeof<argument_list pos:start="233:19" pos:end="233:36">(<argument pos:start="233:20" pos:end="233:35"><expr pos:start="233:20" pos:end="233:35"><name pos:start="233:20" pos:end="233:35">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="233:38" pos:end="233:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="237:37"><expr pos:start="235:9" pos:end="237:36"><call pos:start="235:9" pos:end="237:36"><name pos:start="235:9" pos:end="235:12">_FDT</name><argument_list pos:start="235:13" pos:end="237:36">(<argument pos:start="235:14" pos:end="237:35"><expr pos:start="235:14" pos:end="237:35"><operator pos:start="235:14" pos:end="235:14">(</operator><call pos:start="235:15" pos:end="237:34"><name pos:start="235:15" pos:end="235:26">fdt_property</name><argument_list pos:start="235:27" pos:end="237:34">(<argument pos:start="235:28" pos:end="235:30"><expr pos:start="235:28" pos:end="235:30"><name pos:start="235:28" pos:end="235:30">fdt</name></expr></argument>, <argument pos:start="235:33" pos:end="235:51"><expr pos:start="235:33" pos:end="235:51"><literal type="string" pos:start="235:33" pos:end="235:51">"ibm,associativity"</literal></expr></argument>, <argument pos:start="235:54" pos:end="235:66"><expr pos:start="235:54" pos:end="235:66"><name pos:start="235:54" pos:end="235:66">associativity</name></expr></argument>,

            <argument pos:start="237:13" pos:end="237:33"><expr pos:start="237:13" pos:end="237:33"><sizeof pos:start="237:13" pos:end="237:33">sizeof<argument_list pos:start="237:19" pos:end="237:33">(<argument pos:start="237:20" pos:end="237:32"><expr pos:start="237:20" pos:end="237:32"><name pos:start="237:20" pos:end="237:32">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="237:35" pos:end="237:35">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:34"><expr pos:start="239:9" pos:end="239:33"><call pos:start="239:9" pos:end="239:33"><name pos:start="239:9" pos:end="239:12">_FDT</name><argument_list pos:start="239:13" pos:end="239:33">(<argument pos:start="239:14" pos:end="239:32"><expr pos:start="239:14" pos:end="239:32"><operator pos:start="239:14" pos:end="239:14">(</operator><call pos:start="239:15" pos:end="239:31"><name pos:start="239:15" pos:end="239:26">fdt_end_node</name><argument_list pos:start="239:27" pos:end="239:31">(<argument pos:start="239:28" pos:end="239:30"><expr pos:start="239:28" pos:end="239:30"><name pos:start="239:28" pos:end="239:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="239:32" pos:end="239:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:33"><expr pos:start="241:9" pos:end="241:32"><name pos:start="241:9" pos:end="241:17">mem_start</name> <operator pos:start="241:19" pos:end="241:20">+=</operator> <name pos:start="241:22" pos:end="241:32"><name pos:start="241:22" pos:end="241:29">node_mem</name><index pos:start="241:30" pos:end="241:32">[<expr pos:start="241:31" pos:end="241:31"><name pos:start="241:31" pos:end="241:31">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="247:5" pos:end="247:14">/* cpus */</comment>

    <expr_stmt pos:start="249:5" pos:end="249:40"><expr pos:start="249:5" pos:end="249:39"><call pos:start="249:5" pos:end="249:39"><name pos:start="249:5" pos:end="249:8">_FDT</name><argument_list pos:start="249:9" pos:end="249:39">(<argument pos:start="249:10" pos:end="249:38"><expr pos:start="249:10" pos:end="249:38"><operator pos:start="249:10" pos:end="249:10">(</operator><call pos:start="249:11" pos:end="249:37"><name pos:start="249:11" pos:end="249:24">fdt_begin_node</name><argument_list pos:start="249:25" pos:end="249:37">(<argument pos:start="249:26" pos:end="249:28"><expr pos:start="249:26" pos:end="249:28"><name pos:start="249:26" pos:end="249:28">fdt</name></expr></argument>, <argument pos:start="249:31" pos:end="249:36"><expr pos:start="249:31" pos:end="249:36"><literal type="string" pos:start="249:31" pos:end="249:36">"cpus"</literal></expr></argument>)</argument_list></call><operator pos:start="249:38" pos:end="249:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="253:5" pos:end="253:58"><expr pos:start="253:5" pos:end="253:57"><call pos:start="253:5" pos:end="253:57"><name pos:start="253:5" pos:end="253:8">_FDT</name><argument_list pos:start="253:9" pos:end="253:57">(<argument pos:start="253:10" pos:end="253:56"><expr pos:start="253:10" pos:end="253:56"><operator pos:start="253:10" pos:end="253:10">(</operator><call pos:start="253:11" pos:end="253:55"><name pos:start="253:11" pos:end="253:27">fdt_property_cell</name><argument_list pos:start="253:28" pos:end="253:55">(<argument pos:start="253:29" pos:end="253:31"><expr pos:start="253:29" pos:end="253:31"><name pos:start="253:29" pos:end="253:31">fdt</name></expr></argument>, <argument pos:start="253:34" pos:end="253:49"><expr pos:start="253:34" pos:end="253:49"><literal type="string" pos:start="253:34" pos:end="253:49">"#address-cells"</literal></expr></argument>, <argument pos:start="253:52" pos:end="253:54"><expr pos:start="253:52" pos:end="253:54"><literal type="number" pos:start="253:52" pos:end="253:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="253:56" pos:end="253:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:55"><expr pos:start="255:5" pos:end="255:54"><call pos:start="255:5" pos:end="255:54"><name pos:start="255:5" pos:end="255:8">_FDT</name><argument_list pos:start="255:9" pos:end="255:54">(<argument pos:start="255:10" pos:end="255:53"><expr pos:start="255:10" pos:end="255:53"><operator pos:start="255:10" pos:end="255:10">(</operator><call pos:start="255:11" pos:end="255:52"><name pos:start="255:11" pos:end="255:27">fdt_property_cell</name><argument_list pos:start="255:28" pos:end="255:52">(<argument pos:start="255:29" pos:end="255:31"><expr pos:start="255:29" pos:end="255:31"><name pos:start="255:29" pos:end="255:31">fdt</name></expr></argument>, <argument pos:start="255:34" pos:end="255:46"><expr pos:start="255:34" pos:end="255:46"><literal type="string" pos:start="255:34" pos:end="255:46">"#size-cells"</literal></expr></argument>, <argument pos:start="255:49" pos:end="255:51"><expr pos:start="255:49" pos:end="255:51"><literal type="number" pos:start="255:49" pos:end="255:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="255:53" pos:end="255:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:36"><expr pos:start="259:5" pos:end="259:35"><name pos:start="259:5" pos:end="259:13">modelname</name> <operator pos:start="259:15" pos:end="259:15">=</operator> <call pos:start="259:17" pos:end="259:35"><name pos:start="259:17" pos:end="259:24">g_strdup</name><argument_list pos:start="259:25" pos:end="259:35">(<argument pos:start="259:26" pos:end="259:34"><expr pos:start="259:26" pos:end="259:34"><name pos:start="259:26" pos:end="259:34">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="263:5" pos:end="267:5">for <control pos:start="263:9" pos:end="263:43">(<init pos:start="263:10" pos:end="263:15"><expr pos:start="263:10" pos:end="263:14"><name pos:start="263:10" pos:end="263:10">i</name> <operator pos:start="263:12" pos:end="263:12">=</operator> <literal type="number" pos:start="263:14" pos:end="263:14">0</literal></expr>;</init> <condition pos:start="263:17" pos:end="263:38"><expr pos:start="263:17" pos:end="263:37"><name pos:start="263:17" pos:end="263:17">i</name> <operator pos:start="263:19" pos:end="263:19">&lt;</operator> <call pos:start="263:21" pos:end="263:37"><name pos:start="263:21" pos:end="263:26">strlen</name><argument_list pos:start="263:27" pos:end="263:37">(<argument pos:start="263:28" pos:end="263:36"><expr pos:start="263:28" pos:end="263:36"><name pos:start="263:28" pos:end="263:36">modelname</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="263:40" pos:end="263:42"><expr pos:start="263:40" pos:end="263:42"><name pos:start="263:40" pos:end="263:40">i</name><operator pos:start="263:41" pos:end="263:42">++</operator></expr></incr>)</control> <block pos:start="263:45" pos:end="267:5">{<block_content pos:start="265:9" pos:end="265:45">

        <expr_stmt pos:start="265:9" pos:end="265:45"><expr pos:start="265:9" pos:end="265:44"><name pos:start="265:9" pos:end="265:20"><name pos:start="265:9" pos:end="265:17">modelname</name><index pos:start="265:18" pos:end="265:20">[<expr pos:start="265:19" pos:end="265:19"><name pos:start="265:19" pos:end="265:19">i</name></expr>]</index></name> <operator pos:start="265:22" pos:end="265:22">=</operator> <call pos:start="265:24" pos:end="265:44"><name pos:start="265:24" pos:end="265:30">toupper</name><argument_list pos:start="265:31" pos:end="265:44">(<argument pos:start="265:32" pos:end="265:43"><expr pos:start="265:32" pos:end="265:43"><name pos:start="265:32" pos:end="265:43"><name pos:start="265:32" pos:end="265:40">modelname</name><index pos:start="265:41" pos:end="265:43">[<expr pos:start="265:42" pos:end="265:42"><name pos:start="265:42" pos:end="265:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="271:5" pos:end="271:48">/* This is needed during FDT finalization */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:43"><expr pos:start="273:5" pos:end="273:42"><name pos:start="273:5" pos:end="273:20"><name pos:start="273:5" pos:end="273:9">spapr</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:20">cpu_model</name></name> <operator pos:start="273:22" pos:end="273:22">=</operator> <call pos:start="273:24" pos:end="273:42"><name pos:start="273:24" pos:end="273:31">g_strdup</name><argument_list pos:start="273:32" pos:end="273:42">(<argument pos:start="273:33" pos:end="273:41"><expr pos:start="273:33" pos:end="273:41"><name pos:start="273:33" pos:end="273:41">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="277:5" pos:end="425:5">for <control pos:start="277:9" pos:end="277:59">(<init pos:start="277:10" pos:end="277:25"><expr pos:start="277:10" pos:end="277:24"><name pos:start="277:10" pos:end="277:12">env</name> <operator pos:start="277:14" pos:end="277:14">=</operator> <name pos:start="277:16" pos:end="277:24">first_cpu</name></expr>;</init> <condition pos:start="277:27" pos:end="277:38"><expr pos:start="277:27" pos:end="277:37"><name pos:start="277:27" pos:end="277:29">env</name> <operator pos:start="277:31" pos:end="277:32">!=</operator> <name pos:start="277:34" pos:end="277:37">NULL</name></expr>;</condition> <incr pos:start="277:40" pos:end="277:58"><expr pos:start="277:40" pos:end="277:58"><name pos:start="277:40" pos:end="277:42">env</name> <operator pos:start="277:44" pos:end="277:44">=</operator> <name pos:start="277:46" pos:end="277:58"><name pos:start="277:46" pos:end="277:48">env</name><operator pos:start="277:49" pos:end="277:50">-&gt;</operator><name pos:start="277:51" pos:end="277:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="277:61" pos:end="425:5">{<block_content pos:start="279:9" pos:end="423:34">

        <decl_stmt pos:start="279:9" pos:end="279:35"><decl pos:start="279:9" pos:end="279:34"><type pos:start="279:9" pos:end="279:11"><name pos:start="279:9" pos:end="279:11">int</name></type> <name pos:start="279:13" pos:end="279:17">index</name> <init pos:start="279:19" pos:end="279:34">= <expr pos:start="279:21" pos:end="279:34"><name pos:start="279:21" pos:end="279:34"><name pos:start="279:21" pos:end="279:23">env</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:34">cpu_index</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="281:9" pos:end="281:43"><decl pos:start="281:9" pos:end="281:42"><type pos:start="281:9" pos:end="281:16"><name pos:start="281:9" pos:end="281:16">uint32_t</name></type> <name pos:start="281:18" pos:end="281:42"><name pos:start="281:18" pos:end="281:29">servers_prop</name><index pos:start="281:30" pos:end="281:42">[<expr pos:start="281:31" pos:end="281:41"><name pos:start="281:31" pos:end="281:41">smp_threads</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="283:9" pos:end="283:48"><decl pos:start="283:9" pos:end="283:47"><type pos:start="283:9" pos:end="283:16"><name pos:start="283:9" pos:end="283:16">uint32_t</name></type> <name pos:start="283:18" pos:end="283:47"><name pos:start="283:18" pos:end="283:30">gservers_prop</name><index pos:start="283:31" pos:end="283:47">[<expr pos:start="283:32" pos:end="283:46"><name pos:start="283:32" pos:end="283:42">smp_threads</name> <operator pos:start="283:44" pos:end="283:44">*</operator> <literal type="number" pos:start="283:46" pos:end="283:46">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="285:9" pos:end="285:23"><decl pos:start="285:9" pos:end="285:22"><type pos:start="285:9" pos:end="285:14"><name pos:start="285:9" pos:end="285:12">char</name> <modifier pos:start="285:14" pos:end="285:14">*</modifier></type><name pos:start="285:15" pos:end="285:22">nodename</name></decl>;</decl_stmt>

        <decl_stmt pos:start="287:9" pos:end="289:51"><decl pos:start="287:9" pos:end="289:50"><type pos:start="287:9" pos:end="287:16"><name pos:start="287:9" pos:end="287:16">uint32_t</name></type> <name pos:start="287:18" pos:end="287:23"><name pos:start="287:18" pos:end="287:21">segs</name><index pos:start="287:22" pos:end="287:23">[]</index></name> <init pos:start="287:25" pos:end="289:50">= <expr pos:start="287:27" pos:end="289:50"><block pos:start="287:27" pos:end="289:50">{<expr pos:start="287:28" pos:end="287:42"><call pos:start="287:28" pos:end="287:42"><name pos:start="287:28" pos:end="287:38">cpu_to_be32</name><argument_list pos:start="287:39" pos:end="287:42">(<argument pos:start="287:40" pos:end="287:41"><expr pos:start="287:40" pos:end="287:41"><literal type="number" pos:start="287:40" pos:end="287:41">28</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="287:45" pos:end="287:59"><call pos:start="287:45" pos:end="287:59"><name pos:start="287:45" pos:end="287:55">cpu_to_be32</name><argument_list pos:start="287:56" pos:end="287:59">(<argument pos:start="287:57" pos:end="287:58"><expr pos:start="287:57" pos:end="287:58"><literal type="number" pos:start="287:57" pos:end="287:58">40</literal></expr></argument>)</argument_list></call></expr>,

                           <expr pos:start="289:28" pos:end="289:37"><literal type="number" pos:start="289:28" pos:end="289:37">0xffffffff</literal></expr>, <expr pos:start="289:40" pos:end="289:49"><literal type="number" pos:start="289:40" pos:end="289:49">0xffffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="291:9" pos:end="291:78"><decl pos:start="291:9" pos:end="291:77"><type pos:start="291:9" pos:end="291:16"><name pos:start="291:9" pos:end="291:16">uint32_t</name></type> <name pos:start="291:18" pos:end="291:23">tbfreq</name> <init pos:start="291:25" pos:end="291:77">= <expr pos:start="291:27" pos:end="291:77"><ternary pos:start="291:27" pos:end="291:77"><condition pos:start="291:27" pos:end="291:41"><expr pos:start="291:27" pos:end="291:39"><call pos:start="291:27" pos:end="291:39"><name pos:start="291:27" pos:end="291:37">kvm_enabled</name><argument_list pos:start="291:38" pos:end="291:39">()</argument_list></call></expr> ?</condition><then pos:start="291:43" pos:end="291:61"> <expr pos:start="291:43" pos:end="291:61"><call pos:start="291:43" pos:end="291:61"><name pos:start="291:43" pos:end="291:59">kvmppc_get_tbfreq</name><argument_list pos:start="291:60" pos:end="291:61">()</argument_list></call></expr> </then><else pos:start="291:63" pos:end="291:77">: <expr pos:start="291:65" pos:end="291:77"><name pos:start="291:65" pos:end="291:77">TIMEBASE_FREQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="293:9" pos:end="293:79"><decl pos:start="293:9" pos:end="293:78"><type pos:start="293:9" pos:end="293:16"><name pos:start="293:9" pos:end="293:16">uint32_t</name></type> <name pos:start="293:18" pos:end="293:24">cpufreq</name> <init pos:start="293:26" pos:end="293:78">= <expr pos:start="293:28" pos:end="293:78"><ternary pos:start="293:28" pos:end="293:78"><condition pos:start="293:28" pos:end="293:42"><expr pos:start="293:28" pos:end="293:40"><call pos:start="293:28" pos:end="293:40"><name pos:start="293:28" pos:end="293:38">kvm_enabled</name><argument_list pos:start="293:39" pos:end="293:40">()</argument_list></call></expr> ?</condition><then pos:start="293:44" pos:end="293:65"> <expr pos:start="293:44" pos:end="293:65"><call pos:start="293:44" pos:end="293:65"><name pos:start="293:44" pos:end="293:63">kvmppc_get_clockfreq</name><argument_list pos:start="293:64" pos:end="293:65">()</argument_list></call></expr> </then><else pos:start="293:67" pos:end="293:78">: <expr pos:start="293:69" pos:end="293:78"><literal type="number" pos:start="293:69" pos:end="293:78">1000000000</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="297:9" pos:end="301:9"><if pos:start="297:9" pos:end="301:9">if <condition pos:start="297:12" pos:end="297:31">(<expr pos:start="297:13" pos:end="297:30"><operator pos:start="297:13" pos:end="297:13">(</operator><name pos:start="297:14" pos:end="297:18">index</name> <operator pos:start="297:20" pos:end="297:20">%</operator> <name pos:start="297:22" pos:end="297:24">smt</name><operator pos:start="297:25" pos:end="297:25">)</operator> <operator pos:start="297:27" pos:end="297:28">!=</operator> <literal type="number" pos:start="297:30" pos:end="297:30">0</literal></expr>)</condition> <block pos:start="297:33" pos:end="301:9">{<block_content pos:start="299:13" pos:end="299:21">

            <continue pos:start="299:13" pos:end="299:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="305:9" pos:end="311:9"><if pos:start="305:9" pos:end="311:9">if <condition pos:start="305:12" pos:end="305:63">(<expr pos:start="305:13" pos:end="305:62"><call pos:start="305:13" pos:end="305:58"><name pos:start="305:13" pos:end="305:20">asprintf</name><argument_list pos:start="305:21" pos:end="305:58">(<argument pos:start="305:22" pos:end="305:30"><expr pos:start="305:22" pos:end="305:30"><operator pos:start="305:22" pos:end="305:22">&amp;</operator><name pos:start="305:23" pos:end="305:30">nodename</name></expr></argument>, <argument pos:start="305:33" pos:end="305:39"><expr pos:start="305:33" pos:end="305:39"><literal type="string" pos:start="305:33" pos:end="305:39">"%s@%x"</literal></expr></argument>, <argument pos:start="305:42" pos:end="305:50"><expr pos:start="305:42" pos:end="305:50"><name pos:start="305:42" pos:end="305:50">modelname</name></expr></argument>, <argument pos:start="305:53" pos:end="305:57"><expr pos:start="305:53" pos:end="305:57"><name pos:start="305:53" pos:end="305:57">index</name></expr></argument>)</argument_list></call> <operator pos:start="305:60" pos:end="305:60">&lt;</operator> <literal type="number" pos:start="305:62" pos:end="305:62">0</literal></expr>)</condition> <block pos:start="305:65" pos:end="311:9">{<block_content pos:start="307:13" pos:end="309:20">

            <expr_stmt pos:start="307:13" pos:end="307:52"><expr pos:start="307:13" pos:end="307:51"><call pos:start="307:13" pos:end="307:51"><name pos:start="307:13" pos:end="307:19">fprintf</name><argument_list pos:start="307:20" pos:end="307:51">(<argument pos:start="307:21" pos:end="307:26"><expr pos:start="307:21" pos:end="307:26"><name pos:start="307:21" pos:end="307:26">stderr</name></expr></argument>, <argument pos:start="307:29" pos:end="307:50"><expr pos:start="307:29" pos:end="307:50"><literal type="string" pos:start="307:29" pos:end="307:50">"Allocation failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:20"><expr pos:start="309:13" pos:end="309:19"><call pos:start="309:13" pos:end="309:19"><name pos:start="309:13" pos:end="309:16">exit</name><argument_list pos:start="309:17" pos:end="309:19">(<argument pos:start="309:18" pos:end="309:18"><expr pos:start="309:18" pos:end="309:18"><literal type="number" pos:start="309:18" pos:end="309:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="315:9" pos:end="315:46"><expr pos:start="315:9" pos:end="315:45"><call pos:start="315:9" pos:end="315:45"><name pos:start="315:9" pos:end="315:12">_FDT</name><argument_list pos:start="315:13" pos:end="315:45">(<argument pos:start="315:14" pos:end="315:44"><expr pos:start="315:14" pos:end="315:44"><operator pos:start="315:14" pos:end="315:14">(</operator><call pos:start="315:15" pos:end="315:43"><name pos:start="315:15" pos:end="315:28">fdt_begin_node</name><argument_list pos:start="315:29" pos:end="315:43">(<argument pos:start="315:30" pos:end="315:32"><expr pos:start="315:30" pos:end="315:32"><name pos:start="315:30" pos:end="315:32">fdt</name></expr></argument>, <argument pos:start="315:35" pos:end="315:42"><expr pos:start="315:35" pos:end="315:42"><name pos:start="315:35" pos:end="315:42">nodename</name></expr></argument>)</argument_list></call><operator pos:start="315:44" pos:end="315:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="319:9" pos:end="319:23"><expr pos:start="319:9" pos:end="319:22"><call pos:start="319:9" pos:end="319:22"><name pos:start="319:9" pos:end="319:12">free</name><argument_list pos:start="319:13" pos:end="319:22">(<argument pos:start="319:14" pos:end="319:21"><expr pos:start="319:14" pos:end="319:21"><name pos:start="319:14" pos:end="319:21">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="323:9" pos:end="323:53"><expr pos:start="323:9" pos:end="323:52"><call pos:start="323:9" pos:end="323:52"><name pos:start="323:9" pos:end="323:12">_FDT</name><argument_list pos:start="323:13" pos:end="323:52">(<argument pos:start="323:14" pos:end="323:51"><expr pos:start="323:14" pos:end="323:51"><operator pos:start="323:14" pos:end="323:14">(</operator><call pos:start="323:15" pos:end="323:50"><name pos:start="323:15" pos:end="323:31">fdt_property_cell</name><argument_list pos:start="323:32" pos:end="323:50">(<argument pos:start="323:33" pos:end="323:35"><expr pos:start="323:33" pos:end="323:35"><name pos:start="323:33" pos:end="323:35">fdt</name></expr></argument>, <argument pos:start="323:38" pos:end="323:42"><expr pos:start="323:38" pos:end="323:42"><literal type="string" pos:start="323:38" pos:end="323:42">"reg"</literal></expr></argument>, <argument pos:start="323:45" pos:end="323:49"><expr pos:start="323:45" pos:end="323:49"><name pos:start="323:45" pos:end="323:49">index</name></expr></argument>)</argument_list></call><operator pos:start="323:51" pos:end="323:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:63"><expr pos:start="325:9" pos:end="325:62"><call pos:start="325:9" pos:end="325:62"><name pos:start="325:9" pos:end="325:12">_FDT</name><argument_list pos:start="325:13" pos:end="325:62">(<argument pos:start="325:14" pos:end="325:61"><expr pos:start="325:14" pos:end="325:61"><operator pos:start="325:14" pos:end="325:14">(</operator><call pos:start="325:15" pos:end="325:60"><name pos:start="325:15" pos:end="325:33">fdt_property_string</name><argument_list pos:start="325:34" pos:end="325:60">(<argument pos:start="325:35" pos:end="325:37"><expr pos:start="325:35" pos:end="325:37"><name pos:start="325:35" pos:end="325:37">fdt</name></expr></argument>, <argument pos:start="325:40" pos:end="325:52"><expr pos:start="325:40" pos:end="325:52"><literal type="string" pos:start="325:40" pos:end="325:52">"device_type"</literal></expr></argument>, <argument pos:start="325:55" pos:end="325:59"><expr pos:start="325:55" pos:end="325:59"><literal type="string" pos:start="325:55" pos:end="325:59">"cpu"</literal></expr></argument>)</argument_list></call><operator pos:start="325:61" pos:end="325:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="329:9" pos:end="329:73"><expr pos:start="329:9" pos:end="329:72"><call pos:start="329:9" pos:end="329:72"><name pos:start="329:9" pos:end="329:12">_FDT</name><argument_list pos:start="329:13" pos:end="329:72">(<argument pos:start="329:14" pos:end="329:71"><expr pos:start="329:14" pos:end="329:71"><operator pos:start="329:14" pos:end="329:14">(</operator><call pos:start="329:15" pos:end="329:70"><name pos:start="329:15" pos:end="329:31">fdt_property_cell</name><argument_list pos:start="329:32" pos:end="329:70">(<argument pos:start="329:33" pos:end="329:35"><expr pos:start="329:33" pos:end="329:35"><name pos:start="329:33" pos:end="329:35">fdt</name></expr></argument>, <argument pos:start="329:38" pos:end="329:50"><expr pos:start="329:38" pos:end="329:50"><literal type="string" pos:start="329:38" pos:end="329:50">"cpu-version"</literal></expr></argument>, <argument pos:start="329:53" pos:end="329:69"><expr pos:start="329:53" pos:end="329:69"><name pos:start="329:53" pos:end="329:69"><name pos:start="329:53" pos:end="329:55">env</name><operator pos:start="329:56" pos:end="329:57">-&gt;</operator><name pos:start="329:58" pos:end="329:60">spr</name><index pos:start="329:61" pos:end="329:69">[<expr pos:start="329:62" pos:end="329:68"><name pos:start="329:62" pos:end="329:68">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="329:71" pos:end="329:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="333:57"><expr pos:start="331:9" pos:end="333:56"><call pos:start="331:9" pos:end="333:56"><name pos:start="331:9" pos:end="331:12">_FDT</name><argument_list pos:start="331:13" pos:end="333:56">(<argument pos:start="331:14" pos:end="333:55"><expr pos:start="331:14" pos:end="333:55"><operator pos:start="331:14" pos:end="331:14">(</operator><call pos:start="331:15" pos:end="333:54"><name pos:start="331:15" pos:end="331:31">fdt_property_cell</name><argument_list pos:start="331:32" pos:end="333:54">(<argument pos:start="331:33" pos:end="331:35"><expr pos:start="331:33" pos:end="331:35"><name pos:start="331:33" pos:end="331:35">fdt</name></expr></argument>, <argument pos:start="331:38" pos:end="331:56"><expr pos:start="331:38" pos:end="331:56"><literal type="string" pos:start="331:38" pos:end="331:56">"dcache-block-size"</literal></expr></argument>,

                                <argument pos:start="333:33" pos:end="333:53"><expr pos:start="333:33" pos:end="333:53"><name pos:start="333:33" pos:end="333:53"><name pos:start="333:33" pos:end="333:35">env</name><operator pos:start="333:36" pos:end="333:37">-&gt;</operator><name pos:start="333:38" pos:end="333:53">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="333:55" pos:end="333:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="337:57"><expr pos:start="335:9" pos:end="337:56"><call pos:start="335:9" pos:end="337:56"><name pos:start="335:9" pos:end="335:12">_FDT</name><argument_list pos:start="335:13" pos:end="337:56">(<argument pos:start="335:14" pos:end="337:55"><expr pos:start="335:14" pos:end="337:55"><operator pos:start="335:14" pos:end="335:14">(</operator><call pos:start="335:15" pos:end="337:54"><name pos:start="335:15" pos:end="335:31">fdt_property_cell</name><argument_list pos:start="335:32" pos:end="337:54">(<argument pos:start="335:33" pos:end="335:35"><expr pos:start="335:33" pos:end="335:35"><name pos:start="335:33" pos:end="335:35">fdt</name></expr></argument>, <argument pos:start="335:38" pos:end="335:56"><expr pos:start="335:38" pos:end="335:56"><literal type="string" pos:start="335:38" pos:end="335:56">"icache-block-size"</literal></expr></argument>,

                                <argument pos:start="337:33" pos:end="337:53"><expr pos:start="337:33" pos:end="337:53"><name pos:start="337:33" pos:end="337:53"><name pos:start="337:33" pos:end="337:35">env</name><operator pos:start="337:36" pos:end="337:37">-&gt;</operator><name pos:start="337:38" pos:end="337:53">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="337:55" pos:end="337:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:69"><expr pos:start="339:9" pos:end="339:68"><call pos:start="339:9" pos:end="339:68"><name pos:start="339:9" pos:end="339:12">_FDT</name><argument_list pos:start="339:13" pos:end="339:68">(<argument pos:start="339:14" pos:end="339:67"><expr pos:start="339:14" pos:end="339:67"><operator pos:start="339:14" pos:end="339:14">(</operator><call pos:start="339:15" pos:end="339:66"><name pos:start="339:15" pos:end="339:31">fdt_property_cell</name><argument_list pos:start="339:32" pos:end="339:66">(<argument pos:start="339:33" pos:end="339:35"><expr pos:start="339:33" pos:end="339:35"><name pos:start="339:33" pos:end="339:35">fdt</name></expr></argument>, <argument pos:start="339:38" pos:end="339:57"><expr pos:start="339:38" pos:end="339:57"><literal type="string" pos:start="339:38" pos:end="339:57">"timebase-frequency"</literal></expr></argument>, <argument pos:start="339:60" pos:end="339:65"><expr pos:start="339:60" pos:end="339:65"><name pos:start="339:60" pos:end="339:65">tbfreq</name></expr></argument>)</argument_list></call><operator pos:start="339:67" pos:end="339:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:67"><expr pos:start="341:9" pos:end="341:66"><call pos:start="341:9" pos:end="341:66"><name pos:start="341:9" pos:end="341:12">_FDT</name><argument_list pos:start="341:13" pos:end="341:66">(<argument pos:start="341:14" pos:end="341:65"><expr pos:start="341:14" pos:end="341:65"><operator pos:start="341:14" pos:end="341:14">(</operator><call pos:start="341:15" pos:end="341:64"><name pos:start="341:15" pos:end="341:31">fdt_property_cell</name><argument_list pos:start="341:32" pos:end="341:64">(<argument pos:start="341:33" pos:end="341:35"><expr pos:start="341:33" pos:end="341:35"><name pos:start="341:33" pos:end="341:35">fdt</name></expr></argument>, <argument pos:start="341:38" pos:end="341:54"><expr pos:start="341:38" pos:end="341:54"><literal type="string" pos:start="341:38" pos:end="341:54">"clock-frequency"</literal></expr></argument>, <argument pos:start="341:57" pos:end="341:63"><expr pos:start="341:57" pos:end="341:63"><name pos:start="341:57" pos:end="341:63">cpufreq</name></expr></argument>)</argument_list></call><operator pos:start="341:65" pos:end="341:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="343:9" pos:end="343:68"><expr pos:start="343:9" pos:end="343:67"><call pos:start="343:9" pos:end="343:67"><name pos:start="343:9" pos:end="343:12">_FDT</name><argument_list pos:start="343:13" pos:end="343:67">(<argument pos:start="343:14" pos:end="343:66"><expr pos:start="343:14" pos:end="343:66"><operator pos:start="343:14" pos:end="343:14">(</operator><call pos:start="343:15" pos:end="343:65"><name pos:start="343:15" pos:end="343:31">fdt_property_cell</name><argument_list pos:start="343:32" pos:end="343:65">(<argument pos:start="343:33" pos:end="343:35"><expr pos:start="343:33" pos:end="343:35"><name pos:start="343:33" pos:end="343:35">fdt</name></expr></argument>, <argument pos:start="343:38" pos:end="343:51"><expr pos:start="343:38" pos:end="343:51"><literal type="string" pos:start="343:38" pos:end="343:51">"ibm,slb-size"</literal></expr></argument>, <argument pos:start="343:54" pos:end="343:64"><expr pos:start="343:54" pos:end="343:64"><name pos:start="343:54" pos:end="343:64"><name pos:start="343:54" pos:end="343:56">env</name><operator pos:start="343:57" pos:end="343:58">-&gt;</operator><name pos:start="343:59" pos:end="343:64">slb_nr</name></name></expr></argument>)</argument_list></call><operator pos:start="343:66" pos:end="343:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="347:67"><expr pos:start="345:9" pos:end="347:66"><call pos:start="345:9" pos:end="347:66"><name pos:start="345:9" pos:end="345:12">_FDT</name><argument_list pos:start="345:13" pos:end="347:66">(<argument pos:start="345:14" pos:end="347:65"><expr pos:start="345:14" pos:end="347:65"><operator pos:start="345:14" pos:end="345:14">(</operator><call pos:start="345:15" pos:end="347:64"><name pos:start="345:15" pos:end="345:26">fdt_property</name><argument_list pos:start="345:27" pos:end="347:64">(<argument pos:start="345:28" pos:end="345:30"><expr pos:start="345:28" pos:end="345:30"><name pos:start="345:28" pos:end="345:30">fdt</name></expr></argument>, <argument pos:start="345:33" pos:end="345:46"><expr pos:start="345:33" pos:end="345:46"><literal type="string" pos:start="345:33" pos:end="345:46">"ibm,pft-size"</literal></expr></argument>,

                           <argument pos:start="347:28" pos:end="347:40"><expr pos:start="347:28" pos:end="347:40"><name pos:start="347:28" pos:end="347:40">pft_size_prop</name></expr></argument>, <argument pos:start="347:43" pos:end="347:63"><expr pos:start="347:43" pos:end="347:63"><sizeof pos:start="347:43" pos:end="347:63">sizeof<argument_list pos:start="347:49" pos:end="347:63">(<argument pos:start="347:50" pos:end="347:62"><expr pos:start="347:50" pos:end="347:62"><name pos:start="347:50" pos:end="347:62">pft_size_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="347:65" pos:end="347:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:59"><expr pos:start="349:9" pos:end="349:58"><call pos:start="349:9" pos:end="349:58"><name pos:start="349:9" pos:end="349:12">_FDT</name><argument_list pos:start="349:13" pos:end="349:58">(<argument pos:start="349:14" pos:end="349:57"><expr pos:start="349:14" pos:end="349:57"><operator pos:start="349:14" pos:end="349:14">(</operator><call pos:start="349:15" pos:end="349:56"><name pos:start="349:15" pos:end="349:33">fdt_property_string</name><argument_list pos:start="349:34" pos:end="349:56">(<argument pos:start="349:35" pos:end="349:37"><expr pos:start="349:35" pos:end="349:37"><name pos:start="349:35" pos:end="349:37">fdt</name></expr></argument>, <argument pos:start="349:40" pos:end="349:47"><expr pos:start="349:40" pos:end="349:47"><literal type="string" pos:start="349:40" pos:end="349:47">"status"</literal></expr></argument>, <argument pos:start="349:50" pos:end="349:55"><expr pos:start="349:50" pos:end="349:55"><literal type="string" pos:start="349:50" pos:end="349:55">"okay"</literal></expr></argument>)</argument_list></call><operator pos:start="349:57" pos:end="349:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:53"><expr pos:start="351:9" pos:end="351:52"><call pos:start="351:9" pos:end="351:52"><name pos:start="351:9" pos:end="351:12">_FDT</name><argument_list pos:start="351:13" pos:end="351:52">(<argument pos:start="351:14" pos:end="351:51"><expr pos:start="351:14" pos:end="351:51"><operator pos:start="351:14" pos:end="351:14">(</operator><call pos:start="351:15" pos:end="351:50"><name pos:start="351:15" pos:end="351:26">fdt_property</name><argument_list pos:start="351:27" pos:end="351:50">(<argument pos:start="351:28" pos:end="351:30"><expr pos:start="351:28" pos:end="351:30"><name pos:start="351:28" pos:end="351:30">fdt</name></expr></argument>, <argument pos:start="351:33" pos:end="351:40"><expr pos:start="351:33" pos:end="351:40"><literal type="string" pos:start="351:33" pos:end="351:40">"64-bit"</literal></expr></argument>, <argument pos:start="351:43" pos:end="351:46"><expr pos:start="351:43" pos:end="351:46"><name pos:start="351:43" pos:end="351:46">NULL</name></expr></argument>, <argument pos:start="351:49" pos:end="351:49"><expr pos:start="351:49" pos:end="351:49"><literal type="number" pos:start="351:49" pos:end="351:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="351:51" pos:end="351:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="355:9" pos:end="355:61">/* Build interrupt servers and gservers properties */</comment>

        <for pos:start="357:9" pos:end="367:9">for <control pos:start="357:13" pos:end="357:41">(<init pos:start="357:14" pos:end="357:19"><expr pos:start="357:14" pos:end="357:18"><name pos:start="357:14" pos:end="357:14">i</name> <operator pos:start="357:16" pos:end="357:16">=</operator> <literal type="number" pos:start="357:18" pos:end="357:18">0</literal></expr>;</init> <condition pos:start="357:21" pos:end="357:36"><expr pos:start="357:21" pos:end="357:35"><name pos:start="357:21" pos:end="357:21">i</name> <operator pos:start="357:23" pos:end="357:23">&lt;</operator> <name pos:start="357:25" pos:end="357:35">smp_threads</name></expr>;</condition> <incr pos:start="357:38" pos:end="357:40"><expr pos:start="357:38" pos:end="357:40"><name pos:start="357:38" pos:end="357:38">i</name><operator pos:start="357:39" pos:end="357:40">++</operator></expr></incr>)</control> <block pos:start="357:43" pos:end="367:9">{<block_content pos:start="359:13" pos:end="365:39">

            <expr_stmt pos:start="359:13" pos:end="359:53"><expr pos:start="359:13" pos:end="359:52"><name pos:start="359:13" pos:end="359:27"><name pos:start="359:13" pos:end="359:24">servers_prop</name><index pos:start="359:25" pos:end="359:27">[<expr pos:start="359:26" pos:end="359:26"><name pos:start="359:26" pos:end="359:26">i</name></expr>]</index></name> <operator pos:start="359:29" pos:end="359:29">=</operator> <call pos:start="359:31" pos:end="359:52"><name pos:start="359:31" pos:end="359:41">cpu_to_be32</name><argument_list pos:start="359:42" pos:end="359:52">(<argument pos:start="359:43" pos:end="359:51"><expr pos:start="359:43" pos:end="359:51"><name pos:start="359:43" pos:end="359:47">index</name> <operator pos:start="359:49" pos:end="359:49">+</operator> <name pos:start="359:51" pos:end="359:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="361:13" pos:end="361:61">/* Hack, direct the group queues back to cpu 0 */</comment>

            <expr_stmt pos:start="363:13" pos:end="363:56"><expr pos:start="363:13" pos:end="363:55"><name pos:start="363:13" pos:end="363:30"><name pos:start="363:13" pos:end="363:25">gservers_prop</name><index pos:start="363:26" pos:end="363:30">[<expr pos:start="363:27" pos:end="363:29"><name pos:start="363:27" pos:end="363:27">i</name><operator pos:start="363:28" pos:end="363:28">*</operator><literal type="number" pos:start="363:29" pos:end="363:29">2</literal></expr>]</index></name> <operator pos:start="363:32" pos:end="363:32">=</operator> <call pos:start="363:34" pos:end="363:55"><name pos:start="363:34" pos:end="363:44">cpu_to_be32</name><argument_list pos:start="363:45" pos:end="363:55">(<argument pos:start="363:46" pos:end="363:54"><expr pos:start="363:46" pos:end="363:54"><name pos:start="363:46" pos:end="363:50">index</name> <operator pos:start="363:52" pos:end="363:52">+</operator> <name pos:start="363:54" pos:end="363:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:39"><expr pos:start="365:13" pos:end="365:38"><name pos:start="365:13" pos:end="365:34"><name pos:start="365:13" pos:end="365:25">gservers_prop</name><index pos:start="365:26" pos:end="365:34">[<expr pos:start="365:27" pos:end="365:33"><name pos:start="365:27" pos:end="365:27">i</name><operator pos:start="365:28" pos:end="365:28">*</operator><literal type="number" pos:start="365:29" pos:end="365:29">2</literal> <operator pos:start="365:31" pos:end="365:31">+</operator> <literal type="number" pos:start="365:33" pos:end="365:33">1</literal></expr>]</index></name> <operator pos:start="365:36" pos:end="365:36">=</operator> <literal type="number" pos:start="365:38" pos:end="365:38">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="369:9" pos:end="371:65"><expr pos:start="369:9" pos:end="371:64"><call pos:start="369:9" pos:end="371:64"><name pos:start="369:9" pos:end="369:12">_FDT</name><argument_list pos:start="369:13" pos:end="371:64">(<argument pos:start="369:14" pos:end="371:63"><expr pos:start="369:14" pos:end="371:63"><operator pos:start="369:14" pos:end="369:14">(</operator><call pos:start="369:15" pos:end="371:62"><name pos:start="369:15" pos:end="369:26">fdt_property</name><argument_list pos:start="369:27" pos:end="371:62">(<argument pos:start="369:28" pos:end="369:30"><expr pos:start="369:28" pos:end="369:30"><name pos:start="369:28" pos:end="369:30">fdt</name></expr></argument>, <argument pos:start="369:33" pos:end="369:60"><expr pos:start="369:33" pos:end="369:60"><literal type="string" pos:start="369:33" pos:end="369:60">"ibm,ppc-interrupt-server#s"</literal></expr></argument>,

                           <argument pos:start="371:28" pos:end="371:39"><expr pos:start="371:28" pos:end="371:39"><name pos:start="371:28" pos:end="371:39">servers_prop</name></expr></argument>, <argument pos:start="371:42" pos:end="371:61"><expr pos:start="371:42" pos:end="371:61"><sizeof pos:start="371:42" pos:end="371:61">sizeof<argument_list pos:start="371:48" pos:end="371:61">(<argument pos:start="371:49" pos:end="371:60"><expr pos:start="371:49" pos:end="371:60"><name pos:start="371:49" pos:end="371:60">servers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="371:63" pos:end="371:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="375:67"><expr pos:start="373:9" pos:end="375:66"><call pos:start="373:9" pos:end="375:66"><name pos:start="373:9" pos:end="373:12">_FDT</name><argument_list pos:start="373:13" pos:end="375:66">(<argument pos:start="373:14" pos:end="375:65"><expr pos:start="373:14" pos:end="375:65"><operator pos:start="373:14" pos:end="373:14">(</operator><call pos:start="373:15" pos:end="375:64"><name pos:start="373:15" pos:end="373:26">fdt_property</name><argument_list pos:start="373:27" pos:end="375:64">(<argument pos:start="373:28" pos:end="373:30"><expr pos:start="373:28" pos:end="373:30"><name pos:start="373:28" pos:end="373:30">fdt</name></expr></argument>, <argument pos:start="373:33" pos:end="373:61"><expr pos:start="373:33" pos:end="373:61"><literal type="string" pos:start="373:33" pos:end="373:61">"ibm,ppc-interrupt-gserver#s"</literal></expr></argument>,

                           <argument pos:start="375:28" pos:end="375:40"><expr pos:start="375:28" pos:end="375:40"><name pos:start="375:28" pos:end="375:40">gservers_prop</name></expr></argument>, <argument pos:start="375:43" pos:end="375:63"><expr pos:start="375:43" pos:end="375:63"><sizeof pos:start="375:43" pos:end="375:63">sizeof<argument_list pos:start="375:49" pos:end="375:63">(<argument pos:start="375:50" pos:end="375:62"><expr pos:start="375:50" pos:end="375:62"><name pos:start="375:50" pos:end="375:62">gservers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="375:65" pos:end="375:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="379:9" pos:end="385:9"><if pos:start="379:9" pos:end="385:9">if <condition pos:start="379:12" pos:end="379:47">(<expr pos:start="379:13" pos:end="379:46"><name pos:start="379:13" pos:end="379:26"><name pos:start="379:13" pos:end="379:15">env</name><operator pos:start="379:16" pos:end="379:17">-&gt;</operator><name pos:start="379:18" pos:end="379:26">mmu_model</name></name> <operator pos:start="379:28" pos:end="379:28">&amp;</operator> <name pos:start="379:30" pos:end="379:46">POWERPC_MMU_1TSEG</name></expr>)</condition> <block pos:start="379:49" pos:end="385:9">{<block_content pos:start="381:13" pos:end="383:53">

            <expr_stmt pos:start="381:13" pos:end="383:53"><expr pos:start="381:13" pos:end="383:52"><call pos:start="381:13" pos:end="383:52"><name pos:start="381:13" pos:end="381:16">_FDT</name><argument_list pos:start="381:17" pos:end="383:52">(<argument pos:start="381:18" pos:end="383:51"><expr pos:start="381:18" pos:end="383:51"><operator pos:start="381:18" pos:end="381:18">(</operator><call pos:start="381:19" pos:end="383:50"><name pos:start="381:19" pos:end="381:30">fdt_property</name><argument_list pos:start="381:31" pos:end="383:50">(<argument pos:start="381:32" pos:end="381:34"><expr pos:start="381:32" pos:end="381:34"><name pos:start="381:32" pos:end="381:34">fdt</name></expr></argument>, <argument pos:start="381:37" pos:end="381:65"><expr pos:start="381:37" pos:end="381:65"><literal type="string" pos:start="381:37" pos:end="381:65">"ibm,processor-segment-sizes"</literal></expr></argument>,

                               <argument pos:start="383:32" pos:end="383:35"><expr pos:start="383:32" pos:end="383:35"><name pos:start="383:32" pos:end="383:35">segs</name></expr></argument>, <argument pos:start="383:38" pos:end="383:49"><expr pos:start="383:38" pos:end="383:49"><sizeof pos:start="383:38" pos:end="383:49">sizeof<argument_list pos:start="383:44" pos:end="383:49">(<argument pos:start="383:45" pos:end="383:48"><expr pos:start="383:45" pos:end="383:48"><name pos:start="383:45" pos:end="383:48">segs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="383:51" pos:end="383:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="389:9" pos:end="395:48">/* Advertise VMX/VSX (vector extensions) if available

         *   0 / no property == no vector extensions

         *   1               == VMX / Altivec available

         *   2               == VSX available */</comment>

        <if_stmt pos:start="397:9" pos:end="405:9"><if pos:start="397:9" pos:end="405:9">if <condition pos:start="397:12" pos:end="397:43">(<expr pos:start="397:13" pos:end="397:42"><name pos:start="397:13" pos:end="397:28"><name pos:start="397:13" pos:end="397:15">env</name><operator pos:start="397:16" pos:end="397:17">-&gt;</operator><name pos:start="397:18" pos:end="397:28">insns_flags</name></name> <operator pos:start="397:30" pos:end="397:30">&amp;</operator> <name pos:start="397:32" pos:end="397:42">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="397:45" pos:end="405:9">{<block_content pos:start="399:13" pos:end="403:59">

            <decl_stmt pos:start="399:13" pos:end="399:66"><decl pos:start="399:13" pos:end="399:65"><type pos:start="399:13" pos:end="399:20"><name pos:start="399:13" pos:end="399:20">uint32_t</name></type> <name pos:start="399:22" pos:end="399:24">vmx</name> <init pos:start="399:26" pos:end="399:65">= <expr pos:start="399:28" pos:end="399:65"><ternary pos:start="399:28" pos:end="399:65"><condition pos:start="399:28" pos:end="399:59"><expr pos:start="399:28" pos:end="399:57"><operator pos:start="399:28" pos:end="399:28">(</operator><name pos:start="399:29" pos:end="399:45"><name pos:start="399:29" pos:end="399:31">env</name><operator pos:start="399:32" pos:end="399:33">-&gt;</operator><name pos:start="399:34" pos:end="399:45">insns_flags2</name></name> <operator pos:start="399:47" pos:end="399:47">&amp;</operator> <name pos:start="399:49" pos:end="399:56">PPC2_VSX</name><operator pos:start="399:57" pos:end="399:57">)</operator></expr> ?</condition><then pos:start="399:61" pos:end="399:61"> <expr pos:start="399:61" pos:end="399:61"><literal type="number" pos:start="399:61" pos:end="399:61">2</literal></expr> </then><else pos:start="399:63" pos:end="399:65">: <expr pos:start="399:65" pos:end="399:65"><literal type="number" pos:start="399:65" pos:end="399:65">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="403:13" pos:end="403:59"><expr pos:start="403:13" pos:end="403:58"><call pos:start="403:13" pos:end="403:58"><name pos:start="403:13" pos:end="403:16">_FDT</name><argument_list pos:start="403:17" pos:end="403:58">(<argument pos:start="403:18" pos:end="403:57"><expr pos:start="403:18" pos:end="403:57"><operator pos:start="403:18" pos:end="403:18">(</operator><call pos:start="403:19" pos:end="403:56"><name pos:start="403:19" pos:end="403:35">fdt_property_cell</name><argument_list pos:start="403:36" pos:end="403:56">(<argument pos:start="403:37" pos:end="403:39"><expr pos:start="403:37" pos:end="403:39"><name pos:start="403:37" pos:end="403:39">fdt</name></expr></argument>, <argument pos:start="403:42" pos:end="403:50"><expr pos:start="403:42" pos:end="403:50"><literal type="string" pos:start="403:42" pos:end="403:50">"ibm,vmx"</literal></expr></argument>, <argument pos:start="403:53" pos:end="403:55"><expr pos:start="403:53" pos:end="403:55"><name pos:start="403:53" pos:end="403:55">vmx</name></expr></argument>)</argument_list></call><operator pos:start="403:57" pos:end="403:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="409:9" pos:end="413:48">/* Advertise DFP (Decimal Floating Point) if available

         *   0 / no property == no DFP

         *   1               == DFP available */</comment>

        <if_stmt pos:start="415:9" pos:end="419:9"><if pos:start="415:9" pos:end="419:9">if <condition pos:start="415:12" pos:end="415:41">(<expr pos:start="415:13" pos:end="415:40"><name pos:start="415:13" pos:end="415:29"><name pos:start="415:13" pos:end="415:15">env</name><operator pos:start="415:16" pos:end="415:17">-&gt;</operator><name pos:start="415:18" pos:end="415:29">insns_flags2</name></name> <operator pos:start="415:31" pos:end="415:31">&amp;</operator> <name pos:start="415:33" pos:end="415:40">PPC2_DFP</name></expr>)</condition> <block pos:start="415:43" pos:end="419:9">{<block_content pos:start="417:13" pos:end="417:57">

            <expr_stmt pos:start="417:13" pos:end="417:57"><expr pos:start="417:13" pos:end="417:56"><call pos:start="417:13" pos:end="417:56"><name pos:start="417:13" pos:end="417:16">_FDT</name><argument_list pos:start="417:17" pos:end="417:56">(<argument pos:start="417:18" pos:end="417:55"><expr pos:start="417:18" pos:end="417:55"><operator pos:start="417:18" pos:end="417:18">(</operator><call pos:start="417:19" pos:end="417:54"><name pos:start="417:19" pos:end="417:35">fdt_property_cell</name><argument_list pos:start="417:36" pos:end="417:54">(<argument pos:start="417:37" pos:end="417:39"><expr pos:start="417:37" pos:end="417:39"><name pos:start="417:37" pos:end="417:39">fdt</name></expr></argument>, <argument pos:start="417:42" pos:end="417:50"><expr pos:start="417:42" pos:end="417:50"><literal type="string" pos:start="417:42" pos:end="417:50">"ibm,dfp"</literal></expr></argument>, <argument pos:start="417:53" pos:end="417:53"><expr pos:start="417:53" pos:end="417:53"><literal type="number" pos:start="417:53" pos:end="417:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="417:55" pos:end="417:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="423:9" pos:end="423:34"><expr pos:start="423:9" pos:end="423:33"><call pos:start="423:9" pos:end="423:33"><name pos:start="423:9" pos:end="423:12">_FDT</name><argument_list pos:start="423:13" pos:end="423:33">(<argument pos:start="423:14" pos:end="423:32"><expr pos:start="423:14" pos:end="423:32"><operator pos:start="423:14" pos:end="423:14">(</operator><call pos:start="423:15" pos:end="423:31"><name pos:start="423:15" pos:end="423:26">fdt_end_node</name><argument_list pos:start="423:27" pos:end="423:31">(<argument pos:start="423:28" pos:end="423:30"><expr pos:start="423:28" pos:end="423:30"><name pos:start="423:28" pos:end="423:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="423:32" pos:end="423:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="429:5" pos:end="429:22"><expr pos:start="429:5" pos:end="429:21"><call pos:start="429:5" pos:end="429:21"><name pos:start="429:5" pos:end="429:10">g_free</name><argument_list pos:start="429:11" pos:end="429:21">(<argument pos:start="429:12" pos:end="429:20"><expr pos:start="429:12" pos:end="429:20"><name pos:start="429:12" pos:end="429:20">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="433:5" pos:end="433:30"><expr pos:start="433:5" pos:end="433:29"><call pos:start="433:5" pos:end="433:29"><name pos:start="433:5" pos:end="433:8">_FDT</name><argument_list pos:start="433:9" pos:end="433:29">(<argument pos:start="433:10" pos:end="433:28"><expr pos:start="433:10" pos:end="433:28"><operator pos:start="433:10" pos:end="433:10">(</operator><call pos:start="433:11" pos:end="433:27"><name pos:start="433:11" pos:end="433:22">fdt_end_node</name><argument_list pos:start="433:23" pos:end="433:27">(<argument pos:start="433:24" pos:end="433:26"><expr pos:start="433:24" pos:end="433:26"><name pos:start="433:24" pos:end="433:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="433:28" pos:end="433:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="437:5" pos:end="437:14">/* RTAS */</comment>

    <expr_stmt pos:start="439:5" pos:end="439:40"><expr pos:start="439:5" pos:end="439:39"><call pos:start="439:5" pos:end="439:39"><name pos:start="439:5" pos:end="439:8">_FDT</name><argument_list pos:start="439:9" pos:end="439:39">(<argument pos:start="439:10" pos:end="439:38"><expr pos:start="439:10" pos:end="439:38"><operator pos:start="439:10" pos:end="439:10">(</operator><call pos:start="439:11" pos:end="439:37"><name pos:start="439:11" pos:end="439:24">fdt_begin_node</name><argument_list pos:start="439:25" pos:end="439:37">(<argument pos:start="439:26" pos:end="439:28"><expr pos:start="439:26" pos:end="439:28"><name pos:start="439:26" pos:end="439:28">fdt</name></expr></argument>, <argument pos:start="439:31" pos:end="439:36"><expr pos:start="439:31" pos:end="439:36"><literal type="string" pos:start="439:31" pos:end="439:36">"rtas"</literal></expr></argument>)</argument_list></call><operator pos:start="439:38" pos:end="439:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="443:5" pos:end="445:48"><expr pos:start="443:5" pos:end="445:47"><call pos:start="443:5" pos:end="445:47"><name pos:start="443:5" pos:end="443:8">_FDT</name><argument_list pos:start="443:9" pos:end="445:47">(<argument pos:start="443:10" pos:end="445:46"><expr pos:start="443:10" pos:end="445:46"><operator pos:start="443:10" pos:end="443:10">(</operator><call pos:start="443:11" pos:end="445:45"><name pos:start="443:11" pos:end="443:22">fdt_property</name><argument_list pos:start="443:23" pos:end="445:45">(<argument pos:start="443:24" pos:end="443:26"><expr pos:start="443:24" pos:end="443:26"><name pos:start="443:24" pos:end="443:26">fdt</name></expr></argument>, <argument pos:start="443:29" pos:end="443:52"><expr pos:start="443:29" pos:end="443:52"><literal type="string" pos:start="443:29" pos:end="443:52">"ibm,hypertas-functions"</literal></expr></argument>, <argument pos:start="443:55" pos:end="443:67"><expr pos:start="443:55" pos:end="443:67"><name pos:start="443:55" pos:end="443:67">hypertas_prop</name></expr></argument>,

                       <argument pos:start="445:24" pos:end="445:44"><expr pos:start="445:24" pos:end="445:44"><sizeof pos:start="445:24" pos:end="445:44">sizeof<argument_list pos:start="445:30" pos:end="445:44">(<argument pos:start="445:31" pos:end="445:43"><expr pos:start="445:31" pos:end="445:43"><name pos:start="445:31" pos:end="445:43">hypertas_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="445:46" pos:end="445:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="449:5" pos:end="451:40"><expr pos:start="449:5" pos:end="451:39"><call pos:start="449:5" pos:end="451:39"><name pos:start="449:5" pos:end="449:8">_FDT</name><argument_list pos:start="449:9" pos:end="451:39">(<argument pos:start="449:10" pos:end="451:38"><expr pos:start="449:10" pos:end="451:38"><operator pos:start="449:10" pos:end="449:10">(</operator><call pos:start="449:11" pos:end="451:37"><name pos:start="449:11" pos:end="449:22">fdt_property</name><argument_list pos:start="449:23" pos:end="451:37">(<argument pos:start="449:24" pos:end="449:26"><expr pos:start="449:24" pos:end="449:26"><name pos:start="449:24" pos:end="449:26">fdt</name></expr></argument>, <argument pos:start="449:29" pos:end="449:64"><expr pos:start="449:29" pos:end="449:64"><literal type="string" pos:start="449:29" pos:end="449:64">"ibm,associativity-reference-points"</literal></expr></argument>,

        <argument pos:start="451:9" pos:end="451:17"><expr pos:start="451:9" pos:end="451:17"><name pos:start="451:9" pos:end="451:17">refpoints</name></expr></argument>, <argument pos:start="451:20" pos:end="451:36"><expr pos:start="451:20" pos:end="451:36"><sizeof pos:start="451:20" pos:end="451:36">sizeof<argument_list pos:start="451:26" pos:end="451:36">(<argument pos:start="451:27" pos:end="451:35"><expr pos:start="451:27" pos:end="451:35"><name pos:start="451:27" pos:end="451:35">refpoints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="451:38" pos:end="451:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="455:5" pos:end="455:30"><expr pos:start="455:5" pos:end="455:29"><call pos:start="455:5" pos:end="455:29"><name pos:start="455:5" pos:end="455:8">_FDT</name><argument_list pos:start="455:9" pos:end="455:29">(<argument pos:start="455:10" pos:end="455:28"><expr pos:start="455:10" pos:end="455:28"><operator pos:start="455:10" pos:end="455:10">(</operator><call pos:start="455:11" pos:end="455:27"><name pos:start="455:11" pos:end="455:22">fdt_end_node</name><argument_list pos:start="455:23" pos:end="455:27">(<argument pos:start="455:24" pos:end="455:26"><expr pos:start="455:24" pos:end="455:26"><name pos:start="455:24" pos:end="455:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="455:28" pos:end="455:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="459:5" pos:end="459:30">/* interrupt controller */</comment>

    <expr_stmt pos:start="461:5" pos:end="461:56"><expr pos:start="461:5" pos:end="461:55"><call pos:start="461:5" pos:end="461:55"><name pos:start="461:5" pos:end="461:8">_FDT</name><argument_list pos:start="461:9" pos:end="461:55">(<argument pos:start="461:10" pos:end="461:54"><expr pos:start="461:10" pos:end="461:54"><operator pos:start="461:10" pos:end="461:10">(</operator><call pos:start="461:11" pos:end="461:53"><name pos:start="461:11" pos:end="461:24">fdt_begin_node</name><argument_list pos:start="461:25" pos:end="461:53">(<argument pos:start="461:26" pos:end="461:28"><expr pos:start="461:26" pos:end="461:28"><name pos:start="461:26" pos:end="461:28">fdt</name></expr></argument>, <argument pos:start="461:31" pos:end="461:52"><expr pos:start="461:31" pos:end="461:52"><literal type="string" pos:start="461:31" pos:end="461:52">"interrupt-controller"</literal></expr></argument>)</argument_list></call><operator pos:start="461:54" pos:end="461:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="465:5" pos:end="467:75"><expr pos:start="465:5" pos:end="467:74"><call pos:start="465:5" pos:end="467:74"><name pos:start="465:5" pos:end="465:8">_FDT</name><argument_list pos:start="465:9" pos:end="467:74">(<argument pos:start="465:10" pos:end="467:73"><expr pos:start="465:10" pos:end="467:73"><operator pos:start="465:10" pos:end="465:10">(</operator><call pos:start="465:11" pos:end="467:72"><name pos:start="465:11" pos:end="465:29">fdt_property_string</name><argument_list pos:start="465:30" pos:end="467:72">(<argument pos:start="465:31" pos:end="465:33"><expr pos:start="465:31" pos:end="465:33"><name pos:start="465:31" pos:end="465:33">fdt</name></expr></argument>, <argument pos:start="465:36" pos:end="465:48"><expr pos:start="465:36" pos:end="465:48"><literal type="string" pos:start="465:36" pos:end="465:48">"device_type"</literal></expr></argument>,

                              <argument pos:start="467:31" pos:end="467:71"><expr pos:start="467:31" pos:end="467:71"><literal type="string" pos:start="467:31" pos:end="467:71">"PowerPC-External-Interrupt-Presentation"</literal></expr></argument>)</argument_list></call><operator pos:start="467:73" pos:end="467:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="469:5" pos:end="469:67"><expr pos:start="469:5" pos:end="469:66"><call pos:start="469:5" pos:end="469:66"><name pos:start="469:5" pos:end="469:8">_FDT</name><argument_list pos:start="469:9" pos:end="469:66">(<argument pos:start="469:10" pos:end="469:65"><expr pos:start="469:10" pos:end="469:65"><operator pos:start="469:10" pos:end="469:10">(</operator><call pos:start="469:11" pos:end="469:64"><name pos:start="469:11" pos:end="469:29">fdt_property_string</name><argument_list pos:start="469:30" pos:end="469:64">(<argument pos:start="469:31" pos:end="469:33"><expr pos:start="469:31" pos:end="469:33"><name pos:start="469:31" pos:end="469:33">fdt</name></expr></argument>, <argument pos:start="469:36" pos:end="469:47"><expr pos:start="469:36" pos:end="469:47"><literal type="string" pos:start="469:36" pos:end="469:47">"compatible"</literal></expr></argument>, <argument pos:start="469:50" pos:end="469:63"><expr pos:start="469:50" pos:end="469:63"><literal type="string" pos:start="469:50" pos:end="469:63">"IBM,ppc-xicp"</literal></expr></argument>)</argument_list></call><operator pos:start="469:65" pos:end="469:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="471:5" pos:end="471:63"><expr pos:start="471:5" pos:end="471:62"><call pos:start="471:5" pos:end="471:62"><name pos:start="471:5" pos:end="471:8">_FDT</name><argument_list pos:start="471:9" pos:end="471:62">(<argument pos:start="471:10" pos:end="471:61"><expr pos:start="471:10" pos:end="471:61"><operator pos:start="471:10" pos:end="471:10">(</operator><call pos:start="471:11" pos:end="471:60"><name pos:start="471:11" pos:end="471:22">fdt_property</name><argument_list pos:start="471:23" pos:end="471:60">(<argument pos:start="471:24" pos:end="471:26"><expr pos:start="471:24" pos:end="471:26"><name pos:start="471:24" pos:end="471:26">fdt</name></expr></argument>, <argument pos:start="471:29" pos:end="471:50"><expr pos:start="471:29" pos:end="471:50"><literal type="string" pos:start="471:29" pos:end="471:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="471:53" pos:end="471:56"><expr pos:start="471:53" pos:end="471:56"><name pos:start="471:53" pos:end="471:56">NULL</name></expr></argument>, <argument pos:start="471:59" pos:end="471:59"><expr pos:start="471:59" pos:end="471:59"><literal type="number" pos:start="471:59" pos:end="471:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="471:61" pos:end="471:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="477:63"><expr pos:start="473:5" pos:end="477:62"><call pos:start="473:5" pos:end="477:62"><name pos:start="473:5" pos:end="473:8">_FDT</name><argument_list pos:start="473:9" pos:end="477:62">(<argument pos:start="473:10" pos:end="477:61"><expr pos:start="473:10" pos:end="477:61"><operator pos:start="473:10" pos:end="473:10">(</operator><call pos:start="473:11" pos:end="477:60"><name pos:start="473:11" pos:end="473:22">fdt_property</name><argument_list pos:start="473:23" pos:end="477:60">(<argument pos:start="473:24" pos:end="473:26"><expr pos:start="473:24" pos:end="473:26"><name pos:start="473:24" pos:end="473:26">fdt</name></expr></argument>, <argument pos:start="473:29" pos:end="473:57"><expr pos:start="473:29" pos:end="473:57"><literal type="string" pos:start="473:29" pos:end="473:57">"ibm,interrupt-server-ranges"</literal></expr></argument>,

                       <argument pos:start="475:24" pos:end="475:51"><expr pos:start="475:24" pos:end="475:51"><name pos:start="475:24" pos:end="475:51">interrupt_server_ranges_prop</name></expr></argument>,

                       <argument pos:start="477:24" pos:end="477:59"><expr pos:start="477:24" pos:end="477:59"><sizeof pos:start="477:24" pos:end="477:59">sizeof<argument_list pos:start="477:30" pos:end="477:59">(<argument pos:start="477:31" pos:end="477:58"><expr pos:start="477:31" pos:end="477:58"><name pos:start="477:31" pos:end="477:58">interrupt_server_ranges_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="477:61" pos:end="477:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="479:5" pos:end="479:58"><expr pos:start="479:5" pos:end="479:57"><call pos:start="479:5" pos:end="479:57"><name pos:start="479:5" pos:end="479:8">_FDT</name><argument_list pos:start="479:9" pos:end="479:57">(<argument pos:start="479:10" pos:end="479:56"><expr pos:start="479:10" pos:end="479:56"><operator pos:start="479:10" pos:end="479:10">(</operator><call pos:start="479:11" pos:end="479:55"><name pos:start="479:11" pos:end="479:27">fdt_property_cell</name><argument_list pos:start="479:28" pos:end="479:55">(<argument pos:start="479:29" pos:end="479:31"><expr pos:start="479:29" pos:end="479:31"><name pos:start="479:29" pos:end="479:31">fdt</name></expr></argument>, <argument pos:start="479:34" pos:end="479:51"><expr pos:start="479:34" pos:end="479:51"><literal type="string" pos:start="479:34" pos:end="479:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="479:54" pos:end="479:54"><expr pos:start="479:54" pos:end="479:54"><literal type="number" pos:start="479:54" pos:end="479:54">2</literal></expr></argument>)</argument_list></call><operator pos:start="479:56" pos:end="479:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="481:5" pos:end="481:66"><expr pos:start="481:5" pos:end="481:65"><call pos:start="481:5" pos:end="481:65"><name pos:start="481:5" pos:end="481:8">_FDT</name><argument_list pos:start="481:9" pos:end="481:65">(<argument pos:start="481:10" pos:end="481:64"><expr pos:start="481:10" pos:end="481:64"><operator pos:start="481:10" pos:end="481:10">(</operator><call pos:start="481:11" pos:end="481:63"><name pos:start="481:11" pos:end="481:27">fdt_property_cell</name><argument_list pos:start="481:28" pos:end="481:63">(<argument pos:start="481:29" pos:end="481:31"><expr pos:start="481:29" pos:end="481:31"><name pos:start="481:29" pos:end="481:31">fdt</name></expr></argument>, <argument pos:start="481:34" pos:end="481:48"><expr pos:start="481:34" pos:end="481:48"><literal type="string" pos:start="481:34" pos:end="481:48">"linux,phandle"</literal></expr></argument>, <argument pos:start="481:51" pos:end="481:62"><expr pos:start="481:51" pos:end="481:62"><name pos:start="481:51" pos:end="481:62">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="481:64" pos:end="481:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="483:5" pos:end="483:60"><expr pos:start="483:5" pos:end="483:59"><call pos:start="483:5" pos:end="483:59"><name pos:start="483:5" pos:end="483:8">_FDT</name><argument_list pos:start="483:9" pos:end="483:59">(<argument pos:start="483:10" pos:end="483:58"><expr pos:start="483:10" pos:end="483:58"><operator pos:start="483:10" pos:end="483:10">(</operator><call pos:start="483:11" pos:end="483:57"><name pos:start="483:11" pos:end="483:27">fdt_property_cell</name><argument_list pos:start="483:28" pos:end="483:57">(<argument pos:start="483:29" pos:end="483:31"><expr pos:start="483:29" pos:end="483:31"><name pos:start="483:29" pos:end="483:31">fdt</name></expr></argument>, <argument pos:start="483:34" pos:end="483:42"><expr pos:start="483:34" pos:end="483:42"><literal type="string" pos:start="483:34" pos:end="483:42">"phandle"</literal></expr></argument>, <argument pos:start="483:45" pos:end="483:56"><expr pos:start="483:45" pos:end="483:56"><name pos:start="483:45" pos:end="483:56">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="483:58" pos:end="483:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="487:5" pos:end="487:30"><expr pos:start="487:5" pos:end="487:29"><call pos:start="487:5" pos:end="487:29"><name pos:start="487:5" pos:end="487:8">_FDT</name><argument_list pos:start="487:9" pos:end="487:29">(<argument pos:start="487:10" pos:end="487:28"><expr pos:start="487:10" pos:end="487:28"><operator pos:start="487:10" pos:end="487:10">(</operator><call pos:start="487:11" pos:end="487:27"><name pos:start="487:11" pos:end="487:22">fdt_end_node</name><argument_list pos:start="487:23" pos:end="487:27">(<argument pos:start="487:24" pos:end="487:26"><expr pos:start="487:24" pos:end="487:26"><name pos:start="487:24" pos:end="487:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="487:28" pos:end="487:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="491:5" pos:end="491:17">/* vdevice */</comment>

    <expr_stmt pos:start="493:5" pos:end="493:43"><expr pos:start="493:5" pos:end="493:42"><call pos:start="493:5" pos:end="493:42"><name pos:start="493:5" pos:end="493:8">_FDT</name><argument_list pos:start="493:9" pos:end="493:42">(<argument pos:start="493:10" pos:end="493:41"><expr pos:start="493:10" pos:end="493:41"><operator pos:start="493:10" pos:end="493:10">(</operator><call pos:start="493:11" pos:end="493:40"><name pos:start="493:11" pos:end="493:24">fdt_begin_node</name><argument_list pos:start="493:25" pos:end="493:40">(<argument pos:start="493:26" pos:end="493:28"><expr pos:start="493:26" pos:end="493:28"><name pos:start="493:26" pos:end="493:28">fdt</name></expr></argument>, <argument pos:start="493:31" pos:end="493:39"><expr pos:start="493:31" pos:end="493:39"><literal type="string" pos:start="493:31" pos:end="493:39">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="493:41" pos:end="493:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="497:5" pos:end="497:63"><expr pos:start="497:5" pos:end="497:62"><call pos:start="497:5" pos:end="497:62"><name pos:start="497:5" pos:end="497:8">_FDT</name><argument_list pos:start="497:9" pos:end="497:62">(<argument pos:start="497:10" pos:end="497:61"><expr pos:start="497:10" pos:end="497:61"><operator pos:start="497:10" pos:end="497:10">(</operator><call pos:start="497:11" pos:end="497:60"><name pos:start="497:11" pos:end="497:29">fdt_property_string</name><argument_list pos:start="497:30" pos:end="497:60">(<argument pos:start="497:31" pos:end="497:33"><expr pos:start="497:31" pos:end="497:33"><name pos:start="497:31" pos:end="497:33">fdt</name></expr></argument>, <argument pos:start="497:36" pos:end="497:48"><expr pos:start="497:36" pos:end="497:48"><literal type="string" pos:start="497:36" pos:end="497:48">"device_type"</literal></expr></argument>, <argument pos:start="497:51" pos:end="497:59"><expr pos:start="497:51" pos:end="497:59"><literal type="string" pos:start="497:51" pos:end="497:59">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="497:61" pos:end="497:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:66"><expr pos:start="499:5" pos:end="499:65"><call pos:start="499:5" pos:end="499:65"><name pos:start="499:5" pos:end="499:8">_FDT</name><argument_list pos:start="499:9" pos:end="499:65">(<argument pos:start="499:10" pos:end="499:64"><expr pos:start="499:10" pos:end="499:64"><operator pos:start="499:10" pos:end="499:10">(</operator><call pos:start="499:11" pos:end="499:63"><name pos:start="499:11" pos:end="499:29">fdt_property_string</name><argument_list pos:start="499:30" pos:end="499:63">(<argument pos:start="499:31" pos:end="499:33"><expr pos:start="499:31" pos:end="499:33"><name pos:start="499:31" pos:end="499:33">fdt</name></expr></argument>, <argument pos:start="499:36" pos:end="499:47"><expr pos:start="499:36" pos:end="499:47"><literal type="string" pos:start="499:36" pos:end="499:47">"compatible"</literal></expr></argument>, <argument pos:start="499:50" pos:end="499:62"><expr pos:start="499:50" pos:end="499:62"><literal type="string" pos:start="499:50" pos:end="499:62">"IBM,vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="499:64" pos:end="499:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="501:5" pos:end="501:58"><expr pos:start="501:5" pos:end="501:57"><call pos:start="501:5" pos:end="501:57"><name pos:start="501:5" pos:end="501:8">_FDT</name><argument_list pos:start="501:9" pos:end="501:57">(<argument pos:start="501:10" pos:end="501:56"><expr pos:start="501:10" pos:end="501:56"><operator pos:start="501:10" pos:end="501:10">(</operator><call pos:start="501:11" pos:end="501:55"><name pos:start="501:11" pos:end="501:27">fdt_property_cell</name><argument_list pos:start="501:28" pos:end="501:55">(<argument pos:start="501:29" pos:end="501:31"><expr pos:start="501:29" pos:end="501:31"><name pos:start="501:29" pos:end="501:31">fdt</name></expr></argument>, <argument pos:start="501:34" pos:end="501:49"><expr pos:start="501:34" pos:end="501:49"><literal type="string" pos:start="501:34" pos:end="501:49">"#address-cells"</literal></expr></argument>, <argument pos:start="501:52" pos:end="501:54"><expr pos:start="501:52" pos:end="501:54"><literal type="number" pos:start="501:52" pos:end="501:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="501:56" pos:end="501:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="503:5" pos:end="503:55"><expr pos:start="503:5" pos:end="503:54"><call pos:start="503:5" pos:end="503:54"><name pos:start="503:5" pos:end="503:8">_FDT</name><argument_list pos:start="503:9" pos:end="503:54">(<argument pos:start="503:10" pos:end="503:53"><expr pos:start="503:10" pos:end="503:53"><operator pos:start="503:10" pos:end="503:10">(</operator><call pos:start="503:11" pos:end="503:52"><name pos:start="503:11" pos:end="503:27">fdt_property_cell</name><argument_list pos:start="503:28" pos:end="503:52">(<argument pos:start="503:29" pos:end="503:31"><expr pos:start="503:29" pos:end="503:31"><name pos:start="503:29" pos:end="503:31">fdt</name></expr></argument>, <argument pos:start="503:34" pos:end="503:46"><expr pos:start="503:34" pos:end="503:46"><literal type="string" pos:start="503:34" pos:end="503:46">"#size-cells"</literal></expr></argument>, <argument pos:start="503:49" pos:end="503:51"><expr pos:start="503:49" pos:end="503:51"><literal type="number" pos:start="503:49" pos:end="503:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="503:53" pos:end="503:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:60"><expr pos:start="505:5" pos:end="505:59"><call pos:start="505:5" pos:end="505:59"><name pos:start="505:5" pos:end="505:8">_FDT</name><argument_list pos:start="505:9" pos:end="505:59">(<argument pos:start="505:10" pos:end="505:58"><expr pos:start="505:10" pos:end="505:58"><operator pos:start="505:10" pos:end="505:10">(</operator><call pos:start="505:11" pos:end="505:57"><name pos:start="505:11" pos:end="505:27">fdt_property_cell</name><argument_list pos:start="505:28" pos:end="505:57">(<argument pos:start="505:29" pos:end="505:31"><expr pos:start="505:29" pos:end="505:31"><name pos:start="505:29" pos:end="505:31">fdt</name></expr></argument>, <argument pos:start="505:34" pos:end="505:51"><expr pos:start="505:34" pos:end="505:51"><literal type="string" pos:start="505:34" pos:end="505:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="505:54" pos:end="505:56"><expr pos:start="505:54" pos:end="505:56"><literal type="number" pos:start="505:54" pos:end="505:56">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="505:58" pos:end="505:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:63"><expr pos:start="507:5" pos:end="507:62"><call pos:start="507:5" pos:end="507:62"><name pos:start="507:5" pos:end="507:8">_FDT</name><argument_list pos:start="507:9" pos:end="507:62">(<argument pos:start="507:10" pos:end="507:61"><expr pos:start="507:10" pos:end="507:61"><operator pos:start="507:10" pos:end="507:10">(</operator><call pos:start="507:11" pos:end="507:60"><name pos:start="507:11" pos:end="507:22">fdt_property</name><argument_list pos:start="507:23" pos:end="507:60">(<argument pos:start="507:24" pos:end="507:26"><expr pos:start="507:24" pos:end="507:26"><name pos:start="507:24" pos:end="507:26">fdt</name></expr></argument>, <argument pos:start="507:29" pos:end="507:50"><expr pos:start="507:29" pos:end="507:50"><literal type="string" pos:start="507:29" pos:end="507:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="507:53" pos:end="507:56"><expr pos:start="507:53" pos:end="507:56"><name pos:start="507:53" pos:end="507:56">NULL</name></expr></argument>, <argument pos:start="507:59" pos:end="507:59"><expr pos:start="507:59" pos:end="507:59"><literal type="number" pos:start="507:59" pos:end="507:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="507:61" pos:end="507:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="511:5" pos:end="511:30"><expr pos:start="511:5" pos:end="511:29"><call pos:start="511:5" pos:end="511:29"><name pos:start="511:5" pos:end="511:8">_FDT</name><argument_list pos:start="511:9" pos:end="511:29">(<argument pos:start="511:10" pos:end="511:28"><expr pos:start="511:10" pos:end="511:28"><operator pos:start="511:10" pos:end="511:10">(</operator><call pos:start="511:11" pos:end="511:27"><name pos:start="511:11" pos:end="511:22">fdt_end_node</name><argument_list pos:start="511:23" pos:end="511:27">(<argument pos:start="511:24" pos:end="511:26"><expr pos:start="511:24" pos:end="511:26"><name pos:start="511:24" pos:end="511:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="511:28" pos:end="511:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="515:5" pos:end="515:30"><expr pos:start="515:5" pos:end="515:29"><call pos:start="515:5" pos:end="515:29"><name pos:start="515:5" pos:end="515:8">_FDT</name><argument_list pos:start="515:9" pos:end="515:29">(<argument pos:start="515:10" pos:end="515:28"><expr pos:start="515:10" pos:end="515:28"><operator pos:start="515:10" pos:end="515:10">(</operator><call pos:start="515:11" pos:end="515:27"><name pos:start="515:11" pos:end="515:22">fdt_end_node</name><argument_list pos:start="515:23" pos:end="515:27">(<argument pos:start="515:24" pos:end="515:26"><expr pos:start="515:24" pos:end="515:26"><name pos:start="515:24" pos:end="515:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="515:28" pos:end="515:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="515:32" pos:end="515:52">/* close root node */</comment>

    <expr_stmt pos:start="517:5" pos:end="517:28"><expr pos:start="517:5" pos:end="517:27"><call pos:start="517:5" pos:end="517:27"><name pos:start="517:5" pos:end="517:8">_FDT</name><argument_list pos:start="517:9" pos:end="517:27">(<argument pos:start="517:10" pos:end="517:26"><expr pos:start="517:10" pos:end="517:26"><operator pos:start="517:10" pos:end="517:10">(</operator><call pos:start="517:11" pos:end="517:25"><name pos:start="517:11" pos:end="517:20">fdt_finish</name><argument_list pos:start="517:21" pos:end="517:25">(<argument pos:start="517:22" pos:end="517:24"><expr pos:start="517:22" pos:end="517:24"><name pos:start="517:22" pos:end="517:24">fdt</name></expr></argument>)</argument_list></call><operator pos:start="517:26" pos:end="517:26">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="521:5" pos:end="521:15">return <expr pos:start="521:12" pos:end="521:14"><name pos:start="521:12" pos:end="521:14">fdt</name></expr>;</return>

</block_content>}</block></function>
</unit>
