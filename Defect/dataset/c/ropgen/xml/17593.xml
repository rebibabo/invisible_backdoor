<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17593.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">sd_snapshot_list</name><parameter_list pos:start="1:28" pos:end="1:77">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:76"><decl pos:start="1:51" pos:end="1:76"><type pos:start="1:51" pos:end="1:76"><name pos:start="1:51" pos:end="1:66">QEMUSnapshotInfo</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:76">psn_tab</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="181:1">{<block_content pos:start="5:5" pos:end="179:17">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BDRVSheepdogState</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:37">= <expr pos:start="5:28" pos:end="5:37"><name pos:start="5:28" pos:end="5:37"><name pos:start="5:28" pos:end="5:29">bs</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:37">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">SheepdogReq</name></type> <name pos:start="7:17" pos:end="7:19">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>, <decl pos:start="9:13" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">nr</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><literal type="number" pos:start="9:18" pos:end="9:21">1024</literal></expr></init></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:26">ret</name></decl>, <decl pos:start="9:29" pos:end="9:74"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:31">max</name> <init pos:start="9:33" pos:end="9:74">= <expr pos:start="9:35" pos:end="9:74"><call pos:start="9:35" pos:end="9:59"><name pos:start="9:35" pos:end="9:47">BITS_TO_LONGS</name><argument_list pos:start="9:48" pos:end="9:59">(<argument pos:start="9:49" pos:end="9:58"><expr pos:start="9:49" pos:end="9:58"><name pos:start="9:49" pos:end="9:58">SD_NR_VDIS</name></expr></argument>)</argument_list></call> <operator pos:start="9:61" pos:end="9:61">*</operator> <sizeof pos:start="9:63" pos:end="9:74">sizeof<argument_list pos:start="9:69" pos:end="9:74">(<argument pos:start="9:70" pos:end="9:73"><expr pos:start="9:70" pos:end="9:73"><name pos:start="9:70" pos:end="9:73">long</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">QEMUSnapshotInfo</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">sn_tab</name> <init pos:start="11:30" pos:end="11:35">= <expr pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">wlen</name></decl>, <decl pos:start="13:20" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:20" pos:end="13:23">rlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">found</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:24">SheepdogInode</name></type> <name pos:start="17:26" pos:end="17:30">inode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">long</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:28">vdi_inuse</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:25">start_nr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:17">hval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:16">vid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:13">vdi_inuse</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:29"><name pos:start="29:17" pos:end="29:24">g_malloc</name><argument_list pos:start="29:25" pos:end="29:29">(<argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:6">fd</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:42"><name pos:start="33:10" pos:end="33:24">connect_to_sdog</name><argument_list pos:start="33:25" pos:end="33:42">(<argument pos:start="33:26" pos:end="33:32"><expr pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:32">addr</name></name></expr></argument>, <argument pos:start="33:35" pos:end="33:41"><expr pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:41"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:41">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:10">fd</name> <operator pos:start="35:12" pos:end="35:12">&lt;</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>)</condition> <block pos:start="35:17" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:17"><expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:16">fd</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:17">goto <name pos:start="39:14" pos:end="39:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:15"><expr pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:8">rlen</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <name pos:start="45:12" pos:end="45:14">max</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:13"><expr pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:8">wlen</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:10">memset</name><argument_list pos:start="51:11" pos:end="51:32">(<argument pos:start="51:12" pos:end="51:15"><expr pos:start="51:12" pos:end="51:15"><operator pos:start="51:12" pos:end="51:12">&amp;</operator><name pos:start="51:13" pos:end="51:15">req</name></expr></argument>, <argument pos:start="51:18" pos:end="51:18"><expr pos:start="51:18" pos:end="51:18"><literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr></argument>, <argument pos:start="51:21" pos:end="51:31"><expr pos:start="51:21" pos:end="51:31"><sizeof pos:start="51:21" pos:end="51:31">sizeof<argument_list pos:start="51:27" pos:end="51:31">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><name pos:start="51:28" pos:end="51:30">req</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:7">req</name><operator pos:start="55:8" pos:end="55:8">.</operator><name pos:start="55:9" pos:end="55:14">opcode</name></name> <operator pos:start="55:16" pos:end="55:16">=</operator> <name pos:start="55:18" pos:end="55:32">SD_OP_READ_VDIS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:7">req</name><operator pos:start="57:8" pos:end="57:8">.</operator><name pos:start="57:9" pos:end="57:19">data_length</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:25">max</name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:67"><expr pos:start="61:5" pos:end="61:66"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:66"><name pos:start="61:11" pos:end="61:16">do_req</name><argument_list pos:start="61:17" pos:end="61:66">(<argument pos:start="61:18" pos:end="61:19"><expr pos:start="61:18" pos:end="61:19"><name pos:start="61:18" pos:end="61:19">fd</name></expr></argument>, <argument pos:start="61:22" pos:end="61:40"><expr pos:start="61:22" pos:end="61:40"><operator pos:start="61:22" pos:end="61:22">(</operator><name pos:start="61:23" pos:end="61:33">SheepdogReq</name> <operator pos:start="61:35" pos:end="61:35">*</operator><operator pos:start="61:36" pos:end="61:36">)</operator><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:40">req</name></expr></argument>, <argument pos:start="61:43" pos:end="61:51"><expr pos:start="61:43" pos:end="61:51"><name pos:start="61:43" pos:end="61:51">vdi_inuse</name></expr></argument>, <argument pos:start="61:54" pos:end="61:58"><expr pos:start="61:54" pos:end="61:58"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:58">wlen</name></expr></argument>, <argument pos:start="61:61" pos:end="61:65"><expr pos:start="61:61" pos:end="61:65"><operator pos:start="61:61" pos:end="61:61">&amp;</operator><name pos:start="61:62" pos:end="61:65">rlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><call pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15">closesocket</name><argument_list pos:start="65:16" pos:end="65:19">(<argument pos:start="65:17" pos:end="65:18"><expr pos:start="65:17" pos:end="65:18"><name pos:start="65:17" pos:end="65:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="71:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:12">(<expr pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">ret</name></expr>)</condition> <block pos:start="67:14" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:17">

        <goto pos:start="69:9" pos:end="69:17">goto <name pos:start="69:14" pos:end="69:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:45"><expr pos:start="75:5" pos:end="75:44"><name pos:start="75:5" pos:end="75:10">sn_tab</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <call pos:start="75:14" pos:end="75:44"><name pos:start="75:14" pos:end="75:22">g_malloc0</name><argument_list pos:start="75:23" pos:end="75:44">(<argument pos:start="75:24" pos:end="75:43"><expr pos:start="75:24" pos:end="75:43"><name pos:start="75:24" pos:end="75:25">nr</name> <operator pos:start="75:27" pos:end="75:27">*</operator> <sizeof pos:start="75:29" pos:end="75:43">sizeof<argument_list pos:start="75:35" pos:end="75:43">(<argument pos:start="75:36" pos:end="75:42"><expr pos:start="75:36" pos:end="75:42"><operator pos:start="75:36" pos:end="75:36">*</operator><name pos:start="75:37" pos:end="75:42">sn_tab</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="79:5" pos:end="79:47">/* calculate a vdi id with hash function */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:64"><expr pos:start="81:5" pos:end="81:63"><name pos:start="81:5" pos:end="81:8">hval</name> <operator pos:start="81:10" pos:end="81:10">=</operator> <call pos:start="81:12" pos:end="81:63"><name pos:start="81:12" pos:end="81:22">fnv_64a_buf</name><argument_list pos:start="81:23" pos:end="81:63">(<argument pos:start="81:24" pos:end="81:30"><expr pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:30">name</name></name></expr></argument>, <argument pos:start="81:33" pos:end="81:47"><expr pos:start="81:33" pos:end="81:47"><call pos:start="81:33" pos:end="81:47"><name pos:start="81:33" pos:end="81:38">strlen</name><argument_list pos:start="81:39" pos:end="81:47">(<argument pos:start="81:40" pos:end="81:46"><expr pos:start="81:40" pos:end="81:46"><name pos:start="81:40" pos:end="81:46"><name pos:start="81:40" pos:end="81:40">s</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:46">name</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:50" pos:end="81:62"><expr pos:start="81:50" pos:end="81:62"><name pos:start="81:50" pos:end="81:62">FNV1A_64_INIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:39"><expr pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:12">start_nr</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <name pos:start="83:16" pos:end="83:19">hval</name> <operator pos:start="83:21" pos:end="83:21">&amp;</operator> <operator pos:start="83:23" pos:end="83:23">(</operator><name pos:start="83:24" pos:end="83:33">SD_NR_VDIS</name> <operator pos:start="83:35" pos:end="83:35">-</operator> <literal type="number" pos:start="83:37" pos:end="83:37">1</literal><operator pos:start="83:38" pos:end="83:38">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:43"><expr pos:start="87:5" pos:end="87:42"><name pos:start="87:5" pos:end="87:6">fd</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <call pos:start="87:10" pos:end="87:42"><name pos:start="87:10" pos:end="87:24">connect_to_sdog</name><argument_list pos:start="87:25" pos:end="87:42">(<argument pos:start="87:26" pos:end="87:32"><expr pos:start="87:26" pos:end="87:32"><name pos:start="87:26" pos:end="87:32"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:32">addr</name></name></expr></argument>, <argument pos:start="87:35" pos:end="87:41"><expr pos:start="87:35" pos:end="87:41"><name pos:start="87:35" pos:end="87:41"><name pos:start="87:35" pos:end="87:35">s</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:41">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:15">(<expr pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:10">fd</name> <operator pos:start="89:12" pos:end="89:12">&lt;</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>)</condition> <block pos:start="89:17" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:17">

        <expr_stmt pos:start="91:9" pos:end="91:42"><expr pos:start="91:9" pos:end="91:41"><call pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:20">error_report</name><argument_list pos:start="91:21" pos:end="91:41">(<argument pos:start="91:22" pos:end="91:40"><expr pos:start="91:22" pos:end="91:40"><literal type="string" pos:start="91:22" pos:end="91:40">"failed to connect"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:17"><expr pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <name pos:start="93:15" pos:end="93:16">fd</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:17">goto <name pos:start="95:14" pos:end="95:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="101:5" pos:end="155:5">for <control pos:start="101:9" pos:end="101:66">(<init pos:start="101:10" pos:end="101:24"><expr pos:start="101:10" pos:end="101:23"><name pos:start="101:10" pos:end="101:12">vid</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:23">start_nr</name></expr>;</init> <condition pos:start="101:26" pos:end="101:36"><expr pos:start="101:26" pos:end="101:35"><name pos:start="101:26" pos:end="101:30">found</name> <operator pos:start="101:32" pos:end="101:32">&lt;</operator> <name pos:start="101:34" pos:end="101:35">nr</name></expr>;</condition> <incr pos:start="101:38" pos:end="101:65"><expr pos:start="101:38" pos:end="101:65"><name pos:start="101:38" pos:end="101:40">vid</name> <operator pos:start="101:42" pos:end="101:42">=</operator> <operator pos:start="101:44" pos:end="101:44">(</operator><name pos:start="101:45" pos:end="101:47">vid</name> <operator pos:start="101:49" pos:end="101:49">+</operator> <literal type="number" pos:start="101:51" pos:end="101:51">1</literal><operator pos:start="101:52" pos:end="101:52">)</operator> <operator pos:start="101:54" pos:end="101:54">%</operator> <name pos:start="101:56" pos:end="101:65">SD_NR_VDIS</name></expr></incr>)</control> <block pos:start="101:68" pos:end="155:5">{<block_content pos:start="103:9" pos:end="153:9">

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:38">(<expr pos:start="103:13" pos:end="103:37"><operator pos:start="103:13" pos:end="103:13">!</operator><call pos:start="103:14" pos:end="103:37"><name pos:start="103:14" pos:end="103:21">test_bit</name><argument_list pos:start="103:22" pos:end="103:37">(<argument pos:start="103:23" pos:end="103:25"><expr pos:start="103:23" pos:end="103:25"><name pos:start="103:23" pos:end="103:25">vid</name></expr></argument>, <argument pos:start="103:28" pos:end="103:36"><expr pos:start="103:28" pos:end="103:36"><name pos:start="103:28" pos:end="103:36">vdi_inuse</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:40" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:18">

            <break pos:start="105:13" pos:end="105:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="111:9" pos:end="111:49">/* we don't need to read entire object */</comment>

        <expr_stmt pos:start="113:9" pos:end="117:44"><expr pos:start="113:9" pos:end="117:43"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="117:43"><name pos:start="113:15" pos:end="113:25">read_object</name><argument_list pos:start="113:26" pos:end="117:43">(<argument pos:start="113:27" pos:end="113:28"><expr pos:start="113:27" pos:end="113:28"><name pos:start="113:27" pos:end="113:28">fd</name></expr></argument>, <argument pos:start="113:31" pos:end="113:44"><expr pos:start="113:31" pos:end="113:44"><operator pos:start="113:31" pos:end="113:31">(</operator><name pos:start="113:32" pos:end="113:35">char</name> <operator pos:start="113:37" pos:end="113:37">*</operator><operator pos:start="113:38" pos:end="113:38">)</operator><operator pos:start="113:39" pos:end="113:39">&amp;</operator><name pos:start="113:40" pos:end="113:44">inode</name></expr></argument>, <argument pos:start="113:47" pos:end="113:65"><expr pos:start="113:47" pos:end="113:65"><call pos:start="113:47" pos:end="113:65"><name pos:start="113:47" pos:end="113:60">vid_to_vdi_oid</name><argument_list pos:start="113:61" pos:end="113:65">(<argument pos:start="113:62" pos:end="113:64"><expr pos:start="113:62" pos:end="113:64"><name pos:start="113:62" pos:end="113:64">vid</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr></argument>, <argument pos:start="115:30" pos:end="115:70"><expr pos:start="115:30" pos:end="115:70"><name pos:start="115:30" pos:end="115:42">SD_INODE_SIZE</name> <operator pos:start="115:44" pos:end="115:44">-</operator> <sizeof pos:start="115:46" pos:end="115:70">sizeof<argument_list pos:start="115:52" pos:end="115:70">(<argument pos:start="115:53" pos:end="115:69"><expr pos:start="115:53" pos:end="115:69"><name pos:start="115:53" pos:end="115:69"><name pos:start="115:53" pos:end="115:57">inode</name><operator pos:start="115:58" pos:end="115:58">.</operator><name pos:start="115:59" pos:end="115:69">data_vdi_id</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="115:73" pos:end="115:73"><expr pos:start="115:73" pos:end="115:73"><literal type="number" pos:start="115:73" pos:end="115:73">0</literal></expr></argument>,

                          <argument pos:start="117:27" pos:end="117:42"><expr pos:start="117:27" pos:end="117:42"><name pos:start="117:27" pos:end="117:42"><name pos:start="117:27" pos:end="117:27">s</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:42">cache_enabled</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:16">(<expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">ret</name></expr>)</condition> <block pos:start="121:18" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:21">

            <continue pos:start="123:13" pos:end="123:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="129:9" pos:end="153:9"><if pos:start="129:9" pos:end="153:9">if <condition pos:start="129:12" pos:end="129:64">(<expr pos:start="129:13" pos:end="129:63"><operator pos:start="129:13" pos:end="129:13">!</operator><call pos:start="129:14" pos:end="129:40"><name pos:start="129:14" pos:end="129:19">strcmp</name><argument_list pos:start="129:20" pos:end="129:40">(<argument pos:start="129:21" pos:end="129:30"><expr pos:start="129:21" pos:end="129:30"><name pos:start="129:21" pos:end="129:30"><name pos:start="129:21" pos:end="129:25">inode</name><operator pos:start="129:26" pos:end="129:26">.</operator><name pos:start="129:27" pos:end="129:30">name</name></name></expr></argument>, <argument pos:start="129:33" pos:end="129:39"><expr pos:start="129:33" pos:end="129:39"><name pos:start="129:33" pos:end="129:39"><name pos:start="129:33" pos:end="129:33">s</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:39">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="129:42" pos:end="129:43">&amp;&amp;</operator> <call pos:start="129:45" pos:end="129:63"><name pos:start="129:45" pos:end="129:55">is_snapshot</name><argument_list pos:start="129:56" pos:end="129:63">(<argument pos:start="129:57" pos:end="129:62"><expr pos:start="129:57" pos:end="129:62"><operator pos:start="129:57" pos:end="129:57">&amp;</operator><name pos:start="129:58" pos:end="129:62">inode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:66" pos:end="153:9">{<block_content pos:start="131:13" pos:end="151:20">

            <expr_stmt pos:start="131:13" pos:end="131:60"><expr pos:start="131:13" pos:end="131:59"><name pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:18">sn_tab</name><index pos:start="131:19" pos:end="131:25">[<expr pos:start="131:20" pos:end="131:24"><name pos:start="131:20" pos:end="131:24">found</name></expr>]</index></name><operator pos:start="131:26" pos:end="131:26">.</operator><name pos:start="131:27" pos:end="131:34">date_sec</name> <operator pos:start="131:36" pos:end="131:36">=</operator> <name pos:start="131:38" pos:end="131:53"><name pos:start="131:38" pos:end="131:42">inode</name><operator pos:start="131:43" pos:end="131:43">.</operator><name pos:start="131:44" pos:end="131:53">snap_ctime</name></name> <operator pos:start="131:55" pos:end="131:56">&gt;&gt;</operator> <literal type="number" pos:start="131:58" pos:end="131:59">32</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:68"><expr pos:start="133:13" pos:end="133:67"><name pos:start="133:13" pos:end="133:25"><name pos:start="133:13" pos:end="133:18">sn_tab</name><index pos:start="133:19" pos:end="133:25">[<expr pos:start="133:20" pos:end="133:24"><name pos:start="133:20" pos:end="133:24">found</name></expr>]</index></name><operator pos:start="133:26" pos:end="133:26">.</operator><name pos:start="133:27" pos:end="133:35">date_nsec</name> <operator pos:start="133:37" pos:end="133:37">=</operator> <name pos:start="133:39" pos:end="133:54"><name pos:start="133:39" pos:end="133:43">inode</name><operator pos:start="133:44" pos:end="133:44">.</operator><name pos:start="133:45" pos:end="133:54">snap_ctime</name></name> <operator pos:start="133:56" pos:end="133:56">&amp;</operator> <literal type="number" pos:start="133:58" pos:end="133:67">0xffffffff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:62"><expr pos:start="135:13" pos:end="135:61"><name pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:18">sn_tab</name><index pos:start="135:19" pos:end="135:25">[<expr pos:start="135:20" pos:end="135:24"><name pos:start="135:20" pos:end="135:24">found</name></expr>]</index></name><operator pos:start="135:26" pos:end="135:26">.</operator><name pos:start="135:27" pos:end="135:39">vm_state_size</name> <operator pos:start="135:41" pos:end="135:41">=</operator> <name pos:start="135:43" pos:end="135:61"><name pos:start="135:43" pos:end="135:47">inode</name><operator pos:start="135:48" pos:end="135:48">.</operator><name pos:start="135:49" pos:end="135:61">vm_state_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:62"><expr pos:start="137:13" pos:end="137:61"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:18">sn_tab</name><index pos:start="137:19" pos:end="137:25">[<expr pos:start="137:20" pos:end="137:24"><name pos:start="137:20" pos:end="137:24">found</name></expr>]</index></name><operator pos:start="137:26" pos:end="137:26">.</operator><name pos:start="137:27" pos:end="137:39">vm_clock_nsec</name> <operator pos:start="137:41" pos:end="137:41">=</operator> <name pos:start="137:43" pos:end="137:61"><name pos:start="137:43" pos:end="137:47">inode</name><operator pos:start="137:48" pos:end="137:48">.</operator><name pos:start="137:49" pos:end="137:61">vm_clock_nsec</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="141:13" pos:end="143:36"><expr pos:start="141:13" pos:end="143:35"><call pos:start="141:13" pos:end="143:35"><name pos:start="141:13" pos:end="141:20">snprintf</name><argument_list pos:start="141:21" pos:end="143:35">(<argument pos:start="141:22" pos:end="141:41"><expr pos:start="141:22" pos:end="141:41"><name pos:start="141:22" pos:end="141:34"><name pos:start="141:22" pos:end="141:27">sn_tab</name><index pos:start="141:28" pos:end="141:34">[<expr pos:start="141:29" pos:end="141:33"><name pos:start="141:29" pos:end="141:33">found</name></expr>]</index></name><operator pos:start="141:35" pos:end="141:35">.</operator><name pos:start="141:36" pos:end="141:41">id_str</name></expr></argument>, <argument pos:start="141:44" pos:end="141:71"><expr pos:start="141:44" pos:end="141:71"><sizeof pos:start="141:44" pos:end="141:71">sizeof<argument_list pos:start="141:50" pos:end="141:71">(<argument pos:start="141:51" pos:end="141:70"><expr pos:start="141:51" pos:end="141:70"><name pos:start="141:51" pos:end="141:63"><name pos:start="141:51" pos:end="141:56">sn_tab</name><index pos:start="141:57" pos:end="141:63">[<expr pos:start="141:58" pos:end="141:62"><name pos:start="141:58" pos:end="141:62">found</name></expr>]</index></name><operator pos:start="141:64" pos:end="141:64">.</operator><name pos:start="141:65" pos:end="141:70">id_str</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="141:74" pos:end="141:77"><expr pos:start="141:74" pos:end="141:77"><literal type="string" pos:start="141:74" pos:end="141:77">"%u"</literal></expr></argument>,

                     <argument pos:start="143:22" pos:end="143:34"><expr pos:start="143:22" pos:end="143:34"><name pos:start="143:22" pos:end="143:34"><name pos:start="143:22" pos:end="143:26">inode</name><operator pos:start="143:27" pos:end="143:27">.</operator><name pos:start="143:28" pos:end="143:34">snap_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="149:31"><expr pos:start="145:13" pos:end="149:30"><call pos:start="145:13" pos:end="149:30"><name pos:start="145:13" pos:end="145:19">pstrcpy</name><argument_list pos:start="145:20" pos:end="149:30">(<argument pos:start="145:21" pos:end="145:38"><expr pos:start="145:21" pos:end="145:38"><name pos:start="145:21" pos:end="145:33"><name pos:start="145:21" pos:end="145:26">sn_tab</name><index pos:start="145:27" pos:end="145:33">[<expr pos:start="145:28" pos:end="145:32"><name pos:start="145:28" pos:end="145:32">found</name></expr>]</index></name><operator pos:start="145:34" pos:end="145:34">.</operator><name pos:start="145:35" pos:end="145:38">name</name></expr></argument>,

                    <argument pos:start="147:21" pos:end="147:70"><expr pos:start="147:21" pos:end="147:70"><call pos:start="147:21" pos:end="147:70"><name pos:start="147:21" pos:end="147:23">MIN</name><argument_list pos:start="147:24" pos:end="147:70">(<argument pos:start="147:25" pos:end="147:50"><expr pos:start="147:25" pos:end="147:50"><sizeof pos:start="147:25" pos:end="147:50">sizeof<argument_list pos:start="147:31" pos:end="147:50">(<argument pos:start="147:32" pos:end="147:49"><expr pos:start="147:32" pos:end="147:49"><name pos:start="147:32" pos:end="147:44"><name pos:start="147:32" pos:end="147:37">sn_tab</name><index pos:start="147:38" pos:end="147:44">[<expr pos:start="147:39" pos:end="147:43"><name pos:start="147:39" pos:end="147:43">found</name></expr>]</index></name><operator pos:start="147:45" pos:end="147:45">.</operator><name pos:start="147:46" pos:end="147:49">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="147:53" pos:end="147:69"><expr pos:start="147:53" pos:end="147:69"><sizeof pos:start="147:53" pos:end="147:69">sizeof<argument_list pos:start="147:59" pos:end="147:69">(<argument pos:start="147:60" pos:end="147:68"><expr pos:start="147:60" pos:end="147:68"><name pos:start="147:60" pos:end="147:68"><name pos:start="147:60" pos:end="147:64">inode</name><operator pos:start="147:65" pos:end="147:65">.</operator><name pos:start="147:66" pos:end="147:68">tag</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="149:21" pos:end="149:29"><expr pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:29"><name pos:start="149:21" pos:end="149:25">inode</name><operator pos:start="149:26" pos:end="149:26">.</operator><name pos:start="149:27" pos:end="149:29">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:20"><expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:17">found</name><operator pos:start="151:18" pos:end="151:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="159:5" pos:end="159:20"><expr pos:start="159:5" pos:end="159:19"><call pos:start="159:5" pos:end="159:19"><name pos:start="159:5" pos:end="159:15">closesocket</name><argument_list pos:start="159:16" pos:end="159:19">(<argument pos:start="159:17" pos:end="159:18"><expr pos:start="159:17" pos:end="159:18"><name pos:start="159:17" pos:end="159:18">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="161:1" pos:end="161:4"><name pos:start="161:1" pos:end="161:3">out</name>:</label>

    <expr_stmt pos:start="163:5" pos:end="163:22"><expr pos:start="163:5" pos:end="163:21"><operator pos:start="163:5" pos:end="163:5">*</operator><name pos:start="163:6" pos:end="163:12">psn_tab</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <name pos:start="163:16" pos:end="163:21">sn_tab</name></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:22"><expr pos:start="167:5" pos:end="167:21"><call pos:start="167:5" pos:end="167:21"><name pos:start="167:5" pos:end="167:10">g_free</name><argument_list pos:start="167:11" pos:end="167:21">(<argument pos:start="167:12" pos:end="167:20"><expr pos:start="167:12" pos:end="167:20"><name pos:start="167:12" pos:end="167:20">vdi_inuse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="171:5" pos:end="175:5"><if pos:start="171:5" pos:end="175:5">if <condition pos:start="171:8" pos:end="171:16">(<expr pos:start="171:9" pos:end="171:15"><name pos:start="171:9" pos:end="171:11">ret</name> <operator pos:start="171:13" pos:end="171:13">&lt;</operator> <literal type="number" pos:start="171:15" pos:end="171:15">0</literal></expr>)</condition> <block pos:start="171:18" pos:end="175:5">{<block_content pos:start="173:9" pos:end="173:19">

        <return pos:start="173:9" pos:end="173:19">return <expr pos:start="173:16" pos:end="173:18"><name pos:start="173:16" pos:end="173:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="179:5" pos:end="179:17">return <expr pos:start="179:12" pos:end="179:16"><name pos:start="179:12" pos:end="179:16">found</name></expr>;</return>

</block_content>}</block></function>
</unit>
