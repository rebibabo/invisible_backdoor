<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17926.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:21"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">ahci_reset_port</name><parameter_list pos:start="1:28" pos:end="1:51">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:37">AHCIState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">port</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="40:21">{<block_content pos:start="3:5" pos:end="40:21">
    <decl_stmt pos:start="3:5" pos:end="3:34"><decl pos:start="3:5" pos:end="3:33"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">AHCIDevice</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:17">d</name> <init pos:start="3:19" pos:end="3:33">= <expr pos:start="3:21" pos:end="3:33"><operator pos:start="3:21" pos:end="3:21">&amp;</operator><name pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:22">s</name><operator pos:start="3:23" pos:end="3:24">-&gt;</operator><name pos:start="3:25" pos:end="3:27">dev</name><index pos:start="3:28" pos:end="3:33">[<expr pos:start="3:29" pos:end="3:32"><name pos:start="3:29" pos:end="3:32">port</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:37"><decl pos:start="4:5" pos:end="4:36"><type pos:start="4:5" pos:end="4:18"><name pos:start="4:5" pos:end="4:16">AHCIPortRegs</name> <modifier pos:start="4:18" pos:end="4:18">*</modifier></type><name pos:start="4:19" pos:end="4:20">pr</name> <init pos:start="4:22" pos:end="4:36">= <expr pos:start="4:24" pos:end="4:36"><operator pos:start="4:24" pos:end="4:24">&amp;</operator><name pos:start="4:25" pos:end="4:36"><name pos:start="4:25" pos:end="4:25">d</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:36">port_regs</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:23">ide_state</name> <init pos:start="5:25" pos:end="5:41">= <expr pos:start="5:27" pos:end="5:41"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:28">d</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:34">port</name><operator pos:start="5:35" pos:end="5:35">.</operator><name pos:start="5:36" pos:end="5:38">ifs</name><index pos:start="5:39" pos:end="5:41">[<expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:10"><decl pos:start="6:5" pos:end="6:9"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:34"><expr pos:start="7:5" pos:end="7:33"><call pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:11">DPRINTF</name><argument_list pos:start="7:12" pos:end="7:33">(<argument pos:start="7:13" pos:end="7:16"><expr pos:start="7:13" pos:end="7:16"><name pos:start="7:13" pos:end="7:16">port</name></expr></argument>, <argument pos:start="7:19" pos:end="7:32"><expr pos:start="7:19" pos:end="7:32"><literal type="string" pos:start="7:19" pos:end="7:32">"reset port\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:28"><expr pos:start="8:5" pos:end="8:27"><call pos:start="8:5" pos:end="8:27"><name pos:start="8:5" pos:end="8:17">ide_bus_reset</name><argument_list pos:start="8:18" pos:end="8:27">(<argument pos:start="8:19" pos:end="8:26"><expr pos:start="8:19" pos:end="8:26"><operator pos:start="8:19" pos:end="8:19">&amp;</operator><name pos:start="8:20" pos:end="8:26"><name pos:start="8:20" pos:end="8:20">d</name><operator pos:start="8:21" pos:end="8:22">-&gt;</operator><name pos:start="8:23" pos:end="8:26">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:42"><expr pos:start="9:5" pos:end="9:41"><name pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:13">ide_state</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:25">ncq_queues</name></name> <operator pos:start="9:27" pos:end="9:27">=</operator> <name pos:start="9:29" pos:end="9:41">AHCI_MAX_CMDS</name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:21"><expr pos:start="10:5" pos:end="10:20"><name pos:start="10:5" pos:end="10:16"><name pos:start="10:5" pos:end="10:6">pr</name><operator pos:start="10:7" pos:end="10:8">-&gt;</operator><name pos:start="10:9" pos:end="10:16">scr_stat</name></name> <operator pos:start="10:18" pos:end="10:18">=</operator> <literal type="number" pos:start="10:20" pos:end="10:20">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:20"><expr pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:6">pr</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:15">scr_err</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:20"><expr pos:start="12:5" pos:end="12:19"><name pos:start="12:5" pos:end="12:15"><name pos:start="12:5" pos:end="12:6">pr</name><operator pos:start="12:7" pos:end="12:8">-&gt;</operator><name pos:start="12:9" pos:end="12:15">scr_act</name></name> <operator pos:start="12:17" pos:end="12:17">=</operator> <literal type="number" pos:start="12:19" pos:end="12:19">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:5">d</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">busy_slot</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <operator pos:start="13:20" pos:end="13:20">-</operator><literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:25"><expr pos:start="14:5" pos:end="14:24"><name pos:start="14:5" pos:end="14:20"><name pos:start="14:5" pos:end="14:5">d</name><operator pos:start="14:6" pos:end="14:7">-&gt;</operator><name pos:start="14:8" pos:end="14:20">init_d2h_sent</name></name> <operator pos:start="14:22" pos:end="14:22">=</operator> <literal type="number" pos:start="14:24" pos:end="14:24">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:13">ide_state</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:23">dev</name><index pos:start="15:24" pos:end="15:29">[<expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">port</name></expr>]</index></name><operator pos:start="15:30" pos:end="15:30">.</operator><name pos:start="15:31" pos:end="15:41"><name pos:start="15:31" pos:end="15:34">port</name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:38">ifs</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="40:21"><if pos:start="16:5" pos:end="40:21">if <condition pos:start="16:8" pos:end="16:23">(<expr pos:start="16:9" pos:end="16:22"><operator pos:start="16:9" pos:end="16:9">!</operator><name pos:start="16:10" pos:end="16:22"><name pos:start="16:10" pos:end="16:18">ide_state</name><operator pos:start="16:19" pos:end="16:20">-&gt;</operator><name pos:start="16:21" pos:end="16:22">bs</name></name></expr>)</condition> <block pos:start="16:25" pos:end="40:21">{<block_content pos:start="17:9" pos:end="40:21">
        <return pos:start="17:9" pos:end="17:15">return;</return>
    <comment type="block" pos:start="18:5" pos:end="18:25">/* reset ncq queue */</comment>
    <for pos:start="19:5" pos:end="40:21">for <control pos:start="19:9" pos:end="19:39">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:34"><expr pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:33">AHCI_MAX_CMDS</name></expr>;</condition> <incr pos:start="19:36" pos:end="19:38"><expr pos:start="19:36" pos:end="19:38"><name pos:start="19:36" pos:end="19:36">i</name><operator pos:start="19:37" pos:end="19:38">++</operator></expr></incr>)</control> <block pos:start="19:41" pos:end="40:21">{<block_content pos:start="20:9" pos:end="40:21">
        <decl_stmt pos:start="20:9" pos:end="20:61"><decl pos:start="20:9" pos:end="20:60"><type pos:start="20:9" pos:end="20:26"><name pos:start="20:9" pos:end="20:24">NCQTransferState</name> <modifier pos:start="20:26" pos:end="20:26">*</modifier></type><name pos:start="20:27" pos:end="20:33">ncq_tfs</name> <init pos:start="20:35" pos:end="20:60">= <expr pos:start="20:37" pos:end="20:60"><operator pos:start="20:37" pos:end="20:37">&amp;</operator><name pos:start="20:38" pos:end="20:49"><name pos:start="20:38" pos:end="20:38">s</name><operator pos:start="20:39" pos:end="20:40">-&gt;</operator><name pos:start="20:41" pos:end="20:43">dev</name><index pos:start="20:44" pos:end="20:49">[<expr pos:start="20:45" pos:end="20:48"><name pos:start="20:45" pos:end="20:48">port</name></expr>]</index></name><operator pos:start="20:50" pos:end="20:50">.</operator><name pos:start="20:51" pos:end="20:60"><name pos:start="20:51" pos:end="20:57">ncq_tfs</name><index pos:start="20:58" pos:end="20:60">[<expr pos:start="20:59" pos:end="20:59"><name pos:start="20:59" pos:end="20:59">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="21:9" pos:end="40:21"><if pos:start="21:9" pos:end="40:21">if <condition pos:start="21:12" pos:end="21:27">(<expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:19">ncq_tfs</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:26">aiocb</name></name></expr>)</condition> <block pos:start="21:29" pos:end="40:21">{<block_content pos:start="22:13" pos:end="40:21">
            <expr_stmt pos:start="22:13" pos:end="22:44"><expr pos:start="22:13" pos:end="22:43"><call pos:start="22:13" pos:end="22:43"><name pos:start="22:13" pos:end="22:27">bdrv_aio_cancel</name><argument_list pos:start="22:28" pos:end="22:43">(<argument pos:start="22:29" pos:end="22:42"><expr pos:start="22:29" pos:end="22:42"><name pos:start="22:29" pos:end="22:42"><name pos:start="22:29" pos:end="22:35">ncq_tfs</name><operator pos:start="22:36" pos:end="22:37">-&gt;</operator><name pos:start="22:38" pos:end="22:42">aiocb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><name pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:19">ncq_tfs</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:26">aiocb</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <name pos:start="23:30" pos:end="23:33">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:46"><expr pos:start="24:9" pos:end="24:45"><call pos:start="24:9" pos:end="24:45"><name pos:start="24:9" pos:end="24:27">qemu_sglist_destroy</name><argument_list pos:start="24:28" pos:end="24:45">(<argument pos:start="24:29" pos:end="24:44"><expr pos:start="24:29" pos:end="24:44"><operator pos:start="24:29" pos:end="24:29">&amp;</operator><name pos:start="24:30" pos:end="24:44"><name pos:start="24:30" pos:end="24:36">ncq_tfs</name><operator pos:start="24:37" pos:end="24:38">-&gt;</operator><name pos:start="24:39" pos:end="24:44">sglist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:15">ncq_tfs</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">used</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:40"><expr pos:start="26:5" pos:end="26:39"><name pos:start="26:5" pos:end="26:16"><name pos:start="26:5" pos:end="26:5">s</name><operator pos:start="26:6" pos:end="26:7">-&gt;</operator><name pos:start="26:8" pos:end="26:10">dev</name><index pos:start="26:11" pos:end="26:16">[<expr pos:start="26:12" pos:end="26:15"><name pos:start="26:12" pos:end="26:15">port</name></expr>]</index></name><operator pos:start="26:17" pos:end="26:17">.</operator><name pos:start="26:18" pos:end="26:27">port_state</name> <operator pos:start="26:29" pos:end="26:29">=</operator> <name pos:start="26:31" pos:end="26:39">STATE_RUN</name></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="40:21"><if pos:start="27:5" pos:end="30:5">if <condition pos:start="27:8" pos:end="27:23">(<expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:18">ide_state</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:22">bs</name></name></expr>)</condition> <block pos:start="27:25" pos:end="30:5">{<block_content pos:start="28:9" pos:end="29:51">
        <expr_stmt pos:start="28:9" pos:end="28:39"><expr pos:start="28:9" pos:end="28:38"><name pos:start="28:9" pos:end="28:20"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:14">dev</name><index pos:start="28:15" pos:end="28:20">[<expr pos:start="28:16" pos:end="28:19"><name pos:start="28:16" pos:end="28:19">port</name></expr>]</index></name><operator pos:start="28:21" pos:end="28:21">.</operator><name pos:start="28:22" pos:end="28:34"><name pos:start="28:22" pos:end="28:30">port_regs</name><operator pos:start="28:31" pos:end="28:31">.</operator><name pos:start="28:32" pos:end="28:34">sig</name></name> <operator pos:start="28:36" pos:end="28:36">=</operator> <literal type="number" pos:start="28:38" pos:end="28:38">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17">ide_state</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:25">status</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <name pos:start="29:29" pos:end="29:37">SEEK_STAT</name> <operator pos:start="29:39" pos:end="29:39">|</operator> <name pos:start="29:41" pos:end="29:50">WRERR_STAT</name></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="30:7" pos:end="36:5">else if <condition pos:start="30:15" pos:end="30:47">(<expr pos:start="30:16" pos:end="30:46"><name pos:start="30:16" pos:end="30:36"><name pos:start="30:16" pos:end="30:24">ide_state</name><operator pos:start="30:25" pos:end="30:26">-&gt;</operator><name pos:start="30:27" pos:end="30:36">drive_kind</name></name> <operator pos:start="30:38" pos:end="30:39">==</operator> <name pos:start="30:41" pos:end="30:46">IDE_CD</name></expr>)</condition> <block pos:start="30:49" pos:end="36:5">{<block_content pos:start="31:9" pos:end="35:64">
        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">dev</name><index pos:start="31:15" pos:end="31:20">[<expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">port</name></expr>]</index></name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:30">port_regs</name><operator pos:start="31:31" pos:end="31:31">.</operator><name pos:start="31:32" pos:end="31:34">sig</name></name> <operator pos:start="31:36" pos:end="31:36">=</operator> <name pos:start="31:38" pos:end="31:57">SATA_SIGNATURE_CDROM</name></expr>;</expr_stmt>
        <expr_stmt pos:start="32:9" pos:end="32:31"><expr pos:start="32:9" pos:end="32:30"><name pos:start="32:9" pos:end="32:23"><name pos:start="32:9" pos:end="32:17">ide_state</name><operator pos:start="32:18" pos:end="32:19">-&gt;</operator><name pos:start="32:20" pos:end="32:23">lcyl</name></name> <operator pos:start="32:25" pos:end="32:25">=</operator> <literal type="number" pos:start="32:27" pos:end="32:30">0x14</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:17">ide_state</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:23">hcyl</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:30">0xeb</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:58"><expr pos:start="34:9" pos:end="34:57"><call pos:start="34:9" pos:end="34:57"><name pos:start="34:9" pos:end="34:15">DPRINTF</name><argument_list pos:start="34:16" pos:end="34:57">(<argument pos:start="34:17" pos:end="34:20"><expr pos:start="34:17" pos:end="34:20"><name pos:start="34:17" pos:end="34:20">port</name></expr></argument>, <argument pos:start="34:23" pos:end="34:39"><expr pos:start="34:23" pos:end="34:39"><literal type="string" pos:start="34:23" pos:end="34:39">"set lcyl = %d\n"</literal></expr></argument>, <argument pos:start="34:42" pos:end="34:56"><expr pos:start="34:42" pos:end="34:56"><name pos:start="34:42" pos:end="34:56"><name pos:start="34:42" pos:end="34:50">ide_state</name><operator pos:start="34:51" pos:end="34:52">-&gt;</operator><name pos:start="34:53" pos:end="34:56">lcyl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:17">ide_state</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:25">status</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <name pos:start="35:29" pos:end="35:37">SEEK_STAT</name> <operator pos:start="35:39" pos:end="35:39">|</operator> <name pos:start="35:41" pos:end="35:50">WRERR_STAT</name> <operator pos:start="35:52" pos:end="35:52">|</operator> <name pos:start="35:54" pos:end="35:63">READY_STAT</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="36:7" pos:end="40:21">else <block pos:start="36:12" pos:end="40:21">{<block_content pos:start="37:9" pos:end="40:21">
        <expr_stmt pos:start="37:9" pos:end="37:57"><expr pos:start="37:9" pos:end="37:56"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:14">dev</name><index pos:start="37:15" pos:end="37:20">[<expr pos:start="37:16" pos:end="37:19"><name pos:start="37:16" pos:end="37:19">port</name></expr>]</index></name><operator pos:start="37:21" pos:end="37:21">.</operator><name pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:30">port_regs</name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:34">sig</name></name> <operator pos:start="37:36" pos:end="37:36">=</operator> <name pos:start="37:38" pos:end="37:56">SATA_SIGNATURE_DISK</name></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:51"><expr pos:start="38:9" pos:end="38:50"><name pos:start="38:9" pos:end="38:25"><name pos:start="38:9" pos:end="38:17">ide_state</name><operator pos:start="38:18" pos:end="38:19">-&gt;</operator><name pos:start="38:20" pos:end="38:25">status</name></name> <operator pos:start="38:27" pos:end="38:27">=</operator> <name pos:start="38:29" pos:end="38:37">SEEK_STAT</name> <operator pos:start="38:39" pos:end="38:39">|</operator> <name pos:start="38:41" pos:end="38:50">WRERR_STAT</name></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:13">ide_state</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:20">error</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <literal type="number" pos:start="39:24" pos:end="39:24">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:21"><expr pos:start="40:5" pos:end="40:20"><call pos:start="40:5" pos:end="40:20"><name pos:start="40:5" pos:end="40:17">ahci_init_d2h</name><argument_list pos:start="40:18" pos:end="40:20">(<argument pos:start="40:19" pos:end="40:19"><expr pos:start="40:19" pos:end="40:19"><name pos:start="40:19" pos:end="40:19">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
