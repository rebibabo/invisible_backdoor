<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13641.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">handle_http</name><parameter_list pos:start="1:23" pos:end="1:53">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">HTTPContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">c</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:43">long</name></type> <name pos:start="1:45" pos:end="1:52">cur_time</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">len</name></decl>;</decl_stmt>

    

    <switch pos:start="9:5" pos:end="197:5">switch<condition pos:start="9:11" pos:end="9:20">(<expr pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:19"><name pos:start="9:12" pos:end="9:12">c</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:19">state</name></name></expr>)</condition> <block pos:start="9:22" pos:end="197:5">{<block_content pos:start="11:5" pos:end="195:18">

    <case pos:start="11:5" pos:end="11:32">case <expr pos:start="11:10" pos:end="11:31"><name pos:start="11:10" pos:end="11:31">HTTPSTATE_WAIT_REQUEST</name></expr>:</case>

        <comment type="block" pos:start="13:9" pos:end="13:23">/* timeout ? */</comment>

        <if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:40">(<expr pos:start="15:13" pos:end="15:39"><operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:23"><name pos:start="15:14" pos:end="15:14">c</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:23">timeout</name></name> <operator pos:start="15:25" pos:end="15:25">-</operator> <name pos:start="15:27" pos:end="15:34">cur_time</name><operator pos:start="15:35" pos:end="15:35">)</operator> <operator pos:start="15:37" pos:end="15:37">&lt;</operator> <literal type="number" pos:start="15:39" pos:end="15:39">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22">

            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:57">(<expr pos:start="19:13" pos:end="19:56"><name pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:13">c</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:25">poll_entry</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:34">revents</name></name> <operator pos:start="19:36" pos:end="19:36">&amp;</operator> <operator pos:start="19:38" pos:end="19:38">(</operator><name pos:start="19:39" pos:end="19:45">POLLERR</name> <operator pos:start="19:47" pos:end="19:47">|</operator> <name pos:start="19:49" pos:end="19:55">POLLHUP</name><operator pos:start="19:56" pos:end="19:56">)</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="27:9" pos:end="29:21"><if pos:start="27:9" pos:end="29:21">if <condition pos:start="27:12" pos:end="27:47">(<expr pos:start="27:13" pos:end="27:46"><operator pos:start="27:13" pos:end="27:13">!</operator><operator pos:start="27:14" pos:end="27:14">(</operator><name pos:start="27:15" pos:end="27:36"><name pos:start="27:15" pos:end="27:15">c</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:27">poll_entry</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:36">revents</name></name> <operator pos:start="27:38" pos:end="27:38">&amp;</operator> <name pos:start="27:40" pos:end="27:45">POLLIN</name><operator pos:start="27:46" pos:end="27:46">)</operator></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:21"><block_content pos:start="29:13" pos:end="29:21">

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="31:9" pos:end="31:27">/* read the data */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:72"><expr pos:start="33:9" pos:end="33:71"><name pos:start="33:9" pos:end="33:11">len</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:71"><name pos:start="33:15" pos:end="33:18">read</name><argument_list pos:start="33:19" pos:end="33:71">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:20">c</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:24">fd</name></name></expr></argument>, <argument pos:start="33:27" pos:end="33:39"><expr pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:39"><name pos:start="33:27" pos:end="33:27">c</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:39">buffer_ptr</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:70"><expr pos:start="33:42" pos:end="33:70"><name pos:start="33:42" pos:end="33:54"><name pos:start="33:42" pos:end="33:42">c</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:54">buffer_end</name></name> <operator pos:start="33:56" pos:end="33:56">-</operator> <name pos:start="33:58" pos:end="33:70"><name pos:start="33:58" pos:end="33:58">c</name><operator pos:start="33:59" pos:end="33:60">-&gt;</operator><name pos:start="33:61" pos:end="33:70">buffer_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="73:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:20">(<expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr>)</condition> <block pos:start="35:22" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:26">

            <if_stmt pos:start="37:13" pos:end="39:26"><if pos:start="37:13" pos:end="39:26">if <condition pos:start="37:16" pos:end="37:50">(<expr pos:start="37:17" pos:end="37:49"><name pos:start="37:17" pos:end="37:21">errno</name> <operator pos:start="37:23" pos:end="37:24">!=</operator> <name pos:start="37:26" pos:end="37:31">EAGAIN</name> <operator pos:start="37:33" pos:end="37:34">&amp;&amp;</operator> <name pos:start="37:36" pos:end="37:40">errno</name> <operator pos:start="37:42" pos:end="37:43">!=</operator> <name pos:start="37:45" pos:end="37:49">EINTR</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:26"><block_content pos:start="39:17" pos:end="39:26">

                <return pos:start="39:17" pos:end="39:26">return <expr pos:start="39:24" pos:end="39:25"><operator pos:start="39:24" pos:end="39:24">-</operator><literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="45:9">else if <condition pos:start="41:19" pos:end="41:28">(<expr pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:22">len</name> <operator pos:start="41:24" pos:end="41:25">==</operator> <literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>)</condition> <block pos:start="41:30" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:22">

            <return pos:start="43:13" pos:end="43:22">return <expr pos:start="43:20" pos:end="43:21"><operator pos:start="43:20" pos:end="43:20">-</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="73:9">else <block pos:start="45:16" pos:end="73:9">{<block_content pos:start="49:13" pos:end="71:13">

            <comment type="block" pos:start="47:13" pos:end="47:106">/* search for end of request. XXX: not fully correct since garbage could come after the end */</comment>

            <decl_stmt pos:start="49:13" pos:end="49:23"><decl pos:start="49:13" pos:end="49:22"><type pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:17">UINT8</name> <modifier pos:start="49:19" pos:end="49:19">*</modifier></type><name pos:start="49:20" pos:end="49:22">ptr</name></decl>;</decl_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:13">c</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:25">buffer_ptr</name></name> <operator pos:start="51:27" pos:end="51:28">+=</operator> <name pos:start="51:30" pos:end="51:32">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:15">ptr</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:31"><name pos:start="53:19" pos:end="53:19">c</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:31">buffer_ptr</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="71:13"><if pos:start="55:13" pos:end="65:13">if <condition pos:start="55:16" pos:end="57:72">(<expr pos:start="55:17" pos:end="57:71"><operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:20">ptr</name> <operator pos:start="55:22" pos:end="55:23">&gt;=</operator> <name pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:25">c</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:33">buffer</name></name> <operator pos:start="55:35" pos:end="55:35">+</operator> <literal type="number" pos:start="55:37" pos:end="55:37">2</literal> <operator pos:start="55:39" pos:end="55:40">&amp;&amp;</operator> <operator pos:start="55:42" pos:end="55:42">!</operator><call pos:start="55:43" pos:end="55:66"><name pos:start="55:43" pos:end="55:48">memcmp</name><argument_list pos:start="55:49" pos:end="55:66">(<argument pos:start="55:50" pos:end="55:54"><expr pos:start="55:50" pos:end="55:54"><name pos:start="55:50" pos:end="55:52">ptr</name><operator pos:start="55:53" pos:end="55:53">-</operator><literal type="number" pos:start="55:54" pos:end="55:54">2</literal></expr></argument>, <argument pos:start="55:57" pos:end="55:62"><expr pos:start="55:57" pos:end="55:62"><literal type="string" pos:start="55:57" pos:end="55:62">"\n\n"</literal></expr></argument>, <argument pos:start="55:65" pos:end="55:65"><expr pos:start="55:65" pos:end="55:65"><literal type="number" pos:start="55:65" pos:end="55:65">2</literal></expr></argument>)</argument_list></call><operator pos:start="55:67" pos:end="55:67">)</operator> <operator pos:start="55:69" pos:end="55:70">||</operator>

                <operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:20">ptr</name> <operator pos:start="57:22" pos:end="57:23">&gt;=</operator> <name pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:25">c</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:33">buffer</name></name> <operator pos:start="57:35" pos:end="57:35">+</operator> <literal type="number" pos:start="57:37" pos:end="57:37">4</literal> <operator pos:start="57:39" pos:end="57:40">&amp;&amp;</operator> <operator pos:start="57:42" pos:end="57:42">!</operator><call pos:start="57:43" pos:end="57:70"><name pos:start="57:43" pos:end="57:48">memcmp</name><argument_list pos:start="57:49" pos:end="57:70">(<argument pos:start="57:50" pos:end="57:54"><expr pos:start="57:50" pos:end="57:54"><name pos:start="57:50" pos:end="57:52">ptr</name><operator pos:start="57:53" pos:end="57:53">-</operator><literal type="number" pos:start="57:54" pos:end="57:54">4</literal></expr></argument>, <argument pos:start="57:57" pos:end="57:66"><expr pos:start="57:57" pos:end="57:66"><literal type="string" pos:start="57:57" pos:end="57:66">"\r\n\r\n"</literal></expr></argument>, <argument pos:start="57:69" pos:end="57:69"><expr pos:start="57:69" pos:end="57:69"><literal type="number" pos:start="57:69" pos:end="57:69">4</literal></expr></argument>)</argument_list></call><operator pos:start="57:71" pos:end="57:71">)</operator></expr>)</condition> <block pos:start="57:74" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:30">

                <comment type="block" pos:start="59:17" pos:end="59:56">/* request found : parse it and reply */</comment>

                <if_stmt pos:start="61:17" pos:end="63:30"><if pos:start="61:17" pos:end="63:30">if <condition pos:start="61:20" pos:end="61:46">(<expr pos:start="61:21" pos:end="61:45"><call pos:start="61:21" pos:end="61:41"><name pos:start="61:21" pos:end="61:38">http_parse_request</name><argument_list pos:start="61:39" pos:end="61:41">(<argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">c</name></expr></argument>)</argument_list></call> <operator pos:start="61:43" pos:end="61:43">&lt;</operator> <literal type="number" pos:start="61:45" pos:end="61:45">0</literal></expr>)</condition><block type="pseudo" pos:start="63:21" pos:end="63:30"><block_content pos:start="63:21" pos:end="63:30">

                    <return pos:start="63:21" pos:end="63:30">return <expr pos:start="63:28" pos:end="63:29"><operator pos:start="63:28" pos:end="63:28">-</operator><literal type="number" pos:start="63:29" pos:end="63:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="65:15" pos:end="71:13">else if <condition pos:start="65:23" pos:end="65:44">(<expr pos:start="65:24" pos:end="65:43"><name pos:start="65:24" pos:end="65:26">ptr</name> <operator pos:start="65:28" pos:end="65:29">&gt;=</operator> <name pos:start="65:31" pos:end="65:43"><name pos:start="65:31" pos:end="65:31">c</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:43">buffer_end</name></name></expr>)</condition> <block pos:start="65:46" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:26">

                <comment type="block" pos:start="67:17" pos:end="67:58">/* request too long: cannot do anything */</comment>

                <return pos:start="69:17" pos:end="69:26">return <expr pos:start="69:24" pos:end="69:25"><operator pos:start="69:24" pos:end="69:24">-</operator><literal type="number" pos:start="69:25" pos:end="69:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>



    <case pos:start="79:5" pos:end="79:31">case <expr pos:start="79:10" pos:end="79:30"><name pos:start="79:10" pos:end="79:30">HTTPSTATE_SEND_HEADER</name></expr>:</case>

        <if_stmt pos:start="81:9" pos:end="83:22"><if pos:start="81:9" pos:end="83:22">if <condition pos:start="81:12" pos:end="81:57">(<expr pos:start="81:13" pos:end="81:56"><name pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:13">c</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:25">poll_entry</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:34">revents</name></name> <operator pos:start="81:36" pos:end="81:36">&amp;</operator> <operator pos:start="81:38" pos:end="81:38">(</operator><name pos:start="81:39" pos:end="81:45">POLLERR</name> <operator pos:start="81:47" pos:end="81:47">|</operator> <name pos:start="81:49" pos:end="81:55">POLLHUP</name><operator pos:start="81:56" pos:end="81:56">)</operator></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:22"><block_content pos:start="83:13" pos:end="83:22">

            <return pos:start="83:13" pos:end="83:22">return <expr pos:start="83:20" pos:end="83:21"><operator pos:start="83:20" pos:end="83:20">-</operator><literal type="number" pos:start="83:21" pos:end="83:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="87:9" pos:end="87:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="89:9" pos:end="91:21"><if pos:start="89:9" pos:end="91:21">if <condition pos:start="89:12" pos:end="89:48">(<expr pos:start="89:13" pos:end="89:47"><operator pos:start="89:13" pos:end="89:13">!</operator><operator pos:start="89:14" pos:end="89:14">(</operator><name pos:start="89:15" pos:end="89:36"><name pos:start="89:15" pos:end="89:15">c</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:27">poll_entry</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:36">revents</name></name> <operator pos:start="89:38" pos:end="89:38">&amp;</operator> <name pos:start="89:40" pos:end="89:46">POLLOUT</name><operator pos:start="89:47" pos:end="89:47">)</operator></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:21"><block_content pos:start="91:13" pos:end="91:21">

            <return pos:start="91:13" pos:end="91:21">return <expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:73"><expr pos:start="93:9" pos:end="93:72"><name pos:start="93:9" pos:end="93:11">len</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:72"><name pos:start="93:15" pos:end="93:19">write</name><argument_list pos:start="93:20" pos:end="93:72">(<argument pos:start="93:21" pos:end="93:25"><expr pos:start="93:21" pos:end="93:25"><name pos:start="93:21" pos:end="93:25"><name pos:start="93:21" pos:end="93:21">c</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:25">fd</name></name></expr></argument>, <argument pos:start="93:28" pos:end="93:40"><expr pos:start="93:28" pos:end="93:40"><name pos:start="93:28" pos:end="93:40"><name pos:start="93:28" pos:end="93:28">c</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:40">buffer_ptr</name></name></expr></argument>, <argument pos:start="93:43" pos:end="93:71"><expr pos:start="93:43" pos:end="93:71"><name pos:start="93:43" pos:end="93:55"><name pos:start="93:43" pos:end="93:43">c</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:55">buffer_end</name></name> <operator pos:start="93:57" pos:end="93:57">-</operator> <name pos:start="93:59" pos:end="93:71"><name pos:start="93:59" pos:end="93:59">c</name><operator pos:start="93:60" pos:end="93:61">-&gt;</operator><name pos:start="93:62" pos:end="93:71">buffer_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="131:9"><if pos:start="95:9" pos:end="105:9">if <condition pos:start="95:12" pos:end="95:20">(<expr pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:15">len</name> <operator pos:start="95:17" pos:end="95:17">&lt;</operator> <literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>)</condition> <block pos:start="95:22" pos:end="105:9">{<block_content pos:start="97:13" pos:end="103:13">

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:50">(<expr pos:start="97:17" pos:end="97:49"><name pos:start="97:17" pos:end="97:21">errno</name> <operator pos:start="97:23" pos:end="97:24">!=</operator> <name pos:start="97:26" pos:end="97:31">EAGAIN</name> <operator pos:start="97:33" pos:end="97:34">&amp;&amp;</operator> <name pos:start="97:36" pos:end="97:40">errno</name> <operator pos:start="97:42" pos:end="97:43">!=</operator> <name pos:start="97:45" pos:end="97:49">EINTR</name></expr>)</condition> <block pos:start="97:52" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:26">

                <comment type="block" pos:start="99:17" pos:end="99:46">/* error : close connection */</comment>

                <return pos:start="101:17" pos:end="101:26">return <expr pos:start="101:24" pos:end="101:25"><operator pos:start="101:24" pos:end="101:24">-</operator><literal type="number" pos:start="101:25" pos:end="101:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="131:9">else <block pos:start="105:16" pos:end="131:9">{<block_content pos:start="107:13" pos:end="129:13">

            <expr_stmt pos:start="107:13" pos:end="107:33"><expr pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:13">c</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:25">buffer_ptr</name></name> <operator pos:start="107:27" pos:end="107:28">+=</operator> <name pos:start="107:30" pos:end="107:32">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="109:13" pos:end="111:47"><if pos:start="109:13" pos:end="111:47">if <condition pos:start="109:16" pos:end="109:26">(<expr pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:17">c</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:25">stream</name></name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:47"><block_content pos:start="111:17" pos:end="111:47">

                <expr_stmt pos:start="111:17" pos:end="111:47"><expr pos:start="111:17" pos:end="111:46"><name pos:start="111:17" pos:end="111:39"><name pos:start="111:17" pos:end="111:17">c</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:25">stream</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:39">bytes_served</name></name> <operator pos:start="111:41" pos:end="111:42">+=</operator> <name pos:start="111:44" pos:end="111:46">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:33"><expr pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:13">c</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:25">data_count</name></name> <operator pos:start="113:27" pos:end="113:28">+=</operator> <name pos:start="113:30" pos:end="113:32">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="129:13"><if pos:start="115:13" pos:end="129:13">if <condition pos:start="115:16" pos:end="115:47">(<expr pos:start="115:17" pos:end="115:46"><name pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:17">c</name><operator pos:start="115:18" pos:end="115:19">-&gt;</operator><name pos:start="115:20" pos:end="115:29">buffer_ptr</name></name> <operator pos:start="115:31" pos:end="115:32">&gt;=</operator> <name pos:start="115:34" pos:end="115:46"><name pos:start="115:34" pos:end="115:34">c</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:46">buffer_end</name></name></expr>)</condition> <block pos:start="115:49" pos:end="129:13">{<block_content pos:start="119:17" pos:end="127:58">

                <comment type="block" pos:start="117:17" pos:end="117:36">/* if error, exit */</comment>

                <if_stmt pos:start="119:17" pos:end="121:30"><if pos:start="119:17" pos:end="121:30">if <condition pos:start="119:20" pos:end="119:34">(<expr pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:21">c</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:33">http_error</name></name></expr>)</condition><block type="pseudo" pos:start="121:21" pos:end="121:30"><block_content pos:start="121:21" pos:end="121:30">

                    <return pos:start="121:21" pos:end="121:30">return <expr pos:start="121:28" pos:end="121:29"><operator pos:start="121:28" pos:end="121:28">-</operator><literal type="number" pos:start="121:29" pos:end="121:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <comment type="block" pos:start="123:17" pos:end="123:82">/* all the buffer was send : synchronize to the incoming stream */</comment>

                <expr_stmt pos:start="125:17" pos:end="125:54"><expr pos:start="125:17" pos:end="125:53"><name pos:start="125:17" pos:end="125:24"><name pos:start="125:17" pos:end="125:17">c</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:24">state</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:53">HTTPSTATE_SEND_DATA_HEADER</name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:58"><expr pos:start="127:17" pos:end="127:57"><name pos:start="127:17" pos:end="127:29"><name pos:start="127:17" pos:end="127:17">c</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:29">buffer_ptr</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:45"><name pos:start="127:33" pos:end="127:33">c</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:45">buffer_end</name></name> <operator pos:start="127:47" pos:end="127:47">=</operator> <name pos:start="127:49" pos:end="127:57"><name pos:start="127:49" pos:end="127:49">c</name><operator pos:start="127:50" pos:end="127:51">-&gt;</operator><name pos:start="127:52" pos:end="127:57">buffer</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>



    <case pos:start="137:5" pos:end="137:29">case <expr pos:start="137:10" pos:end="137:28"><name pos:start="137:10" pos:end="137:28">HTTPSTATE_SEND_DATA</name></expr>:</case>

    <case pos:start="139:5" pos:end="139:36">case <expr pos:start="139:10" pos:end="139:35"><name pos:start="139:10" pos:end="139:35">HTTPSTATE_SEND_DATA_HEADER</name></expr>:</case>

    <case pos:start="141:5" pos:end="141:37">case <expr pos:start="141:10" pos:end="141:36"><name pos:start="141:10" pos:end="141:36">HTTPSTATE_SEND_DATA_TRAILER</name></expr>:</case>

        <comment type="block" pos:start="143:9" pos:end="143:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="145:9" pos:end="147:22"><if pos:start="145:9" pos:end="147:22">if <condition pos:start="145:12" pos:end="145:57">(<expr pos:start="145:13" pos:end="145:56"><name pos:start="145:13" pos:end="145:34"><name pos:start="145:13" pos:end="145:13">c</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:25">poll_entry</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:34">revents</name></name> <operator pos:start="145:36" pos:end="145:36">&amp;</operator> <operator pos:start="145:38" pos:end="145:38">(</operator><name pos:start="145:39" pos:end="145:45">POLLERR</name> <operator pos:start="145:47" pos:end="145:47">|</operator> <name pos:start="145:49" pos:end="145:55">POLLHUP</name><operator pos:start="145:56" pos:end="145:56">)</operator></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:22"><block_content pos:start="147:13" pos:end="147:22">

            <return pos:start="147:13" pos:end="147:22">return <expr pos:start="147:20" pos:end="147:21"><operator pos:start="147:20" pos:end="147:20">-</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        

        <if_stmt pos:start="151:9" pos:end="153:21"><if pos:start="151:9" pos:end="153:21">if <condition pos:start="151:12" pos:end="151:48">(<expr pos:start="151:13" pos:end="151:47"><operator pos:start="151:13" pos:end="151:13">!</operator><operator pos:start="151:14" pos:end="151:14">(</operator><name pos:start="151:15" pos:end="151:36"><name pos:start="151:15" pos:end="151:15">c</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:27">poll_entry</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:36">revents</name></name> <operator pos:start="151:38" pos:end="151:38">&amp;</operator> <name pos:start="151:40" pos:end="151:46">POLLOUT</name><operator pos:start="151:47" pos:end="151:47">)</operator></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:21"><block_content pos:start="153:13" pos:end="153:21">

            <return pos:start="153:13" pos:end="153:21">return <expr pos:start="153:20" pos:end="153:20"><literal type="number" pos:start="153:20" pos:end="153:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="155:9" pos:end="157:22"><if pos:start="155:9" pos:end="157:22">if <condition pos:start="155:12" pos:end="155:44">(<expr pos:start="155:13" pos:end="155:43"><call pos:start="155:13" pos:end="155:39"><name pos:start="155:13" pos:end="155:26">http_send_data</name><argument_list pos:start="155:27" pos:end="155:39">(<argument pos:start="155:28" pos:end="155:28"><expr pos:start="155:28" pos:end="155:28"><name pos:start="155:28" pos:end="155:28">c</name></expr></argument>, <argument pos:start="155:31" pos:end="155:38"><expr pos:start="155:31" pos:end="155:38"><name pos:start="155:31" pos:end="155:38">cur_time</name></expr></argument>)</argument_list></call> <operator pos:start="155:41" pos:end="155:41">&lt;</operator> <literal type="number" pos:start="155:43" pos:end="155:43">0</literal></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:22"><block_content pos:start="157:13" pos:end="157:22">

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:32">case <expr pos:start="161:10" pos:end="161:31"><name pos:start="161:10" pos:end="161:31">HTTPSTATE_RECEIVE_DATA</name></expr>:</case>

        <comment type="block" pos:start="163:9" pos:end="163:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="165:9" pos:end="167:22"><if pos:start="165:9" pos:end="167:22">if <condition pos:start="165:12" pos:end="165:57">(<expr pos:start="165:13" pos:end="165:56"><name pos:start="165:13" pos:end="165:34"><name pos:start="165:13" pos:end="165:13">c</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:25">poll_entry</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:34">revents</name></name> <operator pos:start="165:36" pos:end="165:36">&amp;</operator> <operator pos:start="165:38" pos:end="165:38">(</operator><name pos:start="165:39" pos:end="165:45">POLLERR</name> <operator pos:start="165:47" pos:end="165:47">|</operator> <name pos:start="165:49" pos:end="165:55">POLLHUP</name><operator pos:start="165:56" pos:end="165:56">)</operator></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:22"><block_content pos:start="167:13" pos:end="167:22">

            <return pos:start="167:13" pos:end="167:22">return <expr pos:start="167:20" pos:end="167:21"><operator pos:start="167:20" pos:end="167:20">-</operator><literal type="number" pos:start="167:21" pos:end="167:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="171:21"><if pos:start="169:9" pos:end="171:21">if <condition pos:start="169:12" pos:end="169:47">(<expr pos:start="169:13" pos:end="169:46"><operator pos:start="169:13" pos:end="169:13">!</operator><operator pos:start="169:14" pos:end="169:14">(</operator><name pos:start="169:15" pos:end="169:36"><name pos:start="169:15" pos:end="169:15">c</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:27">poll_entry</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:36">revents</name></name> <operator pos:start="169:38" pos:end="169:38">&amp;</operator> <name pos:start="169:40" pos:end="169:45">POLLIN</name><operator pos:start="169:46" pos:end="169:46">)</operator></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:21"><block_content pos:start="171:13" pos:end="171:21">

            <return pos:start="171:13" pos:end="171:21">return <expr pos:start="171:20" pos:end="171:20"><literal type="number" pos:start="171:20" pos:end="171:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="173:9" pos:end="175:22"><if pos:start="173:9" pos:end="175:22">if <condition pos:start="173:12" pos:end="173:37">(<expr pos:start="173:13" pos:end="173:36"><call pos:start="173:13" pos:end="173:32"><name pos:start="173:13" pos:end="173:29">http_receive_data</name><argument_list pos:start="173:30" pos:end="173:32">(<argument pos:start="173:31" pos:end="173:31"><expr pos:start="173:31" pos:end="173:31"><name pos:start="173:31" pos:end="173:31">c</name></expr></argument>)</argument_list></call> <operator pos:start="173:34" pos:end="173:34">&lt;</operator> <literal type="number" pos:start="173:36" pos:end="173:36">0</literal></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="175:22"><block_content pos:start="175:13" pos:end="175:22">

            <return pos:start="175:13" pos:end="175:22">return <expr pos:start="175:20" pos:end="175:21"><operator pos:start="175:20" pos:end="175:20">-</operator><literal type="number" pos:start="175:21" pos:end="175:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:29">case <expr pos:start="179:10" pos:end="179:28"><name pos:start="179:10" pos:end="179:28">HTTPSTATE_WAIT_FEED</name></expr>:</case>

        <comment type="block" pos:start="181:9" pos:end="181:42">/* no need to read if no events */</comment>

        <if_stmt pos:start="183:9" pos:end="185:22"><if pos:start="183:9" pos:end="185:22">if <condition pos:start="183:12" pos:end="183:66">(<expr pos:start="183:13" pos:end="183:65"><name pos:start="183:13" pos:end="183:34"><name pos:start="183:13" pos:end="183:13">c</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:25">poll_entry</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:34">revents</name></name> <operator pos:start="183:36" pos:end="183:36">&amp;</operator> <operator pos:start="183:38" pos:end="183:38">(</operator><name pos:start="183:39" pos:end="183:44">POLLIN</name> <operator pos:start="183:46" pos:end="183:46">|</operator> <name pos:start="183:48" pos:end="183:54">POLLERR</name> <operator pos:start="183:56" pos:end="183:56">|</operator> <name pos:start="183:58" pos:end="183:64">POLLHUP</name><operator pos:start="183:65" pos:end="183:65">)</operator></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:22"><block_content pos:start="185:13" pos:end="185:22">

            <return pos:start="185:13" pos:end="185:22">return <expr pos:start="185:20" pos:end="185:21"><operator pos:start="185:20" pos:end="185:20">-</operator><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="189:9" pos:end="189:71">/* nothing to do, we'll be waken up by incoming feed packets */</comment>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    <default pos:start="193:5" pos:end="193:12">default:</default>

        <return pos:start="195:9" pos:end="195:18">return <expr pos:start="195:16" pos:end="195:17"><operator pos:start="195:16" pos:end="195:16">-</operator><literal type="number" pos:start="195:17" pos:end="195:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="199:5" pos:end="199:13">return <expr pos:start="199:12" pos:end="199:12"><literal type="number" pos:start="199:12" pos:end="199:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
