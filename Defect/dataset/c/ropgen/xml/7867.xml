<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7867.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:67"><name pos:start="1:1" pos:end="1:29">nvdimm_build_structure_memdev</name><argument_list pos:start="1:30" pos:end="1:67">(<argument pos:start="1:31" pos:end="1:48">GArray *structures</argument>, <argument pos:start="1:51" pos:end="1:66">DeviceState *dev</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:50">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">NvdimmNfitMemDev</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:33">nfit_memdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="9:50"><decl pos:start="7:5" pos:end="9:49"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">addr</name> <init pos:start="7:19" pos:end="9:49">= <expr pos:start="7:21" pos:end="9:49"><call pos:start="7:21" pos:end="9:49"><name pos:start="7:21" pos:end="7:43">object_property_get_int</name><argument_list pos:start="7:44" pos:end="9:49">(<argument pos:start="7:45" pos:end="7:55"><expr pos:start="7:45" pos:end="7:55"><call pos:start="7:45" pos:end="7:55"><name pos:start="7:45" pos:end="7:50">OBJECT</name><argument_list pos:start="7:51" pos:end="7:55">(<argument pos:start="7:52" pos:end="7:54"><expr pos:start="7:52" pos:end="7:54"><name pos:start="7:52" pos:end="7:54">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="7:58" pos:end="7:74"><expr pos:start="7:58" pos:end="7:74"><name pos:start="7:58" pos:end="7:74">PC_DIMM_ADDR_PROP</name></expr></argument>,

                                            <argument pos:start="9:45" pos:end="9:48"><expr pos:start="9:45" pos:end="9:48"><name pos:start="9:45" pos:end="9:48">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:50"><decl pos:start="11:5" pos:end="13:49"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:17">size</name> <init pos:start="11:19" pos:end="13:49">= <expr pos:start="11:21" pos:end="13:49"><call pos:start="11:21" pos:end="13:49"><name pos:start="11:21" pos:end="11:43">object_property_get_int</name><argument_list pos:start="11:44" pos:end="13:49">(<argument pos:start="11:45" pos:end="11:55"><expr pos:start="11:45" pos:end="11:55"><call pos:start="11:45" pos:end="11:55"><name pos:start="11:45" pos:end="11:50">OBJECT</name><argument_list pos:start="11:51" pos:end="11:55">(<argument pos:start="11:52" pos:end="11:54"><expr pos:start="11:52" pos:end="11:54"><name pos:start="11:52" pos:end="11:54">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:58" pos:end="11:74"><expr pos:start="11:58" pos:end="11:74"><name pos:start="11:58" pos:end="11:74">PC_DIMM_SIZE_PROP</name></expr></argument>,

                                            <argument pos:start="13:45" pos:end="13:48"><expr pos:start="13:45" pos:end="13:48"><name pos:start="13:45" pos:end="13:48">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:50"><decl pos:start="15:5" pos:end="17:49"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">slot</name> <init pos:start="15:14" pos:end="17:49">= <expr pos:start="15:16" pos:end="17:49"><call pos:start="15:16" pos:end="17:49"><name pos:start="15:16" pos:end="15:38">object_property_get_int</name><argument_list pos:start="15:39" pos:end="17:49">(<argument pos:start="15:40" pos:end="15:50"><expr pos:start="15:40" pos:end="15:50"><call pos:start="15:40" pos:end="15:50"><name pos:start="15:40" pos:end="15:45">OBJECT</name><argument_list pos:start="15:46" pos:end="15:50">(<argument pos:start="15:47" pos:end="15:49"><expr pos:start="15:47" pos:end="15:49"><name pos:start="15:47" pos:end="15:49">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:53" pos:end="15:69"><expr pos:start="15:53" pos:end="15:69"><name pos:start="15:53" pos:end="15:69">PC_DIMM_SLOT_PROP</name></expr></argument>,

                                            <argument pos:start="17:45" pos:end="17:48"><expr pos:start="17:45" pos:end="17:48"><name pos:start="17:45" pos:end="17:48">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:50"><decl pos:start="19:5" pos:end="19:49"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:19">handle</name> <init pos:start="19:21" pos:end="19:49">= <expr pos:start="19:23" pos:end="19:49"><call pos:start="19:23" pos:end="19:49"><name pos:start="19:23" pos:end="19:43">nvdimm_slot_to_handle</name><argument_list pos:start="19:44" pos:end="19:49">(<argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><name pos:start="19:45" pos:end="19:48">slot</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:67"><expr pos:start="23:5" pos:end="23:66"><name pos:start="23:5" pos:end="23:15">nfit_memdev</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:66"><name pos:start="23:19" pos:end="23:32">acpi_data_push</name><argument_list pos:start="23:33" pos:end="23:66">(<argument pos:start="23:34" pos:end="23:43"><expr pos:start="23:34" pos:end="23:43"><name pos:start="23:34" pos:end="23:43">structures</name></expr></argument>, <argument pos:start="23:46" pos:end="23:65"><expr pos:start="23:46" pos:end="23:65"><sizeof pos:start="23:46" pos:end="23:65">sizeof<argument_list pos:start="23:52" pos:end="23:65">(<argument pos:start="23:53" pos:end="23:64"><expr pos:start="23:53" pos:end="23:64"><operator pos:start="23:53" pos:end="23:53">*</operator><name pos:start="23:54" pos:end="23:64">nfit_memdev</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:64"><expr pos:start="27:5" pos:end="29:63"><name pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:15">nfit_memdev</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:21">type</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="29:63"><name pos:start="27:25" pos:end="27:35">cpu_to_le16</name><argument_list pos:start="27:36" pos:end="29:63">(<argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></argument> <comment type="block" pos:start="27:39" pos:end="29:62">/* Memory Device to System Address

                                         Range Map Structure*/</comment>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:60"><expr pos:start="31:5" pos:end="31:59"><name pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:15">nfit_memdev</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:23">length</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:59"><name pos:start="31:27" pos:end="31:37">cpu_to_le16</name><argument_list pos:start="31:38" pos:end="31:59">(<argument pos:start="31:39" pos:end="31:58"><expr pos:start="31:39" pos:end="31:58"><sizeof pos:start="31:39" pos:end="31:58">sizeof<argument_list pos:start="31:45" pos:end="31:58">(<argument pos:start="31:46" pos:end="31:57"><expr pos:start="31:46" pos:end="31:57"><operator pos:start="31:46" pos:end="31:46">*</operator><name pos:start="31:47" pos:end="31:57">nfit_memdev</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:15">nfit_memdev</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:28">nfit_handle</name></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <call pos:start="33:32" pos:end="33:50"><name pos:start="33:32" pos:end="33:42">cpu_to_le32</name><argument_list pos:start="33:43" pos:end="33:50">(<argument pos:start="33:44" pos:end="33:49"><expr pos:start="33:44" pos:end="33:49"><name pos:start="33:44" pos:end="33:49">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="43:7">/*

     * associate memory device with System Physical Address Range

     * Structure.

     */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:73"><expr pos:start="45:5" pos:end="45:72"><name pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:15">nfit_memdev</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:26">spa_index</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="45:72"><name pos:start="45:30" pos:end="45:40">cpu_to_le16</name><argument_list pos:start="45:41" pos:end="45:72">(<argument pos:start="45:42" pos:end="45:71"><expr pos:start="45:42" pos:end="45:71"><call pos:start="45:42" pos:end="45:71"><name pos:start="45:42" pos:end="45:65">nvdimm_slot_to_spa_index</name><argument_list pos:start="45:66" pos:end="45:71">(<argument pos:start="45:67" pos:end="45:70"><expr pos:start="45:67" pos:end="45:70"><name pos:start="45:67" pos:end="45:70">slot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:64">/* associate memory device with Control Region Structure. */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:73"><expr pos:start="49:5" pos:end="49:72"><name pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:15">nfit_memdev</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:26">dcr_index</name></name> <operator pos:start="49:28" pos:end="49:28">=</operator> <call pos:start="49:30" pos:end="49:72"><name pos:start="49:30" pos:end="49:40">cpu_to_le16</name><argument_list pos:start="49:41" pos:end="49:72">(<argument pos:start="49:42" pos:end="49:71"><expr pos:start="49:42" pos:end="49:71"><call pos:start="49:42" pos:end="49:71"><name pos:start="49:42" pos:end="49:65">nvdimm_slot_to_dcr_index</name><argument_list pos:start="49:66" pos:end="49:71">(<argument pos:start="49:67" pos:end="49:70"><expr pos:start="49:67" pos:end="49:70"><name pos:start="49:67" pos:end="49:70">slot</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:42">/* The memory region on the device. */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:15">nfit_memdev</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:27">region_len</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <call pos:start="55:31" pos:end="55:47"><name pos:start="55:31" pos:end="55:41">cpu_to_le64</name><argument_list pos:start="55:42" pos:end="55:47">(<argument pos:start="55:43" pos:end="55:46"><expr pos:start="55:43" pos:end="55:46"><name pos:start="55:43" pos:end="55:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:48"><expr pos:start="57:5" pos:end="57:47"><name pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:15">nfit_memdev</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:27">region_dpa</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <call pos:start="57:31" pos:end="57:47"><name pos:start="57:31" pos:end="57:41">cpu_to_le64</name><argument_list pos:start="57:42" pos:end="57:47">(<argument pos:start="57:43" pos:end="57:46"><expr pos:start="57:43" pos:end="57:46"><name pos:start="57:43" pos:end="57:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:39">/* Only one interleave for PMEM. */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:15">nfit_memdev</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:32">interleave_ways</name></name> <operator pos:start="63:34" pos:end="63:34">=</operator> <call pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:46">cpu_to_le16</name><argument_list pos:start="63:47" pos:end="63:49">(<argument pos:start="63:48" pos:end="63:48"><expr pos:start="63:48" pos:end="63:48"><literal type="number" pos:start="63:48" pos:end="63:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
