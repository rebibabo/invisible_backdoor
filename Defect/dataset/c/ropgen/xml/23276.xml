<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23276.c" pos:tabs="8"><function pos:start="1:1" pos:end="381:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">ff_hevc_luma_mv_mvp_mode</name><parameter_list pos:start="1:30" pos:end="7:54">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">HEVCContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:52"><decl pos:start="1:47" pos:end="1:52"><type pos:start="1:47" pos:end="1:52"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:52">x0</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:60"><decl pos:start="1:55" pos:end="1:60"><type pos:start="1:55" pos:end="1:60"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:60">y0</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:70"><decl pos:start="1:63" pos:end="1:70"><type pos:start="1:63" pos:end="1:70"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:70">nPbW</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:38"><decl pos:start="3:31" pos:end="3:38"><type pos:start="3:31" pos:end="3:38"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:38">nPbH</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:56"><decl pos:start="3:41" pos:end="3:56"><type pos:start="3:41" pos:end="3:56"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:56">log2_cb_size</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:70">part_idx</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:43"><decl pos:start="5:31" pos:end="5:43"><type pos:start="5:31" pos:end="5:43"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:43">merge_idx</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:56"><decl pos:start="5:46" pos:end="5:56"><type pos:start="5:46" pos:end="5:56"><name pos:start="5:46" pos:end="5:52">MvField</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:56">mv</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:45"><decl pos:start="7:31" pos:end="7:45"><type pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:33">int</name></type> <name pos:start="7:35" pos:end="7:45">mvp_lx_flag</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:53"><decl pos:start="7:48" pos:end="7:53"><type pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:50">int</name></type> <name pos:start="7:52" pos:end="7:53">LX</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="381:1">{<block_content pos:start="11:5" pos:end="379:43">

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">HEVCLocalContext</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">lc</name> <init pos:start="11:26" pos:end="11:36">= <expr pos:start="11:28" pos:end="11:36"><name pos:start="11:28" pos:end="11:36"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">MvField</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">tab_mvf</name> <init pos:start="13:22" pos:end="13:38">= <expr pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:24">s</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:29">ref</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:38">tab_mvf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:23">isScaledFlag_L0</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:25">availableFlagLXA0</name> <init pos:start="17:27" pos:end="17:29">= <expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:25">availableFlagLXB0</name> <init pos:start="19:27" pos:end="19:29">= <expr pos:start="19:29" pos:end="19:29"><literal type="number" pos:start="19:29" pos:end="19:29">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:20">numMVPCandLX</name> <init pos:start="21:22" pos:end="21:24">= <expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:20">min_pu_width</name> <init pos:start="23:22" pos:end="23:43">= <expr pos:start="23:24" pos:end="23:43"><name pos:start="23:24" pos:end="23:43"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:29">sps</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:43">min_pu_width</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">xA0</name></decl>, <decl pos:start="27:14" pos:end="27:16"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:16">yA0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:24"><decl pos:start="29:5" pos:end="29:23"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:23">is_available_a0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:17"><decl pos:start="31:5" pos:end="31:11"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">xA1</name></decl>, <decl pos:start="31:14" pos:end="31:16"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:14" pos:end="31:16">yA1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:24"><decl pos:start="33:5" pos:end="33:23"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:23">is_available_a1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:17"><decl pos:start="35:5" pos:end="35:11"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:11">xB0</name></decl>, <decl pos:start="35:14" pos:end="35:16"><type ref="prev" pos:start="35:5" pos:end="35:7"/><name pos:start="35:14" pos:end="35:16">yB0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:24"><decl pos:start="37:5" pos:end="37:23"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:23">is_available_b0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:17"><decl pos:start="39:5" pos:end="39:11"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:11">xB1</name></decl>, <decl pos:start="39:14" pos:end="39:16"><type ref="prev" pos:start="39:5" pos:end="39:7"/><name pos:start="39:14" pos:end="39:16">yB1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:24"><decl pos:start="41:5" pos:end="41:23"><type pos:start="41:5" pos:end="41:7"><name pos:start="41:5" pos:end="41:7">int</name></type> <name pos:start="41:9" pos:end="41:23">is_available_b1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:17"><decl pos:start="43:5" pos:end="43:11"><type pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:7">int</name></type> <name pos:start="43:9" pos:end="43:11">xB2</name></decl>, <decl pos:start="43:14" pos:end="43:16"><type ref="prev" pos:start="43:5" pos:end="43:7"/><name pos:start="43:14" pos:end="43:16">yB2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:24"><decl pos:start="45:5" pos:end="45:23"><type pos:start="45:5" pos:end="45:7"><name pos:start="45:5" pos:end="45:7">int</name></type> <name pos:start="45:9" pos:end="45:23">is_available_b2</name></decl>;</decl_stmt>



    <decl_stmt pos:start="49:5" pos:end="49:35"><decl pos:start="49:5" pos:end="49:34"><type pos:start="49:5" pos:end="49:6"><name pos:start="49:5" pos:end="49:6">Mv</name></type> <name pos:start="49:8" pos:end="49:22"><name pos:start="49:8" pos:end="49:19">mvpcand_list</name><index pos:start="49:20" pos:end="49:22">[<expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">2</literal></expr>]</index></name> <init pos:start="49:24" pos:end="49:34">= <expr pos:start="49:26" pos:end="49:34"><block pos:start="49:26" pos:end="49:34">{ <expr pos:start="49:28" pos:end="49:32"><block pos:start="49:28" pos:end="49:32">{ <expr pos:start="49:30" pos:end="49:30"><literal type="number" pos:start="49:30" pos:end="49:30">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:11"><decl pos:start="51:5" pos:end="51:10"><type pos:start="51:5" pos:end="51:6"><name pos:start="51:5" pos:end="51:6">Mv</name></type> <name pos:start="51:8" pos:end="51:10">mxA</name></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:11"><decl pos:start="53:5" pos:end="53:10"><type pos:start="53:5" pos:end="53:6"><name pos:start="53:5" pos:end="53:6">Mv</name></type> <name pos:start="53:8" pos:end="53:10">mxB</name></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:25"><decl pos:start="55:5" pos:end="55:24"><type pos:start="55:5" pos:end="55:7"><name pos:start="55:5" pos:end="55:7">int</name></type> <name pos:start="55:9" pos:end="55:20">ref_idx_curr</name> <init pos:start="55:22" pos:end="55:24">= <expr pos:start="55:24" pos:end="55:24"><literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:20"><decl pos:start="57:5" pos:end="57:19"><type pos:start="57:5" pos:end="57:7"><name pos:start="57:5" pos:end="57:7">int</name></type> <name pos:start="57:9" pos:end="57:15">ref_idx</name> <init pos:start="57:17" pos:end="57:19">= <expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:27"><decl pos:start="59:5" pos:end="59:26"><type pos:start="59:5" pos:end="59:7"><name pos:start="59:5" pos:end="59:7">int</name></type> <name pos:start="59:9" pos:end="59:26">pred_flag_index_l0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="61:27"><decl pos:start="61:5" pos:end="61:26"><type pos:start="61:5" pos:end="61:7"><name pos:start="61:5" pos:end="61:7">int</name></type> <name pos:start="61:9" pos:end="61:26">pred_flag_index_l1</name></decl>;</decl_stmt>



    <decl_stmt pos:start="65:5" pos:end="65:57"><decl pos:start="65:5" pos:end="65:56"><type pos:start="65:5" pos:end="65:13"><specifier pos:start="65:5" pos:end="65:9">const</specifier> <name pos:start="65:11" pos:end="65:13">int</name></type> <name pos:start="65:15" pos:end="65:30">cand_bottom_left</name> <init pos:start="65:32" pos:end="65:56">= <expr pos:start="65:34" pos:end="65:56"><name pos:start="65:34" pos:end="65:56"><name pos:start="65:34" pos:end="65:35">lc</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:39">na</name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:56">cand_bottom_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="67:5" pos:end="67:50"><decl pos:start="67:5" pos:end="67:49"><type pos:start="67:5" pos:end="67:13"><specifier pos:start="67:5" pos:end="67:9">const</specifier> <name pos:start="67:11" pos:end="67:13">int</name></type> <name pos:start="67:15" pos:end="67:23">cand_left</name>        <init pos:start="67:32" pos:end="67:49">= <expr pos:start="67:34" pos:end="67:49"><name pos:start="67:34" pos:end="67:49"><name pos:start="67:34" pos:end="67:35">lc</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:39">na</name><operator pos:start="67:40" pos:end="67:40">.</operator><name pos:start="67:41" pos:end="67:49">cand_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="69:5" pos:end="69:53"><decl pos:start="69:5" pos:end="69:52"><type pos:start="69:5" pos:end="69:13"><specifier pos:start="69:5" pos:end="69:9">const</specifier> <name pos:start="69:11" pos:end="69:13">int</name></type> <name pos:start="69:15" pos:end="69:26">cand_up_left</name>     <init pos:start="69:32" pos:end="69:52">= <expr pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:35">lc</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:39">na</name><operator pos:start="69:40" pos:end="69:40">.</operator><name pos:start="69:41" pos:end="69:52">cand_up_left</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="71:5" pos:end="71:48"><decl pos:start="71:5" pos:end="71:47"><type pos:start="71:5" pos:end="71:13"><specifier pos:start="71:5" pos:end="71:9">const</specifier> <name pos:start="71:11" pos:end="71:13">int</name></type> <name pos:start="71:15" pos:end="71:21">cand_up</name>          <init pos:start="71:32" pos:end="71:47">= <expr pos:start="71:34" pos:end="71:47"><name pos:start="71:34" pos:end="71:47"><name pos:start="71:34" pos:end="71:35">lc</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:39">na</name><operator pos:start="71:40" pos:end="71:40">.</operator><name pos:start="71:41" pos:end="71:47">cand_up</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="73:5" pos:end="73:58"><decl pos:start="73:5" pos:end="73:57"><type pos:start="73:5" pos:end="73:13"><specifier pos:start="73:5" pos:end="73:9">const</specifier> <name pos:start="73:11" pos:end="73:13">int</name></type> <name pos:start="73:15" pos:end="73:27">cand_up_right</name>    <init pos:start="73:32" pos:end="73:57">= <expr pos:start="73:34" pos:end="73:57"><name pos:start="73:34" pos:end="73:57"><name pos:start="73:34" pos:end="73:35">lc</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">na</name><operator pos:start="73:40" pos:end="73:40">.</operator><name pos:start="73:41" pos:end="73:57">cand_up_right_sap</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:28"><expr pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:16">ref_idx_curr</name>       <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:27">LX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:41"><expr pos:start="77:5" pos:end="77:40"><name pos:start="77:5" pos:end="77:11">ref_idx</name>            <operator pos:start="77:24" pos:end="77:24">=</operator> <name pos:start="77:26" pos:end="77:40"><name pos:start="77:26" pos:end="77:27">mv</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:36">ref_idx</name><index pos:start="77:37" pos:end="77:40">[<expr pos:start="77:38" pos:end="77:39"><name pos:start="77:38" pos:end="77:39">LX</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:28"><expr pos:start="79:5" pos:end="79:27"><name pos:start="79:5" pos:end="79:22">pred_flag_index_l0</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:27">LX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:22">pred_flag_index_l1</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <operator pos:start="81:26" pos:end="81:26">!</operator><name pos:start="81:27" pos:end="81:28">LX</name></expr>;</expr_stmt>



    <comment type="line" pos:start="85:5" pos:end="85:36">// left bottom spatial candidate</comment>

    <expr_stmt pos:start="87:5" pos:end="87:17"><expr pos:start="87:5" pos:end="87:16"><name pos:start="87:5" pos:end="87:7">xA0</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <name pos:start="87:11" pos:end="87:12">x0</name> <operator pos:start="87:14" pos:end="87:14">-</operator> <literal type="number" pos:start="87:16" pos:end="87:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:20"><expr pos:start="89:5" pos:end="89:19"><name pos:start="89:5" pos:end="89:7">yA0</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <name pos:start="89:11" pos:end="89:12">y0</name> <operator pos:start="89:14" pos:end="89:14">+</operator> <name pos:start="89:16" pos:end="89:19">nPbH</name></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="97:47"><expr pos:start="93:5" pos:end="97:46"><name pos:start="93:5" pos:end="93:19">is_available_a0</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:53"><name pos:start="93:23" pos:end="93:31">AVAILABLE</name><argument_list pos:start="93:32" pos:end="93:53">(<argument pos:start="93:33" pos:end="93:48"><expr pos:start="93:33" pos:end="93:48"><name pos:start="93:33" pos:end="93:48">cand_bottom_left</name></expr></argument>, <argument pos:start="93:51" pos:end="93:52"><expr pos:start="93:51" pos:end="93:52"><name pos:start="93:51" pos:end="93:52">A0</name></expr></argument>)</argument_list></call> <operator pos:start="93:55" pos:end="93:56">&amp;&amp;</operator>

                      <name pos:start="95:23" pos:end="95:25">yA0</name> <operator pos:start="95:27" pos:end="95:27">&lt;</operator> <name pos:start="95:29" pos:end="95:42"><name pos:start="95:29" pos:end="95:29">s</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:34">sps</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:42">height</name></name> <operator pos:start="95:44" pos:end="95:45">&amp;&amp;</operator>

                      <call pos:start="97:23" pos:end="97:46"><name pos:start="97:23" pos:end="97:42">PRED_BLOCK_AVAILABLE</name><argument_list pos:start="97:43" pos:end="97:46">(<argument pos:start="97:44" pos:end="97:45"><expr pos:start="97:44" pos:end="97:45"><name pos:start="97:44" pos:end="97:45">A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="101:5" pos:end="101:34">//left spatial merge candidate</comment>

    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:7">xA1</name>    <operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:15">x0</name> <operator pos:start="103:17" pos:end="103:17">-</operator> <literal type="number" pos:start="103:19" pos:end="103:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:27"><expr pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:7">yA1</name>    <operator pos:start="105:12" pos:end="105:12">=</operator> <name pos:start="105:14" pos:end="105:15">y0</name> <operator pos:start="105:17" pos:end="105:17">+</operator> <name pos:start="105:19" pos:end="105:22">nPbH</name> <operator pos:start="105:24" pos:end="105:24">-</operator> <literal type="number" pos:start="105:26" pos:end="105:26">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:47"><expr pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:19">is_available_a1</name> <operator pos:start="109:21" pos:end="109:21">=</operator> <call pos:start="109:23" pos:end="109:46"><name pos:start="109:23" pos:end="109:31">AVAILABLE</name><argument_list pos:start="109:32" pos:end="109:46">(<argument pos:start="109:33" pos:end="109:41"><expr pos:start="109:33" pos:end="109:41"><name pos:start="109:33" pos:end="109:41">cand_left</name></expr></argument>, <argument pos:start="109:44" pos:end="109:45"><expr pos:start="109:44" pos:end="109:45"><name pos:start="109:44" pos:end="109:45">A1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:28"><if pos:start="111:5" pos:end="113:28">if <condition pos:start="111:8" pos:end="111:43">(<expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:23">is_available_a0</name> <operator pos:start="111:25" pos:end="111:26">||</operator> <name pos:start="111:28" pos:end="111:42">is_available_a1</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:28"><block_content pos:start="113:9" pos:end="113:28">

        <expr_stmt pos:start="113:9" pos:end="113:28"><expr pos:start="113:9" pos:end="113:27"><name pos:start="113:9" pos:end="113:23">isScaledFlag_L0</name> <operator pos:start="113:25" pos:end="113:25">=</operator> <literal type="number" pos:start="113:27" pos:end="113:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="117:5" pos:end="131:5"><if pos:start="117:5" pos:end="131:5">if <condition pos:start="117:8" pos:end="117:24">(<expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:23">is_available_a0</name></expr>)</condition> <block pos:start="117:26" pos:end="131:5">{<block_content pos:start="119:9" pos:end="129:9">

        <if_stmt pos:start="119:9" pos:end="123:9"><if pos:start="119:9" pos:end="123:9">if <condition pos:start="119:12" pos:end="119:47">(<expr pos:start="119:13" pos:end="119:46"><call pos:start="119:13" pos:end="119:46"><name pos:start="119:13" pos:end="119:17">MP_MX</name><argument_list pos:start="119:18" pos:end="119:46">(<argument pos:start="119:19" pos:end="119:20"><expr pos:start="119:19" pos:end="119:20"><name pos:start="119:19" pos:end="119:20">A0</name></expr></argument>, <argument pos:start="119:23" pos:end="119:40"><expr pos:start="119:23" pos:end="119:40"><name pos:start="119:23" pos:end="119:40">pred_flag_index_l0</name></expr></argument>, <argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:49" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:30">

            <goto pos:start="121:13" pos:end="121:30">goto <name pos:start="121:18" pos:end="121:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="129:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:47">(<expr pos:start="125:13" pos:end="125:46"><call pos:start="125:13" pos:end="125:46"><name pos:start="125:13" pos:end="125:17">MP_MX</name><argument_list pos:start="125:18" pos:end="125:46">(<argument pos:start="125:19" pos:end="125:20"><expr pos:start="125:19" pos:end="125:20"><name pos:start="125:19" pos:end="125:20">A0</name></expr></argument>, <argument pos:start="125:23" pos:end="125:40"><expr pos:start="125:23" pos:end="125:40"><name pos:start="125:23" pos:end="125:40">pred_flag_index_l1</name></expr></argument>, <argument pos:start="125:43" pos:end="125:45"><expr pos:start="125:43" pos:end="125:45"><name pos:start="125:43" pos:end="125:45">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:49" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:30">

            <goto pos:start="127:13" pos:end="127:30">goto <name pos:start="127:18" pos:end="127:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="149:5"><if pos:start="135:5" pos:end="149:5">if <condition pos:start="135:8" pos:end="135:24">(<expr pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:23">is_available_a1</name></expr>)</condition> <block pos:start="135:26" pos:end="149:5">{<block_content pos:start="137:9" pos:end="147:9">

        <if_stmt pos:start="137:9" pos:end="141:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:47">(<expr pos:start="137:13" pos:end="137:46"><call pos:start="137:13" pos:end="137:46"><name pos:start="137:13" pos:end="137:17">MP_MX</name><argument_list pos:start="137:18" pos:end="137:46">(<argument pos:start="137:19" pos:end="137:20"><expr pos:start="137:19" pos:end="137:20"><name pos:start="137:19" pos:end="137:20">A1</name></expr></argument>, <argument pos:start="137:23" pos:end="137:40"><expr pos:start="137:23" pos:end="137:40"><name pos:start="137:23" pos:end="137:40">pred_flag_index_l0</name></expr></argument>, <argument pos:start="137:43" pos:end="137:45"><expr pos:start="137:43" pos:end="137:45"><name pos:start="137:43" pos:end="137:45">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:49" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:30">

            <goto pos:start="139:13" pos:end="139:30">goto <name pos:start="139:18" pos:end="139:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:47">(<expr pos:start="143:13" pos:end="143:46"><call pos:start="143:13" pos:end="143:46"><name pos:start="143:13" pos:end="143:17">MP_MX</name><argument_list pos:start="143:18" pos:end="143:46">(<argument pos:start="143:19" pos:end="143:20"><expr pos:start="143:19" pos:end="143:20"><name pos:start="143:19" pos:end="143:20">A1</name></expr></argument>, <argument pos:start="143:23" pos:end="143:40"><expr pos:start="143:23" pos:end="143:40"><name pos:start="143:23" pos:end="143:40">pred_flag_index_l1</name></expr></argument>, <argument pos:start="143:43" pos:end="143:45"><expr pos:start="143:43" pos:end="143:45"><name pos:start="143:43" pos:end="143:45">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:49" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:30">

            <goto pos:start="145:13" pos:end="145:30">goto <name pos:start="145:18" pos:end="145:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="167:5"><if pos:start="153:5" pos:end="167:5">if <condition pos:start="153:8" pos:end="153:24">(<expr pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:23">is_available_a0</name></expr>)</condition> <block pos:start="153:26" pos:end="167:5">{<block_content pos:start="155:9" pos:end="165:9">

        <if_stmt pos:start="155:9" pos:end="159:9"><if pos:start="155:9" pos:end="159:9">if <condition pos:start="155:12" pos:end="155:50">(<expr pos:start="155:13" pos:end="155:49"><call pos:start="155:13" pos:end="155:49"><name pos:start="155:13" pos:end="155:20">MP_MX_LT</name><argument_list pos:start="155:21" pos:end="155:49">(<argument pos:start="155:22" pos:end="155:23"><expr pos:start="155:22" pos:end="155:23"><name pos:start="155:22" pos:end="155:23">A0</name></expr></argument>, <argument pos:start="155:26" pos:end="155:43"><expr pos:start="155:26" pos:end="155:43"><name pos:start="155:26" pos:end="155:43">pred_flag_index_l0</name></expr></argument>, <argument pos:start="155:46" pos:end="155:48"><expr pos:start="155:46" pos:end="155:48"><name pos:start="155:46" pos:end="155:48">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="155:52" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:30">

            <goto pos:start="157:13" pos:end="157:30">goto <name pos:start="157:18" pos:end="157:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="165:9"><if pos:start="161:9" pos:end="165:9">if <condition pos:start="161:12" pos:end="161:50">(<expr pos:start="161:13" pos:end="161:49"><call pos:start="161:13" pos:end="161:49"><name pos:start="161:13" pos:end="161:20">MP_MX_LT</name><argument_list pos:start="161:21" pos:end="161:49">(<argument pos:start="161:22" pos:end="161:23"><expr pos:start="161:22" pos:end="161:23"><name pos:start="161:22" pos:end="161:23">A0</name></expr></argument>, <argument pos:start="161:26" pos:end="161:43"><expr pos:start="161:26" pos:end="161:43"><name pos:start="161:26" pos:end="161:43">pred_flag_index_l1</name></expr></argument>, <argument pos:start="161:46" pos:end="161:48"><expr pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:48">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:52" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:30">

            <goto pos:start="163:13" pos:end="163:30">goto <name pos:start="163:18" pos:end="163:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="171:5" pos:end="185:5"><if pos:start="171:5" pos:end="185:5">if <condition pos:start="171:8" pos:end="171:24">(<expr pos:start="171:9" pos:end="171:23"><name pos:start="171:9" pos:end="171:23">is_available_a1</name></expr>)</condition> <block pos:start="171:26" pos:end="185:5">{<block_content pos:start="173:9" pos:end="183:9">

        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:50">(<expr pos:start="173:13" pos:end="173:49"><call pos:start="173:13" pos:end="173:49"><name pos:start="173:13" pos:end="173:20">MP_MX_LT</name><argument_list pos:start="173:21" pos:end="173:49">(<argument pos:start="173:22" pos:end="173:23"><expr pos:start="173:22" pos:end="173:23"><name pos:start="173:22" pos:end="173:23">A1</name></expr></argument>, <argument pos:start="173:26" pos:end="173:43"><expr pos:start="173:26" pos:end="173:43"><name pos:start="173:26" pos:end="173:43">pred_flag_index_l0</name></expr></argument>, <argument pos:start="173:46" pos:end="173:48"><expr pos:start="173:46" pos:end="173:48"><name pos:start="173:46" pos:end="173:48">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:52" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:30">

            <goto pos:start="175:13" pos:end="175:30">goto <name pos:start="175:18" pos:end="175:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="183:9"><if pos:start="179:9" pos:end="183:9">if <condition pos:start="179:12" pos:end="179:50">(<expr pos:start="179:13" pos:end="179:49"><call pos:start="179:13" pos:end="179:49"><name pos:start="179:13" pos:end="179:20">MP_MX_LT</name><argument_list pos:start="179:21" pos:end="179:49">(<argument pos:start="179:22" pos:end="179:23"><expr pos:start="179:22" pos:end="179:23"><name pos:start="179:22" pos:end="179:23">A1</name></expr></argument>, <argument pos:start="179:26" pos:end="179:43"><expr pos:start="179:26" pos:end="179:43"><name pos:start="179:26" pos:end="179:43">pred_flag_index_l1</name></expr></argument>, <argument pos:start="179:46" pos:end="179:48"><expr pos:start="179:46" pos:end="179:48"><name pos:start="179:46" pos:end="179:48">mxA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:52" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:30">

            <goto pos:start="181:13" pos:end="181:30">goto <name pos:start="181:18" pos:end="181:29">b_candidates</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:26"><expr pos:start="187:5" pos:end="187:25"><name pos:start="187:5" pos:end="187:21">availableFlagLXA0</name> <operator pos:start="187:23" pos:end="187:23">=</operator> <literal type="number" pos:start="187:25" pos:end="187:25">0</literal></expr>;</expr_stmt>



<label pos:start="191:1" pos:end="191:13"><name pos:start="191:1" pos:end="191:12">b_candidates</name>:</label>

    <comment type="line" pos:start="193:5" pos:end="193:19">// B candidates</comment>

    <comment type="line" pos:start="195:5" pos:end="195:42">// above right spatial merge candidate</comment>

    <expr_stmt pos:start="197:5" pos:end="197:23"><expr pos:start="197:5" pos:end="197:22"><name pos:start="197:5" pos:end="197:7">xB0</name>    <operator pos:start="197:12" pos:end="197:12">=</operator> <name pos:start="197:14" pos:end="197:15">x0</name> <operator pos:start="197:17" pos:end="197:17">+</operator> <name pos:start="197:19" pos:end="197:22">nPbW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:20"><expr pos:start="199:5" pos:end="199:19"><name pos:start="199:5" pos:end="199:7">yB0</name>    <operator pos:start="199:12" pos:end="199:12">=</operator> <name pos:start="199:14" pos:end="199:15">y0</name> <operator pos:start="199:17" pos:end="199:17">-</operator> <literal type="number" pos:start="199:19" pos:end="199:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="203:5" pos:end="207:48"><expr pos:start="203:5" pos:end="207:47"><name pos:start="203:5" pos:end="203:19">is_available_b0</name> <operator pos:start="203:21" pos:end="203:21">=</operator>  <call pos:start="203:24" pos:end="203:51"><name pos:start="203:24" pos:end="203:32">AVAILABLE</name><argument_list pos:start="203:33" pos:end="203:51">(<argument pos:start="203:34" pos:end="203:46"><expr pos:start="203:34" pos:end="203:46"><name pos:start="203:34" pos:end="203:46">cand_up_right</name></expr></argument>, <argument pos:start="203:49" pos:end="203:50"><expr pos:start="203:49" pos:end="203:50"><name pos:start="203:49" pos:end="203:50">B0</name></expr></argument>)</argument_list></call> <operator pos:start="203:53" pos:end="203:54">&amp;&amp;</operator>

                       <name pos:start="205:24" pos:end="205:26">xB0</name> <operator pos:start="205:28" pos:end="205:28">&lt;</operator> <name pos:start="205:30" pos:end="205:42"><name pos:start="205:30" pos:end="205:30">s</name><operator pos:start="205:31" pos:end="205:32">-&gt;</operator><name pos:start="205:33" pos:end="205:35">sps</name><operator pos:start="205:36" pos:end="205:37">-&gt;</operator><name pos:start="205:38" pos:end="205:42">width</name></name> <operator pos:start="205:44" pos:end="205:45">&amp;&amp;</operator>

                       <call pos:start="207:24" pos:end="207:47"><name pos:start="207:24" pos:end="207:43">PRED_BLOCK_AVAILABLE</name><argument_list pos:start="207:44" pos:end="207:47">(<argument pos:start="207:45" pos:end="207:46"><expr pos:start="207:45" pos:end="207:46"><name pos:start="207:45" pos:end="207:46">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="211:5" pos:end="225:5"><if pos:start="211:5" pos:end="225:5">if <condition pos:start="211:8" pos:end="211:24">(<expr pos:start="211:9" pos:end="211:23"><name pos:start="211:9" pos:end="211:23">is_available_b0</name></expr>)</condition> <block pos:start="211:26" pos:end="225:5">{<block_content pos:start="213:9" pos:end="223:9">

        <if_stmt pos:start="213:9" pos:end="217:9"><if pos:start="213:9" pos:end="217:9">if <condition pos:start="213:12" pos:end="213:47">(<expr pos:start="213:13" pos:end="213:46"><call pos:start="213:13" pos:end="213:46"><name pos:start="213:13" pos:end="213:17">MP_MX</name><argument_list pos:start="213:18" pos:end="213:46">(<argument pos:start="213:19" pos:end="213:20"><expr pos:start="213:19" pos:end="213:20"><name pos:start="213:19" pos:end="213:20">B0</name></expr></argument>, <argument pos:start="213:23" pos:end="213:40"><expr pos:start="213:23" pos:end="213:40"><name pos:start="213:23" pos:end="213:40">pred_flag_index_l0</name></expr></argument>, <argument pos:start="213:43" pos:end="213:45"><expr pos:start="213:43" pos:end="213:45"><name pos:start="213:43" pos:end="213:45">mxB</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="213:49" pos:end="217:9">{<block_content pos:start="215:13" pos:end="215:24">

            <goto pos:start="215:13" pos:end="215:24">goto <name pos:start="215:18" pos:end="215:23">scalef</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="219:9" pos:end="223:9"><if pos:start="219:9" pos:end="223:9">if <condition pos:start="219:12" pos:end="219:47">(<expr pos:start="219:13" pos:end="219:46"><call pos:start="219:13" pos:end="219:46"><name pos:start="219:13" pos:end="219:17">MP_MX</name><argument_list pos:start="219:18" pos:end="219:46">(<argument pos:start="219:19" pos:end="219:20"><expr pos:start="219:19" pos:end="219:20"><name pos:start="219:19" pos:end="219:20">B0</name></expr></argument>, <argument pos:start="219:23" pos:end="219:40"><expr pos:start="219:23" pos:end="219:40"><name pos:start="219:23" pos:end="219:40">pred_flag_index_l1</name></expr></argument>, <argument pos:start="219:43" pos:end="219:45"><expr pos:start="219:43" pos:end="219:45"><name pos:start="219:43" pos:end="219:45">mxB</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="219:49" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:24">

            <goto pos:start="221:13" pos:end="221:24">goto <name pos:start="221:18" pos:end="221:23">scalef</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="229:5" pos:end="229:36">// above spatial merge candidate</comment>

    <expr_stmt pos:start="231:5" pos:end="231:27"><expr pos:start="231:5" pos:end="231:26"><name pos:start="231:5" pos:end="231:7">xB1</name>    <operator pos:start="231:12" pos:end="231:12">=</operator> <name pos:start="231:14" pos:end="231:15">x0</name> <operator pos:start="231:17" pos:end="231:17">+</operator> <name pos:start="231:19" pos:end="231:22">nPbW</name> <operator pos:start="231:24" pos:end="231:24">-</operator> <literal type="number" pos:start="231:26" pos:end="231:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:20"><expr pos:start="233:5" pos:end="233:19"><name pos:start="233:5" pos:end="233:7">yB1</name>    <operator pos:start="233:12" pos:end="233:12">=</operator> <name pos:start="233:14" pos:end="233:15">y0</name> <operator pos:start="233:17" pos:end="233:17">-</operator> <literal type="number" pos:start="233:19" pos:end="233:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="237:5" pos:end="237:45"><expr pos:start="237:5" pos:end="237:44"><name pos:start="237:5" pos:end="237:19">is_available_b1</name> <operator pos:start="237:21" pos:end="237:21">=</operator> <call pos:start="237:23" pos:end="237:44"><name pos:start="237:23" pos:end="237:31">AVAILABLE</name><argument_list pos:start="237:32" pos:end="237:44">(<argument pos:start="237:33" pos:end="237:39"><expr pos:start="237:33" pos:end="237:39"><name pos:start="237:33" pos:end="237:39">cand_up</name></expr></argument>, <argument pos:start="237:42" pos:end="237:43"><expr pos:start="237:42" pos:end="237:43"><name pos:start="237:42" pos:end="237:43">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="241:5" pos:end="255:5"><if pos:start="241:5" pos:end="255:5">if <condition pos:start="241:8" pos:end="241:24">(<expr pos:start="241:9" pos:end="241:23"><name pos:start="241:9" pos:end="241:23">is_available_b1</name></expr>)</condition> <block pos:start="241:26" pos:end="255:5">{<block_content pos:start="243:9" pos:end="253:9">

        <if_stmt pos:start="243:9" pos:end="247:9"><if pos:start="243:9" pos:end="247:9">if <condition pos:start="243:12" pos:end="243:47">(<expr pos:start="243:13" pos:end="243:46"><call pos:start="243:13" pos:end="243:46"><name pos:start="243:13" pos:end="243:17">MP_MX</name><argument_list pos:start="243:18" pos:end="243:46">(<argument pos:start="243:19" pos:end="243:20"><expr pos:start="243:19" pos:end="243:20"><name pos:start="243:19" pos:end="243:20">B1</name></expr></argument>, <argument pos:start="243:23" pos:end="243:40"><expr pos:start="243:23" pos:end="243:40"><name pos:start="243:23" pos:end="243:40">pred_flag_index_l0</name></expr></argument>, <argument pos:start="243:43" pos:end="243:45"><expr pos:start="243:43" pos:end="243:45"><name pos:start="243:43" pos:end="243:45">mxB</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:49" pos:end="247:9">{<block_content pos:start="245:13" pos:end="245:24">

            <goto pos:start="245:13" pos:end="245:24">goto <name pos:start="245:18" pos:end="245:23">scalef</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="249:9" pos:end="253:9"><if pos:start="249:9" pos:end="253:9">if <condition pos:start="249:12" pos:end="249:47">(<expr pos:start="249:13" pos:end="249:46"><call pos:start="249:13" pos:end="249:46"><name pos:start="249:13" pos:end="249:17">MP_MX</name><argument_list pos:start="249:18" pos:end="249:46">(<argument pos:start="249:19" pos:end="249:20"><expr pos:start="249:19" pos:end="249:20"><name pos:start="249:19" pos:end="249:20">B1</name></expr></argument>, <argument pos:start="249:23" pos:end="249:40"><expr pos:start="249:23" pos:end="249:40"><name pos:start="249:23" pos:end="249:40">pred_flag_index_l1</name></expr></argument>, <argument pos:start="249:43" pos:end="249:45"><expr pos:start="249:43" pos:end="249:45"><name pos:start="249:43" pos:end="249:45">mxB</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="249:49" pos:end="253:9">{<block_content pos:start="251:13" pos:end="251:24">

            <goto pos:start="251:13" pos:end="251:24">goto <name pos:start="251:18" pos:end="251:23">scalef</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="259:5" pos:end="259:41">// above left spatial merge candidate</comment>

    <expr_stmt pos:start="261:5" pos:end="261:17"><expr pos:start="261:5" pos:end="261:16"><name pos:start="261:5" pos:end="261:7">xB2</name> <operator pos:start="261:9" pos:end="261:9">=</operator> <name pos:start="261:11" pos:end="261:12">x0</name> <operator pos:start="261:14" pos:end="261:14">-</operator> <literal type="number" pos:start="261:16" pos:end="261:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:17"><expr pos:start="263:5" pos:end="263:16"><name pos:start="263:5" pos:end="263:7">yB2</name> <operator pos:start="263:9" pos:end="263:9">=</operator> <name pos:start="263:11" pos:end="263:12">y0</name> <operator pos:start="263:14" pos:end="263:14">-</operator> <literal type="number" pos:start="263:16" pos:end="263:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:50"><expr pos:start="265:5" pos:end="265:49"><name pos:start="265:5" pos:end="265:19">is_available_b2</name> <operator pos:start="265:21" pos:end="265:21">=</operator> <call pos:start="265:23" pos:end="265:49"><name pos:start="265:23" pos:end="265:31">AVAILABLE</name><argument_list pos:start="265:32" pos:end="265:49">(<argument pos:start="265:33" pos:end="265:44"><expr pos:start="265:33" pos:end="265:44"><name pos:start="265:33" pos:end="265:44">cand_up_left</name></expr></argument>, <argument pos:start="265:47" pos:end="265:48"><expr pos:start="265:47" pos:end="265:48"><name pos:start="265:47" pos:end="265:48">B2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="269:5" pos:end="283:5"><if pos:start="269:5" pos:end="283:5">if <condition pos:start="269:8" pos:end="269:24">(<expr pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:23">is_available_b2</name></expr>)</condition> <block pos:start="269:26" pos:end="283:5">{<block_content pos:start="271:9" pos:end="281:9">

        <if_stmt pos:start="271:9" pos:end="275:9"><if pos:start="271:9" pos:end="275:9">if <condition pos:start="271:12" pos:end="271:47">(<expr pos:start="271:13" pos:end="271:46"><call pos:start="271:13" pos:end="271:46"><name pos:start="271:13" pos:end="271:17">MP_MX</name><argument_list pos:start="271:18" pos:end="271:46">(<argument pos:start="271:19" pos:end="271:20"><expr pos:start="271:19" pos:end="271:20"><name pos:start="271:19" pos:end="271:20">B2</name></expr></argument>, <argument pos:start="271:23" pos:end="271:40"><expr pos:start="271:23" pos:end="271:40"><name pos:start="271:23" pos:end="271:40">pred_flag_index_l0</name></expr></argument>, <argument pos:start="271:43" pos:end="271:45"><expr pos:start="271:43" pos:end="271:45"><name pos:start="271:43" pos:end="271:45">mxB</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="271:49" pos:end="275:9">{<block_content pos:start="273:13" pos:end="273:24">

            <goto pos:start="273:13" pos:end="273:24">goto <name pos:start="273:18" pos:end="273:23">scalef</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="277:9" pos:end="281:9"><if pos:start="277:9" pos:end="281:9">if <condition pos:start="277:12" pos:end="277:47">(<expr pos:start="277:13" pos:end="277:46"><call pos:start="277:13" pos:end="277:46"><name pos:start="277:13" pos:end="277:17">MP_MX</name><argument_list pos:start="277:18" pos:end="277:46">(<argument pos:start="277:19" pos:end="277:20"><expr pos:start="277:19" pos:end="277:20"><name pos:start="277:19" pos:end="277:20">B2</name></expr></argument>, <argument pos:start="277:23" pos:end="277:40"><expr pos:start="277:23" pos:end="277:40"><name pos:start="277:23" pos:end="277:40">pred_flag_index_l1</name></expr></argument>, <argument pos:start="277:43" pos:end="277:45"><expr pos:start="277:43" pos:end="277:45"><name pos:start="277:43" pos:end="277:45">mxB</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="277:49" pos:end="281:9">{<block_content pos:start="279:13" pos:end="279:24">

            <goto pos:start="279:13" pos:end="279:24">goto <name pos:start="279:18" pos:end="279:23">scalef</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:26"><expr pos:start="285:5" pos:end="285:25"><name pos:start="285:5" pos:end="285:21">availableFlagLXB0</name> <operator pos:start="285:23" pos:end="285:23">=</operator> <literal type="number" pos:start="285:25" pos:end="285:25">0</literal></expr>;</expr_stmt>



<label pos:start="289:1" pos:end="289:7"><name pos:start="289:1" pos:end="289:6">scalef</name>:</label>

    <if_stmt pos:start="291:5" pos:end="341:5"><if pos:start="291:5" pos:end="341:5">if <condition pos:start="291:8" pos:end="291:25">(<expr pos:start="291:9" pos:end="291:24"><operator pos:start="291:9" pos:end="291:9">!</operator><name pos:start="291:10" pos:end="291:24">isScaledFlag_L0</name></expr>)</condition> <block pos:start="291:27" pos:end="341:5">{<block_content pos:start="293:9" pos:end="339:9">

        <if_stmt pos:start="293:9" pos:end="299:9"><if pos:start="293:9" pos:end="299:9">if <condition pos:start="293:12" pos:end="293:30">(<expr pos:start="293:13" pos:end="293:29"><name pos:start="293:13" pos:end="293:29">availableFlagLXB0</name></expr>)</condition> <block pos:start="293:32" pos:end="299:9">{<block_content pos:start="295:13" pos:end="297:22">

            <expr_stmt pos:start="295:13" pos:end="295:34"><expr pos:start="295:13" pos:end="295:33"><name pos:start="295:13" pos:end="295:29">availableFlagLXA0</name> <operator pos:start="295:31" pos:end="295:31">=</operator> <literal type="number" pos:start="295:33" pos:end="295:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:22"><expr pos:start="297:13" pos:end="297:21"><name pos:start="297:13" pos:end="297:15">mxA</name> <operator pos:start="297:17" pos:end="297:17">=</operator> <name pos:start="297:19" pos:end="297:21">mxB</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:30"><expr pos:start="301:9" pos:end="301:29"><name pos:start="301:9" pos:end="301:25">availableFlagLXB0</name> <operator pos:start="301:27" pos:end="301:27">=</operator> <literal type="number" pos:start="301:29" pos:end="301:29">0</literal></expr>;</expr_stmt>



        <comment type="line" pos:start="305:9" pos:end="305:21">// XB0 and L1</comment>

        <if_stmt pos:start="307:9" pos:end="315:9"><if pos:start="307:9" pos:end="315:9">if <condition pos:start="307:12" pos:end="307:28">(<expr pos:start="307:13" pos:end="307:27"><name pos:start="307:13" pos:end="307:27">is_available_b0</name></expr>)</condition> <block pos:start="307:30" pos:end="315:9">{<block_content pos:start="309:13" pos:end="313:74">

            <expr_stmt pos:start="309:13" pos:end="309:70"><expr pos:start="309:13" pos:end="309:69"><name pos:start="309:13" pos:end="309:29">availableFlagLXB0</name> <operator pos:start="309:31" pos:end="309:31">=</operator> <call pos:start="309:33" pos:end="309:69"><name pos:start="309:33" pos:end="309:40">MP_MX_LT</name><argument_list pos:start="309:41" pos:end="309:69">(<argument pos:start="309:42" pos:end="309:43"><expr pos:start="309:42" pos:end="309:43"><name pos:start="309:42" pos:end="309:43">B0</name></expr></argument>, <argument pos:start="309:46" pos:end="309:63"><expr pos:start="309:46" pos:end="309:63"><name pos:start="309:46" pos:end="309:63">pred_flag_index_l0</name></expr></argument>, <argument pos:start="309:66" pos:end="309:68"><expr pos:start="309:66" pos:end="309:68"><name pos:start="309:66" pos:end="309:68">mxB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="311:13" pos:end="313:74"><if pos:start="311:13" pos:end="313:74">if <condition pos:start="311:16" pos:end="311:35">(<expr pos:start="311:17" pos:end="311:34"><operator pos:start="311:17" pos:end="311:17">!</operator><name pos:start="311:18" pos:end="311:34">availableFlagLXB0</name></expr>)</condition><block type="pseudo" pos:start="313:17" pos:end="313:74"><block_content pos:start="313:17" pos:end="313:74">

                <expr_stmt pos:start="313:17" pos:end="313:74"><expr pos:start="313:17" pos:end="313:73"><name pos:start="313:17" pos:end="313:33">availableFlagLXB0</name> <operator pos:start="313:35" pos:end="313:35">=</operator> <call pos:start="313:37" pos:end="313:73"><name pos:start="313:37" pos:end="313:44">MP_MX_LT</name><argument_list pos:start="313:45" pos:end="313:73">(<argument pos:start="313:46" pos:end="313:47"><expr pos:start="313:46" pos:end="313:47"><name pos:start="313:46" pos:end="313:47">B0</name></expr></argument>, <argument pos:start="313:50" pos:end="313:67"><expr pos:start="313:50" pos:end="313:67"><name pos:start="313:50" pos:end="313:67">pred_flag_index_l1</name></expr></argument>, <argument pos:start="313:70" pos:end="313:72"><expr pos:start="313:70" pos:end="313:72"><name pos:start="313:70" pos:end="313:72">mxB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="319:9" pos:end="327:9"><if pos:start="319:9" pos:end="327:9">if <condition pos:start="319:12" pos:end="319:50">(<expr pos:start="319:13" pos:end="319:49"><name pos:start="319:13" pos:end="319:27">is_available_b1</name> <operator pos:start="319:29" pos:end="319:30">&amp;&amp;</operator> <operator pos:start="319:32" pos:end="319:32">!</operator><name pos:start="319:33" pos:end="319:49">availableFlagLXB0</name></expr>)</condition> <block pos:start="319:52" pos:end="327:9">{<block_content pos:start="321:13" pos:end="325:74">

            <expr_stmt pos:start="321:13" pos:end="321:70"><expr pos:start="321:13" pos:end="321:69"><name pos:start="321:13" pos:end="321:29">availableFlagLXB0</name> <operator pos:start="321:31" pos:end="321:31">=</operator> <call pos:start="321:33" pos:end="321:69"><name pos:start="321:33" pos:end="321:40">MP_MX_LT</name><argument_list pos:start="321:41" pos:end="321:69">(<argument pos:start="321:42" pos:end="321:43"><expr pos:start="321:42" pos:end="321:43"><name pos:start="321:42" pos:end="321:43">B1</name></expr></argument>, <argument pos:start="321:46" pos:end="321:63"><expr pos:start="321:46" pos:end="321:63"><name pos:start="321:46" pos:end="321:63">pred_flag_index_l0</name></expr></argument>, <argument pos:start="321:66" pos:end="321:68"><expr pos:start="321:66" pos:end="321:68"><name pos:start="321:66" pos:end="321:68">mxB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="325:74"><if pos:start="323:13" pos:end="325:74">if <condition pos:start="323:16" pos:end="323:35">(<expr pos:start="323:17" pos:end="323:34"><operator pos:start="323:17" pos:end="323:17">!</operator><name pos:start="323:18" pos:end="323:34">availableFlagLXB0</name></expr>)</condition><block type="pseudo" pos:start="325:17" pos:end="325:74"><block_content pos:start="325:17" pos:end="325:74">

                <expr_stmt pos:start="325:17" pos:end="325:74"><expr pos:start="325:17" pos:end="325:73"><name pos:start="325:17" pos:end="325:33">availableFlagLXB0</name> <operator pos:start="325:35" pos:end="325:35">=</operator> <call pos:start="325:37" pos:end="325:73"><name pos:start="325:37" pos:end="325:44">MP_MX_LT</name><argument_list pos:start="325:45" pos:end="325:73">(<argument pos:start="325:46" pos:end="325:47"><expr pos:start="325:46" pos:end="325:47"><name pos:start="325:46" pos:end="325:47">B1</name></expr></argument>, <argument pos:start="325:50" pos:end="325:67"><expr pos:start="325:50" pos:end="325:67"><name pos:start="325:50" pos:end="325:67">pred_flag_index_l1</name></expr></argument>, <argument pos:start="325:70" pos:end="325:72"><expr pos:start="325:70" pos:end="325:72"><name pos:start="325:70" pos:end="325:72">mxB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="331:9" pos:end="339:9"><if pos:start="331:9" pos:end="339:9">if <condition pos:start="331:12" pos:end="331:50">(<expr pos:start="331:13" pos:end="331:49"><name pos:start="331:13" pos:end="331:27">is_available_b2</name> <operator pos:start="331:29" pos:end="331:30">&amp;&amp;</operator> <operator pos:start="331:32" pos:end="331:32">!</operator><name pos:start="331:33" pos:end="331:49">availableFlagLXB0</name></expr>)</condition> <block pos:start="331:52" pos:end="339:9">{<block_content pos:start="333:13" pos:end="337:74">

            <expr_stmt pos:start="333:13" pos:end="333:70"><expr pos:start="333:13" pos:end="333:69"><name pos:start="333:13" pos:end="333:29">availableFlagLXB0</name> <operator pos:start="333:31" pos:end="333:31">=</operator> <call pos:start="333:33" pos:end="333:69"><name pos:start="333:33" pos:end="333:40">MP_MX_LT</name><argument_list pos:start="333:41" pos:end="333:69">(<argument pos:start="333:42" pos:end="333:43"><expr pos:start="333:42" pos:end="333:43"><name pos:start="333:42" pos:end="333:43">B2</name></expr></argument>, <argument pos:start="333:46" pos:end="333:63"><expr pos:start="333:46" pos:end="333:63"><name pos:start="333:46" pos:end="333:63">pred_flag_index_l0</name></expr></argument>, <argument pos:start="333:66" pos:end="333:68"><expr pos:start="333:66" pos:end="333:68"><name pos:start="333:66" pos:end="333:68">mxB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="335:13" pos:end="337:74"><if pos:start="335:13" pos:end="337:74">if <condition pos:start="335:16" pos:end="335:35">(<expr pos:start="335:17" pos:end="335:34"><operator pos:start="335:17" pos:end="335:17">!</operator><name pos:start="335:18" pos:end="335:34">availableFlagLXB0</name></expr>)</condition><block type="pseudo" pos:start="337:17" pos:end="337:74"><block_content pos:start="337:17" pos:end="337:74">

                <expr_stmt pos:start="337:17" pos:end="337:74"><expr pos:start="337:17" pos:end="337:73"><name pos:start="337:17" pos:end="337:33">availableFlagLXB0</name> <operator pos:start="337:35" pos:end="337:35">=</operator> <call pos:start="337:37" pos:end="337:73"><name pos:start="337:37" pos:end="337:44">MP_MX_LT</name><argument_list pos:start="337:45" pos:end="337:73">(<argument pos:start="337:46" pos:end="337:47"><expr pos:start="337:46" pos:end="337:47"><name pos:start="337:46" pos:end="337:47">B2</name></expr></argument>, <argument pos:start="337:50" pos:end="337:67"><expr pos:start="337:50" pos:end="337:67"><name pos:start="337:50" pos:end="337:67">pred_flag_index_l1</name></expr></argument>, <argument pos:start="337:70" pos:end="337:72"><expr pos:start="337:70" pos:end="337:72"><name pos:start="337:70" pos:end="337:72">mxB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="345:5" pos:end="347:43"><if pos:start="345:5" pos:end="347:43">if <condition pos:start="345:8" pos:end="345:26">(<expr pos:start="345:9" pos:end="345:25"><name pos:start="345:9" pos:end="345:25">availableFlagLXA0</name></expr>)</condition><block type="pseudo" pos:start="347:9" pos:end="347:43"><block_content pos:start="347:9" pos:end="347:43">

        <expr_stmt pos:start="347:9" pos:end="347:43"><expr pos:start="347:9" pos:end="347:42"><name pos:start="347:9" pos:end="347:36"><name pos:start="347:9" pos:end="347:20">mvpcand_list</name><index pos:start="347:21" pos:end="347:36">[<expr pos:start="347:22" pos:end="347:35"><name pos:start="347:22" pos:end="347:33">numMVPCandLX</name><operator pos:start="347:34" pos:end="347:35">++</operator></expr>]</index></name> <operator pos:start="347:38" pos:end="347:38">=</operator> <name pos:start="347:40" pos:end="347:42">mxA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="351:5" pos:end="353:43"><if pos:start="351:5" pos:end="353:43">if <condition pos:start="351:8" pos:end="351:86">(<expr pos:start="351:9" pos:end="351:85"><name pos:start="351:9" pos:end="351:25">availableFlagLXB0</name> <operator pos:start="351:27" pos:end="351:28">&amp;&amp;</operator> <operator pos:start="351:30" pos:end="351:30">(</operator><operator pos:start="351:31" pos:end="351:31">!</operator><name pos:start="351:32" pos:end="351:48">availableFlagLXA0</name> <operator pos:start="351:50" pos:end="351:51">||</operator> <name pos:start="351:53" pos:end="351:57"><name pos:start="351:53" pos:end="351:55">mxA</name><operator pos:start="351:56" pos:end="351:56">.</operator><name pos:start="351:57" pos:end="351:57">x</name></name> <operator pos:start="351:59" pos:end="351:60">!=</operator> <name pos:start="351:62" pos:end="351:66"><name pos:start="351:62" pos:end="351:64">mxB</name><operator pos:start="351:65" pos:end="351:65">.</operator><name pos:start="351:66" pos:end="351:66">x</name></name> <operator pos:start="351:68" pos:end="351:69">||</operator> <name pos:start="351:71" pos:end="351:75"><name pos:start="351:71" pos:end="351:73">mxA</name><operator pos:start="351:74" pos:end="351:74">.</operator><name pos:start="351:75" pos:end="351:75">y</name></name> <operator pos:start="351:77" pos:end="351:78">!=</operator> <name pos:start="351:80" pos:end="351:84"><name pos:start="351:80" pos:end="351:82">mxB</name><operator pos:start="351:83" pos:end="351:83">.</operator><name pos:start="351:84" pos:end="351:84">y</name></name><operator pos:start="351:85" pos:end="351:85">)</operator></expr>)</condition><block type="pseudo" pos:start="353:9" pos:end="353:43"><block_content pos:start="353:9" pos:end="353:43">

        <expr_stmt pos:start="353:9" pos:end="353:43"><expr pos:start="353:9" pos:end="353:42"><name pos:start="353:9" pos:end="353:36"><name pos:start="353:9" pos:end="353:20">mvpcand_list</name><index pos:start="353:21" pos:end="353:36">[<expr pos:start="353:22" pos:end="353:35"><name pos:start="353:22" pos:end="353:33">numMVPCandLX</name><operator pos:start="353:34" pos:end="353:35">++</operator></expr>]</index></name> <operator pos:start="353:38" pos:end="353:38">=</operator> <name pos:start="353:40" pos:end="353:42">mxB</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="357:5" pos:end="357:49">//temporal motion vector prediction candidate</comment>

    <if_stmt pos:start="359:5" pos:end="375:5"><if pos:start="359:5" pos:end="375:5">if <condition pos:start="359:8" pos:end="361:36">(<expr pos:start="359:9" pos:end="361:35"><name pos:start="359:9" pos:end="359:20">numMVPCandLX</name> <operator pos:start="359:22" pos:end="359:22">&lt;</operator> <literal type="number" pos:start="359:24" pos:end="359:24">2</literal> <operator pos:start="359:26" pos:end="359:27">&amp;&amp;</operator> <name pos:start="359:29" pos:end="359:65"><name pos:start="359:29" pos:end="359:29">s</name><operator pos:start="359:30" pos:end="359:31">-&gt;</operator><name pos:start="359:32" pos:end="359:33">sh</name><operator pos:start="359:34" pos:end="359:34">.</operator><name pos:start="359:35" pos:end="359:65">slice_temporal_mvp_enabled_flag</name></name> <operator pos:start="359:67" pos:end="359:68">&amp;&amp;</operator>

        <name pos:start="361:9" pos:end="361:19">mvp_lx_flag</name> <operator pos:start="361:21" pos:end="361:22">==</operator> <name pos:start="361:24" pos:end="361:35">numMVPCandLX</name></expr>)</condition> <block pos:start="361:38" pos:end="375:5">{<block_content pos:start="363:9" pos:end="373:50">

        <decl_stmt pos:start="363:9" pos:end="363:18"><decl pos:start="363:9" pos:end="363:17"><type pos:start="363:9" pos:end="363:10"><name pos:start="363:9" pos:end="363:10">Mv</name></type> <name pos:start="363:12" pos:end="363:17">mv_col</name></decl>;</decl_stmt>

        <decl_stmt pos:start="365:9" pos:end="369:69"><decl pos:start="365:9" pos:end="369:68"><type pos:start="365:9" pos:end="365:11"><name pos:start="365:9" pos:end="365:11">int</name></type> <name pos:start="365:13" pos:end="365:25">available_col</name> <init pos:start="365:27" pos:end="369:68">= <expr pos:start="365:29" pos:end="369:68"><call pos:start="365:29" pos:end="369:68"><name pos:start="365:29" pos:end="365:55">temporal_luma_motion_vector</name><argument_list pos:start="365:56" pos:end="369:68">(<argument pos:start="365:57" pos:end="365:57"><expr pos:start="365:57" pos:end="365:57"><name pos:start="365:57" pos:end="365:57">s</name></expr></argument>, <argument pos:start="365:60" pos:end="365:61"><expr pos:start="365:60" pos:end="365:61"><name pos:start="365:60" pos:end="365:61">x0</name></expr></argument>, <argument pos:start="365:64" pos:end="365:65"><expr pos:start="365:64" pos:end="365:65"><name pos:start="365:64" pos:end="365:65">y0</name></expr></argument>, <argument pos:start="365:68" pos:end="365:71"><expr pos:start="365:68" pos:end="365:71"><name pos:start="365:68" pos:end="365:71">nPbW</name></expr></argument>,

                                                        <argument pos:start="367:57" pos:end="367:60"><expr pos:start="367:57" pos:end="367:60"><name pos:start="367:57" pos:end="367:60">nPbH</name></expr></argument>, <argument pos:start="367:63" pos:end="367:69"><expr pos:start="367:63" pos:end="367:69"><name pos:start="367:63" pos:end="367:69">ref_idx</name></expr></argument>,

                                                        <argument pos:start="369:57" pos:end="369:63"><expr pos:start="369:57" pos:end="369:63"><operator pos:start="369:57" pos:end="369:57">&amp;</operator><name pos:start="369:58" pos:end="369:63">mv_col</name></expr></argument>, <argument pos:start="369:66" pos:end="369:67"><expr pos:start="369:66" pos:end="369:67"><name pos:start="369:66" pos:end="369:67">LX</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="371:9" pos:end="373:50"><if pos:start="371:9" pos:end="373:50">if <condition pos:start="371:12" pos:end="371:26">(<expr pos:start="371:13" pos:end="371:25"><name pos:start="371:13" pos:end="371:25">available_col</name></expr>)</condition><block type="pseudo" pos:start="373:13" pos:end="373:50"><block_content pos:start="373:13" pos:end="373:50">

            <expr_stmt pos:start="373:13" pos:end="373:50"><expr pos:start="373:13" pos:end="373:49"><name pos:start="373:13" pos:end="373:40"><name pos:start="373:13" pos:end="373:24">mvpcand_list</name><index pos:start="373:25" pos:end="373:40">[<expr pos:start="373:26" pos:end="373:39"><name pos:start="373:26" pos:end="373:37">numMVPCandLX</name><operator pos:start="373:38" pos:end="373:39">++</operator></expr>]</index></name> <operator pos:start="373:42" pos:end="373:42">=</operator> <name pos:start="373:44" pos:end="373:49">mv_col</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="379:5" pos:end="379:43"><expr pos:start="379:5" pos:end="379:42"><name pos:start="379:5" pos:end="379:14"><name pos:start="379:5" pos:end="379:6">mv</name><operator pos:start="379:7" pos:end="379:8">-&gt;</operator><name pos:start="379:9" pos:end="379:10">mv</name><index pos:start="379:11" pos:end="379:14">[<expr pos:start="379:12" pos:end="379:13"><name pos:start="379:12" pos:end="379:13">LX</name></expr>]</index></name> <operator pos:start="379:16" pos:end="379:16">=</operator> <name pos:start="379:18" pos:end="379:42"><name pos:start="379:18" pos:end="379:29">mvpcand_list</name><index pos:start="379:30" pos:end="379:42">[<expr pos:start="379:31" pos:end="379:41"><name pos:start="379:31" pos:end="379:41">mvp_lx_flag</name></expr>]</index></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
