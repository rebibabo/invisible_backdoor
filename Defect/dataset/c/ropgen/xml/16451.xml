<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16451.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">compute_pkt_fields2</name><parameter_list pos:start="1:31" pos:end="1:79">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:78"><decl pos:start="1:66" pos:end="1:78"><type pos:start="1:66" pos:end="1:78"><name pos:start="1:66" pos:end="1:73">AVPacket</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:78">pkt</name></decl></parameter>)</parameter_list><block pos:start="1:80" pos:end="147:1">{<block_content pos:start="3:5" pos:end="145:13">

    <decl_stmt pos:start="3:5" pos:end="3:74"><decl pos:start="3:5" pos:end="3:73"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">delay</name> <init pos:start="3:15" pos:end="3:73">= <expr pos:start="3:17" pos:end="3:73"><call pos:start="3:17" pos:end="3:73"><name pos:start="3:17" pos:end="3:21">FFMAX</name><argument_list pos:start="3:22" pos:end="3:73">(<argument pos:start="3:23" pos:end="3:45"><expr pos:start="3:23" pos:end="3:45"><name pos:start="3:23" pos:end="3:45"><name pos:start="3:23" pos:end="3:24">st</name><operator pos:start="3:25" pos:end="3:26">-&gt;</operator><name pos:start="3:27" pos:end="3:31">codec</name><operator pos:start="3:32" pos:end="3:33">-&gt;</operator><name pos:start="3:34" pos:end="3:45">has_b_frames</name></name></expr></argument>, <argument pos:start="3:48" pos:end="3:72"><expr pos:start="3:48" pos:end="3:72"><operator pos:start="3:48" pos:end="3:48">!</operator><operator pos:start="3:49" pos:end="3:49">!</operator><name pos:start="3:50" pos:end="3:72"><name pos:start="3:50" pos:end="3:51">st</name><operator pos:start="3:52" pos:end="3:53">-&gt;</operator><name pos:start="3:54" pos:end="3:58">codec</name><operator pos:start="3:59" pos:end="3:60">-&gt;</operator><name pos:start="3:61" pos:end="3:72">max_b_frames</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">num</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">den</name></decl>, <decl pos:start="5:19" pos:end="5:28"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:28">frame_size</name></decl>, <decl pos:start="5:31" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:31" pos:end="5:31">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="11:82"><expr pos:start="9:5" pos:end="11:81"><call pos:start="9:5" pos:end="11:81"><name pos:start="9:5" pos:end="9:11">av_dlog</name><argument_list pos:start="9:12" pos:end="11:81">(<argument pos:start="9:13" pos:end="9:13"><expr pos:start="9:13" pos:end="9:13"><name pos:start="9:13" pos:end="9:13">s</name></expr></argument>, <argument pos:start="9:16" pos:end="9:104"><expr pos:start="9:16" pos:end="9:104"><literal type="string" pos:start="9:16" pos:end="9:43">"compute_pkt_fields2: pts:%"</literal><name pos:start="9:44" pos:end="9:49">PRId64</name><literal type="string" pos:start="9:50" pos:end="9:57">" dts:%"</literal><name pos:start="9:58" pos:end="9:63">PRId64</name><literal type="string" pos:start="9:64" pos:end="9:75">" cur_dts:%"</literal><name pos:start="9:76" pos:end="9:81">PRId64</name><literal type="string" pos:start="9:82" pos:end="9:104">" b:%d size:%d st:%d\n"</literal></expr></argument>,

            <argument pos:start="11:13" pos:end="11:20"><expr pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:15">pkt</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:20">pts</name></name></expr></argument>, <argument pos:start="11:23" pos:end="11:30"><expr pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:25">pkt</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:30">dts</name></name></expr></argument>, <argument pos:start="11:33" pos:end="11:43"><expr pos:start="11:33" pos:end="11:43"><name pos:start="11:33" pos:end="11:43"><name pos:start="11:33" pos:end="11:34">st</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:43">cur_dts</name></name></expr></argument>, <argument pos:start="11:46" pos:end="11:50"><expr pos:start="11:46" pos:end="11:50"><name pos:start="11:46" pos:end="11:50">delay</name></expr></argument>, <argument pos:start="11:53" pos:end="11:61"><expr pos:start="11:53" pos:end="11:61"><name pos:start="11:53" pos:end="11:61"><name pos:start="11:53" pos:end="11:55">pkt</name><operator pos:start="11:56" pos:end="11:57">-&gt;</operator><name pos:start="11:58" pos:end="11:61">size</name></name></expr></argument>, <argument pos:start="11:64" pos:end="11:80"><expr pos:start="11:64" pos:end="11:80"><name pos:start="11:64" pos:end="11:80"><name pos:start="11:64" pos:end="11:66">pkt</name><operator pos:start="11:67" pos:end="11:68">-&gt;</operator><name pos:start="11:69" pos:end="11:80">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="block" pos:start="15:1" pos:end="17:33">/*    if(pkt-&gt;pts == AV_NOPTS_VALUE &amp;&amp; pkt-&gt;dts == AV_NOPTS_VALUE)

        return AVERROR(EINVAL);*/</comment>



    <comment type="block" pos:start="21:5" pos:end="21:24">/* duration field */</comment>

    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:11">pkt</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:21">duration</name></name> <operator pos:start="23:23" pos:end="23:24">==</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>)</condition> <block pos:start="23:29" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:9">

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><call pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:30">compute_frame_duration</name><argument_list pos:start="25:31" pos:end="25:57">(<argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:35">num</name></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:41">den</name></expr></argument>, <argument pos:start="25:44" pos:end="25:45"><expr pos:start="25:44" pos:end="25:45"><name pos:start="25:44" pos:end="25:45">st</name></expr></argument>, <argument pos:start="25:48" pos:end="25:51"><expr pos:start="25:48" pos:end="25:51"><name pos:start="25:48" pos:end="25:51">NULL</name></expr></argument>, <argument pos:start="25:54" pos:end="25:56"><expr pos:start="25:54" pos:end="25:56"><name pos:start="25:54" pos:end="25:56">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">den</name> <operator pos:start="27:17" pos:end="27:18">&amp;&amp;</operator> <name pos:start="27:20" pos:end="27:22">num</name></expr>)</condition> <block pos:start="27:25" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:139">

            <expr_stmt pos:start="29:13" pos:end="29:139"><expr pos:start="29:13" pos:end="29:138"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:15">pkt</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">duration</name></name> <operator pos:start="29:27" pos:end="29:27">=</operator> <call pos:start="29:29" pos:end="29:138"><name pos:start="29:29" pos:end="29:38">av_rescale</name><argument_list pos:start="29:39" pos:end="29:138">(<argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><literal type="number" pos:start="29:40" pos:end="29:40">1</literal></expr></argument>, <argument pos:start="29:43" pos:end="29:103"><expr pos:start="29:43" pos:end="29:103"><name pos:start="29:43" pos:end="29:45">num</name> <operator pos:start="29:47" pos:end="29:47">*</operator> <operator pos:start="29:49" pos:end="29:49">(</operator><name pos:start="29:50" pos:end="29:56">int64_t</name><operator pos:start="29:57" pos:end="29:57">)</operator><name pos:start="29:58" pos:end="29:74"><name pos:start="29:58" pos:end="29:59">st</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:70">time_base</name><operator pos:start="29:71" pos:end="29:71">.</operator><name pos:start="29:72" pos:end="29:74">den</name></name> <operator pos:start="29:76" pos:end="29:76">*</operator> <name pos:start="29:78" pos:end="29:103"><name pos:start="29:78" pos:end="29:79">st</name><operator pos:start="29:80" pos:end="29:81">-&gt;</operator><name pos:start="29:82" pos:end="29:86">codec</name><operator pos:start="29:87" pos:end="29:88">-&gt;</operator><name pos:start="29:89" pos:end="29:103">ticks_per_frame</name></name></expr></argument>, <argument pos:start="29:106" pos:end="29:137"><expr pos:start="29:106" pos:end="29:137"><name pos:start="29:106" pos:end="29:108">den</name> <operator pos:start="29:110" pos:end="29:110">*</operator> <operator pos:start="29:112" pos:end="29:112">(</operator><name pos:start="29:113" pos:end="29:119">int64_t</name><operator pos:start="29:120" pos:end="29:120">)</operator><name pos:start="29:121" pos:end="29:137"><name pos:start="29:121" pos:end="29:122">st</name><operator pos:start="29:123" pos:end="29:124">-&gt;</operator><name pos:start="29:125" pos:end="29:133">time_base</name><operator pos:start="29:134" pos:end="29:134">.</operator><name pos:start="29:135" pos:end="29:137">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:27"><if pos:start="37:5" pos:end="39:27">if<condition pos:start="37:7" pos:end="37:76">(<expr pos:start="37:8" pos:end="37:75"><name pos:start="37:8" pos:end="37:15"><name pos:start="37:8" pos:end="37:10">pkt</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">pts</name></name> <operator pos:start="37:17" pos:end="37:18">==</operator> <name pos:start="37:20" pos:end="37:33">AV_NOPTS_VALUE</name> <operator pos:start="37:35" pos:end="37:36">&amp;&amp;</operator> <name pos:start="37:38" pos:end="37:45"><name pos:start="37:38" pos:end="37:40">pkt</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:45">dts</name></name> <operator pos:start="37:47" pos:end="37:48">!=</operator> <name pos:start="37:50" pos:end="37:63">AV_NOPTS_VALUE</name> <operator pos:start="37:65" pos:end="37:66">&amp;&amp;</operator> <name pos:start="37:68" pos:end="37:72">delay</name><operator pos:start="37:73" pos:end="37:74">==</operator><literal type="number" pos:start="37:75" pos:end="37:75">0</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:27"><block_content pos:start="39:9" pos:end="39:27">

        <expr_stmt pos:start="39:9" pos:end="39:27"><expr pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">pkt</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:16">pts</name></name><operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:26"><name pos:start="39:19" pos:end="39:21">pkt</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:26">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="43:5" pos:end="43:70">//XXX/FIXME this is a temporary hack until all encoders output pts</comment>

    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if<condition pos:start="45:7" pos:end="45:93">(<expr pos:start="45:8" pos:end="45:92"><operator pos:start="45:8" pos:end="45:8">(</operator><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">pts</name></name> <operator pos:start="45:18" pos:end="45:19">==</operator> <literal type="number" pos:start="45:21" pos:end="45:21">0</literal> <operator pos:start="45:23" pos:end="45:24">||</operator> <name pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:28">pkt</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:33">pts</name></name> <operator pos:start="45:35" pos:end="45:36">==</operator> <name pos:start="45:38" pos:end="45:51">AV_NOPTS_VALUE</name><operator pos:start="45:52" pos:end="45:52">)</operator> <operator pos:start="45:54" pos:end="45:55">&amp;&amp;</operator> <name pos:start="45:57" pos:end="45:64"><name pos:start="45:57" pos:end="45:59">pkt</name><operator pos:start="45:60" pos:end="45:61">-&gt;</operator><name pos:start="45:62" pos:end="45:64">dts</name></name> <operator pos:start="45:66" pos:end="45:67">==</operator> <name pos:start="45:69" pos:end="45:82">AV_NOPTS_VALUE</name> <operator pos:start="45:84" pos:end="45:85">&amp;&amp;</operator> <operator pos:start="45:87" pos:end="45:87">!</operator><name pos:start="45:88" pos:end="45:92">delay</name></expr>)</condition><block pos:start="45:94" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:30">

        <expr_stmt pos:start="47:9" pos:end="51:30"><expr pos:start="47:9" pos:end="51:29"><name pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:11">pkt</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">dts</name></name><operator pos:start="47:17" pos:end="47:17">=</operator>

<comment type="line" pos:start="49:1" pos:end="49:32">//        pkt-&gt;pts= st-&gt;cur_dts;</comment>

        <name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:11">pkt</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:16">pts</name></name><operator pos:start="51:17" pos:end="51:17">=</operator> <name pos:start="51:19" pos:end="51:29"><name pos:start="51:19" pos:end="51:20">st</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:25">pts</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:29">val</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="57:5" pos:end="57:28">//calculate dts from pts</comment>

    <if_stmt pos:start="59:5" pos:end="75:5"><if pos:start="59:5" pos:end="75:5">if<condition pos:start="59:7" pos:end="59:94">(<expr pos:start="59:8" pos:end="59:93"><name pos:start="59:8" pos:end="59:15"><name pos:start="59:8" pos:end="59:10">pkt</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:15">pts</name></name> <operator pos:start="59:17" pos:end="59:18">!=</operator> <name pos:start="59:20" pos:end="59:33">AV_NOPTS_VALUE</name> <operator pos:start="59:35" pos:end="59:36">&amp;&amp;</operator> <name pos:start="59:38" pos:end="59:45"><name pos:start="59:38" pos:end="59:40">pkt</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:45">dts</name></name> <operator pos:start="59:47" pos:end="59:48">==</operator> <name pos:start="59:50" pos:end="59:63">AV_NOPTS_VALUE</name> <operator pos:start="59:65" pos:end="59:66">&amp;&amp;</operator> <name pos:start="59:68" pos:end="59:72">delay</name> <operator pos:start="59:74" pos:end="59:75">&lt;=</operator> <name pos:start="59:77" pos:end="59:93">MAX_REORDER_DELAY</name></expr>)</condition><block pos:start="59:95" pos:end="75:5">{<block_content pos:start="61:9" pos:end="73:36">

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:22">pts_buffer</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><literal type="number" pos:start="61:24" pos:end="61:24">0</literal></expr>]</index></name><operator pos:start="61:26" pos:end="61:26">=</operator> <name pos:start="61:28" pos:end="61:35"><name pos:start="61:28" pos:end="61:30">pkt</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:35">pts</name></name></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="65:70">for<control pos:start="63:12" pos:end="63:71">(<init pos:start="63:13" pos:end="63:16"><expr pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:13">i</name><operator pos:start="63:14" pos:end="63:14">=</operator><literal type="number" pos:start="63:15" pos:end="63:15">1</literal></expr>;</init> <condition pos:start="63:18" pos:end="63:66"><expr pos:start="63:18" pos:end="63:65"><name pos:start="63:18" pos:end="63:18">i</name><operator pos:start="63:19" pos:end="63:19">&lt;</operator><name pos:start="63:20" pos:end="63:24">delay</name><operator pos:start="63:25" pos:end="63:25">+</operator><literal type="number" pos:start="63:26" pos:end="63:26">1</literal> <operator pos:start="63:28" pos:end="63:29">&amp;&amp;</operator> <name pos:start="63:31" pos:end="63:47"><name pos:start="63:31" pos:end="63:32">st</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:44">pts_buffer</name><index pos:start="63:45" pos:end="63:47">[<expr pos:start="63:46" pos:end="63:46"><name pos:start="63:46" pos:end="63:46">i</name></expr>]</index></name> <operator pos:start="63:49" pos:end="63:50">==</operator> <name pos:start="63:52" pos:end="63:65">AV_NOPTS_VALUE</name></expr>;</condition> <incr pos:start="63:68" pos:end="63:70"><expr pos:start="63:68" pos:end="63:70"><name pos:start="63:68" pos:end="63:68">i</name><operator pos:start="63:69" pos:end="63:70">++</operator></expr></incr>)</control><block type="pseudo" pos:start="65:13" pos:end="65:70"><block_content pos:start="65:13" pos:end="65:70">

            <expr_stmt pos:start="65:13" pos:end="65:70"><expr pos:start="65:13" pos:end="65:69"><name pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:14">st</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:26">pts_buffer</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">i</name></expr>]</index></name><operator pos:start="65:30" pos:end="65:30">=</operator> <name pos:start="65:32" pos:end="65:39"><name pos:start="65:32" pos:end="65:34">pkt</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:39">pts</name></name> <operator pos:start="65:41" pos:end="65:41">+</operator> <operator pos:start="65:43" pos:end="65:43">(</operator><name pos:start="65:44" pos:end="65:44">i</name><operator pos:start="65:45" pos:end="65:45">-</operator><name pos:start="65:46" pos:end="65:50">delay</name><operator pos:start="65:51" pos:end="65:51">-</operator><literal type="number" pos:start="65:52" pos:end="65:52">1</literal><operator pos:start="65:53" pos:end="65:53">)</operator> <operator pos:start="65:55" pos:end="65:55">*</operator> <name pos:start="65:57" pos:end="65:69"><name pos:start="65:57" pos:end="65:59">pkt</name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:69">duration</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="67:9" pos:end="69:68">for<control pos:start="67:12" pos:end="67:73">(<init pos:start="67:13" pos:end="67:16"><expr pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:13">i</name><operator pos:start="67:14" pos:end="67:14">=</operator><literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</init> <condition pos:start="67:18" pos:end="67:68"><expr pos:start="67:18" pos:end="67:67"><name pos:start="67:18" pos:end="67:47"><name pos:start="67:18" pos:end="67:18">i</name><argument_list type="generic" pos:start="67:19" pos:end="67:47">&lt;<argument pos:start="67:20" pos:end="67:45"><expr pos:start="67:20" pos:end="67:45"><name pos:start="67:20" pos:end="67:24">delay</name> <operator pos:start="67:26" pos:end="67:27">&amp;&amp;</operator> <name pos:start="67:29" pos:end="67:45"><name pos:start="67:29" pos:end="67:30">st</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:42">pts_buffer</name><index pos:start="67:43" pos:end="67:45">[<expr pos:start="67:44" pos:end="67:44"><name pos:start="67:44" pos:end="67:44">i</name></expr>]</index></name></expr></argument> &gt;</argument_list></name> <name pos:start="67:49" pos:end="67:67"><name pos:start="67:49" pos:end="67:50">st</name><operator pos:start="67:51" pos:end="67:52">-&gt;</operator><name pos:start="67:53" pos:end="67:62">pts_buffer</name><index pos:start="67:63" pos:end="67:67">[<expr pos:start="67:64" pos:end="67:66"><name pos:start="67:64" pos:end="67:64">i</name><operator pos:start="67:65" pos:end="67:65">+</operator><literal type="number" pos:start="67:66" pos:end="67:66">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="67:70" pos:end="67:72"><expr pos:start="67:70" pos:end="67:72"><name pos:start="67:70" pos:end="67:70">i</name><operator pos:start="67:71" pos:end="67:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:13" pos:end="69:68"><block_content pos:start="69:13" pos:end="69:68">

            <expr_stmt pos:start="69:13" pos:end="69:68"><expr pos:start="69:13" pos:end="69:67"><call pos:start="69:13" pos:end="69:67"><name pos:start="69:13" pos:end="69:18">FFSWAP</name><argument_list pos:start="69:19" pos:end="69:67">(<argument pos:start="69:20" pos:end="69:26"><expr pos:start="69:20" pos:end="69:26"><name pos:start="69:20" pos:end="69:26">int64_t</name></expr></argument>, <argument pos:start="69:29" pos:end="69:45"><expr pos:start="69:29" pos:end="69:45"><name pos:start="69:29" pos:end="69:45"><name pos:start="69:29" pos:end="69:30">st</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:42">pts_buffer</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><name pos:start="69:44" pos:end="69:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="69:48" pos:end="69:66"><expr pos:start="69:48" pos:end="69:66"><name pos:start="69:48" pos:end="69:66"><name pos:start="69:48" pos:end="69:49">st</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:61">pts_buffer</name><index pos:start="69:62" pos:end="69:66">[<expr pos:start="69:63" pos:end="69:65"><name pos:start="69:63" pos:end="69:63">i</name><operator pos:start="69:64" pos:end="69:64">+</operator><literal type="number" pos:start="69:65" pos:end="69:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">pkt</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:16">dts</name></name><operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:35"><name pos:start="73:19" pos:end="73:20">st</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:32">pts_buffer</name><index pos:start="73:33" pos:end="73:35">[<expr pos:start="73:34" pos:end="73:34"><literal type="number" pos:start="73:34" pos:end="73:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="89:5"><if pos:start="79:5" pos:end="89:5">if<condition pos:start="79:7" pos:end="79:154">(<expr pos:start="79:8" pos:end="79:153"><name pos:start="79:8" pos:end="79:18"><name pos:start="79:8" pos:end="79:9">st</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">cur_dts</name></name> <operator pos:start="79:20" pos:end="79:21">&amp;&amp;</operator> <name pos:start="79:23" pos:end="79:33"><name pos:start="79:23" pos:end="79:24">st</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:33">cur_dts</name></name> <operator pos:start="79:35" pos:end="79:36">!=</operator> <name pos:start="79:38" pos:end="79:51">AV_NOPTS_VALUE</name> <operator pos:start="79:53" pos:end="79:54">&amp;&amp;</operator> <operator pos:start="79:56" pos:end="79:56">(</operator><operator pos:start="79:57" pos:end="79:57">(</operator><operator pos:start="79:58" pos:end="79:58">!</operator><operator pos:start="79:59" pos:end="79:59">(</operator><name pos:start="79:60" pos:end="79:76"><name pos:start="79:60" pos:end="79:60">s</name><operator pos:start="79:61" pos:end="79:62">-&gt;</operator><name pos:start="79:63" pos:end="79:69">oformat</name><operator pos:start="79:70" pos:end="79:71">-&gt;</operator><name pos:start="79:72" pos:end="79:76">flags</name></name> <operator pos:start="79:78" pos:end="79:78">&amp;</operator> <name pos:start="79:80" pos:end="79:97">AVFMT_TS_NONSTRICT</name><operator pos:start="79:98" pos:end="79:98">)</operator> <operator pos:start="79:100" pos:end="79:101">&amp;&amp;</operator> <name pos:start="79:103" pos:end="79:113"><name pos:start="79:103" pos:end="79:104">st</name><operator pos:start="79:105" pos:end="79:106">-&gt;</operator><name pos:start="79:107" pos:end="79:113">cur_dts</name></name> <operator pos:start="79:115" pos:end="79:116">&gt;=</operator> <name pos:start="79:118" pos:end="79:125"><name pos:start="79:118" pos:end="79:120">pkt</name><operator pos:start="79:121" pos:end="79:122">-&gt;</operator><name pos:start="79:123" pos:end="79:125">dts</name></name><operator pos:start="79:126" pos:end="79:126">)</operator> <operator pos:start="79:128" pos:end="79:129">||</operator> <name pos:start="79:131" pos:end="79:141"><name pos:start="79:131" pos:end="79:132">st</name><operator pos:start="79:133" pos:end="79:134">-&gt;</operator><name pos:start="79:135" pos:end="79:141">cur_dts</name></name> <operator pos:start="79:143" pos:end="79:143">&gt;</operator> <name pos:start="79:145" pos:end="79:152"><name pos:start="79:145" pos:end="79:147">pkt</name><operator pos:start="79:148" pos:end="79:149">-&gt;</operator><name pos:start="79:150" pos:end="79:152">dts</name></name><operator pos:start="79:153" pos:end="79:153">)</operator></expr>)</condition><block pos:start="79:155" pos:end="89:5">{<block_content pos:start="81:9" pos:end="87:31">

        <expr_stmt pos:start="81:9" pos:end="85:49"><expr pos:start="81:9" pos:end="85:48"><call pos:start="81:9" pos:end="85:48"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="85:48">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">s</name></expr></argument>, <argument pos:start="81:19" pos:end="81:30"><expr pos:start="81:19" pos:end="81:30"><name pos:start="81:19" pos:end="81:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="83:16" pos:end="83:127"><expr pos:start="83:16" pos:end="83:127"><literal type="string" pos:start="83:16" pos:end="83:104">"Application provided invalid, non monotonically increasing dts to muxer in stream %d: %"</literal><name pos:start="83:105" pos:end="83:110">PRId64</name><literal type="string" pos:start="83:111" pos:end="83:117">" &gt;= %"</literal><name pos:start="83:118" pos:end="83:123">PRId64</name><literal type="string" pos:start="83:124" pos:end="83:127">"\n"</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:24"><expr pos:start="85:16" pos:end="85:24"><name pos:start="85:16" pos:end="85:24"><name pos:start="85:16" pos:end="85:17">st</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:24">index</name></name></expr></argument>, <argument pos:start="85:27" pos:end="85:37"><expr pos:start="85:27" pos:end="85:37"><name pos:start="85:27" pos:end="85:37"><name pos:start="85:27" pos:end="85:28">st</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:37">cur_dts</name></name></expr></argument>, <argument pos:start="85:40" pos:end="85:47"><expr pos:start="85:40" pos:end="85:47"><name pos:start="85:40" pos:end="85:47"><name pos:start="85:40" pos:end="85:42">pkt</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:47">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:31">return <expr pos:start="87:16" pos:end="87:30"><call pos:start="87:16" pos:end="87:30"><name pos:start="87:16" pos:end="87:22">AVERROR</name><argument_list pos:start="87:23" pos:end="87:30">(<argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><name pos:start="87:24" pos:end="87:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:87">(<expr pos:start="91:8" pos:end="91:86"><name pos:start="91:8" pos:end="91:15"><name pos:start="91:8" pos:end="91:10">pkt</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:15">dts</name></name> <operator pos:start="91:17" pos:end="91:18">!=</operator> <name pos:start="91:20" pos:end="91:33">AV_NOPTS_VALUE</name> <operator pos:start="91:35" pos:end="91:36">&amp;&amp;</operator> <name pos:start="91:38" pos:end="91:45"><name pos:start="91:38" pos:end="91:40">pkt</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:45">pts</name></name> <operator pos:start="91:47" pos:end="91:48">!=</operator> <name pos:start="91:50" pos:end="91:63">AV_NOPTS_VALUE</name> <operator pos:start="91:65" pos:end="91:66">&amp;&amp;</operator> <name pos:start="91:68" pos:end="91:75"><name pos:start="91:68" pos:end="91:70">pkt</name><operator pos:start="91:71" pos:end="91:72">-&gt;</operator><name pos:start="91:73" pos:end="91:75">pts</name></name> <operator pos:start="91:77" pos:end="91:77">&lt;</operator> <name pos:start="91:79" pos:end="91:86"><name pos:start="91:79" pos:end="91:81">pkt</name><operator pos:start="91:82" pos:end="91:83">-&gt;</operator><name pos:start="91:84" pos:end="91:86">dts</name></name></expr>)</condition><block pos:start="91:88" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:31">

        <expr_stmt pos:start="93:9" pos:end="93:71"><expr pos:start="93:9" pos:end="93:70"><call pos:start="93:9" pos:end="93:70"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:70">(<argument pos:start="93:16" pos:end="93:16"><expr pos:start="93:16" pos:end="93:16"><name pos:start="93:16" pos:end="93:16">s</name></expr></argument>, <argument pos:start="93:19" pos:end="93:30"><expr pos:start="93:19" pos:end="93:30"><name pos:start="93:19" pos:end="93:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:33" pos:end="93:58"><expr pos:start="93:33" pos:end="93:58"><literal type="string" pos:start="93:33" pos:end="93:58">"pts &lt; dts in stream %d\n"</literal></expr></argument>, <argument pos:start="93:61" pos:end="93:69"><expr pos:start="93:61" pos:end="93:69"><name pos:start="93:61" pos:end="93:69"><name pos:start="93:61" pos:end="93:62">st</name><operator pos:start="93:63" pos:end="93:64">-&gt;</operator><name pos:start="93:65" pos:end="93:69">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:31">return <expr pos:start="95:16" pos:end="95:30"><call pos:start="95:16" pos:end="95:30"><name pos:start="95:16" pos:end="95:22">AVERROR</name><argument_list pos:start="95:23" pos:end="95:30">(<argument pos:start="95:24" pos:end="95:29"><expr pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="101:1" pos:end="101:101">//    av_log(s, AV_LOG_DEBUG, "av_write_frame: pts2:%"PRId64" dts2:%"PRId64"\n", pkt-&gt;pts, pkt-&gt;dts);</comment>

    <expr_stmt pos:start="103:5" pos:end="103:26"><expr pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:6">st</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:15">cur_dts</name></name><operator pos:start="103:16" pos:end="103:16">=</operator> <name pos:start="103:18" pos:end="103:25"><name pos:start="103:18" pos:end="103:20">pkt</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:25">dts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:26"><expr pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:15"><name pos:start="105:5" pos:end="105:6">st</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:11">pts</name><operator pos:start="105:12" pos:end="105:12">.</operator><name pos:start="105:13" pos:end="105:15">val</name></name><operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:25"><name pos:start="105:18" pos:end="105:20">pkt</name><operator pos:start="105:21" pos:end="105:22">-&gt;</operator><name pos:start="105:23" pos:end="105:25">dts</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:20">/* update pts */</comment>

    <switch pos:start="111:5" pos:end="143:5">switch <condition pos:start="111:12" pos:end="111:34">(<expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:14">st</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:21">codec</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:33">codec_type</name></name></expr>)</condition> <block pos:start="111:36" pos:end="143:5">{<block_content pos:start="113:5" pos:end="141:14">

    <case pos:start="113:5" pos:end="113:28">case <expr pos:start="113:10" pos:end="113:27"><name pos:start="113:10" pos:end="113:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:64"><expr pos:start="115:9" pos:end="115:63"><name pos:start="115:9" pos:end="115:18">frame_size</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <call pos:start="115:22" pos:end="115:63"><name pos:start="115:22" pos:end="115:41">get_audio_frame_size</name><argument_list pos:start="115:42" pos:end="115:63">(<argument pos:start="115:43" pos:end="115:51"><expr pos:start="115:43" pos:end="115:51"><name pos:start="115:43" pos:end="115:51"><name pos:start="115:43" pos:end="115:44">st</name><operator pos:start="115:45" pos:end="115:46">-&gt;</operator><name pos:start="115:47" pos:end="115:51">codec</name></name></expr></argument>, <argument pos:start="115:54" pos:end="115:62"><expr pos:start="115:54" pos:end="115:62"><name pos:start="115:54" pos:end="115:62"><name pos:start="115:54" pos:end="115:56">pkt</name><operator pos:start="115:57" pos:end="115:58">-&gt;</operator><name pos:start="115:59" pos:end="115:62">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="119:9" pos:end="123:54">/* HACK/FIXME, we skip the initial 0 size packets as they are most

           likely equal to the encoder delay, but it would be better if we

           had the real timestamps from the encoder */</comment>

        <if_stmt pos:start="125:9" pos:end="129:9"><if pos:start="125:9" pos:end="129:9">if <condition pos:start="125:12" pos:end="125:89">(<expr pos:start="125:13" pos:end="125:88"><name pos:start="125:13" pos:end="125:22">frame_size</name> <operator pos:start="125:24" pos:end="125:25">&gt;=</operator> <literal type="number" pos:start="125:27" pos:end="125:27">0</literal> <operator pos:start="125:29" pos:end="125:30">&amp;&amp;</operator> <operator pos:start="125:32" pos:end="125:32">(</operator><name pos:start="125:33" pos:end="125:41"><name pos:start="125:33" pos:end="125:35">pkt</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:41">size</name></name> <operator pos:start="125:43" pos:end="125:44">||</operator> <name pos:start="125:46" pos:end="125:56"><name pos:start="125:46" pos:end="125:47">st</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:52">pts</name><operator pos:start="125:53" pos:end="125:53">.</operator><name pos:start="125:54" pos:end="125:56">num</name></name><operator pos:start="125:57" pos:end="125:58">!=</operator><name pos:start="125:59" pos:end="125:69"><name pos:start="125:59" pos:end="125:60">st</name><operator pos:start="125:61" pos:end="125:62">-&gt;</operator><name pos:start="125:63" pos:end="125:65">pts</name><operator pos:start="125:66" pos:end="125:66">.</operator><name pos:start="125:67" pos:end="125:69">den</name></name><operator pos:start="125:70" pos:end="125:71">&gt;&gt;</operator><literal type="number" pos:start="125:72" pos:end="125:72">1</literal> <operator pos:start="125:74" pos:end="125:75">||</operator> <name pos:start="125:77" pos:end="125:87"><name pos:start="125:77" pos:end="125:78">st</name><operator pos:start="125:79" pos:end="125:80">-&gt;</operator><name pos:start="125:81" pos:end="125:83">pts</name><operator pos:start="125:84" pos:end="125:84">.</operator><name pos:start="125:85" pos:end="125:87">val</name></name><operator pos:start="125:88" pos:end="125:88">)</operator></expr>)</condition> <block pos:start="125:91" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:72">

            <expr_stmt pos:start="127:13" pos:end="127:72"><expr pos:start="127:13" pos:end="127:71"><call pos:start="127:13" pos:end="127:71"><name pos:start="127:13" pos:end="127:20">frac_add</name><argument_list pos:start="127:21" pos:end="127:71">(<argument pos:start="127:22" pos:end="127:29"><expr pos:start="127:22" pos:end="127:29"><operator pos:start="127:22" pos:end="127:22">&amp;</operator><name pos:start="127:23" pos:end="127:29"><name pos:start="127:23" pos:end="127:24">st</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:29">pts</name></name></expr></argument>, <argument pos:start="127:32" pos:end="127:70"><expr pos:start="127:32" pos:end="127:70"><operator pos:start="127:32" pos:end="127:32">(</operator><name pos:start="127:33" pos:end="127:39">int64_t</name><operator pos:start="127:40" pos:end="127:40">)</operator><name pos:start="127:41" pos:end="127:57"><name pos:start="127:41" pos:end="127:42">st</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:53">time_base</name><operator pos:start="127:54" pos:end="127:54">.</operator><name pos:start="127:55" pos:end="127:57">den</name></name> <operator pos:start="127:59" pos:end="127:59">*</operator> <name pos:start="127:61" pos:end="127:70">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    <case pos:start="133:5" pos:end="133:28">case <expr pos:start="133:10" pos:end="133:27"><name pos:start="133:10" pos:end="133:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="135:9" pos:end="135:82"><expr pos:start="135:9" pos:end="135:81"><call pos:start="135:9" pos:end="135:81"><name pos:start="135:9" pos:end="135:16">frac_add</name><argument_list pos:start="135:17" pos:end="135:81">(<argument pos:start="135:18" pos:end="135:25"><expr pos:start="135:18" pos:end="135:25"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:25"><name pos:start="135:19" pos:end="135:20">st</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:25">pts</name></name></expr></argument>, <argument pos:start="135:28" pos:end="135:80"><expr pos:start="135:28" pos:end="135:80"><operator pos:start="135:28" pos:end="135:28">(</operator><name pos:start="135:29" pos:end="135:35">int64_t</name><operator pos:start="135:36" pos:end="135:36">)</operator><name pos:start="135:37" pos:end="135:53"><name pos:start="135:37" pos:end="135:38">st</name><operator pos:start="135:39" pos:end="135:40">-&gt;</operator><name pos:start="135:41" pos:end="135:49">time_base</name><operator pos:start="135:50" pos:end="135:50">.</operator><name pos:start="135:51" pos:end="135:53">den</name></name> <operator pos:start="135:55" pos:end="135:55">*</operator> <name pos:start="135:57" pos:end="135:80"><name pos:start="135:57" pos:end="135:58">st</name><operator pos:start="135:59" pos:end="135:60">-&gt;</operator><name pos:start="135:61" pos:end="135:65">codec</name><operator pos:start="135:66" pos:end="135:67">-&gt;</operator><name pos:start="135:68" pos:end="135:76">time_base</name><operator pos:start="135:77" pos:end="135:77">.</operator><name pos:start="135:78" pos:end="135:80">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <default pos:start="139:5" pos:end="139:12">default:</default>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="145:5" pos:end="145:13">return <expr pos:start="145:12" pos:end="145:12"><literal type="number" pos:start="145:12" pos:end="145:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
