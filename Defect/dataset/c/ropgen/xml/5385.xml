<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5385.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vc1_decode_frame</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:40"><decl pos:start="5:29" pos:end="5:40"><type pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:40">buf</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:54"><decl pos:start="5:43" pos:end="5:54"><type pos:start="5:43" pos:end="5:54"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="257:1">{<block_content pos:start="9:5" pos:end="255:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VC1Context</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">v</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">MpegEncContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:29">= <expr pos:start="11:25" pos:end="11:29"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:26">v</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">pict</name> <init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">buf2</name> <init pos:start="15:19" pos:end="15:24">= <expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="21:5" pos:end="41:5"><if pos:start="21:5" pos:end="41:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:16">buf_size</name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>)</condition> <block pos:start="21:24" pos:end="41:5">{<block_content pos:start="25:9" pos:end="39:17">

        <comment type="block" pos:start="23:9" pos:end="23:43">/* special case for last picture */</comment>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:51">(<expr pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">low_delay</name></name><operator pos:start="25:25" pos:end="25:26">==</operator><literal type="number" pos:start="25:27" pos:end="25:27">0</literal> <operator pos:start="25:29" pos:end="25:30">&amp;&amp;</operator> <name pos:start="25:32" pos:end="25:50"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="25:53" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:41">

            <expr_stmt pos:start="27:13" pos:end="27:50"><expr pos:start="27:13" pos:end="27:49"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:17">pict</name><operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">*</operator><operator pos:start="27:21" pos:end="27:21">(</operator><name pos:start="27:22" pos:end="27:28">AVFrame</name><operator pos:start="27:29" pos:end="27:29">*</operator><operator pos:start="27:30" pos:end="27:30">)</operator><name pos:start="27:31" pos:end="27:49"><name pos:start="27:31" pos:end="27:31">s</name><operator pos:start="27:32" pos:end="27:33">-&gt;</operator><name pos:start="27:34" pos:end="27:49">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:38"><expr pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:31">next_picture_ptr</name></name><operator pos:start="29:32" pos:end="29:32">=</operator> <name pos:start="29:34" pos:end="29:37">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="33:13" pos:end="33:41"><expr pos:start="33:13" pos:end="33:40"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:22">data_size</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <sizeof pos:start="33:26" pos:end="33:40">sizeof<argument_list pos:start="33:32" pos:end="33:40">(<argument pos:start="33:33" pos:end="33:39"><expr pos:start="33:33" pos:end="33:39"><name pos:start="33:33" pos:end="33:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="45:5" pos:end="45:108">//we need to set current_picture_ptr before reading the header, otherwise we cant store anyting im there</comment>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:71">(<expr pos:start="47:8" pos:end="47:70"><name pos:start="47:8" pos:end="47:29"><name pos:start="47:8" pos:end="47:8">s</name><operator pos:start="47:9" pos:end="47:10">-&gt;</operator><name pos:start="47:11" pos:end="47:29">current_picture_ptr</name></name><operator pos:start="47:30" pos:end="47:31">==</operator><name pos:start="47:32" pos:end="47:35">NULL</name> <operator pos:start="47:37" pos:end="47:38">||</operator> <name pos:start="47:40" pos:end="47:70"><name pos:start="47:40" pos:end="47:40">s</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:61">current_picture_ptr</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:67">data</name><index pos:start="47:68" pos:end="47:70">[<expr pos:start="47:69" pos:end="47:69"><literal type="number" pos:start="47:69" pos:end="47:69">0</literal></expr>]</index></name></expr>)</condition><block pos:start="47:72" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:47">

        <decl_stmt pos:start="49:9" pos:end="49:44"><decl pos:start="49:9" pos:end="49:43"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:13">i</name><init pos:start="49:14" pos:end="49:43">= <expr pos:start="49:16" pos:end="49:43"><call pos:start="49:16" pos:end="49:43"><name pos:start="49:16" pos:end="49:37">ff_find_unused_picture</name><argument_list pos:start="49:38" pos:end="49:43">(<argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><name pos:start="49:39" pos:end="49:39">s</name></expr></argument>, <argument pos:start="49:42" pos:end="49:42"><expr pos:start="49:42" pos:end="49:42"><literal type="number" pos:start="49:42" pos:end="49:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:30">current_picture_ptr</name></name><operator pos:start="51:31" pos:end="51:31">=</operator> <operator pos:start="51:33" pos:end="51:33">&amp;</operator><name pos:start="51:34" pos:end="51:46"><name pos:start="51:34" pos:end="51:34">s</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:43">picture</name><index pos:start="51:44" pos:end="51:46">[<expr pos:start="51:45" pos:end="51:45"><name pos:start="51:45" pos:end="51:45">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:9">avctx</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:23">has_b_frames</name></name><operator pos:start="57:24" pos:end="57:24">=</operator> <operator pos:start="57:26" pos:end="57:26">!</operator><name pos:start="57:27" pos:end="57:38"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:38">low_delay</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="61:5" pos:end="61:53">//for advanced profile we need to unescape buffer</comment>

    <if_stmt pos:start="63:5" pos:end="89:47"><if pos:start="63:5" pos:end="87:5">if <condition pos:start="63:8" pos:end="63:40">(<expr pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:13">avctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:23">codec_id</name></name> <operator pos:start="63:25" pos:end="63:26">==</operator> <name pos:start="63:28" pos:end="63:39">CODEC_ID_VC1</name></expr>)</condition> <block pos:start="63:42" pos:end="87:5">{<block_content pos:start="65:9" pos:end="85:49">

        <decl_stmt pos:start="65:9" pos:end="65:25"><decl pos:start="65:9" pos:end="65:13"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:13">i</name></decl>, <decl pos:start="65:16" pos:end="65:24"><type ref="prev" pos:start="65:9" pos:end="65:11"/><name pos:start="65:16" pos:end="65:24">buf_size2</name></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:12">buf2</name> <operator pos:start="67:14" pos:end="67:14">=</operator> <call pos:start="67:16" pos:end="67:65"><name pos:start="67:16" pos:end="67:24">av_malloc</name><argument_list pos:start="67:25" pos:end="67:65">(<argument pos:start="67:26" pos:end="67:64"><expr pos:start="67:26" pos:end="67:64"><name pos:start="67:26" pos:end="67:33">buf_size</name> <operator pos:start="67:35" pos:end="67:35">+</operator> <name pos:start="67:37" pos:end="67:64">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:17">buf_size2</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>;</expr_stmt>

        <for pos:start="71:9" pos:end="83:9">for<control pos:start="71:12" pos:end="71:37">(<init pos:start="71:13" pos:end="71:18"><expr pos:start="71:13" pos:end="71:17"><name pos:start="71:13" pos:end="71:13">i</name> <operator pos:start="71:15" pos:end="71:15">=</operator> <literal type="number" pos:start="71:17" pos:end="71:17">0</literal></expr>;</init> <condition pos:start="71:20" pos:end="71:32"><expr pos:start="71:20" pos:end="71:31"><name pos:start="71:20" pos:end="71:20">i</name> <operator pos:start="71:22" pos:end="71:22">&lt;</operator> <name pos:start="71:24" pos:end="71:31">buf_size</name></expr>;</condition> <incr pos:start="71:34" pos:end="71:36"><expr pos:start="71:34" pos:end="71:36"><name pos:start="71:34" pos:end="71:34">i</name><operator pos:start="71:35" pos:end="71:36">++</operator></expr></incr>)</control> <block pos:start="71:39" pos:end="83:9">{<block_content pos:start="73:13" pos:end="81:43">

            <if_stmt pos:start="73:13" pos:end="81:43"><if pos:start="73:13" pos:end="79:13">if<condition pos:start="73:15" pos:end="73:97">(<expr pos:start="73:16" pos:end="73:96"><name pos:start="73:16" pos:end="73:21"><name pos:start="73:16" pos:end="73:18">buf</name><index pos:start="73:19" pos:end="73:21">[<expr pos:start="73:20" pos:end="73:20"><name pos:start="73:20" pos:end="73:20">i</name></expr>]</index></name> <operator pos:start="73:23" pos:end="73:24">==</operator> <literal type="number" pos:start="73:26" pos:end="73:26">3</literal> <operator pos:start="73:28" pos:end="73:29">&amp;&amp;</operator> <name pos:start="73:31" pos:end="73:31">i</name> <operator pos:start="73:33" pos:end="73:34">&gt;=</operator> <literal type="number" pos:start="73:36" pos:end="73:36">2</literal> <operator pos:start="73:38" pos:end="73:39">&amp;&amp;</operator> <operator pos:start="73:41" pos:end="73:41">!</operator><name pos:start="73:42" pos:end="73:49"><name pos:start="73:42" pos:end="73:44">buf</name><index pos:start="73:45" pos:end="73:49">[<expr pos:start="73:46" pos:end="73:48"><name pos:start="73:46" pos:end="73:46">i</name><operator pos:start="73:47" pos:end="73:47">-</operator><literal type="number" pos:start="73:48" pos:end="73:48">1</literal></expr>]</index></name> <operator pos:start="73:51" pos:end="73:52">&amp;&amp;</operator> <operator pos:start="73:54" pos:end="73:54">!</operator><name pos:start="73:55" pos:end="73:62"><name pos:start="73:55" pos:end="73:57">buf</name><index pos:start="73:58" pos:end="73:62">[<expr pos:start="73:59" pos:end="73:61"><name pos:start="73:59" pos:end="73:59">i</name><operator pos:start="73:60" pos:end="73:60">-</operator><literal type="number" pos:start="73:61" pos:end="73:61">2</literal></expr>]</index></name> <operator pos:start="73:64" pos:end="73:65">&amp;&amp;</operator> <name pos:start="73:67" pos:end="73:67">i</name> <operator pos:start="73:69" pos:end="73:69">&lt;</operator> <name pos:start="73:71" pos:end="73:78">buf_size</name><operator pos:start="73:79" pos:end="73:79">-</operator><literal type="number" pos:start="73:80" pos:end="73:80">1</literal> <operator pos:start="73:82" pos:end="73:83">&amp;&amp;</operator> <name pos:start="73:85" pos:end="73:92"><name pos:start="73:85" pos:end="73:87">buf</name><index pos:start="73:88" pos:end="73:92">[<expr pos:start="73:89" pos:end="73:91"><name pos:start="73:89" pos:end="73:89">i</name><operator pos:start="73:90" pos:end="73:90">+</operator><literal type="number" pos:start="73:91" pos:end="73:91">1</literal></expr>]</index></name> <operator pos:start="73:94" pos:end="73:94">&lt;</operator> <literal type="number" pos:start="73:96" pos:end="73:96">4</literal></expr>)</condition> <block pos:start="73:99" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:20">

                <expr_stmt pos:start="75:17" pos:end="75:45"><expr pos:start="75:17" pos:end="75:44"><name pos:start="75:17" pos:end="75:33"><name pos:start="75:17" pos:end="75:20">buf2</name><index pos:start="75:21" pos:end="75:33">[<expr pos:start="75:22" pos:end="75:32"><name pos:start="75:22" pos:end="75:30">buf_size2</name><operator pos:start="75:31" pos:end="75:32">++</operator></expr>]</index></name> <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:44"><name pos:start="75:37" pos:end="75:39">buf</name><index pos:start="75:40" pos:end="75:44">[<expr pos:start="75:41" pos:end="75:43"><name pos:start="75:41" pos:end="75:41">i</name><operator pos:start="75:42" pos:end="75:42">+</operator><literal type="number" pos:start="75:43" pos:end="75:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:17">i</name><operator pos:start="77:18" pos:end="77:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="81:43">else<block type="pseudo" pos:start="81:17" pos:end="81:43"><block_content pos:start="81:17" pos:end="81:43">

                <expr_stmt pos:start="81:17" pos:end="81:43"><expr pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:20">buf2</name><index pos:start="81:21" pos:end="81:33">[<expr pos:start="81:22" pos:end="81:32"><name pos:start="81:22" pos:end="81:30">buf_size2</name><operator pos:start="81:31" pos:end="81:32">++</operator></expr>]</index></name> <operator pos:start="81:35" pos:end="81:35">=</operator> <name pos:start="81:37" pos:end="81:42"><name pos:start="81:37" pos:end="81:39">buf</name><index pos:start="81:40" pos:end="81:42">[<expr pos:start="81:41" pos:end="81:41"><name pos:start="81:41" pos:end="81:41">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="85:9" pos:end="85:49"><expr pos:start="85:9" pos:end="85:48"><call pos:start="85:9" pos:end="85:48"><name pos:start="85:9" pos:end="85:21">init_get_bits</name><argument_list pos:start="85:22" pos:end="85:48">(<argument pos:start="85:23" pos:end="85:28"><expr pos:start="85:23" pos:end="85:28"><operator pos:start="85:23" pos:end="85:23">&amp;</operator><name pos:start="85:24" pos:end="85:28"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:28">gb</name></name></expr></argument>, <argument pos:start="85:31" pos:end="85:34"><expr pos:start="85:31" pos:end="85:34"><name pos:start="85:31" pos:end="85:34">buf2</name></expr></argument>, <argument pos:start="85:37" pos:end="85:47"><expr pos:start="85:37" pos:end="85:47"><name pos:start="85:37" pos:end="85:45">buf_size2</name><operator pos:start="85:46" pos:end="85:46">*</operator><literal type="number" pos:start="85:47" pos:end="85:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="89:47">else<block type="pseudo" pos:start="89:9" pos:end="89:47"><block_content pos:start="89:9" pos:end="89:47">

        <expr_stmt pos:start="89:9" pos:end="89:47"><expr pos:start="89:9" pos:end="89:46"><call pos:start="89:9" pos:end="89:46"><name pos:start="89:9" pos:end="89:21">init_get_bits</name><argument_list pos:start="89:22" pos:end="89:46">(<argument pos:start="89:23" pos:end="89:28"><expr pos:start="89:23" pos:end="89:28"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:28">gb</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:33"><expr pos:start="89:31" pos:end="89:33"><name pos:start="89:31" pos:end="89:33">buf</name></expr></argument>, <argument pos:start="89:36" pos:end="89:45"><expr pos:start="89:36" pos:end="89:45"><name pos:start="89:36" pos:end="89:43">buf_size</name><operator pos:start="89:44" pos:end="89:44">*</operator><literal type="number" pos:start="89:45" pos:end="89:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="line" pos:start="91:5" pos:end="91:28">// do parse frame header</comment>

    <if_stmt pos:start="93:5" pos:end="113:5"><if pos:start="93:5" pos:end="103:5">if<condition pos:start="93:7" pos:end="93:37">(<expr pos:start="93:8" pos:end="93:36"><name pos:start="93:8" pos:end="93:17"><name pos:start="93:8" pos:end="93:8">v</name><operator pos:start="93:9" pos:end="93:10">-&gt;</operator><name pos:start="93:11" pos:end="93:17">profile</name></name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:36">PROFILE_ADVANCED</name></expr>)</condition> <block pos:start="93:39" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:9">

        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if<condition pos:start="95:11" pos:end="95:51">(<expr pos:start="95:12" pos:end="95:50"><call pos:start="95:12" pos:end="95:44"><name pos:start="95:12" pos:end="95:33">vc1_parse_frame_header</name><argument_list pos:start="95:34" pos:end="95:44">(<argument pos:start="95:35" pos:end="95:35"><expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">v</name></expr></argument>, <argument pos:start="95:38" pos:end="95:43"><expr pos:start="95:38" pos:end="95:43"><operator pos:start="95:38" pos:end="95:38">&amp;</operator><name pos:start="95:39" pos:end="95:43"><name pos:start="95:39" pos:end="95:39">s</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:43">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="95:46" pos:end="95:47">==</operator> <operator pos:start="95:49" pos:end="95:49">-</operator><literal type="number" pos:start="95:50" pos:end="95:50">1</literal></expr>)</condition> <block pos:start="95:53" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:22">

            <if_stmt pos:start="97:13" pos:end="97:34"><if pos:start="97:13" pos:end="97:34">if<condition pos:start="97:15" pos:end="97:20">(<expr pos:start="97:16" pos:end="97:19"><name pos:start="97:16" pos:end="97:19">buf2</name></expr>)</condition><block type="pseudo" pos:start="97:21" pos:end="97:34"><block_content pos:start="97:21" pos:end="97:34"><expr_stmt pos:start="97:21" pos:end="97:34"><expr pos:start="97:21" pos:end="97:33"><call pos:start="97:21" pos:end="97:33"><name pos:start="97:21" pos:end="97:27">av_free</name><argument_list pos:start="97:28" pos:end="97:33">(<argument pos:start="97:29" pos:end="97:32"><expr pos:start="97:29" pos:end="97:32"><name pos:start="97:29" pos:end="97:32">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="99:13" pos:end="99:22">return <expr pos:start="99:20" pos:end="99:21"><operator pos:start="99:20" pos:end="99:20">-</operator><literal type="number" pos:start="99:21" pos:end="99:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="113:5">else <block pos:start="103:12" pos:end="113:5">{<block_content pos:start="105:9" pos:end="111:9">

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if<condition pos:start="105:11" pos:end="105:55">(<expr pos:start="105:12" pos:end="105:54"><call pos:start="105:12" pos:end="105:48"><name pos:start="105:12" pos:end="105:37">vc1_parse_frame_header_adv</name><argument_list pos:start="105:38" pos:end="105:48">(<argument pos:start="105:39" pos:end="105:39"><expr pos:start="105:39" pos:end="105:39"><name pos:start="105:39" pos:end="105:39">v</name></expr></argument>, <argument pos:start="105:42" pos:end="105:47"><expr pos:start="105:42" pos:end="105:47"><operator pos:start="105:42" pos:end="105:42">&amp;</operator><name pos:start="105:43" pos:end="105:47"><name pos:start="105:43" pos:end="105:43">s</name><operator pos:start="105:44" pos:end="105:45">-&gt;</operator><name pos:start="105:46" pos:end="105:47">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="105:50" pos:end="105:51">==</operator> <operator pos:start="105:53" pos:end="105:53">-</operator><literal type="number" pos:start="105:54" pos:end="105:54">1</literal></expr>)</condition> <block pos:start="105:57" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:22">

            <if_stmt pos:start="107:13" pos:end="107:34"><if pos:start="107:13" pos:end="107:34">if<condition pos:start="107:15" pos:end="107:20">(<expr pos:start="107:16" pos:end="107:19"><name pos:start="107:16" pos:end="107:19">buf2</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:34"><block_content pos:start="107:21" pos:end="107:34"><expr_stmt pos:start="107:21" pos:end="107:34"><expr pos:start="107:21" pos:end="107:33"><call pos:start="107:21" pos:end="107:33"><name pos:start="107:21" pos:end="107:27">av_free</name><argument_list pos:start="107:28" pos:end="107:33">(<argument pos:start="107:29" pos:end="107:32"><expr pos:start="107:29" pos:end="107:32"><name pos:start="107:29" pos:end="107:32">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if<condition pos:start="117:7" pos:end="117:50">(<expr pos:start="117:8" pos:end="117:49"><name pos:start="117:8" pos:end="117:19"><name pos:start="117:8" pos:end="117:8">s</name><operator pos:start="117:9" pos:end="117:10">-&gt;</operator><name pos:start="117:11" pos:end="117:19">pict_type</name></name> <operator pos:start="117:21" pos:end="117:22">!=</operator> <name pos:start="117:24" pos:end="117:29">I_TYPE</name> <operator pos:start="117:31" pos:end="117:32">&amp;&amp;</operator> <operator pos:start="117:34" pos:end="117:34">!</operator><name pos:start="117:35" pos:end="117:49"><name pos:start="117:35" pos:end="117:35">v</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:49">res_rtm_flag</name></name></expr>)</condition><block pos:start="117:51" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:18">

        <if_stmt pos:start="119:9" pos:end="119:30"><if pos:start="119:9" pos:end="119:30">if<condition pos:start="119:11" pos:end="119:16">(<expr pos:start="119:12" pos:end="119:15"><name pos:start="119:12" pos:end="119:15">buf2</name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:30"><block_content pos:start="119:17" pos:end="119:30"><expr_stmt pos:start="119:17" pos:end="119:30"><expr pos:start="119:17" pos:end="119:29"><call pos:start="119:17" pos:end="119:29"><name pos:start="119:17" pos:end="119:23">av_free</name><argument_list pos:start="119:24" pos:end="119:29">(<argument pos:start="119:25" pos:end="119:28"><expr pos:start="119:25" pos:end="119:28"><name pos:start="119:25" pos:end="119:28">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="121:9" pos:end="121:18">return <expr pos:start="121:16" pos:end="121:17"><operator pos:start="121:16" pos:end="121:16">-</operator><literal type="number" pos:start="121:17" pos:end="121:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="127:5" pos:end="127:22">// for hurry_up==5</comment>

    <expr_stmt pos:start="129:5" pos:end="129:47"><expr pos:start="129:5" pos:end="129:46"><name pos:start="129:5" pos:end="129:32"><name pos:start="129:5" pos:end="129:5">s</name><operator pos:start="129:6" pos:end="129:7">-&gt;</operator><name pos:start="129:8" pos:end="129:22">current_picture</name><operator pos:start="129:23" pos:end="129:23">.</operator><name pos:start="129:24" pos:end="129:32">pict_type</name></name><operator pos:start="129:33" pos:end="129:33">=</operator> <name pos:start="129:35" pos:end="129:46"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:46">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:57"><expr pos:start="131:5" pos:end="131:56"><name pos:start="131:5" pos:end="131:32"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:22">current_picture</name><operator pos:start="131:23" pos:end="131:23">.</operator><name pos:start="131:24" pos:end="131:32">key_frame</name></name><operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:46"><name pos:start="131:35" pos:end="131:35">s</name><operator pos:start="131:36" pos:end="131:37">-&gt;</operator><name pos:start="131:38" pos:end="131:46">pict_type</name></name> <operator pos:start="131:48" pos:end="131:49">==</operator> <name pos:start="131:51" pos:end="131:56">I_TYPE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:57">/* skip B-frames if we don't have reference frames */</comment>

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if<condition pos:start="137:7" pos:end="137:74">(<expr pos:start="137:8" pos:end="137:73"><name pos:start="137:8" pos:end="137:26"><name pos:start="137:8" pos:end="137:8">s</name><operator pos:start="137:9" pos:end="137:10">-&gt;</operator><name pos:start="137:11" pos:end="137:26">last_picture_ptr</name></name><operator pos:start="137:27" pos:end="137:28">==</operator><name pos:start="137:29" pos:end="137:32">NULL</name> <operator pos:start="137:34" pos:end="137:35">&amp;&amp;</operator> <operator pos:start="137:37" pos:end="137:37">(</operator><name pos:start="137:38" pos:end="137:49"><name pos:start="137:38" pos:end="137:38">s</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:49">pict_type</name></name><operator pos:start="137:50" pos:end="137:51">==</operator><name pos:start="137:52" pos:end="137:57">B_TYPE</name> <operator pos:start="137:59" pos:end="137:60">||</operator> <name pos:start="137:62" pos:end="137:72"><name pos:start="137:62" pos:end="137:62">s</name><operator pos:start="137:63" pos:end="137:64">-&gt;</operator><name pos:start="137:65" pos:end="137:72">dropable</name></name><operator pos:start="137:73" pos:end="137:73">)</operator></expr>)</condition><block pos:start="137:75" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:18">

        <if_stmt pos:start="139:9" pos:end="139:30"><if pos:start="139:9" pos:end="139:30">if<condition pos:start="139:11" pos:end="139:16">(<expr pos:start="139:12" pos:end="139:15"><name pos:start="139:12" pos:end="139:15">buf2</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:30"><block_content pos:start="139:17" pos:end="139:30"><expr_stmt pos:start="139:17" pos:end="139:30"><expr pos:start="139:17" pos:end="139:29"><call pos:start="139:17" pos:end="139:29"><name pos:start="139:17" pos:end="139:23">av_free</name><argument_list pos:start="139:24" pos:end="139:29">(<argument pos:start="139:25" pos:end="139:28"><expr pos:start="139:25" pos:end="139:28"><name pos:start="139:25" pos:end="139:28">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="141:9" pos:end="141:18">return <expr pos:start="141:16" pos:end="141:17"><operator pos:start="141:16" pos:end="141:16">-</operator><literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</return><comment type="line" pos:start="141:19" pos:end="141:29">//buf_size;</comment>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="145:5" pos:end="145:44">/* skip b frames if we are in a hurry */</comment>

    <if_stmt pos:start="147:5" pos:end="147:58"><if pos:start="147:5" pos:end="147:58">if<condition pos:start="147:7" pos:end="147:47">(<expr pos:start="147:8" pos:end="147:46"><name pos:start="147:8" pos:end="147:22"><name pos:start="147:8" pos:end="147:12">avctx</name><operator pos:start="147:13" pos:end="147:14">-&gt;</operator><name pos:start="147:15" pos:end="147:22">hurry_up</name></name> <operator pos:start="147:24" pos:end="147:25">&amp;&amp;</operator> <name pos:start="147:27" pos:end="147:38"><name pos:start="147:27" pos:end="147:27">s</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:38">pict_type</name></name><operator pos:start="147:39" pos:end="147:40">==</operator><name pos:start="147:41" pos:end="147:46">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="147:49" pos:end="147:58"><block_content pos:start="147:49" pos:end="147:58"> <return pos:start="147:49" pos:end="147:58">return <expr pos:start="147:56" pos:end="147:57"><operator pos:start="147:56" pos:end="147:56">-</operator><literal type="number" pos:start="147:57" pos:end="147:57">1</literal></expr>;</return></block_content></block></if></if_stmt><comment type="line" pos:start="147:59" pos:end="147:69">//buf_size;</comment>

    <if_stmt pos:start="149:5" pos:end="159:5"><if pos:start="149:5" pos:end="159:5">if<condition pos:start="149:7" pos:end="153:46">(   <expr pos:start="149:11" pos:end="153:45"><operator pos:start="149:11" pos:end="149:11">(</operator><name pos:start="149:12" pos:end="149:28"><name pos:start="149:12" pos:end="149:16">avctx</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:28">skip_frame</name></name> <operator pos:start="149:30" pos:end="149:31">&gt;=</operator> <name pos:start="149:33" pos:end="149:48">AVDISCARD_NONREF</name> <operator pos:start="149:50" pos:end="149:51">&amp;&amp;</operator> <name pos:start="149:53" pos:end="149:64"><name pos:start="149:53" pos:end="149:53">s</name><operator pos:start="149:54" pos:end="149:55">-&gt;</operator><name pos:start="149:56" pos:end="149:64">pict_type</name></name><operator pos:start="149:65" pos:end="149:66">==</operator><name pos:start="149:67" pos:end="149:72">B_TYPE</name><operator pos:start="149:73" pos:end="149:73">)</operator>

       <operator pos:start="151:8" pos:end="151:9">||</operator> <operator pos:start="151:11" pos:end="151:11">(</operator><name pos:start="151:12" pos:end="151:28"><name pos:start="151:12" pos:end="151:16">avctx</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:28">skip_frame</name></name> <operator pos:start="151:30" pos:end="151:31">&gt;=</operator> <name pos:start="151:33" pos:end="151:48">AVDISCARD_NONKEY</name> <operator pos:start="151:50" pos:end="151:51">&amp;&amp;</operator> <name pos:start="151:53" pos:end="151:64"><name pos:start="151:53" pos:end="151:53">s</name><operator pos:start="151:54" pos:end="151:55">-&gt;</operator><name pos:start="151:56" pos:end="151:64">pict_type</name></name><operator pos:start="151:65" pos:end="151:66">!=</operator><name pos:start="151:67" pos:end="151:72">I_TYPE</name><operator pos:start="151:73" pos:end="151:73">)</operator>

       <operator pos:start="153:8" pos:end="153:9">||</operator>  <name pos:start="153:12" pos:end="153:28"><name pos:start="153:12" pos:end="153:16">avctx</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:28">skip_frame</name></name> <operator pos:start="153:30" pos:end="153:31">&gt;=</operator> <name pos:start="153:33" pos:end="153:45">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="153:48" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:24">

        <if_stmt pos:start="155:9" pos:end="155:30"><if pos:start="155:9" pos:end="155:30">if<condition pos:start="155:11" pos:end="155:16">(<expr pos:start="155:12" pos:end="155:15"><name pos:start="155:12" pos:end="155:15">buf2</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:30"><block_content pos:start="155:17" pos:end="155:30"><expr_stmt pos:start="155:17" pos:end="155:30"><expr pos:start="155:17" pos:end="155:29"><call pos:start="155:17" pos:end="155:29"><name pos:start="155:17" pos:end="155:23">av_free</name><argument_list pos:start="155:24" pos:end="155:29">(<argument pos:start="155:25" pos:end="155:28"><expr pos:start="155:25" pos:end="155:28"><name pos:start="155:25" pos:end="155:28">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="157:9" pos:end="157:24">return <expr pos:start="157:16" pos:end="157:23"><name pos:start="157:16" pos:end="157:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="161:5" pos:end="161:49">/* skip everything if we are in a hurry&gt;=5 */</comment>

    <if_stmt pos:start="163:5" pos:end="169:5"><if pos:start="163:5" pos:end="169:5">if<condition pos:start="163:7" pos:end="163:26">(<expr pos:start="163:8" pos:end="163:25"><name pos:start="163:8" pos:end="163:22"><name pos:start="163:8" pos:end="163:12">avctx</name><operator pos:start="163:13" pos:end="163:14">-&gt;</operator><name pos:start="163:15" pos:end="163:22">hurry_up</name></name><operator pos:start="163:23" pos:end="163:24">&gt;=</operator><literal type="number" pos:start="163:25" pos:end="163:25">5</literal></expr>)</condition> <block pos:start="163:28" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:18">

        <if_stmt pos:start="165:9" pos:end="165:30"><if pos:start="165:9" pos:end="165:30">if<condition pos:start="165:11" pos:end="165:16">(<expr pos:start="165:12" pos:end="165:15"><name pos:start="165:12" pos:end="165:15">buf2</name></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:30"><block_content pos:start="165:17" pos:end="165:30"><expr_stmt pos:start="165:17" pos:end="165:30"><expr pos:start="165:17" pos:end="165:29"><call pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:23">av_free</name><argument_list pos:start="165:24" pos:end="165:29">(<argument pos:start="165:25" pos:end="165:28"><expr pos:start="165:25" pos:end="165:28"><name pos:start="165:25" pos:end="165:28">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="167:9" pos:end="167:18">return <expr pos:start="167:16" pos:end="167:17"><operator pos:start="167:16" pos:end="167:16">-</operator><literal type="number" pos:start="167:17" pos:end="167:17">1</literal></expr>;</return><comment type="line" pos:start="167:19" pos:end="167:29">//buf_size;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="183:5"><if pos:start="173:5" pos:end="183:5">if<condition pos:start="173:7" pos:end="173:31">(<expr pos:start="173:8" pos:end="173:30"><name pos:start="173:8" pos:end="173:30"><name pos:start="173:8" pos:end="173:8">s</name><operator pos:start="173:9" pos:end="173:10">-&gt;</operator><name pos:start="173:11" pos:end="173:30">next_p_frame_damaged</name></name></expr>)</condition><block pos:start="173:32" pos:end="183:5">{<block_content pos:start="175:9" pos:end="181:38">

        <if_stmt pos:start="175:9" pos:end="181:38"><if pos:start="175:9" pos:end="177:28">if<condition pos:start="175:11" pos:end="175:32">(<expr pos:start="175:12" pos:end="175:31"><name pos:start="175:12" pos:end="175:23"><name pos:start="175:12" pos:end="175:12">s</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:23">pict_type</name></name><operator pos:start="175:24" pos:end="175:25">==</operator><name pos:start="175:26" pos:end="175:31">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:28"><block_content pos:start="177:13" pos:end="177:28">

            <return pos:start="177:13" pos:end="177:28">return <expr pos:start="177:20" pos:end="177:27"><name pos:start="177:20" pos:end="177:27">buf_size</name></expr>;</return></block_content></block></if>

        <else pos:start="179:9" pos:end="181:38">else<block type="pseudo" pos:start="181:13" pos:end="181:38"><block_content pos:start="181:13" pos:end="181:38">

            <expr_stmt pos:start="181:13" pos:end="181:38"><expr pos:start="181:13" pos:end="181:37"><name pos:start="181:13" pos:end="181:35"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:35">next_p_frame_damaged</name></name><operator pos:start="181:36" pos:end="181:36">=</operator><literal type="number" pos:start="181:37" pos:end="181:37">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if<condition pos:start="187:7" pos:end="187:37">(<expr pos:start="187:8" pos:end="187:36"><call pos:start="187:8" pos:end="187:32"><name pos:start="187:8" pos:end="187:22">MPV_frame_start</name><argument_list pos:start="187:23" pos:end="187:32">(<argument pos:start="187:24" pos:end="187:24"><expr pos:start="187:24" pos:end="187:24"><name pos:start="187:24" pos:end="187:24">s</name></expr></argument>, <argument pos:start="187:27" pos:end="187:31"><expr pos:start="187:27" pos:end="187:31"><name pos:start="187:27" pos:end="187:31">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="187:34" pos:end="187:34">&lt;</operator> <literal type="number" pos:start="187:36" pos:end="187:36">0</literal></expr>)</condition> <block pos:start="187:39" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:18">

        <if_stmt pos:start="189:9" pos:end="189:30"><if pos:start="189:9" pos:end="189:30">if<condition pos:start="189:11" pos:end="189:16">(<expr pos:start="189:12" pos:end="189:15"><name pos:start="189:12" pos:end="189:15">buf2</name></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:30"><block_content pos:start="189:17" pos:end="189:30"><expr_stmt pos:start="189:17" pos:end="189:30"><expr pos:start="189:17" pos:end="189:29"><call pos:start="189:17" pos:end="189:29"><name pos:start="189:17" pos:end="189:23">av_free</name><argument_list pos:start="189:24" pos:end="189:29">(<argument pos:start="189:25" pos:end="189:28"><expr pos:start="189:25" pos:end="189:28"><name pos:start="189:25" pos:end="189:28">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="191:9" pos:end="191:18">return <expr pos:start="191:16" pos:end="191:17"><operator pos:start="191:16" pos:end="191:16">-</operator><literal type="number" pos:start="191:17" pos:end="191:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:25"><expr pos:start="197:5" pos:end="197:24"><call pos:start="197:5" pos:end="197:24"><name pos:start="197:5" pos:end="197:21">ff_er_frame_start</name><argument_list pos:start="197:22" pos:end="197:24">(<argument pos:start="197:23" pos:end="197:23"><expr pos:start="197:23" pos:end="197:23"><name pos:start="197:23" pos:end="197:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:27"><expr pos:start="201:5" pos:end="201:26"><name pos:start="201:5" pos:end="201:11"><name pos:start="201:5" pos:end="201:5">v</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:11">bits</name></name> <operator pos:start="201:13" pos:end="201:13">=</operator> <name pos:start="201:15" pos:end="201:22">buf_size</name> <operator pos:start="201:24" pos:end="201:24">*</operator> <literal type="number" pos:start="201:26" pos:end="201:26">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:25"><expr pos:start="203:5" pos:end="203:24"><call pos:start="203:5" pos:end="203:24"><name pos:start="203:5" pos:end="203:21">vc1_decode_blocks</name><argument_list pos:start="203:22" pos:end="203:24">(<argument pos:start="203:23" pos:end="203:23"><expr pos:start="203:23" pos:end="203:23"><name pos:start="203:23" pos:end="203:23">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="205:1" pos:end="205:93">//av_log(s-&gt;avctx, AV_LOG_INFO, "Consumed %i/%i bits\n", get_bits_count(&amp;s-&gt;gb), buf_size*8);</comment>

<comment type="line" pos:start="207:1" pos:end="207:45">//  if(get_bits_count(&amp;s-&gt;gb) &gt; buf_size * 8)</comment>

<comment type="line" pos:start="209:1" pos:end="209:18">//      return -1;</comment>

    <expr_stmt pos:start="211:5" pos:end="211:23"><expr pos:start="211:5" pos:end="211:22"><call pos:start="211:5" pos:end="211:22"><name pos:start="211:5" pos:end="211:19">ff_er_frame_end</name><argument_list pos:start="211:20" pos:end="211:22">(<argument pos:start="211:21" pos:end="211:21"><expr pos:start="211:21" pos:end="211:21"><name pos:start="211:21" pos:end="211:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:21"><expr pos:start="215:5" pos:end="215:20"><call pos:start="215:5" pos:end="215:20"><name pos:start="215:5" pos:end="215:17">MPV_frame_end</name><argument_list pos:start="215:18" pos:end="215:20">(<argument pos:start="215:19" pos:end="215:19"><expr pos:start="215:19" pos:end="215:19"><name pos:start="215:19" pos:end="215:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt pos:start="219:1" pos:end="219:74"><expr pos:start="219:1" pos:end="219:73"><call pos:start="219:1" pos:end="219:73"><name pos:start="219:1" pos:end="219:6">assert</name><argument_list pos:start="219:7" pos:end="219:73">(<argument pos:start="219:8" pos:end="219:72"><expr pos:start="219:8" pos:end="219:72"><name pos:start="219:8" pos:end="219:35"><name pos:start="219:8" pos:end="219:8">s</name><operator pos:start="219:9" pos:end="219:10">-&gt;</operator><name pos:start="219:11" pos:end="219:25">current_picture</name><operator pos:start="219:26" pos:end="219:26">.</operator><name pos:start="219:27" pos:end="219:35">pict_type</name></name> <operator pos:start="219:37" pos:end="219:38">==</operator> <name pos:start="219:40" pos:end="219:72"><name pos:start="219:40" pos:end="219:40">s</name><operator pos:start="219:41" pos:end="219:42">-&gt;</operator><name pos:start="219:43" pos:end="219:61">current_picture_ptr</name><operator pos:start="219:62" pos:end="219:63">-&gt;</operator><name pos:start="219:64" pos:end="219:72">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt pos:start="221:1" pos:end="221:53"><expr pos:start="221:1" pos:end="221:52"><call pos:start="221:1" pos:end="221:52"><name pos:start="221:1" pos:end="221:6">assert</name><argument_list pos:start="221:7" pos:end="221:52">(<argument pos:start="221:8" pos:end="221:51"><expr pos:start="221:8" pos:end="221:51"><name pos:start="221:8" pos:end="221:35"><name pos:start="221:8" pos:end="221:8">s</name><operator pos:start="221:9" pos:end="221:10">-&gt;</operator><name pos:start="221:11" pos:end="221:25">current_picture</name><operator pos:start="221:26" pos:end="221:26">.</operator><name pos:start="221:27" pos:end="221:35">pict_type</name></name> <operator pos:start="221:37" pos:end="221:38">==</operator> <name pos:start="221:40" pos:end="221:51"><name pos:start="221:40" pos:end="221:40">s</name><operator pos:start="221:41" pos:end="221:42">-&gt;</operator><name pos:start="221:43" pos:end="221:51">pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="223:5" pos:end="231:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:47">(<expr pos:start="223:9" pos:end="223:46"><name pos:start="223:9" pos:end="223:20"><name pos:start="223:9" pos:end="223:9">s</name><operator pos:start="223:10" pos:end="223:11">-&gt;</operator><name pos:start="223:12" pos:end="223:20">pict_type</name></name> <operator pos:start="223:22" pos:end="223:23">==</operator> <name pos:start="223:25" pos:end="223:30">B_TYPE</name> <operator pos:start="223:32" pos:end="223:33">||</operator> <name pos:start="223:35" pos:end="223:46"><name pos:start="223:35" pos:end="223:35">s</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:46">low_delay</name></name></expr>)</condition> <block pos:start="223:49" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:49">

        <expr_stmt pos:start="225:9" pos:end="225:49"><expr pos:start="225:9" pos:end="225:48"><operator pos:start="225:9" pos:end="225:9">*</operator><name pos:start="225:10" pos:end="225:13">pict</name><operator pos:start="225:14" pos:end="225:14">=</operator> <operator pos:start="225:16" pos:end="225:16">*</operator><operator pos:start="225:17" pos:end="225:17">(</operator><name pos:start="225:18" pos:end="225:24">AVFrame</name><operator pos:start="225:25" pos:end="225:25">*</operator><operator pos:start="225:26" pos:end="225:26">)</operator><name pos:start="225:27" pos:end="225:48"><name pos:start="225:27" pos:end="225:27">s</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:48">current_picture_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="227:7" pos:end="231:5">else if <condition pos:start="227:15" pos:end="227:43">(<expr pos:start="227:16" pos:end="227:42"><name pos:start="227:16" pos:end="227:34"><name pos:start="227:16" pos:end="227:16">s</name><operator pos:start="227:17" pos:end="227:18">-&gt;</operator><name pos:start="227:19" pos:end="227:34">last_picture_ptr</name></name> <operator pos:start="227:36" pos:end="227:37">!=</operator> <name pos:start="227:39" pos:end="227:42">NULL</name></expr>)</condition> <block pos:start="227:45" pos:end="231:5">{<block_content pos:start="229:9" pos:end="229:46">

        <expr_stmt pos:start="229:9" pos:end="229:46"><expr pos:start="229:9" pos:end="229:45"><operator pos:start="229:9" pos:end="229:9">*</operator><name pos:start="229:10" pos:end="229:13">pict</name><operator pos:start="229:14" pos:end="229:14">=</operator> <operator pos:start="229:16" pos:end="229:16">*</operator><operator pos:start="229:17" pos:end="229:17">(</operator><name pos:start="229:18" pos:end="229:24">AVFrame</name><operator pos:start="229:25" pos:end="229:25">*</operator><operator pos:start="229:26" pos:end="229:26">)</operator><name pos:start="229:27" pos:end="229:45"><name pos:start="229:27" pos:end="229:27">s</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:45">last_picture_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="241:5"><if pos:start="235:5" pos:end="241:5">if<condition pos:start="235:7" pos:end="235:43">(<expr pos:start="235:8" pos:end="235:42"><name pos:start="235:8" pos:end="235:26"><name pos:start="235:8" pos:end="235:8">s</name><operator pos:start="235:9" pos:end="235:10">-&gt;</operator><name pos:start="235:11" pos:end="235:26">last_picture_ptr</name></name> <operator pos:start="235:28" pos:end="235:29">||</operator> <name pos:start="235:31" pos:end="235:42"><name pos:start="235:31" pos:end="235:31">s</name><operator pos:start="235:32" pos:end="235:33">-&gt;</operator><name pos:start="235:34" pos:end="235:42">low_delay</name></name></expr>)</condition><block pos:start="235:44" pos:end="241:5">{<block_content pos:start="237:9" pos:end="239:37">

        <expr_stmt pos:start="237:9" pos:end="237:37"><expr pos:start="237:9" pos:end="237:36"><operator pos:start="237:9" pos:end="237:9">*</operator><name pos:start="237:10" pos:end="237:18">data_size</name> <operator pos:start="237:20" pos:end="237:20">=</operator> <sizeof pos:start="237:22" pos:end="237:36">sizeof<argument_list pos:start="237:28" pos:end="237:36">(<argument pos:start="237:29" pos:end="237:35"><expr pos:start="237:29" pos:end="237:35"><name pos:start="237:29" pos:end="237:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:37"><expr pos:start="239:9" pos:end="239:36"><call pos:start="239:9" pos:end="239:36"><name pos:start="239:9" pos:end="239:27">ff_print_debug_info</name><argument_list pos:start="239:28" pos:end="239:36">(<argument pos:start="239:29" pos:end="239:29"><expr pos:start="239:29" pos:end="239:29"><name pos:start="239:29" pos:end="239:29">s</name></expr></argument>, <argument pos:start="239:32" pos:end="239:35"><expr pos:start="239:32" pos:end="239:35"><name pos:start="239:32" pos:end="239:35">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="245:5" pos:end="245:58">/* Return the Picture timestamp as the frame number */</comment>

    <comment type="block" pos:start="247:5" pos:end="247:58">/* we substract 1 because it is added on utils.c    */</comment>

    <expr_stmt pos:start="249:5" pos:end="249:48"><expr pos:start="249:5" pos:end="249:47"><name pos:start="249:5" pos:end="249:23"><name pos:start="249:5" pos:end="249:9">avctx</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:23">frame_number</name></name> <operator pos:start="249:25" pos:end="249:25">=</operator> <name pos:start="249:27" pos:end="249:43"><name pos:start="249:27" pos:end="249:27">s</name><operator pos:start="249:28" pos:end="249:29">-&gt;</operator><name pos:start="249:30" pos:end="249:43">picture_number</name></name> <operator pos:start="249:45" pos:end="249:45">-</operator> <literal type="number" pos:start="249:47" pos:end="249:47">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="253:5" pos:end="253:26"><if pos:start="253:5" pos:end="253:26">if<condition pos:start="253:7" pos:end="253:12">(<expr pos:start="253:8" pos:end="253:11"><name pos:start="253:8" pos:end="253:11">buf2</name></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:26"><block_content pos:start="253:13" pos:end="253:26"><expr_stmt pos:start="253:13" pos:end="253:26"><expr pos:start="253:13" pos:end="253:25"><call pos:start="253:13" pos:end="253:25"><name pos:start="253:13" pos:end="253:19">av_free</name><argument_list pos:start="253:20" pos:end="253:25">(<argument pos:start="253:21" pos:end="253:24"><expr pos:start="253:21" pos:end="253:24"><name pos:start="253:21" pos:end="253:24">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="255:5" pos:end="255:20">return <expr pos:start="255:12" pos:end="255:19"><name pos:start="255:12" pos:end="255:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
