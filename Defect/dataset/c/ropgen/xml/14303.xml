<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14303.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">add_codec</name><parameter_list pos:start="1:15" pos:end="1:52">(<parameter pos:start="1:16" pos:end="1:31"><decl pos:start="1:16" pos:end="1:31"><type pos:start="1:16" pos:end="1:31"><name pos:start="1:16" pos:end="1:23">FFStream</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:31">stream</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">av</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:51">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:36">/* compute default parameters */</comment>

    <switch pos:start="11:5" pos:end="77:5">switch<condition pos:start="11:11" pos:end="11:26">(<expr pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:13">av</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:25">codec_type</name></name></expr>)</condition> <block pos:start="11:28" pos:end="77:5">{<block_content pos:start="13:5" pos:end="75:16">

    <case pos:start="13:5" pos:end="13:26">case <expr pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:25">CODEC_TYPE_AUDIO</name></expr>:</case>

        <if_stmt pos:start="15:9" pos:end="17:33"><if pos:start="15:9" pos:end="17:33">if <condition pos:start="15:12" pos:end="15:30">(<expr pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:14">av</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:24">bit_rate</name></name> <operator pos:start="15:26" pos:end="15:27">==</operator> <literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:33"><block_content pos:start="17:13" pos:end="17:33">

            <expr_stmt pos:start="17:13" pos:end="17:33"><expr pos:start="17:13" pos:end="17:32"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:14">av</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:24">bit_rate</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <literal type="number" pos:start="17:28" pos:end="17:32">64000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="21:36"><if pos:start="19:9" pos:end="21:36">if <condition pos:start="19:12" pos:end="19:33">(<expr pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:14">av</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:27">sample_rate</name></name> <operator pos:start="19:29" pos:end="19:30">==</operator> <literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:36"><block_content pos:start="21:13" pos:end="21:36">

            <expr_stmt pos:start="21:13" pos:end="21:36"><expr pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:14">av</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:27">sample_rate</name></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <literal type="number" pos:start="21:31" pos:end="21:35">22050</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:29"><if pos:start="23:9" pos:end="25:29">if <condition pos:start="23:12" pos:end="23:30">(<expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:14">av</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:24">channels</name></name> <operator pos:start="23:26" pos:end="23:27">==</operator> <literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:29"><block_content pos:start="25:13" pos:end="25:29">

            <expr_stmt pos:start="25:13" pos:end="25:29"><expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:14">av</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:24">channels</name></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <literal type="number" pos:start="25:28" pos:end="25:28">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:26">case <expr pos:start="29:10" pos:end="29:25"><name pos:start="29:10" pos:end="29:25">CODEC_TYPE_VIDEO</name></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="33:33"><if pos:start="31:9" pos:end="33:33">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:14">av</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:24">bit_rate</name></name> <operator pos:start="31:26" pos:end="31:27">==</operator> <literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:33"><block_content pos:start="33:13" pos:end="33:33">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:14">av</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:24">bit_rate</name></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:32">64000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="37:49"><if pos:start="35:9" pos:end="37:49">if <condition pos:start="35:12" pos:end="35:32">(<expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:14">av</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:26">frame_rate</name></name> <operator pos:start="35:28" pos:end="35:29">==</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:49"><block_content pos:start="37:13" pos:end="37:49">

            <expr_stmt pos:start="37:13" pos:end="37:49"><expr pos:start="37:13" pos:end="37:48"><name pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:14">av</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:26">frame_rate</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <literal type="number" pos:start="37:30" pos:end="37:30">5</literal> <operator pos:start="37:32" pos:end="37:32">*</operator> <name pos:start="37:34" pos:end="37:48">FRAME_RATE_BASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if <condition pos:start="39:12" pos:end="39:46">(<expr pos:start="39:13" pos:end="39:45"><name pos:start="39:13" pos:end="39:21"><name pos:start="39:13" pos:end="39:14">av</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:21">width</name></name> <operator pos:start="39:23" pos:end="39:24">==</operator> <literal type="number" pos:start="39:26" pos:end="39:26">0</literal> <operator pos:start="39:28" pos:end="39:29">||</operator> <name pos:start="39:31" pos:end="39:40"><name pos:start="39:31" pos:end="39:32">av</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:40">height</name></name> <operator pos:start="39:42" pos:end="39:43">==</operator> <literal type="number" pos:start="39:45" pos:end="39:45">0</literal></expr>)</condition> <block pos:start="39:48" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:29">

            <expr_stmt pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:14">av</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">width</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <literal type="number" pos:start="41:25" pos:end="41:27">160</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:14">av</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:22">height</name></name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:28">128</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:53">/* Bitrate tolerance is less for streaming */</comment>

        <if_stmt pos:start="49:9" pos:end="51:54"><if pos:start="49:9" pos:end="51:54">if <condition pos:start="49:12" pos:end="49:40">(<expr pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:14">av</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:34">bit_rate_tolerance</name></name> <operator pos:start="49:36" pos:end="49:37">==</operator> <literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:54"><block_content pos:start="51:13" pos:end="51:54">

            <expr_stmt pos:start="51:13" pos:end="51:54"><expr pos:start="51:13" pos:end="51:53"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:14">av</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:34">bit_rate_tolerance</name></name> <operator pos:start="51:36" pos:end="51:36">=</operator> <name pos:start="51:38" pos:end="51:49"><name pos:start="51:38" pos:end="51:39">av</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:49">bit_rate</name></name> <operator pos:start="51:51" pos:end="51:51">/</operator> <literal type="number" pos:start="51:53" pos:end="51:53">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:25"><if pos:start="53:9" pos:end="55:25">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:14">av</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">qmin</name></name> <operator pos:start="53:22" pos:end="53:23">==</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:25"><block_content pos:start="55:13" pos:end="55:25">

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:14">av</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:20">qmin</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="59:26"><if pos:start="57:9" pos:end="59:26">if <condition pos:start="57:12" pos:end="57:26">(<expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:14">av</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">qmax</name></name> <operator pos:start="57:22" pos:end="57:23">==</operator> <literal type="number" pos:start="57:25" pos:end="57:25">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:26"><block_content pos:start="59:13" pos:end="59:26">

            <expr_stmt pos:start="59:13" pos:end="59:26"><expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:14">av</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:20">qmax</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="number" pos:start="59:24" pos:end="59:25">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="63:30"><if pos:start="61:9" pos:end="63:30">if <condition pos:start="61:12" pos:end="61:31">(<expr pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:14">av</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:25">max_qdiff</name></name> <operator pos:start="61:27" pos:end="61:28">==</operator> <literal type="number" pos:start="61:30" pos:end="61:30">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:30"><block_content pos:start="63:13" pos:end="63:30">

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:14">av</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:25">max_qdiff</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <literal type="number" pos:start="63:29" pos:end="63:29">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:10">av</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:21">qcompress</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <literal type="number" pos:start="65:25" pos:end="65:27">0.5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:17"><name pos:start="67:9" pos:end="67:10">av</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:17">qblur</name></name> <operator pos:start="67:19" pos:end="67:19">=</operator> <literal type="number" pos:start="67:21" pos:end="67:23">0.5</literal></expr>;</expr_stmt>



        <break pos:start="71:9" pos:end="71:14">break;</break>

    <default pos:start="73:5" pos:end="73:12">default:</default>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><call pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:13">abort</name><argument_list pos:start="75:14" pos:end="75:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>



    <expr_stmt pos:start="81:5" pos:end="81:38"><expr pos:start="81:5" pos:end="81:37"><name pos:start="81:5" pos:end="81:6">st</name> <operator pos:start="81:8" pos:end="81:8">=</operator> <call pos:start="81:10" pos:end="81:37"><name pos:start="81:10" pos:end="81:19">av_mallocz</name><argument_list pos:start="81:20" pos:end="81:37">(<argument pos:start="81:21" pos:end="81:36"><expr pos:start="81:21" pos:end="81:36"><sizeof pos:start="81:21" pos:end="81:36">sizeof<argument_list pos:start="81:27" pos:end="81:36">(<argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><name pos:start="81:28" pos:end="81:35">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="85:15"><if pos:start="83:5" pos:end="85:15">if <condition pos:start="83:8" pos:end="83:12">(<expr pos:start="83:9" pos:end="83:11"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:11">st</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:15"><block_content pos:start="85:9" pos:end="85:15">

        <return pos:start="85:9" pos:end="85:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:47"><expr pos:start="87:5" pos:end="87:46"><name pos:start="87:5" pos:end="87:41"><name pos:start="87:5" pos:end="87:10">stream</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:19">streams</name><index pos:start="87:20" pos:end="87:41">[<expr pos:start="87:21" pos:end="87:40"><name pos:start="87:21" pos:end="87:38"><name pos:start="87:21" pos:end="87:26">stream</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:38">nb_streams</name></name><operator pos:start="87:39" pos:end="87:40">++</operator></expr>]</index></name> <operator pos:start="87:43" pos:end="87:43">=</operator> <name pos:start="87:45" pos:end="87:46">st</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:51"><expr pos:start="89:5" pos:end="89:50"><call pos:start="89:5" pos:end="89:50"><name pos:start="89:5" pos:end="89:10">memcpy</name><argument_list pos:start="89:11" pos:end="89:50">(<argument pos:start="89:12" pos:end="89:21"><expr pos:start="89:12" pos:end="89:21"><operator pos:start="89:12" pos:end="89:12">&amp;</operator><name pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:14">st</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:21">codec</name></name></expr></argument>, <argument pos:start="89:24" pos:end="89:25"><expr pos:start="89:24" pos:end="89:25"><name pos:start="89:24" pos:end="89:25">av</name></expr></argument>, <argument pos:start="89:28" pos:end="89:49"><expr pos:start="89:28" pos:end="89:49"><sizeof pos:start="89:28" pos:end="89:49">sizeof<argument_list pos:start="89:34" pos:end="89:49">(<argument pos:start="89:35" pos:end="89:48"><expr pos:start="89:35" pos:end="89:48"><name pos:start="89:35" pos:end="89:48">AVCodecContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
