<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5326.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">h261_decode_gob_header</name><parameter_list pos:start="1:34" pos:end="1:49">(<parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:45">H261Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">h</name></decl></parameter>)</parameter_list><block pos:start="1:50" pos:end="61:1">{<block_content pos:start="3:5" pos:end="59:13">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:20"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:16">int</name></type> <name pos:start="3:18" pos:end="3:20">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier> <specifier pos:start="5:22" pos:end="5:26">const</specifier></type> <name pos:start="5:28" pos:end="5:28">s</name> <init pos:start="5:30" pos:end="5:36">= <expr pos:start="5:32" pos:end="5:36"><operator pos:start="5:32" pos:end="5:32">&amp;</operator><name pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:33">h</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:36">s</name></name></expr></init></decl>;</decl_stmt>

    

    <comment type="block" pos:start="9:5" pos:end="9:34">/* Check for GOB Start Code */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:7">val</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:31"><name pos:start="11:11" pos:end="11:19">show_bits</name><argument_list pos:start="11:20" pos:end="11:31">(<argument pos:start="11:21" pos:end="11:26"><expr pos:start="11:21" pos:end="11:26"><operator pos:start="11:21" pos:end="11:21">&amp;</operator><name pos:start="11:22" pos:end="11:26"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:26">gb</name></name></expr></argument>, <argument pos:start="11:29" pos:end="11:30"><expr pos:start="11:29" pos:end="11:30"><literal type="number" pos:start="11:29" pos:end="11:30">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if<condition pos:start="13:7" pos:end="13:11">(<expr pos:start="13:8" pos:end="13:10"><name pos:start="13:8" pos:end="13:10">val</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:24">/* We have a GBSC */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:13">skip_bits</name><argument_list pos:start="21:14" pos:end="21:25">(<argument pos:start="21:15" pos:end="21:20"><expr pos:start="21:15" pos:end="21:20"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:20">gb</name></name></expr></argument>, <argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><literal type="number" pos:start="21:23" pos:end="21:24">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:5">h</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:17">gob_number</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:39"><name pos:start="25:21" pos:end="25:28">get_bits</name><argument_list pos:start="25:29" pos:end="25:39">(<argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:35">gb</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:38"><expr pos:start="25:38" pos:end="25:38"><literal type="number" pos:start="25:38" pos:end="25:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:42" pos:end="25:49">/* GN */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:13">qscale</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:35"><name pos:start="27:17" pos:end="27:24">get_bits</name><argument_list pos:start="27:25" pos:end="27:35">(<argument pos:start="27:26" pos:end="27:31"><expr pos:start="27:26" pos:end="27:31"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:31"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:31">gb</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:34"><expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:38" pos:end="27:49">/* GQUANT */</comment>



    <comment type="block" pos:start="31:5" pos:end="31:13">/* GEI */</comment>

    <while pos:start="33:5" pos:end="37:5">while <condition pos:start="33:11" pos:end="33:34">(<expr pos:start="33:12" pos:end="33:33"><call pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:20">get_bits1</name><argument_list pos:start="33:21" pos:end="33:28">(<argument pos:start="33:22" pos:end="33:27"><expr pos:start="33:22" pos:end="33:27"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="33:30" pos:end="33:31">!=</operator> <literal type="number" pos:start="33:33" pos:end="33:33">0</literal></expr>)</condition> <block pos:start="33:36" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:29">

        <expr_stmt pos:start="35:9" pos:end="35:29"><expr pos:start="35:9" pos:end="35:28"><call pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:17">skip_bits</name><argument_list pos:start="35:18" pos:end="35:28">(<argument pos:start="35:19" pos:end="35:24"><expr pos:start="35:19" pos:end="35:24"><operator pos:start="35:19" pos:end="35:19">&amp;</operator><name pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:24">gb</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:27"><expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if<condition pos:start="41:7" pos:end="41:20">(<expr pos:start="41:8" pos:end="41:19"><name pos:start="41:8" pos:end="41:16"><name pos:start="41:8" pos:end="41:8">s</name><operator pos:start="41:9" pos:end="41:10">-&gt;</operator><name pos:start="41:11" pos:end="41:16">qscale</name></name><operator pos:start="41:17" pos:end="41:18">==</operator><literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="47:5" pos:end="47:86">// For the first transmitted macroblock in a GOB, MBA is the absolute address. For</comment>

    <comment type="line" pos:start="49:5" pos:end="49:86">// subsequent macroblocks, MBA is the difference between the absolute addresses of</comment>

    <comment type="line" pos:start="51:5" pos:end="51:58">// the macroblock and the last transmitted macroblock.</comment>

    <expr_stmt pos:start="53:5" pos:end="53:23"><expr pos:start="53:5" pos:end="53:22"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:5">h</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:18">current_mba</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:5">h</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:15">mba_diff</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <literal type="number" pos:start="55:19" pos:end="55:19">0</literal></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
