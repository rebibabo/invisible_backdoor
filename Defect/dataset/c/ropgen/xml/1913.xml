<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1913.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">write_note</name><parameter_list pos:start="1:22" pos:end="1:53">(<parameter pos:start="1:23" pos:end="1:44"><decl pos:start="1:23" pos:end="1:44"><type pos:start="1:23" pos:end="1:44"><name pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:39">memelfnote</name></name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">men</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:52"><decl pos:start="1:47" pos:end="1:52"><type pos:start="1:47" pos:end="1:52"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:52">fd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">elf_note</name></name></type> <name pos:start="5:21" pos:end="5:22">en</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:30"><expr pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:6">en</name><operator pos:start="9:7" pos:end="9:7">.</operator><name pos:start="9:8" pos:end="9:15">n_namesz</name></name> <operator pos:start="9:17" pos:end="9:17">=</operator> <name pos:start="9:19" pos:end="9:29"><name pos:start="9:19" pos:end="9:21">men</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:29">namesz</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:26"><expr pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:6">en</name><operator pos:start="11:7" pos:end="11:7">.</operator><name pos:start="11:8" pos:end="11:13">n_type</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:25"><name pos:start="11:17" pos:end="11:19">men</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:25">type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:6">en</name><operator pos:start="13:7" pos:end="13:7">.</operator><name pos:start="13:8" pos:end="13:15">n_descsz</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:29"><name pos:start="13:19" pos:end="13:21">men</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:29">datasz</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:14">bswap_note</name><argument_list pos:start="17:15" pos:end="17:19">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><operator pos:start="17:16" pos:end="17:16">&amp;</operator><name pos:start="17:17" pos:end="17:18">en</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:20"><if pos:start="21:5" pos:end="23:20">if <condition pos:start="21:8" pos:end="21:45">(<expr pos:start="21:9" pos:end="21:44"><call pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:18">dump_write</name><argument_list pos:start="21:19" pos:end="21:39">(<argument pos:start="21:20" pos:end="21:21"><expr pos:start="21:20" pos:end="21:21"><name pos:start="21:20" pos:end="21:21">fd</name></expr></argument>, <argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><operator pos:start="21:24" pos:end="21:24">&amp;</operator><name pos:start="21:25" pos:end="21:26">en</name></expr></argument>, <argument pos:start="21:29" pos:end="21:38"><expr pos:start="21:29" pos:end="21:38"><sizeof pos:start="21:29" pos:end="21:38">sizeof<argument_list pos:start="21:35" pos:end="21:38">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><name pos:start="21:36" pos:end="21:37">en</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="21:41" pos:end="21:42">!=</operator> <literal type="number" pos:start="21:44" pos:end="21:44">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:20"><block_content pos:start="23:9" pos:end="23:20">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><operator pos:start="23:16" pos:end="23:16">(</operator><operator pos:start="23:17" pos:end="23:17">-</operator><literal type="number" pos:start="23:18" pos:end="23:18">1</literal><operator pos:start="23:19" pos:end="23:19">)</operator></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:20"><if pos:start="25:5" pos:end="27:20">if <condition pos:start="25:8" pos:end="25:60">(<expr pos:start="25:9" pos:end="25:59"><call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:18">dump_write</name><argument_list pos:start="25:19" pos:end="25:54">(<argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><name pos:start="25:20" pos:end="25:21">fd</name></expr></argument>, <argument pos:start="25:24" pos:end="25:32"><expr pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:26">men</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:32">name</name></name></expr></argument>, <argument pos:start="25:35" pos:end="25:53"><expr pos:start="25:35" pos:end="25:53"><name pos:start="25:35" pos:end="25:53"><name pos:start="25:35" pos:end="25:37">men</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:53">namesz_rounded</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:56" pos:end="25:57">!=</operator> <literal type="number" pos:start="25:59" pos:end="25:59">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:20"><block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><operator pos:start="27:16" pos:end="27:16">(</operator><operator pos:start="27:17" pos:end="27:17">-</operator><literal type="number" pos:start="27:18" pos:end="27:18">1</literal><operator pos:start="27:19" pos:end="27:19">)</operator></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:20"><if pos:start="29:5" pos:end="31:20">if <condition pos:start="29:8" pos:end="29:52">(<expr pos:start="29:9" pos:end="29:51"><call pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:18">dump_write</name><argument_list pos:start="29:19" pos:end="29:46">(<argument pos:start="29:20" pos:end="29:21"><expr pos:start="29:20" pos:end="29:21"><name pos:start="29:20" pos:end="29:21">fd</name></expr></argument>, <argument pos:start="29:24" pos:end="29:32"><expr pos:start="29:24" pos:end="29:32"><name pos:start="29:24" pos:end="29:32"><name pos:start="29:24" pos:end="29:26">men</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:32">data</name></name></expr></argument>, <argument pos:start="29:35" pos:end="29:45"><expr pos:start="29:35" pos:end="29:45"><name pos:start="29:35" pos:end="29:45"><name pos:start="29:35" pos:end="29:37">men</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:45">datasz</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:48" pos:end="29:49">!=</operator> <literal type="number" pos:start="29:51" pos:end="29:51">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:20"><block_content pos:start="31:9" pos:end="31:20">

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><operator pos:start="31:16" pos:end="31:16">(</operator><operator pos:start="31:17" pos:end="31:17">-</operator><literal type="number" pos:start="31:18" pos:end="31:18">1</literal><operator pos:start="31:19" pos:end="31:19">)</operator></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="35:5" pos:end="35:15">return <expr pos:start="35:12" pos:end="35:14"><operator pos:start="35:12" pos:end="35:12">(</operator><literal type="number" pos:start="35:13" pos:end="35:13">0</literal><operator pos:start="35:14" pos:end="35:14">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
