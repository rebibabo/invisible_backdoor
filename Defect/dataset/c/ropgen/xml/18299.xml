<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18299.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">av_read_packet</name><parameter_list pos:start="1:19" pos:end="1:53">(<parameter pos:start="1:20" pos:end="1:37"><decl pos:start="1:20" pos:end="1:37"><type pos:start="1:20" pos:end="1:37"><name pos:start="1:20" pos:end="1:34">AVFormatContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">AVPacket</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:5">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="131:5">for<control pos:start="11:8" pos:end="11:11">(<init pos:start="11:9" pos:end="11:9">;</init><condition pos:start="11:10" pos:end="11:10">;</condition><incr/>)</control><block pos:start="11:12" pos:end="131:5">{<block_content pos:start="13:9" pos:end="129:9">

        <decl_stmt pos:start="13:9" pos:end="13:50"><decl pos:start="13:9" pos:end="13:49"><type pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:20">AVPacketList</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:26">pktl</name> <init pos:start="13:28" pos:end="13:49">= <expr pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:30">s</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:49">raw_packet_buffer</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="33:9"><if pos:start="17:9" pos:end="33:9">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><name pos:start="17:13" pos:end="17:16">pktl</name></expr>)</condition> <block pos:start="17:19" pos:end="33:9">{<block_content pos:start="19:13" pos:end="31:13">

            <expr_stmt pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:28"><operator pos:start="19:13" pos:end="19:13">*</operator><name pos:start="19:14" pos:end="19:16">pkt</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:23">pktl</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">pkt</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="21:13" pos:end="31:13"><if pos:start="21:13" pos:end="31:13">if<condition pos:start="21:15" pos:end="23:61">(<expr pos:start="21:16" pos:end="23:60"><name pos:start="21:16" pos:end="21:44"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:25">streams</name><index pos:start="21:26" pos:end="21:44">[<expr pos:start="21:27" pos:end="21:43"><name pos:start="21:27" pos:end="21:43"><name pos:start="21:27" pos:end="21:29">pkt</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:43">stream_index</name></name></expr>]</index></name><operator pos:start="21:45" pos:end="21:46">-&gt;</operator><name pos:start="21:47" pos:end="21:61"><name pos:start="21:47" pos:end="21:51">codec</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:61">codec_id</name></name> <operator pos:start="21:63" pos:end="21:64">!=</operator> <name pos:start="21:66" pos:end="21:79">CODEC_ID_PROBE</name> <operator pos:start="21:81" pos:end="21:82">||</operator>

               <operator pos:start="23:16" pos:end="23:16">!</operator><name pos:start="23:17" pos:end="23:45"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:26">streams</name><index pos:start="23:27" pos:end="23:45">[<expr pos:start="23:28" pos:end="23:44"><name pos:start="23:28" pos:end="23:44"><name pos:start="23:28" pos:end="23:30">pkt</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:44">stream_index</name></name></expr>]</index></name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:60">probe_packets</name></expr>)</condition><block pos:start="23:62" pos:end="31:13">{<block_content pos:start="25:17" pos:end="29:25">

                <expr_stmt pos:start="25:17" pos:end="25:50"><expr pos:start="25:17" pos:end="25:49"><name pos:start="25:17" pos:end="25:36"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:36">raw_packet_buffer</name></name> <operator pos:start="25:38" pos:end="25:38">=</operator> <name pos:start="25:40" pos:end="25:49"><name pos:start="25:40" pos:end="25:43">pktl</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:49">next</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="27:17" pos:end="27:30"><expr pos:start="27:17" pos:end="27:29"><call pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:23">av_free</name><argument_list pos:start="27:24" pos:end="27:29">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="29:17" pos:end="29:25">return <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:22">av_init_packet</name><argument_list pos:start="37:23" pos:end="37:27">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:45"><expr pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:11">ret</name><operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:44"><name pos:start="39:14" pos:end="39:36"><name pos:start="39:14" pos:end="39:14">s</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:23">iformat</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:36">read_packet</name></name><argument_list pos:start="39:37" pos:end="39:44">(<argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><name pos:start="39:38" pos:end="39:38">s</name></expr></argument>, <argument pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><name pos:start="39:41" pos:end="39:43">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="53:9"><if pos:start="41:9" pos:end="53:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="53:9">{<block_content pos:start="43:13" pos:end="51:21">

            <if_stmt pos:start="43:13" pos:end="45:27"><if pos:start="43:13" pos:end="45:27">if <condition pos:start="43:16" pos:end="43:48">(<expr pos:start="43:17" pos:end="43:47"><operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:21">pktl</name> <operator pos:start="43:23" pos:end="43:24">||</operator> <name pos:start="43:26" pos:end="43:28">ret</name> <operator pos:start="43:30" pos:end="43:31">==</operator> <call pos:start="43:33" pos:end="43:47"><name pos:start="43:33" pos:end="43:39">AVERROR</name><argument_list pos:start="43:40" pos:end="43:47">(<argument pos:start="43:41" pos:end="43:46"><expr pos:start="43:41" pos:end="43:46"><name pos:start="43:41" pos:end="43:46">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:27"><block_content pos:start="45:17" pos:end="45:27">

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <for pos:start="47:13" pos:end="49:49">for <control pos:start="47:17" pos:end="47:47">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">i</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:42"><expr pos:start="47:25" pos:end="47:41"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <name pos:start="47:29" pos:end="47:41"><name pos:start="47:29" pos:end="47:29">s</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:41">nb_streams</name></name></expr>;</condition> <incr pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:44">i</name><operator pos:start="47:45" pos:end="47:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:17" pos:end="49:49"><block_content pos:start="49:17" pos:end="49:49">

                <expr_stmt pos:start="49:17" pos:end="49:49"><expr pos:start="49:17" pos:end="49:48"><name pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:26">streams</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">i</name></expr>]</index></name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:44">probe_packets</name> <operator pos:start="49:46" pos:end="49:46">=</operator> <literal type="number" pos:start="49:48" pos:end="49:48">0</literal></expr>;</expr_stmt></block_content></block></for>

            <continue pos:start="51:13" pos:end="51:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:42"><expr pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:10">st</name><operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:22">streams</name><index pos:start="55:23" pos:end="55:41">[<expr pos:start="55:24" pos:end="55:40"><name pos:start="55:24" pos:end="55:40"><name pos:start="55:24" pos:end="55:26">pkt</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:40">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>



        <switch pos:start="59:9" pos:end="79:9">switch<condition pos:start="59:15" pos:end="59:37">(<expr pos:start="59:16" pos:end="59:36"><name pos:start="59:16" pos:end="59:36"><name pos:start="59:16" pos:end="59:17">st</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">codec</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:36">codec_type</name></name></expr>)</condition><block pos:start="59:38" pos:end="79:9">{<block_content pos:start="61:9" pos:end="77:18">

        <case pos:start="61:9" pos:end="61:30">case <expr pos:start="61:14" pos:end="61:29"><name pos:start="61:14" pos:end="61:29">CODEC_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="63:13" pos:end="63:75"><if pos:start="63:13" pos:end="63:75">if<condition pos:start="63:15" pos:end="63:33">(<expr pos:start="63:16" pos:end="63:32"><name pos:start="63:16" pos:end="63:32"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:32">video_codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="63:37" pos:end="63:75"><block_content pos:start="63:37" pos:end="63:75">   <expr_stmt pos:start="63:37" pos:end="63:75"><expr pos:start="63:37" pos:end="63:74"><name pos:start="63:37" pos:end="63:55"><name pos:start="63:37" pos:end="63:38">st</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:45">codec</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:55">codec_id</name></name><operator pos:start="63:56" pos:end="63:56">=</operator> <name pos:start="63:58" pos:end="63:74"><name pos:start="63:58" pos:end="63:58">s</name><operator pos:start="63:59" pos:end="63:60">-&gt;</operator><name pos:start="63:61" pos:end="63:74">video_codec_id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:30">case <expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:29">CODEC_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="69:13" pos:end="69:75"><if pos:start="69:13" pos:end="69:75">if<condition pos:start="69:15" pos:end="69:33">(<expr pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:32"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:32">audio_codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="69:37" pos:end="69:75"><block_content pos:start="69:37" pos:end="69:75">   <expr_stmt pos:start="69:37" pos:end="69:75"><expr pos:start="69:37" pos:end="69:74"><name pos:start="69:37" pos:end="69:55"><name pos:start="69:37" pos:end="69:38">st</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:45">codec</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:55">codec_id</name></name><operator pos:start="69:56" pos:end="69:56">=</operator> <name pos:start="69:58" pos:end="69:74"><name pos:start="69:58" pos:end="69:58">s</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:74">audio_codec_id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:33">case <expr pos:start="73:14" pos:end="73:32"><name pos:start="73:14" pos:end="73:32">CODEC_TYPE_SUBTITLE</name></expr>:</case>

            <if_stmt pos:start="75:13" pos:end="75:78"><if pos:start="75:13" pos:end="75:78">if<condition pos:start="75:15" pos:end="75:36">(<expr pos:start="75:16" pos:end="75:35"><name pos:start="75:16" pos:end="75:35"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:35">subtitle_codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="75:37" pos:end="75:78"><block_content pos:start="75:37" pos:end="75:78"><expr_stmt pos:start="75:37" pos:end="75:78"><expr pos:start="75:37" pos:end="75:77"><name pos:start="75:37" pos:end="75:55"><name pos:start="75:37" pos:end="75:38">st</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:45">codec</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:55">codec_id</name></name><operator pos:start="75:56" pos:end="75:56">=</operator> <name pos:start="75:58" pos:end="75:77"><name pos:start="75:58" pos:end="75:58">s</name><operator pos:start="75:59" pos:end="75:60">-&gt;</operator><name pos:start="75:61" pos:end="75:77">subtitle_codec_id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="83:9" pos:end="87:23"><if pos:start="83:9" pos:end="87:23">if<condition pos:start="83:11" pos:end="85:41">(<expr pos:start="83:12" pos:end="85:40"><operator pos:start="83:12" pos:end="83:12">!</operator><name pos:start="83:13" pos:end="83:16">pktl</name> <operator pos:start="83:18" pos:end="83:19">&amp;&amp;</operator> <operator pos:start="83:21" pos:end="83:21">(</operator><name pos:start="83:22" pos:end="83:40"><name pos:start="83:22" pos:end="83:23">st</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:30">codec</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:40">codec_id</name></name> <operator pos:start="83:42" pos:end="83:43">!=</operator> <name pos:start="83:45" pos:end="83:58">CODEC_ID_PROBE</name> <operator pos:start="83:60" pos:end="83:61">||</operator>

                     <operator pos:start="85:22" pos:end="85:22">!</operator><name pos:start="85:23" pos:end="85:39"><name pos:start="85:23" pos:end="85:24">st</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:39">probe_packets</name></name><operator pos:start="85:40" pos:end="85:40">)</operator></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:23"><block_content pos:start="87:13" pos:end="87:23">

            <return pos:start="87:13" pos:end="87:23">return <expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:77"><expr pos:start="91:9" pos:end="91:76"><call pos:start="91:9" pos:end="91:76"><name pos:start="91:9" pos:end="91:21">add_to_pktbuf</name><argument_list pos:start="91:22" pos:end="91:76">(<argument pos:start="91:23" pos:end="91:43"><expr pos:start="91:23" pos:end="91:43"><operator pos:start="91:23" pos:end="91:23">&amp;</operator><name pos:start="91:24" pos:end="91:43"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:43">raw_packet_buffer</name></name></expr></argument>, <argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">pkt</name></expr></argument>, <argument pos:start="91:51" pos:end="91:75"><expr pos:start="91:51" pos:end="91:75"><operator pos:start="91:51" pos:end="91:51">&amp;</operator><name pos:start="91:52" pos:end="91:75"><name pos:start="91:52" pos:end="91:52">s</name><operator pos:start="91:53" pos:end="91:54">-&gt;</operator><name pos:start="91:55" pos:end="91:75">raw_packet_buffer_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="95:9" pos:end="129:9"><if pos:start="95:9" pos:end="129:9">if<condition pos:start="95:11" pos:end="95:49">(<expr pos:start="95:12" pos:end="95:48"><name pos:start="95:12" pos:end="95:30"><name pos:start="95:12" pos:end="95:13">st</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:20">codec</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:30">codec_id</name></name> <operator pos:start="95:32" pos:end="95:33">==</operator> <name pos:start="95:35" pos:end="95:48">CODEC_ID_PROBE</name></expr>)</condition><block pos:start="95:50" pos:end="129:9">{<block_content pos:start="97:13" pos:end="127:13">

            <decl_stmt pos:start="97:13" pos:end="97:46"><decl pos:start="97:13" pos:end="97:45"><type pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:23">AVProbeData</name> <modifier pos:start="97:25" pos:end="97:25">*</modifier></type><name pos:start="97:26" pos:end="97:27">pd</name> <init pos:start="97:29" pos:end="97:45">= <expr pos:start="97:31" pos:end="97:45"><operator pos:start="97:31" pos:end="97:31">&amp;</operator><name pos:start="97:32" pos:end="97:45"><name pos:start="97:32" pos:end="97:33">st</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:45">probe_data</name></name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><operator pos:start="101:13" pos:end="101:14">--</operator><name pos:start="101:15" pos:end="101:31"><name pos:start="101:15" pos:end="101:16">st</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:31">probe_packets</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:87"><expr pos:start="105:13" pos:end="105:86"><name pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:14">pd</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:19">buf</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="105:86"><name pos:start="105:23" pos:end="105:32">av_realloc</name><argument_list pos:start="105:33" pos:end="105:86">(<argument pos:start="105:34" pos:end="105:40"><expr pos:start="105:34" pos:end="105:40"><name pos:start="105:34" pos:end="105:40"><name pos:start="105:34" pos:end="105:35">pd</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:40">buf</name></name></expr></argument>, <argument pos:start="105:43" pos:end="105:85"><expr pos:start="105:43" pos:end="105:85"><name pos:start="105:43" pos:end="105:54"><name pos:start="105:43" pos:end="105:44">pd</name><operator pos:start="105:45" pos:end="105:46">-&gt;</operator><name pos:start="105:47" pos:end="105:54">buf_size</name></name><operator pos:start="105:55" pos:end="105:55">+</operator><name pos:start="105:56" pos:end="105:64"><name pos:start="105:56" pos:end="105:58">pkt</name><operator pos:start="105:59" pos:end="105:60">-&gt;</operator><name pos:start="105:61" pos:end="105:64">size</name></name><operator pos:start="105:65" pos:end="105:65">+</operator><name pos:start="105:66" pos:end="105:85">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:63"><expr pos:start="107:13" pos:end="107:62"><call pos:start="107:13" pos:end="107:62"><name pos:start="107:13" pos:end="107:18">memcpy</name><argument_list pos:start="107:19" pos:end="107:62">(<argument pos:start="107:20" pos:end="107:39"><expr pos:start="107:20" pos:end="107:39"><name pos:start="107:20" pos:end="107:26"><name pos:start="107:20" pos:end="107:21">pd</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:26">buf</name></name><operator pos:start="107:27" pos:end="107:27">+</operator><name pos:start="107:28" pos:end="107:39"><name pos:start="107:28" pos:end="107:29">pd</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:39">buf_size</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:50"><expr pos:start="107:42" pos:end="107:50"><name pos:start="107:42" pos:end="107:50"><name pos:start="107:42" pos:end="107:44">pkt</name><operator pos:start="107:45" pos:end="107:46">-&gt;</operator><name pos:start="107:47" pos:end="107:50">data</name></name></expr></argument>, <argument pos:start="107:53" pos:end="107:61"><expr pos:start="107:53" pos:end="107:61"><name pos:start="107:53" pos:end="107:61"><name pos:start="107:53" pos:end="107:55">pkt</name><operator pos:start="107:56" pos:end="107:57">-&gt;</operator><name pos:start="107:58" pos:end="107:61">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:38"><expr pos:start="109:13" pos:end="109:37"><name pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:14">pd</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:24">buf_size</name></name> <operator pos:start="109:26" pos:end="109:27">+=</operator> <name pos:start="109:29" pos:end="109:37"><name pos:start="109:29" pos:end="109:31">pkt</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:37">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:66"><expr pos:start="111:13" pos:end="111:65"><call pos:start="111:13" pos:end="111:65"><name pos:start="111:13" pos:end="111:18">memset</name><argument_list pos:start="111:19" pos:end="111:65">(<argument pos:start="111:20" pos:end="111:39"><expr pos:start="111:20" pos:end="111:39"><name pos:start="111:20" pos:end="111:26"><name pos:start="111:20" pos:end="111:21">pd</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:26">buf</name></name><operator pos:start="111:27" pos:end="111:27">+</operator><name pos:start="111:28" pos:end="111:39"><name pos:start="111:28" pos:end="111:29">pd</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:39">buf_size</name></name></expr></argument>, <argument pos:start="111:42" pos:end="111:42"><expr pos:start="111:42" pos:end="111:42"><literal type="number" pos:start="111:42" pos:end="111:42">0</literal></expr></argument>, <argument pos:start="111:45" pos:end="111:64"><expr pos:start="111:45" pos:end="111:64"><name pos:start="111:45" pos:end="111:64">AVPROBE_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="115:13" pos:end="127:13"><if pos:start="115:13" pos:end="127:13">if<condition pos:start="115:15" pos:end="115:74">(<expr pos:start="115:16" pos:end="115:73"><call pos:start="115:16" pos:end="115:36"><name pos:start="115:16" pos:end="115:22">av_log2</name><argument_list pos:start="115:23" pos:end="115:36">(<argument pos:start="115:24" pos:end="115:35"><expr pos:start="115:24" pos:end="115:35"><name pos:start="115:24" pos:end="115:35"><name pos:start="115:24" pos:end="115:25">pd</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:35">buf_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:38" pos:end="115:39">!=</operator> <call pos:start="115:41" pos:end="115:73"><name pos:start="115:41" pos:end="115:47">av_log2</name><argument_list pos:start="115:48" pos:end="115:73">(<argument pos:start="115:49" pos:end="115:72"><expr pos:start="115:49" pos:end="115:72"><name pos:start="115:49" pos:end="115:60"><name pos:start="115:49" pos:end="115:50">pd</name><operator pos:start="115:51" pos:end="115:52">-&gt;</operator><name pos:start="115:53" pos:end="115:60">buf_size</name></name> <operator pos:start="115:62" pos:end="115:62">-</operator> <name pos:start="115:64" pos:end="115:72"><name pos:start="115:64" pos:end="115:66">pkt</name><operator pos:start="115:67" pos:end="115:68">-&gt;</operator><name pos:start="115:69" pos:end="115:72">size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="115:75" pos:end="127:13">{<block_content pos:start="117:17" pos:end="125:17">

                <expr_stmt pos:start="117:17" pos:end="117:53"><expr pos:start="117:17" pos:end="117:52"><call pos:start="117:17" pos:end="117:52"><name pos:start="117:17" pos:end="117:41">set_codec_from_probe_data</name><argument_list pos:start="117:42" pos:end="117:52">(<argument pos:start="117:43" pos:end="117:44"><expr pos:start="117:43" pos:end="117:44"><name pos:start="117:43" pos:end="117:44">st</name></expr></argument>, <argument pos:start="117:47" pos:end="117:48"><expr pos:start="117:47" pos:end="117:48"><name pos:start="117:47" pos:end="117:48">pd</name></expr></argument>, <argument pos:start="117:51" pos:end="117:51"><expr pos:start="117:51" pos:end="117:51"><literal type="number" pos:start="117:51" pos:end="117:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="125:17"><if pos:start="119:17" pos:end="125:17">if<condition pos:start="119:19" pos:end="119:57">(<expr pos:start="119:20" pos:end="119:56"><name pos:start="119:20" pos:end="119:38"><name pos:start="119:20" pos:end="119:21">st</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:28">codec</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:38">codec_id</name></name> <operator pos:start="119:40" pos:end="119:41">!=</operator> <name pos:start="119:43" pos:end="119:56">CODEC_ID_PROBE</name></expr>)</condition><block pos:start="119:58" pos:end="125:17">{<block_content pos:start="121:21" pos:end="123:39">

                    <expr_stmt pos:start="121:21" pos:end="121:35"><expr pos:start="121:21" pos:end="121:34"><name pos:start="121:21" pos:end="121:32"><name pos:start="121:21" pos:end="121:22">pd</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:32">buf_size</name></name><operator pos:start="121:33" pos:end="121:33">=</operator><literal type="number" pos:start="121:34" pos:end="121:34">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:39"><expr pos:start="123:21" pos:end="123:38"><call pos:start="123:21" pos:end="123:38"><name pos:start="123:21" pos:end="123:28">av_freep</name><argument_list pos:start="123:29" pos:end="123:38">(<argument pos:start="123:30" pos:end="123:37"><expr pos:start="123:30" pos:end="123:37"><operator pos:start="123:30" pos:end="123:30">&amp;</operator><name pos:start="123:31" pos:end="123:37"><name pos:start="123:31" pos:end="123:32">pd</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:37">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
