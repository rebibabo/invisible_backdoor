<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19878.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">vc1_decode_ac_coeff</name><parameter_list pos:start="1:32" pos:end="1:95">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:42">VC1Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">v</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">last</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">skip</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:79"><decl pos:start="1:70" pos:end="1:79"><type pos:start="1:70" pos:end="1:79"><name pos:start="1:70" pos:end="1:72">int</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:79">value</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:94"><decl pos:start="1:82" pos:end="1:94"><type pos:start="1:82" pos:end="1:94"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:94">codingset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:19">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:30">.</operator><name pos:start="5:31" pos:end="5:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">escape</name></decl>, <decl pos:start="7:24" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:26">run</name> <init pos:start="7:28" pos:end="7:30">= <expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></init></decl>, <decl pos:start="7:33" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:33" pos:end="7:37">level</name> <init pos:start="7:39" pos:end="7:41">= <expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">0</literal></expr></init></decl>, <decl pos:start="7:44" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:46">lst</name> <init pos:start="7:48" pos:end="7:50">= <expr pos:start="7:50" pos:end="7:50"><literal type="number" pos:start="7:50" pos:end="7:50">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:81"><expr pos:start="11:5" pos:end="11:80"><name pos:start="11:5" pos:end="11:9">index</name> <operator pos:start="11:11" pos:end="11:11">=</operator> <call pos:start="11:13" pos:end="11:80"><name pos:start="11:13" pos:end="11:20">get_vlc2</name><argument_list pos:start="11:21" pos:end="11:80">(<argument pos:start="11:22" pos:end="11:23"><expr pos:start="11:22" pos:end="11:23"><name pos:start="11:22" pos:end="11:23">gb</name></expr></argument>, <argument pos:start="11:26" pos:end="11:63"><expr pos:start="11:26" pos:end="11:63"><name pos:start="11:26" pos:end="11:57"><name pos:start="11:26" pos:end="11:46">ff_vc1_ac_coeff_table</name><index pos:start="11:47" pos:end="11:57">[<expr pos:start="11:48" pos:end="11:56"><name pos:start="11:48" pos:end="11:56">codingset</name></expr>]</index></name><operator pos:start="11:58" pos:end="11:58">.</operator><name pos:start="11:59" pos:end="11:63">table</name></expr></argument>, <argument pos:start="11:66" pos:end="11:76"><expr pos:start="11:66" pos:end="11:76"><name pos:start="11:66" pos:end="11:76">AC_VLC_BITS</name></expr></argument>, <argument pos:start="11:79" pos:end="11:79"><expr pos:start="11:79" pos:end="11:79"><literal type="number" pos:start="11:79" pos:end="11:79">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="103:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:45">(<expr pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:13">index</name> <operator pos:start="13:15" pos:end="13:16">!=</operator> <name pos:start="13:18" pos:end="13:40"><name pos:start="13:18" pos:end="13:29">vc1_ac_sizes</name><index pos:start="13:30" pos:end="13:40">[<expr pos:start="13:31" pos:end="13:39"><name pos:start="13:31" pos:end="13:39">codingset</name></expr>]</index></name> <operator pos:start="13:42" pos:end="13:42">-</operator> <literal type="number" pos:start="13:44" pos:end="13:44">1</literal></expr>)</condition> <block pos:start="13:47" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:27">

        <expr_stmt pos:start="15:9" pos:end="15:58"><expr pos:start="15:9" pos:end="15:57"><name pos:start="15:9" pos:end="15:11">run</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:57"><name pos:start="15:15" pos:end="15:36">vc1_index_decode_table</name><index pos:start="15:37" pos:end="15:47">[<expr pos:start="15:38" pos:end="15:46"><name pos:start="15:38" pos:end="15:46">codingset</name></expr>]</index><index pos:start="15:48" pos:end="15:54">[<expr pos:start="15:49" pos:end="15:53"><name pos:start="15:49" pos:end="15:53">index</name></expr>]</index><index pos:start="15:55" pos:end="15:57">[<expr pos:start="15:56" pos:end="15:56"><literal type="number" pos:start="15:56" pos:end="15:56">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:60"><expr pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:13">level</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:59"><name pos:start="17:17" pos:end="17:38">vc1_index_decode_table</name><index pos:start="17:39" pos:end="17:49">[<expr pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:48">codingset</name></expr>]</index><index pos:start="17:50" pos:end="17:56">[<expr pos:start="17:51" pos:end="17:55"><name pos:start="17:51" pos:end="17:55">index</name></expr>]</index><index pos:start="17:57" pos:end="17:59">[<expr pos:start="17:58" pos:end="17:58"><literal type="number" pos:start="17:58" pos:end="17:58">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:11">lst</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <name pos:start="19:15" pos:end="19:19">index</name> <operator pos:start="19:21" pos:end="19:22">&gt;=</operator> <name pos:start="19:24" pos:end="19:55"><name pos:start="19:24" pos:end="19:44">vc1_last_decode_table</name><index pos:start="19:45" pos:end="19:55">[<expr pos:start="19:46" pos:end="19:54"><name pos:start="19:46" pos:end="19:54">codingset</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:27"><if pos:start="21:9" pos:end="23:27">if<condition pos:start="21:11" pos:end="21:25">(<expr pos:start="21:12" pos:end="21:24"><call pos:start="21:12" pos:end="21:24"><name pos:start="21:12" pos:end="21:20">get_bits1</name><argument_list pos:start="21:21" pos:end="21:24">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:27"><block_content pos:start="23:13" pos:end="23:27">

            <expr_stmt pos:start="23:13" pos:end="23:27"><expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:17">level</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <operator pos:start="23:21" pos:end="23:21">-</operator><name pos:start="23:22" pos:end="23:26">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="103:5">else <block pos:start="25:12" pos:end="103:5">{<block_content pos:start="27:9" pos:end="101:9">

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:14">escape</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:30"><name pos:start="27:18" pos:end="27:26">decode210</name><argument_list pos:start="27:27" pos:end="27:30">(<argument pos:start="27:28" pos:end="27:29"><expr pos:start="27:28" pos:end="27:29"><name pos:start="27:28" pos:end="27:29">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="101:9"><if pos:start="29:9" pos:end="65:9">if <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:18">escape</name> <operator pos:start="29:20" pos:end="29:21">!=</operator> <literal type="number" pos:start="29:23" pos:end="29:23">2</literal></expr>)</condition> <block pos:start="29:26" pos:end="65:9">{<block_content pos:start="31:13" pos:end="63:31">

            <expr_stmt pos:start="31:13" pos:end="31:89"><expr pos:start="31:13" pos:end="31:88"><name pos:start="31:13" pos:end="31:17">index</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:88"><name pos:start="31:21" pos:end="31:28">get_vlc2</name><argument_list pos:start="31:29" pos:end="31:88">(<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">gb</name></expr></argument>, <argument pos:start="31:34" pos:end="31:71"><expr pos:start="31:34" pos:end="31:71"><name pos:start="31:34" pos:end="31:65"><name pos:start="31:34" pos:end="31:54">ff_vc1_ac_coeff_table</name><index pos:start="31:55" pos:end="31:65">[<expr pos:start="31:56" pos:end="31:64"><name pos:start="31:56" pos:end="31:64">codingset</name></expr>]</index></name><operator pos:start="31:66" pos:end="31:66">.</operator><name pos:start="31:67" pos:end="31:71">table</name></expr></argument>, <argument pos:start="31:74" pos:end="31:84"><expr pos:start="31:74" pos:end="31:84"><name pos:start="31:74" pos:end="31:84">AC_VLC_BITS</name></expr></argument>, <argument pos:start="31:87" pos:end="31:87"><expr pos:start="31:87" pos:end="31:87"><literal type="number" pos:start="31:87" pos:end="31:87">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:62"><expr pos:start="33:13" pos:end="33:61"><name pos:start="33:13" pos:end="33:15">run</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:61"><name pos:start="33:19" pos:end="33:40">vc1_index_decode_table</name><index pos:start="33:41" pos:end="33:51">[<expr pos:start="33:42" pos:end="33:50"><name pos:start="33:42" pos:end="33:50">codingset</name></expr>]</index><index pos:start="33:52" pos:end="33:58">[<expr pos:start="33:53" pos:end="33:57"><name pos:start="33:53" pos:end="33:57">index</name></expr>]</index><index pos:start="33:59" pos:end="33:61">[<expr pos:start="33:60" pos:end="33:60"><literal type="number" pos:start="33:60" pos:end="33:60">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:64"><expr pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:17">level</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:63"><name pos:start="35:21" pos:end="35:42">vc1_index_decode_table</name><index pos:start="35:43" pos:end="35:53">[<expr pos:start="35:44" pos:end="35:52"><name pos:start="35:44" pos:end="35:52">codingset</name></expr>]</index><index pos:start="35:54" pos:end="35:60">[<expr pos:start="35:55" pos:end="35:59"><name pos:start="35:55" pos:end="35:59">index</name></expr>]</index><index pos:start="35:61" pos:end="35:63">[<expr pos:start="35:62" pos:end="35:62"><literal type="number" pos:start="35:62" pos:end="35:62">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:60"><expr pos:start="37:13" pos:end="37:59"><name pos:start="37:13" pos:end="37:15">lst</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:23">index</name> <operator pos:start="37:25" pos:end="37:26">&gt;=</operator> <name pos:start="37:28" pos:end="37:59"><name pos:start="37:28" pos:end="37:48">vc1_last_decode_table</name><index pos:start="37:49" pos:end="37:59">[<expr pos:start="37:50" pos:end="37:58"><name pos:start="37:50" pos:end="37:58">codingset</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="59:13"><if pos:start="39:13" pos:end="49:13">if<condition pos:start="39:15" pos:end="39:27">(<expr pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:21">escape</name> <operator pos:start="39:23" pos:end="39:24">==</operator> <literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>)</condition> <block pos:start="39:29" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:67">

                <if_stmt pos:start="41:17" pos:end="47:67"><if pos:start="41:17" pos:end="43:72">if<condition pos:start="41:19" pos:end="41:23">(<expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">lst</name></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:72"><block_content pos:start="43:21" pos:end="43:72">

                    <expr_stmt pos:start="43:21" pos:end="43:72"><expr pos:start="43:21" pos:end="43:71"><name pos:start="43:21" pos:end="43:25">level</name> <operator pos:start="43:27" pos:end="43:28">+=</operator> <name pos:start="43:30" pos:end="43:71"><name pos:start="43:30" pos:end="43:55">vc1_last_delta_level_table</name><index pos:start="43:56" pos:end="43:66">[<expr pos:start="43:57" pos:end="43:65"><name pos:start="43:57" pos:end="43:65">codingset</name></expr>]</index><index pos:start="43:67" pos:end="43:71">[<expr pos:start="43:68" pos:end="43:70"><name pos:start="43:68" pos:end="43:70">run</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="45:17" pos:end="47:67">else<block type="pseudo" pos:start="47:21" pos:end="47:67"><block_content pos:start="47:21" pos:end="47:67">

                    <expr_stmt pos:start="47:21" pos:end="47:67"><expr pos:start="47:21" pos:end="47:66"><name pos:start="47:21" pos:end="47:25">level</name> <operator pos:start="47:27" pos:end="47:28">+=</operator> <name pos:start="47:30" pos:end="47:66"><name pos:start="47:30" pos:end="47:50">vc1_delta_level_table</name><index pos:start="47:51" pos:end="47:61">[<expr pos:start="47:52" pos:end="47:60"><name pos:start="47:52" pos:end="47:60">codingset</name></expr>]</index><index pos:start="47:62" pos:end="47:66">[<expr pos:start="47:63" pos:end="47:65"><name pos:start="47:63" pos:end="47:65">run</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="59:13">else <block pos:start="49:20" pos:end="59:13">{<block_content pos:start="51:17" pos:end="57:69">

                <if_stmt pos:start="51:17" pos:end="57:69"><if pos:start="51:17" pos:end="53:74">if<condition pos:start="51:19" pos:end="51:23">(<expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">lst</name></expr>)</condition><block type="pseudo" pos:start="53:21" pos:end="53:74"><block_content pos:start="53:21" pos:end="53:74">

                    <expr_stmt pos:start="53:21" pos:end="53:74"><expr pos:start="53:21" pos:end="53:73"><name pos:start="53:21" pos:end="53:23">run</name> <operator pos:start="53:25" pos:end="53:26">+=</operator> <name pos:start="53:28" pos:end="53:69"><name pos:start="53:28" pos:end="53:51">vc1_last_delta_run_table</name><index pos:start="53:52" pos:end="53:62">[<expr pos:start="53:53" pos:end="53:61"><name pos:start="53:53" pos:end="53:61">codingset</name></expr>]</index><index pos:start="53:63" pos:end="53:69">[<expr pos:start="53:64" pos:end="53:68"><name pos:start="53:64" pos:end="53:68">level</name></expr>]</index></name> <operator pos:start="53:71" pos:end="53:71">+</operator> <literal type="number" pos:start="53:73" pos:end="53:73">1</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="55:17" pos:end="57:69">else<block type="pseudo" pos:start="57:21" pos:end="57:69"><block_content pos:start="57:21" pos:end="57:69">

                    <expr_stmt pos:start="57:21" pos:end="57:69"><expr pos:start="57:21" pos:end="57:68"><name pos:start="57:21" pos:end="57:23">run</name> <operator pos:start="57:25" pos:end="57:26">+=</operator> <name pos:start="57:28" pos:end="57:64"><name pos:start="57:28" pos:end="57:46">vc1_delta_run_table</name><index pos:start="57:47" pos:end="57:57">[<expr pos:start="57:48" pos:end="57:56"><name pos:start="57:48" pos:end="57:56">codingset</name></expr>]</index><index pos:start="57:58" pos:end="57:64">[<expr pos:start="57:59" pos:end="57:63"><name pos:start="57:59" pos:end="57:63">level</name></expr>]</index></name> <operator pos:start="57:66" pos:end="57:66">+</operator> <literal type="number" pos:start="57:68" pos:end="57:68">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="61:13" pos:end="63:31"><if pos:start="61:13" pos:end="63:31">if<condition pos:start="61:15" pos:end="61:29">(<expr pos:start="61:16" pos:end="61:28"><call pos:start="61:16" pos:end="61:28"><name pos:start="61:16" pos:end="61:24">get_bits1</name><argument_list pos:start="61:25" pos:end="61:28">(<argument pos:start="61:26" pos:end="61:27"><expr pos:start="61:26" pos:end="61:27"><name pos:start="61:26" pos:end="61:27">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:31"><block_content pos:start="63:17" pos:end="63:31">

                <expr_stmt pos:start="63:17" pos:end="63:31"><expr pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:21">level</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <operator pos:start="63:25" pos:end="63:25">-</operator><name pos:start="63:26" pos:end="63:30">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="101:9">else <block pos:start="65:16" pos:end="101:9">{<block_content pos:start="67:13" pos:end="99:31">

            <decl_stmt pos:start="67:13" pos:end="67:21"><decl pos:start="67:13" pos:end="67:20"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:20">sign</name></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">lst</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:31"><name pos:start="69:19" pos:end="69:27">get_bits1</name><argument_list pos:start="69:28" pos:end="69:31">(<argument pos:start="69:29" pos:end="69:30"><expr pos:start="69:29" pos:end="69:30"><name pos:start="69:29" pos:end="69:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="89:13"><if pos:start="71:13" pos:end="89:13">if<condition pos:start="71:15" pos:end="71:43">(<expr pos:start="71:16" pos:end="71:42"><name pos:start="71:16" pos:end="71:37"><name pos:start="71:16" pos:end="71:16">v</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:37">esc3_level_length</name></name> <operator pos:start="71:39" pos:end="71:40">==</operator> <literal type="number" pos:start="71:42" pos:end="71:42">0</literal></expr>)</condition> <block pos:start="71:45" pos:end="89:13">{<block_content pos:start="73:17" pos:end="87:59">

                <if_stmt pos:start="73:17" pos:end="85:17"><if pos:start="73:17" pos:end="81:17">if<condition pos:start="73:19" pos:end="73:45">(<expr pos:start="73:20" pos:end="73:44"><name pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:20">v</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:24">pq</name></name> <operator pos:start="73:26" pos:end="73:26">&lt;</operator> <literal type="number" pos:start="73:28" pos:end="73:28">8</literal> <operator pos:start="73:30" pos:end="73:31">||</operator> <name pos:start="73:33" pos:end="73:44"><name pos:start="73:33" pos:end="73:33">v</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:44">dquantfrm</name></name></expr>)</condition> <block pos:start="73:47" pos:end="81:17">{<block_content pos:start="75:21" pos:end="79:69"> <comment type="line" pos:start="73:49" pos:end="73:59">// table 59</comment>

                    <expr_stmt pos:start="75:21" pos:end="75:61"><expr pos:start="75:21" pos:end="75:60"><name pos:start="75:21" pos:end="75:42"><name pos:start="75:21" pos:end="75:21">v</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:25">.</operator><name pos:start="75:26" pos:end="75:42">esc3_level_length</name></name> <operator pos:start="75:44" pos:end="75:44">=</operator> <call pos:start="75:46" pos:end="75:60"><name pos:start="75:46" pos:end="75:53">get_bits</name><argument_list pos:start="75:54" pos:end="75:60">(<argument pos:start="75:55" pos:end="75:56"><expr pos:start="75:55" pos:end="75:56"><name pos:start="75:55" pos:end="75:56">gb</name></expr></argument>, <argument pos:start="75:59" pos:end="75:59"><expr pos:start="75:59" pos:end="75:59"><literal type="number" pos:start="75:59" pos:end="75:59">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="77:21" pos:end="79:69"><if pos:start="77:21" pos:end="79:69">if<condition pos:start="77:23" pos:end="77:47">(<expr pos:start="77:24" pos:end="77:46"><operator pos:start="77:24" pos:end="77:24">!</operator><name pos:start="77:25" pos:end="77:46"><name pos:start="77:25" pos:end="77:25">v</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:46">esc3_level_length</name></name></expr>)</condition><block type="pseudo" pos:start="79:25" pos:end="79:69"><block_content pos:start="79:25" pos:end="79:69">

                        <expr_stmt pos:start="79:25" pos:end="79:69"><expr pos:start="79:25" pos:end="79:68"><name pos:start="79:25" pos:end="79:46"><name pos:start="79:25" pos:end="79:25">v</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:28">s</name><operator pos:start="79:29" pos:end="79:29">.</operator><name pos:start="79:30" pos:end="79:46">esc3_level_length</name></name> <operator pos:start="79:48" pos:end="79:48">=</operator> <call pos:start="79:50" pos:end="79:64"><name pos:start="79:50" pos:end="79:57">get_bits</name><argument_list pos:start="79:58" pos:end="79:64">(<argument pos:start="79:59" pos:end="79:60"><expr pos:start="79:59" pos:end="79:60"><name pos:start="79:59" pos:end="79:60">gb</name></expr></argument>, <argument pos:start="79:63" pos:end="79:63"><expr pos:start="79:63" pos:end="79:63"><literal type="number" pos:start="79:63" pos:end="79:63">2</literal></expr></argument>)</argument_list></call> <operator pos:start="79:66" pos:end="79:66">+</operator> <literal type="number" pos:start="79:68" pos:end="79:68">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="81:19" pos:end="85:17">else <block pos:start="81:24" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:69"> <comment type="line" pos:start="81:26" pos:end="81:35">//table 60</comment>

                    <expr_stmt pos:start="83:21" pos:end="83:69"><expr pos:start="83:21" pos:end="83:68"><name pos:start="83:21" pos:end="83:42"><name pos:start="83:21" pos:end="83:21">v</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:24">s</name><operator pos:start="83:25" pos:end="83:25">.</operator><name pos:start="83:26" pos:end="83:42">esc3_level_length</name></name> <operator pos:start="83:44" pos:end="83:44">=</operator> <call pos:start="83:46" pos:end="83:64"><name pos:start="83:46" pos:end="83:54">get_unary</name><argument_list pos:start="83:55" pos:end="83:64">(<argument pos:start="83:56" pos:end="83:57"><expr pos:start="83:56" pos:end="83:57"><name pos:start="83:56" pos:end="83:57">gb</name></expr></argument>, <argument pos:start="83:60" pos:end="83:60"><expr pos:start="83:60" pos:end="83:60"><literal type="number" pos:start="83:60" pos:end="83:60">1</literal></expr></argument>, <argument pos:start="83:63" pos:end="83:63"><expr pos:start="83:63" pos:end="83:63"><literal type="number" pos:start="83:63" pos:end="83:63">6</literal></expr></argument>)</argument_list></call> <operator pos:start="83:66" pos:end="83:66">+</operator> <literal type="number" pos:start="83:68" pos:end="83:68">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:59"><expr pos:start="87:17" pos:end="87:58"><name pos:start="87:17" pos:end="87:36"><name pos:start="87:17" pos:end="87:17">v</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:21">.</operator><name pos:start="87:22" pos:end="87:36">esc3_run_length</name></name> <operator pos:start="87:38" pos:end="87:38">=</operator> <literal type="number" pos:start="87:40" pos:end="87:42">3</literal> <operator pos:start="87:42" pos:end="87:42">+</operator> <call pos:start="87:44" pos:end="87:58"><name pos:start="87:44" pos:end="87:51">get_bits</name><argument_list pos:start="87:52" pos:end="87:58">(<argument pos:start="87:53" pos:end="87:54"><expr pos:start="87:53" pos:end="87:54"><name pos:start="87:53" pos:end="87:54">gb</name></expr></argument>, <argument pos:start="87:57" pos:end="87:57"><expr pos:start="87:57" pos:end="87:57"><literal type="number" pos:start="87:57" pos:end="87:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:15">run</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:52"><name pos:start="91:19" pos:end="91:26">get_bits</name><argument_list pos:start="91:27" pos:end="91:52">(<argument pos:start="91:28" pos:end="91:29"><expr pos:start="91:28" pos:end="91:29"><name pos:start="91:28" pos:end="91:29">gb</name></expr></argument>, <argument pos:start="91:32" pos:end="91:51"><expr pos:start="91:32" pos:end="91:51"><name pos:start="91:32" pos:end="91:51"><name pos:start="91:32" pos:end="91:32">v</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:51">esc3_run_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:33"><expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:16">sign</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <call pos:start="93:20" pos:end="93:32"><name pos:start="93:20" pos:end="93:28">get_bits1</name><argument_list pos:start="93:29" pos:end="93:32">(<argument pos:start="93:30" pos:end="93:31"><expr pos:start="93:30" pos:end="93:31"><name pos:start="93:30" pos:end="93:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:57"><expr pos:start="95:13" pos:end="95:56"><name pos:start="95:13" pos:end="95:17">level</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:56"><name pos:start="95:21" pos:end="95:28">get_bits</name><argument_list pos:start="95:29" pos:end="95:56">(<argument pos:start="95:30" pos:end="95:31"><expr pos:start="95:30" pos:end="95:31"><name pos:start="95:30" pos:end="95:31">gb</name></expr></argument>, <argument pos:start="95:34" pos:end="95:55"><expr pos:start="95:34" pos:end="95:55"><name pos:start="95:34" pos:end="95:55"><name pos:start="95:34" pos:end="95:34">v</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:37">s</name><operator pos:start="95:38" pos:end="95:38">.</operator><name pos:start="95:39" pos:end="95:55">esc3_level_length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:31"><if pos:start="97:13" pos:end="99:31">if<condition pos:start="97:15" pos:end="97:20">(<expr pos:start="97:16" pos:end="97:19"><name pos:start="97:16" pos:end="97:19">sign</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:31"><block_content pos:start="99:17" pos:end="99:31">

                <expr_stmt pos:start="99:17" pos:end="99:31"><expr pos:start="99:17" pos:end="99:30"><name pos:start="99:17" pos:end="99:21">level</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <operator pos:start="99:25" pos:end="99:25">-</operator><name pos:start="99:26" pos:end="99:30">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:16"><expr pos:start="107:5" pos:end="107:15"><operator pos:start="107:5" pos:end="107:5">*</operator><name pos:start="107:6" pos:end="107:9">last</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <name pos:start="107:13" pos:end="107:15">lst</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:16"><expr pos:start="109:5" pos:end="109:15"><operator pos:start="109:5" pos:end="109:5">*</operator><name pos:start="109:6" pos:end="109:9">skip</name> <operator pos:start="109:11" pos:end="109:11">=</operator> <name pos:start="109:13" pos:end="109:15">run</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:19"><expr pos:start="111:5" pos:end="111:18"><operator pos:start="111:5" pos:end="111:5">*</operator><name pos:start="111:6" pos:end="111:10">value</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:18">level</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
