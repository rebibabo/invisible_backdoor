<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19765.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">sdl_display_init</name><parameter_list pos:start="1:22" pos:end="1:70">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:34">DisplayState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">ds</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:55">full_screen</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:69">no_frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:24">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:16">data</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:23">SDL_VideoInfo</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:27">vi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:18">filename</name></decl>;</decl_stmt>



<cpp:if pos:start="15:1" pos:end="15:22">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:11">defined</name><argument_list pos:start="15:12" pos:end="15:22">(<argument pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:21">__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="17:5" pos:end="17:36">/* always use generic keymaps */</comment>

    <if_stmt pos:start="19:5" pos:end="24:0"><if pos:start="19:5" pos:end="24:0">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:24">keyboard_layout</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="24:0"><block_content pos:start="21:9" pos:end="24:0">

        <expr_stmt pos:start="21:9" pos:end="24:0"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:23">keyboard_layout</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="string" pos:start="21:27" pos:end="21:33">"en-us"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if<condition pos:start="25:7" pos:end="25:23">(<expr pos:start="25:8" pos:end="25:22"><name pos:start="25:8" pos:end="25:22">keyboard_layout</name></expr>)</condition> <block pos:start="25:25" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:20">

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:18">kbd_layout</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:71"><name pos:start="27:22" pos:end="27:41">init_keyboard_layout</name><argument_list pos:start="27:42" pos:end="27:71">(<argument pos:start="27:43" pos:end="27:53"><expr pos:start="27:43" pos:end="27:53"><name pos:start="27:43" pos:end="27:53">name2keysym</name></expr></argument>, <argument pos:start="27:56" pos:end="27:70"><expr pos:start="27:56" pos:end="27:70"><name pos:start="27:56" pos:end="27:70">keyboard_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:20"><if pos:start="29:9" pos:end="31:20">if <condition pos:start="29:12" pos:end="29:24">(<expr pos:start="29:13" pos:end="29:23"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:23">kbd_layout</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:20"><block_content pos:start="31:13" pos:end="31:20">

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><call pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">exit</name><argument_list pos:start="31:17" pos:end="31:19">(<argument pos:start="31:18" pos:end="31:18"><expr pos:start="31:18" pos:end="31:18"><literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="39:24"><if pos:start="37:5" pos:end="39:24">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">no_frame</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:24"><block_content pos:start="39:9" pos:end="39:24">

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:19">gui_noframe</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="50:0"><if pos:start="43:5" pos:end="50:0">if <condition pos:start="43:8" pos:end="43:21">(<expr pos:start="43:9" pos:end="43:20"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:20">full_screen</name></expr>)</condition> <block pos:start="43:23" pos:end="50:0">{<block_content pos:start="45:9" pos:end="45:54">

        <expr_stmt pos:start="45:9" pos:end="45:54"><expr pos:start="45:9" pos:end="45:53"><call pos:start="45:9" pos:end="45:53"><name pos:start="45:9" pos:end="45:14">setenv</name><argument_list pos:start="45:15" pos:end="45:53">(<argument pos:start="45:16" pos:end="45:44"><expr pos:start="45:16" pos:end="45:44"><literal type="string" pos:start="45:16" pos:end="45:44">"SDL_VIDEO_ALLOW_SCREENSAVER"</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:49"><expr pos:start="45:47" pos:end="45:49"><literal type="string" pos:start="45:47" pos:end="45:49">"1"</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:52"><expr pos:start="45:52" pos:end="45:52"><literal type="number" pos:start="45:52" pos:end="45:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifdef pos:start="49:1" pos:end="49:16">#<cpp:directive pos:start="49:2" pos:end="49:6">ifdef</cpp:directive> <name pos:start="49:8" pos:end="49:16">__linux__</name></cpp:ifdef>

    <comment type="block" pos:start="51:5" pos:end="67:7">/* on Linux, SDL may use fbcon|directfb|svgalib when run without

     * accessible $DISPLAY to open X11 window.  This is often the case

     * when qemu is run using sudo.  But in this case, and when actually

     * run in X11 environment, SDL fights with X11 for the video card,

     * making current display unavailable, often until reboot.

     * So make x11 the default SDL video driver if this variable is unset.

     * This is a bit hackish but saves us from bigger problem.

     * Maybe it's a good idea to fix this in SDL instead.

     */</comment>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:39"><call pos:start="69:5" pos:end="69:39"><name pos:start="69:5" pos:end="69:10">setenv</name><argument_list pos:start="69:11" pos:end="69:39">(<argument pos:start="69:12" pos:end="69:28"><expr pos:start="69:12" pos:end="69:28"><literal type="string" pos:start="69:12" pos:end="69:28">"SDL_VIDEODRIVER"</literal></expr></argument>, <argument pos:start="69:31" pos:end="69:35"><expr pos:start="69:31" pos:end="69:35"><literal type="string" pos:start="69:31" pos:end="69:35">"x11"</literal></expr></argument>, <argument pos:start="69:38" pos:end="69:38"><expr pos:start="69:38" pos:end="69:38"><literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="75:5" pos:end="77:38">/* Enable normal up/down events for Caps-Lock and Num-Lock keys.

     * This requires SDL &gt;= 1.2.14. */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><call pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:10">setenv</name><argument_list pos:start="79:11" pos:end="79:43">(<argument pos:start="79:12" pos:end="79:34"><expr pos:start="79:12" pos:end="79:34"><literal type="string" pos:start="79:12" pos:end="79:34">"SDL_DISABLE_LOCK_KEYS"</literal></expr></argument>, <argument pos:start="79:37" pos:end="79:39"><expr pos:start="79:37" pos:end="79:39"><literal type="string" pos:start="79:37" pos:end="79:39">"1"</literal></expr></argument>, <argument pos:start="79:42" pos:end="79:42"><expr pos:start="79:42" pos:end="79:42"><literal type="number" pos:start="79:42" pos:end="79:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:50"><expr pos:start="83:5" pos:end="83:49"><name pos:start="83:5" pos:end="83:9">flags</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:26">SDL_INIT_VIDEO</name> <operator pos:start="83:28" pos:end="83:28">|</operator> <name pos:start="83:30" pos:end="83:49">SDL_INIT_NOPARACHUTE</name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:25">(<expr pos:start="85:9" pos:end="85:24"><call pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:16">SDL_Init</name> <argument_list pos:start="85:18" pos:end="85:24">(<argument pos:start="85:19" pos:end="85:23"><expr pos:start="85:19" pos:end="85:23"><name pos:start="85:19" pos:end="85:23">flags</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:27" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:16">

        <expr_stmt pos:start="87:9" pos:end="89:32"><expr pos:start="87:9" pos:end="89:31"><call pos:start="87:9" pos:end="89:31"><name pos:start="87:9" pos:end="87:15">fprintf</name><argument_list pos:start="87:16" pos:end="89:31">(<argument pos:start="87:17" pos:end="87:22"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:22">stderr</name></expr></argument>, <argument pos:start="87:25" pos:end="87:66"><expr pos:start="87:25" pos:end="87:66"><literal type="string" pos:start="87:25" pos:end="87:66">"Could not initialize SDL(%s) - exiting\n"</literal></expr></argument>,

                <argument pos:start="89:17" pos:end="89:30"><expr pos:start="89:17" pos:end="89:30"><call pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:28">SDL_GetError</name><argument_list pos:start="89:29" pos:end="89:30">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:16"><expr pos:start="91:9" pos:end="91:15"><call pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:12">exit</name><argument_list pos:start="91:13" pos:end="91:15">(<argument pos:start="91:14" pos:end="91:14"><expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:28"><expr pos:start="95:5" pos:end="95:27"><name pos:start="95:5" pos:end="95:6">vi</name> <operator pos:start="95:8" pos:end="95:8">=</operator> <call pos:start="95:10" pos:end="95:27"><name pos:start="95:10" pos:end="95:25">SDL_GetVideoInfo</name><argument_list pos:start="95:26" pos:end="95:27">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:15">host_format</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <operator pos:start="97:19" pos:end="97:19">*</operator><operator pos:start="97:20" pos:end="97:20">(</operator><name pos:start="97:21" pos:end="97:28"><name pos:start="97:21" pos:end="97:22">vi</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:28">vfmt</name></name><operator pos:start="97:29" pos:end="97:29">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:61">/* Load a 32x32x4 image. White pixels are transparent. */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:68"><expr pos:start="103:5" pos:end="103:67"><name pos:start="103:5" pos:end="103:12">filename</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <call pos:start="103:16" pos:end="103:67"><name pos:start="103:16" pos:end="103:29">qemu_find_file</name><argument_list pos:start="103:30" pos:end="103:67">(<argument pos:start="103:31" pos:end="103:49"><expr pos:start="103:31" pos:end="103:49"><name pos:start="103:31" pos:end="103:49">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="103:52" pos:end="103:66"><expr pos:start="103:52" pos:end="103:66"><literal type="string" pos:start="103:52" pos:end="103:66">"qemu-icon.bmp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="121:5"><if pos:start="105:5" pos:end="121:5">if <condition pos:start="105:8" pos:end="105:17">(<expr pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:16">filename</name></expr>)</condition> <block pos:start="105:19" pos:end="121:5">{<block_content pos:start="107:9" pos:end="119:25">

        <decl_stmt pos:start="107:9" pos:end="107:51"><decl pos:start="107:9" pos:end="107:50"><type pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:19">SDL_Surface</name> <modifier pos:start="107:21" pos:end="107:21">*</modifier></type><name pos:start="107:22" pos:end="107:26">image</name> <init pos:start="107:28" pos:end="107:50">= <expr pos:start="107:30" pos:end="107:50"><call pos:start="107:30" pos:end="107:50"><name pos:start="107:30" pos:end="107:40">SDL_LoadBMP</name><argument_list pos:start="107:41" pos:end="107:50">(<argument pos:start="107:42" pos:end="107:49"><expr pos:start="107:42" pos:end="107:49"><name pos:start="107:42" pos:end="107:49">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="109:9" pos:end="117:9"><if pos:start="109:9" pos:end="117:9">if <condition pos:start="109:12" pos:end="109:18">(<expr pos:start="109:13" pos:end="109:17"><name pos:start="109:13" pos:end="109:17">image</name></expr>)</condition> <block pos:start="109:20" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:40">

            <decl_stmt pos:start="111:13" pos:end="111:73"><decl pos:start="111:13" pos:end="111:72"><type pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:20">uint32_t</name></type> <name pos:start="111:22" pos:end="111:29">colorkey</name> <init pos:start="111:31" pos:end="111:72">= <expr pos:start="111:33" pos:end="111:72"><call pos:start="111:33" pos:end="111:72"><name pos:start="111:33" pos:end="111:42">SDL_MapRGB</name><argument_list pos:start="111:43" pos:end="111:72">(<argument pos:start="111:44" pos:end="111:56"><expr pos:start="111:44" pos:end="111:56"><name pos:start="111:44" pos:end="111:56"><name pos:start="111:44" pos:end="111:48">image</name><operator pos:start="111:49" pos:end="111:50">-&gt;</operator><name pos:start="111:51" pos:end="111:56">format</name></name></expr></argument>, <argument pos:start="111:59" pos:end="111:61"><expr pos:start="111:59" pos:end="111:61"><literal type="number" pos:start="111:59" pos:end="111:61">255</literal></expr></argument>, <argument pos:start="111:64" pos:end="111:66"><expr pos:start="111:64" pos:end="111:66"><literal type="number" pos:start="111:64" pos:end="111:66">255</literal></expr></argument>, <argument pos:start="111:69" pos:end="111:71"><expr pos:start="111:69" pos:end="111:71"><literal type="number" pos:start="111:69" pos:end="111:71">255</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:62"><expr pos:start="113:13" pos:end="113:61"><call pos:start="113:13" pos:end="113:61"><name pos:start="113:13" pos:end="113:27">SDL_SetColorKey</name><argument_list pos:start="113:28" pos:end="113:61">(<argument pos:start="113:29" pos:end="113:33"><expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:33">image</name></expr></argument>, <argument pos:start="113:36" pos:end="113:50"><expr pos:start="113:36" pos:end="113:50"><name pos:start="113:36" pos:end="113:50">SDL_SRCCOLORKEY</name></expr></argument>, <argument pos:start="113:53" pos:end="113:60"><expr pos:start="113:53" pos:end="113:60"><name pos:start="113:53" pos:end="113:60">colorkey</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:40"><expr pos:start="115:13" pos:end="115:39"><call pos:start="115:13" pos:end="115:39"><name pos:start="115:13" pos:end="115:26">SDL_WM_SetIcon</name><argument_list pos:start="115:27" pos:end="115:39">(<argument pos:start="115:28" pos:end="115:32"><expr pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:32">image</name></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><name pos:start="115:35" pos:end="115:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><call pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:14">g_free</name><argument_list pos:start="119:15" pos:end="119:24">(<argument pos:start="119:16" pos:end="119:23"><expr pos:start="119:16" pos:end="119:23"><name pos:start="119:16" pos:end="119:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:20">(<expr pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:19">full_screen</name></expr>)</condition> <block pos:start="125:22" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:25">

        <expr_stmt pos:start="127:9" pos:end="127:27"><expr pos:start="127:9" pos:end="127:26"><name pos:start="127:9" pos:end="127:22">gui_fullscreen</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <literal type="number" pos:start="127:26" pos:end="127:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:25"><expr pos:start="129:9" pos:end="129:24"><call pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:22">sdl_grab_start</name><argument_list pos:start="129:23" pos:end="129:24">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:51"><expr pos:start="135:5" pos:end="135:50"><name pos:start="135:5" pos:end="135:7">dcl</name> <operator pos:start="135:9" pos:end="135:9">=</operator> <call pos:start="135:11" pos:end="135:50"><name pos:start="135:11" pos:end="135:19">g_malloc0</name><argument_list pos:start="135:20" pos:end="135:50">(<argument pos:start="135:21" pos:end="135:49"><expr pos:start="135:21" pos:end="135:49"><sizeof pos:start="135:21" pos:end="135:49">sizeof<argument_list pos:start="135:27" pos:end="135:49">(<argument pos:start="135:28" pos:end="135:48"><expr pos:start="135:28" pos:end="135:48"><name pos:start="135:28" pos:end="135:48">DisplayChangeListener</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:24"><expr pos:start="137:5" pos:end="137:23"><name pos:start="137:5" pos:end="137:12"><name pos:start="137:5" pos:end="137:7">dcl</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:12">ops</name></name> <operator pos:start="137:14" pos:end="137:14">=</operator> <operator pos:start="137:16" pos:end="137:16">&amp;</operator><name pos:start="137:17" pos:end="137:23">dcl_ops</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:40"><expr pos:start="139:5" pos:end="139:39"><call pos:start="139:5" pos:end="139:39"><name pos:start="139:5" pos:end="139:34">register_displaychangelistener</name><argument_list pos:start="139:35" pos:end="139:39">(<argument pos:start="139:36" pos:end="139:38"><expr pos:start="139:36" pos:end="139:38"><name pos:start="139:36" pos:end="139:38">dcl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:55"><expr pos:start="143:5" pos:end="143:54"><name pos:start="143:5" pos:end="143:30"><name pos:start="143:5" pos:end="143:23">mouse_mode_notifier</name><operator pos:start="143:24" pos:end="143:24">.</operator><name pos:start="143:25" pos:end="143:30">notify</name></name> <operator pos:start="143:32" pos:end="143:32">=</operator> <name pos:start="143:34" pos:end="143:54">sdl_mouse_mode_change</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:62"><expr pos:start="145:5" pos:end="145:61"><call pos:start="145:5" pos:end="145:61"><name pos:start="145:5" pos:end="145:39">qemu_add_mouse_mode_change_notifier</name><argument_list pos:start="145:40" pos:end="145:61">(<argument pos:start="145:41" pos:end="145:60"><expr pos:start="145:41" pos:end="145:60"><operator pos:start="145:41" pos:end="145:41">&amp;</operator><name pos:start="145:42" pos:end="145:60">mouse_mode_notifier</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:25"><expr pos:start="149:5" pos:end="149:24"><call pos:start="149:5" pos:end="149:24"><name pos:start="149:5" pos:end="149:22">sdl_update_caption</name><argument_list pos:start="149:23" pos:end="149:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:33"><expr pos:start="151:5" pos:end="151:32"><call pos:start="151:5" pos:end="151:32"><name pos:start="151:5" pos:end="151:23">SDL_EnableKeyRepeat</name><argument_list pos:start="151:24" pos:end="151:32">(<argument pos:start="151:25" pos:end="151:27"><expr pos:start="151:25" pos:end="151:27"><literal type="number" pos:start="151:25" pos:end="151:27">250</literal></expr></argument>, <argument pos:start="151:30" pos:end="151:31"><expr pos:start="151:30" pos:end="151:31"><literal type="number" pos:start="151:30" pos:end="151:31">50</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:17"><expr pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:12">gui_grab</name> <operator pos:start="153:14" pos:end="153:14">=</operator> <literal type="number" pos:start="153:16" pos:end="153:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:67"><expr pos:start="157:5" pos:end="157:66"><name pos:start="157:5" pos:end="157:21">sdl_cursor_hidden</name> <operator pos:start="157:23" pos:end="157:23">=</operator> <call pos:start="157:25" pos:end="157:66"><name pos:start="157:25" pos:end="157:40">SDL_CreateCursor</name><argument_list pos:start="157:41" pos:end="157:66">(<argument pos:start="157:42" pos:end="157:46"><expr pos:start="157:42" pos:end="157:46"><operator pos:start="157:42" pos:end="157:42">&amp;</operator><name pos:start="157:43" pos:end="157:46">data</name></expr></argument>, <argument pos:start="157:49" pos:end="157:53"><expr pos:start="157:49" pos:end="157:53"><operator pos:start="157:49" pos:end="157:49">&amp;</operator><name pos:start="157:50" pos:end="157:53">data</name></expr></argument>, <argument pos:start="157:56" pos:end="157:56"><expr pos:start="157:56" pos:end="157:56"><literal type="number" pos:start="157:56" pos:end="157:56">8</literal></expr></argument>, <argument pos:start="157:59" pos:end="157:59"><expr pos:start="157:59" pos:end="157:59"><literal type="number" pos:start="157:59" pos:end="157:59">1</literal></expr></argument>, <argument pos:start="157:62" pos:end="157:62"><expr pos:start="157:62" pos:end="157:62"><literal type="number" pos:start="157:62" pos:end="157:62">0</literal></expr></argument>, <argument pos:start="157:65" pos:end="157:65"><expr pos:start="157:65" pos:end="157:65"><literal type="number" pos:start="157:65" pos:end="157:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:40"><expr pos:start="159:5" pos:end="159:39"><name pos:start="159:5" pos:end="159:21">sdl_cursor_normal</name> <operator pos:start="159:23" pos:end="159:23">=</operator> <call pos:start="159:25" pos:end="159:39"><name pos:start="159:25" pos:end="159:37">SDL_GetCursor</name><argument_list pos:start="159:38" pos:end="159:39">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:24"><expr pos:start="163:5" pos:end="163:23"><call pos:start="163:5" pos:end="163:23"><name pos:start="163:5" pos:end="163:10">atexit</name><argument_list pos:start="163:11" pos:end="163:23">(<argument pos:start="163:12" pos:end="163:22"><expr pos:start="163:12" pos:end="163:22"><name pos:start="163:12" pos:end="163:22">sdl_cleanup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
