<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11389.c" pos:tabs="8"><function pos:start="1:1" pos:end="307:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">h264_export_frame_props</name><parameter_list pos:start="1:35" pos:end="1:50">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="307:1">{<block_content pos:start="5:5" pos:end="305:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:15"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">SPS</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">sps</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:26">ps</name><operator pos:start="5:27" pos:end="5:27">.</operator><name pos:start="5:28" pos:end="5:30">sps</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Picture</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">cur</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:24">h</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:37">cur_pic_ptr</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:7">cur</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:10">f</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:28">interlaced_frame</name></name> <operator pos:start="11:30" pos:end="11:30">=</operator> <literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:7">cur</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:10">f</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:23">repeat_pict</name></name>      <operator pos:start="13:30" pos:end="13:30">=</operator> <literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:52">/* Signal interlacing information externally. */</comment>

    <comment type="block" pos:start="19:5" pos:end="21:40">/* Prioritize picture timing SEI information over used

     * decoding process if it exists. */</comment>



    <if_stmt pos:start="25:5" pos:end="101:5"><if pos:start="25:5" pos:end="95:5">if <condition pos:start="25:8" pos:end="25:37">(<expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:11">sps</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:36">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="25:39" pos:end="95:5">{<block_content pos:start="27:9" pos:end="93:69">

        <decl_stmt pos:start="27:9" pos:end="27:58"><decl pos:start="27:9" pos:end="27:57"><type pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:28">H264SEIPictureTiming</name> <modifier pos:start="27:30" pos:end="27:30">*</modifier></type><name pos:start="27:31" pos:end="27:32">pt</name> <init pos:start="27:34" pos:end="27:57">= <expr pos:start="27:36" pos:end="27:57"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:57"><name pos:start="27:37" pos:end="27:37">h</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:42">sei</name><operator pos:start="27:43" pos:end="27:43">.</operator><name pos:start="27:44" pos:end="27:57">picture_timing</name></name></expr></init></decl>;</decl_stmt>

        <switch pos:start="29:9" pos:end="85:9">switch <condition pos:start="29:16" pos:end="29:31">(<expr pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:18">pt</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:30">pic_struct</name></name></expr>)</condition> <block pos:start="29:33" pos:end="85:9">{<block_content pos:start="31:9" pos:end="83:18">

        <case pos:start="31:9" pos:end="31:34">case <expr pos:start="31:14" pos:end="31:33"><name pos:start="31:14" pos:end="31:33">SEI_PIC_STRUCT_FRAME</name></expr>:</case>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:38">case <expr pos:start="35:14" pos:end="35:37"><name pos:start="35:14" pos:end="35:37">SEI_PIC_STRUCT_TOP_FIELD</name></expr>:</case>

        <case pos:start="37:9" pos:end="37:41">case <expr pos:start="37:14" pos:end="37:40"><name pos:start="37:14" pos:end="37:40">SEI_PIC_STRUCT_BOTTOM_FIELD</name></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:41"><expr pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:15">cur</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:18">f</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:36">interlaced_frame</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <literal type="number" pos:start="39:40" pos:end="39:40">1</literal></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <case pos:start="43:9" pos:end="43:39">case <expr pos:start="43:14" pos:end="43:38"><name pos:start="43:14" pos:end="43:38">SEI_PIC_STRUCT_TOP_BOTTOM</name></expr>:</case>

        <case pos:start="45:9" pos:end="45:39">case <expr pos:start="45:14" pos:end="45:38"><name pos:start="45:14" pos:end="45:38">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>:</case>

            <if_stmt pos:start="47:13" pos:end="55:68"><if pos:start="47:13" pos:end="49:45">if <condition pos:start="47:16" pos:end="47:42">(<expr pos:start="47:17" pos:end="47:41"><call pos:start="47:17" pos:end="47:41"><name pos:start="47:17" pos:end="47:38">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="47:39" pos:end="47:41">(<argument pos:start="47:40" pos:end="47:40"><expr pos:start="47:40" pos:end="47:40"><name pos:start="47:40" pos:end="47:40">h</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:45"><block_content pos:start="49:17" pos:end="49:45">

                <expr_stmt pos:start="49:17" pos:end="49:45"><expr pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:19">cur</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:22">f</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:40">interlaced_frame</name></name> <operator pos:start="49:42" pos:end="49:42">=</operator> <literal type="number" pos:start="49:44" pos:end="49:44">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="51:13" pos:end="55:68">else<block type="pseudo" pos:start="55:17" pos:end="55:68"><block_content pos:start="55:17" pos:end="55:68">

                <comment type="line" pos:start="53:17" pos:end="53:56">// try to flag soft telecine progressive</comment>

                <expr_stmt pos:start="55:17" pos:end="55:68"><expr pos:start="55:17" pos:end="55:67"><name pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:19">cur</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:22">f</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:40">interlaced_frame</name></name> <operator pos:start="55:42" pos:end="55:42">=</operator> <name pos:start="55:44" pos:end="55:67"><name pos:start="55:44" pos:end="55:44">h</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:67">prev_interlaced_frame</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:43">case <expr pos:start="59:14" pos:end="59:42"><name pos:start="59:14" pos:end="59:42">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>:</case>

        <case pos:start="61:9" pos:end="61:46">case <expr pos:start="61:14" pos:end="61:45"><name pos:start="61:14" pos:end="61:45">SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM</name></expr>:</case>

            <comment type="block" pos:start="63:13" pos:end="67:53">/* Signal the possibility of telecined film externally

             * (pic_struct 5,6). From these hints, let the applications

             * decide if they apply deinterlacing. */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:36"><expr pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:15">cur</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:18">f</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:31">repeat_pict</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <literal type="number" pos:start="69:35" pos:end="69:35">1</literal></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:43">case <expr pos:start="73:14" pos:end="73:42"><name pos:start="73:14" pos:end="73:42">SEI_PIC_STRUCT_FRAME_DOUBLING</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:36"><expr pos:start="75:13" pos:end="75:35"><name pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:15">cur</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:18">f</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:31">repeat_pict</name></name> <operator pos:start="75:33" pos:end="75:33">=</operator> <literal type="number" pos:start="75:35" pos:end="75:35">2</literal></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:43">case <expr pos:start="79:14" pos:end="79:42"><name pos:start="79:14" pos:end="79:42">SEI_PIC_STRUCT_FRAME_TRIPLING</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:36"><expr pos:start="81:13" pos:end="81:35"><name pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:15">cur</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:18">f</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:31">repeat_pict</name></name> <operator pos:start="81:33" pos:end="81:33">=</operator> <literal type="number" pos:start="81:35" pos:end="81:35">4</literal></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="89:9" pos:end="93:69"><if pos:start="89:9" pos:end="93:69">if <condition pos:start="89:12" pos:end="91:56">(<expr pos:start="89:13" pos:end="91:55"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:24"><name pos:start="89:14" pos:end="89:15">pt</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:24">ct_type</name></name> <operator pos:start="89:26" pos:end="89:26">&amp;</operator> <literal type="number" pos:start="89:28" pos:end="89:28">3</literal><operator pos:start="89:29" pos:end="89:29">)</operator> <operator pos:start="89:31" pos:end="89:32">&amp;&amp;</operator>

            <name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:14">pt</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:26">pic_struct</name></name> <operator pos:start="91:28" pos:end="91:29">&lt;=</operator> <name pos:start="91:31" pos:end="91:55">SEI_PIC_STRUCT_BOTTOM_TOP</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:69"><block_content pos:start="93:13" pos:end="93:69">

            <expr_stmt pos:start="93:13" pos:end="93:69"><expr pos:start="93:13" pos:end="93:68"><name pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:15">cur</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:18">f</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:36">interlaced_frame</name></name> <operator pos:start="93:38" pos:end="93:38">=</operator> <operator pos:start="93:40" pos:end="93:40">(</operator><name pos:start="93:41" pos:end="93:51"><name pos:start="93:41" pos:end="93:42">pt</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:51">ct_type</name></name> <operator pos:start="93:53" pos:end="93:53">&amp;</operator> <operator pos:start="93:55" pos:end="93:55">(</operator><literal type="number" pos:start="93:56" pos:end="93:56">1</literal> <operator pos:start="93:58" pos:end="93:59">&lt;&lt;</operator> <literal type="number" pos:start="93:61" pos:end="93:61">1</literal><operator pos:start="93:62" pos:end="93:62">)</operator><operator pos:start="93:63" pos:end="93:63">)</operator> <operator pos:start="93:65" pos:end="93:66">!=</operator> <literal type="number" pos:start="93:68" pos:end="93:68">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="101:5">else <block pos:start="95:12" pos:end="101:5">{<block_content pos:start="99:9" pos:end="99:61">

        <comment type="block" pos:start="97:9" pos:end="97:65">/* Derive interlacing flag from used decoding process. */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:61"><expr pos:start="99:9" pos:end="99:60"><name pos:start="99:9" pos:end="99:32"><name pos:start="99:9" pos:end="99:11">cur</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:14">f</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:32">interlaced_frame</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <call pos:start="99:36" pos:end="99:60"><name pos:start="99:36" pos:end="99:57">FIELD_OR_MBAFF_PICTURE</name><argument_list pos:start="99:58" pos:end="99:60">(<argument pos:start="99:59" pos:end="99:59"><expr pos:start="99:59" pos:end="99:59"><name pos:start="99:59" pos:end="99:59">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:56"><expr pos:start="103:5" pos:end="103:55"><name pos:start="103:5" pos:end="103:28"><name pos:start="103:5" pos:end="103:5">h</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:28">prev_interlaced_frame</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:55"><name pos:start="103:32" pos:end="103:34">cur</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:37">f</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:55">interlaced_frame</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="139:5"><if pos:start="107:5" pos:end="113:5">if <condition pos:start="107:8" pos:end="107:47">(<expr pos:start="107:9" pos:end="107:46"><name pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:11">cur</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:22">field_poc</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><literal type="number" pos:start="107:24" pos:end="107:24">0</literal></expr>]</index></name> <operator pos:start="107:27" pos:end="107:28">!=</operator> <name pos:start="107:30" pos:end="107:46"><name pos:start="107:30" pos:end="107:32">cur</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:43">field_poc</name><index pos:start="107:44" pos:end="107:46">[<expr pos:start="107:45" pos:end="107:45"><literal type="number" pos:start="107:45" pos:end="107:45">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="107:49" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:72">

        <comment type="block" pos:start="109:9" pos:end="109:53">/* Derive top_field_first from field pocs. */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:72"><expr pos:start="111:9" pos:end="111:71"><name pos:start="111:9" pos:end="111:31"><name pos:start="111:9" pos:end="111:11">cur</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:14">f</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:31">top_field_first</name></name> <operator pos:start="111:33" pos:end="111:33">=</operator> <name pos:start="111:35" pos:end="111:51"><name pos:start="111:35" pos:end="111:37">cur</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:48">field_poc</name><index pos:start="111:49" pos:end="111:51">[<expr pos:start="111:50" pos:end="111:50"><literal type="number" pos:start="111:50" pos:end="111:50">0</literal></expr>]</index></name> <operator pos:start="111:53" pos:end="111:53">&lt;</operator> <name pos:start="111:55" pos:end="111:71"><name pos:start="111:55" pos:end="111:57">cur</name><operator pos:start="111:58" pos:end="111:59">-&gt;</operator><name pos:start="111:60" pos:end="111:68">field_poc</name><index pos:start="111:69" pos:end="111:71">[<expr pos:start="111:70" pos:end="111:70"><literal type="number" pos:start="111:70" pos:end="111:70">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="139:5">else <block pos:start="113:12" pos:end="139:5">{<block_content pos:start="115:9" pos:end="137:9">

        <if_stmt pos:start="115:9" pos:end="137:9"><if pos:start="115:9" pos:end="131:9">if <condition pos:start="115:12" pos:end="115:69">(<expr pos:start="115:13" pos:end="115:68"><name pos:start="115:13" pos:end="115:36"><name pos:start="115:13" pos:end="115:15">cur</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:18">f</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:36">interlaced_frame</name></name> <operator pos:start="115:38" pos:end="115:39">||</operator> <name pos:start="115:41" pos:end="115:68"><name pos:start="115:41" pos:end="115:43">sps</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:68">pic_struct_present_flag</name></name></expr>)</condition> <block pos:start="115:71" pos:end="131:9">{<block_content pos:start="121:13" pos:end="129:44">

            <comment type="block" pos:start="117:13" pos:end="119:67">/* Use picture timing SEI information. Even if it is a

             * information of a past frame, better than nothing. */</comment>

            <if_stmt pos:start="121:13" pos:end="129:44"><if pos:start="121:13" pos:end="125:44">if <condition pos:start="121:16" pos:end="123:82">(<expr pos:start="121:17" pos:end="123:81"><name pos:start="121:17" pos:end="121:48"><name pos:start="121:17" pos:end="121:17">h</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:22">sei</name><operator pos:start="121:23" pos:end="121:23">.</operator><name pos:start="121:24" pos:end="121:37">picture_timing</name><operator pos:start="121:38" pos:end="121:38">.</operator><name pos:start="121:39" pos:end="121:48">pic_struct</name></name> <operator pos:start="121:50" pos:end="121:51">==</operator> <name pos:start="121:53" pos:end="121:77">SEI_PIC_STRUCT_TOP_BOTTOM</name> <operator pos:start="121:79" pos:end="121:80">||</operator>

                <name pos:start="123:17" pos:end="123:48"><name pos:start="123:17" pos:end="123:17">h</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:22">sei</name><operator pos:start="123:23" pos:end="123:23">.</operator><name pos:start="123:24" pos:end="123:37">picture_timing</name><operator pos:start="123:38" pos:end="123:38">.</operator><name pos:start="123:39" pos:end="123:48">pic_struct</name></name> <operator pos:start="123:50" pos:end="123:51">==</operator> <name pos:start="123:53" pos:end="123:81">SEI_PIC_STRUCT_TOP_BOTTOM_TOP</name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:44"><block_content pos:start="125:17" pos:end="125:44">

                <expr_stmt pos:start="125:17" pos:end="125:44"><expr pos:start="125:17" pos:end="125:43"><name pos:start="125:17" pos:end="125:39"><name pos:start="125:17" pos:end="125:19">cur</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:22">f</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:39">top_field_first</name></name> <operator pos:start="125:41" pos:end="125:41">=</operator> <literal type="number" pos:start="125:43" pos:end="125:43">1</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="127:13" pos:end="129:44">else<block type="pseudo" pos:start="129:17" pos:end="129:44"><block_content pos:start="129:17" pos:end="129:44">

                <expr_stmt pos:start="129:17" pos:end="129:44"><expr pos:start="129:17" pos:end="129:43"><name pos:start="129:17" pos:end="129:39"><name pos:start="129:17" pos:end="129:19">cur</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:22">f</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:39">top_field_first</name></name> <operator pos:start="129:41" pos:end="129:41">=</operator> <literal type="number" pos:start="129:43" pos:end="129:43">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="131:11" pos:end="137:9">else <block pos:start="131:16" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:40">

            <comment type="block" pos:start="133:13" pos:end="133:41">/* Most likely progressive */</comment>

            <expr_stmt pos:start="135:13" pos:end="135:40"><expr pos:start="135:13" pos:end="135:39"><name pos:start="135:13" pos:end="135:35"><name pos:start="135:13" pos:end="135:15">cur</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:18">f</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:35">top_field_first</name></name> <operator pos:start="135:37" pos:end="135:37">=</operator> <literal type="number" pos:start="135:39" pos:end="135:39">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="143:5" pos:end="221:5"><if pos:start="143:5" pos:end="221:5">if <condition pos:start="143:8" pos:end="151:61">(<expr pos:start="143:9" pos:end="151:60"><name pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:9">h</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:14">sei</name><operator pos:start="143:15" pos:end="143:15">.</operator><name pos:start="143:16" pos:end="143:28">frame_packing</name><operator pos:start="143:29" pos:end="143:29">.</operator><name pos:start="143:30" pos:end="143:36">present</name></name> <operator pos:start="143:38" pos:end="143:39">&amp;&amp;</operator>

        <name pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:9">h</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:14">sei</name><operator pos:start="145:15" pos:end="145:15">.</operator><name pos:start="145:16" pos:end="145:28">frame_packing</name><operator pos:start="145:29" pos:end="145:29">.</operator><name pos:start="145:30" pos:end="145:45">arrangement_type</name></name> <operator pos:start="145:47" pos:end="145:48">&gt;=</operator> <literal type="number" pos:start="145:50" pos:end="145:50">0</literal> <operator pos:start="145:52" pos:end="145:53">&amp;&amp;</operator>

        <name pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:9">h</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:14">sei</name><operator pos:start="147:15" pos:end="147:15">.</operator><name pos:start="147:16" pos:end="147:28">frame_packing</name><operator pos:start="147:29" pos:end="147:29">.</operator><name pos:start="147:30" pos:end="147:45">arrangement_type</name></name> <operator pos:start="147:47" pos:end="147:48">&lt;=</operator> <literal type="number" pos:start="147:50" pos:end="147:50">6</literal> <operator pos:start="147:52" pos:end="147:53">&amp;&amp;</operator>

        <name pos:start="149:9" pos:end="149:56"><name pos:start="149:9" pos:end="149:9">h</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:14">sei</name><operator pos:start="149:15" pos:end="149:15">.</operator><name pos:start="149:16" pos:end="149:28">frame_packing</name><operator pos:start="149:29" pos:end="149:29">.</operator><name pos:start="149:30" pos:end="149:56">content_interpretation_type</name></name> <operator pos:start="149:58" pos:end="149:58">&gt;</operator> <literal type="number" pos:start="149:60" pos:end="149:60">0</literal> <operator pos:start="149:62" pos:end="149:63">&amp;&amp;</operator>

        <name pos:start="151:9" pos:end="151:56"><name pos:start="151:9" pos:end="151:9">h</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:14">sei</name><operator pos:start="151:15" pos:end="151:15">.</operator><name pos:start="151:16" pos:end="151:28">frame_packing</name><operator pos:start="151:29" pos:end="151:29">.</operator><name pos:start="151:30" pos:end="151:56">content_interpretation_type</name></name> <operator pos:start="151:58" pos:end="151:58">&lt;</operator> <literal type="number" pos:start="151:60" pos:end="151:60">3</literal></expr>)</condition> <block pos:start="151:63" pos:end="221:5">{<block_content pos:start="153:9" pos:end="219:52">

        <decl_stmt pos:start="153:9" pos:end="153:56"><decl pos:start="153:9" pos:end="153:55"><type pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:27">H264SEIFramePacking</name> <modifier pos:start="153:29" pos:end="153:29">*</modifier></type><name pos:start="153:30" pos:end="153:31">fp</name> <init pos:start="153:33" pos:end="153:55">= <expr pos:start="153:35" pos:end="153:55"><operator pos:start="153:35" pos:end="153:35">&amp;</operator><name pos:start="153:36" pos:end="153:55"><name pos:start="153:36" pos:end="153:36">h</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:41">sei</name><operator pos:start="153:42" pos:end="153:42">.</operator><name pos:start="153:43" pos:end="153:55">frame_packing</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="155:9" pos:end="155:66"><decl pos:start="155:9" pos:end="155:65"><type pos:start="155:9" pos:end="155:20"><name pos:start="155:9" pos:end="155:18">AVStereo3D</name> <modifier pos:start="155:20" pos:end="155:20">*</modifier></type><name pos:start="155:21" pos:end="155:26">stereo</name> <init pos:start="155:28" pos:end="155:65">= <expr pos:start="155:30" pos:end="155:65"><call pos:start="155:30" pos:end="155:65"><name pos:start="155:30" pos:end="155:57">av_stereo3d_create_side_data</name><argument_list pos:start="155:58" pos:end="155:65">(<argument pos:start="155:59" pos:end="155:64"><expr pos:start="155:59" pos:end="155:64"><name pos:start="155:59" pos:end="155:64"><name pos:start="155:59" pos:end="155:61">cur</name><operator pos:start="155:62" pos:end="155:63">-&gt;</operator><name pos:start="155:64" pos:end="155:64">f</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="157:9" pos:end="159:35"><if pos:start="157:9" pos:end="159:35">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:19">stereo</name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:35"><block_content pos:start="159:13" pos:end="159:35">

            <return pos:start="159:13" pos:end="159:35">return <expr pos:start="159:20" pos:end="159:34"><call pos:start="159:20" pos:end="159:34"><name pos:start="159:20" pos:end="159:26">AVERROR</name><argument_list pos:start="159:27" pos:end="159:34">(<argument pos:start="159:28" pos:end="159:33"><expr pos:start="159:28" pos:end="159:33"><name pos:start="159:28" pos:end="159:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="163:9" pos:end="213:9">switch <condition pos:start="163:16" pos:end="163:37">(<expr pos:start="163:17" pos:end="163:36"><name pos:start="163:17" pos:end="163:36"><name pos:start="163:17" pos:end="163:18">fp</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:36">arrangement_type</name></name></expr>)</condition> <block pos:start="163:39" pos:end="213:9">{<block_content pos:start="165:9" pos:end="211:18">

        <case pos:start="165:9" pos:end="165:15">case <expr pos:start="165:14" pos:end="165:14"><literal type="number" pos:start="165:14" pos:end="165:14">0</literal></expr>:</case>

            <expr_stmt pos:start="167:13" pos:end="167:52"><expr pos:start="167:13" pos:end="167:51"><name pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:18">stereo</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:24">type</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <name pos:start="167:28" pos:end="167:51">AV_STEREO3D_CHECKERBOARD</name></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:15">case <expr pos:start="171:14" pos:end="171:14"><literal type="number" pos:start="171:14" pos:end="171:14">1</literal></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:47"><expr pos:start="173:13" pos:end="173:46"><name pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:18">stereo</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:24">type</name></name> <operator pos:start="173:26" pos:end="173:26">=</operator> <name pos:start="173:28" pos:end="173:46">AV_STEREO3D_COLUMNS</name></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:15">case <expr pos:start="177:14" pos:end="177:14"><literal type="number" pos:start="177:14" pos:end="177:14">2</literal></expr>:</case>

            <expr_stmt pos:start="179:13" pos:end="179:45"><expr pos:start="179:13" pos:end="179:44"><name pos:start="179:13" pos:end="179:24"><name pos:start="179:13" pos:end="179:18">stereo</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:24">type</name></name> <operator pos:start="179:26" pos:end="179:26">=</operator> <name pos:start="179:28" pos:end="179:44">AV_STEREO3D_LINES</name></expr>;</expr_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <case pos:start="183:9" pos:end="183:15">case <expr pos:start="183:14" pos:end="183:14"><literal type="number" pos:start="183:14" pos:end="183:14">3</literal></expr>:</case>

            <if_stmt pos:start="185:13" pos:end="191:54"><if pos:start="185:13" pos:end="187:63">if <condition pos:start="185:16" pos:end="185:41">(<expr pos:start="185:17" pos:end="185:40"><name pos:start="185:17" pos:end="185:40"><name pos:start="185:17" pos:end="185:18">fp</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:40">quincunx_subsampling</name></name></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="187:63"><block_content pos:start="187:17" pos:end="187:63">

                <expr_stmt pos:start="187:17" pos:end="187:63"><expr pos:start="187:17" pos:end="187:62"><name pos:start="187:17" pos:end="187:28"><name pos:start="187:17" pos:end="187:22">stereo</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:28">type</name></name> <operator pos:start="187:30" pos:end="187:30">=</operator> <name pos:start="187:32" pos:end="187:62">AV_STEREO3D_SIDEBYSIDE_QUINCUNX</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="189:13" pos:end="191:54">else<block type="pseudo" pos:start="191:17" pos:end="191:54"><block_content pos:start="191:17" pos:end="191:54">

                <expr_stmt pos:start="191:17" pos:end="191:54"><expr pos:start="191:17" pos:end="191:53"><name pos:start="191:17" pos:end="191:28"><name pos:start="191:17" pos:end="191:22">stereo</name><operator pos:start="191:23" pos:end="191:24">-&gt;</operator><name pos:start="191:25" pos:end="191:28">type</name></name> <operator pos:start="191:30" pos:end="191:30">=</operator> <name pos:start="191:32" pos:end="191:53">AV_STEREO3D_SIDEBYSIDE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:15">case <expr pos:start="195:14" pos:end="195:14"><literal type="number" pos:start="195:14" pos:end="195:14">4</literal></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="197:49"><expr pos:start="197:13" pos:end="197:48"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:18">stereo</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:24">type</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:48">AV_STEREO3D_TOPBOTTOM</name></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:15">case <expr pos:start="201:14" pos:end="201:14"><literal type="number" pos:start="201:14" pos:end="201:14">5</literal></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:53"><expr pos:start="203:13" pos:end="203:52"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:18">stereo</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:24">type</name></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <name pos:start="203:28" pos:end="203:52">AV_STEREO3D_FRAMESEQUENCE</name></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:15">case <expr pos:start="207:14" pos:end="207:14"><literal type="number" pos:start="207:14" pos:end="207:14">6</literal></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:42"><expr pos:start="209:13" pos:end="209:41"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:18">stereo</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:24">type</name></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <name pos:start="209:28" pos:end="209:41">AV_STEREO3D_2D</name></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="217:9" pos:end="219:52"><if pos:start="217:9" pos:end="219:52">if <condition pos:start="217:12" pos:end="217:49">(<expr pos:start="217:13" pos:end="217:48"><name pos:start="217:13" pos:end="217:43"><name pos:start="217:13" pos:end="217:14">fp</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:43">content_interpretation_type</name></name> <operator pos:start="217:45" pos:end="217:46">==</operator> <literal type="number" pos:start="217:48" pos:end="217:48">2</literal></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:52"><block_content pos:start="219:13" pos:end="219:52">

            <expr_stmt pos:start="219:13" pos:end="219:52"><expr pos:start="219:13" pos:end="219:51"><name pos:start="219:13" pos:end="219:25"><name pos:start="219:13" pos:end="219:18">stereo</name><operator pos:start="219:19" pos:end="219:20">-&gt;</operator><name pos:start="219:21" pos:end="219:25">flags</name></name> <operator pos:start="219:27" pos:end="219:27">=</operator> <name pos:start="219:29" pos:end="219:51">AV_STEREO3D_FLAG_INVERT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="225:5" pos:end="255:5"><if pos:start="225:5" pos:end="255:5">if <condition pos:start="225:8" pos:end="231:43">(<expr pos:start="225:9" pos:end="231:42"><name pos:start="225:9" pos:end="225:42"><name pos:start="225:9" pos:end="225:9">h</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:14">sei</name><operator pos:start="225:15" pos:end="225:15">.</operator><name pos:start="225:16" pos:end="225:34">display_orientation</name><operator pos:start="225:35" pos:end="225:35">.</operator><name pos:start="225:36" pos:end="225:42">present</name></name> <operator pos:start="225:44" pos:end="225:45">&amp;&amp;</operator>

        <operator pos:start="227:9" pos:end="227:9">(</operator><name pos:start="227:10" pos:end="227:58"><name pos:start="227:10" pos:end="227:10">h</name><operator pos:start="227:11" pos:end="227:12">-&gt;</operator><name pos:start="227:13" pos:end="227:15">sei</name><operator pos:start="227:16" pos:end="227:16">.</operator><name pos:start="227:17" pos:end="227:35">display_orientation</name><operator pos:start="227:36" pos:end="227:36">.</operator><name pos:start="227:37" pos:end="227:58">anticlockwise_rotation</name></name> <operator pos:start="227:60" pos:end="227:61">||</operator>

         <name pos:start="229:10" pos:end="229:41"><name pos:start="229:10" pos:end="229:10">h</name><operator pos:start="229:11" pos:end="229:12">-&gt;</operator><name pos:start="229:13" pos:end="229:15">sei</name><operator pos:start="229:16" pos:end="229:16">.</operator><name pos:start="229:17" pos:end="229:35">display_orientation</name><operator pos:start="229:36" pos:end="229:36">.</operator><name pos:start="229:37" pos:end="229:41">hflip</name></name> <operator pos:start="229:43" pos:end="229:44">||</operator>

         <name pos:start="231:10" pos:end="231:41"><name pos:start="231:10" pos:end="231:10">h</name><operator pos:start="231:11" pos:end="231:12">-&gt;</operator><name pos:start="231:13" pos:end="231:15">sei</name><operator pos:start="231:16" pos:end="231:16">.</operator><name pos:start="231:17" pos:end="231:35">display_orientation</name><operator pos:start="231:36" pos:end="231:36">.</operator><name pos:start="231:37" pos:end="231:41">vflip</name></name><operator pos:start="231:42" pos:end="231:42">)</operator></expr>)</condition> <block pos:start="231:45" pos:end="255:5">{<block_content pos:start="233:9" pos:end="253:51">

        <decl_stmt pos:start="233:9" pos:end="233:67"><decl pos:start="233:9" pos:end="233:66"><type pos:start="233:9" pos:end="233:35"><name pos:start="233:9" pos:end="233:33">H264SEIDisplayOrientation</name> <modifier pos:start="233:35" pos:end="233:35">*</modifier></type><name pos:start="233:36" pos:end="233:36">o</name> <init pos:start="233:38" pos:end="233:66">= <expr pos:start="233:40" pos:end="233:66"><operator pos:start="233:40" pos:end="233:40">&amp;</operator><name pos:start="233:41" pos:end="233:66"><name pos:start="233:41" pos:end="233:41">h</name><operator pos:start="233:42" pos:end="233:43">-&gt;</operator><name pos:start="233:44" pos:end="233:46">sei</name><operator pos:start="233:47" pos:end="233:47">.</operator><name pos:start="233:48" pos:end="233:66">display_orientation</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="235:9" pos:end="235:76"><decl pos:start="235:9" pos:end="235:75"><type pos:start="235:9" pos:end="235:14"><name pos:start="235:9" pos:end="235:14">double</name></type> <name pos:start="235:16" pos:end="235:20">angle</name> <init pos:start="235:22" pos:end="235:75">= <expr pos:start="235:24" pos:end="235:75"><name pos:start="235:24" pos:end="235:48"><name pos:start="235:24" pos:end="235:24">o</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:48">anticlockwise_rotation</name></name> <operator pos:start="235:50" pos:end="235:50">*</operator> <literal type="number" pos:start="235:52" pos:end="235:54">360</literal> <operator pos:start="235:56" pos:end="235:56">/</operator> <operator pos:start="235:58" pos:end="235:58">(</operator><name pos:start="235:59" pos:end="235:64">double</name><operator pos:start="235:65" pos:end="235:65">)</operator> <operator pos:start="235:67" pos:end="235:67">(</operator><literal type="number" pos:start="235:68" pos:end="235:68">1</literal> <operator pos:start="235:70" pos:end="235:71">&lt;&lt;</operator> <literal type="number" pos:start="235:73" pos:end="235:74">16</literal><operator pos:start="235:75" pos:end="235:75">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="237:9" pos:end="241:80"><decl pos:start="237:9" pos:end="241:79"><type pos:start="237:9" pos:end="237:25"><name pos:start="237:9" pos:end="237:23">AVFrameSideData</name> <modifier pos:start="237:25" pos:end="237:25">*</modifier></type><name pos:start="237:26" pos:end="237:33">rotation</name> <init pos:start="237:35" pos:end="241:79">= <expr pos:start="237:37" pos:end="241:79"><call pos:start="237:37" pos:end="241:79"><name pos:start="237:37" pos:end="237:58">av_frame_new_side_data</name><argument_list pos:start="237:59" pos:end="241:79">(<argument pos:start="237:60" pos:end="237:65"><expr pos:start="237:60" pos:end="237:65"><name pos:start="237:60" pos:end="237:65"><name pos:start="237:60" pos:end="237:62">cur</name><operator pos:start="237:63" pos:end="237:64">-&gt;</operator><name pos:start="237:65" pos:end="237:65">f</name></name></expr></argument>,

                                                           <argument pos:start="239:60" pos:end="239:86"><expr pos:start="239:60" pos:end="239:86"><name pos:start="239:60" pos:end="239:86">AV_FRAME_DATA_DISPLAYMATRIX</name></expr></argument>,

                                                           <argument pos:start="241:60" pos:end="241:78"><expr pos:start="241:60" pos:end="241:78"><sizeof pos:start="241:60" pos:end="241:74">sizeof<argument_list pos:start="241:66" pos:end="241:74">(<argument pos:start="241:67" pos:end="241:73"><expr pos:start="241:67" pos:end="241:73"><name pos:start="241:67" pos:end="241:73">int32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="241:76" pos:end="241:76">*</operator> <literal type="number" pos:start="241:78" pos:end="241:78">9</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="243:9" pos:end="245:35"><if pos:start="243:9" pos:end="245:35">if <condition pos:start="243:12" pos:end="243:22">(<expr pos:start="243:13" pos:end="243:21"><operator pos:start="243:13" pos:end="243:13">!</operator><name pos:start="243:14" pos:end="243:21">rotation</name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:35"><block_content pos:start="245:13" pos:end="245:35">

            <return pos:start="245:13" pos:end="245:35">return <expr pos:start="245:20" pos:end="245:34"><call pos:start="245:20" pos:end="245:34"><name pos:start="245:20" pos:end="245:26">AVERROR</name><argument_list pos:start="245:27" pos:end="245:34">(<argument pos:start="245:28" pos:end="245:33"><expr pos:start="245:28" pos:end="245:33"><name pos:start="245:28" pos:end="245:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="249:9" pos:end="249:66"><expr pos:start="249:9" pos:end="249:65"><call pos:start="249:9" pos:end="249:65"><name pos:start="249:9" pos:end="249:31">av_display_rotation_set</name><argument_list pos:start="249:32" pos:end="249:65">(<argument pos:start="249:33" pos:end="249:57"><expr pos:start="249:33" pos:end="249:57"><operator pos:start="249:33" pos:end="249:33">(</operator><name pos:start="249:34" pos:end="249:40">int32_t</name> <operator pos:start="249:42" pos:end="249:42">*</operator><operator pos:start="249:43" pos:end="249:43">)</operator><name pos:start="249:44" pos:end="249:57"><name pos:start="249:44" pos:end="249:51">rotation</name><operator pos:start="249:52" pos:end="249:53">-&gt;</operator><name pos:start="249:54" pos:end="249:57">data</name></name></expr></argument>, <argument pos:start="249:60" pos:end="249:64"><expr pos:start="249:60" pos:end="249:64"><name pos:start="249:60" pos:end="249:64">angle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="253:51"><expr pos:start="251:9" pos:end="253:50"><call pos:start="251:9" pos:end="253:50"><name pos:start="251:9" pos:end="251:30">av_display_matrix_flip</name><argument_list pos:start="251:31" pos:end="253:50">(<argument pos:start="251:32" pos:end="251:56"><expr pos:start="251:32" pos:end="251:56"><operator pos:start="251:32" pos:end="251:32">(</operator><name pos:start="251:33" pos:end="251:39">int32_t</name> <operator pos:start="251:41" pos:end="251:41">*</operator><operator pos:start="251:42" pos:end="251:42">)</operator><name pos:start="251:43" pos:end="251:56"><name pos:start="251:43" pos:end="251:50">rotation</name><operator pos:start="251:51" pos:end="251:52">-&gt;</operator><name pos:start="251:53" pos:end="251:56">data</name></name></expr></argument>,

                               <argument pos:start="253:32" pos:end="253:39"><expr pos:start="253:32" pos:end="253:39"><name pos:start="253:32" pos:end="253:39"><name pos:start="253:32" pos:end="253:32">o</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:39">hflip</name></name></expr></argument>, <argument pos:start="253:42" pos:end="253:49"><expr pos:start="253:42" pos:end="253:49"><name pos:start="253:42" pos:end="253:49"><name pos:start="253:42" pos:end="253:42">o</name><operator pos:start="253:43" pos:end="253:44">-&gt;</operator><name pos:start="253:45" pos:end="253:49">vflip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="259:5" pos:end="275:5"><if pos:start="259:5" pos:end="275:5">if <condition pos:start="259:8" pos:end="259:27">(<expr pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:9">h</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:14">sei</name><operator pos:start="259:15" pos:end="259:15">.</operator><name pos:start="259:16" pos:end="259:18">afd</name><operator pos:start="259:19" pos:end="259:19">.</operator><name pos:start="259:20" pos:end="259:26">present</name></name></expr>)</condition> <block pos:start="259:29" pos:end="275:5">{<block_content pos:start="261:9" pos:end="273:31">

        <decl_stmt pos:start="261:9" pos:end="263:70"><decl pos:start="261:9" pos:end="263:69"><type pos:start="261:9" pos:end="261:25"><name pos:start="261:9" pos:end="261:23">AVFrameSideData</name> <modifier pos:start="261:25" pos:end="261:25">*</modifier></type><name pos:start="261:26" pos:end="261:27">sd</name> <init pos:start="261:29" pos:end="263:69">= <expr pos:start="261:31" pos:end="263:69"><call pos:start="261:31" pos:end="263:69"><name pos:start="261:31" pos:end="261:52">av_frame_new_side_data</name><argument_list pos:start="261:53" pos:end="263:69">(<argument pos:start="261:54" pos:end="261:59"><expr pos:start="261:54" pos:end="261:59"><name pos:start="261:54" pos:end="261:59"><name pos:start="261:54" pos:end="261:56">cur</name><operator pos:start="261:57" pos:end="261:58">-&gt;</operator><name pos:start="261:59" pos:end="261:59">f</name></name></expr></argument>, <argument pos:start="261:62" pos:end="261:78"><expr pos:start="261:62" pos:end="261:78"><name pos:start="261:62" pos:end="261:78">AV_FRAME_DATA_AFD</name></expr></argument>,

                                                     <argument pos:start="263:54" pos:end="263:68"><expr pos:start="263:54" pos:end="263:68"><sizeof pos:start="263:54" pos:end="263:68">sizeof<argument_list pos:start="263:60" pos:end="263:68">(<argument pos:start="263:61" pos:end="263:67"><expr pos:start="263:61" pos:end="263:67"><name pos:start="263:61" pos:end="263:67">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="265:9" pos:end="267:35"><if pos:start="265:9" pos:end="267:35">if <condition pos:start="265:12" pos:end="265:16">(<expr pos:start="265:13" pos:end="265:15"><operator pos:start="265:13" pos:end="265:13">!</operator><name pos:start="265:14" pos:end="265:15">sd</name></expr>)</condition><block type="pseudo" pos:start="267:13" pos:end="267:35"><block_content pos:start="267:13" pos:end="267:35">

            <return pos:start="267:13" pos:end="267:35">return <expr pos:start="267:20" pos:end="267:34"><call pos:start="267:20" pos:end="267:34"><name pos:start="267:20" pos:end="267:26">AVERROR</name><argument_list pos:start="267:27" pos:end="267:34">(<argument pos:start="267:28" pos:end="267:33"><expr pos:start="267:28" pos:end="267:33"><name pos:start="267:28" pos:end="267:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="271:9" pos:end="271:57"><expr pos:start="271:9" pos:end="271:56"><operator pos:start="271:9" pos:end="271:9">*</operator><name pos:start="271:10" pos:end="271:17"><name pos:start="271:10" pos:end="271:11">sd</name><operator pos:start="271:12" pos:end="271:13">-&gt;</operator><name pos:start="271:14" pos:end="271:17">data</name></name> <operator pos:start="271:19" pos:end="271:19">=</operator> <name pos:start="271:21" pos:end="271:56"><name pos:start="271:21" pos:end="271:21">h</name><operator pos:start="271:22" pos:end="271:23">-&gt;</operator><name pos:start="271:24" pos:end="271:26">sei</name><operator pos:start="271:27" pos:end="271:27">.</operator><name pos:start="271:28" pos:end="271:30">afd</name><operator pos:start="271:31" pos:end="271:31">.</operator><name pos:start="271:32" pos:end="271:56">active_format_description</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:31"><expr pos:start="273:9" pos:end="273:30"><name pos:start="273:9" pos:end="273:26"><name pos:start="273:9" pos:end="273:9">h</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:14">sei</name><operator pos:start="273:15" pos:end="273:15">.</operator><name pos:start="273:16" pos:end="273:18">afd</name><operator pos:start="273:19" pos:end="273:19">.</operator><name pos:start="273:20" pos:end="273:26">present</name></name> <operator pos:start="273:28" pos:end="273:28">=</operator> <literal type="number" pos:start="273:30" pos:end="273:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="279:5" pos:end="301:5"><if pos:start="279:5" pos:end="301:5">if <condition pos:start="279:8" pos:end="279:39">(<expr pos:start="279:9" pos:end="279:38"><name pos:start="279:9" pos:end="279:38"><name pos:start="279:9" pos:end="279:9">h</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:14">sei</name><operator pos:start="279:15" pos:end="279:15">.</operator><name pos:start="279:16" pos:end="279:26">a53_caption</name><operator pos:start="279:27" pos:end="279:27">.</operator><name pos:start="279:28" pos:end="279:38">a53_caption</name></name></expr>)</condition> <block pos:start="279:41" pos:end="301:5">{<block_content pos:start="281:9" pos:end="299:34">

        <decl_stmt pos:start="281:9" pos:end="281:53"><decl pos:start="281:9" pos:end="281:52"><type pos:start="281:9" pos:end="281:27"><name pos:start="281:9" pos:end="281:25">H264SEIA53Caption</name> <modifier pos:start="281:27" pos:end="281:27">*</modifier></type><name pos:start="281:28" pos:end="281:30">a53</name> <init pos:start="281:32" pos:end="281:52">= <expr pos:start="281:34" pos:end="281:52"><operator pos:start="281:34" pos:end="281:34">&amp;</operator><name pos:start="281:35" pos:end="281:52"><name pos:start="281:35" pos:end="281:35">h</name><operator pos:start="281:36" pos:end="281:37">-&gt;</operator><name pos:start="281:38" pos:end="281:40">sei</name><operator pos:start="281:41" pos:end="281:41">.</operator><name pos:start="281:42" pos:end="281:52">a53_caption</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="283:9" pos:end="287:76"><decl pos:start="283:9" pos:end="287:75"><type pos:start="283:9" pos:end="283:25"><name pos:start="283:9" pos:end="283:23">AVFrameSideData</name> <modifier pos:start="283:25" pos:end="283:25">*</modifier></type><name pos:start="283:26" pos:end="283:27">sd</name> <init pos:start="283:29" pos:end="287:75">= <expr pos:start="283:31" pos:end="287:75"><call pos:start="283:31" pos:end="287:75"><name pos:start="283:31" pos:end="283:52">av_frame_new_side_data</name><argument_list pos:start="283:53" pos:end="287:75">(<argument pos:start="283:54" pos:end="283:59"><expr pos:start="283:54" pos:end="283:59"><name pos:start="283:54" pos:end="283:59"><name pos:start="283:54" pos:end="283:56">cur</name><operator pos:start="283:57" pos:end="283:58">-&gt;</operator><name pos:start="283:59" pos:end="283:59">f</name></name></expr></argument>,

                                                     <argument pos:start="285:54" pos:end="285:73"><expr pos:start="285:54" pos:end="285:73"><name pos:start="285:54" pos:end="285:73">AV_FRAME_DATA_A53_CC</name></expr></argument>,

                                                     <argument pos:start="287:54" pos:end="287:74"><expr pos:start="287:54" pos:end="287:74"><name pos:start="287:54" pos:end="287:74"><name pos:start="287:54" pos:end="287:56">a53</name><operator pos:start="287:57" pos:end="287:58">-&gt;</operator><name pos:start="287:59" pos:end="287:74">a53_caption_size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="289:9" pos:end="291:35"><if pos:start="289:9" pos:end="291:35">if <condition pos:start="289:12" pos:end="289:16">(<expr pos:start="289:13" pos:end="289:15"><operator pos:start="289:13" pos:end="289:13">!</operator><name pos:start="289:14" pos:end="289:15">sd</name></expr>)</condition><block type="pseudo" pos:start="291:13" pos:end="291:35"><block_content pos:start="291:13" pos:end="291:35">

            <return pos:start="291:13" pos:end="291:35">return <expr pos:start="291:20" pos:end="291:34"><call pos:start="291:20" pos:end="291:34"><name pos:start="291:20" pos:end="291:26">AVERROR</name><argument_list pos:start="291:27" pos:end="291:34">(<argument pos:start="291:28" pos:end="291:33"><expr pos:start="291:28" pos:end="291:33"><name pos:start="291:28" pos:end="291:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:66"><expr pos:start="295:9" pos:end="295:65"><call pos:start="295:9" pos:end="295:65"><name pos:start="295:9" pos:end="295:14">memcpy</name><argument_list pos:start="295:15" pos:end="295:65">(<argument pos:start="295:16" pos:end="295:23"><expr pos:start="295:16" pos:end="295:23"><name pos:start="295:16" pos:end="295:23"><name pos:start="295:16" pos:end="295:17">sd</name><operator pos:start="295:18" pos:end="295:19">-&gt;</operator><name pos:start="295:20" pos:end="295:23">data</name></name></expr></argument>, <argument pos:start="295:26" pos:end="295:41"><expr pos:start="295:26" pos:end="295:41"><name pos:start="295:26" pos:end="295:41"><name pos:start="295:26" pos:end="295:28">a53</name><operator pos:start="295:29" pos:end="295:30">-&gt;</operator><name pos:start="295:31" pos:end="295:41">a53_caption</name></name></expr></argument>, <argument pos:start="295:44" pos:end="295:64"><expr pos:start="295:44" pos:end="295:64"><name pos:start="295:44" pos:end="295:64"><name pos:start="295:44" pos:end="295:46">a53</name><operator pos:start="295:47" pos:end="295:48">-&gt;</operator><name pos:start="295:49" pos:end="295:64">a53_caption_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:36"><expr pos:start="297:9" pos:end="297:35"><call pos:start="297:9" pos:end="297:35"><name pos:start="297:9" pos:end="297:16">av_freep</name><argument_list pos:start="297:17" pos:end="297:35">(<argument pos:start="297:18" pos:end="297:34"><expr pos:start="297:18" pos:end="297:34"><operator pos:start="297:18" pos:end="297:18">&amp;</operator><name pos:start="297:19" pos:end="297:34"><name pos:start="297:19" pos:end="297:21">a53</name><operator pos:start="297:22" pos:end="297:23">-&gt;</operator><name pos:start="297:24" pos:end="297:34">a53_caption</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:34"><expr pos:start="299:9" pos:end="299:33"><name pos:start="299:9" pos:end="299:29"><name pos:start="299:9" pos:end="299:11">a53</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:29">a53_caption_size</name></name> <operator pos:start="299:31" pos:end="299:31">=</operator> <literal type="number" pos:start="299:33" pos:end="299:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="305:5" pos:end="305:13">return <expr pos:start="305:12" pos:end="305:12"><literal type="number" pos:start="305:12" pos:end="305:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
