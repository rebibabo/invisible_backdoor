<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9696.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">omap_os_timer_write</name><parameter_list pos:start="1:32" pos:end="3:62">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:46">value</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:61"><decl pos:start="3:49" pos:end="3:61"><type pos:start="3:49" pos:end="3:61"><name pos:start="3:49" pos:end="3:56">unsigned</name></type> <name pos:start="3:58" pos:end="3:61">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:5">

    <decl_stmt pos:start="7:5" pos:end="7:72"><decl pos:start="7:5" pos:end="7:71"><type pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:29">omap_32khz_timer_s</name></name> <modifier pos:start="7:31" pos:end="7:31">*</modifier></type><name pos:start="7:32" pos:end="7:32">s</name> <init pos:start="7:34" pos:end="7:71">= <expr pos:start="7:36" pos:end="7:71"><operator pos:start="7:36" pos:end="7:36">(</operator>struct <name pos:start="7:44" pos:end="7:61">omap_32khz_timer_s</name> <operator pos:start="7:63" pos:end="7:63">*</operator><operator pos:start="7:64" pos:end="7:64">)</operator> <name pos:start="7:66" pos:end="7:71">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:42">= <expr pos:start="9:18" pos:end="9:42"><name pos:start="9:18" pos:end="9:21">addr</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">OMAP_MPUI_REG_MASK</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">size</name> <operator pos:start="13:14" pos:end="13:15">!=</operator> <literal type="number" pos:start="13:17" pos:end="13:17">4</literal></expr>)</condition> <block pos:start="13:20" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:58">

        <return pos:start="15:9" pos:end="15:58">return <expr pos:start="15:16" pos:end="15:57"><call pos:start="15:16" pos:end="15:57"><name pos:start="15:16" pos:end="15:36">omap_badwidth_write32</name><argument_list pos:start="15:37" pos:end="15:57">(<argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">opaque</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">addr</name></expr></argument>, <argument pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><name pos:start="15:52" pos:end="15:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="65:5">switch <condition pos:start="21:12" pos:end="21:19">(<expr pos:start="21:13" pos:end="21:18"><name pos:start="21:13" pos:end="21:18">offset</name></expr>)</condition> <block pos:start="21:21" pos:end="65:5">{<block_content pos:start="23:5" pos:end="63:27">

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="23:17" pos:end="23:25">/* TVR */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">timer</name><operator pos:start="25:17" pos:end="25:17">.</operator><name pos:start="25:18" pos:end="25:26">reset_val</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:34">value</name> <operator pos:start="25:36" pos:end="25:36">&amp;</operator> <literal type="number" pos:start="25:38" pos:end="25:47">0x00ffffff</literal></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>



    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x04</literal></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:25">/* TCR */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:25"><call pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:19">OMAP_RO_REG</name><argument_list pos:start="33:20" pos:end="33:25">(<argument pos:start="33:21" pos:end="33:24"><expr pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:24">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>



    <case pos:start="39:5" pos:end="39:14">case <expr pos:start="39:10" pos:end="39:13"><literal type="number" pos:start="39:10" pos:end="39:13">0x08</literal></expr>:</case>	<comment type="block" pos:start="39:17" pos:end="39:24">/* CR */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">timer</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:19">ar</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">(</operator><name pos:start="41:24" pos:end="41:28">value</name> <operator pos:start="41:30" pos:end="41:31">&gt;&gt;</operator> <literal type="number" pos:start="41:33" pos:end="41:33">3</literal><operator pos:start="41:34" pos:end="41:34">)</operator> <operator pos:start="41:36" pos:end="41:36">&amp;</operator> <literal type="number" pos:start="41:38" pos:end="41:38">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:16">timer</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:23">it_ena</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">(</operator><name pos:start="43:28" pos:end="43:32">value</name> <operator pos:start="43:34" pos:end="43:35">&gt;&gt;</operator> <literal type="number" pos:start="43:37" pos:end="43:37">2</literal><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:40">&amp;</operator> <literal type="number" pos:start="43:42" pos:end="43:42">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="55:9"><if pos:start="45:9" pos:end="55:9">if <condition pos:start="45:12" pos:end="45:54">(<expr pos:start="45:13" pos:end="45:53"><name pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:20">timer</name><operator pos:start="45:21" pos:end="45:21">.</operator><name pos:start="45:22" pos:end="45:23">st</name></name> <operator pos:start="45:25" pos:end="45:26">!=</operator> <operator pos:start="45:28" pos:end="45:28">(</operator><name pos:start="45:29" pos:end="45:33">value</name> <operator pos:start="45:35" pos:end="45:35">&amp;</operator> <literal type="number" pos:start="45:37" pos:end="45:37">1</literal><operator pos:start="45:38" pos:end="45:38">)</operator> <operator pos:start="45:40" pos:end="45:41">||</operator> <operator pos:start="45:43" pos:end="45:43">(</operator><name pos:start="45:44" pos:end="45:48">value</name> <operator pos:start="45:50" pos:end="45:50">&amp;</operator> <literal type="number" pos:start="45:52" pos:end="45:52">2</literal><operator pos:start="45:53" pos:end="45:53">)</operator></expr>)</condition> <block pos:start="45:56" pos:end="55:9">{<block_content pos:start="47:13" pos:end="53:41">

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><call pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:27">omap_timer_sync</name><argument_list pos:start="47:28" pos:end="47:38">(<argument pos:start="47:29" pos:end="47:37"><expr pos:start="47:29" pos:end="47:37"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:37"><name pos:start="47:30" pos:end="47:30">s</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:37">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:40"><expr pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:20">timer</name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:27">enable</name></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <name pos:start="49:31" pos:end="49:35">value</name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <literal type="number" pos:start="49:39" pos:end="49:39">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:36"><expr pos:start="51:13" pos:end="51:35"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">timer</name><operator pos:start="51:21" pos:end="51:21">.</operator><name pos:start="51:22" pos:end="51:23">st</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:31">value</name> <operator pos:start="51:33" pos:end="51:33">&amp;</operator> <literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:41"><expr pos:start="53:13" pos:end="53:40"><call pos:start="53:13" pos:end="53:40"><name pos:start="53:13" pos:end="53:29">omap_timer_update</name><argument_list pos:start="53:30" pos:end="53:40">(<argument pos:start="53:31" pos:end="53:39"><expr pos:start="53:31" pos:end="53:39"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:39"><name pos:start="53:32" pos:end="53:32">s</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:39">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>



    <default pos:start="61:5" pos:end="61:12">default:</default>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><call pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:20">OMAP_BAD_REG</name><argument_list pos:start="63:21" pos:end="63:26">(<argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
