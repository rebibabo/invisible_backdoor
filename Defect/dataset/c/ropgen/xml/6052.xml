<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6052.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:15"><name pos:start="1:1" pos:end="1:9">fetchline</name><argument_list pos:start="1:10" pos:end="1:15">(<argument pos:start="1:11" pos:end="1:14">void</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:9" pos:end="31:20">

	<decl_stmt pos:start="5:9" pos:end="5:50"><decl pos:start="5:9" pos:end="5:18"><type pos:start="5:9" pos:end="5:17"><name pos:start="5:9" pos:end="5:12">char</name>	<modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">p</name></decl>, <decl pos:start="5:21" pos:end="5:49"><type ref="prev" pos:start="5:9" pos:end="5:17"><modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:25">line</name> <init pos:start="5:27" pos:end="5:49">= <expr pos:start="5:29" pos:end="5:49"><call pos:start="5:29" pos:end="5:49"><name pos:start="5:29" pos:end="5:34">malloc</name><argument_list pos:start="5:35" pos:end="5:49">(<argument pos:start="5:36" pos:end="5:48"><expr pos:start="5:36" pos:end="5:48"><name pos:start="5:36" pos:end="5:48">MAXREADLINESZ</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<if_stmt pos:start="9:9" pos:end="11:28"><if pos:start="9:9" pos:end="11:28">if <condition pos:start="9:12" pos:end="9:18">(<expr pos:start="9:13" pos:end="9:17"><operator pos:start="9:13" pos:end="9:13">!</operator><name pos:start="9:14" pos:end="9:17">line</name></expr>)</condition><block type="pseudo" pos:start="11:17" pos:end="11:28"><block_content pos:start="11:17" pos:end="11:28">

		<return pos:start="11:17" pos:end="11:28">return <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:14">printf</name><argument_list pos:start="13:15" pos:end="13:34">(<argument pos:start="13:16" pos:end="13:19"><expr pos:start="13:16" pos:end="13:19"><literal type="string" pos:start="13:16" pos:end="13:19">"%s"</literal></expr></argument>, <argument pos:start="13:22" pos:end="13:33"><expr pos:start="13:22" pos:end="13:33"><call pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:31">get_prompt</name><argument_list pos:start="13:32" pos:end="13:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="15:9" pos:end="15:23"><expr pos:start="15:9" pos:end="15:22"><call pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:14">fflush</name><argument_list pos:start="15:15" pos:end="15:22">(<argument pos:start="15:16" pos:end="15:21"><expr pos:start="15:16" pos:end="15:21"><name pos:start="15:16" pos:end="15:21">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:47">(<expr pos:start="17:13" pos:end="17:46"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:46"><name pos:start="17:14" pos:end="17:18">fgets</name><argument_list pos:start="17:19" pos:end="17:46">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">line</name></expr></argument>, <argument pos:start="17:26" pos:end="17:38"><expr pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:38">MAXREADLINESZ</name></expr></argument>, <argument pos:start="17:41" pos:end="17:45"><expr pos:start="17:41" pos:end="17:45"><name pos:start="17:41" pos:end="17:45">stdin</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:49" pos:end="23:9">{<block_content pos:start="19:17" pos:end="21:28">

		<expr_stmt pos:start="19:17" pos:end="19:27"><expr pos:start="19:17" pos:end="19:26"><call pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:20">free</name><argument_list pos:start="19:21" pos:end="19:26">(<argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><name pos:start="19:22" pos:end="19:25">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="21:17" pos:end="21:28">return <expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr>;</return>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="25:9" pos:end="25:32"><expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:9">p</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:16">line</name> <operator pos:start="25:18" pos:end="25:18">+</operator> <call pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:25">strlen</name><argument_list pos:start="25:26" pos:end="25:31">(<argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="27:9" pos:end="29:29"><if pos:start="27:9" pos:end="29:29">if <condition pos:start="27:12" pos:end="27:39">(<expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:13">p</name> <operator pos:start="27:15" pos:end="27:16">!=</operator> <name pos:start="27:18" pos:end="27:21">line</name> <operator pos:start="27:23" pos:end="27:24">&amp;&amp;</operator> <name pos:start="27:26" pos:end="27:30"><name pos:start="27:26" pos:end="27:26">p</name><index pos:start="27:27" pos:end="27:30">[<expr pos:start="27:28" pos:end="27:29"><operator pos:start="27:28" pos:end="27:28">-</operator><literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>]</index></name> <operator pos:start="27:32" pos:end="27:33">==</operator> <literal type="char" pos:start="27:35" pos:end="27:38">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:29"><block_content pos:start="29:17" pos:end="29:29">

		<expr_stmt pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:17">p</name><index pos:start="29:18" pos:end="29:21">[<expr pos:start="29:19" pos:end="29:20"><operator pos:start="29:19" pos:end="29:19">-</operator><literal type="number" pos:start="29:20" pos:end="29:20">1</literal></expr>]</index></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="char" pos:start="29:25" pos:end="29:28">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">line</name></expr>;</return>

</block_content>}</block>
</unit>
