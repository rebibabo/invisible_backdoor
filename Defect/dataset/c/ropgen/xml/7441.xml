<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7441.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">acpi_build_update</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:36"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:48">build_opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:45">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AcpiBuildState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:31">build_state</name> <init pos:start="5:33" pos:end="5:46">= <expr pos:start="5:35" pos:end="5:46"><name pos:start="5:35" pos:end="5:46">build_opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:19">AcpiBuildTables</name></type> <name pos:start="7:21" pos:end="7:26">tables</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:63">/* No state to update or already patched? Nothing to do. */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:45">(<expr pos:start="13:9" pos:end="13:44"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:20">build_state</name> <operator pos:start="13:22" pos:end="13:23">||</operator> <name pos:start="13:25" pos:end="13:44"><name pos:start="13:25" pos:end="13:35">build_state</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:44">patched</name></name></expr>)</condition> <block pos:start="13:47" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:15">build_state</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:24">patched</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:26">acpi_build_tables_init</name><argument_list pos:start="23:27" pos:end="23:35">(<argument pos:start="23:28" pos:end="23:34"><expr pos:start="23:28" pos:end="23:34"><operator pos:start="23:28" pos:end="23:28">&amp;</operator><name pos:start="23:29" pos:end="23:34">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><call pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:14">acpi_build</name><argument_list pos:start="27:15" pos:end="27:52">(<argument pos:start="27:16" pos:end="27:22"><expr pos:start="27:16" pos:end="27:22"><operator pos:start="27:16" pos:end="27:16">&amp;</operator><name pos:start="27:17" pos:end="27:22">tables</name></expr></argument>, <argument pos:start="27:25" pos:end="27:51"><expr pos:start="27:25" pos:end="27:51"><call pos:start="27:25" pos:end="27:51"><name pos:start="27:25" pos:end="27:31">MACHINE</name><argument_list pos:start="27:32" pos:end="27:51">(<argument pos:start="27:33" pos:end="27:50"><expr pos:start="27:33" pos:end="27:50"><call pos:start="27:33" pos:end="27:50"><name pos:start="27:33" pos:end="27:48">qdev_get_machine</name><argument_list pos:start="27:49" pos:end="27:50">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:19">acpi_ram_update</name><argument_list pos:start="31:20" pos:end="31:61">(<argument pos:start="31:21" pos:end="31:41"><expr pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:41"><name pos:start="31:21" pos:end="31:31">build_state</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:41">table_mr</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:60"><expr pos:start="31:44" pos:end="31:60"><name pos:start="31:44" pos:end="31:60"><name pos:start="31:44" pos:end="31:49">tables</name><operator pos:start="31:50" pos:end="31:50">.</operator><name pos:start="31:51" pos:end="31:60">table_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:26">(<expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:19">build_state</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">rsdp</name></name></expr>)</condition> <block pos:start="35:28" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:81">

        <expr_stmt pos:start="37:9" pos:end="37:81"><expr pos:start="37:9" pos:end="37:80"><call pos:start="37:9" pos:end="37:80"><name pos:start="37:9" pos:end="37:14">memcpy</name><argument_list pos:start="37:15" pos:end="37:80">(<argument pos:start="37:16" pos:end="37:32"><expr pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:32"><name pos:start="37:16" pos:end="37:26">build_state</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:32">rsdp</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:51"><expr pos:start="37:35" pos:end="37:51"><name pos:start="37:35" pos:end="37:51"><name pos:start="37:35" pos:end="37:40">tables</name><operator pos:start="37:41" pos:end="37:41">.</operator><name pos:start="37:42" pos:end="37:45">rsdp</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:51">data</name></name></expr></argument>, <argument pos:start="37:54" pos:end="37:79"><expr pos:start="37:54" pos:end="37:79"><call pos:start="37:54" pos:end="37:79"><name pos:start="37:54" pos:end="37:66">acpi_data_len</name><argument_list pos:start="37:67" pos:end="37:79">(<argument pos:start="37:68" pos:end="37:78"><expr pos:start="37:68" pos:end="37:78"><name pos:start="37:68" pos:end="37:78"><name pos:start="37:68" pos:end="37:73">tables</name><operator pos:start="37:74" pos:end="37:74">.</operator><name pos:start="37:75" pos:end="37:78">rsdp</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:59">

        <expr_stmt pos:start="41:9" pos:end="41:59"><expr pos:start="41:9" pos:end="41:58"><call pos:start="41:9" pos:end="41:58"><name pos:start="41:9" pos:end="41:23">acpi_ram_update</name><argument_list pos:start="41:24" pos:end="41:58">(<argument pos:start="41:25" pos:end="41:44"><expr pos:start="41:25" pos:end="41:44"><name pos:start="41:25" pos:end="41:44"><name pos:start="41:25" pos:end="41:35">build_state</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:44">rsdp_mr</name></name></expr></argument>, <argument pos:start="41:47" pos:end="41:57"><expr pos:start="41:47" pos:end="41:57"><name pos:start="41:47" pos:end="41:57"><name pos:start="41:47" pos:end="41:52">tables</name><operator pos:start="41:53" pos:end="41:53">.</operator><name pos:start="41:54" pos:end="41:57">rsdp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><call pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:19">acpi_ram_update</name><argument_list pos:start="47:20" pos:end="47:58">(<argument pos:start="47:21" pos:end="47:42"><expr pos:start="47:21" pos:end="47:42"><name pos:start="47:21" pos:end="47:42"><name pos:start="47:21" pos:end="47:31">build_state</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:42">linker_mr</name></name></expr></argument>, <argument pos:start="47:45" pos:end="47:57"><expr pos:start="47:45" pos:end="47:57"><name pos:start="47:45" pos:end="47:57"><name pos:start="47:45" pos:end="47:50">tables</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:57">linker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><call pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:29">acpi_build_tables_cleanup</name><argument_list pos:start="49:30" pos:end="49:44">(<argument pos:start="49:31" pos:end="49:37"><expr pos:start="49:31" pos:end="49:37"><operator pos:start="49:31" pos:end="49:31">&amp;</operator><name pos:start="49:32" pos:end="49:37">tables</name></expr></argument>, <argument pos:start="49:40" pos:end="49:43"><expr pos:start="49:40" pos:end="49:43"><name pos:start="49:40" pos:end="49:43">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
