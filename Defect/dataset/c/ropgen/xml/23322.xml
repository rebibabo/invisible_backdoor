<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23322.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">read_dialogue</name><parameter_list pos:start="1:25" pos:end="3:55">(<parameter pos:start="1:26" pos:end="1:40"><decl pos:start="1:26" pos:end="1:40"><type pos:start="1:26" pos:end="1:40"><name pos:start="1:26" pos:end="1:35">ASSContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">ass</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">AVBPrint</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">dst</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:73"><decl pos:start="1:58" pos:end="1:73"><type pos:start="1:58" pos:end="1:73"><specifier pos:start="1:58" pos:end="1:62">const</specifier> <name pos:start="1:64" pos:end="1:70">uint8_t</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:73">p</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:32">int64_t</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">start</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:44">int</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:54">duration</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:14">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">hh1</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">mm1</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:21">ss1</name></decl>, <decl pos:start="11:24" pos:end="11:26"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:26">ms1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">hh2</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">mm2</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">ss2</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:26">ms2</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="63:5"><if pos:start="17:5" pos:end="63:5">if <condition pos:start="17:8" pos:end="21:50">(<expr pos:start="17:9" pos:end="21:49"><call pos:start="17:9" pos:end="21:44"><name pos:start="17:9" pos:end="17:14">sscanf</name><argument_list pos:start="17:15" pos:end="21:44">(<argument pos:start="17:16" pos:end="17:16"><expr pos:start="17:16" pos:end="17:16"><name pos:start="17:16" pos:end="17:16">p</name></expr></argument>, <argument pos:start="17:19" pos:end="17:67"><expr pos:start="17:19" pos:end="17:67"><literal type="string" pos:start="17:19" pos:end="17:67">"Dialogue: %*[^,],%d:%d:%d%*c%d,%d:%d:%d%*c%d,%n"</literal></expr></argument>,

               <argument pos:start="19:16" pos:end="19:19"><expr pos:start="19:16" pos:end="19:19"><operator pos:start="19:16" pos:end="19:16">&amp;</operator><name pos:start="19:17" pos:end="19:19">hh1</name></expr></argument>, <argument pos:start="19:22" pos:end="19:25"><expr pos:start="19:22" pos:end="19:25"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:25">mm1</name></expr></argument>, <argument pos:start="19:28" pos:end="19:31"><expr pos:start="19:28" pos:end="19:31"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:31">ss1</name></expr></argument>, <argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:37">ms1</name></expr></argument>,

               <argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><operator pos:start="21:16" pos:end="21:16">&amp;</operator><name pos:start="21:17" pos:end="21:19">hh2</name></expr></argument>, <argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:25">mm2</name></expr></argument>, <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:31">ss2</name></expr></argument>, <argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:37">ms2</name></expr></argument>, <argument pos:start="21:40" pos:end="21:43"><expr pos:start="21:40" pos:end="21:43"><operator pos:start="21:40" pos:end="21:40">&amp;</operator><name pos:start="21:41" pos:end="21:43">pos</name></expr></argument>)</argument_list></call> <operator pos:start="21:46" pos:end="21:47">&gt;=</operator> <literal type="number" pos:start="21:49" pos:end="21:49">8</literal></expr>)</condition> <block pos:start="21:52" pos:end="63:5">{<block_content pos:start="33:9" pos:end="61:17">



        <comment type="block" pos:start="25:9" pos:end="31:28">/* This is not part of the sscanf itself in order to handle an actual

         * number (which would be the Layer) or the form "Marked=N" (which is

         * the old SSA field, now replaced by Layer, and will be lead to Layer

         * being 0 here). */</comment>

        <decl_stmt pos:start="33:9" pos:end="33:39"><decl pos:start="33:9" pos:end="33:38"><type pos:start="33:9" pos:end="33:17"><specifier pos:start="33:9" pos:end="33:13">const</specifier> <name pos:start="33:15" pos:end="33:17">int</name></type> <name pos:start="33:19" pos:end="33:23">layer</name> <init pos:start="33:25" pos:end="33:38">= <expr pos:start="33:27" pos:end="33:38"><call pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:30">atoi</name><argument_list pos:start="33:31" pos:end="33:38">(<argument pos:start="33:32" pos:end="33:37"><expr pos:start="33:32" pos:end="33:37"><name pos:start="33:32" pos:end="33:32">p</name> <operator pos:start="33:34" pos:end="33:34">+</operator> <literal type="number" pos:start="33:36" pos:end="33:37">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:61"><expr pos:start="37:9" pos:end="37:60"><name pos:start="37:9" pos:end="37:11">end</name>    <operator pos:start="37:16" pos:end="37:16">=</operator> <operator pos:start="37:18" pos:end="37:18">(</operator><name pos:start="37:19" pos:end="37:21">hh2</name><operator pos:start="37:22" pos:end="37:22">*</operator><literal type="number" pos:start="37:23" pos:end="37:30">3600LL</literal> <operator pos:start="37:30" pos:end="37:30">+</operator> <name pos:start="37:32" pos:end="37:34">mm2</name><operator pos:start="37:35" pos:end="37:35">*</operator><literal type="number" pos:start="37:36" pos:end="37:41">60LL</literal> <operator pos:start="37:41" pos:end="37:41">+</operator> <name pos:start="37:43" pos:end="37:45">ss2</name><operator pos:start="37:46" pos:end="37:46">)</operator> <operator pos:start="37:48" pos:end="37:48">*</operator> <literal type="number" pos:start="37:50" pos:end="37:56">100LL</literal> <operator pos:start="37:56" pos:end="37:56">+</operator> <name pos:start="37:58" pos:end="37:60">ms2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:14">start</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:21">hh1</name><operator pos:start="39:22" pos:end="39:22">*</operator><literal type="number" pos:start="39:23" pos:end="39:30">3600LL</literal> <operator pos:start="39:30" pos:end="39:30">+</operator> <name pos:start="39:32" pos:end="39:34">mm1</name><operator pos:start="39:35" pos:end="39:35">*</operator><literal type="number" pos:start="39:36" pos:end="39:41">60LL</literal> <operator pos:start="39:41" pos:end="39:41">+</operator> <name pos:start="39:43" pos:end="39:45">ss1</name><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">*</operator> <literal type="number" pos:start="39:50" pos:end="39:56">100LL</literal> <operator pos:start="39:56" pos:end="39:56">+</operator> <name pos:start="39:58" pos:end="39:60">ms1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:33"><expr pos:start="41:9" pos:end="41:32"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:17">duration</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <name pos:start="41:21" pos:end="41:23">end</name> <operator pos:start="41:25" pos:end="41:25">-</operator> <operator pos:start="41:27" pos:end="41:27">*</operator><name pos:start="41:28" pos:end="41:32">start</name></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><call pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:23">av_bprint_clear</name><argument_list pos:start="45:24" pos:end="45:28">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:70"><expr pos:start="47:9" pos:end="47:69"><call pos:start="47:9" pos:end="47:69"><name pos:start="47:9" pos:end="47:18">av_bprintf</name><argument_list pos:start="47:19" pos:end="47:69">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">dst</name></expr></argument>, <argument pos:start="47:25" pos:end="47:34"><expr pos:start="47:25" pos:end="47:34"><literal type="string" pos:start="47:25" pos:end="47:34">"%u,%d,%s"</literal></expr></argument>, <argument pos:start="47:37" pos:end="47:52"><expr pos:start="47:37" pos:end="47:52"><name pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:39">ass</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:50">readorder</name></name><operator pos:start="47:51" pos:end="47:52">++</operator></expr></argument>, <argument pos:start="47:55" pos:end="47:59"><expr pos:start="47:55" pos:end="47:59"><name pos:start="47:55" pos:end="47:59">layer</name></expr></argument>, <argument pos:start="47:62" pos:end="47:68"><expr pos:start="47:62" pos:end="47:68"><name pos:start="47:62" pos:end="47:62">p</name> <operator pos:start="47:64" pos:end="47:64">+</operator> <name pos:start="47:66" pos:end="47:68">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="51:36">/* right strip the buffer */</comment>

        <while pos:start="53:9" pos:end="59:37">while <condition pos:start="53:15" pos:end="57:46">(<expr pos:start="53:16" pos:end="57:45"><name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:18">dst</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:23">len</name></name> <operator pos:start="53:25" pos:end="53:25">&gt;</operator> <literal type="number" pos:start="53:27" pos:end="53:27">0</literal> <operator pos:start="53:29" pos:end="53:30">&amp;&amp;</operator>

               <name pos:start="55:16" pos:end="55:37"><name pos:start="55:16" pos:end="55:18">dst</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:23">str</name><index pos:start="55:24" pos:end="55:37">[<expr pos:start="55:25" pos:end="55:36"><name pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:27">dst</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:32">len</name></name> <operator pos:start="55:34" pos:end="55:34">-</operator> <literal type="number" pos:start="55:36" pos:end="55:36">1</literal></expr>]</index></name> <operator pos:start="55:39" pos:end="55:40">==</operator> <literal type="char" pos:start="55:42" pos:end="55:45">'\r'</literal> <operator pos:start="55:47" pos:end="55:48">||</operator>

               <name pos:start="57:16" pos:end="57:37"><name pos:start="57:16" pos:end="57:18">dst</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:23">str</name><index pos:start="57:24" pos:end="57:37">[<expr pos:start="57:25" pos:end="57:36"><name pos:start="57:25" pos:end="57:32"><name pos:start="57:25" pos:end="57:27">dst</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:32">len</name></name> <operator pos:start="57:34" pos:end="57:34">-</operator> <literal type="number" pos:start="57:36" pos:end="57:36">1</literal></expr>]</index></name> <operator pos:start="57:39" pos:end="57:40">==</operator> <literal type="char" pos:start="57:42" pos:end="57:45">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:37"><block_content pos:start="59:13" pos:end="59:37">

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:15">dst</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:20">str</name><index pos:start="59:21" pos:end="59:32">[<expr pos:start="59:22" pos:end="59:31"><operator pos:start="59:22" pos:end="59:23">--</operator><name pos:start="59:24" pos:end="59:31"><name pos:start="59:24" pos:end="59:26">dst</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:31">len</name></name></expr>]</index></name> <operator pos:start="59:34" pos:end="59:34">=</operator> <literal type="number" pos:start="59:36" pos:end="59:36">0</literal></expr>;</expr_stmt></block_content></block></while>

        <return pos:start="61:9" pos:end="61:17">return <expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="65:5" pos:end="65:14">return <expr pos:start="65:12" pos:end="65:13"><operator pos:start="65:12" pos:end="65:12">-</operator><literal type="number" pos:start="65:13" pos:end="65:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
