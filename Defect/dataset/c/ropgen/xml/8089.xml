<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8089.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mjpeg_decode_scan</name><parameter_list pos:start="1:29" pos:end="7:54">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:69">nb_components</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:77"><decl pos:start="1:72" pos:end="1:77"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:77">Ah</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:35"><decl pos:start="3:30" pos:end="3:35"><type pos:start="3:30" pos:end="3:35"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:35">Al</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:62"><decl pos:start="3:38" pos:end="3:62"><type pos:start="3:38" pos:end="3:62"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:50">uint8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:62">mb_bitmask</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:48">mb_bitmask_size</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:53"><decl pos:start="7:30" pos:end="7:53"><type pos:start="7:30" pos:end="7:53"><specifier pos:start="7:30" pos:end="7:34">const</specifier> <name pos:start="7:36" pos:end="7:42">AVFrame</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:53">reference</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="215:1">{<block_content pos:start="11:5" pos:end="213:13">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:15"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:15">mb_x</name></decl>, <decl pos:start="11:18" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:18" pos:end="11:21">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:33"><name pos:start="13:14" pos:end="13:17">data</name><index pos:start="13:18" pos:end="13:33">[<expr pos:start="13:19" pos:end="13:32"><name pos:start="13:19" pos:end="13:32">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:49"><name pos:start="15:20" pos:end="15:33">reference_data</name><index pos:start="15:34" pos:end="15:49">[<expr pos:start="15:35" pos:end="15:48"><name pos:start="15:35" pos:end="15:48">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:16">linesize</name><index pos:start="17:17" pos:end="17:32">[<expr pos:start="17:18" pos:end="17:31"><name pos:start="17:18" pos:end="17:31">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:37"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">GetBitContext</name></type> <name pos:start="19:19" pos:end="19:31">mb_bitmask_gb</name> <init pos:start="19:33" pos:end="19:37">= <expr pos:start="19:35" pos:end="19:37"><block pos:start="19:35" pos:end="19:37">{<expr pos:start="19:36" pos:end="19:36"><literal type="number" pos:start="19:36" pos:end="19:36">0</literal></expr>}</block></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="19:40" pos:end="19:75">// initialize to silence gcc warning</comment>

    <decl_stmt pos:start="21:5" pos:end="21:44"><decl pos:start="21:5" pos:end="21:43"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:23">bytes_per_pixel</name> <init pos:start="21:25" pos:end="21:43">= <expr pos:start="21:27" pos:end="21:43"><literal type="number" pos:start="21:27" pos:end="21:29">1</literal> <operator pos:start="21:29" pos:end="21:29">+</operator> <operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:38"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:38">bits</name></name> <operator pos:start="21:40" pos:end="21:40">&gt;</operator> <literal type="number" pos:start="21:42" pos:end="21:42">8</literal><operator pos:start="21:43" pos:end="21:43">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:18">mb_bitmask</name></expr>)</condition> <block pos:start="25:21" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:78">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="27:67">(<expr pos:start="27:13" pos:end="27:66"><name pos:start="27:13" pos:end="27:27">mb_bitmask_size</name> <operator pos:start="27:29" pos:end="27:30">!=</operator> <operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:43"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:43">mb_width</name></name> <operator pos:start="27:45" pos:end="27:45">*</operator> <name pos:start="27:47" pos:end="27:58"><name pos:start="27:47" pos:end="27:47">s</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:58">mb_height</name></name> <operator pos:start="27:60" pos:end="27:60">+</operator> <literal type="number" pos:start="27:62" pos:end="27:62">7</literal><operator pos:start="27:63" pos:end="27:63">)</operator><operator pos:start="27:64" pos:end="27:65">&gt;&gt;</operator><literal type="number" pos:start="27:66" pos:end="27:66">3</literal></expr>)</condition> <block pos:start="27:69" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:39">

            <expr_stmt pos:start="29:13" pos:end="29:75"><expr pos:start="29:13" pos:end="29:74"><call pos:start="29:13" pos:end="29:74"><name pos:start="29:13" pos:end="29:18">av_log</name><argument_list pos:start="29:19" pos:end="29:74">(<argument pos:start="29:20" pos:end="29:27"><expr pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:20">s</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">avctx</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:41"><expr pos:start="29:30" pos:end="29:41"><name pos:start="29:30" pos:end="29:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:44" pos:end="29:73"><expr pos:start="29:44" pos:end="29:73"><literal type="string" pos:start="29:44" pos:end="29:73">"mb_bitmask_size mismatches\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:39">return <expr pos:start="31:20" pos:end="31:38"><name pos:start="31:20" pos:end="31:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:78"><expr pos:start="35:9" pos:end="35:77"><call pos:start="35:9" pos:end="35:77"><name pos:start="35:9" pos:end="35:21">init_get_bits</name><argument_list pos:start="35:22" pos:end="35:77">(<argument pos:start="35:23" pos:end="35:36"><expr pos:start="35:23" pos:end="35:36"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:36">mb_bitmask_gb</name></expr></argument>, <argument pos:start="35:39" pos:end="35:48"><expr pos:start="35:39" pos:end="35:48"><name pos:start="35:39" pos:end="35:48">mb_bitmask</name></expr></argument>, <argument pos:start="35:51" pos:end="35:76"><expr pos:start="35:51" pos:end="35:76"><name pos:start="35:51" pos:end="35:61"><name pos:start="35:51" pos:end="35:51">s</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:61">mb_width</name></name> <operator pos:start="35:63" pos:end="35:63">*</operator> <name pos:start="35:65" pos:end="35:76"><name pos:start="35:65" pos:end="35:65">s</name><operator pos:start="35:66" pos:end="35:67">-&gt;</operator><name pos:start="35:68" pos:end="35:76">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:20"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:20">restart_count</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="57:5">for <control pos:start="45:9" pos:end="45:39">(<init pos:start="45:10" pos:end="45:15"><expr pos:start="45:10" pos:end="45:14"><name pos:start="45:10" pos:end="45:10">i</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <literal type="number" pos:start="45:14" pos:end="45:14">0</literal></expr>;</init> <condition pos:start="45:17" pos:end="45:34"><expr pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:17">i</name> <operator pos:start="45:19" pos:end="45:19">&lt;</operator> <name pos:start="45:21" pos:end="45:33">nb_components</name></expr>;</condition> <incr pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:36">i</name><operator pos:start="45:37" pos:end="45:38">++</operator></expr></incr>)</control> <block pos:start="45:41" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:34">

        <decl_stmt pos:start="47:9" pos:end="47:35"><decl pos:start="47:9" pos:end="47:34"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:13">c</name>   <init pos:start="47:17" pos:end="47:34">= <expr pos:start="47:19" pos:end="47:34"><name pos:start="47:19" pos:end="47:34"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:31">comp_index</name><index pos:start="47:32" pos:end="47:34">[<expr pos:start="47:33" pos:end="47:33"><name pos:start="47:33" pos:end="47:33">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:12">data</name><index pos:start="49:13" pos:end="49:15">[<expr pos:start="49:14" pos:end="49:14"><name pos:start="49:14" pos:end="49:14">c</name></expr>]</index></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:41"><name pos:start="49:19" pos:end="49:19">s</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:32">picture_ptr</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:38">data</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:66"><expr pos:start="51:9" pos:end="51:65"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:22">reference_data</name><index pos:start="51:23" pos:end="51:25">[<expr pos:start="51:24" pos:end="51:24"><name pos:start="51:24" pos:end="51:24">c</name></expr>]</index></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <ternary pos:start="51:29" pos:end="51:65"><condition pos:start="51:29" pos:end="51:39"><expr pos:start="51:29" pos:end="51:37"><name pos:start="51:29" pos:end="51:37">reference</name></expr> ?</condition><then pos:start="51:41" pos:end="51:58"> <expr pos:start="51:41" pos:end="51:58"><name pos:start="51:41" pos:end="51:58"><name pos:start="51:41" pos:end="51:49">reference</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:55">data</name><index pos:start="51:56" pos:end="51:58">[<expr pos:start="51:57" pos:end="51:57"><name pos:start="51:57" pos:end="51:57">c</name></expr>]</index></name></expr> </then><else pos:start="51:60" pos:end="51:65">: <expr pos:start="51:62" pos:end="51:65"><name pos:start="51:62" pos:end="51:65">NULL</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:16">linesize</name><index pos:start="53:17" pos:end="53:19">[<expr pos:start="53:18" pos:end="53:18"><name pos:start="53:18" pos:end="53:18">c</name></expr>]</index></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:36"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:33">linesize</name><index pos:start="53:34" pos:end="53:36">[<expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:25">coefs_finished</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">c</name></expr>]</index></name> <operator pos:start="55:30" pos:end="55:31">|=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="61:5" pos:end="211:5">for <control pos:start="61:9" pos:end="61:47">(<init pos:start="61:10" pos:end="61:18"><expr pos:start="61:10" pos:end="61:17"><name pos:start="61:10" pos:end="61:13">mb_y</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <literal type="number" pos:start="61:17" pos:end="61:17">0</literal></expr>;</init> <condition pos:start="61:20" pos:end="61:39"><expr pos:start="61:20" pos:end="61:38"><name pos:start="61:20" pos:end="61:23">mb_y</name> <operator pos:start="61:25" pos:end="61:25">&lt;</operator> <name pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:38">mb_height</name></name></expr>;</condition> <incr pos:start="61:41" pos:end="61:46"><expr pos:start="61:41" pos:end="61:46"><name pos:start="61:41" pos:end="61:44">mb_y</name><operator pos:start="61:45" pos:end="61:46">++</operator></expr></incr>)</control> <block pos:start="61:49" pos:end="211:5">{<block_content pos:start="63:9" pos:end="209:9">

        <for pos:start="63:9" pos:end="209:9">for <control pos:start="63:13" pos:end="63:50">(<init pos:start="63:14" pos:end="63:22"><expr pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:17">mb_x</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>;</init> <condition pos:start="63:24" pos:end="63:42"><expr pos:start="63:24" pos:end="63:41"><name pos:start="63:24" pos:end="63:27">mb_x</name> <operator pos:start="63:29" pos:end="63:29">&lt;</operator> <name pos:start="63:31" pos:end="63:41"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:41">mb_width</name></name></expr>;</condition> <incr pos:start="63:44" pos:end="63:49"><expr pos:start="63:44" pos:end="63:49"><name pos:start="63:44" pos:end="63:47">mb_x</name><operator pos:start="63:48" pos:end="63:49">++</operator></expr></incr>)</control> <block pos:start="63:52" pos:end="209:9">{<block_content pos:start="65:13" pos:end="207:42">

            <decl_stmt pos:start="65:13" pos:end="65:73"><decl pos:start="65:13" pos:end="65:72"><type pos:start="65:13" pos:end="65:21"><specifier pos:start="65:13" pos:end="65:17">const</specifier> <name pos:start="65:19" pos:end="65:21">int</name></type> <name pos:start="65:23" pos:end="65:29">copy_mb</name> <init pos:start="65:31" pos:end="65:72">= <expr pos:start="65:33" pos:end="65:72"><name pos:start="65:33" pos:end="65:42">mb_bitmask</name> <operator pos:start="65:44" pos:end="65:45">&amp;&amp;</operator> <operator pos:start="65:47" pos:end="65:47">!</operator><call pos:start="65:48" pos:end="65:72"><name pos:start="65:48" pos:end="65:56">get_bits1</name><argument_list pos:start="65:57" pos:end="65:72">(<argument pos:start="65:58" pos:end="65:71"><expr pos:start="65:58" pos:end="65:71"><operator pos:start="65:58" pos:end="65:58">&amp;</operator><name pos:start="65:59" pos:end="65:71">mb_bitmask_gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="69:13" pos:end="71:55"><if pos:start="69:13" pos:end="71:55">if <condition pos:start="69:16" pos:end="69:57">(<expr pos:start="69:17" pos:end="69:56"><name pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:35">restart_interval</name></name> <operator pos:start="69:37" pos:end="69:38">&amp;&amp;</operator> <operator pos:start="69:40" pos:end="69:40">!</operator><name pos:start="69:41" pos:end="69:56"><name pos:start="69:41" pos:end="69:41">s</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:56">restart_count</name></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="71:55"><block_content pos:start="71:17" pos:end="71:55">

                <expr_stmt pos:start="71:17" pos:end="71:55"><expr pos:start="71:17" pos:end="71:54"><name pos:start="71:17" pos:end="71:32"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:32">restart_count</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:54"><name pos:start="71:36" pos:end="71:36">s</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:54">restart_interval</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="75:13" pos:end="83:13"><if pos:start="75:13" pos:end="83:13">if <condition pos:start="75:16" pos:end="75:42">(<expr pos:start="75:17" pos:end="75:41"><call pos:start="75:17" pos:end="75:37"><name pos:start="75:17" pos:end="75:29">get_bits_left</name><argument_list pos:start="75:30" pos:end="75:37">(<argument pos:start="75:31" pos:end="75:36"><expr pos:start="75:31" pos:end="75:36"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:32">s</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:39" pos:end="75:39">&lt;</operator> <literal type="number" pos:start="75:41" pos:end="75:41">0</literal></expr>)</condition> <block pos:start="75:44" pos:end="83:13">{<block_content pos:start="77:17" pos:end="81:43">

                <expr_stmt pos:start="77:17" pos:end="79:47"><expr pos:start="77:17" pos:end="79:46"><call pos:start="77:17" pos:end="79:46"><name pos:start="77:17" pos:end="77:22">av_log</name><argument_list pos:start="77:23" pos:end="79:46">(<argument pos:start="77:24" pos:end="77:31"><expr pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">avctx</name></name></expr></argument>, <argument pos:start="77:34" pos:end="77:45"><expr pos:start="77:34" pos:end="77:45"><name pos:start="77:34" pos:end="77:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:48" pos:end="77:62"><expr pos:start="77:48" pos:end="77:62"><literal type="string" pos:start="77:48" pos:end="77:62">"overread %d\n"</literal></expr></argument>,

                       <argument pos:start="79:24" pos:end="79:45"><expr pos:start="79:24" pos:end="79:45"><operator pos:start="79:24" pos:end="79:24">-</operator><call pos:start="79:25" pos:end="79:45"><name pos:start="79:25" pos:end="79:37">get_bits_left</name><argument_list pos:start="79:38" pos:end="79:45">(<argument pos:start="79:39" pos:end="79:44"><expr pos:start="79:39" pos:end="79:44"><operator pos:start="79:39" pos:end="79:39">&amp;</operator><name pos:start="79:40" pos:end="79:44"><name pos:start="79:40" pos:end="79:40">s</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:44">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="81:17" pos:end="81:43">return <expr pos:start="81:24" pos:end="81:42"><name pos:start="81:24" pos:end="81:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <for pos:start="85:13" pos:end="203:13">for <control pos:start="85:17" pos:end="85:47">(<init pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:22"><name pos:start="85:18" pos:end="85:18">i</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <literal type="number" pos:start="85:22" pos:end="85:22">0</literal></expr>;</init> <condition pos:start="85:25" pos:end="85:42"><expr pos:start="85:25" pos:end="85:41"><name pos:start="85:25" pos:end="85:25">i</name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:41">nb_components</name></expr>;</condition> <incr pos:start="85:44" pos:end="85:46"><expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:44">i</name><operator pos:start="85:45" pos:end="85:46">++</operator></expr></incr>)</control> <block pos:start="85:49" pos:end="203:13">{<block_content pos:start="87:17" pos:end="201:17">

                <decl_stmt pos:start="87:17" pos:end="87:29"><decl pos:start="87:17" pos:end="87:28"><type pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:23">uint8_t</name> <modifier pos:start="87:25" pos:end="87:25">*</modifier></type><name pos:start="87:26" pos:end="87:28">ptr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="89:17" pos:end="89:40"><decl pos:start="89:17" pos:end="89:21"><type pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:19">int</name></type> <name pos:start="89:21" pos:end="89:21">n</name></decl>, <decl pos:start="89:24" pos:end="89:24"><type ref="prev" pos:start="89:17" pos:end="89:19"/><name pos:start="89:24" pos:end="89:24">h</name></decl>, <decl pos:start="89:27" pos:end="89:27"><type ref="prev" pos:start="89:17" pos:end="89:19"/><name pos:start="89:27" pos:end="89:27">v</name></decl>, <decl pos:start="89:30" pos:end="89:30"><type ref="prev" pos:start="89:17" pos:end="89:19"/><name pos:start="89:30" pos:end="89:30">x</name></decl>, <decl pos:start="89:33" pos:end="89:33"><type ref="prev" pos:start="89:17" pos:end="89:19"/><name pos:start="89:33" pos:end="89:33">y</name></decl>, <decl pos:start="89:36" pos:end="89:36"><type ref="prev" pos:start="89:17" pos:end="89:19"/><name pos:start="89:36" pos:end="89:36">c</name></decl>, <decl pos:start="89:39" pos:end="89:39"><type ref="prev" pos:start="89:17" pos:end="89:19"/><name pos:start="89:39" pos:end="89:39">j</name></decl>;</decl_stmt>

                <decl_stmt pos:start="91:17" pos:end="91:33"><decl pos:start="91:17" pos:end="91:32"><type pos:start="91:17" pos:end="91:19"><name pos:start="91:17" pos:end="91:19">int</name></type> <name pos:start="91:21" pos:end="91:32">block_offset</name></decl>;</decl_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:36"><expr pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:17">n</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:35"><name pos:start="93:21" pos:end="93:21">s</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:32">nb_blocks</name><index pos:start="93:33" pos:end="93:35">[<expr pos:start="93:34" pos:end="93:34"><name pos:start="93:34" pos:end="93:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:37"><expr pos:start="95:17" pos:end="95:36"><name pos:start="95:17" pos:end="95:17">c</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:36"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:33">comp_index</name><index pos:start="95:34" pos:end="95:36">[<expr pos:start="95:35" pos:end="95:35"><name pos:start="95:35" pos:end="95:35">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:35"><expr pos:start="97:17" pos:end="97:34"><name pos:start="97:17" pos:end="97:17">h</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:31">h_scount</name><index pos:start="97:32" pos:end="97:34">[<expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:35"><expr pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:17">v</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:34"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:31">v_scount</name><index pos:start="99:32" pos:end="99:34">[<expr pos:start="99:33" pos:end="99:33"><name pos:start="99:33" pos:end="99:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:22"><expr pos:start="101:17" pos:end="101:21"><name pos:start="101:17" pos:end="101:17">x</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <literal type="number" pos:start="101:21" pos:end="101:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:22"><expr pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:17">y</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <literal type="number" pos:start="103:21" pos:end="103:21">0</literal></expr>;</expr_stmt>

                <for pos:start="105:17" pos:end="201:17">for <control pos:start="105:21" pos:end="105:39">(<init pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:26"><name pos:start="105:22" pos:end="105:22">j</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <literal type="number" pos:start="105:26" pos:end="105:26">0</literal></expr>;</init> <condition pos:start="105:29" pos:end="105:34"><expr pos:start="105:29" pos:end="105:33"><name pos:start="105:29" pos:end="105:29">j</name> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <name pos:start="105:33" pos:end="105:33">n</name></expr>;</condition> <incr pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:36">j</name><operator pos:start="105:37" pos:end="105:38">++</operator></expr></incr>)</control> <block pos:start="105:41" pos:end="201:17">{<block_content pos:start="107:21" pos:end="199:21">

                    <expr_stmt pos:start="107:21" pos:end="109:96"><expr pos:start="107:21" pos:end="109:95"><name pos:start="107:21" pos:end="107:32">block_offset</name> <operator pos:start="107:34" pos:end="107:34">=</operator> <operator pos:start="107:36" pos:end="107:36">(</operator><operator pos:start="107:37" pos:end="107:37">(</operator><operator pos:start="107:38" pos:end="107:38">(</operator><name pos:start="107:39" pos:end="107:49"><name pos:start="107:39" pos:end="107:46">linesize</name><index pos:start="107:47" pos:end="107:49">[<expr pos:start="107:48" pos:end="107:48"><name pos:start="107:48" pos:end="107:48">c</name></expr>]</index></name> <operator pos:start="107:51" pos:end="107:51">*</operator> <operator pos:start="107:53" pos:end="107:53">(</operator><name pos:start="107:54" pos:end="107:54">v</name> <operator pos:start="107:56" pos:end="107:56">*</operator> <name pos:start="107:58" pos:end="107:61">mb_y</name> <operator pos:start="107:63" pos:end="107:63">+</operator> <name pos:start="107:65" pos:end="107:65">y</name><operator pos:start="107:66" pos:end="107:66">)</operator> <operator pos:start="107:68" pos:end="107:68">*</operator> <literal type="number" pos:start="107:70" pos:end="107:70">8</literal><operator pos:start="107:71" pos:end="107:71">)</operator> <operator pos:start="107:73" pos:end="107:73">+</operator>

                                     <operator pos:start="109:38" pos:end="109:38">(</operator><name pos:start="109:39" pos:end="109:39">h</name> <operator pos:start="109:41" pos:end="109:41">*</operator> <name pos:start="109:43" pos:end="109:46">mb_x</name> <operator pos:start="109:48" pos:end="109:48">+</operator> <name pos:start="109:50" pos:end="109:50">x</name><operator pos:start="109:51" pos:end="109:51">)</operator> <operator pos:start="109:53" pos:end="109:53">*</operator> <literal type="number" pos:start="109:55" pos:end="109:55">8</literal> <operator pos:start="109:57" pos:end="109:57">*</operator> <name pos:start="109:59" pos:end="109:73">bytes_per_pixel</name><operator pos:start="109:74" pos:end="109:74">)</operator> <operator pos:start="109:76" pos:end="109:77">&gt;&gt;</operator> <name pos:start="109:79" pos:end="109:94"><name pos:start="109:79" pos:end="109:79">s</name><operator pos:start="109:80" pos:end="109:81">-&gt;</operator><name pos:start="109:82" pos:end="109:86">avctx</name><operator pos:start="109:87" pos:end="109:88">-&gt;</operator><name pos:start="109:89" pos:end="109:94">lowres</name></name><operator pos:start="109:95" pos:end="109:95">)</operator></expr>;</expr_stmt>



                    <if_stmt pos:start="113:21" pos:end="115:57"><if pos:start="113:21" pos:end="115:57">if <condition pos:start="113:24" pos:end="113:57">(<expr pos:start="113:25" pos:end="113:56"><name pos:start="113:25" pos:end="113:37"><name pos:start="113:25" pos:end="113:25">s</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:37">interlaced</name></name> <operator pos:start="113:39" pos:end="113:40">&amp;&amp;</operator> <name pos:start="113:42" pos:end="113:56"><name pos:start="113:42" pos:end="113:42">s</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:56">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="115:25" pos:end="115:57"><block_content pos:start="115:25" pos:end="115:57">

                        <expr_stmt pos:start="115:25" pos:end="115:57"><expr pos:start="115:25" pos:end="115:56"><name pos:start="115:25" pos:end="115:36">block_offset</name> <operator pos:start="115:38" pos:end="115:39">+=</operator> <name pos:start="115:41" pos:end="115:51"><name pos:start="115:41" pos:end="115:48">linesize</name><index pos:start="115:49" pos:end="115:51">[<expr pos:start="115:50" pos:end="115:50"><name pos:start="115:50" pos:end="115:50">c</name></expr>]</index></name> <operator pos:start="115:53" pos:end="115:54">&gt;&gt;</operator> <literal type="number" pos:start="115:56" pos:end="115:56">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:49"><expr pos:start="117:21" pos:end="117:48"><name pos:start="117:21" pos:end="117:23">ptr</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:33"><name pos:start="117:27" pos:end="117:30">data</name><index pos:start="117:31" pos:end="117:33">[<expr pos:start="117:32" pos:end="117:32"><name pos:start="117:32" pos:end="117:32">c</name></expr>]</index></name> <operator pos:start="117:35" pos:end="117:35">+</operator> <name pos:start="117:37" pos:end="117:48">block_offset</name></expr>;</expr_stmt>

                    <if_stmt pos:start="119:21" pos:end="183:21"><if pos:start="119:21" pos:end="155:21">if <condition pos:start="119:24" pos:end="119:40">(<expr pos:start="119:25" pos:end="119:39"><operator pos:start="119:25" pos:end="119:25">!</operator><name pos:start="119:26" pos:end="119:39"><name pos:start="119:26" pos:end="119:26">s</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:39">progressive</name></name></expr>)</condition> <block pos:start="119:42" pos:end="155:21">{<block_content pos:start="121:25" pos:end="153:25">

                        <if_stmt pos:start="121:25" pos:end="153:25"><if pos:start="121:25" pos:end="125:76">if <condition pos:start="121:28" pos:end="121:36">(<expr pos:start="121:29" pos:end="121:35"><name pos:start="121:29" pos:end="121:35">copy_mb</name></expr>)</condition><block type="pseudo" pos:start="123:29" pos:end="125:76"><block_content pos:start="123:29" pos:end="125:76">

                            <expr_stmt pos:start="123:29" pos:end="125:76"><expr pos:start="123:29" pos:end="125:75"><call pos:start="123:29" pos:end="125:75"><name pos:start="123:29" pos:end="123:44">mjpeg_copy_block</name><argument_list pos:start="123:45" pos:end="125:75">(<argument pos:start="123:46" pos:end="123:46"><expr pos:start="123:46" pos:end="123:46"><name pos:start="123:46" pos:end="123:46">s</name></expr></argument>, <argument pos:start="123:49" pos:end="123:51"><expr pos:start="123:49" pos:end="123:51"><name pos:start="123:49" pos:end="123:51">ptr</name></expr></argument>, <argument pos:start="123:54" pos:end="123:85"><expr pos:start="123:54" pos:end="123:85"><name pos:start="123:54" pos:end="123:70"><name pos:start="123:54" pos:end="123:67">reference_data</name><index pos:start="123:68" pos:end="123:70">[<expr pos:start="123:69" pos:end="123:69"><name pos:start="123:69" pos:end="123:69">c</name></expr>]</index></name> <operator pos:start="123:72" pos:end="123:72">+</operator> <name pos:start="123:74" pos:end="123:85">block_offset</name></expr></argument>,

                                             <argument pos:start="125:46" pos:end="125:56"><expr pos:start="125:46" pos:end="125:56"><name pos:start="125:46" pos:end="125:56"><name pos:start="125:46" pos:end="125:53">linesize</name><index pos:start="125:54" pos:end="125:56">[<expr pos:start="125:55" pos:end="125:55"><name pos:start="125:55" pos:end="125:55">c</name></expr>]</index></name></expr></argument>, <argument pos:start="125:59" pos:end="125:74"><expr pos:start="125:59" pos:end="125:74"><name pos:start="125:59" pos:end="125:74"><name pos:start="125:59" pos:end="125:59">s</name><operator pos:start="125:60" pos:end="125:61">-&gt;</operator><name pos:start="125:62" pos:end="125:66">avctx</name><operator pos:start="125:67" pos:end="125:68">-&gt;</operator><name pos:start="125:69" pos:end="125:74">lowres</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>



                        <else pos:start="129:25" pos:end="153:25">else <block pos:start="129:30" pos:end="153:25">{<block_content pos:start="131:29" pos:end="151:66">

                            <expr_stmt pos:start="131:29" pos:end="131:58"><expr pos:start="131:29" pos:end="131:57"><call pos:start="131:29" pos:end="131:57"><name pos:start="131:29" pos:end="131:47"><name pos:start="131:29" pos:end="131:29">s</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:35">bdsp</name><operator pos:start="131:36" pos:end="131:36">.</operator><name pos:start="131:37" pos:end="131:47">clear_block</name></name><argument_list pos:start="131:48" pos:end="131:57">(<argument pos:start="131:49" pos:end="131:56"><expr pos:start="131:49" pos:end="131:56"><name pos:start="131:49" pos:end="131:56"><name pos:start="131:49" pos:end="131:49">s</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:56">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="133:29" pos:end="145:29"><if pos:start="133:29" pos:end="145:29">if <condition pos:start="133:32" pos:end="137:88">(<expr pos:start="133:33" pos:end="137:87"><call pos:start="133:33" pos:end="137:83"><name pos:start="133:33" pos:end="133:44">decode_block</name><argument_list pos:start="133:45" pos:end="137:83">(<argument pos:start="133:46" pos:end="133:46"><expr pos:start="133:46" pos:end="133:46"><name pos:start="133:46" pos:end="133:46">s</name></expr></argument>, <argument pos:start="133:49" pos:end="133:56"><expr pos:start="133:49" pos:end="133:56"><name pos:start="133:49" pos:end="133:56"><name pos:start="133:49" pos:end="133:49">s</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:56">block</name></name></expr></argument>, <argument pos:start="133:59" pos:end="133:59"><expr pos:start="133:59" pos:end="133:59"><name pos:start="133:59" pos:end="133:59">i</name></expr></argument>,

                                             <argument pos:start="135:46" pos:end="135:59"><expr pos:start="135:46" pos:end="135:59"><name pos:start="135:46" pos:end="135:59"><name pos:start="135:46" pos:end="135:46">s</name><operator pos:start="135:47" pos:end="135:48">-&gt;</operator><name pos:start="135:49" pos:end="135:56">dc_index</name><index pos:start="135:57" pos:end="135:59">[<expr pos:start="135:58" pos:end="135:58"><name pos:start="135:58" pos:end="135:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="135:62" pos:end="135:75"><expr pos:start="135:62" pos:end="135:75"><name pos:start="135:62" pos:end="135:75"><name pos:start="135:62" pos:end="135:62">s</name><operator pos:start="135:63" pos:end="135:64">-&gt;</operator><name pos:start="135:65" pos:end="135:72">ac_index</name><index pos:start="135:73" pos:end="135:75">[<expr pos:start="135:74" pos:end="135:74"><name pos:start="135:74" pos:end="135:74">i</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="137:46" pos:end="137:82"><expr pos:start="137:46" pos:end="137:82"><name pos:start="137:46" pos:end="137:82"><name pos:start="137:46" pos:end="137:46">s</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:62">quant_matrixes</name><index pos:start="137:63" pos:end="137:82">[<expr pos:start="137:64" pos:end="137:81"><name pos:start="137:64" pos:end="137:81"><name pos:start="137:64" pos:end="137:64">s</name><operator pos:start="137:65" pos:end="137:66">-&gt;</operator><name pos:start="137:67" pos:end="137:78">quant_sindex</name><index pos:start="137:79" pos:end="137:81">[<expr pos:start="137:80" pos:end="137:80"><name pos:start="137:80" pos:end="137:80">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="137:85" pos:end="137:85">&lt;</operator> <literal type="number" pos:start="137:87" pos:end="137:87">0</literal></expr>)</condition> <block pos:start="137:90" pos:end="145:29">{<block_content pos:start="139:33" pos:end="143:59">

                                <expr_stmt pos:start="139:33" pos:end="141:72"><expr pos:start="139:33" pos:end="141:71"><call pos:start="139:33" pos:end="141:71"><name pos:start="139:33" pos:end="139:38">av_log</name><argument_list pos:start="139:39" pos:end="141:71">(<argument pos:start="139:40" pos:end="139:47"><expr pos:start="139:40" pos:end="139:47"><name pos:start="139:40" pos:end="139:47"><name pos:start="139:40" pos:end="139:40">s</name><operator pos:start="139:41" pos:end="139:42">-&gt;</operator><name pos:start="139:43" pos:end="139:47">avctx</name></name></expr></argument>, <argument pos:start="139:50" pos:end="139:61"><expr pos:start="139:50" pos:end="139:61"><name pos:start="139:50" pos:end="139:61">AV_LOG_ERROR</name></expr></argument>,

                                       <argument pos:start="141:40" pos:end="141:58"><expr pos:start="141:40" pos:end="141:58"><literal type="string" pos:start="141:40" pos:end="141:58">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="141:61" pos:end="141:64"><expr pos:start="141:61" pos:end="141:64"><name pos:start="141:61" pos:end="141:64">mb_y</name></expr></argument>, <argument pos:start="141:67" pos:end="141:70"><expr pos:start="141:67" pos:end="141:70"><name pos:start="141:67" pos:end="141:70">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="143:33" pos:end="143:59">return <expr pos:start="143:40" pos:end="143:58"><name pos:start="143:40" pos:end="143:58">AVERROR_INVALIDDATA</name></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="147:29" pos:end="147:73"><expr pos:start="147:29" pos:end="147:72"><call pos:start="147:29" pos:end="147:72"><name pos:start="147:29" pos:end="147:44"><name pos:start="147:29" pos:end="147:29">s</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:35">idsp</name><operator pos:start="147:36" pos:end="147:36">.</operator><name pos:start="147:37" pos:end="147:44">idct_put</name></name><argument_list pos:start="147:45" pos:end="147:72">(<argument pos:start="147:46" pos:end="147:48"><expr pos:start="147:46" pos:end="147:48"><name pos:start="147:46" pos:end="147:48">ptr</name></expr></argument>, <argument pos:start="147:51" pos:end="147:61"><expr pos:start="147:51" pos:end="147:61"><name pos:start="147:51" pos:end="147:61"><name pos:start="147:51" pos:end="147:58">linesize</name><index pos:start="147:59" pos:end="147:61">[<expr pos:start="147:60" pos:end="147:60"><name pos:start="147:60" pos:end="147:60">c</name></expr>]</index></name></expr></argument>, <argument pos:start="147:64" pos:end="147:71"><expr pos:start="147:64" pos:end="147:71"><name pos:start="147:64" pos:end="147:71"><name pos:start="147:64" pos:end="147:64">s</name><operator pos:start="147:65" pos:end="147:66">-&gt;</operator><name pos:start="147:67" pos:end="147:71">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="149:29" pos:end="151:66"><if pos:start="149:29" pos:end="151:66">if <condition pos:start="149:32" pos:end="149:44">(<expr pos:start="149:33" pos:end="149:43"><name pos:start="149:33" pos:end="149:39"><name pos:start="149:33" pos:end="149:33">s</name><operator pos:start="149:34" pos:end="149:35">-&gt;</operator><name pos:start="149:36" pos:end="149:39">bits</name></name> <operator pos:start="149:41" pos:end="149:41">&amp;</operator> <literal type="number" pos:start="149:43" pos:end="149:43">7</literal></expr>)</condition><block type="pseudo" pos:start="151:33" pos:end="151:66"><block_content pos:start="151:33" pos:end="151:66">

                                <expr_stmt pos:start="151:33" pos:end="151:66"><expr pos:start="151:33" pos:end="151:65"><call pos:start="151:33" pos:end="151:65"><name pos:start="151:33" pos:end="151:44">shift_output</name><argument_list pos:start="151:45" pos:end="151:65">(<argument pos:start="151:46" pos:end="151:46"><expr pos:start="151:46" pos:end="151:46"><name pos:start="151:46" pos:end="151:46">s</name></expr></argument>, <argument pos:start="151:49" pos:end="151:51"><expr pos:start="151:49" pos:end="151:51"><name pos:start="151:49" pos:end="151:51">ptr</name></expr></argument>, <argument pos:start="151:54" pos:end="151:64"><expr pos:start="151:54" pos:end="151:64"><name pos:start="151:54" pos:end="151:64"><name pos:start="151:54" pos:end="151:61">linesize</name><index pos:start="151:62" pos:end="151:64">[<expr pos:start="151:63" pos:end="151:63"><name pos:start="151:63" pos:end="151:63">c</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="155:23" pos:end="183:21">else <block pos:start="155:28" pos:end="183:21">{<block_content pos:start="157:25" pos:end="181:25">

                        <decl_stmt pos:start="157:25" pos:end="159:56"><decl pos:start="157:25" pos:end="159:55"><type pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:27">int</name></type> <name pos:start="157:29" pos:end="157:37">block_idx</name>  <init pos:start="157:40" pos:end="159:55">= <expr pos:start="157:42" pos:end="159:55"><name pos:start="157:42" pos:end="157:59"><name pos:start="157:42" pos:end="157:42">s</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:56">block_stride</name><index pos:start="157:57" pos:end="157:59">[<expr pos:start="157:58" pos:end="157:58"><name pos:start="157:58" pos:end="157:58">c</name></expr>]</index></name> <operator pos:start="157:61" pos:end="157:61">*</operator> <operator pos:start="157:63" pos:end="157:63">(</operator><name pos:start="157:64" pos:end="157:64">v</name> <operator pos:start="157:66" pos:end="157:66">*</operator> <name pos:start="157:68" pos:end="157:71">mb_y</name> <operator pos:start="157:73" pos:end="157:73">+</operator> <name pos:start="157:75" pos:end="157:75">y</name><operator pos:start="157:76" pos:end="157:76">)</operator> <operator pos:start="157:78" pos:end="157:78">+</operator>

                                         <operator pos:start="159:42" pos:end="159:42">(</operator><name pos:start="159:43" pos:end="159:43">h</name> <operator pos:start="159:45" pos:end="159:45">*</operator> <name pos:start="159:47" pos:end="159:50">mb_x</name> <operator pos:start="159:52" pos:end="159:52">+</operator> <name pos:start="159:54" pos:end="159:54">x</name><operator pos:start="159:55" pos:end="159:55">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="161:25" pos:end="161:65"><decl pos:start="161:25" pos:end="161:64"><type pos:start="161:25" pos:end="161:33"><name pos:start="161:25" pos:end="161:31">int16_t</name> <modifier pos:start="161:33" pos:end="161:33">*</modifier></type><name pos:start="161:34" pos:end="161:38">block</name> <init pos:start="161:40" pos:end="161:64">= <expr pos:start="161:42" pos:end="161:64"><name pos:start="161:42" pos:end="161:64"><name pos:start="161:42" pos:end="161:42">s</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:50">blocks</name><index pos:start="161:51" pos:end="161:53">[<expr pos:start="161:52" pos:end="161:52"><name pos:start="161:52" pos:end="161:52">c</name></expr>]</index><index pos:start="161:54" pos:end="161:64">[<expr pos:start="161:55" pos:end="161:63"><name pos:start="161:55" pos:end="161:63">block_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="163:25" pos:end="181:25"><if pos:start="163:25" pos:end="167:87">if <condition pos:start="163:28" pos:end="163:31">(<expr pos:start="163:29" pos:end="163:30"><name pos:start="163:29" pos:end="163:30">Ah</name></expr>)</condition><block type="pseudo" pos:start="165:29" pos:end="167:87"><block_content pos:start="165:29" pos:end="167:87">

                            <expr_stmt pos:start="165:29" pos:end="167:87"><expr pos:start="165:29" pos:end="167:86"><name pos:start="165:29" pos:end="165:36"><name pos:start="165:29" pos:end="165:33">block</name><index pos:start="165:34" pos:end="165:36">[<expr pos:start="165:35" pos:end="165:35"><literal type="number" pos:start="165:35" pos:end="165:35">0</literal></expr>]</index></name> <operator pos:start="165:38" pos:end="165:39">+=</operator> <call pos:start="165:41" pos:end="165:57"><name pos:start="165:41" pos:end="165:49">get_bits1</name><argument_list pos:start="165:50" pos:end="165:57">(<argument pos:start="165:51" pos:end="165:56"><expr pos:start="165:51" pos:end="165:56"><operator pos:start="165:51" pos:end="165:51">&amp;</operator><name pos:start="165:52" pos:end="165:56"><name pos:start="165:52" pos:end="165:52">s</name><operator pos:start="165:53" pos:end="165:54">-&gt;</operator><name pos:start="165:55" pos:end="165:56">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="165:59" pos:end="165:59">*</operator>

                                        <name pos:start="167:41" pos:end="167:80"><name pos:start="167:41" pos:end="167:41">s</name><operator pos:start="167:42" pos:end="167:43">-&gt;</operator><name pos:start="167:44" pos:end="167:57">quant_matrixes</name><index pos:start="167:58" pos:end="167:77">[<expr pos:start="167:59" pos:end="167:76"><name pos:start="167:59" pos:end="167:76"><name pos:start="167:59" pos:end="167:59">s</name><operator pos:start="167:60" pos:end="167:61">-&gt;</operator><name pos:start="167:62" pos:end="167:73">quant_sindex</name><index pos:start="167:74" pos:end="167:76">[<expr pos:start="167:75" pos:end="167:75"><name pos:start="167:75" pos:end="167:75">i</name></expr>]</index></name></expr>]</index><index pos:start="167:78" pos:end="167:80">[<expr pos:start="167:79" pos:end="167:79"><literal type="number" pos:start="167:79" pos:end="167:79">0</literal></expr>]</index></name> <operator pos:start="167:82" pos:end="167:83">&lt;&lt;</operator> <name pos:start="167:85" pos:end="167:86">Al</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="169:25" pos:end="181:25">else if <condition pos:start="169:33" pos:end="173:63">(<expr pos:start="169:34" pos:end="173:62"><call pos:start="169:34" pos:end="173:58"><name pos:start="169:34" pos:end="169:54">decode_dc_progressive</name><argument_list pos:start="169:55" pos:end="173:58">(<argument pos:start="169:56" pos:end="169:56"><expr pos:start="169:56" pos:end="169:56"><name pos:start="169:56" pos:end="169:56">s</name></expr></argument>, <argument pos:start="169:59" pos:end="169:63"><expr pos:start="169:59" pos:end="169:63"><name pos:start="169:59" pos:end="169:63">block</name></expr></argument>, <argument pos:start="169:66" pos:end="169:66"><expr pos:start="169:66" pos:end="169:66"><name pos:start="169:66" pos:end="169:66">i</name></expr></argument>, <argument pos:start="169:69" pos:end="169:82"><expr pos:start="169:69" pos:end="169:82"><name pos:start="169:69" pos:end="169:82"><name pos:start="169:69" pos:end="169:69">s</name><operator pos:start="169:70" pos:end="169:71">-&gt;</operator><name pos:start="169:72" pos:end="169:79">dc_index</name><index pos:start="169:80" pos:end="169:82">[<expr pos:start="169:81" pos:end="169:81"><name pos:start="169:81" pos:end="169:81">i</name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="171:56" pos:end="171:92"><expr pos:start="171:56" pos:end="171:92"><name pos:start="171:56" pos:end="171:92"><name pos:start="171:56" pos:end="171:56">s</name><operator pos:start="171:57" pos:end="171:58">-&gt;</operator><name pos:start="171:59" pos:end="171:72">quant_matrixes</name><index pos:start="171:73" pos:end="171:92">[<expr pos:start="171:74" pos:end="171:91"><name pos:start="171:74" pos:end="171:91"><name pos:start="171:74" pos:end="171:74">s</name><operator pos:start="171:75" pos:end="171:76">-&gt;</operator><name pos:start="171:77" pos:end="171:88">quant_sindex</name><index pos:start="171:89" pos:end="171:91">[<expr pos:start="171:90" pos:end="171:90"><name pos:start="171:90" pos:end="171:90">i</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="173:56" pos:end="173:57"><expr pos:start="173:56" pos:end="173:57"><name pos:start="173:56" pos:end="173:57">Al</name></expr></argument>)</argument_list></call> <operator pos:start="173:60" pos:end="173:60">&lt;</operator> <literal type="number" pos:start="173:62" pos:end="173:62">0</literal></expr>)</condition> <block pos:start="173:65" pos:end="181:25">{<block_content pos:start="175:29" pos:end="179:55">

                            <expr_stmt pos:start="175:29" pos:end="177:68"><expr pos:start="175:29" pos:end="177:67"><call pos:start="175:29" pos:end="177:67"><name pos:start="175:29" pos:end="175:34">av_log</name><argument_list pos:start="175:35" pos:end="177:67">(<argument pos:start="175:36" pos:end="175:43"><expr pos:start="175:36" pos:end="175:43"><name pos:start="175:36" pos:end="175:43"><name pos:start="175:36" pos:end="175:36">s</name><operator pos:start="175:37" pos:end="175:38">-&gt;</operator><name pos:start="175:39" pos:end="175:43">avctx</name></name></expr></argument>, <argument pos:start="175:46" pos:end="175:57"><expr pos:start="175:46" pos:end="175:57"><name pos:start="175:46" pos:end="175:57">AV_LOG_ERROR</name></expr></argument>,

                                   <argument pos:start="177:36" pos:end="177:54"><expr pos:start="177:36" pos:end="177:54"><literal type="string" pos:start="177:36" pos:end="177:54">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="177:57" pos:end="177:60"><expr pos:start="177:57" pos:end="177:60"><name pos:start="177:57" pos:end="177:60">mb_y</name></expr></argument>, <argument pos:start="177:63" pos:end="177:66"><expr pos:start="177:63" pos:end="177:66"><name pos:start="177:63" pos:end="177:66">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="179:29" pos:end="179:55">return <expr pos:start="179:36" pos:end="179:54"><name pos:start="179:36" pos:end="179:54">AVERROR_INVALIDDATA</name></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:75"><expr pos:start="185:21" pos:end="185:74"><call pos:start="185:21" pos:end="185:74"><name pos:start="185:21" pos:end="185:27">av_dlog</name><argument_list pos:start="185:28" pos:end="185:74">(<argument pos:start="185:29" pos:end="185:36"><expr pos:start="185:29" pos:end="185:36"><name pos:start="185:29" pos:end="185:36"><name pos:start="185:29" pos:end="185:29">s</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:36">avctx</name></name></expr></argument>, <argument pos:start="185:39" pos:end="185:61"><expr pos:start="185:39" pos:end="185:61"><literal type="string" pos:start="185:39" pos:end="185:61">"mb: %d %d processed\n"</literal></expr></argument>, <argument pos:start="185:64" pos:end="185:67"><expr pos:start="185:64" pos:end="185:67"><name pos:start="185:64" pos:end="185:67">mb_y</name></expr></argument>, <argument pos:start="185:70" pos:end="185:73"><expr pos:start="185:70" pos:end="185:73"><name pos:start="185:70" pos:end="185:73">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="191:68"><expr pos:start="187:21" pos:end="191:67"><call pos:start="187:21" pos:end="191:67"><name pos:start="187:21" pos:end="187:27">av_dlog</name><argument_list pos:start="187:28" pos:end="191:67">(<argument pos:start="187:29" pos:end="187:36"><expr pos:start="187:29" pos:end="187:36"><name pos:start="187:29" pos:end="187:36"><name pos:start="187:29" pos:end="187:29">s</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:36">avctx</name></name></expr></argument>, <argument pos:start="187:39" pos:end="187:66"><expr pos:start="187:39" pos:end="187:66"><literal type="string" pos:start="187:39" pos:end="187:66">"%d %d %d %d %d %d %d %d \n"</literal></expr></argument>,

                            <argument pos:start="189:29" pos:end="189:32"><expr pos:start="189:29" pos:end="189:32"><name pos:start="189:29" pos:end="189:32">mb_x</name></expr></argument>, <argument pos:start="189:35" pos:end="189:38"><expr pos:start="189:35" pos:end="189:38"><name pos:start="189:35" pos:end="189:38">mb_y</name></expr></argument>, <argument pos:start="189:41" pos:end="189:41"><expr pos:start="189:41" pos:end="189:41"><name pos:start="189:41" pos:end="189:41">x</name></expr></argument>, <argument pos:start="189:44" pos:end="189:44"><expr pos:start="189:44" pos:end="189:44"><name pos:start="189:44" pos:end="189:44">y</name></expr></argument>, <argument pos:start="189:47" pos:end="189:47"><expr pos:start="189:47" pos:end="189:47"><name pos:start="189:47" pos:end="189:47">c</name></expr></argument>, <argument pos:start="189:50" pos:end="189:64"><expr pos:start="189:50" pos:end="189:64"><name pos:start="189:50" pos:end="189:64"><name pos:start="189:50" pos:end="189:50">s</name><operator pos:start="189:51" pos:end="189:52">-&gt;</operator><name pos:start="189:53" pos:end="189:64">bottom_field</name></name></expr></argument>,

                            <argument pos:start="191:29" pos:end="191:46"><expr pos:start="191:29" pos:end="191:46"><operator pos:start="191:29" pos:end="191:29">(</operator><name pos:start="191:30" pos:end="191:30">v</name> <operator pos:start="191:32" pos:end="191:32">*</operator> <name pos:start="191:34" pos:end="191:37">mb_y</name> <operator pos:start="191:39" pos:end="191:39">+</operator> <name pos:start="191:41" pos:end="191:41">y</name><operator pos:start="191:42" pos:end="191:42">)</operator> <operator pos:start="191:44" pos:end="191:44">*</operator> <literal type="number" pos:start="191:46" pos:end="191:46">8</literal></expr></argument>, <argument pos:start="191:49" pos:end="191:66"><expr pos:start="191:49" pos:end="191:66"><operator pos:start="191:49" pos:end="191:49">(</operator><name pos:start="191:50" pos:end="191:50">h</name> <operator pos:start="191:52" pos:end="191:52">*</operator> <name pos:start="191:54" pos:end="191:57">mb_x</name> <operator pos:start="191:59" pos:end="191:59">+</operator> <name pos:start="191:61" pos:end="191:61">x</name><operator pos:start="191:62" pos:end="191:62">)</operator> <operator pos:start="191:64" pos:end="191:64">*</operator> <literal type="number" pos:start="191:66" pos:end="191:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="193:21" pos:end="199:21"><if pos:start="193:21" pos:end="199:21">if <condition pos:start="193:24" pos:end="193:33">(<expr pos:start="193:25" pos:end="193:32"><operator pos:start="193:25" pos:end="193:26">++</operator><name pos:start="193:27" pos:end="193:27">x</name> <operator pos:start="193:29" pos:end="193:30">==</operator> <name pos:start="193:32" pos:end="193:32">h</name></expr>)</condition> <block pos:start="193:35" pos:end="199:21">{<block_content pos:start="195:25" pos:end="197:28">

                        <expr_stmt pos:start="195:25" pos:end="195:30"><expr pos:start="195:25" pos:end="195:29"><name pos:start="195:25" pos:end="195:25">x</name> <operator pos:start="195:27" pos:end="195:27">=</operator> <literal type="number" pos:start="195:29" pos:end="195:29">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="197:25" pos:end="197:28"><expr pos:start="197:25" pos:end="197:27"><name pos:start="197:25" pos:end="197:25">y</name><operator pos:start="197:26" pos:end="197:27">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <expr_stmt pos:start="207:13" pos:end="207:42"><expr pos:start="207:13" pos:end="207:41"><call pos:start="207:13" pos:end="207:41"><name pos:start="207:13" pos:end="207:23">handle_rstn</name><argument_list pos:start="207:24" pos:end="207:41">(<argument pos:start="207:25" pos:end="207:25"><expr pos:start="207:25" pos:end="207:25"><name pos:start="207:25" pos:end="207:25">s</name></expr></argument>, <argument pos:start="207:28" pos:end="207:40"><expr pos:start="207:28" pos:end="207:40"><name pos:start="207:28" pos:end="207:40">nb_components</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
