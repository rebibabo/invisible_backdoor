<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23345.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">s337m_probe</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">AVProbeData</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:18">state</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18"><name pos:start="7:9" pos:end="7:15">markers</name><index pos:start="7:16" pos:end="7:18">[<expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">3</literal></expr>]</index></name> <init pos:start="7:20" pos:end="7:26">= <expr pos:start="7:22" pos:end="7:26"><block pos:start="7:22" pos:end="7:26">{ <expr pos:start="7:24" pos:end="7:24"><literal type="number" pos:start="7:24" pos:end="7:24">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">sum</name></decl>, <decl pos:start="9:17" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">max</name></decl>, <decl pos:start="9:22" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:30">data_type</name></decl>, <decl pos:start="9:33" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:41">data_size</name></decl>, <decl pos:start="9:44" pos:end="9:49"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:44" pos:end="9:49">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="61:5">for <control pos:start="15:9" pos:end="15:57">(<init pos:start="15:10" pos:end="15:22"><expr pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:12">buf</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:21"><name pos:start="15:16" pos:end="15:16">p</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">buf</name></name></expr>;</init> <condition pos:start="15:24" pos:end="15:50"><expr pos:start="15:24" pos:end="15:49"><name pos:start="15:24" pos:end="15:26">buf</name> <operator pos:start="15:28" pos:end="15:28">&lt;</operator> <name pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:30">p</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:35">buf</name></name> <operator pos:start="15:37" pos:end="15:37">+</operator> <name pos:start="15:39" pos:end="15:49"><name pos:start="15:39" pos:end="15:39">p</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:49">buf_size</name></name></expr>;</condition> <incr pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><name pos:start="15:52" pos:end="15:54">buf</name><operator pos:start="15:55" pos:end="15:56">++</operator></expr></incr>)</control> <block pos:start="15:59" pos:end="61:5">{<block_content pos:start="17:9" pos:end="59:18">

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:13">state</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <operator pos:start="17:17" pos:end="17:17">(</operator><name pos:start="17:18" pos:end="17:22">state</name> <operator pos:start="17:24" pos:end="17:25">&lt;&lt;</operator> <literal type="number" pos:start="17:27" pos:end="17:27">8</literal><operator pos:start="17:28" pos:end="17:28">)</operator> <operator pos:start="17:30" pos:end="17:30">|</operator> <operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:35">buf</name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:33">(<expr pos:start="19:13" pos:end="19:32"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:25">IS_LE_MARKER</name><argument_list pos:start="19:26" pos:end="19:32">(<argument pos:start="19:27" pos:end="19:31"><expr pos:start="19:27" pos:end="19:31"><name pos:start="19:27" pos:end="19:31">state</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="25:9" pos:end="41:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:34">(<expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:26">IS_16LE_MARKER</name><argument_list pos:start="25:27" pos:end="25:33">(<argument pos:start="25:28" pos:end="25:32"><expr pos:start="25:28" pos:end="25:32"><name pos:start="25:28" pos:end="25:32">state</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:36" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:21">

            <expr_stmt pos:start="27:13" pos:end="27:41"><expr pos:start="27:13" pos:end="27:40"><name pos:start="27:13" pos:end="27:21">data_type</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="27:40"><name pos:start="27:25" pos:end="27:31">AV_RL16</name><argument_list pos:start="27:32" pos:end="27:40">(<argument pos:start="27:33" pos:end="27:39"><expr pos:start="27:33" pos:end="27:39"><name pos:start="27:33" pos:end="27:35">buf</name> <operator pos:start="27:37" pos:end="27:37">+</operator> <literal type="number" pos:start="27:39" pos:end="27:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:41"><expr pos:start="29:13" pos:end="29:40"><name pos:start="29:13" pos:end="29:21">data_size</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <call pos:start="29:25" pos:end="29:40"><name pos:start="29:25" pos:end="29:31">AV_RL16</name><argument_list pos:start="29:32" pos:end="29:40">(<argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><name pos:start="29:33" pos:end="29:35">buf</name> <operator pos:start="29:37" pos:end="29:37">+</operator> <literal type="number" pos:start="29:39" pos:end="29:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:21"><expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:15">buf</name> <operator pos:start="31:17" pos:end="31:18">+=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="41:9">else <block pos:start="33:16" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:21">

            <expr_stmt pos:start="35:13" pos:end="35:41"><expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:21">data_type</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:40"><name pos:start="35:25" pos:end="35:31">AV_RL24</name><argument_list pos:start="35:32" pos:end="35:40">(<argument pos:start="35:33" pos:end="35:39"><expr pos:start="35:33" pos:end="35:39"><name pos:start="35:33" pos:end="35:35">buf</name> <operator pos:start="35:37" pos:end="35:37">+</operator> <literal type="number" pos:start="35:39" pos:end="35:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:41"><expr pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:21">data_size</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:40"><name pos:start="37:25" pos:end="37:31">AV_RL24</name><argument_list pos:start="37:32" pos:end="37:40">(<argument pos:start="37:33" pos:end="37:39"><expr pos:start="37:33" pos:end="37:39"><name pos:start="37:33" pos:end="37:35">buf</name> <operator pos:start="37:37" pos:end="37:37">+</operator> <literal type="number" pos:start="37:39" pos:end="37:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:21"><expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:15">buf</name> <operator pos:start="39:17" pos:end="39:18">+=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">6</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:89">(<expr pos:start="45:13" pos:end="45:88"><call pos:start="45:13" pos:end="45:88"><name pos:start="45:13" pos:end="45:38">s337m_get_offset_and_codec</name><argument_list pos:start="45:39" pos:end="45:88">(<argument pos:start="45:40" pos:end="45:43"><expr pos:start="45:40" pos:end="45:43"><name pos:start="45:40" pos:end="45:43">NULL</name></expr></argument>, <argument pos:start="45:46" pos:end="45:50"><expr pos:start="45:46" pos:end="45:50"><name pos:start="45:46" pos:end="45:50">state</name></expr></argument>, <argument pos:start="45:53" pos:end="45:61"><expr pos:start="45:53" pos:end="45:61"><name pos:start="45:53" pos:end="45:61">data_type</name></expr></argument>, <argument pos:start="45:64" pos:end="45:72"><expr pos:start="45:64" pos:end="45:72"><name pos:start="45:64" pos:end="45:72">data_size</name></expr></argument>, <argument pos:start="45:75" pos:end="45:81"><expr pos:start="45:75" pos:end="45:81"><operator pos:start="45:75" pos:end="45:75">&amp;</operator><name pos:start="45:76" pos:end="45:81">offset</name></expr></argument>, <argument pos:start="45:84" pos:end="45:87"><expr pos:start="45:84" pos:end="45:87"><name pos:start="45:84" pos:end="45:87">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <continue pos:start="47:13" pos:end="47:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:70"><expr pos:start="51:9" pos:end="51:69"><name pos:start="51:9" pos:end="51:9">i</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <ternary pos:start="51:13" pos:end="51:69"><condition pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:33"><call pos:start="51:13" pos:end="51:33"><name pos:start="51:13" pos:end="51:26">IS_16LE_MARKER</name><argument_list pos:start="51:27" pos:end="51:33">(<argument pos:start="51:28" pos:end="51:32"><expr pos:start="51:28" pos:end="51:32"><name pos:start="51:28" pos:end="51:32">state</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="51:37" pos:end="51:37"> <expr pos:start="51:37" pos:end="51:37"><literal type="number" pos:start="51:37" pos:end="51:37">0</literal></expr> </then><else pos:start="51:39" pos:end="51:69">: <expr pos:start="51:41" pos:end="51:69"><ternary pos:start="51:41" pos:end="51:69"><condition pos:start="51:41" pos:end="51:63"><expr pos:start="51:41" pos:end="51:61"><call pos:start="51:41" pos:end="51:61"><name pos:start="51:41" pos:end="51:54">IS_20LE_MARKER</name><argument_list pos:start="51:55" pos:end="51:61">(<argument pos:start="51:56" pos:end="51:60"><expr pos:start="51:56" pos:end="51:60"><name pos:start="51:56" pos:end="51:60">state</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="51:65" pos:end="51:65"> <expr pos:start="51:65" pos:end="51:65"><literal type="number" pos:start="51:65" pos:end="51:65">1</literal></expr> </then><else pos:start="51:67" pos:end="51:69">: <expr pos:start="51:69" pos:end="51:69"><literal type="number" pos:start="51:69" pos:end="51:69">2</literal></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:15">markers</name><index pos:start="53:16" pos:end="53:18">[<expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">i</name></expr>]</index></name><operator pos:start="53:19" pos:end="53:20">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:23"><expr pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:11">buf</name>  <operator pos:start="57:14" pos:end="57:15">+=</operator> <name pos:start="57:17" pos:end="57:22">offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:18"><expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:13">state</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="65:5" pos:end="65:18"><expr pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:7">sum</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <name pos:start="65:11" pos:end="65:13">max</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <literal type="number" pos:start="65:17" pos:end="65:17">0</literal></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="75:5">for <control pos:start="67:9" pos:end="67:49">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:44"><expr pos:start="67:17" pos:end="67:43"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <call pos:start="67:21" pos:end="67:43"><name pos:start="67:21" pos:end="67:34">FF_ARRAY_ELEMS</name><argument_list pos:start="67:35" pos:end="67:43">(<argument pos:start="67:36" pos:end="67:42"><expr pos:start="67:36" pos:end="67:42"><name pos:start="67:36" pos:end="67:42">markers</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="67:46" pos:end="67:48"><expr pos:start="67:46" pos:end="67:48"><name pos:start="67:46" pos:end="67:46">i</name><operator pos:start="67:47" pos:end="67:48">++</operator></expr></incr>)</control> <block pos:start="67:51" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:20">

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:11">sum</name> <operator pos:start="69:13" pos:end="69:14">+=</operator> <name pos:start="69:16" pos:end="69:25"><name pos:start="69:16" pos:end="69:22">markers</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:20"><if pos:start="71:9" pos:end="73:20">if <condition pos:start="71:12" pos:end="71:38">(<expr pos:start="71:13" pos:end="71:37"><name pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:19">markers</name><index pos:start="71:20" pos:end="71:24">[<expr pos:start="71:21" pos:end="71:23"><name pos:start="71:21" pos:end="71:23">max</name></expr>]</index></name> <operator pos:start="71:26" pos:end="71:26">&lt;</operator> <name pos:start="71:28" pos:end="71:37"><name pos:start="71:28" pos:end="71:34">markers</name><index pos:start="71:35" pos:end="71:37">[<expr pos:start="71:36" pos:end="71:36"><name pos:start="71:36" pos:end="71:36">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:20"><block_content pos:start="73:13" pos:end="73:20">

            <expr_stmt pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:15">max</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:19">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="79:5" pos:end="81:43"><if pos:start="79:5" pos:end="81:43">if <condition pos:start="79:8" pos:end="79:55">(<expr pos:start="79:9" pos:end="79:54"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:15">markers</name><index pos:start="79:16" pos:end="79:20">[<expr pos:start="79:17" pos:end="79:19"><name pos:start="79:17" pos:end="79:19">max</name></expr>]</index></name> <operator pos:start="79:22" pos:end="79:22">&gt;</operator> <literal type="number" pos:start="79:24" pos:end="79:24">3</literal> <operator pos:start="79:26" pos:end="79:27">&amp;&amp;</operator> <name pos:start="79:29" pos:end="79:40"><name pos:start="79:29" pos:end="79:35">markers</name><index pos:start="79:36" pos:end="79:40">[<expr pos:start="79:37" pos:end="79:39"><name pos:start="79:37" pos:end="79:39">max</name></expr>]</index></name> <operator pos:start="79:42" pos:end="79:42">*</operator> <literal type="number" pos:start="79:44" pos:end="79:44">4</literal> <operator pos:start="79:46" pos:end="79:46">&gt;</operator> <name pos:start="79:48" pos:end="79:50">sum</name> <operator pos:start="79:52" pos:end="79:52">*</operator> <literal type="number" pos:start="79:54" pos:end="79:54">3</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:43"><block_content pos:start="81:9" pos:end="81:43">

        <return pos:start="81:9" pos:end="81:43">return <expr pos:start="81:16" pos:end="81:42"><name pos:start="81:16" pos:end="81:38">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="81:40" pos:end="81:40">+</operator> <literal type="number" pos:start="81:42" pos:end="81:42">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
