<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21485.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:45">qemu_chr_open_ringbuf</name><parameter_list pos:start="1:46" pos:end="7:59">(<parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">id</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:69"><decl pos:start="3:47" pos:end="3:69"><type pos:start="3:47" pos:end="3:69"><name pos:start="3:47" pos:end="3:60">ChardevBackend</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:69">backend</name></decl></parameter>,

                                              <parameter pos:start="5:47" pos:end="5:64"><decl pos:start="5:47" pos:end="5:64"><type pos:start="5:47" pos:end="5:64"><name pos:start="5:47" pos:end="5:59">ChardevReturn</name> <modifier pos:start="5:61" pos:end="5:61">*</modifier></type><name pos:start="5:62" pos:end="5:64">ret</name></decl></parameter>,

                                              <parameter pos:start="7:47" pos:end="7:58"><decl pos:start="7:47" pos:end="7:58"><type pos:start="7:47" pos:end="7:58"><name pos:start="7:47" pos:end="7:51">Error</name> <modifier pos:start="7:53" pos:end="7:53">*</modifier><modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="69:1">{<block_content pos:start="11:5" pos:end="67:16">

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">ChardevRingbuf</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">opts</name> <init pos:start="11:26" pos:end="11:45">= <expr pos:start="11:28" pos:end="11:45"><name pos:start="11:28" pos:end="11:45"><name pos:start="11:28" pos:end="11:34">backend</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:37">u</name><operator pos:start="11:38" pos:end="11:38">.</operator><name pos:start="11:39" pos:end="11:45">ringbuf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">CharDriverState</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:21">RingBufCharDriver</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:24">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:7">chr</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:26"><name pos:start="19:11" pos:end="19:24">qemu_chr_alloc</name><argument_list pos:start="19:25" pos:end="19:26">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:5">d</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:16">g_malloc</name><argument_list pos:start="21:17" pos:end="21:28">(<argument pos:start="21:18" pos:end="21:27"><expr pos:start="21:18" pos:end="21:27"><sizeof pos:start="21:18" pos:end="21:27">sizeof<argument_list pos:start="21:24" pos:end="21:27">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><operator pos:start="21:25" pos:end="21:25">*</operator><name pos:start="21:26" pos:end="21:26">d</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:50"><expr pos:start="25:5" pos:end="25:49"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:5">d</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">size</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <ternary pos:start="25:15" pos:end="25:49"><condition pos:start="25:15" pos:end="25:30"><expr pos:start="25:15" pos:end="25:28"><name pos:start="25:15" pos:end="25:28"><name pos:start="25:15" pos:end="25:18">opts</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:28">has_size</name></name></expr> ?</condition><then pos:start="25:32" pos:end="25:41"> <expr pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:35">opts</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:41">size</name></name></expr> </then><else pos:start="25:43" pos:end="25:49">: <expr pos:start="25:45" pos:end="25:49"><literal type="number" pos:start="25:45" pos:end="25:49">65536</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:37">/* The size must be power of 2 */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:9">d</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">size</name></name> <operator pos:start="31:17" pos:end="31:17">&amp;</operator> <operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:20">d</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:26">size</name></name> <operator pos:start="31:28" pos:end="31:28">-</operator> <literal type="number" pos:start="31:30" pos:end="31:30">1</literal><operator pos:start="31:31" pos:end="31:31">)</operator></expr>)</condition> <block pos:start="31:34" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:18">

        <expr_stmt pos:start="33:9" pos:end="33:73"><expr pos:start="33:9" pos:end="33:72"><call pos:start="33:9" pos:end="33:72"><name pos:start="33:9" pos:end="33:18">error_setg</name><argument_list pos:start="33:19" pos:end="33:72">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">errp</name></expr></argument>, <argument pos:start="33:26" pos:end="33:71"><expr pos:start="33:26" pos:end="33:71"><literal type="string" pos:start="33:26" pos:end="33:71">"size of ringbuf chardev must be power of two"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:18">goto <name pos:start="35:14" pos:end="35:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:5">d</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">prod</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:16"><expr pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:5">d</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:11">cons</name></name> <operator pos:start="43:13" pos:end="43:13">=</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:5">d</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:11">cbuf</name></name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:32"><name pos:start="45:15" pos:end="45:23">g_malloc0</name><argument_list pos:start="45:24" pos:end="45:32">(<argument pos:start="45:25" pos:end="45:31"><expr pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:25">d</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:31">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:7">chr</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:15">opaque</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:19">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:7">chr</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:18">chr_write</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:38">ringbuf_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:18"><name pos:start="53:5" pos:end="53:7">chr</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:18">chr_close</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:38">ringbuf_chr_close</name></expr>;</expr_stmt>



    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">chr</name></expr>;</return>



<label pos:start="61:1" pos:end="61:5"><name pos:start="61:1" pos:end="61:4">fail</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:14"><expr pos:start="63:5" pos:end="63:13"><call pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:10">g_free</name><argument_list pos:start="63:11" pos:end="63:13">(<argument pos:start="63:12" pos:end="63:12"><expr pos:start="63:12" pos:end="63:12"><name pos:start="63:12" pos:end="63:12">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:16"><expr pos:start="65:5" pos:end="65:15"><call pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:10">g_free</name><argument_list pos:start="65:11" pos:end="65:15">(<argument pos:start="65:12" pos:end="65:14"><expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:16">return <expr pos:start="67:12" pos:end="67:15"><name pos:start="67:12" pos:end="67:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
