<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5879.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:40">retry_transfer_wrapper</name><parameter_list pos:start="1:41" pos:end="3:107">(<parameter pos:start="1:42" pos:end="1:54"><decl pos:start="1:42" pos:end="1:54"><type pos:start="1:42" pos:end="1:54"><name pos:start="1:42" pos:end="1:51">URLContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">h</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><name pos:start="1:57" pos:end="1:64">unsigned</name> <name pos:start="1:66" pos:end="1:69">char</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>, <parameter pos:start="1:77" pos:end="1:84"><decl pos:start="1:77" pos:end="1:84"><type pos:start="1:77" pos:end="1:84"><name pos:start="1:77" pos:end="1:79">int</name></type> <name pos:start="1:81" pos:end="1:84">size</name></decl></parameter>, <parameter pos:start="1:87" pos:end="1:98"><decl pos:start="1:87" pos:end="1:98"><type pos:start="1:87" pos:end="1:98"><name pos:start="1:87" pos:end="1:89">int</name></type> <name pos:start="1:91" pos:end="1:98">size_min</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:106"><function_decl pos:start="3:42" pos:end="3:106"><type pos:start="3:42" pos:end="3:44"><name pos:start="3:42" pos:end="3:44">int</name></type> (<modifier pos:start="3:47" pos:end="3:47">*</modifier><name pos:start="3:48" pos:end="3:60">transfer_func</name>)<parameter_list pos:start="3:62" pos:end="3:106">(<parameter pos:start="3:63" pos:end="3:75"><decl pos:start="3:63" pos:end="3:75"><type pos:start="3:63" pos:end="3:75"><name pos:start="3:63" pos:end="3:72">URLContext</name> <modifier pos:start="3:74" pos:end="3:74">*</modifier></type><name pos:start="3:75" pos:end="3:75">h</name></decl></parameter>, <parameter pos:start="3:78" pos:end="3:95"><decl pos:start="3:78" pos:end="3:95"><type pos:start="3:78" pos:end="3:95"><name pos:start="3:78" pos:end="3:85">unsigned</name> <name pos:start="3:87" pos:end="3:90">char</name> <modifier pos:start="3:92" pos:end="3:92">*</modifier></type><name pos:start="3:93" pos:end="3:95">buf</name></decl></parameter>, <parameter pos:start="3:98" pos:end="3:105"><decl pos:start="3:98" pos:end="3:105"><type pos:start="3:98" pos:end="3:105"><name pos:start="3:98" pos:end="3:100">int</name></type> <name pos:start="3:102" pos:end="3:105">size</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:15">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:20">fast_retries</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">5</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">wait_since</name> <init pos:start="11:24" pos:end="11:26">= <expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:12"><expr pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:7">len</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="69:5">while <condition pos:start="17:11" pos:end="17:26">(<expr pos:start="17:12" pos:end="17:25"><name pos:start="17:12" pos:end="17:14">len</name> <operator pos:start="17:16" pos:end="17:16">&lt;</operator> <name pos:start="17:18" pos:end="17:25">size_min</name></expr>)</condition> <block pos:start="17:28" pos:end="69:5">{<block_content pos:start="19:9" pos:end="67:32">

        <expr_stmt pos:start="19:9" pos:end="19:50"><expr pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:49"><name pos:start="19:15" pos:end="19:27">transfer_func</name><argument_list pos:start="19:28" pos:end="19:49">(<argument pos:start="19:29" pos:end="19:29"><expr pos:start="19:29" pos:end="19:29"><name pos:start="19:29" pos:end="19:29">h</name></expr></argument>, <argument pos:start="19:32" pos:end="19:38"><expr pos:start="19:32" pos:end="19:38"><name pos:start="19:32" pos:end="19:34">buf</name><operator pos:start="19:35" pos:end="19:35">+</operator><name pos:start="19:36" pos:end="19:38">len</name></expr></argument>, <argument pos:start="19:41" pos:end="19:48"><expr pos:start="19:41" pos:end="19:48"><name pos:start="19:41" pos:end="19:44">size</name><operator pos:start="19:45" pos:end="19:45">-</operator><name pos:start="19:46" pos:end="19:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:21"><if pos:start="21:9" pos:end="23:21">if <condition pos:start="21:12" pos:end="21:34">(<expr pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <call pos:start="21:20" pos:end="21:33"><name pos:start="21:20" pos:end="21:26">AVERROR</name><argument_list pos:start="21:27" pos:end="21:33">(<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">EINTR</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:21"><block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="27:23"><if pos:start="25:9" pos:end="27:23">if <condition pos:start="25:12" pos:end="25:42">(<expr pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:13">h</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">flags</name></name> <operator pos:start="25:22" pos:end="25:22">&amp;</operator> <name pos:start="25:24" pos:end="25:41">AVIO_FLAG_NONBLOCK</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:23"><block_content pos:start="27:13" pos:end="27:23">

            <return pos:start="27:13" pos:end="27:23">return <expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="57:63"><if pos:start="29:9" pos:end="55:9">if <condition pos:start="29:12" pos:end="29:35">(<expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:37" pos:end="55:9">{<block_content pos:start="31:13" pos:end="53:13">

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="53:13"><if pos:start="33:13" pos:end="37:13">if <condition pos:start="33:16" pos:end="33:29">(<expr pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:28">fast_retries</name></expr>)</condition> <block pos:start="33:31" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:31">

                <expr_stmt pos:start="35:17" pos:end="35:31"><expr pos:start="35:17" pos:end="35:30"><name pos:start="35:17" pos:end="35:28">fast_retries</name><operator pos:start="35:29" pos:end="35:30">--</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="37:15" pos:end="53:13">else <block pos:start="37:20" pos:end="53:13">{<block_content pos:start="39:17" pos:end="51:32">

                <if_stmt pos:start="39:17" pos:end="49:17"><if pos:start="39:17" pos:end="49:17">if <condition pos:start="39:20" pos:end="39:34">(<expr pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:21">h</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:33">rw_timeout</name></name></expr>)</condition> <block pos:start="39:36" pos:end="49:17">{<block_content pos:start="41:21" pos:end="47:44">

                    <if_stmt pos:start="41:21" pos:end="47:44"><if pos:start="41:21" pos:end="43:50">if <condition pos:start="41:24" pos:end="41:36">(<expr pos:start="41:25" pos:end="41:35"><operator pos:start="41:25" pos:end="41:25">!</operator><name pos:start="41:26" pos:end="41:35">wait_since</name></expr>)</condition><block type="pseudo" pos:start="43:25" pos:end="43:50"><block_content pos:start="43:25" pos:end="43:50">

                        <expr_stmt pos:start="43:25" pos:end="43:50"><expr pos:start="43:25" pos:end="43:49"><name pos:start="43:25" pos:end="43:34">wait_since</name> <operator pos:start="43:36" pos:end="43:36">=</operator> <call pos:start="43:38" pos:end="43:49"><name pos:start="43:38" pos:end="43:47">av_gettime</name><argument_list pos:start="43:48" pos:end="43:49">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="45:21" pos:end="47:44">else if <condition pos:start="45:29" pos:end="45:71">(<expr pos:start="45:30" pos:end="45:70"><call pos:start="45:30" pos:end="45:41"><name pos:start="45:30" pos:end="45:39">av_gettime</name><argument_list pos:start="45:40" pos:end="45:41">()</argument_list></call> <operator pos:start="45:43" pos:end="45:43">&gt;</operator> <name pos:start="45:45" pos:end="45:54">wait_since</name> <operator pos:start="45:56" pos:end="45:56">+</operator> <name pos:start="45:58" pos:end="45:70"><name pos:start="45:58" pos:end="45:58">h</name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:70">rw_timeout</name></name></expr>)</condition><block type="pseudo" pos:start="47:25" pos:end="47:44"><block_content pos:start="47:25" pos:end="47:44">

                        <return pos:start="47:25" pos:end="47:44">return <expr pos:start="47:32" pos:end="47:43"><call pos:start="47:32" pos:end="47:43"><name pos:start="47:32" pos:end="47:38">AVERROR</name><argument_list pos:start="47:39" pos:end="47:43">(<argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:32"><expr pos:start="51:17" pos:end="51:31"><call pos:start="51:17" pos:end="51:31"><name pos:start="51:17" pos:end="51:25">av_usleep</name><argument_list pos:start="51:26" pos:end="51:31">(<argument pos:start="51:27" pos:end="51:30"><expr pos:start="51:27" pos:end="51:30"><literal type="number" pos:start="51:27" pos:end="51:30">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="57:63">else if <condition pos:start="55:19" pos:end="55:27">(<expr pos:start="55:20" pos:end="55:26"><name pos:start="55:20" pos:end="55:22">ret</name> <operator pos:start="55:24" pos:end="55:24">&lt;</operator> <literal type="number" pos:start="55:26" pos:end="55:26">1</literal></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:63"><block_content pos:start="57:13" pos:end="57:63">

            <return pos:start="57:13" pos:end="57:63">return <expr pos:start="57:20" pos:end="57:62"><ternary pos:start="57:20" pos:end="57:62"><condition pos:start="57:20" pos:end="57:52"><expr pos:start="57:20" pos:end="57:50"><operator pos:start="57:20" pos:end="57:20">(</operator><name pos:start="57:21" pos:end="57:23">ret</name> <operator pos:start="57:25" pos:end="57:25">&lt;</operator> <literal type="number" pos:start="57:27" pos:end="57:27">0</literal> <operator pos:start="57:29" pos:end="57:30">&amp;&amp;</operator> <name pos:start="57:32" pos:end="57:34">ret</name> <operator pos:start="57:36" pos:end="57:37">!=</operator> <name pos:start="57:39" pos:end="57:49">AVERROR_EOF</name><operator pos:start="57:50" pos:end="57:50">)</operator></expr> ?</condition><then pos:start="57:54" pos:end="57:56"> <expr pos:start="57:54" pos:end="57:56"><name pos:start="57:54" pos:end="57:56">ret</name></expr> </then><else pos:start="57:58" pos:end="57:62">: <expr pos:start="57:60" pos:end="57:62"><name pos:start="57:60" pos:end="57:62">len</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="61:49"><if pos:start="59:9" pos:end="61:49">if <condition pos:start="59:12" pos:end="59:16">(<expr pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">ret</name></expr>)</condition><block type="pseudo" pos:start="61:12" pos:end="61:49"><block_content pos:start="61:12" pos:end="61:49">

           <expr_stmt pos:start="61:12" pos:end="61:49"><expr pos:start="61:12" pos:end="61:48"><name pos:start="61:12" pos:end="61:23">fast_retries</name> <operator pos:start="61:25" pos:end="61:25">=</operator> <call pos:start="61:27" pos:end="61:48"><name pos:start="61:27" pos:end="61:31">FFMAX</name><argument_list pos:start="61:32" pos:end="61:48">(<argument pos:start="61:33" pos:end="61:44"><expr pos:start="61:33" pos:end="61:44"><name pos:start="61:33" pos:end="61:44">fast_retries</name></expr></argument>, <argument pos:start="61:47" pos:end="61:47"><expr pos:start="61:47" pos:end="61:47"><literal type="number" pos:start="61:47" pos:end="61:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:19"><expr pos:start="63:9" pos:end="63:18"><name pos:start="63:9" pos:end="63:11">len</name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <name pos:start="63:16" pos:end="63:18">ret</name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:32"><if pos:start="65:9" pos:end="67:32">if <condition pos:start="65:12" pos:end="65:69">(<expr pos:start="65:13" pos:end="65:68"><name pos:start="65:13" pos:end="65:15">len</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <name pos:start="65:19" pos:end="65:22">size</name> <operator pos:start="65:24" pos:end="65:25">&amp;&amp;</operator> <call pos:start="65:27" pos:end="65:68"><name pos:start="65:27" pos:end="65:44">ff_check_interrupt</name><argument_list pos:start="65:45" pos:end="65:68">(<argument pos:start="65:46" pos:end="65:67"><expr pos:start="65:46" pos:end="65:67"><operator pos:start="65:46" pos:end="65:46">&amp;</operator><name pos:start="65:47" pos:end="65:67"><name pos:start="65:47" pos:end="65:47">h</name><operator pos:start="65:48" pos:end="65:49">-&gt;</operator><name pos:start="65:50" pos:end="65:67">interrupt_callback</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:32"><block_content pos:start="67:13" pos:end="67:32">

            <return pos:start="67:13" pos:end="67:32">return <expr pos:start="67:20" pos:end="67:31"><name pos:start="67:20" pos:end="67:31">AVERROR_EXIT</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="71:5" pos:end="71:15">return <expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
