<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8773.c" pos:tabs="8"><function pos:start="1:1" pos:end="987:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">matroska_parse_tracks</name><parameter_list pos:start="1:33" pos:end="1:52">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="987:1">{<block_content pos:start="5:5" pos:end="985:13">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24">MatroskaDemuxContext</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:34">matroska</name> <init pos:start="5:36" pos:end="5:49">= <expr pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:38">s</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MatroskaTrack</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">tracks</name> <init pos:start="7:27" pos:end="7:49">= <expr pos:start="7:29" pos:end="7:49"><name pos:start="7:29" pos:end="7:49"><name pos:start="7:29" pos:end="7:36">matroska</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:44">tracks</name><operator pos:start="7:45" pos:end="7:45">.</operator><name pos:start="7:46" pos:end="7:49">elem</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>, <decl pos:start="11:15" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:17">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">k</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="981:5">for <control pos:start="17:9" pos:end="17:50">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:45"><expr pos:start="17:17" pos:end="17:44"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:44"><name pos:start="17:21" pos:end="17:28">matroska</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">tracks</name><operator pos:start="17:37" pos:end="17:37">.</operator><name pos:start="17:38" pos:end="17:44">nb_elem</name></name></expr>;</condition> <incr pos:start="17:47" pos:end="17:49"><expr pos:start="17:47" pos:end="17:49"><name pos:start="17:47" pos:end="17:47">i</name><operator pos:start="17:48" pos:end="17:49">++</operator></expr></incr>)</control> <block pos:start="17:52" pos:end="981:5">{<block_content pos:start="19:9" pos:end="979:9">

        <decl_stmt pos:start="19:9" pos:end="19:42"><decl pos:start="19:9" pos:end="19:41"><type pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:21">MatroskaTrack</name> <modifier pos:start="19:23" pos:end="19:23">*</modifier></type><name pos:start="19:24" pos:end="19:28">track</name> <init pos:start="19:30" pos:end="19:41">= <expr pos:start="19:32" pos:end="19:41"><operator pos:start="19:32" pos:end="19:32">&amp;</operator><name pos:start="19:33" pos:end="19:41"><name pos:start="19:33" pos:end="19:38">tracks</name><index pos:start="19:39" pos:end="19:41">[<expr pos:start="19:40" pos:end="19:40"><name pos:start="19:40" pos:end="19:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:51"><decl pos:start="21:9" pos:end="21:50"><type pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:12">enum</name> <name pos:start="21:14" pos:end="21:22">AVCodecID</name></name></type> <name pos:start="21:24" pos:end="21:31">codec_id</name> <init pos:start="21:33" pos:end="21:50">= <expr pos:start="21:35" pos:end="21:50"><name pos:start="21:35" pos:end="21:50">AV_CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:53"><decl pos:start="23:9" pos:end="23:52"><type pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:16">EbmlList</name> <modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:32">encodings_list</name> <init pos:start="23:34" pos:end="23:52">= <expr pos:start="23:36" pos:end="23:52"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:52"><name pos:start="23:37" pos:end="23:41">track</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:52">encodings</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:64"><decl pos:start="25:9" pos:end="25:63"><type pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:29">MatroskaTrackEncoding</name> <modifier pos:start="25:31" pos:end="25:31">*</modifier></type><name pos:start="25:32" pos:end="25:40">encodings</name> <init pos:start="25:42" pos:end="25:63">= <expr pos:start="25:44" pos:end="25:63"><name pos:start="25:44" pos:end="25:63"><name pos:start="25:44" pos:end="25:57">encodings_list</name><operator pos:start="25:58" pos:end="25:59">-&gt;</operator><name pos:start="25:60" pos:end="25:63">elem</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:34"><decl pos:start="27:9" pos:end="27:33"><type pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:15">uint8_t</name> <modifier pos:start="27:17" pos:end="27:17">*</modifier></type><name pos:start="27:18" pos:end="27:26">extradata</name> <init pos:start="27:28" pos:end="27:33">= <expr pos:start="27:30" pos:end="27:33"><name pos:start="27:30" pos:end="27:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:31"><decl pos:start="29:9" pos:end="29:30"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:26">extradata_size</name> <init pos:start="29:28" pos:end="29:30">= <expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:33"><decl pos:start="31:9" pos:end="31:32"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:28">extradata_offset</name> <init pos:start="31:30" pos:end="31:32">= <expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:28"><decl pos:start="33:9" pos:end="33:27"><type pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:16">uint32_t</name></type> <name pos:start="33:18" pos:end="33:23">fourcc</name> <init pos:start="33:25" pos:end="33:27">= <expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:22"><decl pos:start="35:9" pos:end="35:21"><type pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:19">AVIOContext</name></type> <name pos:start="35:21" pos:end="35:21">b</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:35"><decl pos:start="37:9" pos:end="37:34"><type pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:12">char</name><modifier pos:start="37:13" pos:end="37:13">*</modifier></type> <name pos:start="37:15" pos:end="37:27">key_id_base64</name> <init pos:start="37:29" pos:end="37:34">= <expr pos:start="37:31" pos:end="37:34"><name pos:start="37:31" pos:end="37:34">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:27"><decl pos:start="39:9" pos:end="39:26"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:21">bit_depth</name> <init pos:start="39:23" pos:end="39:26">= <expr pos:start="39:25" pos:end="39:26"><operator pos:start="39:25" pos:end="39:25">-</operator><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:39">/* Apply some sanity checks. */</comment>

        <if_stmt pos:start="45:9" pos:end="61:9"><if pos:start="45:9" pos:end="61:9">if <condition pos:start="45:12" pos:end="51:56">(<expr pos:start="45:13" pos:end="51:55"><name pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:17">track</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:23">type</name></name> <operator pos:start="45:25" pos:end="45:26">!=</operator> <name pos:start="45:28" pos:end="45:52">MATROSKA_TRACK_TYPE_VIDEO</name> <operator pos:start="45:54" pos:end="45:55">&amp;&amp;</operator>

            <name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:17">track</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:23">type</name></name> <operator pos:start="47:25" pos:end="47:26">!=</operator> <name pos:start="47:28" pos:end="47:52">MATROSKA_TRACK_TYPE_AUDIO</name> <operator pos:start="47:54" pos:end="47:55">&amp;&amp;</operator>

            <name pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:17">track</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:23">type</name></name> <operator pos:start="49:25" pos:end="49:26">!=</operator> <name pos:start="49:28" pos:end="49:55">MATROSKA_TRACK_TYPE_SUBTITLE</name> <operator pos:start="49:57" pos:end="49:58">&amp;&amp;</operator>

            <name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:17">track</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:23">type</name></name> <operator pos:start="51:25" pos:end="51:26">!=</operator> <name pos:start="51:28" pos:end="51:55">MATROSKA_TRACK_TYPE_METADATA</name></expr>)</condition> <block pos:start="51:58" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:21">

            <expr_stmt pos:start="53:13" pos:end="57:32"><expr pos:start="53:13" pos:end="57:31"><call pos:start="53:13" pos:end="57:31"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="57:31">(<argument pos:start="53:20" pos:end="53:32"><expr pos:start="53:20" pos:end="53:32"><name pos:start="53:20" pos:end="53:32"><name pos:start="53:20" pos:end="53:27">matroska</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:32">ctx</name></name></expr></argument>, <argument pos:start="53:35" pos:end="53:45"><expr pos:start="53:35" pos:end="53:45"><name pos:start="53:35" pos:end="53:45">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:66"><expr pos:start="55:20" pos:end="55:66"><literal type="string" pos:start="55:20" pos:end="55:56">"Unknown or unsupported track type %"</literal><name pos:start="55:57" pos:end="55:62">PRIu64</name><literal type="string" pos:start="55:63" pos:end="55:66">"\n"</literal></expr></argument>,

                   <argument pos:start="57:20" pos:end="57:30"><expr pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:24">track</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:30">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="59:13" pos:end="59:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:21"><if pos:start="63:9" pos:end="65:21">if <condition pos:start="63:12" pos:end="63:29">(<expr pos:start="63:13" pos:end="63:28"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:28"><name pos:start="63:14" pos:end="63:18">track</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:28">codec_id</name></name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <continue pos:start="65:13" pos:end="65:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="81:9"><if pos:start="69:9" pos:end="81:9">if <condition pos:start="69:12" pos:end="71:43">(<expr pos:start="69:13" pos:end="71:42"><name pos:start="69:13" pos:end="69:35"><name pos:start="69:13" pos:end="69:17">track</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:24">audio</name><operator pos:start="69:25" pos:end="69:25">.</operator><name pos:start="69:26" pos:end="69:35">samplerate</name></name> <operator pos:start="69:37" pos:end="69:37">&lt;</operator> <literal type="number" pos:start="69:39" pos:end="69:39">0</literal> <operator pos:start="69:41" pos:end="69:42">||</operator> <name pos:start="69:44" pos:end="69:66"><name pos:start="69:44" pos:end="69:48">track</name><operator pos:start="69:49" pos:end="69:50">-&gt;</operator><name pos:start="69:51" pos:end="69:55">audio</name><operator pos:start="69:56" pos:end="69:56">.</operator><name pos:start="69:57" pos:end="69:66">samplerate</name></name> <operator pos:start="69:68" pos:end="69:68">&gt;</operator> <name pos:start="69:70" pos:end="69:76">INT_MAX</name> <operator pos:start="69:78" pos:end="69:79">||</operator>

            <call pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:17">isnan</name><argument_list pos:start="71:18" pos:end="71:42">(<argument pos:start="71:19" pos:end="71:41"><expr pos:start="71:19" pos:end="71:41"><name pos:start="71:19" pos:end="71:41"><name pos:start="71:19" pos:end="71:23">track</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:30">audio</name><operator pos:start="71:31" pos:end="71:31">.</operator><name pos:start="71:32" pos:end="71:41">samplerate</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:45" pos:end="81:9">{<block_content pos:start="73:13" pos:end="79:43">

            <expr_stmt pos:start="73:13" pos:end="77:44"><expr pos:start="73:13" pos:end="77:43"><call pos:start="73:13" pos:end="77:43"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="77:43">(<argument pos:start="73:20" pos:end="73:32"><expr pos:start="73:20" pos:end="73:32"><name pos:start="73:20" pos:end="73:32"><name pos:start="73:20" pos:end="73:27">matroska</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:32">ctx</name></name></expr></argument>, <argument pos:start="73:35" pos:end="73:48"><expr pos:start="73:35" pos:end="73:48"><name pos:start="73:35" pos:end="73:48">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:74"><expr pos:start="75:20" pos:end="75:74"><literal type="string" pos:start="75:20" pos:end="75:74">"Invalid sample rate %f, defaulting to 8000 instead.\n"</literal></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:42"><expr pos:start="77:20" pos:end="77:42"><name pos:start="77:20" pos:end="77:42"><name pos:start="77:20" pos:end="77:24">track</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">audio</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:42">samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:43"><expr pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:17">track</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:24">audio</name><operator pos:start="79:25" pos:end="79:25">.</operator><name pos:start="79:26" pos:end="79:35">samplerate</name></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <literal type="number" pos:start="79:39" pos:end="79:42">8000</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="85:9" pos:end="109:9"><if pos:start="85:9" pos:end="103:9">if <condition pos:start="85:12" pos:end="85:53">(<expr pos:start="85:13" pos:end="85:52"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:17">track</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:23">type</name></name> <operator pos:start="85:25" pos:end="85:26">==</operator> <name pos:start="85:28" pos:end="85:52">MATROSKA_TRACK_TYPE_VIDEO</name></expr>)</condition> <block pos:start="85:55" pos:end="103:9">{<block_content pos:start="87:13" pos:end="101:64">

            <if_stmt pos:start="87:13" pos:end="89:79"><if pos:start="87:13" pos:end="89:79">if <condition pos:start="87:16" pos:end="87:72">(<expr pos:start="87:17" pos:end="87:71"><operator pos:start="87:17" pos:end="87:17">!</operator><name pos:start="87:18" pos:end="87:40"><name pos:start="87:18" pos:end="87:22">track</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:40">default_duration</name></name> <operator pos:start="87:42" pos:end="87:43">&amp;&amp;</operator> <name pos:start="87:45" pos:end="87:67"><name pos:start="87:45" pos:end="87:49">track</name><operator pos:start="87:50" pos:end="87:51">-&gt;</operator><name pos:start="87:52" pos:end="87:56">video</name><operator pos:start="87:57" pos:end="87:57">.</operator><name pos:start="87:58" pos:end="87:67">frame_rate</name></name> <operator pos:start="87:69" pos:end="87:69">&gt;</operator> <literal type="number" pos:start="87:71" pos:end="87:71">0</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:79"><block_content pos:start="89:17" pos:end="89:79">

                <expr_stmt pos:start="89:17" pos:end="89:79"><expr pos:start="89:17" pos:end="89:78"><name pos:start="89:17" pos:end="89:39"><name pos:start="89:17" pos:end="89:21">track</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:39">default_duration</name></name> <operator pos:start="89:41" pos:end="89:41">=</operator> <literal type="number" pos:start="89:43" pos:end="89:52">1000000000</literal> <operator pos:start="89:54" pos:end="89:54">/</operator> <name pos:start="89:56" pos:end="89:78"><name pos:start="89:56" pos:end="89:60">track</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:67">video</name><operator pos:start="89:68" pos:end="89:68">.</operator><name pos:start="89:69" pos:end="89:78">frame_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="91:13" pos:end="93:70"><if pos:start="91:13" pos:end="93:70">if <condition pos:start="91:16" pos:end="91:49">(<expr pos:start="91:17" pos:end="91:48"><name pos:start="91:17" pos:end="91:42"><name pos:start="91:17" pos:end="91:21">track</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:28">video</name><operator pos:start="91:29" pos:end="91:29">.</operator><name pos:start="91:30" pos:end="91:42">display_width</name></name> <operator pos:start="91:44" pos:end="91:45">==</operator> <operator pos:start="91:47" pos:end="91:47">-</operator><literal type="number" pos:start="91:48" pos:end="91:48">1</literal></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:70"><block_content pos:start="93:17" pos:end="93:70">

                <expr_stmt pos:start="93:17" pos:end="93:70"><expr pos:start="93:17" pos:end="93:69"><name pos:start="93:17" pos:end="93:42"><name pos:start="93:17" pos:end="93:21">track</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:28">video</name><operator pos:start="93:29" pos:end="93:29">.</operator><name pos:start="93:30" pos:end="93:42">display_width</name></name> <operator pos:start="93:44" pos:end="93:44">=</operator> <name pos:start="93:46" pos:end="93:69"><name pos:start="93:46" pos:end="93:50">track</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:57">video</name><operator pos:start="93:58" pos:end="93:58">.</operator><name pos:start="93:59" pos:end="93:69">pixel_width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="95:13" pos:end="97:72"><if pos:start="95:13" pos:end="97:72">if <condition pos:start="95:16" pos:end="95:50">(<expr pos:start="95:17" pos:end="95:49"><name pos:start="95:17" pos:end="95:43"><name pos:start="95:17" pos:end="95:21">track</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:28">video</name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:43">display_height</name></name> <operator pos:start="95:45" pos:end="95:46">==</operator> <operator pos:start="95:48" pos:end="95:48">-</operator><literal type="number" pos:start="95:49" pos:end="95:49">1</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:72"><block_content pos:start="97:17" pos:end="97:72">

                <expr_stmt pos:start="97:17" pos:end="97:72"><expr pos:start="97:17" pos:end="97:71"><name pos:start="97:17" pos:end="97:43"><name pos:start="97:17" pos:end="97:21">track</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:28">video</name><operator pos:start="97:29" pos:end="97:29">.</operator><name pos:start="97:30" pos:end="97:43">display_height</name></name> <operator pos:start="97:45" pos:end="97:45">=</operator> <name pos:start="97:47" pos:end="97:71"><name pos:start="97:47" pos:end="97:51">track</name><operator pos:start="97:52" pos:end="97:53">-&gt;</operator><name pos:start="97:54" pos:end="97:58">video</name><operator pos:start="97:59" pos:end="97:59">.</operator><name pos:start="97:60" pos:end="97:71">pixel_height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="99:13" pos:end="101:64"><if pos:start="99:13" pos:end="101:64">if <condition pos:start="99:16" pos:end="99:51">(<expr pos:start="99:17" pos:end="99:50"><name pos:start="99:17" pos:end="99:45"><name pos:start="99:17" pos:end="99:21">track</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:28">video</name><operator pos:start="99:29" pos:end="99:29">.</operator><name pos:start="99:30" pos:end="99:40">color_space</name><operator pos:start="99:41" pos:end="99:41">.</operator><name pos:start="99:42" pos:end="99:45">size</name></name> <operator pos:start="99:47" pos:end="99:48">==</operator> <literal type="number" pos:start="99:50" pos:end="99:50">4</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:64"><block_content pos:start="101:17" pos:end="101:64">

                <expr_stmt pos:start="101:17" pos:end="101:64"><expr pos:start="101:17" pos:end="101:63"><name pos:start="101:17" pos:end="101:22">fourcc</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <call pos:start="101:26" pos:end="101:63"><name pos:start="101:26" pos:end="101:32">AV_RL32</name><argument_list pos:start="101:33" pos:end="101:63">(<argument pos:start="101:34" pos:end="101:62"><expr pos:start="101:34" pos:end="101:62"><name pos:start="101:34" pos:end="101:62"><name pos:start="101:34" pos:end="101:38">track</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:45">video</name><operator pos:start="101:46" pos:end="101:46">.</operator><name pos:start="101:47" pos:end="101:57">color_space</name><operator pos:start="101:58" pos:end="101:58">.</operator><name pos:start="101:59" pos:end="101:62">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="103:11" pos:end="109:9">else if <condition pos:start="103:19" pos:end="103:60">(<expr pos:start="103:20" pos:end="103:59"><name pos:start="103:20" pos:end="103:30"><name pos:start="103:20" pos:end="103:24">track</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:30">type</name></name> <operator pos:start="103:32" pos:end="103:33">==</operator> <name pos:start="103:35" pos:end="103:59">MATROSKA_TRACK_TYPE_AUDIO</name></expr>)</condition> <block pos:start="103:62" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:70">

            <if_stmt pos:start="105:13" pos:end="107:70"><if pos:start="105:13" pos:end="107:70">if <condition pos:start="105:16" pos:end="105:45">(<expr pos:start="105:17" pos:end="105:44"><operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:44"><name pos:start="105:18" pos:end="105:22">track</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:29">audio</name><operator pos:start="105:30" pos:end="105:30">.</operator><name pos:start="105:31" pos:end="105:44">out_samplerate</name></name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:70"><block_content pos:start="107:17" pos:end="107:70">

                <expr_stmt pos:start="107:17" pos:end="107:70"><expr pos:start="107:17" pos:end="107:69"><name pos:start="107:17" pos:end="107:43"><name pos:start="107:17" pos:end="107:21">track</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:28">audio</name><operator pos:start="107:29" pos:end="107:29">.</operator><name pos:start="107:30" pos:end="107:43">out_samplerate</name></name> <operator pos:start="107:45" pos:end="107:45">=</operator> <name pos:start="107:47" pos:end="107:69"><name pos:start="107:47" pos:end="107:51">track</name><operator pos:start="107:52" pos:end="107:53">-&gt;</operator><name pos:start="107:54" pos:end="107:58">audio</name><operator pos:start="107:59" pos:end="107:59">.</operator><name pos:start="107:60" pos:end="107:69">samplerate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="211:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:40">(<expr pos:start="111:13" pos:end="111:39"><name pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:26">encodings_list</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:35">nb_elem</name></name> <operator pos:start="111:37" pos:end="111:37">&gt;</operator> <literal type="number" pos:start="111:39" pos:end="111:39">1</literal></expr>)</condition> <block pos:start="111:42" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:64">

            <expr_stmt pos:start="113:13" pos:end="115:64"><expr pos:start="113:13" pos:end="115:63"><call pos:start="113:13" pos:end="115:63"><name pos:start="113:13" pos:end="113:18">av_log</name><argument_list pos:start="113:19" pos:end="115:63">(<argument pos:start="113:20" pos:end="113:32"><expr pos:start="113:20" pos:end="113:32"><name pos:start="113:20" pos:end="113:32"><name pos:start="113:20" pos:end="113:27">matroska</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:32">ctx</name></name></expr></argument>, <argument pos:start="113:35" pos:end="113:46"><expr pos:start="113:35" pos:end="113:46"><name pos:start="113:35" pos:end="113:46">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="115:20" pos:end="115:62"><expr pos:start="115:20" pos:end="115:62"><literal type="string" pos:start="115:20" pos:end="115:62">"Multiple combined encodings not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="211:9">else if <condition pos:start="117:19" pos:end="117:48">(<expr pos:start="117:20" pos:end="117:47"><name pos:start="117:20" pos:end="117:42"><name pos:start="117:20" pos:end="117:33">encodings_list</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:42">nb_elem</name></name> <operator pos:start="117:44" pos:end="117:45">==</operator> <literal type="number" pos:start="117:47" pos:end="117:47">1</literal></expr>)</condition> <block pos:start="117:50" pos:end="211:9">{<block_content pos:start="119:13" pos:end="209:13">

            <if_stmt pos:start="119:13" pos:end="209:13"><if pos:start="119:13" pos:end="153:13">if <condition pos:start="119:16" pos:end="119:34">(<expr pos:start="119:17" pos:end="119:33"><name pos:start="119:17" pos:end="119:28"><name pos:start="119:17" pos:end="119:25">encodings</name><index pos:start="119:26" pos:end="119:28">[<expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">0</literal></expr>]</index></name><operator pos:start="119:29" pos:end="119:29">.</operator><name pos:start="119:30" pos:end="119:33">type</name></expr>)</condition> <block pos:start="119:36" pos:end="153:13">{<block_content pos:start="121:17" pos:end="151:17">

                <if_stmt pos:start="121:17" pos:end="151:17"><if pos:start="121:17" pos:end="143:17">if <condition pos:start="121:20" pos:end="121:60">(<expr pos:start="121:21" pos:end="121:59"><name pos:start="121:21" pos:end="121:32"><name pos:start="121:21" pos:end="121:29">encodings</name><index pos:start="121:30" pos:end="121:32">[<expr pos:start="121:31" pos:end="121:31"><literal type="number" pos:start="121:31" pos:end="121:31">0</literal></expr>]</index></name><operator pos:start="121:33" pos:end="121:33">.</operator><name pos:start="121:34" pos:end="121:55"><name pos:start="121:34" pos:end="121:43">encryption</name><operator pos:start="121:44" pos:end="121:44">.</operator><name pos:start="121:45" pos:end="121:50">key_id</name><operator pos:start="121:51" pos:end="121:51">.</operator><name pos:start="121:52" pos:end="121:55">size</name></name> <operator pos:start="121:57" pos:end="121:57">&gt;</operator> <literal type="number" pos:start="121:59" pos:end="121:59">0</literal></expr>)</condition> <block pos:start="121:62" pos:end="143:17">{<block_content pos:start="127:21" pos:end="141:74">

                    <comment type="block" pos:start="123:21" pos:end="125:39">/* Save the encryption key id to be stored later as a

                       metadata tag. */</comment>

                    <decl_stmt pos:start="127:21" pos:end="127:93"><decl pos:start="127:21" pos:end="127:92"><type pos:start="127:21" pos:end="127:29"><specifier pos:start="127:21" pos:end="127:25">const</specifier> <name pos:start="127:27" pos:end="127:29">int</name></type> <name pos:start="127:31" pos:end="127:38">b64_size</name> <init pos:start="127:40" pos:end="127:92">= <expr pos:start="127:42" pos:end="127:92"><call pos:start="127:42" pos:end="127:92"><name pos:start="127:42" pos:end="127:55">AV_BASE64_SIZE</name><argument_list pos:start="127:56" pos:end="127:92">(<argument pos:start="127:57" pos:end="127:91"><expr pos:start="127:57" pos:end="127:91"><name pos:start="127:57" pos:end="127:68"><name pos:start="127:57" pos:end="127:65">encodings</name><index pos:start="127:66" pos:end="127:68">[<expr pos:start="127:67" pos:end="127:67"><literal type="number" pos:start="127:67" pos:end="127:67">0</literal></expr>]</index></name><operator pos:start="127:69" pos:end="127:69">.</operator><name pos:start="127:70" pos:end="127:91"><name pos:start="127:70" pos:end="127:79">encryption</name><operator pos:start="127:80" pos:end="127:80">.</operator><name pos:start="127:81" pos:end="127:86">key_id</name><operator pos:start="127:87" pos:end="127:87">.</operator><name pos:start="127:88" pos:end="127:91">size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:56"><expr pos:start="129:21" pos:end="129:55"><name pos:start="129:21" pos:end="129:33">key_id_base64</name> <operator pos:start="129:35" pos:end="129:35">=</operator> <call pos:start="129:37" pos:end="129:55"><name pos:start="129:37" pos:end="129:45">av_malloc</name><argument_list pos:start="129:46" pos:end="129:55">(<argument pos:start="129:47" pos:end="129:54"><expr pos:start="129:47" pos:end="129:54"><name pos:start="129:47" pos:end="129:54">b64_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="131:21" pos:end="133:47"><if pos:start="131:21" pos:end="133:47">if <condition pos:start="131:24" pos:end="131:46">(<expr pos:start="131:25" pos:end="131:45"><name pos:start="131:25" pos:end="131:37">key_id_base64</name> <operator pos:start="131:39" pos:end="131:40">==</operator> <name pos:start="131:42" pos:end="131:45">NULL</name></expr>)</condition><block type="pseudo" pos:start="133:25" pos:end="133:47"><block_content pos:start="133:25" pos:end="133:47">

                        <return pos:start="133:25" pos:end="133:47">return <expr pos:start="133:32" pos:end="133:46"><call pos:start="133:32" pos:end="133:46"><name pos:start="133:32" pos:end="133:38">AVERROR</name><argument_list pos:start="133:39" pos:end="133:46">(<argument pos:start="133:40" pos:end="133:45"><expr pos:start="133:40" pos:end="133:45"><name pos:start="133:40" pos:end="133:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="137:21" pos:end="141:74"><expr pos:start="137:21" pos:end="141:73"><call pos:start="137:21" pos:end="141:73"><name pos:start="137:21" pos:end="137:36">av_base64_encode</name><argument_list pos:start="137:37" pos:end="141:73">(<argument pos:start="137:38" pos:end="137:50"><expr pos:start="137:38" pos:end="137:50"><name pos:start="137:38" pos:end="137:50">key_id_base64</name></expr></argument>, <argument pos:start="137:53" pos:end="137:60"><expr pos:start="137:53" pos:end="137:60"><name pos:start="137:53" pos:end="137:60">b64_size</name></expr></argument>,

                                     <argument pos:start="139:38" pos:end="139:72"><expr pos:start="139:38" pos:end="139:72"><name pos:start="139:38" pos:end="139:49"><name pos:start="139:38" pos:end="139:46">encodings</name><index pos:start="139:47" pos:end="139:49">[<expr pos:start="139:48" pos:end="139:48"><literal type="number" pos:start="139:48" pos:end="139:48">0</literal></expr>]</index></name><operator pos:start="139:50" pos:end="139:50">.</operator><name pos:start="139:51" pos:end="139:72"><name pos:start="139:51" pos:end="139:60">encryption</name><operator pos:start="139:61" pos:end="139:61">.</operator><name pos:start="139:62" pos:end="139:67">key_id</name><operator pos:start="139:68" pos:end="139:68">.</operator><name pos:start="139:69" pos:end="139:72">data</name></name></expr></argument>,

                                     <argument pos:start="141:38" pos:end="141:72"><expr pos:start="141:38" pos:end="141:72"><name pos:start="141:38" pos:end="141:49"><name pos:start="141:38" pos:end="141:46">encodings</name><index pos:start="141:47" pos:end="141:49">[<expr pos:start="141:48" pos:end="141:48"><literal type="number" pos:start="141:48" pos:end="141:48">0</literal></expr>]</index></name><operator pos:start="141:50" pos:end="141:50">.</operator><name pos:start="141:51" pos:end="141:72"><name pos:start="141:51" pos:end="141:60">encryption</name><operator pos:start="141:61" pos:end="141:61">.</operator><name pos:start="141:62" pos:end="141:67">key_id</name><operator pos:start="141:68" pos:end="141:68">.</operator><name pos:start="141:69" pos:end="141:72">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="143:19" pos:end="151:17">else <block pos:start="143:24" pos:end="151:17">{<block_content pos:start="145:21" pos:end="149:56">

                    <expr_stmt pos:start="145:21" pos:end="145:43"><expr pos:start="145:21" pos:end="145:42"><name pos:start="145:21" pos:end="145:32"><name pos:start="145:21" pos:end="145:29">encodings</name><index pos:start="145:30" pos:end="145:32">[<expr pos:start="145:31" pos:end="145:31"><literal type="number" pos:start="145:31" pos:end="145:31">0</literal></expr>]</index></name><operator pos:start="145:33" pos:end="145:33">.</operator><name pos:start="145:34" pos:end="145:38">scope</name> <operator pos:start="145:40" pos:end="145:40">=</operator> <literal type="number" pos:start="145:42" pos:end="145:42">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="147:21" pos:end="149:56"><expr pos:start="147:21" pos:end="149:55"><call pos:start="147:21" pos:end="149:55"><name pos:start="147:21" pos:end="147:26">av_log</name><argument_list pos:start="147:27" pos:end="149:55">(<argument pos:start="147:28" pos:end="147:40"><expr pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:40"><name pos:start="147:28" pos:end="147:35">matroska</name><operator pos:start="147:36" pos:end="147:37">-&gt;</operator><name pos:start="147:38" pos:end="147:40">ctx</name></name></expr></argument>, <argument pos:start="147:43" pos:end="147:54"><expr pos:start="147:43" pos:end="147:54"><name pos:start="147:43" pos:end="147:54">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="149:28" pos:end="149:54"><expr pos:start="149:28" pos:end="149:54"><literal type="string" pos:start="149:28" pos:end="149:54">"Unsupported encoding type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="153:15" pos:end="181:13">else if <condition pos:start="153:23" pos:end="173:91">(

<cpp:if pos:start="155:1" pos:end="155:15">#<cpp:directive pos:start="155:2" pos:end="155:3">if</cpp:directive> <expr pos:start="155:5" pos:end="155:15"><name pos:start="155:5" pos:end="155:15">CONFIG_ZLIB</name></expr></cpp:if>

                 <expr pos:start="157:18" pos:end="173:90"><name pos:start="157:18" pos:end="157:29"><name pos:start="157:18" pos:end="157:26">encodings</name><index pos:start="157:27" pos:end="157:29">[<expr pos:start="157:28" pos:end="157:28"><literal type="number" pos:start="157:28" pos:end="157:28">0</literal></expr>]</index></name><operator pos:start="157:30" pos:end="157:30">.</operator><name pos:start="157:31" pos:end="157:46"><name pos:start="157:31" pos:end="157:41">compression</name><operator pos:start="157:42" pos:end="157:42">.</operator><name pos:start="157:43" pos:end="157:46">algo</name></name> <operator pos:start="157:48" pos:end="157:49">!=</operator> <name pos:start="157:51" pos:end="157:83">MATROSKA_TRACK_ENCODING_COMP_ZLIB</name>  <operator pos:start="157:86" pos:end="162:0">&amp;&amp;</operator>

<cpp:endif pos:start="159:1" pos:end="159:6">#<cpp:directive pos:start="159:2" pos:end="159:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="161:1" pos:end="161:16">#<cpp:directive pos:start="161:2" pos:end="161:3">if</cpp:directive> <expr pos:start="161:5" pos:end="161:16"><name pos:start="161:5" pos:end="161:16">CONFIG_BZLIB</name></expr></cpp:if>

                 <name pos:start="163:18" pos:end="163:29"><name pos:start="163:18" pos:end="163:26">encodings</name><index pos:start="163:27" pos:end="163:29">[<expr pos:start="163:28" pos:end="163:28"><literal type="number" pos:start="163:28" pos:end="163:28">0</literal></expr>]</index></name><operator pos:start="163:30" pos:end="163:30">.</operator><name pos:start="163:31" pos:end="163:46"><name pos:start="163:31" pos:end="163:41">compression</name><operator pos:start="163:42" pos:end="163:42">.</operator><name pos:start="163:43" pos:end="163:46">algo</name></name> <operator pos:start="163:48" pos:end="163:49">!=</operator> <name pos:start="163:51" pos:end="163:84">MATROSKA_TRACK_ENCODING_COMP_BZLIB</name> <operator pos:start="163:86" pos:end="168:0">&amp;&amp;</operator>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="167:1" pos:end="167:14">#<cpp:directive pos:start="167:2" pos:end="167:3">if</cpp:directive> <expr pos:start="167:5" pos:end="167:14"><name pos:start="167:5" pos:end="167:14">CONFIG_LZO</name></expr></cpp:if>

                 <name pos:start="169:18" pos:end="169:29"><name pos:start="169:18" pos:end="169:26">encodings</name><index pos:start="169:27" pos:end="169:29">[<expr pos:start="169:28" pos:end="169:28"><literal type="number" pos:start="169:28" pos:end="169:28">0</literal></expr>]</index></name><operator pos:start="169:30" pos:end="169:30">.</operator><name pos:start="169:31" pos:end="169:46"><name pos:start="169:31" pos:end="169:41">compression</name><operator pos:start="169:42" pos:end="169:42">.</operator><name pos:start="169:43" pos:end="169:46">algo</name></name> <operator pos:start="169:48" pos:end="169:49">!=</operator> <name pos:start="169:51" pos:end="169:82">MATROSKA_TRACK_ENCODING_COMP_LZO</name>   <operator pos:start="169:86" pos:end="172:0">&amp;&amp;</operator>

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>

                 <name pos:start="173:18" pos:end="173:29"><name pos:start="173:18" pos:end="173:26">encodings</name><index pos:start="173:27" pos:end="173:29">[<expr pos:start="173:28" pos:end="173:28"><literal type="number" pos:start="173:28" pos:end="173:28">0</literal></expr>]</index></name><operator pos:start="173:30" pos:end="173:30">.</operator><name pos:start="173:31" pos:end="173:46"><name pos:start="173:31" pos:end="173:41">compression</name><operator pos:start="173:42" pos:end="173:42">.</operator><name pos:start="173:43" pos:end="173:46">algo</name></name> <operator pos:start="173:48" pos:end="173:49">!=</operator> <name pos:start="173:51" pos:end="173:90">MATROSKA_TRACK_ENCODING_COMP_HEADERSTRIP</name></expr>)</condition> <block pos:start="173:93" pos:end="181:13">{<block_content pos:start="175:17" pos:end="179:52">

                <expr_stmt pos:start="175:17" pos:end="175:39"><expr pos:start="175:17" pos:end="175:38"><name pos:start="175:17" pos:end="175:28"><name pos:start="175:17" pos:end="175:25">encodings</name><index pos:start="175:26" pos:end="175:28">[<expr pos:start="175:27" pos:end="175:27"><literal type="number" pos:start="175:27" pos:end="175:27">0</literal></expr>]</index></name><operator pos:start="175:29" pos:end="175:29">.</operator><name pos:start="175:30" pos:end="175:34">scope</name> <operator pos:start="175:36" pos:end="175:36">=</operator> <literal type="number" pos:start="175:38" pos:end="175:38">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="179:52"><expr pos:start="177:17" pos:end="179:51"><call pos:start="177:17" pos:end="179:51"><name pos:start="177:17" pos:end="177:22">av_log</name><argument_list pos:start="177:23" pos:end="179:51">(<argument pos:start="177:24" pos:end="177:36"><expr pos:start="177:24" pos:end="177:36"><name pos:start="177:24" pos:end="177:36"><name pos:start="177:24" pos:end="177:31">matroska</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:36">ctx</name></name></expr></argument>, <argument pos:start="177:39" pos:end="177:50"><expr pos:start="177:39" pos:end="177:50"><name pos:start="177:39" pos:end="177:50">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="179:24" pos:end="179:50"><expr pos:start="179:24" pos:end="179:50"><literal type="string" pos:start="179:24" pos:end="179:50">"Unsupported encoding type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="181:15" pos:end="209:13">else if <condition pos:start="181:23" pos:end="181:72">(<expr pos:start="181:24" pos:end="181:71"><name pos:start="181:24" pos:end="181:45"><name pos:start="181:24" pos:end="181:28">track</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:40">codec_priv</name><operator pos:start="181:41" pos:end="181:41">.</operator><name pos:start="181:42" pos:end="181:45">size</name></name> <operator pos:start="181:47" pos:end="181:48">&amp;&amp;</operator> <name pos:start="181:50" pos:end="181:61"><name pos:start="181:50" pos:end="181:58">encodings</name><index pos:start="181:59" pos:end="181:61">[<expr pos:start="181:60" pos:end="181:60"><literal type="number" pos:start="181:60" pos:end="181:60">0</literal></expr>]</index></name><operator pos:start="181:62" pos:end="181:62">.</operator><name pos:start="181:63" pos:end="181:67">scope</name> <operator pos:start="181:69" pos:end="181:69">&amp;</operator> <literal type="number" pos:start="181:71" pos:end="181:71">2</literal></expr>)</condition> <block pos:start="181:74" pos:end="209:13">{<block_content pos:start="183:17" pos:end="207:40">

                <decl_stmt pos:start="183:17" pos:end="183:61"><decl pos:start="183:17" pos:end="183:60"><type pos:start="183:17" pos:end="183:25"><name pos:start="183:17" pos:end="183:23">uint8_t</name> <modifier pos:start="183:25" pos:end="183:25">*</modifier></type><name pos:start="183:26" pos:end="183:35">codec_priv</name> <init pos:start="183:37" pos:end="183:60">= <expr pos:start="183:39" pos:end="183:60"><name pos:start="183:39" pos:end="183:60"><name pos:start="183:39" pos:end="183:43">track</name><operator pos:start="183:44" pos:end="183:45">-&gt;</operator><name pos:start="183:46" pos:end="183:55">codec_priv</name><operator pos:start="183:56" pos:end="183:56">.</operator><name pos:start="183:57" pos:end="183:60">data</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="185:17" pos:end="189:56"><decl pos:start="185:17" pos:end="189:55"><type pos:start="185:17" pos:end="185:19"><name pos:start="185:17" pos:end="185:19">int</name></type> <name pos:start="185:21" pos:end="185:23">ret</name> <init pos:start="185:25" pos:end="189:55">= <expr pos:start="185:27" pos:end="189:55"><call pos:start="185:27" pos:end="189:55"><name pos:start="185:27" pos:end="185:48">matroska_decode_buffer</name><argument_list pos:start="185:49" pos:end="189:55">(<argument pos:start="185:50" pos:end="185:72"><expr pos:start="185:50" pos:end="185:72"><operator pos:start="185:50" pos:end="185:50">&amp;</operator><name pos:start="185:51" pos:end="185:72"><name pos:start="185:51" pos:end="185:55">track</name><operator pos:start="185:56" pos:end="185:57">-&gt;</operator><name pos:start="185:58" pos:end="185:67">codec_priv</name><operator pos:start="185:68" pos:end="185:68">.</operator><name pos:start="185:69" pos:end="185:72">data</name></name></expr></argument>,

                                                 <argument pos:start="187:50" pos:end="187:72"><expr pos:start="187:50" pos:end="187:72"><operator pos:start="187:50" pos:end="187:50">&amp;</operator><name pos:start="187:51" pos:end="187:72"><name pos:start="187:51" pos:end="187:55">track</name><operator pos:start="187:56" pos:end="187:57">-&gt;</operator><name pos:start="187:58" pos:end="187:67">codec_priv</name><operator pos:start="187:68" pos:end="187:68">.</operator><name pos:start="187:69" pos:end="187:72">size</name></name></expr></argument>,

                                                 <argument pos:start="189:50" pos:end="189:54"><expr pos:start="189:50" pos:end="189:54"><name pos:start="189:50" pos:end="189:54">track</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="191:17" pos:end="201:17"><if pos:start="191:17" pos:end="201:17">if <condition pos:start="191:20" pos:end="191:28">(<expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:23">ret</name> <operator pos:start="191:25" pos:end="191:25">&lt;</operator> <literal type="number" pos:start="191:27" pos:end="191:27">0</literal></expr>)</condition> <block pos:start="191:30" pos:end="201:17">{<block_content pos:start="193:21" pos:end="199:68">

                    <expr_stmt pos:start="193:21" pos:end="193:50"><expr pos:start="193:21" pos:end="193:49"><name pos:start="193:21" pos:end="193:42"><name pos:start="193:21" pos:end="193:25">track</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:37">codec_priv</name><operator pos:start="193:38" pos:end="193:38">.</operator><name pos:start="193:39" pos:end="193:42">data</name></name> <operator pos:start="193:44" pos:end="193:44">=</operator> <name pos:start="193:46" pos:end="193:49">NULL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:47"><expr pos:start="195:21" pos:end="195:46"><name pos:start="195:21" pos:end="195:42"><name pos:start="195:21" pos:end="195:25">track</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:37">codec_priv</name><operator pos:start="195:38" pos:end="195:38">.</operator><name pos:start="195:39" pos:end="195:42">size</name></name> <operator pos:start="195:44" pos:end="195:44">=</operator> <literal type="number" pos:start="195:46" pos:end="195:46">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="199:68"><expr pos:start="197:21" pos:end="199:67"><call pos:start="197:21" pos:end="199:67"><name pos:start="197:21" pos:end="197:26">av_log</name><argument_list pos:start="197:27" pos:end="199:67">(<argument pos:start="197:28" pos:end="197:40"><expr pos:start="197:28" pos:end="197:40"><name pos:start="197:28" pos:end="197:40"><name pos:start="197:28" pos:end="197:35">matroska</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:40">ctx</name></name></expr></argument>, <argument pos:start="197:43" pos:end="197:54"><expr pos:start="197:43" pos:end="197:54"><name pos:start="197:43" pos:end="197:54">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="199:28" pos:end="199:66"><expr pos:start="199:28" pos:end="199:66"><literal type="string" pos:start="199:28" pos:end="199:66">"Failed to decode codec private data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="205:17" pos:end="207:40"><if pos:start="205:17" pos:end="207:40">if <condition pos:start="205:20" pos:end="205:57">(<expr pos:start="205:21" pos:end="205:56"><name pos:start="205:21" pos:end="205:30">codec_priv</name> <operator pos:start="205:32" pos:end="205:33">!=</operator> <name pos:start="205:35" pos:end="205:56"><name pos:start="205:35" pos:end="205:39">track</name><operator pos:start="205:40" pos:end="205:41">-&gt;</operator><name pos:start="205:42" pos:end="205:51">codec_priv</name><operator pos:start="205:52" pos:end="205:52">.</operator><name pos:start="205:53" pos:end="205:56">data</name></name></expr>)</condition><block type="pseudo" pos:start="207:21" pos:end="207:40"><block_content pos:start="207:21" pos:end="207:40">

                    <expr_stmt pos:start="207:21" pos:end="207:40"><expr pos:start="207:21" pos:end="207:39"><call pos:start="207:21" pos:end="207:39"><name pos:start="207:21" pos:end="207:27">av_free</name><argument_list pos:start="207:28" pos:end="207:39">(<argument pos:start="207:29" pos:end="207:38"><expr pos:start="207:29" pos:end="207:38"><name pos:start="207:29" pos:end="207:38">codec_priv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="215:9" pos:end="227:9">for <control pos:start="215:13" pos:end="215:69">(<init pos:start="215:14" pos:end="215:19"><expr pos:start="215:14" pos:end="215:18"><name pos:start="215:14" pos:end="215:14">j</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <literal type="number" pos:start="215:18" pos:end="215:18">0</literal></expr>;</init> <condition pos:start="215:21" pos:end="215:64"><expr pos:start="215:21" pos:end="215:63"><name pos:start="215:21" pos:end="215:40"><name pos:start="215:21" pos:end="215:37">ff_mkv_codec_tags</name><index pos:start="215:38" pos:end="215:40">[<expr pos:start="215:39" pos:end="215:39"><name pos:start="215:39" pos:end="215:39">j</name></expr>]</index></name><operator pos:start="215:41" pos:end="215:41">.</operator><name pos:start="215:42" pos:end="215:43">id</name> <operator pos:start="215:45" pos:end="215:46">!=</operator> <name pos:start="215:48" pos:end="215:63">AV_CODEC_ID_NONE</name></expr>;</condition> <incr pos:start="215:66" pos:end="215:68"><expr pos:start="215:66" pos:end="215:68"><name pos:start="215:66" pos:end="215:66">j</name><operator pos:start="215:67" pos:end="215:68">++</operator></expr></incr>)</control> <block pos:start="215:71" pos:end="227:9">{<block_content pos:start="217:13" pos:end="225:13">

            <if_stmt pos:start="217:13" pos:end="225:13"><if pos:start="217:13" pos:end="225:13">if <condition pos:start="217:16" pos:end="219:59">(<expr pos:start="217:17" pos:end="219:58"><operator pos:start="217:17" pos:end="217:17">!</operator><call pos:start="217:18" pos:end="219:58"><name pos:start="217:18" pos:end="217:24">strncmp</name><argument_list pos:start="217:25" pos:end="219:58">(<argument pos:start="217:26" pos:end="217:49"><expr pos:start="217:26" pos:end="217:49"><name pos:start="217:26" pos:end="217:45"><name pos:start="217:26" pos:end="217:42">ff_mkv_codec_tags</name><index pos:start="217:43" pos:end="217:45">[<expr pos:start="217:44" pos:end="217:44"><name pos:start="217:44" pos:end="217:44">j</name></expr>]</index></name><operator pos:start="217:46" pos:end="217:46">.</operator><name pos:start="217:47" pos:end="217:49">str</name></expr></argument>, <argument pos:start="217:52" pos:end="217:66"><expr pos:start="217:52" pos:end="217:66"><name pos:start="217:52" pos:end="217:66"><name pos:start="217:52" pos:end="217:56">track</name><operator pos:start="217:57" pos:end="217:58">-&gt;</operator><name pos:start="217:59" pos:end="217:66">codec_id</name></name></expr></argument>,

                         <argument pos:start="219:26" pos:end="219:57"><expr pos:start="219:26" pos:end="219:57"><call pos:start="219:26" pos:end="219:57"><name pos:start="219:26" pos:end="219:31">strlen</name><argument_list pos:start="219:32" pos:end="219:57">(<argument pos:start="219:33" pos:end="219:56"><expr pos:start="219:33" pos:end="219:56"><name pos:start="219:33" pos:end="219:52"><name pos:start="219:33" pos:end="219:49">ff_mkv_codec_tags</name><index pos:start="219:50" pos:end="219:52">[<expr pos:start="219:51" pos:end="219:51"><name pos:start="219:51" pos:end="219:51">j</name></expr>]</index></name><operator pos:start="219:53" pos:end="219:53">.</operator><name pos:start="219:54" pos:end="219:56">str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="219:61" pos:end="225:13">{<block_content pos:start="221:17" pos:end="223:22">

                <expr_stmt pos:start="221:17" pos:end="221:51"><expr pos:start="221:17" pos:end="221:50"><name pos:start="221:17" pos:end="221:24">codec_id</name> <operator pos:start="221:26" pos:end="221:26">=</operator> <name pos:start="221:28" pos:end="221:47"><name pos:start="221:28" pos:end="221:44">ff_mkv_codec_tags</name><index pos:start="221:45" pos:end="221:47">[<expr pos:start="221:46" pos:end="221:46"><name pos:start="221:46" pos:end="221:46">j</name></expr>]</index></name><operator pos:start="221:48" pos:end="221:48">.</operator><name pos:start="221:49" pos:end="221:50">id</name></expr>;</expr_stmt>

                <break pos:start="223:17" pos:end="223:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="231:9" pos:end="231:58"><expr pos:start="231:9" pos:end="231:57"><name pos:start="231:9" pos:end="231:10">st</name> <operator pos:start="231:12" pos:end="231:12">=</operator> <name pos:start="231:14" pos:end="231:26"><name pos:start="231:14" pos:end="231:18">track</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:26">stream</name></name> <operator pos:start="231:28" pos:end="231:28">=</operator> <call pos:start="231:30" pos:end="231:57"><name pos:start="231:30" pos:end="231:48">avformat_new_stream</name><argument_list pos:start="231:49" pos:end="231:57">(<argument pos:start="231:50" pos:end="231:50"><expr pos:start="231:50" pos:end="231:50"><name pos:start="231:50" pos:end="231:50">s</name></expr></argument>, <argument pos:start="231:53" pos:end="231:56"><expr pos:start="231:53" pos:end="231:56"><name pos:start="231:53" pos:end="231:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="239:9"><if pos:start="233:9" pos:end="239:9">if <condition pos:start="233:12" pos:end="233:16">(<expr pos:start="233:13" pos:end="233:15"><operator pos:start="233:13" pos:end="233:13">!</operator><name pos:start="233:14" pos:end="233:15">st</name></expr>)</condition> <block pos:start="233:18" pos:end="239:9">{<block_content pos:start="235:13" pos:end="237:35">

            <expr_stmt pos:start="235:13" pos:end="235:35"><expr pos:start="235:13" pos:end="235:34"><call pos:start="235:13" pos:end="235:34"><name pos:start="235:13" pos:end="235:19">av_free</name><argument_list pos:start="235:20" pos:end="235:34">(<argument pos:start="235:21" pos:end="235:33"><expr pos:start="235:21" pos:end="235:33"><name pos:start="235:21" pos:end="235:33">key_id_base64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="237:13" pos:end="237:35">return <expr pos:start="237:20" pos:end="237:34"><call pos:start="237:20" pos:end="237:34"><name pos:start="237:20" pos:end="237:26">AVERROR</name><argument_list pos:start="237:27" pos:end="237:34">(<argument pos:start="237:28" pos:end="237:33"><expr pos:start="237:28" pos:end="237:33"><name pos:start="237:28" pos:end="237:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="243:9" pos:end="251:9"><if pos:start="243:9" pos:end="251:9">if <condition pos:start="243:12" pos:end="243:26">(<expr pos:start="243:13" pos:end="243:25"><name pos:start="243:13" pos:end="243:25">key_id_base64</name></expr>)</condition> <block pos:start="243:28" pos:end="251:9">{<block_content pos:start="247:13" pos:end="249:37">

            <comment type="block" pos:start="245:13" pos:end="245:65">/* export encryption key id as base64 metadata tag */</comment>

            <expr_stmt pos:start="247:13" pos:end="247:71"><expr pos:start="247:13" pos:end="247:70"><call pos:start="247:13" pos:end="247:70"><name pos:start="247:13" pos:end="247:23">av_dict_set</name><argument_list pos:start="247:24" pos:end="247:70">(<argument pos:start="247:25" pos:end="247:37"><expr pos:start="247:25" pos:end="247:37"><operator pos:start="247:25" pos:end="247:25">&amp;</operator><name pos:start="247:26" pos:end="247:37"><name pos:start="247:26" pos:end="247:27">st</name><operator pos:start="247:28" pos:end="247:29">-&gt;</operator><name pos:start="247:30" pos:end="247:37">metadata</name></name></expr></argument>, <argument pos:start="247:40" pos:end="247:51"><expr pos:start="247:40" pos:end="247:51"><literal type="string" pos:start="247:40" pos:end="247:51">"enc_key_id"</literal></expr></argument>, <argument pos:start="247:54" pos:end="247:66"><expr pos:start="247:54" pos:end="247:66"><name pos:start="247:54" pos:end="247:66">key_id_base64</name></expr></argument>, <argument pos:start="247:69" pos:end="247:69"><expr pos:start="247:69" pos:end="247:69"><literal type="number" pos:start="247:69" pos:end="247:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:37"><expr pos:start="249:13" pos:end="249:36"><call pos:start="249:13" pos:end="249:36"><name pos:start="249:13" pos:end="249:20">av_freep</name><argument_list pos:start="249:21" pos:end="249:36">(<argument pos:start="249:22" pos:end="249:35"><expr pos:start="249:22" pos:end="249:35"><operator pos:start="249:22" pos:end="249:22">&amp;</operator><name pos:start="249:23" pos:end="249:35">key_id_base64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="255:9" pos:end="673:9"><if pos:start="255:9" pos:end="279:9">if <condition pos:start="255:12" pos:end="259:35">(<expr pos:start="255:13" pos:end="259:34"><operator pos:start="255:13" pos:end="255:13">!</operator><call pos:start="255:14" pos:end="255:55"><name pos:start="255:14" pos:end="255:19">strcmp</name><argument_list pos:start="255:20" pos:end="255:55">(<argument pos:start="255:21" pos:end="255:35"><expr pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:25">track</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:35">codec_id</name></name></expr></argument>, <argument pos:start="255:38" pos:end="255:54"><expr pos:start="255:38" pos:end="255:54"><literal type="string" pos:start="255:38" pos:end="255:54">"V_MS/VFW/FOURCC"</literal></expr></argument>)</argument_list></call> <operator pos:start="255:57" pos:end="255:58">&amp;&amp;</operator>

             <name pos:start="257:14" pos:end="257:35"><name pos:start="257:14" pos:end="257:18">track</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:30">codec_priv</name><operator pos:start="257:31" pos:end="257:31">.</operator><name pos:start="257:32" pos:end="257:35">size</name></name> <operator pos:start="257:37" pos:end="257:38">&gt;=</operator> <literal type="number" pos:start="257:40" pos:end="257:41">40</literal>               <operator pos:start="257:57" pos:end="257:58">&amp;&amp;</operator>

            <name pos:start="259:13" pos:end="259:34"><name pos:start="259:13" pos:end="259:17">track</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:29">codec_priv</name><operator pos:start="259:30" pos:end="259:30">.</operator><name pos:start="259:31" pos:end="259:34">data</name></name></expr>)</condition> <block pos:start="259:37" pos:end="279:9">{<block_content pos:start="261:13" pos:end="277:37">

            <expr_stmt pos:start="261:13" pos:end="261:36"><expr pos:start="261:13" pos:end="261:35"><name pos:start="261:13" pos:end="261:28"><name pos:start="261:13" pos:end="261:17">track</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:28">ms_compat</name></name>    <operator pos:start="261:33" pos:end="261:33">=</operator> <literal type="number" pos:start="261:35" pos:end="261:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:71"><expr pos:start="263:13" pos:end="263:70"><name pos:start="263:13" pos:end="263:21">bit_depth</name>           <operator pos:start="263:33" pos:end="263:33">=</operator> <call pos:start="263:35" pos:end="263:70"><name pos:start="263:35" pos:end="263:41">AV_RL16</name><argument_list pos:start="263:42" pos:end="263:70">(<argument pos:start="263:43" pos:end="263:69"><expr pos:start="263:43" pos:end="263:69"><name pos:start="263:43" pos:end="263:64"><name pos:start="263:43" pos:end="263:47">track</name><operator pos:start="263:48" pos:end="263:49">-&gt;</operator><name pos:start="263:50" pos:end="263:59">codec_priv</name><operator pos:start="263:60" pos:end="263:60">.</operator><name pos:start="263:61" pos:end="263:64">data</name></name> <operator pos:start="263:66" pos:end="263:66">+</operator> <literal type="number" pos:start="263:68" pos:end="263:69">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:71"><expr pos:start="265:13" pos:end="265:70"><name pos:start="265:13" pos:end="265:18">fourcc</name>              <operator pos:start="265:33" pos:end="265:33">=</operator> <call pos:start="265:35" pos:end="265:70"><name pos:start="265:35" pos:end="265:41">AV_RL32</name><argument_list pos:start="265:42" pos:end="265:70">(<argument pos:start="265:43" pos:end="265:69"><expr pos:start="265:43" pos:end="265:69"><name pos:start="265:43" pos:end="265:64"><name pos:start="265:43" pos:end="265:47">track</name><operator pos:start="265:48" pos:end="265:49">-&gt;</operator><name pos:start="265:50" pos:end="265:59">codec_priv</name><operator pos:start="265:60" pos:end="265:60">.</operator><name pos:start="265:61" pos:end="265:64">data</name></name> <operator pos:start="265:66" pos:end="265:66">+</operator> <literal type="number" pos:start="265:68" pos:end="265:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="269:58"><expr pos:start="267:13" pos:end="269:57"><name pos:start="267:13" pos:end="267:20">codec_id</name>            <operator pos:start="267:33" pos:end="267:33">=</operator> <call pos:start="267:35" pos:end="269:57"><name pos:start="267:35" pos:end="267:49">ff_codec_get_id</name><argument_list pos:start="267:50" pos:end="269:57">(<argument pos:start="267:51" pos:end="267:67"><expr pos:start="267:51" pos:end="267:67"><name pos:start="267:51" pos:end="267:67">ff_codec_bmp_tags</name></expr></argument>,

                                                  <argument pos:start="269:51" pos:end="269:56"><expr pos:start="269:51" pos:end="269:56"><name pos:start="269:51" pos:end="269:56">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="271:13" pos:end="275:58"><if pos:start="271:13" pos:end="275:58">if <condition pos:start="271:16" pos:end="271:26">(<expr pos:start="271:17" pos:end="271:25"><operator pos:start="271:17" pos:end="271:17">!</operator><name pos:start="271:18" pos:end="271:25">codec_id</name></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="275:58"><block_content pos:start="273:17" pos:end="275:58">

                <expr_stmt pos:start="273:17" pos:end="275:58"><expr pos:start="273:17" pos:end="275:57"><name pos:start="273:17" pos:end="273:24">codec_id</name>        <operator pos:start="273:33" pos:end="273:33">=</operator> <call pos:start="273:35" pos:end="275:57"><name pos:start="273:35" pos:end="273:49">ff_codec_get_id</name><argument_list pos:start="273:50" pos:end="275:57">(<argument pos:start="273:51" pos:end="273:72"><expr pos:start="273:51" pos:end="273:72"><name pos:start="273:51" pos:end="273:72">ff_codec_movvideo_tags</name></expr></argument>,

                                                  <argument pos:start="275:51" pos:end="275:56"><expr pos:start="275:51" pos:end="275:56"><name pos:start="275:51" pos:end="275:56">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:37"><expr pos:start="277:13" pos:end="277:36"><name pos:start="277:13" pos:end="277:28">extradata_offset</name>    <operator pos:start="277:33" pos:end="277:33">=</operator> <literal type="number" pos:start="277:35" pos:end="277:36">40</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="279:11" pos:end="305:9">else if <condition pos:start="279:19" pos:end="283:42">(<expr pos:start="279:20" pos:end="283:41"><operator pos:start="279:20" pos:end="279:20">!</operator><call pos:start="279:21" pos:end="279:55"><name pos:start="279:21" pos:end="279:26">strcmp</name><argument_list pos:start="279:27" pos:end="279:55">(<argument pos:start="279:28" pos:end="279:42"><expr pos:start="279:28" pos:end="279:42"><name pos:start="279:28" pos:end="279:42"><name pos:start="279:28" pos:end="279:32">track</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:42">codec_id</name></name></expr></argument>, <argument pos:start="279:45" pos:end="279:54"><expr pos:start="279:45" pos:end="279:54"><literal type="string" pos:start="279:45" pos:end="279:54">"A_MS/ACM"</literal></expr></argument>)</argument_list></call> <operator pos:start="279:57" pos:end="279:58">&amp;&amp;</operator>

                   <name pos:start="281:20" pos:end="281:41"><name pos:start="281:20" pos:end="281:24">track</name><operator pos:start="281:25" pos:end="281:26">-&gt;</operator><name pos:start="281:27" pos:end="281:36">codec_priv</name><operator pos:start="281:37" pos:end="281:37">.</operator><name pos:start="281:38" pos:end="281:41">size</name></name> <operator pos:start="281:43" pos:end="281:44">&gt;=</operator> <literal type="number" pos:start="281:46" pos:end="281:47">14</literal>         <operator pos:start="281:57" pos:end="281:58">&amp;&amp;</operator>

                   <name pos:start="283:20" pos:end="283:41"><name pos:start="283:20" pos:end="283:24">track</name><operator pos:start="283:25" pos:end="283:26">-&gt;</operator><name pos:start="283:27" pos:end="283:36">codec_priv</name><operator pos:start="283:37" pos:end="283:37">.</operator><name pos:start="283:38" pos:end="283:41">data</name></name></expr>)</condition> <block pos:start="283:44" pos:end="305:9">{<block_content pos:start="285:13" pos:end="303:65">

            <decl_stmt pos:start="285:13" pos:end="285:20"><decl pos:start="285:13" pos:end="285:19"><type pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:15">int</name></type> <name pos:start="285:17" pos:end="285:19">ret</name></decl>;</decl_stmt>

            <expr_stmt pos:start="287:13" pos:end="291:57"><expr pos:start="287:13" pos:end="291:56"><call pos:start="287:13" pos:end="291:56"><name pos:start="287:13" pos:end="287:29">ffio_init_context</name><argument_list pos:start="287:30" pos:end="291:56">(<argument pos:start="287:31" pos:end="287:32"><expr pos:start="287:31" pos:end="287:32"><operator pos:start="287:31" pos:end="287:31">&amp;</operator><name pos:start="287:32" pos:end="287:32">b</name></expr></argument>, <argument pos:start="287:35" pos:end="287:56"><expr pos:start="287:35" pos:end="287:56"><name pos:start="287:35" pos:end="287:56"><name pos:start="287:35" pos:end="287:39">track</name><operator pos:start="287:40" pos:end="287:41">-&gt;</operator><name pos:start="287:42" pos:end="287:51">codec_priv</name><operator pos:start="287:52" pos:end="287:52">.</operator><name pos:start="287:53" pos:end="287:56">data</name></name></expr></argument>,

                              <argument pos:start="289:31" pos:end="289:52"><expr pos:start="289:31" pos:end="289:52"><name pos:start="289:31" pos:end="289:52"><name pos:start="289:31" pos:end="289:35">track</name><operator pos:start="289:36" pos:end="289:37">-&gt;</operator><name pos:start="289:38" pos:end="289:47">codec_priv</name><operator pos:start="289:48" pos:end="289:48">.</operator><name pos:start="289:49" pos:end="289:52">size</name></name></expr></argument>,

                              <argument pos:start="291:31" pos:end="291:31"><expr pos:start="291:31" pos:end="291:31"><literal type="number" pos:start="291:31" pos:end="291:31">0</literal></expr></argument>, <argument pos:start="291:34" pos:end="291:37"><expr pos:start="291:34" pos:end="291:37"><name pos:start="291:34" pos:end="291:37">NULL</name></expr></argument>, <argument pos:start="291:40" pos:end="291:43"><expr pos:start="291:40" pos:end="291:43"><name pos:start="291:40" pos:end="291:43">NULL</name></expr></argument>, <argument pos:start="291:46" pos:end="291:49"><expr pos:start="291:46" pos:end="291:49"><name pos:start="291:46" pos:end="291:49">NULL</name></expr></argument>, <argument pos:start="291:52" pos:end="291:55"><expr pos:start="291:52" pos:end="291:55"><name pos:start="291:52" pos:end="291:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:84"><expr pos:start="293:13" pos:end="293:83"><name pos:start="293:13" pos:end="293:15">ret</name> <operator pos:start="293:17" pos:end="293:17">=</operator> <call pos:start="293:19" pos:end="293:83"><name pos:start="293:19" pos:end="293:35">ff_get_wav_header</name><argument_list pos:start="293:36" pos:end="293:83">(<argument pos:start="293:37" pos:end="293:37"><expr pos:start="293:37" pos:end="293:37"><name pos:start="293:37" pos:end="293:37">s</name></expr></argument>, <argument pos:start="293:40" pos:end="293:41"><expr pos:start="293:40" pos:end="293:41"><operator pos:start="293:40" pos:end="293:40">&amp;</operator><name pos:start="293:41" pos:end="293:41">b</name></expr></argument>, <argument pos:start="293:44" pos:end="293:55"><expr pos:start="293:44" pos:end="293:55"><name pos:start="293:44" pos:end="293:55"><name pos:start="293:44" pos:end="293:45">st</name><operator pos:start="293:46" pos:end="293:47">-&gt;</operator><name pos:start="293:48" pos:end="293:55">codecpar</name></name></expr></argument>, <argument pos:start="293:58" pos:end="293:79"><expr pos:start="293:58" pos:end="293:79"><name pos:start="293:58" pos:end="293:79"><name pos:start="293:58" pos:end="293:62">track</name><operator pos:start="293:63" pos:end="293:64">-&gt;</operator><name pos:start="293:65" pos:end="293:74">codec_priv</name><operator pos:start="293:75" pos:end="293:75">.</operator><name pos:start="293:76" pos:end="293:79">size</name></name></expr></argument>, <argument pos:start="293:82" pos:end="293:82"><expr pos:start="293:82" pos:end="293:82"><literal type="number" pos:start="293:82" pos:end="293:82">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="295:13" pos:end="297:27"><if pos:start="295:13" pos:end="297:27">if <condition pos:start="295:16" pos:end="295:24">(<expr pos:start="295:17" pos:end="295:23"><name pos:start="295:17" pos:end="295:19">ret</name> <operator pos:start="295:21" pos:end="295:21">&lt;</operator> <literal type="number" pos:start="295:23" pos:end="295:23">0</literal></expr>)</condition><block type="pseudo" pos:start="297:17" pos:end="297:27"><block_content pos:start="297:17" pos:end="297:27">

                <return pos:start="297:17" pos:end="297:27">return <expr pos:start="297:24" pos:end="297:26"><name pos:start="297:24" pos:end="297:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:54"><expr pos:start="299:13" pos:end="299:53"><name pos:start="299:13" pos:end="299:20">codec_id</name>         <operator pos:start="299:30" pos:end="299:30">=</operator> <name pos:start="299:32" pos:end="299:53"><name pos:start="299:32" pos:end="299:33">st</name><operator pos:start="299:34" pos:end="299:35">-&gt;</operator><name pos:start="299:36" pos:end="299:43">codecpar</name><operator pos:start="299:44" pos:end="299:45">-&gt;</operator><name pos:start="299:46" pos:end="299:53">codec_id</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:55"><expr pos:start="301:13" pos:end="301:54"><name pos:start="301:13" pos:end="301:18">fourcc</name>           <operator pos:start="301:30" pos:end="301:30">=</operator> <name pos:start="301:32" pos:end="301:54"><name pos:start="301:32" pos:end="301:33">st</name><operator pos:start="301:34" pos:end="301:35">-&gt;</operator><name pos:start="301:36" pos:end="301:43">codecpar</name><operator pos:start="301:44" pos:end="301:45">-&gt;</operator><name pos:start="301:46" pos:end="301:54">codec_tag</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:65"><expr pos:start="303:13" pos:end="303:64"><name pos:start="303:13" pos:end="303:28">extradata_offset</name> <operator pos:start="303:30" pos:end="303:30">=</operator> <call pos:start="303:32" pos:end="303:64"><name pos:start="303:32" pos:end="303:36">FFMIN</name><argument_list pos:start="303:37" pos:end="303:64">(<argument pos:start="303:38" pos:end="303:59"><expr pos:start="303:38" pos:end="303:59"><name pos:start="303:38" pos:end="303:59"><name pos:start="303:38" pos:end="303:42">track</name><operator pos:start="303:43" pos:end="303:44">-&gt;</operator><name pos:start="303:45" pos:end="303:54">codec_priv</name><operator pos:start="303:55" pos:end="303:55">.</operator><name pos:start="303:56" pos:end="303:59">size</name></name></expr></argument>, <argument pos:start="303:62" pos:end="303:63"><expr pos:start="303:62" pos:end="303:63"><literal type="number" pos:start="303:62" pos:end="303:63">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="305:11" pos:end="349:9">else if <condition pos:start="305:19" pos:end="311:47">(<expr pos:start="305:20" pos:end="311:46"><operator pos:start="305:20" pos:end="305:20">!</operator><call pos:start="305:21" pos:end="305:58"><name pos:start="305:21" pos:end="305:26">strcmp</name><argument_list pos:start="305:27" pos:end="305:58">(<argument pos:start="305:28" pos:end="305:42"><expr pos:start="305:28" pos:end="305:42"><name pos:start="305:28" pos:end="305:42"><name pos:start="305:28" pos:end="305:32">track</name><operator pos:start="305:33" pos:end="305:34">-&gt;</operator><name pos:start="305:35" pos:end="305:42">codec_id</name></name></expr></argument>, <argument pos:start="305:45" pos:end="305:57"><expr pos:start="305:45" pos:end="305:57"><literal type="string" pos:start="305:45" pos:end="305:57">"A_QUICKTIME"</literal></expr></argument>)</argument_list></call>

                   <comment type="block" pos:start="307:20" pos:end="307:73">/* Normally 36, but allow noncompliant private data */</comment>

                   <operator pos:start="309:20" pos:end="309:21">&amp;&amp;</operator> <operator pos:start="309:23" pos:end="309:23">(</operator><name pos:start="309:24" pos:end="309:45"><name pos:start="309:24" pos:end="309:28">track</name><operator pos:start="309:29" pos:end="309:30">-&gt;</operator><name pos:start="309:31" pos:end="309:40">codec_priv</name><operator pos:start="309:41" pos:end="309:41">.</operator><name pos:start="309:42" pos:end="309:45">size</name></name> <operator pos:start="309:47" pos:end="309:48">&gt;=</operator> <literal type="number" pos:start="309:50" pos:end="309:51">32</literal><operator pos:start="309:52" pos:end="309:52">)</operator>

                   <operator pos:start="311:20" pos:end="311:21">&amp;&amp;</operator> <operator pos:start="311:23" pos:end="311:23">(</operator><name pos:start="311:24" pos:end="311:45"><name pos:start="311:24" pos:end="311:28">track</name><operator pos:start="311:29" pos:end="311:30">-&gt;</operator><name pos:start="311:31" pos:end="311:40">codec_priv</name><operator pos:start="311:41" pos:end="311:41">.</operator><name pos:start="311:42" pos:end="311:45">data</name></name><operator pos:start="311:46" pos:end="311:46">)</operator></expr>)</condition> <block pos:start="311:49" pos:end="349:9">{<block_content pos:start="313:13" pos:end="347:46">

            <decl_stmt pos:start="313:13" pos:end="313:33"><decl pos:start="313:13" pos:end="313:32"><type pos:start="313:13" pos:end="313:20"><name pos:start="313:13" pos:end="313:20">uint16_t</name></type> <name pos:start="313:22" pos:end="313:32">sample_size</name></decl>;</decl_stmt>

            <decl_stmt pos:start="315:13" pos:end="315:62"><decl pos:start="315:13" pos:end="315:61"><type pos:start="315:13" pos:end="315:15"><name pos:start="315:13" pos:end="315:15">int</name></type> <name pos:start="315:17" pos:end="315:19">ret</name> <init pos:start="315:21" pos:end="315:61">= <expr pos:start="315:23" pos:end="315:61"><call pos:start="315:23" pos:end="315:61"><name pos:start="315:23" pos:end="315:34">get_qt_codec</name><argument_list pos:start="315:35" pos:end="315:61">(<argument pos:start="315:36" pos:end="315:40"><expr pos:start="315:36" pos:end="315:40"><name pos:start="315:36" pos:end="315:40">track</name></expr></argument>, <argument pos:start="315:43" pos:end="315:49"><expr pos:start="315:43" pos:end="315:49"><operator pos:start="315:43" pos:end="315:43">&amp;</operator><name pos:start="315:44" pos:end="315:49">fourcc</name></expr></argument>, <argument pos:start="315:52" pos:end="315:60"><expr pos:start="315:52" pos:end="315:60"><operator pos:start="315:52" pos:end="315:52">&amp;</operator><name pos:start="315:53" pos:end="315:60">codec_id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="317:13" pos:end="319:27"><if pos:start="317:13" pos:end="319:27">if <condition pos:start="317:16" pos:end="317:24">(<expr pos:start="317:17" pos:end="317:23"><name pos:start="317:17" pos:end="317:19">ret</name> <operator pos:start="317:21" pos:end="317:21">&lt;</operator> <literal type="number" pos:start="317:23" pos:end="317:23">0</literal></expr>)</condition><block type="pseudo" pos:start="319:17" pos:end="319:27"><block_content pos:start="319:17" pos:end="319:27">

                <return pos:start="319:17" pos:end="319:27">return <expr pos:start="319:24" pos:end="319:26"><name pos:start="319:24" pos:end="319:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:63"><expr pos:start="321:13" pos:end="321:62"><name pos:start="321:13" pos:end="321:23">sample_size</name> <operator pos:start="321:25" pos:end="321:25">=</operator> <call pos:start="321:27" pos:end="321:62"><name pos:start="321:27" pos:end="321:33">AV_RB16</name><argument_list pos:start="321:34" pos:end="321:62">(<argument pos:start="321:35" pos:end="321:61"><expr pos:start="321:35" pos:end="321:61"><name pos:start="321:35" pos:end="321:56"><name pos:start="321:35" pos:end="321:39">track</name><operator pos:start="321:40" pos:end="321:41">-&gt;</operator><name pos:start="321:42" pos:end="321:51">codec_priv</name><operator pos:start="321:52" pos:end="321:52">.</operator><name pos:start="321:53" pos:end="321:56">data</name></name> <operator pos:start="321:58" pos:end="321:58">+</operator> <literal type="number" pos:start="321:60" pos:end="321:61">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="323:13" pos:end="339:13"><if pos:start="323:13" pos:end="339:13">if <condition pos:start="323:16" pos:end="323:28">(<expr pos:start="323:17" pos:end="323:27"><name pos:start="323:17" pos:end="323:22">fourcc</name> <operator pos:start="323:24" pos:end="323:25">==</operator> <literal type="number" pos:start="323:27" pos:end="323:27">0</literal></expr>)</condition> <block pos:start="323:30" pos:end="339:13">{<block_content pos:start="325:17" pos:end="337:17">

                <if_stmt pos:start="325:17" pos:end="337:17"><if pos:start="325:17" pos:end="331:17">if <condition pos:start="325:20" pos:end="325:37">(<expr pos:start="325:21" pos:end="325:36"><name pos:start="325:21" pos:end="325:31">sample_size</name> <operator pos:start="325:33" pos:end="325:34">==</operator> <literal type="number" pos:start="325:36" pos:end="325:36">8</literal></expr>)</condition> <block pos:start="325:39" pos:end="331:17">{<block_content pos:start="327:21" pos:end="329:79">

                    <expr_stmt pos:start="327:21" pos:end="327:52"><expr pos:start="327:21" pos:end="327:51"><name pos:start="327:21" pos:end="327:26">fourcc</name> <operator pos:start="327:28" pos:end="327:28">=</operator> <call pos:start="327:30" pos:end="327:51"><name pos:start="327:30" pos:end="327:34">MKTAG</name><argument_list pos:start="327:35" pos:end="327:51">(<argument pos:start="327:36" pos:end="327:38"><expr pos:start="327:36" pos:end="327:38"><literal type="char" pos:start="327:36" pos:end="327:38">'r'</literal></expr></argument>,<argument pos:start="327:40" pos:end="327:42"><expr pos:start="327:40" pos:end="327:42"><literal type="char" pos:start="327:40" pos:end="327:42">'a'</literal></expr></argument>,<argument pos:start="327:44" pos:end="327:46"><expr pos:start="327:44" pos:end="327:46"><literal type="char" pos:start="327:44" pos:end="327:46">'w'</literal></expr></argument>,<argument pos:start="327:48" pos:end="327:50"><expr pos:start="327:48" pos:end="327:50"><literal type="char" pos:start="327:48" pos:end="327:50">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="329:79"><expr pos:start="329:21" pos:end="329:78"><name pos:start="329:21" pos:end="329:28">codec_id</name> <operator pos:start="329:30" pos:end="329:30">=</operator> <call pos:start="329:32" pos:end="329:78"><name pos:start="329:32" pos:end="329:46">ff_codec_get_id</name><argument_list pos:start="329:47" pos:end="329:78">(<argument pos:start="329:48" pos:end="329:69"><expr pos:start="329:48" pos:end="329:69"><name pos:start="329:48" pos:end="329:69">ff_codec_movaudio_tags</name></expr></argument>, <argument pos:start="329:72" pos:end="329:77"><expr pos:start="329:72" pos:end="329:77"><name pos:start="329:72" pos:end="329:77">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="331:19" pos:end="337:17">else if <condition pos:start="331:27" pos:end="331:45">(<expr pos:start="331:28" pos:end="331:44"><name pos:start="331:28" pos:end="331:38">sample_size</name> <operator pos:start="331:40" pos:end="331:41">==</operator> <literal type="number" pos:start="331:43" pos:end="331:44">16</literal></expr>)</condition> <block pos:start="331:47" pos:end="337:17">{<block_content pos:start="333:21" pos:end="335:79">

                    <expr_stmt pos:start="333:21" pos:end="333:52"><expr pos:start="333:21" pos:end="333:51"><name pos:start="333:21" pos:end="333:26">fourcc</name> <operator pos:start="333:28" pos:end="333:28">=</operator> <call pos:start="333:30" pos:end="333:51"><name pos:start="333:30" pos:end="333:34">MKTAG</name><argument_list pos:start="333:35" pos:end="333:51">(<argument pos:start="333:36" pos:end="333:38"><expr pos:start="333:36" pos:end="333:38"><literal type="char" pos:start="333:36" pos:end="333:38">'t'</literal></expr></argument>,<argument pos:start="333:40" pos:end="333:42"><expr pos:start="333:40" pos:end="333:42"><literal type="char" pos:start="333:40" pos:end="333:42">'w'</literal></expr></argument>,<argument pos:start="333:44" pos:end="333:46"><expr pos:start="333:44" pos:end="333:46"><literal type="char" pos:start="333:44" pos:end="333:46">'o'</literal></expr></argument>,<argument pos:start="333:48" pos:end="333:50"><expr pos:start="333:48" pos:end="333:50"><literal type="char" pos:start="333:48" pos:end="333:50">'s'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="335:21" pos:end="335:79"><expr pos:start="335:21" pos:end="335:78"><name pos:start="335:21" pos:end="335:28">codec_id</name> <operator pos:start="335:30" pos:end="335:30">=</operator> <call pos:start="335:32" pos:end="335:78"><name pos:start="335:32" pos:end="335:46">ff_codec_get_id</name><argument_list pos:start="335:47" pos:end="335:78">(<argument pos:start="335:48" pos:end="335:69"><expr pos:start="335:48" pos:end="335:69"><name pos:start="335:48" pos:end="335:69">ff_codec_movaudio_tags</name></expr></argument>, <argument pos:start="335:72" pos:end="335:77"><expr pos:start="335:72" pos:end="335:77"><name pos:start="335:72" pos:end="335:77">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="341:13" pos:end="347:46"><if pos:start="341:13" pos:end="347:46">if <condition pos:start="341:16" pos:end="345:37">(<expr pos:start="341:17" pos:end="345:36"><operator pos:start="341:17" pos:end="341:17">(</operator><name pos:start="341:18" pos:end="341:23">fourcc</name> <operator pos:start="341:25" pos:end="341:26">==</operator> <call pos:start="341:28" pos:end="341:49"><name pos:start="341:28" pos:end="341:32">MKTAG</name><argument_list pos:start="341:33" pos:end="341:49">(<argument pos:start="341:34" pos:end="341:36"><expr pos:start="341:34" pos:end="341:36"><literal type="char" pos:start="341:34" pos:end="341:36">'t'</literal></expr></argument>,<argument pos:start="341:38" pos:end="341:40"><expr pos:start="341:38" pos:end="341:40"><literal type="char" pos:start="341:38" pos:end="341:40">'w'</literal></expr></argument>,<argument pos:start="341:42" pos:end="341:44"><expr pos:start="341:42" pos:end="341:44"><literal type="char" pos:start="341:42" pos:end="341:44">'o'</literal></expr></argument>,<argument pos:start="341:46" pos:end="341:48"><expr pos:start="341:46" pos:end="341:48"><literal type="char" pos:start="341:46" pos:end="341:48">'s'</literal></expr></argument>)</argument_list></call> <operator pos:start="341:51" pos:end="341:52">||</operator>

                    <name pos:start="343:21" pos:end="343:26">fourcc</name> <operator pos:start="343:28" pos:end="343:29">==</operator> <call pos:start="343:31" pos:end="343:52"><name pos:start="343:31" pos:end="343:35">MKTAG</name><argument_list pos:start="343:36" pos:end="343:52">(<argument pos:start="343:37" pos:end="343:39"><expr pos:start="343:37" pos:end="343:39"><literal type="char" pos:start="343:37" pos:end="343:39">'s'</literal></expr></argument>,<argument pos:start="343:41" pos:end="343:43"><expr pos:start="343:41" pos:end="343:43"><literal type="char" pos:start="343:41" pos:end="343:43">'o'</literal></expr></argument>,<argument pos:start="343:45" pos:end="343:47"><expr pos:start="343:45" pos:end="343:47"><literal type="char" pos:start="343:45" pos:end="343:47">'w'</literal></expr></argument>,<argument pos:start="343:49" pos:end="343:51"><expr pos:start="343:49" pos:end="343:51"><literal type="char" pos:start="343:49" pos:end="343:51">'t'</literal></expr></argument>)</argument_list></call><operator pos:start="343:53" pos:end="343:53">)</operator> <operator pos:start="343:55" pos:end="343:56">&amp;&amp;</operator>

                    <name pos:start="345:21" pos:end="345:31">sample_size</name> <operator pos:start="345:33" pos:end="345:34">==</operator> <literal type="number" pos:start="345:36" pos:end="345:36">8</literal></expr>)</condition><block type="pseudo" pos:start="347:17" pos:end="347:46"><block_content pos:start="347:17" pos:end="347:46">

                <expr_stmt pos:start="347:17" pos:end="347:46"><expr pos:start="347:17" pos:end="347:45"><name pos:start="347:17" pos:end="347:24">codec_id</name> <operator pos:start="347:26" pos:end="347:26">=</operator> <name pos:start="347:28" pos:end="347:45">AV_CODEC_ID_PCM_S8</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="349:11" pos:end="395:9">else if <condition pos:start="349:19" pos:end="353:44">(<expr pos:start="349:20" pos:end="353:43"><operator pos:start="349:20" pos:end="349:20">!</operator><call pos:start="349:21" pos:end="349:58"><name pos:start="349:21" pos:end="349:26">strcmp</name><argument_list pos:start="349:27" pos:end="349:58">(<argument pos:start="349:28" pos:end="349:42"><expr pos:start="349:28" pos:end="349:42"><name pos:start="349:28" pos:end="349:42"><name pos:start="349:28" pos:end="349:32">track</name><operator pos:start="349:33" pos:end="349:34">-&gt;</operator><name pos:start="349:35" pos:end="349:42">codec_id</name></name></expr></argument>, <argument pos:start="349:45" pos:end="349:57"><expr pos:start="349:45" pos:end="349:57"><literal type="string" pos:start="349:45" pos:end="349:57">"V_QUICKTIME"</literal></expr></argument>)</argument_list></call> <operator pos:start="349:60" pos:end="349:61">&amp;&amp;</operator>

                   <operator pos:start="351:20" pos:end="351:20">(</operator><name pos:start="351:21" pos:end="351:42"><name pos:start="351:21" pos:end="351:25">track</name><operator pos:start="351:26" pos:end="351:27">-&gt;</operator><name pos:start="351:28" pos:end="351:37">codec_priv</name><operator pos:start="351:38" pos:end="351:38">.</operator><name pos:start="351:39" pos:end="351:42">size</name></name> <operator pos:start="351:44" pos:end="351:45">&gt;=</operator> <literal type="number" pos:start="351:47" pos:end="351:48">21</literal><operator pos:start="351:49" pos:end="351:49">)</operator>          <operator pos:start="351:60" pos:end="351:61">&amp;&amp;</operator>

                   <operator pos:start="353:20" pos:end="353:20">(</operator><name pos:start="353:21" pos:end="353:42"><name pos:start="353:21" pos:end="353:25">track</name><operator pos:start="353:26" pos:end="353:27">-&gt;</operator><name pos:start="353:28" pos:end="353:37">codec_priv</name><operator pos:start="353:38" pos:end="353:38">.</operator><name pos:start="353:39" pos:end="353:42">data</name></name><operator pos:start="353:43" pos:end="353:43">)</operator></expr>)</condition> <block pos:start="353:46" pos:end="395:9">{<block_content pos:start="355:13" pos:end="393:13">

            <decl_stmt pos:start="355:13" pos:end="355:62"><decl pos:start="355:13" pos:end="355:61"><type pos:start="355:13" pos:end="355:15"><name pos:start="355:13" pos:end="355:15">int</name></type> <name pos:start="355:17" pos:end="355:19">ret</name> <init pos:start="355:21" pos:end="355:61">= <expr pos:start="355:23" pos:end="355:61"><call pos:start="355:23" pos:end="355:61"><name pos:start="355:23" pos:end="355:34">get_qt_codec</name><argument_list pos:start="355:35" pos:end="355:61">(<argument pos:start="355:36" pos:end="355:40"><expr pos:start="355:36" pos:end="355:40"><name pos:start="355:36" pos:end="355:40">track</name></expr></argument>, <argument pos:start="355:43" pos:end="355:49"><expr pos:start="355:43" pos:end="355:49"><operator pos:start="355:43" pos:end="355:43">&amp;</operator><name pos:start="355:44" pos:end="355:49">fourcc</name></expr></argument>, <argument pos:start="355:52" pos:end="355:60"><expr pos:start="355:52" pos:end="355:60"><operator pos:start="355:52" pos:end="355:52">&amp;</operator><name pos:start="355:53" pos:end="355:60">codec_id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="357:13" pos:end="359:27"><if pos:start="357:13" pos:end="359:27">if <condition pos:start="357:16" pos:end="357:24">(<expr pos:start="357:17" pos:end="357:23"><name pos:start="357:17" pos:end="357:19">ret</name> <operator pos:start="357:21" pos:end="357:21">&lt;</operator> <literal type="number" pos:start="357:23" pos:end="357:23">0</literal></expr>)</condition><block type="pseudo" pos:start="359:17" pos:end="359:27"><block_content pos:start="359:17" pos:end="359:27">

                <return pos:start="359:17" pos:end="359:27">return <expr pos:start="359:24" pos:end="359:26"><name pos:start="359:24" pos:end="359:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="361:13" pos:end="367:13"><if pos:start="361:13" pos:end="367:13">if <condition pos:start="361:16" pos:end="361:101">(<expr pos:start="361:17" pos:end="361:100"><name pos:start="361:17" pos:end="361:24">codec_id</name> <operator pos:start="361:26" pos:end="361:27">==</operator> <name pos:start="361:29" pos:end="361:44">AV_CODEC_ID_NONE</name> <operator pos:start="361:46" pos:end="361:47">&amp;&amp;</operator> <call pos:start="361:49" pos:end="361:81"><name pos:start="361:49" pos:end="361:55">AV_RL32</name><argument_list pos:start="361:56" pos:end="361:81">(<argument pos:start="361:57" pos:end="361:80"><expr pos:start="361:57" pos:end="361:80"><name pos:start="361:57" pos:end="361:78"><name pos:start="361:57" pos:end="361:61">track</name><operator pos:start="361:62" pos:end="361:63">-&gt;</operator><name pos:start="361:64" pos:end="361:73">codec_priv</name><operator pos:start="361:74" pos:end="361:74">.</operator><name pos:start="361:75" pos:end="361:78">data</name></name><operator pos:start="361:79" pos:end="361:79">+</operator><literal type="number" pos:start="361:80" pos:end="361:80">4</literal></expr></argument>)</argument_list></call> <operator pos:start="361:83" pos:end="361:84">==</operator> <call pos:start="361:86" pos:end="361:100"><name pos:start="361:86" pos:end="361:92">AV_RL32</name><argument_list pos:start="361:93" pos:end="361:100">(<argument pos:start="361:94" pos:end="361:99"><expr pos:start="361:94" pos:end="361:99"><literal type="string" pos:start="361:94" pos:end="361:99">"SMI "</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="361:103" pos:end="367:13">{<block_content pos:start="363:17" pos:end="365:75">

                <expr_stmt pos:start="363:17" pos:end="363:48"><expr pos:start="363:17" pos:end="363:47"><name pos:start="363:17" pos:end="363:22">fourcc</name> <operator pos:start="363:24" pos:end="363:24">=</operator> <call pos:start="363:26" pos:end="363:47"><name pos:start="363:26" pos:end="363:30">MKTAG</name><argument_list pos:start="363:31" pos:end="363:47">(<argument pos:start="363:32" pos:end="363:34"><expr pos:start="363:32" pos:end="363:34"><literal type="char" pos:start="363:32" pos:end="363:34">'S'</literal></expr></argument>,<argument pos:start="363:36" pos:end="363:38"><expr pos:start="363:36" pos:end="363:38"><literal type="char" pos:start="363:36" pos:end="363:38">'V'</literal></expr></argument>,<argument pos:start="363:40" pos:end="363:42"><expr pos:start="363:40" pos:end="363:42"><literal type="char" pos:start="363:40" pos:end="363:42">'Q'</literal></expr></argument>,<argument pos:start="363:44" pos:end="363:46"><expr pos:start="363:44" pos:end="363:46"><literal type="char" pos:start="363:44" pos:end="363:46">'3'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:75"><expr pos:start="365:17" pos:end="365:74"><name pos:start="365:17" pos:end="365:24">codec_id</name> <operator pos:start="365:26" pos:end="365:26">=</operator> <call pos:start="365:28" pos:end="365:74"><name pos:start="365:28" pos:end="365:42">ff_codec_get_id</name><argument_list pos:start="365:43" pos:end="365:74">(<argument pos:start="365:44" pos:end="365:65"><expr pos:start="365:44" pos:end="365:65"><name pos:start="365:44" pos:end="365:65">ff_codec_movvideo_tags</name></expr></argument>, <argument pos:start="365:68" pos:end="365:73"><expr pos:start="365:68" pos:end="365:73"><name pos:start="365:68" pos:end="365:73">fourcc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="369:13" pos:end="373:76"><if pos:start="369:13" pos:end="373:76">if <condition pos:start="369:16" pos:end="369:45">(<expr pos:start="369:17" pos:end="369:44"><name pos:start="369:17" pos:end="369:24">codec_id</name> <operator pos:start="369:26" pos:end="369:27">==</operator> <name pos:start="369:29" pos:end="369:44">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="371:17" pos:end="373:76"><block_content pos:start="371:17" pos:end="373:76">

                <expr_stmt pos:start="371:17" pos:end="373:76"><expr pos:start="371:17" pos:end="373:75"><call pos:start="371:17" pos:end="373:75"><name pos:start="371:17" pos:end="371:22">av_log</name><argument_list pos:start="371:23" pos:end="373:75">(<argument pos:start="371:24" pos:end="371:36"><expr pos:start="371:24" pos:end="371:36"><name pos:start="371:24" pos:end="371:36"><name pos:start="371:24" pos:end="371:31">matroska</name><operator pos:start="371:32" pos:end="371:33">-&gt;</operator><name pos:start="371:34" pos:end="371:36">ctx</name></name></expr></argument>, <argument pos:start="371:39" pos:end="371:50"><expr pos:start="371:39" pos:end="371:50"><name pos:start="371:39" pos:end="371:50">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="373:24" pos:end="373:51"><expr pos:start="373:24" pos:end="373:51"><literal type="string" pos:start="373:24" pos:end="373:51">"mov FourCC not found %s.\n"</literal></expr></argument>, <argument pos:start="373:54" pos:end="373:74"><expr pos:start="373:54" pos:end="373:74"><call pos:start="373:54" pos:end="373:74"><name pos:start="373:54" pos:end="373:66">av_fourcc2str</name><argument_list pos:start="373:67" pos:end="373:74">(<argument pos:start="373:68" pos:end="373:73"><expr pos:start="373:68" pos:end="373:73"><name pos:start="373:68" pos:end="373:73">fourcc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="375:13" pos:end="393:13"><if pos:start="375:13" pos:end="393:13">if <condition pos:start="375:16" pos:end="375:45">(<expr pos:start="375:17" pos:end="375:44"><name pos:start="375:17" pos:end="375:38"><name pos:start="375:17" pos:end="375:21">track</name><operator pos:start="375:22" pos:end="375:23">-&gt;</operator><name pos:start="375:24" pos:end="375:33">codec_priv</name><operator pos:start="375:34" pos:end="375:34">.</operator><name pos:start="375:35" pos:end="375:38">size</name></name> <operator pos:start="375:40" pos:end="375:41">&gt;=</operator> <literal type="number" pos:start="375:43" pos:end="375:44">86</literal></expr>)</condition> <block pos:start="375:47" pos:end="393:13">{<block_content pos:start="377:17" pos:end="391:17">

                <expr_stmt pos:start="377:17" pos:end="377:65"><expr pos:start="377:17" pos:end="377:64"><name pos:start="377:17" pos:end="377:25">bit_depth</name> <operator pos:start="377:27" pos:end="377:27">=</operator> <call pos:start="377:29" pos:end="377:64"><name pos:start="377:29" pos:end="377:35">AV_RB16</name><argument_list pos:start="377:36" pos:end="377:64">(<argument pos:start="377:37" pos:end="377:63"><expr pos:start="377:37" pos:end="377:63"><name pos:start="377:37" pos:end="377:58"><name pos:start="377:37" pos:end="377:41">track</name><operator pos:start="377:42" pos:end="377:43">-&gt;</operator><name pos:start="377:44" pos:end="377:53">codec_priv</name><operator pos:start="377:54" pos:end="377:54">.</operator><name pos:start="377:55" pos:end="377:58">data</name></name> <operator pos:start="377:60" pos:end="377:60">+</operator> <literal type="number" pos:start="377:62" pos:end="377:63">82</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="383:61"><expr pos:start="379:17" pos:end="383:60"><call pos:start="379:17" pos:end="383:60"><name pos:start="379:17" pos:end="379:33">ffio_init_context</name><argument_list pos:start="379:34" pos:end="383:60">(<argument pos:start="379:35" pos:end="379:36"><expr pos:start="379:35" pos:end="379:36"><operator pos:start="379:35" pos:end="379:35">&amp;</operator><name pos:start="379:36" pos:end="379:36">b</name></expr></argument>, <argument pos:start="379:39" pos:end="379:60"><expr pos:start="379:39" pos:end="379:60"><name pos:start="379:39" pos:end="379:60"><name pos:start="379:39" pos:end="379:43">track</name><operator pos:start="379:44" pos:end="379:45">-&gt;</operator><name pos:start="379:46" pos:end="379:55">codec_priv</name><operator pos:start="379:56" pos:end="379:56">.</operator><name pos:start="379:57" pos:end="379:60">data</name></name></expr></argument>,

                                  <argument pos:start="381:35" pos:end="381:56"><expr pos:start="381:35" pos:end="381:56"><name pos:start="381:35" pos:end="381:56"><name pos:start="381:35" pos:end="381:39">track</name><operator pos:start="381:40" pos:end="381:41">-&gt;</operator><name pos:start="381:42" pos:end="381:51">codec_priv</name><operator pos:start="381:52" pos:end="381:52">.</operator><name pos:start="381:53" pos:end="381:56">size</name></name></expr></argument>,

                                  <argument pos:start="383:35" pos:end="383:35"><expr pos:start="383:35" pos:end="383:35"><literal type="number" pos:start="383:35" pos:end="383:35">0</literal></expr></argument>, <argument pos:start="383:38" pos:end="383:41"><expr pos:start="383:38" pos:end="383:41"><name pos:start="383:38" pos:end="383:41">NULL</name></expr></argument>, <argument pos:start="383:44" pos:end="383:47"><expr pos:start="383:44" pos:end="383:47"><name pos:start="383:44" pos:end="383:47">NULL</name></expr></argument>, <argument pos:start="383:50" pos:end="383:53"><expr pos:start="383:50" pos:end="383:53"><name pos:start="383:50" pos:end="383:53">NULL</name></expr></argument>, <argument pos:start="383:56" pos:end="383:59"><expr pos:start="383:56" pos:end="383:59"><name pos:start="383:56" pos:end="383:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="385:17" pos:end="391:17"><if pos:start="385:17" pos:end="391:17">if <condition pos:start="385:20" pos:end="385:67">(<expr pos:start="385:21" pos:end="385:66"><call pos:start="385:21" pos:end="385:66"><name pos:start="385:21" pos:end="385:36">ff_get_qtpalette</name><argument_list pos:start="385:37" pos:end="385:66">(<argument pos:start="385:38" pos:end="385:45"><expr pos:start="385:38" pos:end="385:45"><name pos:start="385:38" pos:end="385:45">codec_id</name></expr></argument>, <argument pos:start="385:48" pos:end="385:49"><expr pos:start="385:48" pos:end="385:49"><operator pos:start="385:48" pos:end="385:48">&amp;</operator><name pos:start="385:49" pos:end="385:49">b</name></expr></argument>, <argument pos:start="385:52" pos:end="385:65"><expr pos:start="385:52" pos:end="385:65"><name pos:start="385:52" pos:end="385:65"><name pos:start="385:52" pos:end="385:56">track</name><operator pos:start="385:57" pos:end="385:58">-&gt;</operator><name pos:start="385:59" pos:end="385:65">palette</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="385:69" pos:end="391:17">{<block_content pos:start="387:21" pos:end="389:43">

                    <expr_stmt pos:start="387:21" pos:end="387:38"><expr pos:start="387:21" pos:end="387:37"><name pos:start="387:21" pos:end="387:29">bit_depth</name> <operator pos:start="387:31" pos:end="387:32">&amp;=</operator> <literal type="number" pos:start="387:34" pos:end="387:37">0x1F</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="389:21" pos:end="389:43"><expr pos:start="389:21" pos:end="389:42"><name pos:start="389:21" pos:end="389:38"><name pos:start="389:21" pos:end="389:25">track</name><operator pos:start="389:26" pos:end="389:27">-&gt;</operator><name pos:start="389:28" pos:end="389:38">has_palette</name></name> <operator pos:start="389:40" pos:end="389:40">=</operator> <literal type="number" pos:start="389:42" pos:end="389:42">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="395:11" pos:end="419:9">else if <condition pos:start="395:19" pos:end="395:53">(<expr pos:start="395:20" pos:end="395:52"><name pos:start="395:20" pos:end="395:27">codec_id</name> <operator pos:start="395:29" pos:end="395:30">==</operator> <name pos:start="395:32" pos:end="395:52">AV_CODEC_ID_PCM_S16BE</name></expr>)</condition> <block pos:start="395:55" pos:end="419:9">{<block_content pos:start="397:13" pos:end="417:13">

            <switch pos:start="397:13" pos:end="417:13">switch <condition pos:start="397:20" pos:end="397:42">(<expr pos:start="397:21" pos:end="397:41"><name pos:start="397:21" pos:end="397:41"><name pos:start="397:21" pos:end="397:25">track</name><operator pos:start="397:26" pos:end="397:27">-&gt;</operator><name pos:start="397:28" pos:end="397:32">audio</name><operator pos:start="397:33" pos:end="397:33">.</operator><name pos:start="397:34" pos:end="397:41">bitdepth</name></name></expr>)</condition> <block pos:start="397:44" pos:end="417:13">{<block_content pos:start="399:13" pos:end="415:22">

            <case pos:start="399:13" pos:end="399:20">case  <expr pos:start="399:19" pos:end="399:19"><literal type="number" pos:start="399:19" pos:end="399:19">8</literal></expr>:</case>

                <expr_stmt pos:start="401:17" pos:end="401:46"><expr pos:start="401:17" pos:end="401:45"><name pos:start="401:17" pos:end="401:24">codec_id</name> <operator pos:start="401:26" pos:end="401:26">=</operator> <name pos:start="401:28" pos:end="401:45">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt>

                <break pos:start="403:17" pos:end="403:22">break;</break>

            <case pos:start="405:13" pos:end="405:20">case <expr pos:start="405:18" pos:end="405:19"><literal type="number" pos:start="405:18" pos:end="405:19">24</literal></expr>:</case>

                <expr_stmt pos:start="407:17" pos:end="407:49"><expr pos:start="407:17" pos:end="407:48"><name pos:start="407:17" pos:end="407:24">codec_id</name> <operator pos:start="407:26" pos:end="407:26">=</operator> <name pos:start="407:28" pos:end="407:48">AV_CODEC_ID_PCM_S24BE</name></expr>;</expr_stmt>

                <break pos:start="409:17" pos:end="409:22">break;</break>

            <case pos:start="411:13" pos:end="411:20">case <expr pos:start="411:18" pos:end="411:19"><literal type="number" pos:start="411:18" pos:end="411:19">32</literal></expr>:</case>

                <expr_stmt pos:start="413:17" pos:end="413:49"><expr pos:start="413:17" pos:end="413:48"><name pos:start="413:17" pos:end="413:24">codec_id</name> <operator pos:start="413:26" pos:end="413:26">=</operator> <name pos:start="413:28" pos:end="413:48">AV_CODEC_ID_PCM_S32BE</name></expr>;</expr_stmt>

                <break pos:start="415:17" pos:end="415:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="419:11" pos:end="443:9">else if <condition pos:start="419:19" pos:end="419:53">(<expr pos:start="419:20" pos:end="419:52"><name pos:start="419:20" pos:end="419:27">codec_id</name> <operator pos:start="419:29" pos:end="419:30">==</operator> <name pos:start="419:32" pos:end="419:52">AV_CODEC_ID_PCM_S16LE</name></expr>)</condition> <block pos:start="419:55" pos:end="443:9">{<block_content pos:start="421:13" pos:end="441:13">

            <switch pos:start="421:13" pos:end="441:13">switch <condition pos:start="421:20" pos:end="421:42">(<expr pos:start="421:21" pos:end="421:41"><name pos:start="421:21" pos:end="421:41"><name pos:start="421:21" pos:end="421:25">track</name><operator pos:start="421:26" pos:end="421:27">-&gt;</operator><name pos:start="421:28" pos:end="421:32">audio</name><operator pos:start="421:33" pos:end="421:33">.</operator><name pos:start="421:34" pos:end="421:41">bitdepth</name></name></expr>)</condition> <block pos:start="421:44" pos:end="441:13">{<block_content pos:start="423:13" pos:end="439:22">

            <case pos:start="423:13" pos:end="423:20">case  <expr pos:start="423:19" pos:end="423:19"><literal type="number" pos:start="423:19" pos:end="423:19">8</literal></expr>:</case>

                <expr_stmt pos:start="425:17" pos:end="425:46"><expr pos:start="425:17" pos:end="425:45"><name pos:start="425:17" pos:end="425:24">codec_id</name> <operator pos:start="425:26" pos:end="425:26">=</operator> <name pos:start="425:28" pos:end="425:45">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt>

                <break pos:start="427:17" pos:end="427:22">break;</break>

            <case pos:start="429:13" pos:end="429:20">case <expr pos:start="429:18" pos:end="429:19"><literal type="number" pos:start="429:18" pos:end="429:19">24</literal></expr>:</case>

                <expr_stmt pos:start="431:17" pos:end="431:49"><expr pos:start="431:17" pos:end="431:48"><name pos:start="431:17" pos:end="431:24">codec_id</name> <operator pos:start="431:26" pos:end="431:26">=</operator> <name pos:start="431:28" pos:end="431:48">AV_CODEC_ID_PCM_S24LE</name></expr>;</expr_stmt>

                <break pos:start="433:17" pos:end="433:22">break;</break>

            <case pos:start="435:13" pos:end="435:20">case <expr pos:start="435:18" pos:end="435:19"><literal type="number" pos:start="435:18" pos:end="435:19">32</literal></expr>:</case>

                <expr_stmt pos:start="437:17" pos:end="437:49"><expr pos:start="437:17" pos:end="437:48"><name pos:start="437:17" pos:end="437:24">codec_id</name> <operator pos:start="437:26" pos:end="437:26">=</operator> <name pos:start="437:28" pos:end="437:48">AV_CODEC_ID_PCM_S32LE</name></expr>;</expr_stmt>

                <break pos:start="439:17" pos:end="439:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="443:11" pos:end="449:9">else if <condition pos:start="443:19" pos:end="445:47">(<expr pos:start="443:20" pos:end="445:46"><name pos:start="443:20" pos:end="443:27">codec_id</name> <operator pos:start="443:29" pos:end="443:30">==</operator> <name pos:start="443:32" pos:end="443:52">AV_CODEC_ID_PCM_F32LE</name> <operator pos:start="443:54" pos:end="443:55">&amp;&amp;</operator>

                   <name pos:start="445:20" pos:end="445:40"><name pos:start="445:20" pos:end="445:24">track</name><operator pos:start="445:25" pos:end="445:26">-&gt;</operator><name pos:start="445:27" pos:end="445:31">audio</name><operator pos:start="445:32" pos:end="445:32">.</operator><name pos:start="445:33" pos:end="445:40">bitdepth</name></name> <operator pos:start="445:42" pos:end="445:43">==</operator> <literal type="number" pos:start="445:45" pos:end="445:46">64</literal></expr>)</condition> <block pos:start="445:49" pos:end="449:9">{<block_content pos:start="447:13" pos:end="447:45">

            <expr_stmt pos:start="447:13" pos:end="447:45"><expr pos:start="447:13" pos:end="447:44"><name pos:start="447:13" pos:end="447:20">codec_id</name> <operator pos:start="447:22" pos:end="447:22">=</operator> <name pos:start="447:24" pos:end="447:44">AV_CODEC_ID_PCM_F64LE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="449:11" pos:end="481:9">else if <condition pos:start="449:19" pos:end="449:74">(<expr pos:start="449:20" pos:end="449:73"><name pos:start="449:20" pos:end="449:27">codec_id</name> <operator pos:start="449:29" pos:end="449:30">==</operator> <name pos:start="449:32" pos:end="449:46">AV_CODEC_ID_AAC</name> <operator pos:start="449:48" pos:end="449:49">&amp;&amp;</operator> <operator pos:start="449:51" pos:end="449:51">!</operator><name pos:start="449:52" pos:end="449:73"><name pos:start="449:52" pos:end="449:56">track</name><operator pos:start="449:57" pos:end="449:58">-&gt;</operator><name pos:start="449:59" pos:end="449:68">codec_priv</name><operator pos:start="449:69" pos:end="449:69">.</operator><name pos:start="449:70" pos:end="449:73">size</name></name></expr>)</condition> <block pos:start="449:76" pos:end="481:9">{<block_content pos:start="451:13" pos:end="479:35">

            <decl_stmt pos:start="451:13" pos:end="451:64"><decl pos:start="451:13" pos:end="451:63"><type pos:start="451:13" pos:end="451:15"><name pos:start="451:13" pos:end="451:15">int</name></type> <name pos:start="451:17" pos:end="451:23">profile</name> <init pos:start="451:25" pos:end="451:63">= <expr pos:start="451:27" pos:end="451:63"><call pos:start="451:27" pos:end="451:63"><name pos:start="451:27" pos:end="451:46">matroska_aac_profile</name><argument_list pos:start="451:47" pos:end="451:63">(<argument pos:start="451:48" pos:end="451:62"><expr pos:start="451:48" pos:end="451:62"><name pos:start="451:48" pos:end="451:62"><name pos:start="451:48" pos:end="451:52">track</name><operator pos:start="451:53" pos:end="451:54">-&gt;</operator><name pos:start="451:55" pos:end="451:62">codec_id</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="453:13" pos:end="453:68"><decl pos:start="453:13" pos:end="453:67"><type pos:start="453:13" pos:end="453:15"><name pos:start="453:13" pos:end="453:15">int</name></type> <name pos:start="453:17" pos:end="453:19">sri</name>     <init pos:start="453:25" pos:end="453:67">= <expr pos:start="453:27" pos:end="453:67"><call pos:start="453:27" pos:end="453:67"><name pos:start="453:27" pos:end="453:42">matroska_aac_sri</name><argument_list pos:start="453:43" pos:end="453:67">(<argument pos:start="453:44" pos:end="453:66"><expr pos:start="453:44" pos:end="453:66"><name pos:start="453:44" pos:end="453:66"><name pos:start="453:44" pos:end="453:48">track</name><operator pos:start="453:49" pos:end="453:50">-&gt;</operator><name pos:start="453:51" pos:end="453:55">audio</name><operator pos:start="453:56" pos:end="453:56">.</operator><name pos:start="453:57" pos:end="453:66">samplerate</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="455:13" pos:end="455:71"><expr pos:start="455:13" pos:end="455:70"><name pos:start="455:13" pos:end="455:21">extradata</name>   <operator pos:start="455:25" pos:end="455:25">=</operator> <call pos:start="455:27" pos:end="455:70"><name pos:start="455:27" pos:end="455:36">av_mallocz</name><argument_list pos:start="455:37" pos:end="455:70">(<argument pos:start="455:38" pos:end="455:69"><expr pos:start="455:38" pos:end="455:69"><literal type="number" pos:start="455:38" pos:end="455:40">5</literal> <operator pos:start="455:40" pos:end="455:40">+</operator> <name pos:start="455:42" pos:end="455:69">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="457:13" pos:end="459:39"><if pos:start="457:13" pos:end="459:39">if <condition pos:start="457:16" pos:end="457:27">(<expr pos:start="457:17" pos:end="457:26"><operator pos:start="457:17" pos:end="457:17">!</operator><name pos:start="457:18" pos:end="457:26">extradata</name></expr>)</condition><block type="pseudo" pos:start="459:17" pos:end="459:39"><block_content pos:start="459:17" pos:end="459:39">

                <return pos:start="459:17" pos:end="459:39">return <expr pos:start="459:24" pos:end="459:38"><call pos:start="459:24" pos:end="459:38"><name pos:start="459:24" pos:end="459:30">AVERROR</name><argument_list pos:start="459:31" pos:end="459:38">(<argument pos:start="459:32" pos:end="459:37"><expr pos:start="459:32" pos:end="459:37"><name pos:start="459:32" pos:end="459:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:64"><expr pos:start="461:13" pos:end="461:63"><name pos:start="461:13" pos:end="461:24"><name pos:start="461:13" pos:end="461:21">extradata</name><index pos:start="461:22" pos:end="461:24">[<expr pos:start="461:23" pos:end="461:23"><literal type="number" pos:start="461:23" pos:end="461:23">0</literal></expr>]</index></name> <operator pos:start="461:26" pos:end="461:26">=</operator> <operator pos:start="461:28" pos:end="461:28">(</operator><name pos:start="461:29" pos:end="461:35">profile</name> <operator pos:start="461:37" pos:end="461:38">&lt;&lt;</operator> <literal type="number" pos:start="461:40" pos:end="461:40">3</literal><operator pos:start="461:41" pos:end="461:41">)</operator> <operator pos:start="461:43" pos:end="461:43">|</operator> <operator pos:start="461:45" pos:end="461:45">(</operator><operator pos:start="461:46" pos:end="461:46">(</operator><name pos:start="461:47" pos:end="461:49">sri</name> <operator pos:start="461:51" pos:end="461:51">&amp;</operator> <literal type="number" pos:start="461:53" pos:end="461:56">0x0E</literal><operator pos:start="461:57" pos:end="461:57">)</operator> <operator pos:start="461:59" pos:end="461:60">&gt;&gt;</operator> <literal type="number" pos:start="461:62" pos:end="461:62">1</literal><operator pos:start="461:63" pos:end="461:63">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:78"><expr pos:start="463:13" pos:end="463:77"><name pos:start="463:13" pos:end="463:24"><name pos:start="463:13" pos:end="463:21">extradata</name><index pos:start="463:22" pos:end="463:24">[<expr pos:start="463:23" pos:end="463:23"><literal type="number" pos:start="463:23" pos:end="463:23">1</literal></expr>]</index></name> <operator pos:start="463:26" pos:end="463:26">=</operator> <operator pos:start="463:28" pos:end="463:28">(</operator><operator pos:start="463:29" pos:end="463:29">(</operator><name pos:start="463:30" pos:end="463:32">sri</name> <operator pos:start="463:34" pos:end="463:34">&amp;</operator> <literal type="number" pos:start="463:36" pos:end="463:39">0x01</literal><operator pos:start="463:40" pos:end="463:40">)</operator> <operator pos:start="463:42" pos:end="463:43">&lt;&lt;</operator> <literal type="number" pos:start="463:45" pos:end="463:45">7</literal><operator pos:start="463:46" pos:end="463:46">)</operator> <operator pos:start="463:48" pos:end="463:48">|</operator> <operator pos:start="463:50" pos:end="463:50">(</operator><name pos:start="463:51" pos:end="463:71"><name pos:start="463:51" pos:end="463:55">track</name><operator pos:start="463:56" pos:end="463:57">-&gt;</operator><name pos:start="463:58" pos:end="463:62">audio</name><operator pos:start="463:63" pos:end="463:63">.</operator><name pos:start="463:64" pos:end="463:71">channels</name></name> <operator pos:start="463:73" pos:end="463:74">&lt;&lt;</operator> <literal type="number" pos:start="463:76" pos:end="463:76">3</literal><operator pos:start="463:77" pos:end="463:77">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="465:13" pos:end="479:35"><if pos:start="465:13" pos:end="477:13">if <condition pos:start="465:16" pos:end="465:47">(<expr pos:start="465:17" pos:end="465:46"><call pos:start="465:17" pos:end="465:46"><name pos:start="465:17" pos:end="465:22">strstr</name><argument_list pos:start="465:23" pos:end="465:46">(<argument pos:start="465:24" pos:end="465:38"><expr pos:start="465:24" pos:end="465:38"><name pos:start="465:24" pos:end="465:38"><name pos:start="465:24" pos:end="465:28">track</name><operator pos:start="465:29" pos:end="465:30">-&gt;</operator><name pos:start="465:31" pos:end="465:38">codec_id</name></name></expr></argument>, <argument pos:start="465:41" pos:end="465:45"><expr pos:start="465:41" pos:end="465:45"><literal type="string" pos:start="465:41" pos:end="465:45">"SBR"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="465:49" pos:end="477:13">{<block_content pos:start="467:17" pos:end="475:35">

                <expr_stmt pos:start="467:17" pos:end="467:79"><expr pos:start="467:17" pos:end="467:78"><name pos:start="467:17" pos:end="467:19">sri</name>            <operator pos:start="467:32" pos:end="467:32">=</operator> <call pos:start="467:34" pos:end="467:78"><name pos:start="467:34" pos:end="467:49">matroska_aac_sri</name><argument_list pos:start="467:50" pos:end="467:78">(<argument pos:start="467:51" pos:end="467:77"><expr pos:start="467:51" pos:end="467:77"><name pos:start="467:51" pos:end="467:77"><name pos:start="467:51" pos:end="467:55">track</name><operator pos:start="467:56" pos:end="467:57">-&gt;</operator><name pos:start="467:58" pos:end="467:62">audio</name><operator pos:start="467:63" pos:end="467:63">.</operator><name pos:start="467:64" pos:end="467:77">out_samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="469:17" pos:end="469:38"><expr pos:start="469:17" pos:end="469:37"><name pos:start="469:17" pos:end="469:28"><name pos:start="469:17" pos:end="469:25">extradata</name><index pos:start="469:26" pos:end="469:28">[<expr pos:start="469:27" pos:end="469:27"><literal type="number" pos:start="469:27" pos:end="469:27">2</literal></expr>]</index></name>   <operator pos:start="469:32" pos:end="469:32">=</operator> <literal type="number" pos:start="469:34" pos:end="469:37">0x56</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:38"><expr pos:start="471:17" pos:end="471:37"><name pos:start="471:17" pos:end="471:28"><name pos:start="471:17" pos:end="471:25">extradata</name><index pos:start="471:26" pos:end="471:28">[<expr pos:start="471:27" pos:end="471:27"><literal type="number" pos:start="471:27" pos:end="471:27">3</literal></expr>]</index></name>   <operator pos:start="471:32" pos:end="471:32">=</operator> <literal type="number" pos:start="471:34" pos:end="471:37">0xE5</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:51"><expr pos:start="473:17" pos:end="473:50"><name pos:start="473:17" pos:end="473:28"><name pos:start="473:17" pos:end="473:25">extradata</name><index pos:start="473:26" pos:end="473:28">[<expr pos:start="473:27" pos:end="473:27"><literal type="number" pos:start="473:27" pos:end="473:27">4</literal></expr>]</index></name>   <operator pos:start="473:32" pos:end="473:32">=</operator> <literal type="number" pos:start="473:34" pos:end="473:37">0x80</literal> <operator pos:start="473:39" pos:end="473:39">|</operator> <operator pos:start="473:41" pos:end="473:41">(</operator><name pos:start="473:42" pos:end="473:44">sri</name> <operator pos:start="473:46" pos:end="473:47">&lt;&lt;</operator> <literal type="number" pos:start="473:49" pos:end="473:49">3</literal><operator pos:start="473:50" pos:end="473:50">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="475:17" pos:end="475:35"><expr pos:start="475:17" pos:end="475:34"><name pos:start="475:17" pos:end="475:30">extradata_size</name> <operator pos:start="475:32" pos:end="475:32">=</operator> <literal type="number" pos:start="475:34" pos:end="475:34">5</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="477:15" pos:end="479:35">else<block type="pseudo" pos:start="479:17" pos:end="479:35"><block_content pos:start="479:17" pos:end="479:35">

                <expr_stmt pos:start="479:17" pos:end="479:35"><expr pos:start="479:17" pos:end="479:34"><name pos:start="479:17" pos:end="479:30">extradata_size</name> <operator pos:start="479:32" pos:end="479:32">=</operator> <literal type="number" pos:start="479:34" pos:end="479:34">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="481:11" pos:end="509:9">else if <condition pos:start="481:19" pos:end="481:146">(<expr pos:start="481:20" pos:end="481:145"><name pos:start="481:20" pos:end="481:27">codec_id</name> <operator pos:start="481:29" pos:end="481:30">==</operator> <name pos:start="481:32" pos:end="481:47">AV_CODEC_ID_ALAC</name> <operator pos:start="481:49" pos:end="481:50">&amp;&amp;</operator> <name pos:start="481:52" pos:end="481:73"><name pos:start="481:52" pos:end="481:56">track</name><operator pos:start="481:57" pos:end="481:58">-&gt;</operator><name pos:start="481:59" pos:end="481:68">codec_priv</name><operator pos:start="481:69" pos:end="481:69">.</operator><name pos:start="481:70" pos:end="481:73">size</name></name> <operator pos:start="481:75" pos:end="481:76">&amp;&amp;</operator> <name pos:start="481:78" pos:end="481:99"><name pos:start="481:78" pos:end="481:82">track</name><operator pos:start="481:83" pos:end="481:84">-&gt;</operator><name pos:start="481:85" pos:end="481:94">codec_priv</name><operator pos:start="481:95" pos:end="481:95">.</operator><name pos:start="481:96" pos:end="481:99">size</name></name> <operator pos:start="481:101" pos:end="481:101">&lt;</operator> <name pos:start="481:103" pos:end="481:109">INT_MAX</name> <operator pos:start="481:111" pos:end="481:111">-</operator> <literal type="number" pos:start="481:113" pos:end="481:116">12</literal> <operator pos:start="481:116" pos:end="481:116">-</operator> <name pos:start="481:118" pos:end="481:145">AV_INPUT_BUFFER_PADDING_SIZE</name></expr>)</condition> <block pos:start="481:148" pos:end="509:9">{<block_content pos:start="489:13" pos:end="507:43">

            <comment type="block" pos:start="483:13" pos:end="487:43">/* Only ALAC's magic cookie is stored in Matroska's track headers.

             * Create the "atom size", "tag", and "tag version" fields the

             * decoder expects manually. */</comment>

            <expr_stmt pos:start="489:13" pos:end="489:57"><expr pos:start="489:13" pos:end="489:56"><name pos:start="489:13" pos:end="489:26">extradata_size</name> <operator pos:start="489:28" pos:end="489:28">=</operator> <literal type="number" pos:start="489:30" pos:end="489:33">12</literal> <operator pos:start="489:33" pos:end="489:33">+</operator> <name pos:start="489:35" pos:end="489:56"><name pos:start="489:35" pos:end="489:39">track</name><operator pos:start="489:40" pos:end="489:41">-&gt;</operator><name pos:start="489:42" pos:end="489:51">codec_priv</name><operator pos:start="489:52" pos:end="489:52">.</operator><name pos:start="489:53" pos:end="489:56">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="493:70"><expr pos:start="491:13" pos:end="493:69"><name pos:start="491:13" pos:end="491:21">extradata</name>      <operator pos:start="491:28" pos:end="491:28">=</operator> <call pos:start="491:30" pos:end="493:69"><name pos:start="491:30" pos:end="491:39">av_mallocz</name><argument_list pos:start="491:40" pos:end="493:69">(<argument pos:start="491:41" pos:end="493:68"><expr pos:start="491:41" pos:end="493:68"><name pos:start="491:41" pos:end="491:54">extradata_size</name> <operator pos:start="491:56" pos:end="491:56">+</operator>

                                        <name pos:start="493:41" pos:end="493:68">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="495:13" pos:end="497:39"><if pos:start="495:13" pos:end="497:39">if <condition pos:start="495:16" pos:end="495:27">(<expr pos:start="495:17" pos:end="495:26"><operator pos:start="495:17" pos:end="495:17">!</operator><name pos:start="495:18" pos:end="495:26">extradata</name></expr>)</condition><block type="pseudo" pos:start="497:17" pos:end="497:39"><block_content pos:start="497:17" pos:end="497:39">

                <return pos:start="497:17" pos:end="497:39">return <expr pos:start="497:24" pos:end="497:38"><call pos:start="497:24" pos:end="497:38"><name pos:start="497:24" pos:end="497:30">AVERROR</name><argument_list pos:start="497:31" pos:end="497:38">(<argument pos:start="497:32" pos:end="497:37"><expr pos:start="497:32" pos:end="497:37"><name pos:start="497:32" pos:end="497:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:47"><expr pos:start="499:13" pos:end="499:46"><call pos:start="499:13" pos:end="499:46"><name pos:start="499:13" pos:end="499:19">AV_WB32</name><argument_list pos:start="499:20" pos:end="499:46">(<argument pos:start="499:21" pos:end="499:29"><expr pos:start="499:21" pos:end="499:29"><name pos:start="499:21" pos:end="499:29">extradata</name></expr></argument>, <argument pos:start="499:32" pos:end="499:45"><expr pos:start="499:32" pos:end="499:45"><name pos:start="499:32" pos:end="499:45">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:45"><expr pos:start="501:13" pos:end="501:44"><call pos:start="501:13" pos:end="501:44"><name pos:start="501:13" pos:end="501:18">memcpy</name><argument_list pos:start="501:19" pos:end="501:44">(<argument pos:start="501:20" pos:end="501:32"><expr pos:start="501:20" pos:end="501:32"><operator pos:start="501:20" pos:end="501:20">&amp;</operator><name pos:start="501:21" pos:end="501:32"><name pos:start="501:21" pos:end="501:29">extradata</name><index pos:start="501:30" pos:end="501:32">[<expr pos:start="501:31" pos:end="501:31"><literal type="number" pos:start="501:31" pos:end="501:31">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="501:35" pos:end="501:40"><expr pos:start="501:35" pos:end="501:40"><literal type="string" pos:start="501:35" pos:end="501:40">"alac"</literal></expr></argument>, <argument pos:start="501:43" pos:end="501:43"><expr pos:start="501:43" pos:end="501:43"><literal type="number" pos:start="501:43" pos:end="501:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:38"><expr pos:start="503:13" pos:end="503:37"><call pos:start="503:13" pos:end="503:37"><name pos:start="503:13" pos:end="503:19">AV_WB32</name><argument_list pos:start="503:20" pos:end="503:37">(<argument pos:start="503:21" pos:end="503:33"><expr pos:start="503:21" pos:end="503:33"><operator pos:start="503:21" pos:end="503:21">&amp;</operator><name pos:start="503:22" pos:end="503:33"><name pos:start="503:22" pos:end="503:30">extradata</name><index pos:start="503:31" pos:end="503:33">[<expr pos:start="503:32" pos:end="503:32"><literal type="number" pos:start="503:32" pos:end="503:32">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="503:36" pos:end="503:36"><expr pos:start="503:36" pos:end="503:36"><literal type="number" pos:start="503:36" pos:end="503:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="507:43"><expr pos:start="505:13" pos:end="507:42"><call pos:start="505:13" pos:end="507:42"><name pos:start="505:13" pos:end="505:18">memcpy</name><argument_list pos:start="505:19" pos:end="507:42">(<argument pos:start="505:20" pos:end="505:33"><expr pos:start="505:20" pos:end="505:33"><operator pos:start="505:20" pos:end="505:20">&amp;</operator><name pos:start="505:21" pos:end="505:33"><name pos:start="505:21" pos:end="505:29">extradata</name><index pos:start="505:30" pos:end="505:33">[<expr pos:start="505:31" pos:end="505:32"><literal type="number" pos:start="505:31" pos:end="505:32">12</literal></expr>]</index></name></expr></argument>, <argument pos:start="505:36" pos:end="505:57"><expr pos:start="505:36" pos:end="505:57"><name pos:start="505:36" pos:end="505:57"><name pos:start="505:36" pos:end="505:40">track</name><operator pos:start="505:41" pos:end="505:42">-&gt;</operator><name pos:start="505:43" pos:end="505:52">codec_priv</name><operator pos:start="505:53" pos:end="505:53">.</operator><name pos:start="505:54" pos:end="505:57">data</name></name></expr></argument>,

                   <argument pos:start="507:20" pos:end="507:41"><expr pos:start="507:20" pos:end="507:41"><name pos:start="507:20" pos:end="507:41"><name pos:start="507:20" pos:end="507:24">track</name><operator pos:start="507:25" pos:end="507:26">-&gt;</operator><name pos:start="507:27" pos:end="507:36">codec_priv</name><operator pos:start="507:37" pos:end="507:37">.</operator><name pos:start="507:38" pos:end="507:41">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="509:11" pos:end="567:9">else if <condition pos:start="509:19" pos:end="509:47">(<expr pos:start="509:20" pos:end="509:46"><name pos:start="509:20" pos:end="509:27">codec_id</name> <operator pos:start="509:29" pos:end="509:30">==</operator> <name pos:start="509:32" pos:end="509:46">AV_CODEC_ID_TTA</name></expr>)</condition> <block pos:start="509:49" pos:end="567:9">{<block_content pos:start="511:13" pos:end="565:59">

            <expr_stmt pos:start="511:13" pos:end="511:32"><expr pos:start="511:13" pos:end="511:31"><name pos:start="511:13" pos:end="511:26">extradata_size</name> <operator pos:start="511:28" pos:end="511:28">=</operator> <literal type="number" pos:start="511:30" pos:end="511:31">30</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:87"><expr pos:start="513:13" pos:end="513:86"><name pos:start="513:13" pos:end="513:21">extradata</name>      <operator pos:start="513:28" pos:end="513:28">=</operator> <call pos:start="513:30" pos:end="513:86"><name pos:start="513:30" pos:end="513:39">av_mallocz</name><argument_list pos:start="513:40" pos:end="513:86">(<argument pos:start="513:41" pos:end="513:85"><expr pos:start="513:41" pos:end="513:85"><name pos:start="513:41" pos:end="513:54">extradata_size</name> <operator pos:start="513:56" pos:end="513:56">+</operator> <name pos:start="513:58" pos:end="513:85">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="515:13" pos:end="517:39"><if pos:start="515:13" pos:end="517:39">if <condition pos:start="515:16" pos:end="515:27">(<expr pos:start="515:17" pos:end="515:26"><operator pos:start="515:17" pos:end="515:17">!</operator><name pos:start="515:18" pos:end="515:26">extradata</name></expr>)</condition><block type="pseudo" pos:start="517:17" pos:end="517:39"><block_content pos:start="517:17" pos:end="517:39">

                <return pos:start="517:17" pos:end="517:39">return <expr pos:start="517:24" pos:end="517:38"><call pos:start="517:24" pos:end="517:38"><name pos:start="517:24" pos:end="517:30">AVERROR</name><argument_list pos:start="517:31" pos:end="517:38">(<argument pos:start="517:32" pos:end="517:37"><expr pos:start="517:32" pos:end="517:37"><name pos:start="517:32" pos:end="517:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="519:13" pos:end="521:54"><expr pos:start="519:13" pos:end="521:53"><call pos:start="519:13" pos:end="521:53"><name pos:start="519:13" pos:end="519:29">ffio_init_context</name><argument_list pos:start="519:30" pos:end="521:53">(<argument pos:start="519:31" pos:end="519:32"><expr pos:start="519:31" pos:end="519:32"><operator pos:start="519:31" pos:end="519:31">&amp;</operator><name pos:start="519:32" pos:end="519:32">b</name></expr></argument>, <argument pos:start="519:35" pos:end="519:43"><expr pos:start="519:35" pos:end="519:43"><name pos:start="519:35" pos:end="519:43">extradata</name></expr></argument>, <argument pos:start="519:46" pos:end="519:59"><expr pos:start="519:46" pos:end="519:59"><name pos:start="519:46" pos:end="519:59">extradata_size</name></expr></argument>, <argument pos:start="519:62" pos:end="519:62"><expr pos:start="519:62" pos:end="519:62"><literal type="number" pos:start="519:62" pos:end="519:62">1</literal></expr></argument>,

                              <argument pos:start="521:31" pos:end="521:34"><expr pos:start="521:31" pos:end="521:34"><name pos:start="521:31" pos:end="521:34">NULL</name></expr></argument>, <argument pos:start="521:37" pos:end="521:40"><expr pos:start="521:37" pos:end="521:40"><name pos:start="521:37" pos:end="521:40">NULL</name></expr></argument>, <argument pos:start="521:43" pos:end="521:46"><expr pos:start="521:43" pos:end="521:46"><name pos:start="521:43" pos:end="521:46">NULL</name></expr></argument>, <argument pos:start="521:49" pos:end="521:52"><expr pos:start="521:49" pos:end="521:52"><name pos:start="521:49" pos:end="521:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:38"><expr pos:start="523:13" pos:end="523:37"><call pos:start="523:13" pos:end="523:37"><name pos:start="523:13" pos:end="523:22">avio_write</name><argument_list pos:start="523:23" pos:end="523:37">(<argument pos:start="523:24" pos:end="523:25"><expr pos:start="523:24" pos:end="523:25"><operator pos:start="523:24" pos:end="523:24">&amp;</operator><name pos:start="523:25" pos:end="523:25">b</name></expr></argument>, <argument pos:start="523:28" pos:end="523:33"><expr pos:start="523:28" pos:end="523:33"><literal type="string" pos:start="523:28" pos:end="523:33">"TTA1"</literal></expr></argument>, <argument pos:start="523:36" pos:end="523:36"><expr pos:start="523:36" pos:end="523:36"><literal type="number" pos:start="523:36" pos:end="523:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:29"><expr pos:start="525:13" pos:end="525:28"><call pos:start="525:13" pos:end="525:28"><name pos:start="525:13" pos:end="525:21">avio_wl16</name><argument_list pos:start="525:22" pos:end="525:28">(<argument pos:start="525:23" pos:end="525:24"><expr pos:start="525:23" pos:end="525:24"><operator pos:start="525:23" pos:end="525:23">&amp;</operator><name pos:start="525:24" pos:end="525:24">b</name></expr></argument>, <argument pos:start="525:27" pos:end="525:27"><expr pos:start="525:27" pos:end="525:27"><literal type="number" pos:start="525:27" pos:end="525:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="527:13" pos:end="549:13"><if pos:start="527:13" pos:end="549:13">if <condition pos:start="527:16" pos:end="529:51">(<expr pos:start="527:17" pos:end="529:50"><name pos:start="527:17" pos:end="527:37"><name pos:start="527:17" pos:end="527:21">track</name><operator pos:start="527:22" pos:end="527:23">-&gt;</operator><name pos:start="527:24" pos:end="527:28">audio</name><operator pos:start="527:29" pos:end="527:29">.</operator><name pos:start="527:30" pos:end="527:37">channels</name></name> <operator pos:start="527:39" pos:end="527:39">&gt;</operator> <name pos:start="527:41" pos:end="527:50">UINT16_MAX</name> <operator pos:start="527:52" pos:end="527:53">||</operator>

                <name pos:start="529:17" pos:end="529:37"><name pos:start="529:17" pos:end="529:21">track</name><operator pos:start="529:22" pos:end="529:23">-&gt;</operator><name pos:start="529:24" pos:end="529:28">audio</name><operator pos:start="529:29" pos:end="529:29">.</operator><name pos:start="529:30" pos:end="529:37">bitdepth</name></name> <operator pos:start="529:39" pos:end="529:39">&gt;</operator> <name pos:start="529:41" pos:end="529:50">UINT16_MAX</name></expr>)</condition> <block pos:start="529:53" pos:end="549:13">{<block_content pos:start="531:17" pos:end="547:29">

                <expr_stmt pos:start="531:17" pos:end="537:69"><expr pos:start="531:17" pos:end="537:68"><call pos:start="531:17" pos:end="537:68"><name pos:start="531:17" pos:end="531:22">av_log</name><argument_list pos:start="531:23" pos:end="537:68">(<argument pos:start="531:24" pos:end="531:36"><expr pos:start="531:24" pos:end="531:36"><name pos:start="531:24" pos:end="531:36"><name pos:start="531:24" pos:end="531:31">matroska</name><operator pos:start="531:32" pos:end="531:33">-&gt;</operator><name pos:start="531:34" pos:end="531:36">ctx</name></name></expr></argument>, <argument pos:start="531:39" pos:end="531:52"><expr pos:start="531:39" pos:end="531:52"><name pos:start="531:39" pos:end="531:52">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="533:24" pos:end="535:66"><expr pos:start="533:24" pos:end="535:66"><literal type="string" pos:start="533:24" pos:end="533:57">"Too large audio channel number %"</literal><name pos:start="533:58" pos:end="533:63">PRIu64</name>

                       <literal type="string" pos:start="535:24" pos:end="535:39">" or bitdepth %"</literal><name pos:start="535:40" pos:end="535:45">PRIu64</name><literal type="string" pos:start="535:46" pos:end="535:66">". Skipping track.\n"</literal></expr></argument>,

                       <argument pos:start="537:24" pos:end="537:44"><expr pos:start="537:24" pos:end="537:44"><name pos:start="537:24" pos:end="537:44"><name pos:start="537:24" pos:end="537:28">track</name><operator pos:start="537:29" pos:end="537:30">-&gt;</operator><name pos:start="537:31" pos:end="537:35">audio</name><operator pos:start="537:36" pos:end="537:36">.</operator><name pos:start="537:37" pos:end="537:44">channels</name></name></expr></argument>, <argument pos:start="537:47" pos:end="537:67"><expr pos:start="537:47" pos:end="537:67"><name pos:start="537:47" pos:end="537:67"><name pos:start="537:47" pos:end="537:51">track</name><operator pos:start="537:52" pos:end="537:53">-&gt;</operator><name pos:start="537:54" pos:end="537:58">audio</name><operator pos:start="537:59" pos:end="537:59">.</operator><name pos:start="537:60" pos:end="537:67">bitdepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="539:17" pos:end="539:37"><expr pos:start="539:17" pos:end="539:36"><call pos:start="539:17" pos:end="539:36"><name pos:start="539:17" pos:end="539:24">av_freep</name><argument_list pos:start="539:25" pos:end="539:36">(<argument pos:start="539:26" pos:end="539:35"><expr pos:start="539:26" pos:end="539:35"><operator pos:start="539:26" pos:end="539:26">&amp;</operator><name pos:start="539:27" pos:end="539:35">extradata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="541:17" pos:end="547:29"><if pos:start="541:17" pos:end="543:47">if <condition pos:start="541:20" pos:end="541:69">(<expr pos:start="541:21" pos:end="541:68"><name pos:start="541:21" pos:end="541:52"><name pos:start="541:21" pos:end="541:28">matroska</name><operator pos:start="541:29" pos:end="541:30">-&gt;</operator><name pos:start="541:31" pos:end="541:33">ctx</name><operator pos:start="541:34" pos:end="541:35">-&gt;</operator><name pos:start="541:36" pos:end="541:52">error_recognition</name></name> <operator pos:start="541:54" pos:end="541:54">&amp;</operator> <name pos:start="541:56" pos:end="541:68">AV_EF_EXPLODE</name></expr>)</condition><block type="pseudo" pos:start="543:21" pos:end="543:47"><block_content pos:start="543:21" pos:end="543:47">

                    <return pos:start="543:21" pos:end="543:47">return <expr pos:start="543:28" pos:end="543:46"><name pos:start="543:28" pos:end="543:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if>

                <else pos:start="545:17" pos:end="547:29">else<block type="pseudo" pos:start="547:21" pos:end="547:29"><block_content pos:start="547:21" pos:end="547:29">

                    <continue pos:start="547:21" pos:end="547:29">continue;</continue></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:49"><expr pos:start="551:13" pos:end="551:48"><call pos:start="551:13" pos:end="551:48"><name pos:start="551:13" pos:end="551:21">avio_wl16</name><argument_list pos:start="551:22" pos:end="551:48">(<argument pos:start="551:23" pos:end="551:24"><expr pos:start="551:23" pos:end="551:24"><operator pos:start="551:23" pos:end="551:23">&amp;</operator><name pos:start="551:24" pos:end="551:24">b</name></expr></argument>, <argument pos:start="551:27" pos:end="551:47"><expr pos:start="551:27" pos:end="551:47"><name pos:start="551:27" pos:end="551:47"><name pos:start="551:27" pos:end="551:31">track</name><operator pos:start="551:32" pos:end="551:33">-&gt;</operator><name pos:start="551:34" pos:end="551:38">audio</name><operator pos:start="551:39" pos:end="551:39">.</operator><name pos:start="551:40" pos:end="551:47">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="553:13" pos:end="553:49"><expr pos:start="553:13" pos:end="553:48"><call pos:start="553:13" pos:end="553:48"><name pos:start="553:13" pos:end="553:21">avio_wl16</name><argument_list pos:start="553:22" pos:end="553:48">(<argument pos:start="553:23" pos:end="553:24"><expr pos:start="553:23" pos:end="553:24"><operator pos:start="553:23" pos:end="553:23">&amp;</operator><name pos:start="553:24" pos:end="553:24">b</name></expr></argument>, <argument pos:start="553:27" pos:end="553:47"><expr pos:start="553:27" pos:end="553:47"><name pos:start="553:27" pos:end="553:47"><name pos:start="553:27" pos:end="553:31">track</name><operator pos:start="553:32" pos:end="553:33">-&gt;</operator><name pos:start="553:34" pos:end="553:38">audio</name><operator pos:start="553:39" pos:end="553:39">.</operator><name pos:start="553:40" pos:end="553:47">bitdepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="555:13" pos:end="557:43"><if pos:start="555:13" pos:end="557:43">if <condition pos:start="555:16" pos:end="555:89">(<expr pos:start="555:17" pos:end="555:88"><name pos:start="555:17" pos:end="555:43"><name pos:start="555:17" pos:end="555:21">track</name><operator pos:start="555:22" pos:end="555:23">-&gt;</operator><name pos:start="555:24" pos:end="555:28">audio</name><operator pos:start="555:29" pos:end="555:29">.</operator><name pos:start="555:30" pos:end="555:43">out_samplerate</name></name> <operator pos:start="555:45" pos:end="555:45">&lt;</operator> <literal type="number" pos:start="555:47" pos:end="555:47">0</literal> <operator pos:start="555:49" pos:end="555:50">||</operator> <name pos:start="555:52" pos:end="555:78"><name pos:start="555:52" pos:end="555:56">track</name><operator pos:start="555:57" pos:end="555:58">-&gt;</operator><name pos:start="555:59" pos:end="555:63">audio</name><operator pos:start="555:64" pos:end="555:64">.</operator><name pos:start="555:65" pos:end="555:78">out_samplerate</name></name> <operator pos:start="555:80" pos:end="555:80">&gt;</operator> <name pos:start="555:82" pos:end="555:88">INT_MAX</name></expr>)</condition><block type="pseudo" pos:start="557:17" pos:end="557:43"><block_content pos:start="557:17" pos:end="557:43">

                <return pos:start="557:17" pos:end="557:43">return <expr pos:start="557:24" pos:end="557:42"><name pos:start="557:24" pos:end="557:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="559:13" pos:end="559:55"><expr pos:start="559:13" pos:end="559:54"><call pos:start="559:13" pos:end="559:54"><name pos:start="559:13" pos:end="559:21">avio_wl32</name><argument_list pos:start="559:22" pos:end="559:54">(<argument pos:start="559:23" pos:end="559:24"><expr pos:start="559:23" pos:end="559:24"><operator pos:start="559:23" pos:end="559:23">&amp;</operator><name pos:start="559:24" pos:end="559:24">b</name></expr></argument>, <argument pos:start="559:27" pos:end="559:53"><expr pos:start="559:27" pos:end="559:53"><name pos:start="559:27" pos:end="559:53"><name pos:start="559:27" pos:end="559:31">track</name><operator pos:start="559:32" pos:end="559:33">-&gt;</operator><name pos:start="559:34" pos:end="559:38">audio</name><operator pos:start="559:39" pos:end="559:39">.</operator><name pos:start="559:40" pos:end="559:53">out_samplerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="565:59"><expr pos:start="561:13" pos:end="565:58"><call pos:start="561:13" pos:end="565:58"><name pos:start="561:13" pos:end="561:21">avio_wl32</name><argument_list pos:start="561:22" pos:end="565:58">(<argument pos:start="561:23" pos:end="561:24"><expr pos:start="561:23" pos:end="561:24"><operator pos:start="561:23" pos:end="561:23">&amp;</operator><name pos:start="561:24" pos:end="561:24">b</name></expr></argument>, <argument pos:start="561:27" pos:end="565:57"><expr pos:start="561:27" pos:end="565:57"><call pos:start="561:27" pos:end="565:57"><name pos:start="561:27" pos:end="561:36">av_rescale</name><argument_list pos:start="561:37" pos:end="565:57">(<argument pos:start="561:38" pos:end="561:80"><expr pos:start="561:38" pos:end="561:80"><operator pos:start="561:38" pos:end="561:38">(</operator><name pos:start="561:39" pos:end="561:56"><name pos:start="561:39" pos:end="561:46">matroska</name><operator pos:start="561:47" pos:end="561:48">-&gt;</operator><name pos:start="561:49" pos:end="561:56">duration</name></name> <operator pos:start="561:58" pos:end="561:58">*</operator> <name pos:start="561:60" pos:end="561:79"><name pos:start="561:60" pos:end="561:67">matroska</name><operator pos:start="561:68" pos:end="561:69">-&gt;</operator><name pos:start="561:70" pos:end="561:79">time_scale</name></name><operator pos:start="561:80" pos:end="561:80">)</operator></expr></argument>,

                                     <argument pos:start="563:38" pos:end="563:64"><expr pos:start="563:38" pos:end="563:64"><name pos:start="563:38" pos:end="563:64"><name pos:start="563:38" pos:end="563:42">track</name><operator pos:start="563:43" pos:end="563:44">-&gt;</operator><name pos:start="563:45" pos:end="563:49">audio</name><operator pos:start="563:50" pos:end="563:50">.</operator><name pos:start="563:51" pos:end="563:64">out_samplerate</name></name></expr></argument>,

                                     <argument pos:start="565:38" pos:end="565:56"><expr pos:start="565:38" pos:end="565:56"><name pos:start="565:38" pos:end="565:49">AV_TIME_BASE</name> <operator pos:start="565:51" pos:end="565:51">*</operator> <literal type="number" pos:start="565:53" pos:end="565:56">1000</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="567:11" pos:end="577:9">else if <condition pos:start="567:19" pos:end="573:48">(<expr pos:start="567:20" pos:end="573:47"><name pos:start="567:20" pos:end="567:27">codec_id</name> <operator pos:start="567:29" pos:end="567:30">==</operator> <name pos:start="567:32" pos:end="567:47">AV_CODEC_ID_RV10</name> <operator pos:start="567:49" pos:end="567:50">||</operator>

                   <name pos:start="569:20" pos:end="569:27">codec_id</name> <operator pos:start="569:29" pos:end="569:30">==</operator> <name pos:start="569:32" pos:end="569:47">AV_CODEC_ID_RV20</name> <operator pos:start="569:49" pos:end="569:50">||</operator>

                   <name pos:start="571:20" pos:end="571:27">codec_id</name> <operator pos:start="571:29" pos:end="571:30">==</operator> <name pos:start="571:32" pos:end="571:47">AV_CODEC_ID_RV30</name> <operator pos:start="571:49" pos:end="571:50">||</operator>

                   <name pos:start="573:20" pos:end="573:27">codec_id</name> <operator pos:start="573:29" pos:end="573:30">==</operator> <name pos:start="573:32" pos:end="573:47">AV_CODEC_ID_RV40</name></expr>)</condition> <block pos:start="573:50" pos:end="577:9">{<block_content pos:start="575:13" pos:end="575:34">

            <expr_stmt pos:start="575:13" pos:end="575:34"><expr pos:start="575:13" pos:end="575:33"><name pos:start="575:13" pos:end="575:28">extradata_offset</name> <operator pos:start="575:30" pos:end="575:30">=</operator> <literal type="number" pos:start="575:32" pos:end="575:33">26</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="577:11" pos:end="583:9">else if <condition pos:start="577:19" pos:end="577:50">(<expr pos:start="577:20" pos:end="577:49"><name pos:start="577:20" pos:end="577:27">codec_id</name> <operator pos:start="577:29" pos:end="577:30">==</operator> <name pos:start="577:32" pos:end="577:49">AV_CODEC_ID_RA_144</name></expr>)</condition> <block pos:start="577:52" pos:end="583:9">{<block_content pos:start="579:13" pos:end="581:44">

            <expr_stmt pos:start="579:13" pos:end="579:47"><expr pos:start="579:13" pos:end="579:46"><name pos:start="579:13" pos:end="579:39"><name pos:start="579:13" pos:end="579:17">track</name><operator pos:start="579:18" pos:end="579:19">-&gt;</operator><name pos:start="579:20" pos:end="579:24">audio</name><operator pos:start="579:25" pos:end="579:25">.</operator><name pos:start="579:26" pos:end="579:39">out_samplerate</name></name> <operator pos:start="579:41" pos:end="579:41">=</operator> <literal type="number" pos:start="579:43" pos:end="579:46">8000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:44"><expr pos:start="581:13" pos:end="581:43"><name pos:start="581:13" pos:end="581:33"><name pos:start="581:13" pos:end="581:17">track</name><operator pos:start="581:18" pos:end="581:19">-&gt;</operator><name pos:start="581:20" pos:end="581:24">audio</name><operator pos:start="581:25" pos:end="581:25">.</operator><name pos:start="581:26" pos:end="581:33">channels</name></name>       <operator pos:start="581:41" pos:end="581:41">=</operator> <literal type="number" pos:start="581:43" pos:end="581:43">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="583:11" pos:end="661:9">else if <condition pos:start="583:19" pos:end="591:48">(<expr pos:start="583:20" pos:end="591:47"><operator pos:start="583:20" pos:end="583:20">(</operator><name pos:start="583:21" pos:end="583:28">codec_id</name> <operator pos:start="583:30" pos:end="583:31">==</operator> <name pos:start="583:33" pos:end="583:50">AV_CODEC_ID_RA_288</name> <operator pos:start="583:52" pos:end="583:53">||</operator>

                    <name pos:start="585:21" pos:end="585:28">codec_id</name> <operator pos:start="585:30" pos:end="585:31">==</operator> <name pos:start="585:33" pos:end="585:48">AV_CODEC_ID_COOK</name>   <operator pos:start="585:52" pos:end="585:53">||</operator>

                    <name pos:start="587:21" pos:end="587:28">codec_id</name> <operator pos:start="587:30" pos:end="587:31">==</operator> <name pos:start="587:33" pos:end="587:50">AV_CODEC_ID_ATRAC3</name> <operator pos:start="587:52" pos:end="587:53">||</operator>

                    <name pos:start="589:21" pos:end="589:28">codec_id</name> <operator pos:start="589:30" pos:end="589:31">==</operator> <name pos:start="589:33" pos:end="589:48">AV_CODEC_ID_SIPR</name><operator pos:start="589:49" pos:end="589:49">)</operator>

                      <operator pos:start="591:23" pos:end="591:24">&amp;&amp;</operator> <name pos:start="591:26" pos:end="591:47"><name pos:start="591:26" pos:end="591:30">track</name><operator pos:start="591:31" pos:end="591:32">-&gt;</operator><name pos:start="591:33" pos:end="591:42">codec_priv</name><operator pos:start="591:43" pos:end="591:43">.</operator><name pos:start="591:44" pos:end="591:47">data</name></name></expr>)</condition> <block pos:start="591:50" pos:end="661:9">{<block_content pos:start="593:13" pos:end="659:13">

            <decl_stmt pos:start="593:13" pos:end="593:23"><decl pos:start="593:13" pos:end="593:22"><type pos:start="593:13" pos:end="593:15"><name pos:start="593:13" pos:end="593:15">int</name></type> <name pos:start="593:17" pos:end="593:22">flavor</name></decl>;</decl_stmt>



            <expr_stmt pos:start="597:13" pos:end="601:57"><expr pos:start="597:13" pos:end="601:56"><call pos:start="597:13" pos:end="601:56"><name pos:start="597:13" pos:end="597:29">ffio_init_context</name><argument_list pos:start="597:30" pos:end="601:56">(<argument pos:start="597:31" pos:end="597:32"><expr pos:start="597:31" pos:end="597:32"><operator pos:start="597:31" pos:end="597:31">&amp;</operator><name pos:start="597:32" pos:end="597:32">b</name></expr></argument>, <argument pos:start="597:35" pos:end="597:56"><expr pos:start="597:35" pos:end="597:56"><name pos:start="597:35" pos:end="597:56"><name pos:start="597:35" pos:end="597:39">track</name><operator pos:start="597:40" pos:end="597:41">-&gt;</operator><name pos:start="597:42" pos:end="597:51">codec_priv</name><operator pos:start="597:52" pos:end="597:52">.</operator><name pos:start="597:53" pos:end="597:56">data</name></name></expr></argument>,

                              <argument pos:start="599:31" pos:end="599:52"><expr pos:start="599:31" pos:end="599:52"><name pos:start="599:31" pos:end="599:52"><name pos:start="599:31" pos:end="599:35">track</name><operator pos:start="599:36" pos:end="599:37">-&gt;</operator><name pos:start="599:38" pos:end="599:47">codec_priv</name><operator pos:start="599:48" pos:end="599:48">.</operator><name pos:start="599:49" pos:end="599:52">size</name></name></expr></argument>,

                              <argument pos:start="601:31" pos:end="601:31"><expr pos:start="601:31" pos:end="601:31"><literal type="number" pos:start="601:31" pos:end="601:31">0</literal></expr></argument>, <argument pos:start="601:34" pos:end="601:37"><expr pos:start="601:34" pos:end="601:37"><name pos:start="601:34" pos:end="601:37">NULL</name></expr></argument>, <argument pos:start="601:40" pos:end="601:43"><expr pos:start="601:40" pos:end="601:43"><name pos:start="601:40" pos:end="601:43">NULL</name></expr></argument>, <argument pos:start="601:46" pos:end="601:49"><expr pos:start="601:46" pos:end="601:49"><name pos:start="601:46" pos:end="601:49">NULL</name></expr></argument>, <argument pos:start="601:52" pos:end="601:55"><expr pos:start="601:52" pos:end="601:55"><name pos:start="601:52" pos:end="601:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="603:13" pos:end="603:30"><expr pos:start="603:13" pos:end="603:29"><call pos:start="603:13" pos:end="603:29"><name pos:start="603:13" pos:end="603:21">avio_skip</name><argument_list pos:start="603:22" pos:end="603:29">(<argument pos:start="603:23" pos:end="603:24"><expr pos:start="603:23" pos:end="603:24"><operator pos:start="603:23" pos:end="603:23">&amp;</operator><name pos:start="603:24" pos:end="603:24">b</name></expr></argument>, <argument pos:start="603:27" pos:end="603:28"><expr pos:start="603:27" pos:end="603:28"><literal type="number" pos:start="603:27" pos:end="603:28">22</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="605:13" pos:end="605:57"><expr pos:start="605:13" pos:end="605:56"><name pos:start="605:13" pos:end="605:18">flavor</name>                       <operator pos:start="605:42" pos:end="605:42">=</operator> <call pos:start="605:44" pos:end="605:56"><name pos:start="605:44" pos:end="605:52">avio_rb16</name><argument_list pos:start="605:53" pos:end="605:56">(<argument pos:start="605:54" pos:end="605:55"><expr pos:start="605:54" pos:end="605:55"><operator pos:start="605:54" pos:end="605:54">&amp;</operator><name pos:start="605:55" pos:end="605:55">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="607:13" pos:end="607:57"><expr pos:start="607:13" pos:end="607:56"><name pos:start="607:13" pos:end="607:40"><name pos:start="607:13" pos:end="607:17">track</name><operator pos:start="607:18" pos:end="607:19">-&gt;</operator><name pos:start="607:20" pos:end="607:24">audio</name><operator pos:start="607:25" pos:end="607:25">.</operator><name pos:start="607:26" pos:end="607:40">coded_framesize</name></name> <operator pos:start="607:42" pos:end="607:42">=</operator> <call pos:start="607:44" pos:end="607:56"><name pos:start="607:44" pos:end="607:52">avio_rb32</name><argument_list pos:start="607:53" pos:end="607:56">(<argument pos:start="607:54" pos:end="607:55"><expr pos:start="607:54" pos:end="607:55"><operator pos:start="607:54" pos:end="607:54">&amp;</operator><name pos:start="607:55" pos:end="607:55">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="609:13" pos:end="609:30"><expr pos:start="609:13" pos:end="609:29"><call pos:start="609:13" pos:end="609:29"><name pos:start="609:13" pos:end="609:21">avio_skip</name><argument_list pos:start="609:22" pos:end="609:29">(<argument pos:start="609:23" pos:end="609:24"><expr pos:start="609:23" pos:end="609:24"><operator pos:start="609:23" pos:end="609:23">&amp;</operator><name pos:start="609:24" pos:end="609:24">b</name></expr></argument>, <argument pos:start="609:27" pos:end="609:28"><expr pos:start="609:27" pos:end="609:28"><literal type="number" pos:start="609:27" pos:end="609:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="611:13" pos:end="611:57"><expr pos:start="611:13" pos:end="611:56"><name pos:start="611:13" pos:end="611:37"><name pos:start="611:13" pos:end="611:17">track</name><operator pos:start="611:18" pos:end="611:19">-&gt;</operator><name pos:start="611:20" pos:end="611:24">audio</name><operator pos:start="611:25" pos:end="611:25">.</operator><name pos:start="611:26" pos:end="611:37">sub_packet_h</name></name>    <operator pos:start="611:42" pos:end="611:42">=</operator> <call pos:start="611:44" pos:end="611:56"><name pos:start="611:44" pos:end="611:52">avio_rb16</name><argument_list pos:start="611:53" pos:end="611:56">(<argument pos:start="611:54" pos:end="611:55"><expr pos:start="611:54" pos:end="611:55"><operator pos:start="611:54" pos:end="611:54">&amp;</operator><name pos:start="611:55" pos:end="611:55">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:57"><expr pos:start="613:13" pos:end="613:56"><name pos:start="613:13" pos:end="613:35"><name pos:start="613:13" pos:end="613:17">track</name><operator pos:start="613:18" pos:end="613:19">-&gt;</operator><name pos:start="613:20" pos:end="613:24">audio</name><operator pos:start="613:25" pos:end="613:25">.</operator><name pos:start="613:26" pos:end="613:35">frame_size</name></name>      <operator pos:start="613:42" pos:end="613:42">=</operator> <call pos:start="613:44" pos:end="613:56"><name pos:start="613:44" pos:end="613:52">avio_rb16</name><argument_list pos:start="613:53" pos:end="613:56">(<argument pos:start="613:54" pos:end="613:55"><expr pos:start="613:54" pos:end="613:55"><operator pos:start="613:54" pos:end="613:54">&amp;</operator><name pos:start="613:55" pos:end="613:55">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:57"><expr pos:start="615:13" pos:end="615:56"><name pos:start="615:13" pos:end="615:40"><name pos:start="615:13" pos:end="615:17">track</name><operator pos:start="615:18" pos:end="615:19">-&gt;</operator><name pos:start="615:20" pos:end="615:24">audio</name><operator pos:start="615:25" pos:end="615:25">.</operator><name pos:start="615:26" pos:end="615:40">sub_packet_size</name></name> <operator pos:start="615:42" pos:end="615:42">=</operator> <call pos:start="615:44" pos:end="615:56"><name pos:start="615:44" pos:end="615:52">avio_rb16</name><argument_list pos:start="615:53" pos:end="615:56">(<argument pos:start="615:54" pos:end="615:55"><expr pos:start="615:54" pos:end="615:55"><operator pos:start="615:54" pos:end="615:54">&amp;</operator><name pos:start="615:55" pos:end="615:55">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="617:13" pos:end="627:43"><if pos:start="617:13" pos:end="627:43">if <condition pos:start="617:16" pos:end="625:82">(<expr pos:start="617:17" pos:end="625:81"><name pos:start="617:17" pos:end="617:22">flavor</name>                        <operator pos:start="617:47" pos:end="617:47">&lt;</operator> <literal type="number" pos:start="617:49" pos:end="617:49">0</literal> <operator pos:start="617:51" pos:end="617:52">||</operator>

                <name pos:start="619:17" pos:end="619:44"><name pos:start="619:17" pos:end="619:21">track</name><operator pos:start="619:22" pos:end="619:23">-&gt;</operator><name pos:start="619:24" pos:end="619:28">audio</name><operator pos:start="619:29" pos:end="619:29">.</operator><name pos:start="619:30" pos:end="619:44">coded_framesize</name></name> <operator pos:start="619:46" pos:end="619:47">&lt;=</operator> <literal type="number" pos:start="619:49" pos:end="619:49">0</literal> <operator pos:start="619:51" pos:end="619:52">||</operator>

                <name pos:start="621:17" pos:end="621:41"><name pos:start="621:17" pos:end="621:21">track</name><operator pos:start="621:22" pos:end="621:23">-&gt;</operator><name pos:start="621:24" pos:end="621:28">audio</name><operator pos:start="621:29" pos:end="621:29">.</operator><name pos:start="621:30" pos:end="621:41">sub_packet_h</name></name>    <operator pos:start="621:46" pos:end="621:47">&lt;=</operator> <literal type="number" pos:start="621:49" pos:end="621:49">0</literal> <operator pos:start="621:51" pos:end="621:52">||</operator>

                <name pos:start="623:17" pos:end="623:39"><name pos:start="623:17" pos:end="623:21">track</name><operator pos:start="623:22" pos:end="623:23">-&gt;</operator><name pos:start="623:24" pos:end="623:28">audio</name><operator pos:start="623:29" pos:end="623:29">.</operator><name pos:start="623:30" pos:end="623:39">frame_size</name></name>      <operator pos:start="623:46" pos:end="623:47">&lt;=</operator> <literal type="number" pos:start="623:49" pos:end="623:49">0</literal> <operator pos:start="623:51" pos:end="623:52">||</operator>

                <name pos:start="625:17" pos:end="625:44"><name pos:start="625:17" pos:end="625:21">track</name><operator pos:start="625:22" pos:end="625:23">-&gt;</operator><name pos:start="625:24" pos:end="625:28">audio</name><operator pos:start="625:29" pos:end="625:29">.</operator><name pos:start="625:30" pos:end="625:44">sub_packet_size</name></name> <operator pos:start="625:46" pos:end="625:47">&lt;=</operator> <literal type="number" pos:start="625:49" pos:end="625:49">0</literal> <operator pos:start="625:51" pos:end="625:52">&amp;&amp;</operator> <name pos:start="625:54" pos:end="625:61">codec_id</name> <operator pos:start="625:63" pos:end="625:64">!=</operator> <name pos:start="625:66" pos:end="625:81">AV_CODEC_ID_SIPR</name></expr>)</condition><block type="pseudo" pos:start="627:17" pos:end="627:43"><block_content pos:start="627:17" pos:end="627:43">

                <return pos:start="627:17" pos:end="627:43">return <expr pos:start="627:24" pos:end="627:42"><name pos:start="627:24" pos:end="627:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="629:13" pos:end="631:72"><expr pos:start="629:13" pos:end="631:71"><name pos:start="629:13" pos:end="629:28"><name pos:start="629:13" pos:end="629:17">track</name><operator pos:start="629:18" pos:end="629:19">-&gt;</operator><name pos:start="629:20" pos:end="629:24">audio</name><operator pos:start="629:25" pos:end="629:25">.</operator><name pos:start="629:26" pos:end="629:28">buf</name></name> <operator pos:start="629:30" pos:end="629:30">=</operator> <call pos:start="629:32" pos:end="631:71"><name pos:start="629:32" pos:end="629:46">av_malloc_array</name><argument_list pos:start="629:47" pos:end="631:71">(<argument pos:start="629:48" pos:end="629:72"><expr pos:start="629:48" pos:end="629:72"><name pos:start="629:48" pos:end="629:72"><name pos:start="629:48" pos:end="629:52">track</name><operator pos:start="629:53" pos:end="629:54">-&gt;</operator><name pos:start="629:55" pos:end="629:59">audio</name><operator pos:start="629:60" pos:end="629:60">.</operator><name pos:start="629:61" pos:end="629:72">sub_packet_h</name></name></expr></argument>,

                                               <argument pos:start="631:48" pos:end="631:70"><expr pos:start="631:48" pos:end="631:70"><name pos:start="631:48" pos:end="631:70"><name pos:start="631:48" pos:end="631:52">track</name><operator pos:start="631:53" pos:end="631:54">-&gt;</operator><name pos:start="631:55" pos:end="631:59">audio</name><operator pos:start="631:60" pos:end="631:60">.</operator><name pos:start="631:61" pos:end="631:70">frame_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="633:13" pos:end="635:39"><if pos:start="633:13" pos:end="635:39">if <condition pos:start="633:16" pos:end="633:34">(<expr pos:start="633:17" pos:end="633:33"><operator pos:start="633:17" pos:end="633:17">!</operator><name pos:start="633:18" pos:end="633:33"><name pos:start="633:18" pos:end="633:22">track</name><operator pos:start="633:23" pos:end="633:24">-&gt;</operator><name pos:start="633:25" pos:end="633:29">audio</name><operator pos:start="633:30" pos:end="633:30">.</operator><name pos:start="633:31" pos:end="633:33">buf</name></name></expr>)</condition><block type="pseudo" pos:start="635:17" pos:end="635:39"><block_content pos:start="635:17" pos:end="635:39">

                <return pos:start="635:17" pos:end="635:39">return <expr pos:start="635:24" pos:end="635:38"><call pos:start="635:24" pos:end="635:38"><name pos:start="635:24" pos:end="635:30">AVERROR</name><argument_list pos:start="635:31" pos:end="635:38">(<argument pos:start="635:32" pos:end="635:37"><expr pos:start="635:32" pos:end="635:37"><name pos:start="635:32" pos:end="635:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="637:13" pos:end="659:13"><if pos:start="637:13" pos:end="643:13">if <condition pos:start="637:16" pos:end="637:47">(<expr pos:start="637:17" pos:end="637:46"><name pos:start="637:17" pos:end="637:24">codec_id</name> <operator pos:start="637:26" pos:end="637:27">==</operator> <name pos:start="637:29" pos:end="637:46">AV_CODEC_ID_RA_288</name></expr>)</condition> <block pos:start="637:49" pos:end="643:13">{<block_content pos:start="639:17" pos:end="641:43">

                <expr_stmt pos:start="639:17" pos:end="639:73"><expr pos:start="639:17" pos:end="639:72"><name pos:start="639:17" pos:end="639:41"><name pos:start="639:17" pos:end="639:18">st</name><operator pos:start="639:19" pos:end="639:20">-&gt;</operator><name pos:start="639:21" pos:end="639:28">codecpar</name><operator pos:start="639:29" pos:end="639:30">-&gt;</operator><name pos:start="639:31" pos:end="639:41">block_align</name></name> <operator pos:start="639:43" pos:end="639:43">=</operator> <name pos:start="639:45" pos:end="639:72"><name pos:start="639:45" pos:end="639:49">track</name><operator pos:start="639:50" pos:end="639:51">-&gt;</operator><name pos:start="639:52" pos:end="639:56">audio</name><operator pos:start="639:57" pos:end="639:57">.</operator><name pos:start="639:58" pos:end="639:72">coded_framesize</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="641:17" pos:end="641:43"><expr pos:start="641:17" pos:end="641:42"><name pos:start="641:17" pos:end="641:38"><name pos:start="641:17" pos:end="641:21">track</name><operator pos:start="641:22" pos:end="641:23">-&gt;</operator><name pos:start="641:24" pos:end="641:33">codec_priv</name><operator pos:start="641:34" pos:end="641:34">.</operator><name pos:start="641:35" pos:end="641:38">size</name></name> <operator pos:start="641:40" pos:end="641:40">=</operator> <literal type="number" pos:start="641:42" pos:end="641:42">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="643:15" pos:end="659:13">else <block pos:start="643:20" pos:end="659:13">{<block_content pos:start="645:17" pos:end="657:44">

                <if_stmt pos:start="645:17" pos:end="653:17"><if pos:start="645:17" pos:end="653:17">if <condition pos:start="645:20" pos:end="645:63">(<expr pos:start="645:21" pos:end="645:62"><name pos:start="645:21" pos:end="645:28">codec_id</name> <operator pos:start="645:30" pos:end="645:31">==</operator> <name pos:start="645:33" pos:end="645:48">AV_CODEC_ID_SIPR</name> <operator pos:start="645:50" pos:end="645:51">&amp;&amp;</operator> <name pos:start="645:53" pos:end="645:58">flavor</name> <operator pos:start="645:60" pos:end="645:60">&lt;</operator> <literal type="number" pos:start="645:62" pos:end="645:62">4</literal></expr>)</condition> <block pos:start="645:65" pos:end="653:17">{<block_content pos:start="647:21" pos:end="651:76">

                    <decl_stmt pos:start="647:21" pos:end="647:84"><decl pos:start="647:21" pos:end="647:83"><type pos:start="647:21" pos:end="647:36"><specifier pos:start="647:21" pos:end="647:26">static</specifier> <specifier pos:start="647:28" pos:end="647:32">const</specifier> <name pos:start="647:34" pos:end="647:36">int</name></type> <name pos:start="647:38" pos:end="647:53"><name pos:start="647:38" pos:end="647:50">sipr_bit_rate</name><index pos:start="647:51" pos:end="647:53">[<expr pos:start="647:52" pos:end="647:52"><literal type="number" pos:start="647:52" pos:end="647:52">4</literal></expr>]</index></name> <init pos:start="647:55" pos:end="647:83">= <expr pos:start="647:57" pos:end="647:83"><block pos:start="647:57" pos:end="647:83">{ <expr pos:start="647:59" pos:end="647:62"><literal type="number" pos:start="647:59" pos:end="647:62">6504</literal></expr>, <expr pos:start="647:65" pos:end="647:68"><literal type="number" pos:start="647:65" pos:end="647:68">8496</literal></expr>, <expr pos:start="647:71" pos:end="647:74"><literal type="number" pos:start="647:71" pos:end="647:74">5000</literal></expr>, <expr pos:start="647:77" pos:end="647:81"><literal type="number" pos:start="647:77" pos:end="647:81">16000</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="649:21" pos:end="649:78"><expr pos:start="649:21" pos:end="649:77"><name pos:start="649:21" pos:end="649:48"><name pos:start="649:21" pos:end="649:25">track</name><operator pos:start="649:26" pos:end="649:27">-&gt;</operator><name pos:start="649:28" pos:end="649:32">audio</name><operator pos:start="649:33" pos:end="649:33">.</operator><name pos:start="649:34" pos:end="649:48">sub_packet_size</name></name> <operator pos:start="649:50" pos:end="649:50">=</operator> <name pos:start="649:52" pos:end="649:77"><name pos:start="649:52" pos:end="649:69">ff_sipr_subpk_size</name><index pos:start="649:70" pos:end="649:77">[<expr pos:start="649:71" pos:end="649:76"><name pos:start="649:71" pos:end="649:76">flavor</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="651:21" pos:end="651:76"><expr pos:start="651:21" pos:end="651:75"><name pos:start="651:21" pos:end="651:42"><name pos:start="651:21" pos:end="651:22">st</name><operator pos:start="651:23" pos:end="651:24">-&gt;</operator><name pos:start="651:25" pos:end="651:32">codecpar</name><operator pos:start="651:33" pos:end="651:34">-&gt;</operator><name pos:start="651:35" pos:end="651:42">bit_rate</name></name>          <operator pos:start="651:53" pos:end="651:53">=</operator> <name pos:start="651:55" pos:end="651:75"><name pos:start="651:55" pos:end="651:67">sipr_bit_rate</name><index pos:start="651:68" pos:end="651:75">[<expr pos:start="651:69" pos:end="651:74"><name pos:start="651:69" pos:end="651:74">flavor</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="655:17" pos:end="655:73"><expr pos:start="655:17" pos:end="655:72"><name pos:start="655:17" pos:end="655:41"><name pos:start="655:17" pos:end="655:18">st</name><operator pos:start="655:19" pos:end="655:20">-&gt;</operator><name pos:start="655:21" pos:end="655:28">codecpar</name><operator pos:start="655:29" pos:end="655:30">-&gt;</operator><name pos:start="655:31" pos:end="655:41">block_align</name></name> <operator pos:start="655:43" pos:end="655:43">=</operator> <name pos:start="655:45" pos:end="655:72"><name pos:start="655:45" pos:end="655:49">track</name><operator pos:start="655:50" pos:end="655:51">-&gt;</operator><name pos:start="655:52" pos:end="655:56">audio</name><operator pos:start="655:57" pos:end="655:57">.</operator><name pos:start="655:58" pos:end="655:72">sub_packet_size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="657:17" pos:end="657:44"><expr pos:start="657:17" pos:end="657:43"><name pos:start="657:17" pos:end="657:32">extradata_offset</name>       <operator pos:start="657:40" pos:end="657:40">=</operator> <literal type="number" pos:start="657:42" pos:end="657:43">78</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="661:11" pos:end="669:9">else if <condition pos:start="661:19" pos:end="661:74">(<expr pos:start="661:20" pos:end="661:73"><name pos:start="661:20" pos:end="661:27">codec_id</name> <operator pos:start="661:29" pos:end="661:30">==</operator> <name pos:start="661:32" pos:end="661:47">AV_CODEC_ID_FLAC</name> <operator pos:start="661:49" pos:end="661:50">&amp;&amp;</operator> <name pos:start="661:52" pos:end="661:73"><name pos:start="661:52" pos:end="661:56">track</name><operator pos:start="661:57" pos:end="661:58">-&gt;</operator><name pos:start="661:59" pos:end="661:68">codec_priv</name><operator pos:start="661:69" pos:end="661:69">.</operator><name pos:start="661:70" pos:end="661:73">size</name></name></expr>)</condition> <block pos:start="661:76" pos:end="669:9">{<block_content pos:start="663:13" pos:end="667:27">

            <expr_stmt pos:start="663:13" pos:end="663:67"><expr pos:start="663:13" pos:end="663:66"><name pos:start="663:13" pos:end="663:15">ret</name> <operator pos:start="663:17" pos:end="663:17">=</operator> <call pos:start="663:19" pos:end="663:66"><name pos:start="663:19" pos:end="663:37">matroska_parse_flac</name><argument_list pos:start="663:38" pos:end="663:66">(<argument pos:start="663:39" pos:end="663:39"><expr pos:start="663:39" pos:end="663:39"><name pos:start="663:39" pos:end="663:39">s</name></expr></argument>, <argument pos:start="663:42" pos:end="663:46"><expr pos:start="663:42" pos:end="663:46"><name pos:start="663:42" pos:end="663:46">track</name></expr></argument>, <argument pos:start="663:49" pos:end="663:65"><expr pos:start="663:49" pos:end="663:65"><operator pos:start="663:49" pos:end="663:49">&amp;</operator><name pos:start="663:50" pos:end="663:65">extradata_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="665:13" pos:end="667:27"><if pos:start="665:13" pos:end="667:27">if <condition pos:start="665:16" pos:end="665:24">(<expr pos:start="665:17" pos:end="665:23"><name pos:start="665:17" pos:end="665:19">ret</name> <operator pos:start="665:21" pos:end="665:21">&lt;</operator> <literal type="number" pos:start="665:23" pos:end="665:23">0</literal></expr>)</condition><block type="pseudo" pos:start="667:17" pos:end="667:27"><block_content pos:start="667:17" pos:end="667:27">

                <return pos:start="667:17" pos:end="667:27">return <expr pos:start="667:24" pos:end="667:26"><name pos:start="667:24" pos:end="667:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="669:11" pos:end="673:9">else if <condition pos:start="669:19" pos:end="669:81">(<expr pos:start="669:20" pos:end="669:80"><name pos:start="669:20" pos:end="669:27">codec_id</name> <operator pos:start="669:29" pos:end="669:30">==</operator> <name pos:start="669:32" pos:end="669:49">AV_CODEC_ID_PRORES</name> <operator pos:start="669:51" pos:end="669:52">&amp;&amp;</operator> <name pos:start="669:54" pos:end="669:75"><name pos:start="669:54" pos:end="669:58">track</name><operator pos:start="669:59" pos:end="669:60">-&gt;</operator><name pos:start="669:61" pos:end="669:70">codec_priv</name><operator pos:start="669:71" pos:end="669:71">.</operator><name pos:start="669:72" pos:end="669:75">size</name></name> <operator pos:start="669:77" pos:end="669:78">==</operator> <literal type="number" pos:start="669:80" pos:end="669:80">4</literal></expr>)</condition> <block pos:start="669:83" pos:end="673:9">{<block_content pos:start="671:13" pos:end="671:53">

            <expr_stmt pos:start="671:13" pos:end="671:53"><expr pos:start="671:13" pos:end="671:52"><name pos:start="671:13" pos:end="671:18">fourcc</name> <operator pos:start="671:20" pos:end="671:20">=</operator> <call pos:start="671:22" pos:end="671:52"><name pos:start="671:22" pos:end="671:28">AV_RL32</name><argument_list pos:start="671:29" pos:end="671:52">(<argument pos:start="671:30" pos:end="671:51"><expr pos:start="671:30" pos:end="671:51"><name pos:start="671:30" pos:end="671:51"><name pos:start="671:30" pos:end="671:34">track</name><operator pos:start="671:35" pos:end="671:36">-&gt;</operator><name pos:start="671:37" pos:end="671:46">codec_priv</name><operator pos:start="671:47" pos:end="671:47">.</operator><name pos:start="671:48" pos:end="671:51">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="675:9" pos:end="675:51"><expr pos:start="675:9" pos:end="675:50"><name pos:start="675:9" pos:end="675:30"><name pos:start="675:9" pos:end="675:13">track</name><operator pos:start="675:14" pos:end="675:15">-&gt;</operator><name pos:start="675:16" pos:end="675:25">codec_priv</name><operator pos:start="675:26" pos:end="675:26">.</operator><name pos:start="675:27" pos:end="675:30">size</name></name> <operator pos:start="675:32" pos:end="675:33">-=</operator> <name pos:start="675:35" pos:end="675:50">extradata_offset</name></expr>;</expr_stmt>



        <if_stmt pos:start="679:9" pos:end="683:75"><if pos:start="679:9" pos:end="683:75">if <condition pos:start="679:12" pos:end="679:41">(<expr pos:start="679:13" pos:end="679:40"><name pos:start="679:13" pos:end="679:20">codec_id</name> <operator pos:start="679:22" pos:end="679:23">==</operator> <name pos:start="679:25" pos:end="679:40">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="681:13" pos:end="683:75"><block_content pos:start="681:13" pos:end="683:75">

            <expr_stmt pos:start="681:13" pos:end="683:75"><expr pos:start="681:13" pos:end="683:74"><call pos:start="681:13" pos:end="683:74"><name pos:start="681:13" pos:end="681:18">av_log</name><argument_list pos:start="681:19" pos:end="683:74">(<argument pos:start="681:20" pos:end="681:32"><expr pos:start="681:20" pos:end="681:32"><name pos:start="681:20" pos:end="681:32"><name pos:start="681:20" pos:end="681:27">matroska</name><operator pos:start="681:28" pos:end="681:29">-&gt;</operator><name pos:start="681:30" pos:end="681:32">ctx</name></name></expr></argument>, <argument pos:start="681:35" pos:end="681:45"><expr pos:start="681:35" pos:end="681:45"><name pos:start="681:35" pos:end="681:45">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="683:20" pos:end="683:56"><expr pos:start="683:20" pos:end="683:56"><literal type="string" pos:start="683:20" pos:end="683:56">"Unknown/unsupported AVCodecID %s.\n"</literal></expr></argument>, <argument pos:start="683:59" pos:end="683:73"><expr pos:start="683:59" pos:end="683:73"><name pos:start="683:59" pos:end="683:73"><name pos:start="683:59" pos:end="683:63">track</name><operator pos:start="683:64" pos:end="683:65">-&gt;</operator><name pos:start="683:66" pos:end="683:73">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="687:9" pos:end="689:36"><if pos:start="687:9" pos:end="689:36">if <condition pos:start="687:12" pos:end="687:37">(<expr pos:start="687:13" pos:end="687:36"><name pos:start="687:13" pos:end="687:29"><name pos:start="687:13" pos:end="687:17">track</name><operator pos:start="687:18" pos:end="687:19">-&gt;</operator><name pos:start="687:20" pos:end="687:29">time_scale</name></name> <operator pos:start="687:31" pos:end="687:31">&lt;</operator> <literal type="number" pos:start="687:33" pos:end="687:36">0.01</literal></expr>)</condition><block type="pseudo" pos:start="689:13" pos:end="689:36"><block_content pos:start="689:13" pos:end="689:36">

            <expr_stmt pos:start="689:13" pos:end="689:36"><expr pos:start="689:13" pos:end="689:35"><name pos:start="689:13" pos:end="689:29"><name pos:start="689:13" pos:end="689:17">track</name><operator pos:start="689:18" pos:end="689:19">-&gt;</operator><name pos:start="689:20" pos:end="689:29">time_scale</name></name> <operator pos:start="689:31" pos:end="689:31">=</operator> <literal type="number" pos:start="689:33" pos:end="689:35">1.0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="691:9" pos:end="693:48"><expr pos:start="691:9" pos:end="693:47"><call pos:start="691:9" pos:end="693:47"><name pos:start="691:9" pos:end="691:27">avpriv_set_pts_info</name><argument_list pos:start="691:28" pos:end="693:47">(<argument pos:start="691:29" pos:end="691:30"><expr pos:start="691:29" pos:end="691:30"><name pos:start="691:29" pos:end="691:30">st</name></expr></argument>, <argument pos:start="691:33" pos:end="691:34"><expr pos:start="691:33" pos:end="691:34"><literal type="number" pos:start="691:33" pos:end="691:34">64</literal></expr></argument>, <argument pos:start="691:37" pos:end="691:76"><expr pos:start="691:37" pos:end="691:76"><name pos:start="691:37" pos:end="691:56"><name pos:start="691:37" pos:end="691:44">matroska</name><operator pos:start="691:45" pos:end="691:46">-&gt;</operator><name pos:start="691:47" pos:end="691:56">time_scale</name></name> <operator pos:start="691:58" pos:end="691:58">*</operator> <name pos:start="691:60" pos:end="691:76"><name pos:start="691:60" pos:end="691:64">track</name><operator pos:start="691:65" pos:end="691:66">-&gt;</operator><name pos:start="691:67" pos:end="691:76">time_scale</name></name></expr></argument>,

                            <argument pos:start="693:29" pos:end="693:46"><expr pos:start="693:29" pos:end="693:46"><literal type="number" pos:start="693:29" pos:end="693:32">1000</literal> <operator pos:start="693:34" pos:end="693:34">*</operator> <literal type="number" pos:start="693:36" pos:end="693:39">1000</literal> <operator pos:start="693:41" pos:end="693:41">*</operator> <literal type="number" pos:start="693:43" pos:end="693:46">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="693:53" pos:end="693:74">/* 64 bit pts in ns */</comment>



        <comment type="block" pos:start="697:9" pos:end="697:61">/* convert the delay from ns to the track timebase */</comment>

        <expr_stmt pos:start="699:9" pos:end="703:57"><expr pos:start="699:9" pos:end="703:56"><name pos:start="699:9" pos:end="699:38"><name pos:start="699:9" pos:end="699:13">track</name><operator pos:start="699:14" pos:end="699:15">-&gt;</operator><name pos:start="699:16" pos:end="699:38">codec_delay_in_track_tb</name></name> <operator pos:start="699:40" pos:end="699:40">=</operator> <macro pos:start="699:42" pos:end="703:56"><name pos:start="699:42" pos:end="699:53">av_rescale_q</name><argument_list pos:start="699:54" pos:end="703:56">(<argument pos:start="699:55" pos:end="699:72">track-&gt;codec_delay</argument>,

                                          <argument pos:start="701:43" pos:end="701:57">(AVRational){ <literal type="number" pos:start="701:57" pos:end="701:57">1</literal></argument>, <argument pos:start="701:60" pos:end="701:71"><literal type="number" pos:start="701:60" pos:end="701:69">1000000000</literal> }</argument>,

                                          <argument pos:start="703:43" pos:end="703:55">st-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>



        <expr_stmt pos:start="707:9" pos:end="707:42"><expr pos:start="707:9" pos:end="707:41"><name pos:start="707:9" pos:end="707:30"><name pos:start="707:9" pos:end="707:10">st</name><operator pos:start="707:11" pos:end="707:12">-&gt;</operator><name pos:start="707:13" pos:end="707:20">codecpar</name><operator pos:start="707:21" pos:end="707:22">-&gt;</operator><name pos:start="707:23" pos:end="707:30">codec_id</name></name> <operator pos:start="707:32" pos:end="707:32">=</operator> <name pos:start="707:34" pos:end="707:41">codec_id</name></expr>;</expr_stmt>



        <if_stmt pos:start="711:9" pos:end="713:71"><if pos:start="711:9" pos:end="713:71">if <condition pos:start="711:12" pos:end="711:43">(<expr pos:start="711:13" pos:end="711:42"><call pos:start="711:13" pos:end="711:42"><name pos:start="711:13" pos:end="711:18">strcmp</name><argument_list pos:start="711:19" pos:end="711:42">(<argument pos:start="711:20" pos:end="711:34"><expr pos:start="711:20" pos:end="711:34"><name pos:start="711:20" pos:end="711:34"><name pos:start="711:20" pos:end="711:24">track</name><operator pos:start="711:25" pos:end="711:26">-&gt;</operator><name pos:start="711:27" pos:end="711:34">language</name></name></expr></argument>, <argument pos:start="711:37" pos:end="711:41"><expr pos:start="711:37" pos:end="711:41"><literal type="string" pos:start="711:37" pos:end="711:41">"und"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="713:13" pos:end="713:71"><block_content pos:start="713:13" pos:end="713:71">

            <expr_stmt pos:start="713:13" pos:end="713:71"><expr pos:start="713:13" pos:end="713:70"><call pos:start="713:13" pos:end="713:70"><name pos:start="713:13" pos:end="713:23">av_dict_set</name><argument_list pos:start="713:24" pos:end="713:70">(<argument pos:start="713:25" pos:end="713:37"><expr pos:start="713:25" pos:end="713:37"><operator pos:start="713:25" pos:end="713:25">&amp;</operator><name pos:start="713:26" pos:end="713:37"><name pos:start="713:26" pos:end="713:27">st</name><operator pos:start="713:28" pos:end="713:29">-&gt;</operator><name pos:start="713:30" pos:end="713:37">metadata</name></name></expr></argument>, <argument pos:start="713:40" pos:end="713:49"><expr pos:start="713:40" pos:end="713:49"><literal type="string" pos:start="713:40" pos:end="713:49">"language"</literal></expr></argument>, <argument pos:start="713:52" pos:end="713:66"><expr pos:start="713:52" pos:end="713:66"><name pos:start="713:52" pos:end="713:66"><name pos:start="713:52" pos:end="713:56">track</name><operator pos:start="713:57" pos:end="713:58">-&gt;</operator><name pos:start="713:59" pos:end="713:66">language</name></name></expr></argument>, <argument pos:start="713:69" pos:end="713:69"><expr pos:start="713:69" pos:end="713:69"><literal type="number" pos:start="713:69" pos:end="713:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="715:9" pos:end="715:60"><expr pos:start="715:9" pos:end="715:59"><call pos:start="715:9" pos:end="715:59"><name pos:start="715:9" pos:end="715:19">av_dict_set</name><argument_list pos:start="715:20" pos:end="715:59">(<argument pos:start="715:21" pos:end="715:33"><expr pos:start="715:21" pos:end="715:33"><operator pos:start="715:21" pos:end="715:21">&amp;</operator><name pos:start="715:22" pos:end="715:33"><name pos:start="715:22" pos:end="715:23">st</name><operator pos:start="715:24" pos:end="715:25">-&gt;</operator><name pos:start="715:26" pos:end="715:33">metadata</name></name></expr></argument>, <argument pos:start="715:36" pos:end="715:42"><expr pos:start="715:36" pos:end="715:42"><literal type="string" pos:start="715:36" pos:end="715:42">"title"</literal></expr></argument>, <argument pos:start="715:45" pos:end="715:55"><expr pos:start="715:45" pos:end="715:55"><name pos:start="715:45" pos:end="715:55"><name pos:start="715:45" pos:end="715:49">track</name><operator pos:start="715:50" pos:end="715:51">-&gt;</operator><name pos:start="715:52" pos:end="715:55">name</name></name></expr></argument>, <argument pos:start="715:58" pos:end="715:58"><expr pos:start="715:58" pos:end="715:58"><literal type="number" pos:start="715:58" pos:end="715:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="719:9" pos:end="721:54"><if pos:start="719:9" pos:end="721:54">if <condition pos:start="719:12" pos:end="719:32">(<expr pos:start="719:13" pos:end="719:31"><name pos:start="719:13" pos:end="719:31"><name pos:start="719:13" pos:end="719:17">track</name><operator pos:start="719:18" pos:end="719:19">-&gt;</operator><name pos:start="719:20" pos:end="719:31">flag_default</name></name></expr>)</condition><block type="pseudo" pos:start="721:13" pos:end="721:54"><block_content pos:start="721:13" pos:end="721:54">

            <expr_stmt pos:start="721:13" pos:end="721:54"><expr pos:start="721:13" pos:end="721:53"><name pos:start="721:13" pos:end="721:27"><name pos:start="721:13" pos:end="721:14">st</name><operator pos:start="721:15" pos:end="721:16">-&gt;</operator><name pos:start="721:17" pos:end="721:27">disposition</name></name> <operator pos:start="721:29" pos:end="721:30">|=</operator> <name pos:start="721:32" pos:end="721:53">AV_DISPOSITION_DEFAULT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="723:9" pos:end="725:53"><if pos:start="723:9" pos:end="725:53">if <condition pos:start="723:12" pos:end="723:31">(<expr pos:start="723:13" pos:end="723:30"><name pos:start="723:13" pos:end="723:30"><name pos:start="723:13" pos:end="723:17">track</name><operator pos:start="723:18" pos:end="723:19">-&gt;</operator><name pos:start="723:20" pos:end="723:30">flag_forced</name></name></expr>)</condition><block type="pseudo" pos:start="725:13" pos:end="725:53"><block_content pos:start="725:13" pos:end="725:53">

            <expr_stmt pos:start="725:13" pos:end="725:53"><expr pos:start="725:13" pos:end="725:52"><name pos:start="725:13" pos:end="725:27"><name pos:start="725:13" pos:end="725:14">st</name><operator pos:start="725:15" pos:end="725:16">-&gt;</operator><name pos:start="725:17" pos:end="725:27">disposition</name></name> <operator pos:start="725:29" pos:end="725:30">|=</operator> <name pos:start="725:32" pos:end="725:52">AV_DISPOSITION_FORCED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="729:9" pos:end="751:9"><if pos:start="729:9" pos:end="751:9">if <condition pos:start="729:12" pos:end="729:37">(<expr pos:start="729:13" pos:end="729:36"><operator pos:start="729:13" pos:end="729:13">!</operator><name pos:start="729:14" pos:end="729:36"><name pos:start="729:14" pos:end="729:15">st</name><operator pos:start="729:16" pos:end="729:17">-&gt;</operator><name pos:start="729:18" pos:end="729:25">codecpar</name><operator pos:start="729:26" pos:end="729:27">-&gt;</operator><name pos:start="729:28" pos:end="729:36">extradata</name></name></expr>)</condition> <block pos:start="729:39" pos:end="751:9">{<block_content pos:start="731:13" pos:end="749:13">

            <if_stmt pos:start="731:13" pos:end="749:13"><if pos:start="731:13" pos:end="737:13">if <condition pos:start="731:16" pos:end="731:26">(<expr pos:start="731:17" pos:end="731:25"><name pos:start="731:17" pos:end="731:25">extradata</name></expr>)</condition> <block pos:start="731:28" pos:end="737:13">{<block_content pos:start="733:17" pos:end="735:62">

                <expr_stmt pos:start="733:17" pos:end="733:57"><expr pos:start="733:17" pos:end="733:56"><name pos:start="733:17" pos:end="733:39"><name pos:start="733:17" pos:end="733:18">st</name><operator pos:start="733:19" pos:end="733:20">-&gt;</operator><name pos:start="733:21" pos:end="733:28">codecpar</name><operator pos:start="733:29" pos:end="733:30">-&gt;</operator><name pos:start="733:31" pos:end="733:39">extradata</name></name>      <operator pos:start="733:46" pos:end="733:46">=</operator> <name pos:start="733:48" pos:end="733:56">extradata</name></expr>;</expr_stmt>

                <expr_stmt pos:start="735:17" pos:end="735:62"><expr pos:start="735:17" pos:end="735:61"><name pos:start="735:17" pos:end="735:44"><name pos:start="735:17" pos:end="735:18">st</name><operator pos:start="735:19" pos:end="735:20">-&gt;</operator><name pos:start="735:21" pos:end="735:28">codecpar</name><operator pos:start="735:29" pos:end="735:30">-&gt;</operator><name pos:start="735:31" pos:end="735:44">extradata_size</name></name> <operator pos:start="735:46" pos:end="735:46">=</operator> <name pos:start="735:48" pos:end="735:61">extradata_size</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="737:15" pos:end="749:13">else if <condition pos:start="737:23" pos:end="737:76">(<expr pos:start="737:24" pos:end="737:75"><name pos:start="737:24" pos:end="737:45"><name pos:start="737:24" pos:end="737:28">track</name><operator pos:start="737:29" pos:end="737:30">-&gt;</operator><name pos:start="737:31" pos:end="737:40">codec_priv</name><operator pos:start="737:41" pos:end="737:41">.</operator><name pos:start="737:42" pos:end="737:45">data</name></name> <operator pos:start="737:47" pos:end="737:48">&amp;&amp;</operator> <name pos:start="737:50" pos:end="737:71"><name pos:start="737:50" pos:end="737:54">track</name><operator pos:start="737:55" pos:end="737:56">-&gt;</operator><name pos:start="737:57" pos:end="737:66">codec_priv</name><operator pos:start="737:67" pos:end="737:67">.</operator><name pos:start="737:68" pos:end="737:71">size</name></name> <operator pos:start="737:73" pos:end="737:73">&gt;</operator> <literal type="number" pos:start="737:75" pos:end="737:75">0</literal></expr>)</condition> <block pos:start="737:78" pos:end="749:13">{<block_content pos:start="739:17" pos:end="747:47">

                <if_stmt pos:start="739:17" pos:end="741:43"><if pos:start="739:17" pos:end="741:43">if <condition pos:start="739:20" pos:end="739:77">(<expr pos:start="739:21" pos:end="739:76"><call pos:start="739:21" pos:end="739:76"><name pos:start="739:21" pos:end="739:38">ff_alloc_extradata</name><argument_list pos:start="739:39" pos:end="739:76">(<argument pos:start="739:40" pos:end="739:51"><expr pos:start="739:40" pos:end="739:51"><name pos:start="739:40" pos:end="739:51"><name pos:start="739:40" pos:end="739:41">st</name><operator pos:start="739:42" pos:end="739:43">-&gt;</operator><name pos:start="739:44" pos:end="739:51">codecpar</name></name></expr></argument>, <argument pos:start="739:54" pos:end="739:75"><expr pos:start="739:54" pos:end="739:75"><name pos:start="739:54" pos:end="739:75"><name pos:start="739:54" pos:end="739:58">track</name><operator pos:start="739:59" pos:end="739:60">-&gt;</operator><name pos:start="739:61" pos:end="739:70">codec_priv</name><operator pos:start="739:71" pos:end="739:71">.</operator><name pos:start="739:72" pos:end="739:75">size</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="741:21" pos:end="741:43"><block_content pos:start="741:21" pos:end="741:43">

                    <return pos:start="741:21" pos:end="741:43">return <expr pos:start="741:28" pos:end="741:42"><call pos:start="741:28" pos:end="741:42"><name pos:start="741:28" pos:end="741:34">AVERROR</name><argument_list pos:start="741:35" pos:end="741:42">(<argument pos:start="741:36" pos:end="741:41"><expr pos:start="741:36" pos:end="741:41"><name pos:start="741:36" pos:end="741:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="743:17" pos:end="747:47"><expr pos:start="743:17" pos:end="747:46"><call pos:start="743:17" pos:end="747:46"><name pos:start="743:17" pos:end="743:22">memcpy</name><argument_list pos:start="743:23" pos:end="747:46">(<argument pos:start="743:24" pos:end="743:46"><expr pos:start="743:24" pos:end="743:46"><name pos:start="743:24" pos:end="743:46"><name pos:start="743:24" pos:end="743:25">st</name><operator pos:start="743:26" pos:end="743:27">-&gt;</operator><name pos:start="743:28" pos:end="743:35">codecpar</name><operator pos:start="743:36" pos:end="743:37">-&gt;</operator><name pos:start="743:38" pos:end="743:46">extradata</name></name></expr></argument>,

                       <argument pos:start="745:24" pos:end="745:64"><expr pos:start="745:24" pos:end="745:64"><name pos:start="745:24" pos:end="745:45"><name pos:start="745:24" pos:end="745:28">track</name><operator pos:start="745:29" pos:end="745:30">-&gt;</operator><name pos:start="745:31" pos:end="745:40">codec_priv</name><operator pos:start="745:41" pos:end="745:41">.</operator><name pos:start="745:42" pos:end="745:45">data</name></name> <operator pos:start="745:47" pos:end="745:47">+</operator> <name pos:start="745:49" pos:end="745:64">extradata_offset</name></expr></argument>,

                       <argument pos:start="747:24" pos:end="747:45"><expr pos:start="747:24" pos:end="747:45"><name pos:start="747:24" pos:end="747:45"><name pos:start="747:24" pos:end="747:28">track</name><operator pos:start="747:29" pos:end="747:30">-&gt;</operator><name pos:start="747:31" pos:end="747:40">codec_priv</name><operator pos:start="747:41" pos:end="747:41">.</operator><name pos:start="747:42" pos:end="747:45">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="755:9" pos:end="979:9"><if pos:start="755:9" pos:end="907:9">if <condition pos:start="755:12" pos:end="755:53">(<expr pos:start="755:13" pos:end="755:52"><name pos:start="755:13" pos:end="755:23"><name pos:start="755:13" pos:end="755:17">track</name><operator pos:start="755:18" pos:end="755:19">-&gt;</operator><name pos:start="755:20" pos:end="755:23">type</name></name> <operator pos:start="755:25" pos:end="755:26">==</operator> <name pos:start="755:28" pos:end="755:52">MATROSKA_TRACK_TYPE_VIDEO</name></expr>)</condition> <block pos:start="755:55" pos:end="907:9">{<block_content pos:start="757:13" pos:end="905:27">

            <decl_stmt pos:start="757:13" pos:end="757:78"><decl pos:start="757:13" pos:end="757:77"><type pos:start="757:13" pos:end="757:32"><name pos:start="757:13" pos:end="757:30">MatroskaTrackPlane</name> <modifier pos:start="757:32" pos:end="757:32">*</modifier></type><name pos:start="757:33" pos:end="757:38">planes</name> <init pos:start="757:40" pos:end="757:77">= <expr pos:start="757:42" pos:end="757:77"><name pos:start="757:42" pos:end="757:77"><name pos:start="757:42" pos:end="757:46">track</name><operator pos:start="757:47" pos:end="757:48">-&gt;</operator><name pos:start="757:49" pos:end="757:57">operation</name><operator pos:start="757:58" pos:end="757:58">.</operator><name pos:start="757:59" pos:end="757:72">combine_planes</name><operator pos:start="757:73" pos:end="757:73">.</operator><name pos:start="757:74" pos:end="757:77">elem</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="759:13" pos:end="759:39"><decl pos:start="759:13" pos:end="759:38"><type pos:start="759:13" pos:end="759:15"><name pos:start="759:13" pos:end="759:15">int</name></type> <name pos:start="759:17" pos:end="759:33">display_width_mul</name>  <init pos:start="759:36" pos:end="759:38">= <expr pos:start="759:38" pos:end="759:38"><literal type="number" pos:start="759:38" pos:end="759:38">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="761:13" pos:end="761:39"><decl pos:start="761:13" pos:end="761:38"><type pos:start="761:13" pos:end="761:15"><name pos:start="761:13" pos:end="761:15">int</name></type> <name pos:start="761:17" pos:end="761:34">display_height_mul</name> <init pos:start="761:36" pos:end="761:38">= <expr pos:start="761:38" pos:end="761:38"><literal type="number" pos:start="761:38" pos:end="761:38">1</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="765:13" pos:end="765:58"><expr pos:start="765:13" pos:end="765:57"><name pos:start="765:13" pos:end="765:36"><name pos:start="765:13" pos:end="765:14">st</name><operator pos:start="765:15" pos:end="765:16">-&gt;</operator><name pos:start="765:17" pos:end="765:24">codecpar</name><operator pos:start="765:25" pos:end="765:26">-&gt;</operator><name pos:start="765:27" pos:end="765:36">codec_type</name></name> <operator pos:start="765:38" pos:end="765:38">=</operator> <name pos:start="765:40" pos:end="765:57">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="767:13" pos:end="767:46"><expr pos:start="767:13" pos:end="767:45"><name pos:start="767:13" pos:end="767:35"><name pos:start="767:13" pos:end="767:14">st</name><operator pos:start="767:15" pos:end="767:16">-&gt;</operator><name pos:start="767:17" pos:end="767:24">codecpar</name><operator pos:start="767:25" pos:end="767:26">-&gt;</operator><name pos:start="767:27" pos:end="767:35">codec_tag</name></name>  <operator pos:start="767:38" pos:end="767:38">=</operator> <name pos:start="767:40" pos:end="767:45">fourcc</name></expr>;</expr_stmt>

            <if_stmt pos:start="769:13" pos:end="771:64"><if pos:start="769:13" pos:end="771:64">if <condition pos:start="769:16" pos:end="769:31">(<expr pos:start="769:17" pos:end="769:30"><name pos:start="769:17" pos:end="769:25">bit_depth</name> <operator pos:start="769:27" pos:end="769:28">&gt;=</operator> <literal type="number" pos:start="769:30" pos:end="769:30">0</literal></expr>)</condition><block type="pseudo" pos:start="771:17" pos:end="771:64"><block_content pos:start="771:17" pos:end="771:64">

                <expr_stmt pos:start="771:17" pos:end="771:64"><expr pos:start="771:17" pos:end="771:63"><name pos:start="771:17" pos:end="771:51"><name pos:start="771:17" pos:end="771:18">st</name><operator pos:start="771:19" pos:end="771:20">-&gt;</operator><name pos:start="771:21" pos:end="771:28">codecpar</name><operator pos:start="771:29" pos:end="771:30">-&gt;</operator><name pos:start="771:31" pos:end="771:51">bits_per_coded_sample</name></name> <operator pos:start="771:53" pos:end="771:53">=</operator> <name pos:start="771:55" pos:end="771:63">bit_depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="773:13" pos:end="773:64"><expr pos:start="773:13" pos:end="773:63"><name pos:start="773:13" pos:end="773:31"><name pos:start="773:13" pos:end="773:14">st</name><operator pos:start="773:15" pos:end="773:16">-&gt;</operator><name pos:start="773:17" pos:end="773:24">codecpar</name><operator pos:start="773:25" pos:end="773:26">-&gt;</operator><name pos:start="773:27" pos:end="773:31">width</name></name>      <operator pos:start="773:38" pos:end="773:38">=</operator> <name pos:start="773:40" pos:end="773:63"><name pos:start="773:40" pos:end="773:44">track</name><operator pos:start="773:45" pos:end="773:46">-&gt;</operator><name pos:start="773:47" pos:end="773:51">video</name><operator pos:start="773:52" pos:end="773:52">.</operator><name pos:start="773:53" pos:end="773:63">pixel_width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:65"><expr pos:start="775:13" pos:end="775:64"><name pos:start="775:13" pos:end="775:32"><name pos:start="775:13" pos:end="775:14">st</name><operator pos:start="775:15" pos:end="775:16">-&gt;</operator><name pos:start="775:17" pos:end="775:24">codecpar</name><operator pos:start="775:25" pos:end="775:26">-&gt;</operator><name pos:start="775:27" pos:end="775:32">height</name></name>     <operator pos:start="775:38" pos:end="775:38">=</operator> <name pos:start="775:40" pos:end="775:64"><name pos:start="775:40" pos:end="775:44">track</name><operator pos:start="775:45" pos:end="775:46">-&gt;</operator><name pos:start="775:47" pos:end="775:51">video</name><operator pos:start="775:52" pos:end="775:52">.</operator><name pos:start="775:53" pos:end="775:64">pixel_height</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="779:13" pos:end="785:65"><if pos:start="779:13" pos:end="781:96">if <condition pos:start="779:16" pos:end="779:84">(<expr pos:start="779:17" pos:end="779:83"><name pos:start="779:17" pos:end="779:39"><name pos:start="779:17" pos:end="779:21">track</name><operator pos:start="779:22" pos:end="779:23">-&gt;</operator><name pos:start="779:24" pos:end="779:28">video</name><operator pos:start="779:29" pos:end="779:29">.</operator><name pos:start="779:30" pos:end="779:39">interlaced</name></name> <operator pos:start="779:41" pos:end="779:42">==</operator> <name pos:start="779:44" pos:end="779:83">MATROSKA_VIDEO_INTERLACE_FLAG_INTERLACED</name></expr>)</condition><block type="pseudo" pos:start="781:17" pos:end="781:96"><block_content pos:start="781:17" pos:end="781:96">

                <expr_stmt pos:start="781:17" pos:end="781:96"><expr pos:start="781:17" pos:end="781:95"><name pos:start="781:17" pos:end="781:41"><name pos:start="781:17" pos:end="781:18">st</name><operator pos:start="781:19" pos:end="781:20">-&gt;</operator><name pos:start="781:21" pos:end="781:28">codecpar</name><operator pos:start="781:29" pos:end="781:30">-&gt;</operator><name pos:start="781:31" pos:end="781:41">field_order</name></name> <operator pos:start="781:43" pos:end="781:43">=</operator> <call pos:start="781:45" pos:end="781:95"><name pos:start="781:45" pos:end="781:59">mkv_field_order</name><argument_list pos:start="781:60" pos:end="781:95">(<argument pos:start="781:61" pos:end="781:68"><expr pos:start="781:61" pos:end="781:68"><name pos:start="781:61" pos:end="781:68">matroska</name></expr></argument>, <argument pos:start="781:71" pos:end="781:94"><expr pos:start="781:71" pos:end="781:94"><name pos:start="781:71" pos:end="781:94"><name pos:start="781:71" pos:end="781:75">track</name><operator pos:start="781:76" pos:end="781:77">-&gt;</operator><name pos:start="781:78" pos:end="781:82">video</name><operator pos:start="781:83" pos:end="781:83">.</operator><name pos:start="781:84" pos:end="781:94">field_order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="783:13" pos:end="785:65">else if <condition pos:start="783:21" pos:end="783:90">(<expr pos:start="783:22" pos:end="783:89"><name pos:start="783:22" pos:end="783:44"><name pos:start="783:22" pos:end="783:26">track</name><operator pos:start="783:27" pos:end="783:28">-&gt;</operator><name pos:start="783:29" pos:end="783:33">video</name><operator pos:start="783:34" pos:end="783:34">.</operator><name pos:start="783:35" pos:end="783:44">interlaced</name></name> <operator pos:start="783:46" pos:end="783:47">==</operator> <name pos:start="783:49" pos:end="783:89">MATROSKA_VIDEO_INTERLACE_FLAG_PROGRESSIVE</name></expr>)</condition><block type="pseudo" pos:start="785:17" pos:end="785:65"><block_content pos:start="785:17" pos:end="785:65">

                <expr_stmt pos:start="785:17" pos:end="785:65"><expr pos:start="785:17" pos:end="785:64"><name pos:start="785:17" pos:end="785:41"><name pos:start="785:17" pos:end="785:18">st</name><operator pos:start="785:19" pos:end="785:20">-&gt;</operator><name pos:start="785:21" pos:end="785:28">codecpar</name><operator pos:start="785:29" pos:end="785:30">-&gt;</operator><name pos:start="785:31" pos:end="785:41">field_order</name></name> <operator pos:start="785:43" pos:end="785:43">=</operator> <name pos:start="785:45" pos:end="785:64">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="789:13" pos:end="791:111"><if pos:start="789:13" pos:end="791:111">if <condition pos:start="789:16" pos:end="789:105">(<expr pos:start="789:17" pos:end="789:104"><name pos:start="789:17" pos:end="789:40"><name pos:start="789:17" pos:end="789:21">track</name><operator pos:start="789:22" pos:end="789:23">-&gt;</operator><name pos:start="789:24" pos:end="789:28">video</name><operator pos:start="789:29" pos:end="789:29">.</operator><name pos:start="789:30" pos:end="789:40">stereo_mode</name></name> <operator pos:start="789:42" pos:end="789:43">&amp;&amp;</operator> <name pos:start="789:45" pos:end="789:68"><name pos:start="789:45" pos:end="789:49">track</name><operator pos:start="789:50" pos:end="789:51">-&gt;</operator><name pos:start="789:52" pos:end="789:56">video</name><operator pos:start="789:57" pos:end="789:57">.</operator><name pos:start="789:58" pos:end="789:68">stereo_mode</name></name> <operator pos:start="789:70" pos:end="789:70">&lt;</operator> <name pos:start="789:72" pos:end="789:104">MATROSKA_VIDEO_STEREOMODE_TYPE_NB</name></expr>)</condition><block type="pseudo" pos:start="791:17" pos:end="791:111"><block_content pos:start="791:17" pos:end="791:111">

                <expr_stmt pos:start="791:17" pos:end="791:111"><expr pos:start="791:17" pos:end="791:110"><call pos:start="791:17" pos:end="791:110"><name pos:start="791:17" pos:end="791:43">mkv_stereo_mode_display_mul</name><argument_list pos:start="791:44" pos:end="791:110">(<argument pos:start="791:45" pos:end="791:68"><expr pos:start="791:45" pos:end="791:68"><name pos:start="791:45" pos:end="791:68"><name pos:start="791:45" pos:end="791:49">track</name><operator pos:start="791:50" pos:end="791:51">-&gt;</operator><name pos:start="791:52" pos:end="791:56">video</name><operator pos:start="791:57" pos:end="791:57">.</operator><name pos:start="791:58" pos:end="791:68">stereo_mode</name></name></expr></argument>, <argument pos:start="791:71" pos:end="791:88"><expr pos:start="791:71" pos:end="791:88"><operator pos:start="791:71" pos:end="791:71">&amp;</operator><name pos:start="791:72" pos:end="791:88">display_width_mul</name></expr></argument>, <argument pos:start="791:91" pos:end="791:109"><expr pos:start="791:91" pos:end="791:109"><operator pos:start="791:91" pos:end="791:91">&amp;</operator><name pos:start="791:92" pos:end="791:109">display_height_mul</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="795:13" pos:end="807:13"><if pos:start="795:13" pos:end="807:13">if <condition pos:start="795:16" pos:end="795:79">(<expr pos:start="795:17" pos:end="795:78"><name pos:start="795:17" pos:end="795:41"><name pos:start="795:17" pos:end="795:21">track</name><operator pos:start="795:22" pos:end="795:23">-&gt;</operator><name pos:start="795:24" pos:end="795:28">video</name><operator pos:start="795:29" pos:end="795:29">.</operator><name pos:start="795:30" pos:end="795:41">display_unit</name></name> <operator pos:start="795:43" pos:end="795:43">&lt;</operator> <name pos:start="795:45" pos:end="795:78">MATROSKA_VIDEO_DISPLAYUNIT_UNKNOWN</name></expr>)</condition> <block pos:start="795:81" pos:end="807:13">{<block_content pos:start="797:17" pos:end="805:31">

                <expr_stmt pos:start="797:17" pos:end="805:31"><expr pos:start="797:17" pos:end="805:30"><call pos:start="797:17" pos:end="805:30"><name pos:start="797:17" pos:end="797:25">av_reduce</name><argument_list pos:start="797:26" pos:end="805:30">(<argument pos:start="797:27" pos:end="797:54"><expr pos:start="797:27" pos:end="797:54"><operator pos:start="797:27" pos:end="797:27">&amp;</operator><name pos:start="797:28" pos:end="797:54"><name pos:start="797:28" pos:end="797:29">st</name><operator pos:start="797:30" pos:end="797:31">-&gt;</operator><name pos:start="797:32" pos:end="797:50">sample_aspect_ratio</name><operator pos:start="797:51" pos:end="797:51">.</operator><name pos:start="797:52" pos:end="797:54">num</name></name></expr></argument>,

                          <argument pos:start="799:27" pos:end="799:54"><expr pos:start="799:27" pos:end="799:54"><operator pos:start="799:27" pos:end="799:27">&amp;</operator><name pos:start="799:28" pos:end="799:54"><name pos:start="799:28" pos:end="799:29">st</name><operator pos:start="799:30" pos:end="799:31">-&gt;</operator><name pos:start="799:32" pos:end="799:50">sample_aspect_ratio</name><operator pos:start="799:51" pos:end="799:51">.</operator><name pos:start="799:52" pos:end="799:54">den</name></name></expr></argument>,

                          <argument pos:start="801:27" pos:end="801:96"><expr pos:start="801:27" pos:end="801:96"><name pos:start="801:27" pos:end="801:46"><name pos:start="801:27" pos:end="801:28">st</name><operator pos:start="801:29" pos:end="801:30">-&gt;</operator><name pos:start="801:31" pos:end="801:38">codecpar</name><operator pos:start="801:39" pos:end="801:40">-&gt;</operator><name pos:start="801:41" pos:end="801:46">height</name></name> <operator pos:start="801:48" pos:end="801:48">*</operator> <name pos:start="801:50" pos:end="801:75"><name pos:start="801:50" pos:end="801:54">track</name><operator pos:start="801:55" pos:end="801:56">-&gt;</operator><name pos:start="801:57" pos:end="801:61">video</name><operator pos:start="801:62" pos:end="801:62">.</operator><name pos:start="801:63" pos:end="801:75">display_width</name></name>  <operator pos:start="801:78" pos:end="801:78">*</operator> <name pos:start="801:80" pos:end="801:96">display_width_mul</name></expr></argument>,

                          <argument pos:start="803:27" pos:end="803:97"><expr pos:start="803:27" pos:end="803:97"><name pos:start="803:27" pos:end="803:45"><name pos:start="803:27" pos:end="803:28">st</name><operator pos:start="803:29" pos:end="803:30">-&gt;</operator><name pos:start="803:31" pos:end="803:38">codecpar</name><operator pos:start="803:39" pos:end="803:40">-&gt;</operator><name pos:start="803:41" pos:end="803:45">width</name></name>  <operator pos:start="803:48" pos:end="803:48">*</operator> <name pos:start="803:50" pos:end="803:76"><name pos:start="803:50" pos:end="803:54">track</name><operator pos:start="803:55" pos:end="803:56">-&gt;</operator><name pos:start="803:57" pos:end="803:61">video</name><operator pos:start="803:62" pos:end="803:62">.</operator><name pos:start="803:63" pos:end="803:76">display_height</name></name> <operator pos:start="803:78" pos:end="803:78">*</operator> <name pos:start="803:80" pos:end="803:97">display_height_mul</name></expr></argument>,

                          <argument pos:start="805:27" pos:end="805:29"><expr pos:start="805:27" pos:end="805:29"><literal type="number" pos:start="805:27" pos:end="805:29">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="809:13" pos:end="811:58"><if pos:start="809:13" pos:end="811:58">if <condition pos:start="809:16" pos:end="809:59">(<expr pos:start="809:17" pos:end="809:58"><name pos:start="809:17" pos:end="809:38"><name pos:start="809:17" pos:end="809:18">st</name><operator pos:start="809:19" pos:end="809:20">-&gt;</operator><name pos:start="809:21" pos:end="809:28">codecpar</name><operator pos:start="809:29" pos:end="809:30">-&gt;</operator><name pos:start="809:31" pos:end="809:38">codec_id</name></name> <operator pos:start="809:40" pos:end="809:41">!=</operator> <name pos:start="809:43" pos:end="809:58">AV_CODEC_ID_HEVC</name></expr>)</condition><block type="pseudo" pos:start="811:17" pos:end="811:58"><block_content pos:start="811:17" pos:end="811:58">

                <expr_stmt pos:start="811:17" pos:end="811:58"><expr pos:start="811:17" pos:end="811:57"><name pos:start="811:17" pos:end="811:32"><name pos:start="811:17" pos:end="811:18">st</name><operator pos:start="811:19" pos:end="811:20">-&gt;</operator><name pos:start="811:21" pos:end="811:32">need_parsing</name></name> <operator pos:start="811:34" pos:end="811:34">=</operator> <name pos:start="811:36" pos:end="811:57">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="815:13" pos:end="831:13"><if pos:start="815:13" pos:end="831:13">if <condition pos:start="815:16" pos:end="815:40">(<expr pos:start="815:17" pos:end="815:39"><name pos:start="815:17" pos:end="815:39"><name pos:start="815:17" pos:end="815:21">track</name><operator pos:start="815:22" pos:end="815:23">-&gt;</operator><name pos:start="815:24" pos:end="815:39">default_duration</name></name></expr>)</condition> <block pos:start="815:42" pos:end="831:13">{<block_content pos:start="817:17" pos:end="830:0">

                <expr_stmt pos:start="817:17" pos:end="822:0"><expr pos:start="817:17" pos:end="819:69"><call pos:start="817:17" pos:end="819:69"><name pos:start="817:17" pos:end="817:25">av_reduce</name><argument_list pos:start="817:26" pos:end="819:69">(<argument pos:start="817:27" pos:end="817:49"><expr pos:start="817:27" pos:end="817:49"><operator pos:start="817:27" pos:end="817:27">&amp;</operator><name pos:start="817:28" pos:end="817:49"><name pos:start="817:28" pos:end="817:29">st</name><operator pos:start="817:30" pos:end="817:31">-&gt;</operator><name pos:start="817:32" pos:end="817:45">avg_frame_rate</name><operator pos:start="817:46" pos:end="817:46">.</operator><name pos:start="817:47" pos:end="817:49">num</name></name></expr></argument>, <argument pos:start="817:52" pos:end="817:74"><expr pos:start="817:52" pos:end="817:74"><operator pos:start="817:52" pos:end="817:52">&amp;</operator><name pos:start="817:53" pos:end="817:74"><name pos:start="817:53" pos:end="817:54">st</name><operator pos:start="817:55" pos:end="817:56">-&gt;</operator><name pos:start="817:57" pos:end="817:70">avg_frame_rate</name><operator pos:start="817:71" pos:end="817:71">.</operator><name pos:start="817:72" pos:end="817:74">den</name></name></expr></argument>,

                          <argument pos:start="819:27" pos:end="819:36"><expr pos:start="819:27" pos:end="819:36"><literal type="number" pos:start="819:27" pos:end="819:36">1000000000</literal></expr></argument>, <argument pos:start="819:39" pos:end="819:61"><expr pos:start="819:39" pos:end="819:61"><name pos:start="819:39" pos:end="819:61"><name pos:start="819:39" pos:end="819:43">track</name><operator pos:start="819:44" pos:end="819:45">-&gt;</operator><name pos:start="819:46" pos:end="819:61">default_duration</name></name></expr></argument>, <argument pos:start="819:64" pos:end="819:68"><expr pos:start="819:64" pos:end="819:68"><literal type="number" pos:start="819:64" pos:end="819:68">30000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="821:1" pos:end="821:23">#<cpp:directive pos:start="821:2" pos:end="821:3">if</cpp:directive> <expr pos:start="821:5" pos:end="821:23"><name pos:start="821:5" pos:end="821:23">FF_API_R_FRAME_RATE</name></expr></cpp:if>

                <if_stmt pos:start="823:17" pos:end="830:0"><if pos:start="823:17" pos:end="830:0">if <condition pos:start="823:20" pos:end="825:77">(   <expr pos:start="823:24" pos:end="825:76"><name pos:start="823:24" pos:end="823:45"><name pos:start="823:24" pos:end="823:25">st</name><operator pos:start="823:26" pos:end="823:27">-&gt;</operator><name pos:start="823:28" pos:end="823:41">avg_frame_rate</name><operator pos:start="823:42" pos:end="823:42">.</operator><name pos:start="823:43" pos:end="823:45">num</name></name> <operator pos:start="823:47" pos:end="823:47">&lt;</operator> <name pos:start="823:49" pos:end="823:70"><name pos:start="823:49" pos:end="823:50">st</name><operator pos:start="823:51" pos:end="823:52">-&gt;</operator><name pos:start="823:53" pos:end="823:66">avg_frame_rate</name><operator pos:start="823:67" pos:end="823:67">.</operator><name pos:start="823:68" pos:end="823:70">den</name></name> <operator pos:start="823:72" pos:end="823:72">*</operator> <literal type="number" pos:start="823:74" pos:end="823:79">1000LL</literal>

                    <operator pos:start="825:21" pos:end="825:22">&amp;&amp;</operator> <name pos:start="825:24" pos:end="825:45"><name pos:start="825:24" pos:end="825:25">st</name><operator pos:start="825:26" pos:end="825:27">-&gt;</operator><name pos:start="825:28" pos:end="825:41">avg_frame_rate</name><operator pos:start="825:42" pos:end="825:42">.</operator><name pos:start="825:43" pos:end="825:45">num</name></name> <operator pos:start="825:47" pos:end="825:47">&gt;</operator> <name pos:start="825:49" pos:end="825:70"><name pos:start="825:49" pos:end="825:50">st</name><operator pos:start="825:51" pos:end="825:52">-&gt;</operator><name pos:start="825:53" pos:end="825:66">avg_frame_rate</name><operator pos:start="825:67" pos:end="825:67">.</operator><name pos:start="825:68" pos:end="825:70">den</name></name> <operator pos:start="825:72" pos:end="825:72">*</operator> <literal type="number" pos:start="825:74" pos:end="825:76">5LL</literal></expr>)</condition><block type="pseudo" pos:start="827:21" pos:end="830:0"><block_content pos:start="827:21" pos:end="830:0">

                    <expr_stmt pos:start="827:21" pos:end="830:0"><expr pos:start="827:21" pos:end="827:57"><name pos:start="827:21" pos:end="827:36"><name pos:start="827:21" pos:end="827:22">st</name><operator pos:start="827:23" pos:end="827:24">-&gt;</operator><name pos:start="827:25" pos:end="827:36">r_frame_rate</name></name> <operator pos:start="827:38" pos:end="827:38">=</operator> <name pos:start="827:40" pos:end="827:57"><name pos:start="827:40" pos:end="827:41">st</name><operator pos:start="827:42" pos:end="827:43">-&gt;</operator><name pos:start="827:44" pos:end="827:57">avg_frame_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="829:1" pos:end="829:6">#<cpp:directive pos:start="829:2" pos:end="829:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="835:13" pos:end="835:57">/* export stereo mode flag as metadata tag */</comment>

            <if_stmt pos:start="837:13" pos:end="839:118"><if pos:start="837:13" pos:end="839:118">if <condition pos:start="837:16" pos:end="837:105">(<expr pos:start="837:17" pos:end="837:104"><name pos:start="837:17" pos:end="837:40"><name pos:start="837:17" pos:end="837:21">track</name><operator pos:start="837:22" pos:end="837:23">-&gt;</operator><name pos:start="837:24" pos:end="837:28">video</name><operator pos:start="837:29" pos:end="837:29">.</operator><name pos:start="837:30" pos:end="837:40">stereo_mode</name></name> <operator pos:start="837:42" pos:end="837:43">&amp;&amp;</operator> <name pos:start="837:45" pos:end="837:68"><name pos:start="837:45" pos:end="837:49">track</name><operator pos:start="837:50" pos:end="837:51">-&gt;</operator><name pos:start="837:52" pos:end="837:56">video</name><operator pos:start="837:57" pos:end="837:57">.</operator><name pos:start="837:58" pos:end="837:68">stereo_mode</name></name> <operator pos:start="837:70" pos:end="837:70">&lt;</operator> <name pos:start="837:72" pos:end="837:104">MATROSKA_VIDEO_STEREOMODE_TYPE_NB</name></expr>)</condition><block type="pseudo" pos:start="839:17" pos:end="839:118"><block_content pos:start="839:17" pos:end="839:118">

                <expr_stmt pos:start="839:17" pos:end="839:118"><expr pos:start="839:17" pos:end="839:117"><call pos:start="839:17" pos:end="839:117"><name pos:start="839:17" pos:end="839:27">av_dict_set</name><argument_list pos:start="839:28" pos:end="839:117">(<argument pos:start="839:29" pos:end="839:41"><expr pos:start="839:29" pos:end="839:41"><operator pos:start="839:29" pos:end="839:29">&amp;</operator><name pos:start="839:30" pos:end="839:41"><name pos:start="839:30" pos:end="839:31">st</name><operator pos:start="839:32" pos:end="839:33">-&gt;</operator><name pos:start="839:34" pos:end="839:41">metadata</name></name></expr></argument>, <argument pos:start="839:44" pos:end="839:56"><expr pos:start="839:44" pos:end="839:56"><literal type="string" pos:start="839:44" pos:end="839:56">"stereo_mode"</literal></expr></argument>, <argument pos:start="839:59" pos:end="839:113"><expr pos:start="839:59" pos:end="839:113"><name pos:start="839:59" pos:end="839:113"><name pos:start="839:59" pos:end="839:87">ff_matroska_video_stereo_mode</name><index pos:start="839:88" pos:end="839:113">[<expr pos:start="839:89" pos:end="839:112"><name pos:start="839:89" pos:end="839:112"><name pos:start="839:89" pos:end="839:93">track</name><operator pos:start="839:94" pos:end="839:95">-&gt;</operator><name pos:start="839:96" pos:end="839:100">video</name><operator pos:start="839:101" pos:end="839:101">.</operator><name pos:start="839:102" pos:end="839:112">stereo_mode</name></name></expr>]</index></name></expr></argument>, <argument pos:start="839:116" pos:end="839:116"><expr pos:start="839:116" pos:end="839:116"><literal type="number" pos:start="839:116" pos:end="839:116">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="843:13" pos:end="843:57">/* export alpha mode flag as metadata tag  */</comment>

            <if_stmt pos:start="845:13" pos:end="847:65"><if pos:start="845:13" pos:end="847:65">if <condition pos:start="845:16" pos:end="845:40">(<expr pos:start="845:17" pos:end="845:39"><name pos:start="845:17" pos:end="845:39"><name pos:start="845:17" pos:end="845:21">track</name><operator pos:start="845:22" pos:end="845:23">-&gt;</operator><name pos:start="845:24" pos:end="845:28">video</name><operator pos:start="845:29" pos:end="845:29">.</operator><name pos:start="845:30" pos:end="845:39">alpha_mode</name></name></expr>)</condition><block type="pseudo" pos:start="847:17" pos:end="847:65"><block_content pos:start="847:17" pos:end="847:65">

                <expr_stmt pos:start="847:17" pos:end="847:65"><expr pos:start="847:17" pos:end="847:64"><call pos:start="847:17" pos:end="847:64"><name pos:start="847:17" pos:end="847:27">av_dict_set</name><argument_list pos:start="847:28" pos:end="847:64">(<argument pos:start="847:29" pos:end="847:41"><expr pos:start="847:29" pos:end="847:41"><operator pos:start="847:29" pos:end="847:29">&amp;</operator><name pos:start="847:30" pos:end="847:41"><name pos:start="847:30" pos:end="847:31">st</name><operator pos:start="847:32" pos:end="847:33">-&gt;</operator><name pos:start="847:34" pos:end="847:41">metadata</name></name></expr></argument>, <argument pos:start="847:44" pos:end="847:55"><expr pos:start="847:44" pos:end="847:55"><literal type="string" pos:start="847:44" pos:end="847:55">"alpha_mode"</literal></expr></argument>, <argument pos:start="847:58" pos:end="847:60"><expr pos:start="847:58" pos:end="847:60"><literal type="string" pos:start="847:58" pos:end="847:60">"1"</literal></expr></argument>, <argument pos:start="847:63" pos:end="847:63"><expr pos:start="847:63" pos:end="847:63"><literal type="number" pos:start="847:63" pos:end="847:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="851:13" pos:end="851:64">/* if we have virtual track, mark the real tracks */</comment>

            <for pos:start="853:13" pos:end="877:13">for <control pos:start="853:17" pos:end="853:71">(<init pos:start="853:18" pos:end="853:21"><expr pos:start="853:18" pos:end="853:20"><name pos:start="853:18" pos:end="853:18">j</name><operator pos:start="853:19" pos:end="853:19">=</operator><literal type="number" pos:start="853:20" pos:end="853:20">0</literal></expr>;</init> <condition pos:start="853:23" pos:end="853:66"><expr pos:start="853:23" pos:end="853:65"><name pos:start="853:23" pos:end="853:23">j</name> <operator pos:start="853:25" pos:end="853:25">&lt;</operator> <name pos:start="853:27" pos:end="853:65"><name pos:start="853:27" pos:end="853:31">track</name><operator pos:start="853:32" pos:end="853:33">-&gt;</operator><name pos:start="853:34" pos:end="853:42">operation</name><operator pos:start="853:43" pos:end="853:43">.</operator><name pos:start="853:44" pos:end="853:57">combine_planes</name><operator pos:start="853:58" pos:end="853:58">.</operator><name pos:start="853:59" pos:end="853:65">nb_elem</name></name></expr>;</condition> <incr pos:start="853:68" pos:end="853:70"><expr pos:start="853:68" pos:end="853:70"><name pos:start="853:68" pos:end="853:68">j</name><operator pos:start="853:69" pos:end="853:70">++</operator></expr></incr>)</control> <block pos:start="853:73" pos:end="877:13">{<block_content pos:start="855:17" pos:end="875:21">

                <decl_stmt pos:start="855:17" pos:end="855:29"><decl pos:start="855:17" pos:end="855:28"><type pos:start="855:17" pos:end="855:20"><name pos:start="855:17" pos:end="855:20">char</name></type> <name pos:start="855:22" pos:end="855:28"><name pos:start="855:22" pos:end="855:24">buf</name><index pos:start="855:25" pos:end="855:28">[<expr pos:start="855:26" pos:end="855:27"><literal type="number" pos:start="855:26" pos:end="855:27">32</literal></expr>]</index></name></decl>;</decl_stmt>

                <if_stmt pos:start="857:17" pos:end="859:29"><if pos:start="857:17" pos:end="859:29">if <condition pos:start="857:20" pos:end="857:72">(<expr pos:start="857:21" pos:end="857:71"><name pos:start="857:21" pos:end="857:29"><name pos:start="857:21" pos:end="857:26">planes</name><index pos:start="857:27" pos:end="857:29">[<expr pos:start="857:28" pos:end="857:28"><name pos:start="857:28" pos:end="857:28">j</name></expr>]</index></name><operator pos:start="857:30" pos:end="857:30">.</operator><name pos:start="857:31" pos:end="857:34">type</name> <operator pos:start="857:36" pos:end="857:37">&gt;=</operator> <name pos:start="857:39" pos:end="857:71">MATROSKA_VIDEO_STEREO_PLANE_COUNT</name></expr>)</condition><block type="pseudo" pos:start="859:21" pos:end="859:29"><block_content pos:start="859:21" pos:end="859:29">

                    <continue pos:start="859:21" pos:end="859:29">continue;</continue></block_content></block></if></if_stmt>

                <expr_stmt pos:start="861:17" pos:end="863:76"><expr pos:start="861:17" pos:end="863:75"><call pos:start="861:17" pos:end="863:75"><name pos:start="861:17" pos:end="861:24">snprintf</name><argument_list pos:start="861:25" pos:end="863:75">(<argument pos:start="861:26" pos:end="861:28"><expr pos:start="861:26" pos:end="861:28"><name pos:start="861:26" pos:end="861:28">buf</name></expr></argument>, <argument pos:start="861:31" pos:end="861:41"><expr pos:start="861:31" pos:end="861:41"><sizeof pos:start="861:31" pos:end="861:41">sizeof<argument_list pos:start="861:37" pos:end="861:41">(<argument pos:start="861:38" pos:end="861:40"><expr pos:start="861:38" pos:end="861:40"><name pos:start="861:38" pos:end="861:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="861:44" pos:end="861:50"><expr pos:start="861:44" pos:end="861:50"><literal type="string" pos:start="861:44" pos:end="861:50">"%s_%d"</literal></expr></argument>,

                         <argument pos:start="863:26" pos:end="863:71"><expr pos:start="863:26" pos:end="863:71"><name pos:start="863:26" pos:end="863:71"><name pos:start="863:26" pos:end="863:55">ff_matroska_video_stereo_plane</name><index pos:start="863:56" pos:end="863:71">[<expr pos:start="863:57" pos:end="863:70"><name pos:start="863:57" pos:end="863:65"><name pos:start="863:57" pos:end="863:62">planes</name><index pos:start="863:63" pos:end="863:65">[<expr pos:start="863:64" pos:end="863:64"><name pos:start="863:64" pos:end="863:64">j</name></expr>]</index></name><operator pos:start="863:66" pos:end="863:66">.</operator><name pos:start="863:67" pos:end="863:70">type</name></expr>]</index></name></expr></argument>, <argument pos:start="863:74" pos:end="863:74"><expr pos:start="863:74" pos:end="863:74"><name pos:start="863:74" pos:end="863:74">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="865:17" pos:end="875:21">for <control pos:start="865:21" pos:end="865:60">(<init pos:start="865:22" pos:end="865:25"><expr pos:start="865:22" pos:end="865:24"><name pos:start="865:22" pos:end="865:22">k</name><operator pos:start="865:23" pos:end="865:23">=</operator><literal type="number" pos:start="865:24" pos:end="865:24">0</literal></expr>;</init> <condition pos:start="865:27" pos:end="865:55"><expr pos:start="865:27" pos:end="865:54"><name pos:start="865:27" pos:end="865:27">k</name> <operator pos:start="865:29" pos:end="865:29">&lt;</operator> <name pos:start="865:31" pos:end="865:54"><name pos:start="865:31" pos:end="865:38">matroska</name><operator pos:start="865:39" pos:end="865:40">-&gt;</operator><name pos:start="865:41" pos:end="865:46">tracks</name><operator pos:start="865:47" pos:end="865:47">.</operator><name pos:start="865:48" pos:end="865:54">nb_elem</name></name></expr>;</condition> <incr pos:start="865:57" pos:end="865:59"><expr pos:start="865:57" pos:end="865:59"><name pos:start="865:57" pos:end="865:57">k</name><operator pos:start="865:58" pos:end="865:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="867:21" pos:end="875:21"><block_content pos:start="867:21" pos:end="875:21">

                    <if_stmt pos:start="867:21" pos:end="875:21"><if pos:start="867:21" pos:end="875:21">if <condition pos:start="867:24" pos:end="867:75">(<expr pos:start="867:25" pos:end="867:74"><name pos:start="867:25" pos:end="867:33"><name pos:start="867:25" pos:end="867:30">planes</name><index pos:start="867:31" pos:end="867:33">[<expr pos:start="867:32" pos:end="867:32"><name pos:start="867:32" pos:end="867:32">j</name></expr>]</index></name><operator pos:start="867:34" pos:end="867:34">.</operator><name pos:start="867:35" pos:end="867:37">uid</name> <operator pos:start="867:39" pos:end="867:40">==</operator> <name pos:start="867:42" pos:end="867:50"><name pos:start="867:42" pos:end="867:47">tracks</name><index pos:start="867:48" pos:end="867:50">[<expr pos:start="867:49" pos:end="867:49"><name pos:start="867:49" pos:end="867:49">k</name></expr>]</index></name><operator pos:start="867:51" pos:end="867:51">.</operator><name pos:start="867:52" pos:end="867:54">uid</name> <operator pos:start="867:56" pos:end="867:57">&amp;&amp;</operator> <name pos:start="867:59" pos:end="867:67"><name pos:start="867:59" pos:end="867:64">tracks</name><index pos:start="867:65" pos:end="867:67">[<expr pos:start="867:66" pos:end="867:66"><name pos:start="867:66" pos:end="867:66">k</name></expr>]</index></name><operator pos:start="867:68" pos:end="867:68">.</operator><name pos:start="867:69" pos:end="867:74">stream</name></expr>)</condition> <block pos:start="867:77" pos:end="875:21">{<block_content pos:start="869:25" pos:end="873:30">

                        <expr_stmt pos:start="869:25" pos:end="871:59"><expr pos:start="869:25" pos:end="871:58"><call pos:start="869:25" pos:end="871:58"><name pos:start="869:25" pos:end="869:35">av_dict_set</name><argument_list pos:start="869:36" pos:end="871:58">(<argument pos:start="869:37" pos:end="869:63"><expr pos:start="869:37" pos:end="869:63"><operator pos:start="869:37" pos:end="869:37">&amp;</operator><name pos:start="869:38" pos:end="869:46"><name pos:start="869:38" pos:end="869:43">tracks</name><index pos:start="869:44" pos:end="869:46">[<expr pos:start="869:45" pos:end="869:45"><name pos:start="869:45" pos:end="869:45">k</name></expr>]</index></name><operator pos:start="869:47" pos:end="869:47">.</operator><name pos:start="869:48" pos:end="869:63"><name pos:start="869:48" pos:end="869:53">stream</name><operator pos:start="869:54" pos:end="869:55">-&gt;</operator><name pos:start="869:56" pos:end="869:63">metadata</name></name></expr></argument>,

                                    <argument pos:start="871:37" pos:end="871:49"><expr pos:start="871:37" pos:end="871:49"><literal type="string" pos:start="871:37" pos:end="871:49">"stereo_mode"</literal></expr></argument>, <argument pos:start="871:52" pos:end="871:54"><expr pos:start="871:52" pos:end="871:54"><name pos:start="871:52" pos:end="871:54">buf</name></expr></argument>, <argument pos:start="871:57" pos:end="871:57"><expr pos:start="871:57" pos:end="871:57"><literal type="number" pos:start="871:57" pos:end="871:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="873:25" pos:end="873:30">break;</break>

                    </block_content>}</block></if></if_stmt></block_content></block></for>

            </block_content>}</block></for>

            <comment type="line" pos:start="879:13" pos:end="879:78">// add stream level stereo3d side data if it is a supported format</comment>

            <if_stmt pos:start="881:13" pos:end="891:13"><if pos:start="881:13" pos:end="891:13">if <condition pos:start="881:16" pos:end="883:81">(<expr pos:start="881:17" pos:end="883:80"><name pos:start="881:17" pos:end="881:40"><name pos:start="881:17" pos:end="881:21">track</name><operator pos:start="881:22" pos:end="881:23">-&gt;</operator><name pos:start="881:24" pos:end="881:28">video</name><operator pos:start="881:29" pos:end="881:29">.</operator><name pos:start="881:30" pos:end="881:40">stereo_mode</name></name> <operator pos:start="881:42" pos:end="881:42">&lt;</operator> <name pos:start="881:44" pos:end="881:76">MATROSKA_VIDEO_STEREOMODE_TYPE_NB</name> <operator pos:start="881:78" pos:end="881:79">&amp;&amp;</operator>

                <name pos:start="883:17" pos:end="883:40"><name pos:start="883:17" pos:end="883:21">track</name><operator pos:start="883:22" pos:end="883:23">-&gt;</operator><name pos:start="883:24" pos:end="883:28">video</name><operator pos:start="883:29" pos:end="883:29">.</operator><name pos:start="883:30" pos:end="883:40">stereo_mode</name></name> <operator pos:start="883:42" pos:end="883:43">!=</operator> <literal type="number" pos:start="883:45" pos:end="883:46">10</literal> <operator pos:start="883:48" pos:end="883:49">&amp;&amp;</operator> <name pos:start="883:51" pos:end="883:74"><name pos:start="883:51" pos:end="883:55">track</name><operator pos:start="883:56" pos:end="883:57">-&gt;</operator><name pos:start="883:58" pos:end="883:62">video</name><operator pos:start="883:63" pos:end="883:63">.</operator><name pos:start="883:64" pos:end="883:74">stereo_mode</name></name> <operator pos:start="883:76" pos:end="883:77">!=</operator> <literal type="number" pos:start="883:79" pos:end="883:80">12</literal></expr>)</condition> <block pos:start="883:83" pos:end="891:13">{<block_content pos:start="885:17" pos:end="889:31">

                <decl_stmt pos:start="885:17" pos:end="885:77"><decl pos:start="885:17" pos:end="885:76"><type pos:start="885:17" pos:end="885:19"><name pos:start="885:17" pos:end="885:19">int</name></type> <name pos:start="885:21" pos:end="885:23">ret</name> <init pos:start="885:25" pos:end="885:76">= <expr pos:start="885:27" pos:end="885:76"><call pos:start="885:27" pos:end="885:76"><name pos:start="885:27" pos:end="885:46">ff_mkv_stereo3d_conv</name><argument_list pos:start="885:47" pos:end="885:76">(<argument pos:start="885:48" pos:end="885:49"><expr pos:start="885:48" pos:end="885:49"><name pos:start="885:48" pos:end="885:49">st</name></expr></argument>, <argument pos:start="885:52" pos:end="885:75"><expr pos:start="885:52" pos:end="885:75"><name pos:start="885:52" pos:end="885:75"><name pos:start="885:52" pos:end="885:56">track</name><operator pos:start="885:57" pos:end="885:58">-&gt;</operator><name pos:start="885:59" pos:end="885:63">video</name><operator pos:start="885:64" pos:end="885:64">.</operator><name pos:start="885:65" pos:end="885:75">stereo_mode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="887:17" pos:end="889:31"><if pos:start="887:17" pos:end="889:31">if <condition pos:start="887:20" pos:end="887:28">(<expr pos:start="887:21" pos:end="887:27"><name pos:start="887:21" pos:end="887:23">ret</name> <operator pos:start="887:25" pos:end="887:25">&lt;</operator> <literal type="number" pos:start="887:27" pos:end="887:27">0</literal></expr>)</condition><block type="pseudo" pos:start="889:21" pos:end="889:31"><block_content pos:start="889:21" pos:end="889:31">

                    <return pos:start="889:21" pos:end="889:31">return <expr pos:start="889:28" pos:end="889:30"><name pos:start="889:28" pos:end="889:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="895:13" pos:end="895:51"><expr pos:start="895:13" pos:end="895:50"><name pos:start="895:13" pos:end="895:15">ret</name> <operator pos:start="895:17" pos:end="895:17">=</operator> <call pos:start="895:19" pos:end="895:50"><name pos:start="895:19" pos:end="895:39">mkv_parse_video_color</name><argument_list pos:start="895:40" pos:end="895:50">(<argument pos:start="895:41" pos:end="895:42"><expr pos:start="895:41" pos:end="895:42"><name pos:start="895:41" pos:end="895:42">st</name></expr></argument>, <argument pos:start="895:45" pos:end="895:49"><expr pos:start="895:45" pos:end="895:49"><name pos:start="895:45" pos:end="895:49">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="897:13" pos:end="899:27"><if pos:start="897:13" pos:end="899:27">if <condition pos:start="897:16" pos:end="897:24">(<expr pos:start="897:17" pos:end="897:23"><name pos:start="897:17" pos:end="897:19">ret</name> <operator pos:start="897:21" pos:end="897:21">&lt;</operator> <literal type="number" pos:start="897:23" pos:end="897:23">0</literal></expr>)</condition><block type="pseudo" pos:start="899:17" pos:end="899:27"><block_content pos:start="899:17" pos:end="899:27">

                <return pos:start="899:17" pos:end="899:27">return <expr pos:start="899:24" pos:end="899:26"><name pos:start="899:24" pos:end="899:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="901:13" pos:end="901:56"><expr pos:start="901:13" pos:end="901:55"><name pos:start="901:13" pos:end="901:15">ret</name> <operator pos:start="901:17" pos:end="901:17">=</operator> <call pos:start="901:19" pos:end="901:55"><name pos:start="901:19" pos:end="901:44">mkv_parse_video_projection</name><argument_list pos:start="901:45" pos:end="901:55">(<argument pos:start="901:46" pos:end="901:47"><expr pos:start="901:46" pos:end="901:47"><name pos:start="901:46" pos:end="901:47">st</name></expr></argument>, <argument pos:start="901:50" pos:end="901:54"><expr pos:start="901:50" pos:end="901:54"><name pos:start="901:50" pos:end="901:54">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="903:13" pos:end="905:27"><if pos:start="903:13" pos:end="905:27">if <condition pos:start="903:16" pos:end="903:24">(<expr pos:start="903:17" pos:end="903:23"><name pos:start="903:17" pos:end="903:19">ret</name> <operator pos:start="903:21" pos:end="903:21">&lt;</operator> <literal type="number" pos:start="903:23" pos:end="903:23">0</literal></expr>)</condition><block type="pseudo" pos:start="905:17" pos:end="905:27"><block_content pos:start="905:17" pos:end="905:27">

                <return pos:start="905:17" pos:end="905:27">return <expr pos:start="905:24" pos:end="905:26"><name pos:start="905:24" pos:end="905:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="907:11" pos:end="951:9">else if <condition pos:start="907:19" pos:end="907:60">(<expr pos:start="907:20" pos:end="907:59"><name pos:start="907:20" pos:end="907:30"><name pos:start="907:20" pos:end="907:24">track</name><operator pos:start="907:25" pos:end="907:26">-&gt;</operator><name pos:start="907:27" pos:end="907:30">type</name></name> <operator pos:start="907:32" pos:end="907:33">==</operator> <name pos:start="907:35" pos:end="907:59">MATROSKA_TRACK_TYPE_AUDIO</name></expr>)</condition> <block pos:start="907:62" pos:end="951:9">{<block_content pos:start="909:13" pos:end="949:13">

            <expr_stmt pos:start="909:13" pos:end="909:59"><expr pos:start="909:13" pos:end="909:58"><name pos:start="909:13" pos:end="909:36"><name pos:start="909:13" pos:end="909:14">st</name><operator pos:start="909:15" pos:end="909:16">-&gt;</operator><name pos:start="909:17" pos:end="909:24">codecpar</name><operator pos:start="909:25" pos:end="909:26">-&gt;</operator><name pos:start="909:27" pos:end="909:36">codec_type</name></name>  <operator pos:start="909:39" pos:end="909:39">=</operator> <name pos:start="909:41" pos:end="909:58">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="911:13" pos:end="911:47"><expr pos:start="911:13" pos:end="911:46"><name pos:start="911:13" pos:end="911:35"><name pos:start="911:13" pos:end="911:14">st</name><operator pos:start="911:15" pos:end="911:16">-&gt;</operator><name pos:start="911:17" pos:end="911:24">codecpar</name><operator pos:start="911:25" pos:end="911:26">-&gt;</operator><name pos:start="911:27" pos:end="911:35">codec_tag</name></name>   <operator pos:start="911:39" pos:end="911:39">=</operator> <name pos:start="911:41" pos:end="911:46">fourcc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="913:13" pos:end="913:68"><expr pos:start="913:13" pos:end="913:67"><name pos:start="913:13" pos:end="913:37"><name pos:start="913:13" pos:end="913:14">st</name><operator pos:start="913:15" pos:end="913:16">-&gt;</operator><name pos:start="913:17" pos:end="913:24">codecpar</name><operator pos:start="913:25" pos:end="913:26">-&gt;</operator><name pos:start="913:27" pos:end="913:37">sample_rate</name></name> <operator pos:start="913:39" pos:end="913:39">=</operator> <name pos:start="913:41" pos:end="913:67"><name pos:start="913:41" pos:end="913:45">track</name><operator pos:start="913:46" pos:end="913:47">-&gt;</operator><name pos:start="913:48" pos:end="913:52">audio</name><operator pos:start="913:53" pos:end="913:53">.</operator><name pos:start="913:54" pos:end="913:67">out_samplerate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="915:13" pos:end="915:62"><expr pos:start="915:13" pos:end="915:61"><name pos:start="915:13" pos:end="915:34"><name pos:start="915:13" pos:end="915:14">st</name><operator pos:start="915:15" pos:end="915:16">-&gt;</operator><name pos:start="915:17" pos:end="915:24">codecpar</name><operator pos:start="915:25" pos:end="915:26">-&gt;</operator><name pos:start="915:27" pos:end="915:34">channels</name></name>    <operator pos:start="915:39" pos:end="915:39">=</operator> <name pos:start="915:41" pos:end="915:61"><name pos:start="915:41" pos:end="915:45">track</name><operator pos:start="915:46" pos:end="915:47">-&gt;</operator><name pos:start="915:48" pos:end="915:52">audio</name><operator pos:start="915:53" pos:end="915:53">.</operator><name pos:start="915:54" pos:end="915:61">channels</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="917:13" pos:end="919:76"><if pos:start="917:13" pos:end="919:76">if <condition pos:start="917:16" pos:end="917:53">(<expr pos:start="917:17" pos:end="917:52"><operator pos:start="917:17" pos:end="917:17">!</operator><name pos:start="917:18" pos:end="917:52"><name pos:start="917:18" pos:end="917:19">st</name><operator pos:start="917:20" pos:end="917:21">-&gt;</operator><name pos:start="917:22" pos:end="917:29">codecpar</name><operator pos:start="917:30" pos:end="917:31">-&gt;</operator><name pos:start="917:32" pos:end="917:52">bits_per_coded_sample</name></name></expr>)</condition><block type="pseudo" pos:start="919:17" pos:end="919:76"><block_content pos:start="919:17" pos:end="919:76">

                <expr_stmt pos:start="919:17" pos:end="919:76"><expr pos:start="919:17" pos:end="919:75"><name pos:start="919:17" pos:end="919:51"><name pos:start="919:17" pos:end="919:18">st</name><operator pos:start="919:19" pos:end="919:20">-&gt;</operator><name pos:start="919:21" pos:end="919:28">codecpar</name><operator pos:start="919:29" pos:end="919:30">-&gt;</operator><name pos:start="919:31" pos:end="919:51">bits_per_coded_sample</name></name> <operator pos:start="919:53" pos:end="919:53">=</operator> <name pos:start="919:55" pos:end="919:75"><name pos:start="919:55" pos:end="919:59">track</name><operator pos:start="919:60" pos:end="919:61">-&gt;</operator><name pos:start="919:62" pos:end="919:66">audio</name><operator pos:start="919:67" pos:end="919:67">.</operator><name pos:start="919:68" pos:end="919:75">bitdepth</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="921:13" pos:end="927:58"><if pos:start="921:13" pos:end="923:55">if <condition pos:start="921:16" pos:end="921:58">(<expr pos:start="921:17" pos:end="921:57"><name pos:start="921:17" pos:end="921:38"><name pos:start="921:17" pos:end="921:18">st</name><operator pos:start="921:19" pos:end="921:20">-&gt;</operator><name pos:start="921:21" pos:end="921:28">codecpar</name><operator pos:start="921:29" pos:end="921:30">-&gt;</operator><name pos:start="921:31" pos:end="921:38">codec_id</name></name> <operator pos:start="921:40" pos:end="921:41">==</operator> <name pos:start="921:43" pos:end="921:57">AV_CODEC_ID_MP3</name></expr>)</condition><block type="pseudo" pos:start="923:17" pos:end="923:55"><block_content pos:start="923:17" pos:end="923:55">

                <expr_stmt pos:start="923:17" pos:end="923:55"><expr pos:start="923:17" pos:end="923:54"><name pos:start="923:17" pos:end="923:32"><name pos:start="923:17" pos:end="923:18">st</name><operator pos:start="923:19" pos:end="923:20">-&gt;</operator><name pos:start="923:21" pos:end="923:32">need_parsing</name></name> <operator pos:start="923:34" pos:end="923:34">=</operator> <name pos:start="923:36" pos:end="923:54">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="925:13" pos:end="927:58">else if <condition pos:start="925:21" pos:end="925:63">(<expr pos:start="925:22" pos:end="925:62"><name pos:start="925:22" pos:end="925:43"><name pos:start="925:22" pos:end="925:23">st</name><operator pos:start="925:24" pos:end="925:25">-&gt;</operator><name pos:start="925:26" pos:end="925:33">codecpar</name><operator pos:start="925:34" pos:end="925:35">-&gt;</operator><name pos:start="925:36" pos:end="925:43">codec_id</name></name> <operator pos:start="925:45" pos:end="925:46">!=</operator> <name pos:start="925:48" pos:end="925:62">AV_CODEC_ID_AAC</name></expr>)</condition><block type="pseudo" pos:start="927:17" pos:end="927:58"><block_content pos:start="927:17" pos:end="927:58">

                <expr_stmt pos:start="927:17" pos:end="927:58"><expr pos:start="927:17" pos:end="927:57"><name pos:start="927:17" pos:end="927:32"><name pos:start="927:17" pos:end="927:18">st</name><operator pos:start="927:19" pos:end="927:20">-&gt;</operator><name pos:start="927:21" pos:end="927:32">need_parsing</name></name> <operator pos:start="927:34" pos:end="927:34">=</operator> <name pos:start="927:36" pos:end="927:57">AVSTREAM_PARSE_HEADERS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="929:13" pos:end="939:13"><if pos:start="929:13" pos:end="939:13">if <condition pos:start="929:16" pos:end="929:39">(<expr pos:start="929:17" pos:end="929:38"><name pos:start="929:17" pos:end="929:34"><name pos:start="929:17" pos:end="929:21">track</name><operator pos:start="929:22" pos:end="929:23">-&gt;</operator><name pos:start="929:24" pos:end="929:34">codec_delay</name></name> <operator pos:start="929:36" pos:end="929:36">&gt;</operator> <literal type="number" pos:start="929:38" pos:end="929:38">0</literal></expr>)</condition> <block pos:start="929:41" pos:end="939:13">{<block_content pos:start="931:17" pos:end="937:113">

                <expr_stmt pos:start="931:17" pos:end="937:113"><expr pos:start="931:17" pos:end="937:112"><name pos:start="931:17" pos:end="931:45"><name pos:start="931:17" pos:end="931:18">st</name><operator pos:start="931:19" pos:end="931:20">-&gt;</operator><name pos:start="931:21" pos:end="931:28">codecpar</name><operator pos:start="931:29" pos:end="931:30">-&gt;</operator><name pos:start="931:31" pos:end="931:45">initial_padding</name></name> <operator pos:start="931:47" pos:end="931:47">=</operator> <macro pos:start="931:49" pos:end="937:112"><name pos:start="931:49" pos:end="931:60">av_rescale_q</name><argument_list pos:start="931:61" pos:end="937:112">(<argument pos:start="931:62" pos:end="931:79">track-&gt;codec_delay</argument>,

                                                             <argument pos:start="933:62" pos:end="933:75">(AVRational){<literal type="number" pos:start="933:75" pos:end="933:75">1</literal></argument>, <argument pos:start="933:78" pos:end="933:88"><literal type="number" pos:start="933:78" pos:end="933:87">1000000000</literal>}</argument>,

                                                             <argument pos:start="935:62" pos:end="935:75">(AVRational){<literal type="number" pos:start="935:75" pos:end="935:75">1</literal></argument>, <argument pos:start="935:78" pos:end="937:111">st-&gt;codecpar-&gt;codec_id == AV_CODEC_ID_OPUS ?

                                                                             <literal type="number" pos:start="937:78" pos:end="937:82">48000</literal> : st-&gt;codecpar-&gt;sample_rate}</argument>)</argument_list></macro></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="941:13" pos:end="949:13"><if pos:start="941:13" pos:end="949:13">if <condition pos:start="941:16" pos:end="941:40">(<expr pos:start="941:17" pos:end="941:39"><name pos:start="941:17" pos:end="941:35"><name pos:start="941:17" pos:end="941:21">track</name><operator pos:start="941:22" pos:end="941:23">-&gt;</operator><name pos:start="941:24" pos:end="941:35">seek_preroll</name></name> <operator pos:start="941:37" pos:end="941:37">&gt;</operator> <literal type="number" pos:start="941:39" pos:end="941:39">0</literal></expr>)</condition> <block pos:start="941:42" pos:end="949:13">{<block_content pos:start="943:17" pos:end="947:102">

                <expr_stmt pos:start="943:17" pos:end="947:102"><expr pos:start="943:17" pos:end="947:101"><name pos:start="943:17" pos:end="943:42"><name pos:start="943:17" pos:end="943:18">st</name><operator pos:start="943:19" pos:end="943:20">-&gt;</operator><name pos:start="943:21" pos:end="943:28">codecpar</name><operator pos:start="943:29" pos:end="943:30">-&gt;</operator><name pos:start="943:31" pos:end="943:42">seek_preroll</name></name> <operator pos:start="943:44" pos:end="943:44">=</operator> <macro pos:start="943:46" pos:end="947:101"><name pos:start="943:46" pos:end="943:57">av_rescale_q</name><argument_list pos:start="943:58" pos:end="947:101">(<argument pos:start="943:59" pos:end="943:77">track-&gt;seek_preroll</argument>,

                                                          <argument pos:start="945:59" pos:end="945:72">(AVRational){<literal type="number" pos:start="945:72" pos:end="945:72">1</literal></argument>, <argument pos:start="945:75" pos:end="945:85"><literal type="number" pos:start="945:75" pos:end="945:84">1000000000</literal>}</argument>,

                                                          <argument pos:start="947:59" pos:end="947:72">(AVRational){<literal type="number" pos:start="947:72" pos:end="947:72">1</literal></argument>, <argument pos:start="947:75" pos:end="947:100">st-&gt;codecpar-&gt;sample_rate}</argument>)</argument_list></macro></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="951:11" pos:end="971:9">else if <condition pos:start="951:19" pos:end="951:50">(<expr pos:start="951:20" pos:end="951:49"><name pos:start="951:20" pos:end="951:27">codec_id</name> <operator pos:start="951:29" pos:end="951:30">==</operator> <name pos:start="951:32" pos:end="951:49">AV_CODEC_ID_WEBVTT</name></expr>)</condition> <block pos:start="951:52" pos:end="971:9">{<block_content pos:start="953:13" pos:end="969:13">

            <expr_stmt pos:start="953:13" pos:end="953:61"><expr pos:start="953:13" pos:end="953:60"><name pos:start="953:13" pos:end="953:36"><name pos:start="953:13" pos:end="953:14">st</name><operator pos:start="953:15" pos:end="953:16">-&gt;</operator><name pos:start="953:17" pos:end="953:24">codecpar</name><operator pos:start="953:25" pos:end="953:26">-&gt;</operator><name pos:start="953:27" pos:end="953:36">codec_type</name></name> <operator pos:start="953:38" pos:end="953:38">=</operator> <name pos:start="953:40" pos:end="953:60">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>



            <if_stmt pos:start="957:13" pos:end="969:13"><if pos:start="957:13" pos:end="961:13">if <condition pos:start="957:16" pos:end="957:62">(<expr pos:start="957:17" pos:end="957:61"><operator pos:start="957:17" pos:end="957:17">!</operator><call pos:start="957:18" pos:end="957:61"><name pos:start="957:18" pos:end="957:23">strcmp</name><argument_list pos:start="957:24" pos:end="957:61">(<argument pos:start="957:25" pos:end="957:39"><expr pos:start="957:25" pos:end="957:39"><name pos:start="957:25" pos:end="957:39"><name pos:start="957:25" pos:end="957:29">track</name><operator pos:start="957:30" pos:end="957:31">-&gt;</operator><name pos:start="957:32" pos:end="957:39">codec_id</name></name></expr></argument>, <argument pos:start="957:42" pos:end="957:60"><expr pos:start="957:42" pos:end="957:60"><literal type="string" pos:start="957:42" pos:end="957:60">"D_WEBVTT/CAPTIONS"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="957:64" pos:end="961:13">{<block_content pos:start="959:17" pos:end="959:59">

                <expr_stmt pos:start="959:17" pos:end="959:59"><expr pos:start="959:17" pos:end="959:58"><name pos:start="959:17" pos:end="959:31"><name pos:start="959:17" pos:end="959:18">st</name><operator pos:start="959:19" pos:end="959:20">-&gt;</operator><name pos:start="959:21" pos:end="959:31">disposition</name></name> <operator pos:start="959:33" pos:end="959:34">|=</operator> <name pos:start="959:36" pos:end="959:58">AV_DISPOSITION_CAPTIONS</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="961:15" pos:end="965:13">else if <condition pos:start="961:23" pos:end="961:73">(<expr pos:start="961:24" pos:end="961:72"><operator pos:start="961:24" pos:end="961:24">!</operator><call pos:start="961:25" pos:end="961:72"><name pos:start="961:25" pos:end="961:30">strcmp</name><argument_list pos:start="961:31" pos:end="961:72">(<argument pos:start="961:32" pos:end="961:46"><expr pos:start="961:32" pos:end="961:46"><name pos:start="961:32" pos:end="961:46"><name pos:start="961:32" pos:end="961:36">track</name><operator pos:start="961:37" pos:end="961:38">-&gt;</operator><name pos:start="961:39" pos:end="961:46">codec_id</name></name></expr></argument>, <argument pos:start="961:49" pos:end="961:71"><expr pos:start="961:49" pos:end="961:71"><literal type="string" pos:start="961:49" pos:end="961:71">"D_WEBVTT/DESCRIPTIONS"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="961:75" pos:end="965:13">{<block_content pos:start="963:17" pos:end="963:63">

                <expr_stmt pos:start="963:17" pos:end="963:63"><expr pos:start="963:17" pos:end="963:62"><name pos:start="963:17" pos:end="963:31"><name pos:start="963:17" pos:end="963:18">st</name><operator pos:start="963:19" pos:end="963:20">-&gt;</operator><name pos:start="963:21" pos:end="963:31">disposition</name></name> <operator pos:start="963:33" pos:end="963:34">|=</operator> <name pos:start="963:36" pos:end="963:62">AV_DISPOSITION_DESCRIPTIONS</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="965:15" pos:end="969:13">else if <condition pos:start="965:23" pos:end="965:69">(<expr pos:start="965:24" pos:end="965:68"><operator pos:start="965:24" pos:end="965:24">!</operator><call pos:start="965:25" pos:end="965:68"><name pos:start="965:25" pos:end="965:30">strcmp</name><argument_list pos:start="965:31" pos:end="965:68">(<argument pos:start="965:32" pos:end="965:46"><expr pos:start="965:32" pos:end="965:46"><name pos:start="965:32" pos:end="965:46"><name pos:start="965:32" pos:end="965:36">track</name><operator pos:start="965:37" pos:end="965:38">-&gt;</operator><name pos:start="965:39" pos:end="965:46">codec_id</name></name></expr></argument>, <argument pos:start="965:49" pos:end="965:67"><expr pos:start="965:49" pos:end="965:67"><literal type="string" pos:start="965:49" pos:end="965:67">"D_WEBVTT/METADATA"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="965:71" pos:end="969:13">{<block_content pos:start="967:17" pos:end="967:59">

                <expr_stmt pos:start="967:17" pos:end="967:59"><expr pos:start="967:17" pos:end="967:58"><name pos:start="967:17" pos:end="967:31"><name pos:start="967:17" pos:end="967:18">st</name><operator pos:start="967:19" pos:end="967:20">-&gt;</operator><name pos:start="967:21" pos:end="967:31">disposition</name></name> <operator pos:start="967:33" pos:end="967:34">|=</operator> <name pos:start="967:36" pos:end="967:58">AV_DISPOSITION_METADATA</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="971:11" pos:end="979:9">else if <condition pos:start="971:19" pos:end="971:63">(<expr pos:start="971:20" pos:end="971:62"><name pos:start="971:20" pos:end="971:30"><name pos:start="971:20" pos:end="971:24">track</name><operator pos:start="971:25" pos:end="971:26">-&gt;</operator><name pos:start="971:27" pos:end="971:30">type</name></name> <operator pos:start="971:32" pos:end="971:33">==</operator> <name pos:start="971:35" pos:end="971:62">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="971:65" pos:end="979:9">{<block_content pos:start="973:13" pos:end="977:43">

            <expr_stmt pos:start="973:13" pos:end="973:61"><expr pos:start="973:13" pos:end="973:60"><name pos:start="973:13" pos:end="973:36"><name pos:start="973:13" pos:end="973:14">st</name><operator pos:start="973:15" pos:end="973:16">-&gt;</operator><name pos:start="973:17" pos:end="973:24">codecpar</name><operator pos:start="973:25" pos:end="973:26">-&gt;</operator><name pos:start="973:27" pos:end="973:36">codec_type</name></name> <operator pos:start="973:38" pos:end="973:38">=</operator> <name pos:start="973:40" pos:end="973:60">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt>

            <if_stmt pos:start="975:13" pos:end="977:43"><if pos:start="975:13" pos:end="977:43">if <condition pos:start="975:16" pos:end="975:58">(<expr pos:start="975:17" pos:end="975:57"><name pos:start="975:17" pos:end="975:38"><name pos:start="975:17" pos:end="975:18">st</name><operator pos:start="975:19" pos:end="975:20">-&gt;</operator><name pos:start="975:21" pos:end="975:28">codecpar</name><operator pos:start="975:29" pos:end="975:30">-&gt;</operator><name pos:start="975:31" pos:end="975:38">codec_id</name></name> <operator pos:start="975:40" pos:end="975:41">==</operator> <name pos:start="975:43" pos:end="975:57">AV_CODEC_ID_ASS</name></expr>)</condition><block type="pseudo" pos:start="977:17" pos:end="977:43"><block_content pos:start="977:17" pos:end="977:43">

                <expr_stmt pos:start="977:17" pos:end="977:43"><expr pos:start="977:17" pos:end="977:42"><name pos:start="977:17" pos:end="977:38"><name pos:start="977:17" pos:end="977:24">matroska</name><operator pos:start="977:25" pos:end="977:26">-&gt;</operator><name pos:start="977:27" pos:end="977:38">contains_ssa</name></name> <operator pos:start="977:40" pos:end="977:40">=</operator> <literal type="number" pos:start="977:42" pos:end="977:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="985:5" pos:end="985:13">return <expr pos:start="985:12" pos:end="985:12"><literal type="number" pos:start="985:12" pos:end="985:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
