<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1797.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">mxf_write_random_index_pack</name><parameter_list pos:start="1:40" pos:end="1:59">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:55">AVFormatContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:43">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">pos</name> <init pos:start="9:18" pos:end="9:32">= <expr pos:start="9:20" pos:end="9:32"><call pos:start="9:20" pos:end="9:32"><name pos:start="9:20" pos:end="9:28">avio_tell</name><argument_list pos:start="9:29" pos:end="9:32">(<argument pos:start="9:30" pos:end="9:31"><expr pos:start="9:30" pos:end="9:31"><name pos:start="9:30" pos:end="9:31">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:46"><expr pos:start="15:5" pos:end="15:45"><call pos:start="15:5" pos:end="15:45"><name pos:start="15:5" pos:end="15:14">avio_write</name><argument_list pos:start="15:15" pos:end="15:45">(<argument pos:start="15:16" pos:end="15:17"><expr pos:start="15:16" pos:end="15:17"><name pos:start="15:16" pos:end="15:17">pb</name></expr></argument>, <argument pos:start="15:20" pos:end="15:40"><expr pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:40">random_index_pack_key</name></expr></argument>, <argument pos:start="15:43" pos:end="15:44"><expr pos:start="15:43" pos:end="15:44"><literal type="number" pos:start="15:43" pos:end="15:44">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:66"><expr pos:start="17:5" pos:end="17:65"><call pos:start="17:5" pos:end="17:65"><name pos:start="17:5" pos:end="17:25">klv_encode_ber_length</name><argument_list pos:start="17:26" pos:end="17:65">(<argument pos:start="17:27" pos:end="17:28"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">pb</name></expr></argument>, <argument pos:start="17:31" pos:end="17:64"><expr pos:start="17:31" pos:end="17:64"><literal type="number" pos:start="17:31" pos:end="17:34">28</literal> <operator pos:start="17:34" pos:end="17:34">+</operator> <literal type="number" pos:start="17:36" pos:end="17:37">12</literal><operator pos:start="17:38" pos:end="17:38">*</operator><name pos:start="17:39" pos:end="17:64"><name pos:start="17:39" pos:end="17:41">mxf</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:64">body_partitions_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="27:25"><if pos:start="21:5" pos:end="23:25">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:11">mxf</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:33">edit_unit_byte_count</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:25"><block_content pos:start="23:9" pos:end="23:25">

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:17">avio_wb32</name><argument_list pos:start="23:18" pos:end="23:24">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">pb</name></expr></argument>, <argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="line" pos:start="23:27" pos:end="23:56">// BodySID of header partition</comment>

    <else pos:start="25:5" pos:end="27:25">else<block type="pseudo" pos:start="27:9" pos:end="27:25"><block_content pos:start="27:9" pos:end="27:25">

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">avio_wb32</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:21"><expr pos:start="29:5" pos:end="29:20"><call pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:13">avio_wb64</name><argument_list pos:start="29:14" pos:end="29:20">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>, <argument pos:start="29:19" pos:end="29:19"><expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:23" pos:end="29:51">// offset of header partition</comment>



    <for pos:start="33:5" pos:end="39:5">for <control pos:start="33:9" pos:end="33:52">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:47"><expr pos:start="33:17" pos:end="33:46"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:46"><name pos:start="33:21" pos:end="33:23">mxf</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:46">body_partitions_count</name></name></expr>;</condition> <incr pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:49">i</name><operator pos:start="33:50" pos:end="33:51">++</operator></expr></incr>)</control> <block pos:start="33:54" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:53">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><call pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:17">avio_wb32</name><argument_list pos:start="35:18" pos:end="35:24">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="35:27" pos:end="35:36">// BodySID</comment>

        <expr_stmt pos:start="37:9" pos:end="37:53"><expr pos:start="37:9" pos:end="37:52"><call pos:start="37:9" pos:end="37:52"><name pos:start="37:9" pos:end="37:17">avio_wb64</name><argument_list pos:start="37:18" pos:end="37:52">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:51"><expr pos:start="37:23" pos:end="37:51"><name pos:start="37:23" pos:end="37:51"><name pos:start="37:23" pos:end="37:25">mxf</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:48">body_partition_offset</name><index pos:start="37:49" pos:end="37:51">[<expr pos:start="37:50" pos:end="37:50"><name pos:start="37:50" pos:end="37:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:13">avio_wb32</name><argument_list pos:start="43:14" pos:end="43:20">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:19"><expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="43:23" pos:end="43:52">// BodySID of footer partition</comment>

    <expr_stmt pos:start="45:5" pos:end="45:48"><expr pos:start="45:5" pos:end="45:47"><call pos:start="45:5" pos:end="45:47"><name pos:start="45:5" pos:end="45:13">avio_wb64</name><argument_list pos:start="45:14" pos:end="45:47">(<argument pos:start="45:15" pos:end="45:16"><expr pos:start="45:15" pos:end="45:16"><name pos:start="45:15" pos:end="45:16">pb</name></expr></argument>, <argument pos:start="45:19" pos:end="45:46"><expr pos:start="45:19" pos:end="45:46"><name pos:start="45:19" pos:end="45:46"><name pos:start="45:19" pos:end="45:21">mxf</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:46">footer_partition_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><call pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:13">avio_wb32</name><argument_list pos:start="49:14" pos:end="49:42">(<argument pos:start="49:15" pos:end="49:16"><expr pos:start="49:15" pos:end="49:16"><name pos:start="49:15" pos:end="49:16">pb</name></expr></argument>, <argument pos:start="49:19" pos:end="49:41"><expr pos:start="49:19" pos:end="49:41"><call pos:start="49:19" pos:end="49:31"><name pos:start="49:19" pos:end="49:27">avio_tell</name><argument_list pos:start="49:28" pos:end="49:31">(<argument pos:start="49:29" pos:end="49:30"><expr pos:start="49:29" pos:end="49:30"><name pos:start="49:29" pos:end="49:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="49:33" pos:end="49:33">-</operator> <name pos:start="49:35" pos:end="49:37">pos</name> <operator pos:start="49:39" pos:end="49:39">+</operator> <literal type="number" pos:start="49:41" pos:end="49:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
