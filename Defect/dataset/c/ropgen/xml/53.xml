<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/53.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">uint8_t</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:22">xen_map_cache</name><parameter_list pos:start="1:23" pos:end="3:36">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:29">hwaddr</name></type> <name pos:start="1:31" pos:end="1:39">phys_addr</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:47">hwaddr</name></type> <name pos:start="1:49" pos:end="1:52">size</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:30">uint8_t</name></type> <name pos:start="3:32" pos:end="3:35">lock</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:61">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MapCacheEntry</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">entry</name></decl>, <decl pos:start="7:27" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:33">pentry</name> <init pos:start="7:35" pos:end="7:40">= <expr pos:start="7:37" pos:end="7:40"><name pos:start="7:37" pos:end="7:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">hwaddr</name></type> <name pos:start="9:12" pos:end="9:24">address_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">hwaddr</name></type> <name pos:start="11:12" pos:end="11:25">address_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">hwaddr</name></type> <name pos:start="13:12" pos:end="13:21">cache_size</name> <init pos:start="13:23" pos:end="13:28">= <expr pos:start="13:25" pos:end="13:28"><name pos:start="13:25" pos:end="13:28">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:24">test_bit_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:19">translated</name> <init pos:start="17:21" pos:end="17:27">= <expr pos:start="17:23" pos:end="17:27"><name pos:start="17:23" pos:end="17:27">false</name></expr></init></decl>;</decl_stmt>



<label pos:start="21:1" pos:end="21:9"><name pos:start="21:1" pos:end="21:8">tryagain</name>:</label>

    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:17">address_index</name>  <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:30">phys_addr</name> <operator pos:start="23:32" pos:end="23:33">&gt;&gt;</operator> <name pos:start="23:35" pos:end="23:53">MCACHE_BUCKET_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:58"><expr pos:start="25:5" pos:end="25:57"><name pos:start="25:5" pos:end="25:18">address_offset</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:30">phys_addr</name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <operator pos:start="25:34" pos:end="25:34">(</operator><name pos:start="25:35" pos:end="25:52">MCACHE_BUCKET_SIZE</name> <operator pos:start="25:54" pos:end="25:54">-</operator> <literal type="number" pos:start="25:56" pos:end="25:56">1</literal><operator pos:start="25:57" pos:end="25:57">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><call pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:23">trace_xen_map_cache</name><argument_list pos:start="29:24" pos:end="29:34">(<argument pos:start="29:25" pos:end="29:33"><expr pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:33">phys_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:60">/* test_bit_size is always a multiple of XC_PAGE_SIZE */</comment>

    <if_stmt pos:start="35:5" pos:end="51:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><name pos:start="35:9" pos:end="35:12">size</name></expr>)</condition> <block pos:start="35:15" pos:end="47:5">{<block_content pos:start="37:9" pos:end="45:9">

        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><name pos:start="37:9" pos:end="37:21">test_bit_size</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:28">size</name> <operator pos:start="37:30" pos:end="37:30">+</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:41">phys_addr</name> <operator pos:start="37:43" pos:end="37:43">&amp;</operator> <operator pos:start="37:45" pos:end="37:45">(</operator><name pos:start="37:46" pos:end="37:57">XC_PAGE_SIZE</name> <operator pos:start="37:59" pos:end="37:59">-</operator> <literal type="number" pos:start="37:61" pos:end="37:61">1</literal><operator pos:start="37:62" pos:end="37:62">)</operator><operator pos:start="37:63" pos:end="37:63">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:41">(<expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:25">test_bit_size</name> <operator pos:start="41:27" pos:end="41:27">%</operator> <name pos:start="41:29" pos:end="41:40">XC_PAGE_SIZE</name></expr>)</condition> <block pos:start="41:43" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:75">

            <expr_stmt pos:start="43:13" pos:end="43:75"><expr pos:start="43:13" pos:end="43:74"><name pos:start="43:13" pos:end="43:25">test_bit_size</name> <operator pos:start="43:27" pos:end="43:28">+=</operator> <name pos:start="43:30" pos:end="43:41">XC_PAGE_SIZE</name> <operator pos:start="43:43" pos:end="43:43">-</operator> <operator pos:start="43:45" pos:end="43:45">(</operator><name pos:start="43:46" pos:end="43:58">test_bit_size</name> <operator pos:start="43:60" pos:end="43:60">%</operator> <name pos:start="43:62" pos:end="43:73">XC_PAGE_SIZE</name><operator pos:start="43:74" pos:end="43:74">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:37">

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:21">test_bit_size</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:36">XC_PAGE_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="71:5"><if pos:start="55:5" pos:end="71:5">if <condition pos:start="55:8" pos:end="65:55">(<expr pos:start="55:9" pos:end="65:54"><name pos:start="55:9" pos:end="55:28"><name pos:start="55:9" pos:end="55:16">mapcache</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:28">last_entry</name></name> <operator pos:start="55:30" pos:end="55:31">!=</operator> <name pos:start="55:33" pos:end="55:36">NULL</name> <operator pos:start="55:38" pos:end="55:39">&amp;&amp;</operator>

        <name pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:16">mapcache</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:28">last_entry</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:41">paddr_index</name></name> <operator pos:start="57:43" pos:end="57:44">==</operator> <name pos:start="57:46" pos:end="57:58">address_index</name> <operator pos:start="57:60" pos:end="57:61">&amp;&amp;</operator>

        <operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:13">lock</name> <operator pos:start="59:15" pos:end="59:16">&amp;&amp;</operator> <operator pos:start="59:18" pos:end="59:18">!</operator><name pos:start="59:19" pos:end="59:22">size</name> <operator pos:start="59:24" pos:end="59:25">&amp;&amp;</operator>

        <call pos:start="61:9" pos:end="65:54"><name pos:start="61:9" pos:end="61:17">test_bits</name><argument_list pos:start="61:18" pos:end="65:54">(<argument pos:start="61:19" pos:end="61:49"><expr pos:start="61:19" pos:end="61:49"><name pos:start="61:19" pos:end="61:32">address_offset</name> <operator pos:start="61:34" pos:end="61:35">&gt;&gt;</operator> <name pos:start="61:37" pos:end="61:49">XC_PAGE_SHIFT</name></expr></argument>,

                  <argument pos:start="63:19" pos:end="63:48"><expr pos:start="63:19" pos:end="63:48"><name pos:start="63:19" pos:end="63:31">test_bit_size</name> <operator pos:start="63:33" pos:end="63:34">&gt;&gt;</operator> <name pos:start="63:36" pos:end="63:48">XC_PAGE_SHIFT</name></expr></argument>,

                  <argument pos:start="65:19" pos:end="65:53"><expr pos:start="65:19" pos:end="65:53"><name pos:start="65:19" pos:end="65:53"><name pos:start="65:19" pos:end="65:26">mapcache</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:38">last_entry</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:53">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:57" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:65">

        <expr_stmt pos:start="67:9" pos:end="67:86"><expr pos:start="67:9" pos:end="67:85"><call pos:start="67:9" pos:end="67:85"><name pos:start="67:9" pos:end="67:34">trace_xen_map_cache_return</name><argument_list pos:start="67:35" pos:end="67:85">(<argument pos:start="67:36" pos:end="67:84"><expr pos:start="67:36" pos:end="67:84"><name pos:start="67:36" pos:end="67:67"><name pos:start="67:36" pos:end="67:43">mapcache</name><operator pos:start="67:44" pos:end="67:45">-&gt;</operator><name pos:start="67:46" pos:end="67:55">last_entry</name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:67">vaddr_base</name></name> <operator pos:start="67:69" pos:end="67:69">+</operator> <name pos:start="67:71" pos:end="67:84">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:65">return <expr pos:start="69:16" pos:end="69:64"><name pos:start="69:16" pos:end="69:47"><name pos:start="69:16" pos:end="69:23">mapcache</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:35">last_entry</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:47">vaddr_base</name></name> <operator pos:start="69:49" pos:end="69:49">+</operator> <name pos:start="69:51" pos:end="69:64">address_offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:57">/* size is always a multiple of MCACHE_BUCKET_SIZE */</comment>

    <if_stmt pos:start="77:5" pos:end="91:5"><if pos:start="77:5" pos:end="87:5">if <condition pos:start="77:8" pos:end="77:13">(<expr pos:start="77:9" pos:end="77:12"><name pos:start="77:9" pos:end="77:12">size</name></expr>)</condition> <block pos:start="77:15" pos:end="87:5">{<block_content pos:start="79:9" pos:end="85:9">

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:18">cache_size</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:25">size</name> <operator pos:start="79:27" pos:end="79:27">+</operator> <name pos:start="79:29" pos:end="79:42">address_offset</name></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:44">(<expr pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:22">cache_size</name> <operator pos:start="81:24" pos:end="81:24">%</operator> <name pos:start="81:26" pos:end="81:43">MCACHE_BUCKET_SIZE</name></expr>)</condition> <block pos:start="81:46" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:81">

            <expr_stmt pos:start="83:13" pos:end="83:81"><expr pos:start="83:13" pos:end="83:80"><name pos:start="83:13" pos:end="83:22">cache_size</name> <operator pos:start="83:24" pos:end="83:25">+=</operator> <name pos:start="83:27" pos:end="83:44">MCACHE_BUCKET_SIZE</name> <operator pos:start="83:46" pos:end="83:46">-</operator> <operator pos:start="83:48" pos:end="83:48">(</operator><name pos:start="83:49" pos:end="83:58">cache_size</name> <operator pos:start="83:60" pos:end="83:60">%</operator> <name pos:start="83:62" pos:end="83:79">MCACHE_BUCKET_SIZE</name><operator pos:start="83:80" pos:end="83:80">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="91:5">else <block pos:start="87:12" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:40">

        <expr_stmt pos:start="89:9" pos:end="89:40"><expr pos:start="89:9" pos:end="89:39"><name pos:start="89:9" pos:end="89:18">cache_size</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:39">MCACHE_BUCKET_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:67"><expr pos:start="95:5" pos:end="95:66"><name pos:start="95:5" pos:end="95:9">entry</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <operator pos:start="95:13" pos:end="95:13">&amp;</operator><name pos:start="95:14" pos:end="95:66"><name pos:start="95:14" pos:end="95:21">mapcache</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:28">entry</name><index pos:start="95:29" pos:end="95:66">[<expr pos:start="95:30" pos:end="95:65"><name pos:start="95:30" pos:end="95:42">address_index</name> <operator pos:start="95:44" pos:end="95:44">%</operator> <name pos:start="95:46" pos:end="95:65"><name pos:start="95:46" pos:end="95:53">mapcache</name><operator pos:start="95:54" pos:end="95:55">-&gt;</operator><name pos:start="95:56" pos:end="95:65">nr_buckets</name></name></expr>]</index></name></expr>;</expr_stmt>



    <while pos:start="99:5" pos:end="113:5">while <condition pos:start="99:11" pos:end="107:40">(<expr pos:start="99:12" pos:end="107:39"><name pos:start="99:12" pos:end="99:16">entry</name> <operator pos:start="99:18" pos:end="99:19">&amp;&amp;</operator> <name pos:start="99:21" pos:end="99:31"><name pos:start="99:21" pos:end="99:25">entry</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:31">lock</name></name> <operator pos:start="99:33" pos:end="99:34">&amp;&amp;</operator> <name pos:start="99:36" pos:end="99:52"><name pos:start="99:36" pos:end="99:40">entry</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:52">vaddr_base</name></name> <operator pos:start="99:54" pos:end="99:55">&amp;&amp;</operator>

            <operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:31"><name pos:start="101:14" pos:end="101:18">entry</name><operator pos:start="101:19" pos:end="101:20">-&gt;</operator><name pos:start="101:21" pos:end="101:31">paddr_index</name></name> <operator pos:start="101:33" pos:end="101:34">!=</operator> <name pos:start="101:36" pos:end="101:48">address_index</name> <operator pos:start="101:50" pos:end="101:51">||</operator> <name pos:start="101:53" pos:end="101:63"><name pos:start="101:53" pos:end="101:57">entry</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:63">size</name></name> <operator pos:start="101:65" pos:end="101:66">!=</operator> <name pos:start="101:68" pos:end="101:77">cache_size</name> <operator pos:start="101:79" pos:end="101:80">||</operator>

             <operator pos:start="103:14" pos:end="103:14">!</operator><call pos:start="103:15" pos:end="107:38"><name pos:start="103:15" pos:end="103:23">test_bits</name><argument_list pos:start="103:24" pos:end="107:38">(<argument pos:start="103:25" pos:end="103:55"><expr pos:start="103:25" pos:end="103:55"><name pos:start="103:25" pos:end="103:38">address_offset</name> <operator pos:start="103:40" pos:end="103:41">&gt;&gt;</operator> <name pos:start="103:43" pos:end="103:55">XC_PAGE_SHIFT</name></expr></argument>,

                 <argument pos:start="105:18" pos:end="105:47"><expr pos:start="105:18" pos:end="105:47"><name pos:start="105:18" pos:end="105:30">test_bit_size</name> <operator pos:start="105:32" pos:end="105:33">&gt;&gt;</operator> <name pos:start="105:35" pos:end="105:47">XC_PAGE_SHIFT</name></expr></argument>,

                 <argument pos:start="107:18" pos:end="107:37"><expr pos:start="107:18" pos:end="107:37"><name pos:start="107:18" pos:end="107:37"><name pos:start="107:18" pos:end="107:22">entry</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:37">valid_mapping</name></name></expr></argument>)</argument_list></call><operator pos:start="107:39" pos:end="107:39">)</operator></expr>)</condition> <block pos:start="107:42" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:28">

        <expr_stmt pos:start="109:9" pos:end="109:23"><expr pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:14">pentry</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:22">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:13">entry</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:21">entry</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:27">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="115:5" pos:end="139:5"><if pos:start="115:5" pos:end="123:5">if <condition pos:start="115:8" pos:end="115:15">(<expr pos:start="115:9" pos:end="115:14"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:14">entry</name></expr>)</condition> <block pos:start="115:17" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:59">

        <expr_stmt pos:start="117:9" pos:end="117:50"><expr pos:start="117:9" pos:end="117:49"><name pos:start="117:9" pos:end="117:13">entry</name> <operator pos:start="117:15" pos:end="117:15">=</operator> <call pos:start="117:17" pos:end="117:49"><name pos:start="117:17" pos:end="117:25">g_malloc0</name><argument_list pos:start="117:26" pos:end="117:49">(<argument pos:start="117:27" pos:end="117:48"><expr pos:start="117:27" pos:end="117:48"><sizeof pos:start="117:27" pos:end="117:48">sizeof <argument_list pos:start="117:34" pos:end="117:48">(<argument pos:start="117:35" pos:end="117:47"><expr pos:start="117:35" pos:end="117:47"><name pos:start="117:35" pos:end="117:47">MapCacheEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:29"><expr pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:14">pentry</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:20">next</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator> <name pos:start="119:24" pos:end="119:28">entry</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:59"><expr pos:start="121:9" pos:end="121:58"><call pos:start="121:9" pos:end="121:58"><name pos:start="121:9" pos:end="121:24">xen_remap_bucket</name><argument_list pos:start="121:25" pos:end="121:58">(<argument pos:start="121:26" pos:end="121:30"><expr pos:start="121:26" pos:end="121:30"><name pos:start="121:26" pos:end="121:30">entry</name></expr></argument>, <argument pos:start="121:33" pos:end="121:42"><expr pos:start="121:33" pos:end="121:42"><name pos:start="121:33" pos:end="121:42">cache_size</name></expr></argument>, <argument pos:start="121:45" pos:end="121:57"><expr pos:start="121:45" pos:end="121:57"><name pos:start="121:45" pos:end="121:57">address_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="123:7" pos:end="139:5">else if <condition pos:start="123:15" pos:end="123:28">(<expr pos:start="123:16" pos:end="123:27"><operator pos:start="123:16" pos:end="123:16">!</operator><name pos:start="123:17" pos:end="123:27"><name pos:start="123:17" pos:end="123:21">entry</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:27">lock</name></name></expr>)</condition> <block pos:start="123:30" pos:end="139:5">{<block_content pos:start="125:9" pos:end="137:9">

        <if_stmt pos:start="125:9" pos:end="137:9"><if pos:start="125:9" pos:end="137:9">if <condition pos:start="125:12" pos:end="133:42">(<expr pos:start="125:13" pos:end="133:41"><operator pos:start="125:13" pos:end="125:13">!</operator><name pos:start="125:14" pos:end="125:30"><name pos:start="125:14" pos:end="125:18">entry</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:30">vaddr_base</name></name> <operator pos:start="125:32" pos:end="125:33">||</operator> <name pos:start="125:35" pos:end="125:52"><name pos:start="125:35" pos:end="125:39">entry</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:52">paddr_index</name></name> <operator pos:start="125:54" pos:end="125:55">!=</operator> <name pos:start="125:57" pos:end="125:69">address_index</name> <operator pos:start="125:71" pos:end="125:72">||</operator>

                <name pos:start="127:17" pos:end="127:27"><name pos:start="127:17" pos:end="127:21">entry</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:27">size</name></name> <operator pos:start="127:29" pos:end="127:30">!=</operator> <name pos:start="127:32" pos:end="127:41">cache_size</name> <operator pos:start="127:43" pos:end="127:44">||</operator>

                <operator pos:start="129:17" pos:end="129:17">!</operator><call pos:start="129:18" pos:end="133:41"><name pos:start="129:18" pos:end="129:26">test_bits</name><argument_list pos:start="129:27" pos:end="133:41">(<argument pos:start="129:28" pos:end="129:58"><expr pos:start="129:28" pos:end="129:58"><name pos:start="129:28" pos:end="129:41">address_offset</name> <operator pos:start="129:43" pos:end="129:44">&gt;&gt;</operator> <name pos:start="129:46" pos:end="129:58">XC_PAGE_SHIFT</name></expr></argument>,

                    <argument pos:start="131:21" pos:end="131:50"><expr pos:start="131:21" pos:end="131:50"><name pos:start="131:21" pos:end="131:33">test_bit_size</name> <operator pos:start="131:35" pos:end="131:36">&gt;&gt;</operator> <name pos:start="131:38" pos:end="131:50">XC_PAGE_SHIFT</name></expr></argument>,

                    <argument pos:start="133:21" pos:end="133:40"><expr pos:start="133:21" pos:end="133:40"><name pos:start="133:21" pos:end="133:40"><name pos:start="133:21" pos:end="133:25">entry</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:40">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:44" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:63">

            <expr_stmt pos:start="135:13" pos:end="135:63"><expr pos:start="135:13" pos:end="135:62"><call pos:start="135:13" pos:end="135:62"><name pos:start="135:13" pos:end="135:28">xen_remap_bucket</name><argument_list pos:start="135:29" pos:end="135:62">(<argument pos:start="135:30" pos:end="135:34"><expr pos:start="135:30" pos:end="135:34"><name pos:start="135:30" pos:end="135:34">entry</name></expr></argument>, <argument pos:start="135:37" pos:end="135:46"><expr pos:start="135:37" pos:end="135:46"><name pos:start="135:37" pos:end="135:46">cache_size</name></expr></argument>, <argument pos:start="135:49" pos:end="135:61"><expr pos:start="135:49" pos:end="135:61"><name pos:start="135:49" pos:end="135:61">address_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="165:5"><if pos:start="143:5" pos:end="165:5">if<condition pos:start="143:7" pos:end="147:38">(<expr pos:start="143:8" pos:end="147:37"><operator pos:start="143:8" pos:end="143:8">!</operator><call pos:start="143:9" pos:end="147:37"><name pos:start="143:9" pos:end="143:17">test_bits</name><argument_list pos:start="143:18" pos:end="147:37">(<argument pos:start="143:19" pos:end="143:49"><expr pos:start="143:19" pos:end="143:49"><name pos:start="143:19" pos:end="143:32">address_offset</name> <operator pos:start="143:34" pos:end="143:35">&gt;&gt;</operator> <name pos:start="143:37" pos:end="143:49">XC_PAGE_SHIFT</name></expr></argument>,

                <argument pos:start="145:17" pos:end="145:46"><expr pos:start="145:17" pos:end="145:46"><name pos:start="145:17" pos:end="145:29">test_bit_size</name> <operator pos:start="145:31" pos:end="145:32">&gt;&gt;</operator> <name pos:start="145:34" pos:end="145:46">XC_PAGE_SHIFT</name></expr></argument>,

                <argument pos:start="147:17" pos:end="147:36"><expr pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:21">entry</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:36">valid_mapping</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:40" pos:end="165:5">{<block_content pos:start="149:9" pos:end="163:20">

        <expr_stmt pos:start="149:9" pos:end="149:36"><expr pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:16">mapcache</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:28">last_entry</name></name> <operator pos:start="149:30" pos:end="149:30">=</operator> <name pos:start="149:32" pos:end="149:35">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="159:9"><if pos:start="151:9" pos:end="159:9">if <condition pos:start="151:12" pos:end="151:58">(<expr pos:start="151:13" pos:end="151:57"><operator pos:start="151:13" pos:end="151:13">!</operator><name pos:start="151:14" pos:end="151:23">translated</name> <operator pos:start="151:25" pos:end="151:26">&amp;&amp;</operator> <name pos:start="151:28" pos:end="151:57"><name pos:start="151:28" pos:end="151:35">mapcache</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:57">phys_offset_to_gaddr</name></name></expr>)</condition> <block pos:start="151:60" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:26">

            <expr_stmt pos:start="153:13" pos:end="153:90"><expr pos:start="153:13" pos:end="153:89"><name pos:start="153:13" pos:end="153:21">phys_addr</name> <operator pos:start="153:23" pos:end="153:23">=</operator> <call pos:start="153:25" pos:end="153:89"><name pos:start="153:25" pos:end="153:54"><name pos:start="153:25" pos:end="153:32">mapcache</name><operator pos:start="153:33" pos:end="153:34">-&gt;</operator><name pos:start="153:35" pos:end="153:54">phys_offset_to_gaddr</name></name><argument_list pos:start="153:55" pos:end="153:89">(<argument pos:start="153:56" pos:end="153:64"><expr pos:start="153:56" pos:end="153:64"><name pos:start="153:56" pos:end="153:64">phys_addr</name></expr></argument>, <argument pos:start="153:67" pos:end="153:70"><expr pos:start="153:67" pos:end="153:70"><name pos:start="153:67" pos:end="153:70">size</name></expr></argument>, <argument pos:start="153:73" pos:end="153:88"><expr pos:start="153:73" pos:end="153:88"><name pos:start="153:73" pos:end="153:88"><name pos:start="153:73" pos:end="153:80">mapcache</name><operator pos:start="153:81" pos:end="153:82">-&gt;</operator><name pos:start="153:83" pos:end="153:88">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:30"><expr pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:22">translated</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <name pos:start="155:26" pos:end="155:29">true</name></expr>;</expr_stmt>

            <goto pos:start="157:13" pos:end="157:26">goto <name pos:start="157:18" pos:end="157:25">tryagain</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:41"><expr pos:start="161:9" pos:end="161:40"><call pos:start="161:9" pos:end="161:40"><name pos:start="161:9" pos:end="161:34">trace_xen_map_cache_return</name><argument_list pos:start="161:35" pos:end="161:40">(<argument pos:start="161:36" pos:end="161:39"><expr pos:start="161:36" pos:end="161:39"><name pos:start="161:36" pos:end="161:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="163:9" pos:end="163:20">return <expr pos:start="163:16" pos:end="163:19"><name pos:start="163:16" pos:end="163:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="169:5" pos:end="169:33"><expr pos:start="169:5" pos:end="169:32"><name pos:start="169:5" pos:end="169:24"><name pos:start="169:5" pos:end="169:12">mapcache</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:24">last_entry</name></name> <operator pos:start="169:26" pos:end="169:26">=</operator> <name pos:start="169:28" pos:end="169:32">entry</name></expr>;</expr_stmt>

    <if_stmt pos:start="171:5" pos:end="185:5"><if pos:start="171:5" pos:end="185:5">if <condition pos:start="171:8" pos:end="171:13">(<expr pos:start="171:9" pos:end="171:12"><name pos:start="171:9" pos:end="171:12">lock</name></expr>)</condition> <block pos:start="171:15" pos:end="185:5">{<block_content pos:start="173:9" pos:end="183:70">

        <decl_stmt pos:start="173:9" pos:end="173:63"><decl pos:start="173:9" pos:end="173:62"><type pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:19">MapCacheRev</name> <modifier pos:start="173:21" pos:end="173:21">*</modifier></type><name pos:start="173:22" pos:end="173:29">reventry</name> <init pos:start="173:31" pos:end="173:62">= <expr pos:start="173:33" pos:end="173:62"><call pos:start="173:33" pos:end="173:62"><name pos:start="173:33" pos:end="173:41">g_malloc0</name><argument_list pos:start="173:42" pos:end="173:62">(<argument pos:start="173:43" pos:end="173:61"><expr pos:start="173:43" pos:end="173:61"><sizeof pos:start="173:43" pos:end="173:61">sizeof<argument_list pos:start="173:49" pos:end="173:61">(<argument pos:start="173:50" pos:end="173:60"><expr pos:start="173:50" pos:end="173:60"><name pos:start="173:50" pos:end="173:60">MapCacheRev</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:22"><expr pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:19"><name pos:start="175:9" pos:end="175:13">entry</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:19">lock</name></name><operator pos:start="175:20" pos:end="175:21">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:80"><expr pos:start="177:9" pos:end="177:79"><name pos:start="177:9" pos:end="177:27"><name pos:start="177:9" pos:end="177:16">reventry</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:27">vaddr_req</name></name> <operator pos:start="177:29" pos:end="177:29">=</operator> <name pos:start="177:31" pos:end="177:62"><name pos:start="177:31" pos:end="177:38">mapcache</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:50">last_entry</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:62">vaddr_base</name></name> <operator pos:start="177:64" pos:end="177:64">+</operator> <name pos:start="177:66" pos:end="177:79">address_offset</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:66"><expr pos:start="179:9" pos:end="179:65"><name pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:16">reventry</name><operator pos:start="179:17" pos:end="179:18">-&gt;</operator><name pos:start="179:19" pos:end="179:29">paddr_index</name></name> <operator pos:start="179:31" pos:end="179:31">=</operator> <name pos:start="179:33" pos:end="179:65"><name pos:start="179:33" pos:end="179:40">mapcache</name><operator pos:start="179:41" pos:end="179:42">-&gt;</operator><name pos:start="179:43" pos:end="179:52">last_entry</name><operator pos:start="179:53" pos:end="179:54">-&gt;</operator><name pos:start="179:55" pos:end="179:65">paddr_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:37"><expr pos:start="181:9" pos:end="181:36"><name pos:start="181:9" pos:end="181:22"><name pos:start="181:9" pos:end="181:16">reventry</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:22">size</name></name> <operator pos:start="181:24" pos:end="181:24">=</operator> <name pos:start="181:26" pos:end="181:36"><name pos:start="181:26" pos:end="181:30">entry</name><operator pos:start="181:31" pos:end="181:32">-&gt;</operator><name pos:start="181:33" pos:end="181:36">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:70"><expr pos:start="183:9" pos:end="183:69"><call pos:start="183:9" pos:end="183:69"><name pos:start="183:9" pos:end="183:26">QTAILQ_INSERT_HEAD</name><argument_list pos:start="183:27" pos:end="183:69">(<argument pos:start="183:28" pos:end="183:52"><expr pos:start="183:28" pos:end="183:52"><operator pos:start="183:28" pos:end="183:28">&amp;</operator><name pos:start="183:29" pos:end="183:52"><name pos:start="183:29" pos:end="183:36">mapcache</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:52">locked_entries</name></name></expr></argument>, <argument pos:start="183:55" pos:end="183:62"><expr pos:start="183:55" pos:end="183:62"><name pos:start="183:55" pos:end="183:62">reventry</name></expr></argument>, <argument pos:start="183:65" pos:end="183:68"><expr pos:start="183:65" pos:end="183:68"><name pos:start="183:65" pos:end="183:68">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:82"><expr pos:start="189:5" pos:end="189:81"><call pos:start="189:5" pos:end="189:81"><name pos:start="189:5" pos:end="189:30">trace_xen_map_cache_return</name><argument_list pos:start="189:31" pos:end="189:81">(<argument pos:start="189:32" pos:end="189:80"><expr pos:start="189:32" pos:end="189:80"><name pos:start="189:32" pos:end="189:63"><name pos:start="189:32" pos:end="189:39">mapcache</name><operator pos:start="189:40" pos:end="189:41">-&gt;</operator><name pos:start="189:42" pos:end="189:51">last_entry</name><operator pos:start="189:52" pos:end="189:53">-&gt;</operator><name pos:start="189:54" pos:end="189:63">vaddr_base</name></name> <operator pos:start="189:65" pos:end="189:65">+</operator> <name pos:start="189:67" pos:end="189:80">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="191:5" pos:end="191:61">return <expr pos:start="191:12" pos:end="191:60"><name pos:start="191:12" pos:end="191:43"><name pos:start="191:12" pos:end="191:19">mapcache</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:31">last_entry</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:43">vaddr_base</name></name> <operator pos:start="191:45" pos:end="191:45">+</operator> <name pos:start="191:47" pos:end="191:60">address_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
