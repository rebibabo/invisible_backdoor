<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21906.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">set_pixel_format</name><parameter_list pos:start="1:29" pos:end="9:76">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">VncState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">vs</name></decl></parameter>,

			     <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:47">bits_per_pixel</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:58">depth</name></decl></parameter>,

			     <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:48">big_endian_flag</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:69"><decl pos:start="5:51" pos:end="5:69"><type pos:start="5:51" pos:end="5:69"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:69">true_color_flag</name></decl></parameter>,

			     <parameter pos:start="7:30" pos:end="7:40"><decl pos:start="7:30" pos:end="7:40"><type pos:start="7:30" pos:end="7:40"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:40">red_max</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:55"><decl pos:start="7:43" pos:end="7:55"><type pos:start="7:43" pos:end="7:55"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:55">green_max</name></decl></parameter>, <parameter pos:start="7:58" pos:end="7:69"><decl pos:start="7:58" pos:end="7:69"><type pos:start="7:58" pos:end="7:69"><name pos:start="7:58" pos:end="7:60">int</name></type> <name pos:start="7:62" pos:end="7:69">blue_max</name></decl></parameter>,

			     <parameter pos:start="9:30" pos:end="9:42"><decl pos:start="9:30" pos:end="9:42"><type pos:start="9:30" pos:end="9:42"><name pos:start="9:30" pos:end="9:32">int</name></type> <name pos:start="9:34" pos:end="9:42">red_shift</name></decl></parameter>, <parameter pos:start="9:45" pos:end="9:59"><decl pos:start="9:45" pos:end="9:59"><type pos:start="9:45" pos:end="9:59"><name pos:start="9:45" pos:end="9:47">int</name></type> <name pos:start="9:49" pos:end="9:59">green_shift</name></decl></parameter>, <parameter pos:start="9:62" pos:end="9:75"><decl pos:start="9:62" pos:end="9:75"><type pos:start="9:62" pos:end="9:75"><name pos:start="9:62" pos:end="9:64">int</name></type> <name pos:start="9:66" pos:end="9:75">blue_shift</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="145:1">{<block_content pos:start="13:5" pos:end="143:20">

    <decl_stmt pos:start="13:5" pos:end="18:0"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:28">host_big_endian_flag</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="17:1" pos:end="17:22">#<cpp:directive pos:start="17:2" pos:end="17:6">ifdef</cpp:directive> <name pos:start="17:8" pos:end="17:22">WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:24">host_big_endian_flag</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <literal type="number" pos:start="19:28" pos:end="19:28">1</literal></expr>;</expr_stmt>

<cpp:else pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:24">host_big_endian_flag</name> <operator pos:start="23:26" pos:end="23:26">=</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:24">true_color_flag</name></expr>)</condition> <block pos:start="27:27" pos:end="35:5">{<block_content pos:start="29:5" pos:end="33:15">

    <label pos:start="29:5" pos:end="29:9"><name pos:start="29:5" pos:end="29:8">fail</name>:</label>

	<expr_stmt pos:start="31:9" pos:end="31:29"><expr pos:start="31:9" pos:end="31:28"><call pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:24">vnc_client_error</name><argument_list pos:start="31:25" pos:end="31:28">(<argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><name pos:start="31:26" pos:end="31:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="121:5"><if pos:start="37:5" pos:end="53:5">if <condition pos:start="37:8" pos:end="45:63">(<expr pos:start="37:9" pos:end="45:62"><name pos:start="37:9" pos:end="37:22">bits_per_pixel</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <literal type="number" pos:start="37:27" pos:end="37:28">32</literal> <operator pos:start="37:30" pos:end="37:31">&amp;&amp;</operator>

        <name pos:start="39:9" pos:end="39:22">bits_per_pixel</name> <operator pos:start="39:24" pos:end="39:25">==</operator> <name pos:start="39:27" pos:end="39:35"><name pos:start="39:27" pos:end="39:28">vs</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:35">depth</name></name> <operator pos:start="39:37" pos:end="39:37">*</operator> <literal type="number" pos:start="39:39" pos:end="39:39">8</literal> <operator pos:start="39:41" pos:end="39:42">&amp;&amp;</operator>

        <name pos:start="41:9" pos:end="41:28">host_big_endian_flag</name> <operator pos:start="41:30" pos:end="41:31">==</operator> <name pos:start="41:33" pos:end="41:47">big_endian_flag</name> <operator pos:start="41:49" pos:end="41:50">&amp;&amp;</operator>

        <name pos:start="43:9" pos:end="43:15">red_max</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <literal type="number" pos:start="43:20" pos:end="43:23">0xff</literal> <operator pos:start="43:25" pos:end="43:26">&amp;&amp;</operator> <name pos:start="43:28" pos:end="43:36">green_max</name> <operator pos:start="43:38" pos:end="43:39">==</operator> <literal type="number" pos:start="43:41" pos:end="43:44">0xff</literal> <operator pos:start="43:46" pos:end="43:47">&amp;&amp;</operator> <name pos:start="43:49" pos:end="43:56">blue_max</name> <operator pos:start="43:58" pos:end="43:59">==</operator> <literal type="number" pos:start="43:61" pos:end="43:64">0xff</literal> <operator pos:start="43:66" pos:end="43:67">&amp;&amp;</operator>

        <name pos:start="45:9" pos:end="45:17">red_shift</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <literal type="number" pos:start="45:22" pos:end="45:23">16</literal> <operator pos:start="45:25" pos:end="45:26">&amp;&amp;</operator> <name pos:start="45:28" pos:end="45:38">green_shift</name> <operator pos:start="45:40" pos:end="45:41">==</operator> <literal type="number" pos:start="45:43" pos:end="45:43">8</literal> <operator pos:start="45:45" pos:end="45:46">&amp;&amp;</operator> <name pos:start="45:48" pos:end="45:57">blue_shift</name> <operator pos:start="45:59" pos:end="45:60">==</operator> <literal type="number" pos:start="45:62" pos:end="45:62">0</literal></expr>)</condition> <block pos:start="45:65" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:53">

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17"><name pos:start="47:9" pos:end="47:10">vs</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:17">depth</name></name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:10">vs</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:24">write_pixels</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:48">vnc_write_pixels_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:10">vs</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:29">send_hextile_tile</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <name pos:start="51:33" pos:end="51:52">send_hextile_tile_32</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="71:5">else

    if <condition pos:start="55:8" pos:end="63:63">(<expr pos:start="55:9" pos:end="63:62"><name pos:start="55:9" pos:end="55:22">bits_per_pixel</name> <operator pos:start="55:24" pos:end="55:25">==</operator> <literal type="number" pos:start="55:27" pos:end="55:28">16</literal> <operator pos:start="55:30" pos:end="55:31">&amp;&amp;</operator>

        <name pos:start="57:9" pos:end="57:22">bits_per_pixel</name> <operator pos:start="57:24" pos:end="57:25">==</operator> <name pos:start="57:27" pos:end="57:35"><name pos:start="57:27" pos:end="57:28">vs</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:35">depth</name></name> <operator pos:start="57:37" pos:end="57:37">*</operator> <literal type="number" pos:start="57:39" pos:end="57:39">8</literal> <operator pos:start="57:41" pos:end="57:42">&amp;&amp;</operator> 

        <name pos:start="59:9" pos:end="59:28">host_big_endian_flag</name> <operator pos:start="59:30" pos:end="59:31">==</operator> <name pos:start="59:33" pos:end="59:47">big_endian_flag</name> <operator pos:start="59:49" pos:end="59:50">&amp;&amp;</operator>

        <name pos:start="61:9" pos:end="61:15">red_max</name> <operator pos:start="61:17" pos:end="61:18">==</operator> <literal type="number" pos:start="61:20" pos:end="61:21">31</literal> <operator pos:start="61:23" pos:end="61:24">&amp;&amp;</operator> <name pos:start="61:26" pos:end="61:34">green_max</name> <operator pos:start="61:36" pos:end="61:37">==</operator> <literal type="number" pos:start="61:39" pos:end="61:40">63</literal> <operator pos:start="61:42" pos:end="61:43">&amp;&amp;</operator> <name pos:start="61:45" pos:end="61:52">blue_max</name> <operator pos:start="61:54" pos:end="61:55">==</operator> <literal type="number" pos:start="61:57" pos:end="61:58">31</literal> <operator pos:start="61:60" pos:end="61:61">&amp;&amp;</operator>

        <name pos:start="63:9" pos:end="63:17">red_shift</name> <operator pos:start="63:19" pos:end="63:20">==</operator> <literal type="number" pos:start="63:22" pos:end="63:23">11</literal> <operator pos:start="63:25" pos:end="63:26">&amp;&amp;</operator> <name pos:start="63:28" pos:end="63:38">green_shift</name> <operator pos:start="63:40" pos:end="63:41">==</operator> <literal type="number" pos:start="63:43" pos:end="63:43">5</literal> <operator pos:start="63:45" pos:end="63:46">&amp;&amp;</operator> <name pos:start="63:48" pos:end="63:57">blue_shift</name> <operator pos:start="63:59" pos:end="63:60">==</operator> <literal type="number" pos:start="63:62" pos:end="63:62">0</literal></expr>)</condition> <block pos:start="63:65" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:53">

        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:10">vs</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:17">depth</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:49"><expr pos:start="67:9" pos:end="67:48"><name pos:start="67:9" pos:end="67:24"><name pos:start="67:9" pos:end="67:10">vs</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:24">write_pixels</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:48">vnc_write_pixels_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:53"><expr pos:start="69:9" pos:end="69:52"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:10">vs</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:29">send_hextile_tile</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:52">send_hextile_tile_16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="87:5">else

    if <condition pos:start="73:8" pos:end="79:62">(<expr pos:start="73:9" pos:end="79:61"><name pos:start="73:9" pos:end="73:22">bits_per_pixel</name> <operator pos:start="73:24" pos:end="73:25">==</operator> <literal type="number" pos:start="73:27" pos:end="73:27">8</literal> <operator pos:start="73:29" pos:end="73:30">&amp;&amp;</operator>

        <name pos:start="75:9" pos:end="75:22">bits_per_pixel</name> <operator pos:start="75:24" pos:end="75:25">==</operator> <name pos:start="75:27" pos:end="75:35"><name pos:start="75:27" pos:end="75:28">vs</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:35">depth</name></name> <operator pos:start="75:37" pos:end="75:37">*</operator> <literal type="number" pos:start="75:39" pos:end="75:39">8</literal> <operator pos:start="75:41" pos:end="75:42">&amp;&amp;</operator>

        <name pos:start="77:9" pos:end="77:15">red_max</name> <operator pos:start="77:17" pos:end="77:18">==</operator> <literal type="number" pos:start="77:20" pos:end="77:20">7</literal> <operator pos:start="77:22" pos:end="77:23">&amp;&amp;</operator> <name pos:start="77:25" pos:end="77:33">green_max</name> <operator pos:start="77:35" pos:end="77:36">==</operator> <literal type="number" pos:start="77:38" pos:end="77:38">7</literal> <operator pos:start="77:40" pos:end="77:41">&amp;&amp;</operator> <name pos:start="77:43" pos:end="77:50">blue_max</name> <operator pos:start="77:52" pos:end="77:53">==</operator> <literal type="number" pos:start="77:55" pos:end="77:55">3</literal> <operator pos:start="77:57" pos:end="77:58">&amp;&amp;</operator>

        <name pos:start="79:9" pos:end="79:17">red_shift</name> <operator pos:start="79:19" pos:end="79:20">==</operator> <literal type="number" pos:start="79:22" pos:end="79:22">5</literal> <operator pos:start="79:24" pos:end="79:25">&amp;&amp;</operator> <name pos:start="79:27" pos:end="79:37">green_shift</name> <operator pos:start="79:39" pos:end="79:40">==</operator> <literal type="number" pos:start="79:42" pos:end="79:42">2</literal> <operator pos:start="79:44" pos:end="79:45">&amp;&amp;</operator> <name pos:start="79:47" pos:end="79:56">blue_shift</name> <operator pos:start="79:58" pos:end="79:59">==</operator> <literal type="number" pos:start="79:61" pos:end="79:61">0</literal></expr>)</condition> <block pos:start="79:64" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:52">

        <expr_stmt pos:start="81:9" pos:end="81:22"><expr pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:10">vs</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:17">depth</name></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:49"><expr pos:start="83:9" pos:end="83:48"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:10">vs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:24">write_pixels</name></name> <operator pos:start="83:26" pos:end="83:26">=</operator> <name pos:start="83:28" pos:end="83:48">vnc_write_pixels_copy</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:52"><expr pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:10">vs</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:29">send_hextile_tile</name></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:51">send_hextile_tile_8</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="87:7" pos:end="121:5">else

    <block pos:start="89:5" pos:end="121:5">{<block_content pos:start="93:9" pos:end="119:52">

        <comment type="block" pos:start="91:9" pos:end="91:37">/* generic and slower case */</comment>

        <if_stmt pos:start="93:9" pos:end="99:22"><if pos:start="93:9" pos:end="99:22">if <condition pos:start="93:12" pos:end="97:33">(<expr pos:start="93:13" pos:end="97:32"><name pos:start="93:13" pos:end="93:26">bits_per_pixel</name> <operator pos:start="93:28" pos:end="93:29">!=</operator> <literal type="number" pos:start="93:31" pos:end="93:31">8</literal> <operator pos:start="93:33" pos:end="93:34">&amp;&amp;</operator>

            <name pos:start="95:13" pos:end="95:26">bits_per_pixel</name> <operator pos:start="95:28" pos:end="95:29">!=</operator> <literal type="number" pos:start="95:31" pos:end="95:32">16</literal> <operator pos:start="95:34" pos:end="95:35">&amp;&amp;</operator>

            <name pos:start="97:13" pos:end="97:26">bits_per_pixel</name> <operator pos:start="97:28" pos:end="97:29">!=</operator> <literal type="number" pos:start="97:31" pos:end="97:32">32</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:22"><block_content pos:start="99:13" pos:end="99:22">

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="113:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:27">(<expr pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:14">vs</name><operator pos:start="101:15" pos:end="101:16">-&gt;</operator><name pos:start="101:17" pos:end="101:21">depth</name></name> <operator pos:start="101:23" pos:end="101:24">==</operator> <literal type="number" pos:start="101:26" pos:end="101:26">4</literal></expr>)</condition> <block pos:start="101:29" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:65">

            <expr_stmt pos:start="103:13" pos:end="103:65"><expr pos:start="103:13" pos:end="103:64"><name pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:14">vs</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:33">send_hextile_tile</name></name> <operator pos:start="103:35" pos:end="103:35">=</operator> <name pos:start="103:37" pos:end="103:64">send_hextile_tile_generic_32</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="105:11" pos:end="109:9">else if <condition pos:start="105:19" pos:end="105:34">(<expr pos:start="105:20" pos:end="105:33"><name pos:start="105:20" pos:end="105:28"><name pos:start="105:20" pos:end="105:21">vs</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:28">depth</name></name> <operator pos:start="105:30" pos:end="105:31">==</operator> <literal type="number" pos:start="105:33" pos:end="105:33">2</literal></expr>)</condition> <block pos:start="105:36" pos:end="109:9">{<block_content pos:start="107:12" pos:end="107:64">

           <expr_stmt pos:start="107:12" pos:end="107:64"><expr pos:start="107:12" pos:end="107:63"><name pos:start="107:12" pos:end="107:32"><name pos:start="107:12" pos:end="107:13">vs</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:32">send_hextile_tile</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <name pos:start="107:36" pos:end="107:63">send_hextile_tile_generic_16</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="113:9">else <block pos:start="109:16" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:64">

            <expr_stmt pos:start="111:13" pos:end="111:64"><expr pos:start="111:13" pos:end="111:63"><name pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:14">vs</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:33">send_hextile_tile</name></name> <operator pos:start="111:35" pos:end="111:35">=</operator> <name pos:start="111:37" pos:end="111:63">send_hextile_tile_generic_8</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:45"><expr pos:start="117:9" pos:end="117:44"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:10">vs</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:26">pix_big_endian</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:44">big_endian_flag</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:52"><expr pos:start="119:9" pos:end="119:51"><name pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:10">vs</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:24">write_pixels</name></name> <operator pos:start="119:26" pos:end="119:26">=</operator> <name pos:start="119:28" pos:end="119:51">vnc_write_pixels_generic</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:37"><expr pos:start="125:5" pos:end="125:36"><name pos:start="125:5" pos:end="125:24"><name pos:start="125:5" pos:end="125:6">vs</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:24">client_red_shift</name></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <name pos:start="125:28" pos:end="125:36">red_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:33"><expr pos:start="127:5" pos:end="127:32"><name pos:start="127:5" pos:end="127:22"><name pos:start="127:5" pos:end="127:6">vs</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:22">client_red_max</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <name pos:start="127:26" pos:end="127:32">red_max</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:41"><expr pos:start="129:5" pos:end="129:40"><name pos:start="129:5" pos:end="129:26"><name pos:start="129:5" pos:end="129:6">vs</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:26">client_green_shift</name></name> <operator pos:start="129:28" pos:end="129:28">=</operator> <name pos:start="129:30" pos:end="129:40">green_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:37"><expr pos:start="131:5" pos:end="131:36"><name pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:6">vs</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:24">client_green_max</name></name> <operator pos:start="131:26" pos:end="131:26">=</operator> <name pos:start="131:28" pos:end="131:36">green_max</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:39"><expr pos:start="133:5" pos:end="133:38"><name pos:start="133:5" pos:end="133:25"><name pos:start="133:5" pos:end="133:6">vs</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:25">client_blue_shift</name></name> <operator pos:start="133:27" pos:end="133:27">=</operator> <name pos:start="133:29" pos:end="133:38">blue_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:35"><expr pos:start="135:5" pos:end="135:34"><name pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:6">vs</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:23">client_blue_max</name></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <name pos:start="135:27" pos:end="135:34">blue_max</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:37"><expr pos:start="137:5" pos:end="137:36"><name pos:start="137:5" pos:end="137:15"><name pos:start="137:5" pos:end="137:6">vs</name><operator pos:start="137:7" pos:end="137:8">-&gt;</operator><name pos:start="137:9" pos:end="137:15">pix_bpp</name></name> <operator pos:start="137:17" pos:end="137:17">=</operator> <name pos:start="137:19" pos:end="137:32">bits_per_pixel</name> <operator pos:start="137:34" pos:end="137:34">/</operator> <literal type="number" pos:start="137:36" pos:end="137:36">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:21">vga_hw_invalidate</name><argument_list pos:start="141:22" pos:end="141:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:20"><expr pos:start="143:5" pos:end="143:19"><call pos:start="143:5" pos:end="143:19"><name pos:start="143:5" pos:end="143:17">vga_hw_update</name><argument_list pos:start="143:18" pos:end="143:19">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
