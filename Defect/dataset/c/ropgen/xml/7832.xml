<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7832.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:35">qio_dns_resolver_lookup_result</name><parameter_list pos:start="1:36" pos:end="7:59">(<parameter pos:start="1:37" pos:end="1:60"><decl pos:start="1:37" pos:end="1:60"><type pos:start="1:37" pos:end="1:60"><name pos:start="1:37" pos:end="1:50">QIODNSResolver</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">resolver</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:49"><decl pos:start="3:37" pos:end="3:49"><type pos:start="3:37" pos:end="3:49"><name pos:start="3:37" pos:end="3:43">QIOTask</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">task</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:50"><decl pos:start="5:37" pos:end="5:50"><type pos:start="5:37" pos:end="5:50"><name pos:start="5:37" pos:end="5:42">size_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:50">naddrs</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:58"><decl pos:start="7:37" pos:end="7:58"><type pos:start="7:37" pos:end="7:58"><name pos:start="7:37" pos:end="7:49">SocketAddress</name> <modifier pos:start="7:51" pos:end="7:51">*</modifier><modifier pos:start="7:52" pos:end="7:52">*</modifier><modifier pos:start="7:53" pos:end="7:53">*</modifier></type><name pos:start="7:54" pos:end="7:58">addrs</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="41:1">{<block_content pos:start="11:5" pos:end="39:5">

    <decl_stmt pos:start="11:5" pos:end="13:42"><decl pos:start="11:5" pos:end="13:41"><type pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:35">QIODNSResolverLookupData</name></name> <modifier pos:start="11:37" pos:end="11:37">*</modifier></type><name pos:start="11:38" pos:end="11:41">data</name> <init pos:start="11:43" pos:end="13:41">=

        <expr pos:start="13:9" pos:end="13:41"><call pos:start="13:9" pos:end="13:41"><name pos:start="13:9" pos:end="13:35">qio_task_get_result_pointer</name><argument_list pos:start="13:36" pos:end="13:41">(<argument pos:start="13:37" pos:end="13:40"><expr pos:start="13:37" pos:end="13:40"><name pos:start="13:37" pos:end="13:40">task</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:12">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:16"><expr pos:start="19:5" pos:end="19:15"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:11">naddrs</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:18"><expr pos:start="21:5" pos:end="21:17"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:10">addrs</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:17">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:13">data</name></expr>)</condition> <block pos:start="23:16" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><operator pos:start="31:5" pos:end="31:5">*</operator><name pos:start="31:6" pos:end="31:11">naddrs</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:26"><name pos:start="31:15" pos:end="31:18">data</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:26">naddrs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><operator pos:start="33:5" pos:end="33:5">*</operator><name pos:start="33:6" pos:end="33:10">addrs</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="33:50"><name pos:start="33:14" pos:end="33:19">g_new0</name><argument_list pos:start="33:20" pos:end="33:50">(<argument pos:start="33:21" pos:end="33:35"><expr pos:start="33:21" pos:end="33:35"><name pos:start="33:21" pos:end="33:33">SocketAddress</name> <operator pos:start="33:35" pos:end="33:35">*</operator></expr></argument>, <argument pos:start="33:38" pos:end="33:49"><expr pos:start="33:38" pos:end="33:49"><name pos:start="33:38" pos:end="33:49"><name pos:start="33:38" pos:end="33:41">data</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:49">naddrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="39:5">for <control pos:start="35:9" pos:end="35:38">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:24">data</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:32">naddrs</name></name></expr>;</condition> <incr pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:35">i</name><operator pos:start="35:36" pos:end="35:37">++</operator></expr></incr>)</control> <block pos:start="35:40" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:64">

        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><operator pos:start="37:9" pos:end="37:9">(</operator><operator pos:start="37:10" pos:end="37:10">*</operator><name pos:start="37:11" pos:end="37:15">addrs</name><operator pos:start="37:16" pos:end="37:16">)</operator><index pos:start="37:17" pos:end="37:19">[<expr pos:start="37:18" pos:end="37:18"><name pos:start="37:18" pos:end="37:18">i</name></expr>]</index> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:63"><name pos:start="37:23" pos:end="37:32">QAPI_CLONE</name><argument_list pos:start="37:33" pos:end="37:63">(<argument pos:start="37:34" pos:end="37:46"><expr pos:start="37:34" pos:end="37:46"><name pos:start="37:34" pos:end="37:46">SocketAddress</name></expr></argument>, <argument pos:start="37:49" pos:end="37:62"><expr pos:start="37:49" pos:end="37:62"><name pos:start="37:49" pos:end="37:62"><name pos:start="37:49" pos:end="37:52">data</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:59">addrs</name><index pos:start="37:60" pos:end="37:62">[<expr pos:start="37:61" pos:end="37:61"><name pos:start="37:61" pos:end="37:61">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
