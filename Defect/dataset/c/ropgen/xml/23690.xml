<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23690.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">lm32_uclinux_init</name><parameter_list pos:start="1:30" pos:end="1:56">(<parameter pos:start="1:31" pos:end="1:55"><decl pos:start="1:31" pos:end="1:55"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:49">QEMUMachineInitArgs</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">args</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:52">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:25">cpu_model</name> <init pos:start="5:27" pos:end="5:43">= <expr pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:32">args</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">cpu_model</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:31">kernel_filename</name> <init pos:start="7:33" pos:end="7:55">= <expr pos:start="7:35" pos:end="7:55"><name pos:start="7:35" pos:end="7:55"><name pos:start="7:35" pos:end="7:38">args</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:55">kernel_filename</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:30">kernel_cmdline</name> <init pos:start="9:32" pos:end="9:53">= <expr pos:start="9:34" pos:end="9:53"><name pos:start="9:34" pos:end="9:53"><name pos:start="9:34" pos:end="9:37">args</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:53">kernel_cmdline</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:31">initrd_filename</name> <init pos:start="11:33" pos:end="11:55">= <expr pos:start="11:35" pos:end="11:55"><name pos:start="11:35" pos:end="11:55"><name pos:start="11:35" pos:end="11:38">args</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:55">initrd_filename</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">LM32CPU</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">CPULM32State</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">DriveInfo</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:20">dinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:59"><decl pos:start="19:5" pos:end="19:58"><type pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">MemoryRegion</name> <modifier pos:start="19:18" pos:end="19:18">*</modifier></type><name pos:start="19:19" pos:end="19:35">address_space_mem</name> <init pos:start="19:37" pos:end="19:58">=  <expr pos:start="19:40" pos:end="19:58"><call pos:start="19:40" pos:end="19:58"><name pos:start="19:40" pos:end="19:56">get_system_memory</name><argument_list pos:start="19:57" pos:end="19:58">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:52"><decl pos:start="21:5" pos:end="21:51"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">MemoryRegion</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:26">phys_ram</name> <init pos:start="21:28" pos:end="21:51">= <expr pos:start="21:30" pos:end="21:51"><call pos:start="21:30" pos:end="21:51"><name pos:start="21:30" pos:end="21:34">g_new</name><argument_list pos:start="21:35" pos:end="21:51">(<argument pos:start="21:36" pos:end="21:47"><expr pos:start="21:36" pos:end="21:47"><name pos:start="21:36" pos:end="21:47">MemoryRegion</name></expr></argument>, <argument pos:start="21:50" pos:end="21:50"><expr pos:start="21:50" pos:end="21:50"><literal type="number" pos:start="21:50" pos:end="21:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">qemu_irq</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:21">cpu_irq</name></decl>, <decl pos:start="23:24" pos:end="23:30"><type ref="prev" pos:start="23:5" pos:end="23:14"/><name pos:start="23:24" pos:end="23:30"><name pos:start="23:24" pos:end="23:26">irq</name><index pos:start="23:27" pos:end="23:30">[<expr pos:start="23:28" pos:end="23:29"><literal type="number" pos:start="23:28" pos:end="23:29">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">HWSetup</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:15">hw</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:26"><decl pos:start="27:5" pos:end="27:25"><type pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:13">ResetInfo</name> <modifier pos:start="27:15" pos:end="27:15">*</modifier></type><name pos:start="27:16" pos:end="27:25">reset_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:20">/* memory map */</comment>

    <decl_stmt pos:start="35:5" pos:end="35:49"><decl pos:start="35:5" pos:end="35:48"><type pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:22">target_phys_addr_t</name></type> <name pos:start="35:24" pos:end="35:33">flash_base</name>   <init pos:start="35:37" pos:end="35:48">= <expr pos:start="35:39" pos:end="35:48"><literal type="number" pos:start="35:39" pos:end="35:48">0x04000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:49"><decl pos:start="37:5" pos:end="37:48"><type pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:10">size_t</name></type> <name pos:start="37:12" pos:end="37:28">flash_sector_size</name>        <init pos:start="37:37" pos:end="37:48">= <expr pos:start="37:39" pos:end="37:48"><literal type="number" pos:start="37:39" pos:end="37:41">256</literal> <operator pos:start="37:43" pos:end="37:43">*</operator> <literal type="number" pos:start="37:45" pos:end="37:48">1024</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:55"><decl pos:start="39:5" pos:end="39:54"><type pos:start="39:5" pos:end="39:10"><name pos:start="39:5" pos:end="39:10">size_t</name></type> <name pos:start="39:12" pos:end="39:21">flash_size</name>               <init pos:start="39:37" pos:end="39:54">= <expr pos:start="39:39" pos:end="39:54"><literal type="number" pos:start="39:39" pos:end="39:40">32</literal> <operator pos:start="39:42" pos:end="39:42">*</operator> <literal type="number" pos:start="39:44" pos:end="39:47">1024</literal> <operator pos:start="39:49" pos:end="39:49">*</operator> <literal type="number" pos:start="39:51" pos:end="39:54">1024</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:49"><decl pos:start="41:5" pos:end="41:48"><type pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:22">target_phys_addr_t</name></type> <name pos:start="41:24" pos:end="41:31">ram_base</name>     <init pos:start="41:37" pos:end="41:48">= <expr pos:start="41:39" pos:end="41:48"><literal type="number" pos:start="41:39" pos:end="41:48">0x08000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:55"><decl pos:start="43:5" pos:end="43:54"><type pos:start="43:5" pos:end="43:10"><name pos:start="43:5" pos:end="43:10">size_t</name></type> <name pos:start="43:12" pos:end="43:19">ram_size</name>                 <init pos:start="43:37" pos:end="43:54">= <expr pos:start="43:39" pos:end="43:54"><literal type="number" pos:start="43:39" pos:end="43:40">64</literal> <operator pos:start="43:42" pos:end="43:42">*</operator> <literal type="number" pos:start="43:44" pos:end="43:47">1024</literal> <operator pos:start="43:49" pos:end="43:49">*</operator> <literal type="number" pos:start="43:51" pos:end="43:54">1024</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:49"><decl pos:start="45:5" pos:end="45:48"><type pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:22">target_phys_addr_t</name></type> <name pos:start="45:24" pos:end="45:33">uart0_base</name>   <init pos:start="45:37" pos:end="45:48">= <expr pos:start="45:39" pos:end="45:48"><literal type="number" pos:start="45:39" pos:end="45:48">0x80000000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:49"><decl pos:start="47:5" pos:end="47:48"><type pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:22">target_phys_addr_t</name></type> <name pos:start="47:24" pos:end="47:34">timer0_base</name>  <init pos:start="47:37" pos:end="47:48">= <expr pos:start="47:39" pos:end="47:48"><literal type="number" pos:start="47:39" pos:end="47:48">0x80002000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:49"><decl pos:start="49:5" pos:end="49:48"><type pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:22">target_phys_addr_t</name></type> <name pos:start="49:24" pos:end="49:34">timer1_base</name>  <init pos:start="49:37" pos:end="49:48">= <expr pos:start="49:39" pos:end="49:48"><literal type="number" pos:start="49:39" pos:end="49:48">0x80010000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:49"><decl pos:start="51:5" pos:end="51:48"><type pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:22">target_phys_addr_t</name></type> <name pos:start="51:24" pos:end="51:34">timer2_base</name>  <init pos:start="51:37" pos:end="51:48">= <expr pos:start="51:39" pos:end="51:48"><literal type="number" pos:start="51:39" pos:end="51:48">0x80012000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:40"><decl pos:start="53:5" pos:end="53:39"><type pos:start="53:5" pos:end="53:7"><name pos:start="53:5" pos:end="53:7">int</name></type> <name pos:start="53:9" pos:end="53:17">uart0_irq</name>                   <init pos:start="53:37" pos:end="53:39">= <expr pos:start="53:39" pos:end="53:39"><literal type="number" pos:start="53:39" pos:end="53:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:40"><decl pos:start="55:5" pos:end="55:39"><type pos:start="55:5" pos:end="55:7"><name pos:start="55:5" pos:end="55:7">int</name></type> <name pos:start="55:9" pos:end="55:18">timer0_irq</name>                  <init pos:start="55:37" pos:end="55:39">= <expr pos:start="55:39" pos:end="55:39"><literal type="number" pos:start="55:39" pos:end="55:39">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:41"><decl pos:start="57:5" pos:end="57:40"><type pos:start="57:5" pos:end="57:7"><name pos:start="57:5" pos:end="57:7">int</name></type> <name pos:start="57:9" pos:end="57:18">timer1_irq</name>                  <init pos:start="57:37" pos:end="57:40">= <expr pos:start="57:39" pos:end="57:40"><literal type="number" pos:start="57:39" pos:end="57:40">20</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:41"><decl pos:start="59:5" pos:end="59:40"><type pos:start="59:5" pos:end="59:7"><name pos:start="59:5" pos:end="59:7">int</name></type> <name pos:start="59:9" pos:end="59:18">timer2_irq</name>                  <init pos:start="59:37" pos:end="59:40">= <expr pos:start="59:39" pos:end="59:40"><literal type="number" pos:start="59:39" pos:end="59:40">21</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="61:49"><decl pos:start="61:5" pos:end="61:48"><type pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:22">target_phys_addr_t</name></type> <name pos:start="61:24" pos:end="61:35">hwsetup_base</name> <init pos:start="61:37" pos:end="61:48">= <expr pos:start="61:39" pos:end="61:48"><literal type="number" pos:start="61:39" pos:end="61:48">0x0bffe000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="63:5" pos:end="63:49"><decl pos:start="63:5" pos:end="63:48"><type pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:22">target_phys_addr_t</name></type> <name pos:start="63:24" pos:end="63:35">cmdline_base</name> <init pos:start="63:37" pos:end="63:48">= <expr pos:start="63:39" pos:end="63:48"><literal type="number" pos:start="63:39" pos:end="63:48">0x0bfff000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="65:5" pos:end="65:49"><decl pos:start="65:5" pos:end="65:48"><type pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:22">target_phys_addr_t</name></type> <name pos:start="65:24" pos:end="65:34">initrd_base</name>  <init pos:start="65:37" pos:end="65:48">= <expr pos:start="65:39" pos:end="65:48"><literal type="number" pos:start="65:39" pos:end="65:48">0x08400000</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="67:5" pos:end="67:49"><decl pos:start="67:5" pos:end="67:48"><type pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:10">size_t</name></type> <name pos:start="67:12" pos:end="67:21">initrd_max</name>               <init pos:start="67:37" pos:end="67:48">= <expr pos:start="67:39" pos:end="67:48"><literal type="number" pos:start="67:39" pos:end="67:48">0x01000000</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:14">reset_info</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:45"><name pos:start="71:18" pos:end="71:26">g_malloc0</name><argument_list pos:start="71:27" pos:end="71:45">(<argument pos:start="71:28" pos:end="71:44"><expr pos:start="71:28" pos:end="71:44"><sizeof pos:start="71:28" pos:end="71:44">sizeof<argument_list pos:start="71:34" pos:end="71:44">(<argument pos:start="71:35" pos:end="71:43"><expr pos:start="71:35" pos:end="71:43"><name pos:start="71:35" pos:end="71:43">ResetInfo</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:26">(<expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:17">cpu_model</name> <operator pos:start="75:19" pos:end="75:20">==</operator> <name pos:start="75:22" pos:end="75:25">NULL</name></expr>)</condition> <block pos:start="75:28" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:32">

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:17">cpu_model</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <literal type="string" pos:start="77:21" pos:end="77:31">"lm32-full"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:7">cpu</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:34"><name pos:start="81:11" pos:end="81:23">cpu_lm32_init</name><argument_list pos:start="81:24" pos:end="81:34">(<argument pos:start="81:25" pos:end="81:33"><expr pos:start="81:25" pos:end="81:33"><name pos:start="81:25" pos:end="81:33">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:20"><expr pos:start="83:5" pos:end="83:19"><name pos:start="83:5" pos:end="83:7">env</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <operator pos:start="83:11" pos:end="83:11">&amp;</operator><name pos:start="83:12" pos:end="83:19"><name pos:start="83:12" pos:end="83:14">cpu</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:19">env</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:26"><expr pos:start="85:5" pos:end="85:25"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:14">reset_info</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:19">cpu</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:25">cpu</name></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:40"><expr pos:start="89:5" pos:end="89:39"><name pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:14">reset_info</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:26">flash_base</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:39">flash_base</name></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:69"><expr pos:start="93:5" pos:end="93:68"><call pos:start="93:5" pos:end="93:68"><name pos:start="93:5" pos:end="93:26">memory_region_init_ram</name><argument_list pos:start="93:27" pos:end="93:68">(<argument pos:start="93:28" pos:end="93:35"><expr pos:start="93:28" pos:end="93:35"><name pos:start="93:28" pos:end="93:35">phys_ram</name></expr></argument>, <argument pos:start="93:38" pos:end="93:57"><expr pos:start="93:38" pos:end="93:57"><literal type="string" pos:start="93:38" pos:end="93:57">"lm32_uclinux.sdram"</literal></expr></argument>, <argument pos:start="93:60" pos:end="93:67"><expr pos:start="93:60" pos:end="93:67"><name pos:start="93:60" pos:end="93:67">ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:42"><expr pos:start="95:5" pos:end="95:41"><call pos:start="95:5" pos:end="95:41"><name pos:start="95:5" pos:end="95:31">vmstate_register_ram_global</name><argument_list pos:start="95:32" pos:end="95:41">(<argument pos:start="95:33" pos:end="95:40"><expr pos:start="95:33" pos:end="95:40"><name pos:start="95:33" pos:end="95:40">phys_ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:71"><expr pos:start="97:5" pos:end="97:70"><call pos:start="97:5" pos:end="97:70"><name pos:start="97:5" pos:end="97:31">memory_region_add_subregion</name><argument_list pos:start="97:32" pos:end="97:70">(<argument pos:start="97:33" pos:end="97:49"><expr pos:start="97:33" pos:end="97:49"><name pos:start="97:33" pos:end="97:49">address_space_mem</name></expr></argument>, <argument pos:start="97:52" pos:end="97:59"><expr pos:start="97:52" pos:end="97:59"><name pos:start="97:52" pos:end="97:59">ram_base</name></expr></argument>, <argument pos:start="97:62" pos:end="97:69"><expr pos:start="97:62" pos:end="97:69"><name pos:start="97:62" pos:end="97:69">phys_ram</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:9">dinfo</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <call pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:21">drive_get</name><argument_list pos:start="101:22" pos:end="101:38">(<argument pos:start="101:23" pos:end="101:31"><expr pos:start="101:23" pos:end="101:31"><name pos:start="101:23" pos:end="101:31">IF_PFLASH</name></expr></argument>, <argument pos:start="101:34" pos:end="101:34"><expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">0</literal></expr></argument>, <argument pos:start="101:37" pos:end="101:37"><expr pos:start="101:37" pos:end="101:37"><literal type="number" pos:start="101:37" pos:end="101:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="103:5" pos:end="103:28">/* Spansion S29NS128P */</comment>

    <expr_stmt pos:start="105:5" pos:end="111:67"><expr pos:start="105:5" pos:end="111:66"><call pos:start="105:5" pos:end="111:66"><name pos:start="105:5" pos:end="105:25">pflash_cfi02_register</name><argument_list pos:start="105:26" pos:end="111:66">(<argument pos:start="105:27" pos:end="105:36"><expr pos:start="105:27" pos:end="105:36"><name pos:start="105:27" pos:end="105:36">flash_base</name></expr></argument>, <argument pos:start="105:39" pos:end="105:42"><expr pos:start="105:39" pos:end="105:42"><name pos:start="105:39" pos:end="105:42">NULL</name></expr></argument>, <argument pos:start="105:45" pos:end="105:64"><expr pos:start="105:45" pos:end="105:64"><literal type="string" pos:start="105:45" pos:end="105:64">"lm32_uclinux.flash"</literal></expr></argument>, <argument pos:start="105:67" pos:end="105:76"><expr pos:start="105:67" pos:end="105:76"><name pos:start="105:67" pos:end="105:76">flash_size</name></expr></argument>,

                          <argument pos:start="107:27" pos:end="107:52"><expr pos:start="107:27" pos:end="107:52"><ternary pos:start="107:27" pos:end="107:52"><condition pos:start="107:27" pos:end="107:33"><expr pos:start="107:27" pos:end="107:31"><name pos:start="107:27" pos:end="107:31">dinfo</name></expr> ?</condition><then pos:start="107:35" pos:end="107:45"> <expr pos:start="107:35" pos:end="107:45"><name pos:start="107:35" pos:end="107:45"><name pos:start="107:35" pos:end="107:39">dinfo</name><operator pos:start="107:40" pos:end="107:41">-&gt;</operator><name pos:start="107:42" pos:end="107:45">bdrv</name></name></expr> </then><else pos:start="107:47" pos:end="107:52">: <expr pos:start="107:49" pos:end="107:52"><name pos:start="107:49" pos:end="107:52">NULL</name></expr></else></ternary></expr></argument>, <argument pos:start="107:55" pos:end="107:71"><expr pos:start="107:55" pos:end="107:71"><name pos:start="107:55" pos:end="107:71">flash_sector_size</name></expr></argument>,

                          <argument pos:start="109:27" pos:end="109:56"><expr pos:start="109:27" pos:end="109:56"><name pos:start="109:27" pos:end="109:36">flash_size</name> <operator pos:start="109:38" pos:end="109:38">/</operator> <name pos:start="109:40" pos:end="109:56">flash_sector_size</name></expr></argument>, <argument pos:start="109:59" pos:end="109:59"><expr pos:start="109:59" pos:end="109:59"><literal type="number" pos:start="109:59" pos:end="109:59">1</literal></expr></argument>, <argument pos:start="109:62" pos:end="109:62"><expr pos:start="109:62" pos:end="109:62"><literal type="number" pos:start="109:62" pos:end="109:62">2</literal></expr></argument>,

                          <argument pos:start="111:27" pos:end="111:30"><expr pos:start="111:27" pos:end="111:30"><literal type="number" pos:start="111:27" pos:end="111:30">0x01</literal></expr></argument>, <argument pos:start="111:33" pos:end="111:36"><expr pos:start="111:33" pos:end="111:36"><literal type="number" pos:start="111:33" pos:end="111:36">0x7e</literal></expr></argument>, <argument pos:start="111:39" pos:end="111:42"><expr pos:start="111:39" pos:end="111:42"><literal type="number" pos:start="111:39" pos:end="111:42">0x43</literal></expr></argument>, <argument pos:start="111:45" pos:end="111:48"><expr pos:start="111:45" pos:end="111:48"><literal type="number" pos:start="111:45" pos:end="111:48">0x00</literal></expr></argument>, <argument pos:start="111:51" pos:end="111:55"><expr pos:start="111:51" pos:end="111:55"><literal type="number" pos:start="111:51" pos:end="111:55">0x555</literal></expr></argument>, <argument pos:start="111:58" pos:end="111:62"><expr pos:start="111:58" pos:end="111:62"><literal type="number" pos:start="111:58" pos:end="111:62">0x2aa</literal></expr></argument>, <argument pos:start="111:65" pos:end="111:65"><expr pos:start="111:65" pos:end="111:65"><literal type="number" pos:start="111:65" pos:end="111:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:26">/* create irq lines */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:58"><expr pos:start="117:5" pos:end="117:57"><name pos:start="117:5" pos:end="117:11">cpu_irq</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:57"><name pos:start="117:15" pos:end="117:32">qemu_allocate_irqs</name><argument_list pos:start="117:33" pos:end="117:57">(<argument pos:start="117:34" pos:end="117:48"><expr pos:start="117:34" pos:end="117:48"><name pos:start="117:34" pos:end="117:48">cpu_irq_handler</name></expr></argument>, <argument pos:start="117:51" pos:end="117:53"><expr pos:start="117:51" pos:end="117:53"><name pos:start="117:51" pos:end="117:53">env</name></expr></argument>, <argument pos:start="117:56" pos:end="117:56"><expr pos:start="117:56" pos:end="117:56"><literal type="number" pos:start="117:56" pos:end="117:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:45"><expr pos:start="119:5" pos:end="119:44"><name pos:start="119:5" pos:end="119:18"><name pos:start="119:5" pos:end="119:7">env</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:18">pic_state</name></name> <operator pos:start="119:20" pos:end="119:20">=</operator> <call pos:start="119:22" pos:end="119:44"><name pos:start="119:22" pos:end="119:34">lm32_pic_init</name><argument_list pos:start="119:35" pos:end="119:44">(<argument pos:start="119:36" pos:end="119:43"><expr pos:start="119:36" pos:end="119:43"><operator pos:start="119:36" pos:end="119:36">*</operator><name pos:start="119:37" pos:end="119:43">cpu_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="121:5" pos:end="125:5">for <control pos:start="121:9" pos:end="121:28">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:23"><expr pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <literal type="number" pos:start="121:21" pos:end="121:22">32</literal></expr>;</condition> <incr pos:start="121:25" pos:end="121:27"><expr pos:start="121:25" pos:end="121:27"><name pos:start="121:25" pos:end="121:25">i</name><operator pos:start="121:26" pos:end="121:27">++</operator></expr></incr>)</control> <block pos:start="121:30" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:53">

        <expr_stmt pos:start="123:9" pos:end="123:53"><expr pos:start="123:9" pos:end="123:52"><name pos:start="123:9" pos:end="123:14"><name pos:start="123:9" pos:end="123:11">irq</name><index pos:start="123:12" pos:end="123:14">[<expr pos:start="123:13" pos:end="123:13"><name pos:start="123:13" pos:end="123:13">i</name></expr>]</index></name> <operator pos:start="123:16" pos:end="123:16">=</operator> <call pos:start="123:18" pos:end="123:52"><name pos:start="123:18" pos:end="123:33">qdev_get_gpio_in</name><argument_list pos:start="123:34" pos:end="123:52">(<argument pos:start="123:35" pos:end="123:48"><expr pos:start="123:35" pos:end="123:48"><name pos:start="123:35" pos:end="123:48"><name pos:start="123:35" pos:end="123:37">env</name><operator pos:start="123:38" pos:end="123:39">-&gt;</operator><name pos:start="123:40" pos:end="123:48">pic_state</name></name></expr></argument>, <argument pos:start="123:51" pos:end="123:51"><expr pos:start="123:51" pos:end="123:51"><name pos:start="123:51" pos:end="123:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="129:5" pos:end="129:66"><expr pos:start="129:5" pos:end="129:65"><call pos:start="129:5" pos:end="129:65"><name pos:start="129:5" pos:end="129:24">sysbus_create_simple</name><argument_list pos:start="129:25" pos:end="129:65">(<argument pos:start="129:26" pos:end="129:36"><expr pos:start="129:26" pos:end="129:36"><literal type="string" pos:start="129:26" pos:end="129:36">"lm32-uart"</literal></expr></argument>, <argument pos:start="129:39" pos:end="129:48"><expr pos:start="129:39" pos:end="129:48"><name pos:start="129:39" pos:end="129:48">uart0_base</name></expr></argument>, <argument pos:start="129:51" pos:end="129:64"><expr pos:start="129:51" pos:end="129:64"><name pos:start="129:51" pos:end="129:64"><name pos:start="129:51" pos:end="129:53">irq</name><index pos:start="129:54" pos:end="129:64">[<expr pos:start="129:55" pos:end="129:63"><name pos:start="129:55" pos:end="129:63">uart0_irq</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:69"><expr pos:start="131:5" pos:end="131:68"><call pos:start="131:5" pos:end="131:68"><name pos:start="131:5" pos:end="131:24">sysbus_create_simple</name><argument_list pos:start="131:25" pos:end="131:68">(<argument pos:start="131:26" pos:end="131:37"><expr pos:start="131:26" pos:end="131:37"><literal type="string" pos:start="131:26" pos:end="131:37">"lm32-timer"</literal></expr></argument>, <argument pos:start="131:40" pos:end="131:50"><expr pos:start="131:40" pos:end="131:50"><name pos:start="131:40" pos:end="131:50">timer0_base</name></expr></argument>, <argument pos:start="131:53" pos:end="131:67"><expr pos:start="131:53" pos:end="131:67"><name pos:start="131:53" pos:end="131:67"><name pos:start="131:53" pos:end="131:55">irq</name><index pos:start="131:56" pos:end="131:67">[<expr pos:start="131:57" pos:end="131:66"><name pos:start="131:57" pos:end="131:66">timer0_irq</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:69"><expr pos:start="133:5" pos:end="133:68"><call pos:start="133:5" pos:end="133:68"><name pos:start="133:5" pos:end="133:24">sysbus_create_simple</name><argument_list pos:start="133:25" pos:end="133:68">(<argument pos:start="133:26" pos:end="133:37"><expr pos:start="133:26" pos:end="133:37"><literal type="string" pos:start="133:26" pos:end="133:37">"lm32-timer"</literal></expr></argument>, <argument pos:start="133:40" pos:end="133:50"><expr pos:start="133:40" pos:end="133:50"><name pos:start="133:40" pos:end="133:50">timer1_base</name></expr></argument>, <argument pos:start="133:53" pos:end="133:67"><expr pos:start="133:53" pos:end="133:67"><name pos:start="133:53" pos:end="133:67"><name pos:start="133:53" pos:end="133:55">irq</name><index pos:start="133:56" pos:end="133:67">[<expr pos:start="133:57" pos:end="133:66"><name pos:start="133:57" pos:end="133:66">timer1_irq</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:69"><expr pos:start="135:5" pos:end="135:68"><call pos:start="135:5" pos:end="135:68"><name pos:start="135:5" pos:end="135:24">sysbus_create_simple</name><argument_list pos:start="135:25" pos:end="135:68">(<argument pos:start="135:26" pos:end="135:37"><expr pos:start="135:26" pos:end="135:37"><literal type="string" pos:start="135:26" pos:end="135:37">"lm32-timer"</literal></expr></argument>, <argument pos:start="135:40" pos:end="135:50"><expr pos:start="135:40" pos:end="135:50"><name pos:start="135:40" pos:end="135:50">timer2_base</name></expr></argument>, <argument pos:start="135:53" pos:end="135:67"><expr pos:start="135:53" pos:end="135:67"><name pos:start="135:53" pos:end="135:67"><name pos:start="135:53" pos:end="135:55">irq</name><index pos:start="135:56" pos:end="135:67">[<expr pos:start="135:57" pos:end="135:66"><name pos:start="135:57" pos:end="135:66">timer2_irq</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:49">/* make sure juart isn't the first chardev */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:41"><expr pos:start="141:5" pos:end="141:40"><name pos:start="141:5" pos:end="141:20"><name pos:start="141:5" pos:end="141:7">env</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:20">juart_state</name></name> <operator pos:start="141:22" pos:end="141:22">=</operator> <call pos:start="141:24" pos:end="141:40"><name pos:start="141:24" pos:end="141:38">lm32_juart_init</name><argument_list pos:start="141:39" pos:end="141:40">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:42"><expr pos:start="145:5" pos:end="145:41"><name pos:start="145:5" pos:end="145:28"><name pos:start="145:5" pos:end="145:14">reset_info</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:28">bootstrap_pc</name></name> <operator pos:start="145:30" pos:end="145:30">=</operator> <name pos:start="145:32" pos:end="145:41">flash_base</name></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="187:5"><if pos:start="149:5" pos:end="187:5">if <condition pos:start="149:8" pos:end="149:24">(<expr pos:start="149:9" pos:end="149:23"><name pos:start="149:9" pos:end="149:23">kernel_filename</name></expr>)</condition> <block pos:start="149:26" pos:end="187:5">{<block_content pos:start="151:9" pos:end="185:9">

        <decl_stmt pos:start="151:9" pos:end="151:23"><decl pos:start="151:9" pos:end="151:22"><type pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:16">uint64_t</name></type> <name pos:start="151:18" pos:end="151:22">entry</name></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:24"><decl pos:start="153:9" pos:end="153:23"><type pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">int</name></type> <name pos:start="153:13" pos:end="153:23">kernel_size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="157:9" pos:end="159:50"><expr pos:start="157:9" pos:end="159:49"><name pos:start="157:9" pos:end="157:19">kernel_size</name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="159:49"><name pos:start="157:23" pos:end="157:30">load_elf</name><argument_list pos:start="157:31" pos:end="159:49">(<argument pos:start="157:32" pos:end="157:46"><expr pos:start="157:32" pos:end="157:46"><name pos:start="157:32" pos:end="157:46">kernel_filename</name></expr></argument>, <argument pos:start="157:49" pos:end="157:52"><expr pos:start="157:49" pos:end="157:52"><name pos:start="157:49" pos:end="157:52">NULL</name></expr></argument>, <argument pos:start="157:55" pos:end="157:58"><expr pos:start="157:55" pos:end="157:58"><name pos:start="157:55" pos:end="157:58">NULL</name></expr></argument>, <argument pos:start="157:61" pos:end="157:66"><expr pos:start="157:61" pos:end="157:66"><operator pos:start="157:61" pos:end="157:61">&amp;</operator><name pos:start="157:62" pos:end="157:66">entry</name></expr></argument>, <argument pos:start="157:69" pos:end="157:72"><expr pos:start="157:69" pos:end="157:72"><name pos:start="157:69" pos:end="157:72">NULL</name></expr></argument>, <argument pos:start="157:75" pos:end="157:78"><expr pos:start="157:75" pos:end="157:78"><name pos:start="157:75" pos:end="157:78">NULL</name></expr></argument>,

                               <argument pos:start="159:32" pos:end="159:32"><expr pos:start="159:32" pos:end="159:32"><literal type="number" pos:start="159:32" pos:end="159:32">1</literal></expr></argument>, <argument pos:start="159:35" pos:end="159:45"><expr pos:start="159:35" pos:end="159:45"><name pos:start="159:35" pos:end="159:45">ELF_MACHINE</name></expr></argument>, <argument pos:start="159:48" pos:end="159:48"><expr pos:start="159:48" pos:end="159:48"><literal type="number" pos:start="159:48" pos:end="159:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:41"><expr pos:start="161:9" pos:end="161:40"><name pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:18">reset_info</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:32">bootstrap_pc</name></name> <operator pos:start="161:34" pos:end="161:34">=</operator> <name pos:start="161:36" pos:end="161:40">entry</name></expr>;</expr_stmt>



        <if_stmt pos:start="165:9" pos:end="173:9"><if pos:start="165:9" pos:end="173:9">if <condition pos:start="165:12" pos:end="165:28">(<expr pos:start="165:13" pos:end="165:27"><name pos:start="165:13" pos:end="165:23">kernel_size</name> <operator pos:start="165:25" pos:end="165:25">&lt;</operator> <literal type="number" pos:start="165:27" pos:end="165:27">0</literal></expr>)</condition> <block pos:start="165:30" pos:end="173:9">{<block_content pos:start="167:13" pos:end="171:48">

            <expr_stmt pos:start="167:13" pos:end="169:56"><expr pos:start="167:13" pos:end="169:55"><name pos:start="167:13" pos:end="167:23">kernel_size</name> <operator pos:start="167:25" pos:end="167:25">=</operator> <call pos:start="167:27" pos:end="169:55"><name pos:start="167:27" pos:end="167:45">load_image_targphys</name><argument_list pos:start="167:46" pos:end="169:55">(<argument pos:start="167:47" pos:end="167:61"><expr pos:start="167:47" pos:end="167:61"><name pos:start="167:47" pos:end="167:61">kernel_filename</name></expr></argument>, <argument pos:start="167:64" pos:end="167:71"><expr pos:start="167:64" pos:end="167:71"><name pos:start="167:64" pos:end="167:71">ram_base</name></expr></argument>,

                                              <argument pos:start="169:47" pos:end="169:54"><expr pos:start="169:47" pos:end="169:54"><name pos:start="169:47" pos:end="169:54">ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:48"><expr pos:start="171:13" pos:end="171:47"><name pos:start="171:13" pos:end="171:36"><name pos:start="171:13" pos:end="171:22">reset_info</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:36">bootstrap_pc</name></name> <operator pos:start="171:38" pos:end="171:38">=</operator> <name pos:start="171:40" pos:end="171:47">ram_base</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="177:9" pos:end="185:9"><if pos:start="177:9" pos:end="185:9">if <condition pos:start="177:12" pos:end="177:28">(<expr pos:start="177:13" pos:end="177:27"><name pos:start="177:13" pos:end="177:23">kernel_size</name> <operator pos:start="177:25" pos:end="177:25">&lt;</operator> <literal type="number" pos:start="177:27" pos:end="177:27">0</literal></expr>)</condition> <block pos:start="177:30" pos:end="185:9">{<block_content pos:start="179:13" pos:end="183:20">

            <expr_stmt pos:start="179:13" pos:end="181:37"><expr pos:start="179:13" pos:end="181:36"><call pos:start="179:13" pos:end="181:36"><name pos:start="179:13" pos:end="179:19">fprintf</name><argument_list pos:start="179:20" pos:end="181:36">(<argument pos:start="179:21" pos:end="179:26"><expr pos:start="179:21" pos:end="179:26"><name pos:start="179:21" pos:end="179:26">stderr</name></expr></argument>, <argument pos:start="179:29" pos:end="179:64"><expr pos:start="179:29" pos:end="179:64"><literal type="string" pos:start="179:29" pos:end="179:64">"qemu: could not load kernel '%s'\n"</literal></expr></argument>,

                    <argument pos:start="181:21" pos:end="181:35"><expr pos:start="181:21" pos:end="181:35"><name pos:start="181:21" pos:end="181:35">kernel_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:20"><expr pos:start="183:13" pos:end="183:19"><call pos:start="183:13" pos:end="183:19"><name pos:start="183:13" pos:end="183:16">exit</name><argument_list pos:start="183:17" pos:end="183:19">(<argument pos:start="183:18" pos:end="183:18"><expr pos:start="183:18" pos:end="183:18"><literal type="number" pos:start="183:18" pos:end="183:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="191:5" pos:end="191:54">/* generate a rom with the hardware description */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:24"><expr pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:6">hw</name> <operator pos:start="193:8" pos:end="193:8">=</operator> <call pos:start="193:10" pos:end="193:23"><name pos:start="193:10" pos:end="193:21">hwsetup_init</name><argument_list pos:start="193:22" pos:end="193:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:42"><expr pos:start="195:5" pos:end="195:41"><call pos:start="195:5" pos:end="195:41"><name pos:start="195:5" pos:end="195:19">hwsetup_add_cpu</name><argument_list pos:start="195:20" pos:end="195:41">(<argument pos:start="195:21" pos:end="195:22"><expr pos:start="195:21" pos:end="195:22"><name pos:start="195:21" pos:end="195:22">hw</name></expr></argument>, <argument pos:start="195:25" pos:end="195:30"><expr pos:start="195:25" pos:end="195:30"><literal type="string" pos:start="195:25" pos:end="195:30">"LM32"</literal></expr></argument>, <argument pos:start="195:33" pos:end="195:40"><expr pos:start="195:33" pos:end="195:40"><literal type="number" pos:start="195:33" pos:end="195:40">75000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:59"><expr pos:start="197:5" pos:end="197:58"><call pos:start="197:5" pos:end="197:58"><name pos:start="197:5" pos:end="197:21">hwsetup_add_flash</name><argument_list pos:start="197:22" pos:end="197:58">(<argument pos:start="197:23" pos:end="197:24"><expr pos:start="197:23" pos:end="197:24"><name pos:start="197:23" pos:end="197:24">hw</name></expr></argument>, <argument pos:start="197:27" pos:end="197:33"><expr pos:start="197:27" pos:end="197:33"><literal type="string" pos:start="197:27" pos:end="197:33">"flash"</literal></expr></argument>, <argument pos:start="197:36" pos:end="197:45"><expr pos:start="197:36" pos:end="197:45"><name pos:start="197:36" pos:end="197:45">flash_base</name></expr></argument>, <argument pos:start="197:48" pos:end="197:57"><expr pos:start="197:48" pos:end="197:57"><name pos:start="197:48" pos:end="197:57">flash_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:63"><expr pos:start="199:5" pos:end="199:62"><call pos:start="199:5" pos:end="199:62"><name pos:start="199:5" pos:end="199:25">hwsetup_add_ddr_sdram</name><argument_list pos:start="199:26" pos:end="199:62">(<argument pos:start="199:27" pos:end="199:28"><expr pos:start="199:27" pos:end="199:28"><name pos:start="199:27" pos:end="199:28">hw</name></expr></argument>, <argument pos:start="199:31" pos:end="199:41"><expr pos:start="199:31" pos:end="199:41"><literal type="string" pos:start="199:31" pos:end="199:41">"ddr_sdram"</literal></expr></argument>, <argument pos:start="199:44" pos:end="199:51"><expr pos:start="199:44" pos:end="199:51"><name pos:start="199:44" pos:end="199:51">ram_base</name></expr></argument>, <argument pos:start="199:54" pos:end="199:61"><expr pos:start="199:54" pos:end="199:61"><name pos:start="199:54" pos:end="199:61">ram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:61"><expr pos:start="201:5" pos:end="201:60"><call pos:start="201:5" pos:end="201:60"><name pos:start="201:5" pos:end="201:21">hwsetup_add_timer</name><argument_list pos:start="201:22" pos:end="201:60">(<argument pos:start="201:23" pos:end="201:24"><expr pos:start="201:23" pos:end="201:24"><name pos:start="201:23" pos:end="201:24">hw</name></expr></argument>, <argument pos:start="201:27" pos:end="201:34"><expr pos:start="201:27" pos:end="201:34"><literal type="string" pos:start="201:27" pos:end="201:34">"timer0"</literal></expr></argument>, <argument pos:start="201:37" pos:end="201:47"><expr pos:start="201:37" pos:end="201:47"><name pos:start="201:37" pos:end="201:47">timer0_base</name></expr></argument>, <argument pos:start="201:50" pos:end="201:59"><expr pos:start="201:50" pos:end="201:59"><name pos:start="201:50" pos:end="201:59">timer0_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:70"><expr pos:start="203:5" pos:end="203:69"><call pos:start="203:5" pos:end="203:69"><name pos:start="203:5" pos:end="203:21">hwsetup_add_timer</name><argument_list pos:start="203:22" pos:end="203:69">(<argument pos:start="203:23" pos:end="203:24"><expr pos:start="203:23" pos:end="203:24"><name pos:start="203:23" pos:end="203:24">hw</name></expr></argument>, <argument pos:start="203:27" pos:end="203:43"><expr pos:start="203:27" pos:end="203:43"><literal type="string" pos:start="203:27" pos:end="203:43">"timer1_dev_only"</literal></expr></argument>, <argument pos:start="203:46" pos:end="203:56"><expr pos:start="203:46" pos:end="203:56"><name pos:start="203:46" pos:end="203:56">timer1_base</name></expr></argument>, <argument pos:start="203:59" pos:end="203:68"><expr pos:start="203:59" pos:end="203:68"><name pos:start="203:59" pos:end="203:68">timer1_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:70"><expr pos:start="205:5" pos:end="205:69"><call pos:start="205:5" pos:end="205:69"><name pos:start="205:5" pos:end="205:21">hwsetup_add_timer</name><argument_list pos:start="205:22" pos:end="205:69">(<argument pos:start="205:23" pos:end="205:24"><expr pos:start="205:23" pos:end="205:24"><name pos:start="205:23" pos:end="205:24">hw</name></expr></argument>, <argument pos:start="205:27" pos:end="205:43"><expr pos:start="205:27" pos:end="205:43"><literal type="string" pos:start="205:27" pos:end="205:43">"timer2_dev_only"</literal></expr></argument>, <argument pos:start="205:46" pos:end="205:56"><expr pos:start="205:46" pos:end="205:56"><name pos:start="205:46" pos:end="205:56">timer2_base</name></expr></argument>, <argument pos:start="205:59" pos:end="205:68"><expr pos:start="205:59" pos:end="205:68"><name pos:start="205:59" pos:end="205:68">timer2_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:56"><expr pos:start="207:5" pos:end="207:55"><call pos:start="207:5" pos:end="207:55"><name pos:start="207:5" pos:end="207:20">hwsetup_add_uart</name><argument_list pos:start="207:21" pos:end="207:55">(<argument pos:start="207:22" pos:end="207:23"><expr pos:start="207:22" pos:end="207:23"><name pos:start="207:22" pos:end="207:23">hw</name></expr></argument>, <argument pos:start="207:26" pos:end="207:31"><expr pos:start="207:26" pos:end="207:31"><literal type="string" pos:start="207:26" pos:end="207:31">"uart"</literal></expr></argument>, <argument pos:start="207:34" pos:end="207:43"><expr pos:start="207:34" pos:end="207:43"><name pos:start="207:34" pos:end="207:43">uart0_base</name></expr></argument>, <argument pos:start="207:46" pos:end="207:54"><expr pos:start="207:46" pos:end="207:54"><name pos:start="207:46" pos:end="207:54">uart0_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:28"><expr pos:start="209:5" pos:end="209:27"><call pos:start="209:5" pos:end="209:27"><name pos:start="209:5" pos:end="209:23">hwsetup_add_trailer</name><argument_list pos:start="209:24" pos:end="209:27">(<argument pos:start="209:25" pos:end="209:26"><expr pos:start="209:25" pos:end="209:26"><name pos:start="209:25" pos:end="209:26">hw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:41"><expr pos:start="211:5" pos:end="211:40"><call pos:start="211:5" pos:end="211:40"><name pos:start="211:5" pos:end="211:22">hwsetup_create_rom</name><argument_list pos:start="211:23" pos:end="211:40">(<argument pos:start="211:24" pos:end="211:25"><expr pos:start="211:24" pos:end="211:25"><name pos:start="211:24" pos:end="211:25">hw</name></expr></argument>, <argument pos:start="211:28" pos:end="211:39"><expr pos:start="211:28" pos:end="211:39"><name pos:start="211:28" pos:end="211:39">hwsetup_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:21"><expr pos:start="213:5" pos:end="213:20"><call pos:start="213:5" pos:end="213:20"><name pos:start="213:5" pos:end="213:16">hwsetup_free</name><argument_list pos:start="213:17" pos:end="213:20">(<argument pos:start="213:18" pos:end="213:19"><expr pos:start="213:18" pos:end="213:19"><name pos:start="213:18" pos:end="213:19">hw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:44"><expr pos:start="217:5" pos:end="217:43"><name pos:start="217:5" pos:end="217:28"><name pos:start="217:5" pos:end="217:14">reset_info</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:28">hwsetup_base</name></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <name pos:start="217:32" pos:end="217:43">hwsetup_base</name></expr>;</expr_stmt>



    <if_stmt pos:start="221:5" pos:end="229:5"><if pos:start="221:5" pos:end="229:5">if <condition pos:start="221:8" pos:end="221:49">(<expr pos:start="221:9" pos:end="221:48"><name pos:start="221:9" pos:end="221:22">kernel_cmdline</name> <operator pos:start="221:24" pos:end="221:25">&amp;&amp;</operator> <call pos:start="221:27" pos:end="221:48"><name pos:start="221:27" pos:end="221:32">strlen</name><argument_list pos:start="221:33" pos:end="221:48">(<argument pos:start="221:34" pos:end="221:47"><expr pos:start="221:34" pos:end="221:47"><name pos:start="221:34" pos:end="221:47">kernel_cmdline</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="221:51" pos:end="229:5">{<block_content pos:start="223:9" pos:end="227:48">

        <expr_stmt pos:start="223:9" pos:end="225:32"><expr pos:start="223:9" pos:end="225:31"><call pos:start="223:9" pos:end="225:31"><name pos:start="223:9" pos:end="223:24">pstrcpy_targphys</name><argument_list pos:start="223:25" pos:end="225:31">(<argument pos:start="223:26" pos:end="223:34"><expr pos:start="223:26" pos:end="223:34"><literal type="string" pos:start="223:26" pos:end="223:34">"cmdline"</literal></expr></argument>, <argument pos:start="223:37" pos:end="223:48"><expr pos:start="223:37" pos:end="223:48"><name pos:start="223:37" pos:end="223:48">cmdline_base</name></expr></argument>, <argument pos:start="223:51" pos:end="223:66"><expr pos:start="223:51" pos:end="223:66"><name pos:start="223:51" pos:end="223:66">TARGET_PAGE_SIZE</name></expr></argument>,

                <argument pos:start="225:17" pos:end="225:30"><expr pos:start="225:17" pos:end="225:30"><name pos:start="225:17" pos:end="225:30">kernel_cmdline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:48"><expr pos:start="227:9" pos:end="227:47"><name pos:start="227:9" pos:end="227:32"><name pos:start="227:9" pos:end="227:18">reset_info</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:32">cmdline_base</name></name> <operator pos:start="227:34" pos:end="227:34">=</operator> <name pos:start="227:36" pos:end="227:47">cmdline_base</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="233:5" pos:end="245:5"><if pos:start="233:5" pos:end="245:5">if <condition pos:start="233:8" pos:end="233:24">(<expr pos:start="233:9" pos:end="233:23"><name pos:start="233:9" pos:end="233:23">initrd_filename</name></expr>)</condition> <block pos:start="233:26" pos:end="245:5">{<block_content pos:start="235:9" pos:end="243:46">

        <decl_stmt pos:start="235:9" pos:end="235:27"><decl pos:start="235:9" pos:end="235:26"><type pos:start="235:9" pos:end="235:14"><name pos:start="235:9" pos:end="235:14">size_t</name></type> <name pos:start="235:16" pos:end="235:26">initrd_size</name></decl>;</decl_stmt>

        <expr_stmt pos:start="237:9" pos:end="239:28"><expr pos:start="237:9" pos:end="239:27"><name pos:start="237:9" pos:end="237:19">initrd_size</name> <operator pos:start="237:21" pos:end="237:21">=</operator> <call pos:start="237:23" pos:end="239:27"><name pos:start="237:23" pos:end="237:41">load_image_targphys</name><argument_list pos:start="237:42" pos:end="239:27">(<argument pos:start="237:43" pos:end="237:57"><expr pos:start="237:43" pos:end="237:57"><name pos:start="237:43" pos:end="237:57">initrd_filename</name></expr></argument>, <argument pos:start="237:60" pos:end="237:70"><expr pos:start="237:60" pos:end="237:70"><name pos:start="237:60" pos:end="237:70">initrd_base</name></expr></argument>,

                <argument pos:start="239:17" pos:end="239:26"><expr pos:start="239:17" pos:end="239:26"><name pos:start="239:17" pos:end="239:26">initrd_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:46"><expr pos:start="241:9" pos:end="241:45"><name pos:start="241:9" pos:end="241:31"><name pos:start="241:9" pos:end="241:18">reset_info</name><operator pos:start="241:19" pos:end="241:20">-&gt;</operator><name pos:start="241:21" pos:end="241:31">initrd_base</name></name> <operator pos:start="241:33" pos:end="241:33">=</operator> <name pos:start="241:35" pos:end="241:45">initrd_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:46"><expr pos:start="243:9" pos:end="243:45"><name pos:start="243:9" pos:end="243:31"><name pos:start="243:9" pos:end="243:18">reset_info</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:31">initrd_size</name></name> <operator pos:start="243:33" pos:end="243:33">=</operator> <name pos:start="243:35" pos:end="243:45">initrd_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="249:5" pos:end="249:52"><expr pos:start="249:5" pos:end="249:51"><call pos:start="249:5" pos:end="249:51"><name pos:start="249:5" pos:end="249:23">qemu_register_reset</name><argument_list pos:start="249:24" pos:end="249:51">(<argument pos:start="249:25" pos:end="249:38"><expr pos:start="249:25" pos:end="249:38"><name pos:start="249:25" pos:end="249:38">main_cpu_reset</name></expr></argument>, <argument pos:start="249:41" pos:end="249:50"><expr pos:start="249:41" pos:end="249:50"><name pos:start="249:41" pos:end="249:50">reset_info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
