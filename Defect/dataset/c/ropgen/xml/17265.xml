<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17265.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:27">tcg_out_opc_jmp</name><parameter_list pos:start="1:28" pos:end="1:70">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">TCGContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:51">MIPSInsn</name></type> <name pos:start="1:53" pos:end="1:55">opc</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:61">void</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">target</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:16">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">uintptr_t</name></type> <name pos:start="5:15" pos:end="5:18">dest</name> <init pos:start="5:20" pos:end="5:38">= <expr pos:start="5:22" pos:end="5:38"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:31">uintptr_t</name><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:38">target</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">uintptr_t</name></type> <name pos:start="7:15" pos:end="7:18">from</name> <init pos:start="7:20" pos:end="7:47">= <expr pos:start="7:22" pos:end="7:47"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:31">uintptr_t</name><operator pos:start="7:32" pos:end="7:32">)</operator><name pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:33">s</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:43">code_ptr</name></name> <operator pos:start="7:45" pos:end="7:45">+</operator> <literal type="number" pos:start="7:47" pos:end="7:47">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:16">inst</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="15:40">/* The pc-region branch happens within the 256MB region of

       the delay slot (thus the +4).  */</comment>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:35">(<expr pos:start="17:9" pos:end="17:34"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:13">from</name> <operator pos:start="17:15" pos:end="17:15">^</operator> <name pos:start="17:17" pos:end="17:20">dest</name><operator pos:start="17:21" pos:end="17:21">)</operator> <operator pos:start="17:23" pos:end="17:23">&amp;</operator> <operator pos:start="17:25" pos:end="17:25">-</operator><operator pos:start="17:26" pos:end="17:26">(</operator><literal type="number" pos:start="17:27" pos:end="17:27">1</literal> <operator pos:start="17:29" pos:end="17:30">&lt;&lt;</operator> <literal type="number" pos:start="17:32" pos:end="17:33">28</literal><operator pos:start="17:34" pos:end="17:34">)</operator></expr>)</condition> <block pos:start="17:37" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:21">

        <return pos:start="19:9" pos:end="19:21">return <expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><call pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:27">(<argument pos:start="23:12" pos:end="23:26"><expr pos:start="23:12" pos:end="23:26"><operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:16">dest</name> <operator pos:start="23:18" pos:end="23:18">&amp;</operator> <literal type="number" pos:start="23:20" pos:end="23:20">3</literal><operator pos:start="23:21" pos:end="23:21">)</operator> <operator pos:start="23:23" pos:end="23:24">==</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:15"><expr pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:8">inst</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <name pos:start="27:12" pos:end="27:14">opc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:8">inst</name> <operator pos:start="29:10" pos:end="29:11">|=</operator> <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:17">dest</name> <operator pos:start="29:19" pos:end="29:20">&gt;&gt;</operator> <literal type="number" pos:start="29:22" pos:end="29:22">2</literal><operator pos:start="29:23" pos:end="29:23">)</operator> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <literal type="number" pos:start="29:27" pos:end="29:35">0x3ffffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:13">tcg_out32</name><argument_list pos:start="31:14" pos:end="31:22">(<argument pos:start="31:15" pos:end="31:15"><expr pos:start="31:15" pos:end="31:15"><name pos:start="31:15" pos:end="31:15">s</name></expr></argument>, <argument pos:start="31:18" pos:end="31:21"><expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">inst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="33:5" pos:end="33:16">return <expr pos:start="33:12" pos:end="33:15"><name pos:start="33:12" pos:end="33:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
