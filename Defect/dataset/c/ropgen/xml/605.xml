<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/605.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:53">memory_region_update_container_subregions</name><parameter_list pos:start="1:54" pos:end="1:78">(<parameter pos:start="1:55" pos:end="1:77"><decl pos:start="1:55" pos:end="1:77"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:66">MemoryRegion</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">subregion</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:39">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">hwaddr</name></type> <name pos:start="5:12" pos:end="5:17">offset</name> <init pos:start="5:19" pos:end="5:35">= <expr pos:start="5:21" pos:end="5:35"><name pos:start="5:21" pos:end="5:35"><name pos:start="5:21" pos:end="5:29">subregion</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:35">addr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MemoryRegion</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">mr</name> <init pos:start="7:22" pos:end="7:43">= <expr pos:start="7:24" pos:end="7:43"><name pos:start="7:24" pos:end="7:43"><name pos:start="7:24" pos:end="7:32">subregion</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">container</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">MemoryRegion</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:23">other</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:35">memory_region_transaction_begin</name><argument_list pos:start="13:36" pos:end="13:37">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:21">memory_region_ref</name><argument_list pos:start="17:22" pos:end="17:32">(<argument pos:start="17:23" pos:end="17:31"><expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:31">subregion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <macro pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:18">QTAILQ_FOREACH</name><argument_list pos:start="19:19" pos:end="19:59">(<argument pos:start="19:20" pos:end="19:24">other</argument>, <argument pos:start="19:27" pos:end="19:41">&amp;mr-&gt;subregions</argument>, <argument pos:start="19:44" pos:end="19:58">subregions_link</argument>)</argument_list></macro> <block pos:start="19:61" pos:end="59:5">{<block_content pos:start="21:9" pos:end="58:0">

        <if_stmt pos:start="21:9" pos:end="25:9"><if pos:start="21:9" pos:end="25:9">if <condition pos:start="21:12" pos:end="21:57">(<expr pos:start="21:13" pos:end="21:56"><name pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:21">subregion</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:34">may_overlap</name></name> <operator pos:start="21:36" pos:end="21:37">||</operator> <name pos:start="21:39" pos:end="21:56"><name pos:start="21:39" pos:end="21:43">other</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:56">may_overlap</name></name></expr>)</condition> <block pos:start="21:59" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:21">

            <continue pos:start="23:13" pos:end="23:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="58:0"><if pos:start="27:9" pos:end="58:0">if <condition pos:start="27:12" pos:end="33:53">(<expr pos:start="27:13" pos:end="33:52"><call pos:start="27:13" pos:end="29:74"><name pos:start="27:13" pos:end="27:21">int128_ge</name><argument_list pos:start="27:22" pos:end="29:74">(<argument pos:start="27:23" pos:end="27:43"><expr pos:start="27:23" pos:end="27:43"><call pos:start="27:23" pos:end="27:43"><name pos:start="27:23" pos:end="27:35">int128_make64</name><argument_list pos:start="27:36" pos:end="27:43">(<argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><name pos:start="27:37" pos:end="27:42">offset</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="29:23" pos:end="29:73"><expr pos:start="29:23" pos:end="29:73"><call pos:start="29:23" pos:end="29:73"><name pos:start="29:23" pos:end="29:32">int128_add</name><argument_list pos:start="29:33" pos:end="29:73">(<argument pos:start="29:34" pos:end="29:59"><expr pos:start="29:34" pos:end="29:59"><call pos:start="29:34" pos:end="29:59"><name pos:start="29:34" pos:end="29:46">int128_make64</name><argument_list pos:start="29:47" pos:end="29:59">(<argument pos:start="29:48" pos:end="29:58"><expr pos:start="29:48" pos:end="29:58"><name pos:start="29:48" pos:end="29:58"><name pos:start="29:48" pos:end="29:52">other</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:58">addr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:62" pos:end="29:72"><expr pos:start="29:62" pos:end="29:72"><name pos:start="29:62" pos:end="29:72"><name pos:start="29:62" pos:end="29:66">other</name><operator pos:start="29:67" pos:end="29:68">-&gt;</operator><name pos:start="29:69" pos:end="29:72">size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>

            <operator pos:start="31:13" pos:end="31:14">||</operator> <call pos:start="31:16" pos:end="33:52"><name pos:start="31:16" pos:end="31:24">int128_le</name><argument_list pos:start="31:25" pos:end="33:52">(<argument pos:start="31:26" pos:end="31:75"><expr pos:start="31:26" pos:end="31:75"><call pos:start="31:26" pos:end="31:75"><name pos:start="31:26" pos:end="31:35">int128_add</name><argument_list pos:start="31:36" pos:end="31:75">(<argument pos:start="31:37" pos:end="31:57"><expr pos:start="31:37" pos:end="31:57"><call pos:start="31:37" pos:end="31:57"><name pos:start="31:37" pos:end="31:49">int128_make64</name><argument_list pos:start="31:50" pos:end="31:57">(<argument pos:start="31:51" pos:end="31:56"><expr pos:start="31:51" pos:end="31:56"><name pos:start="31:51" pos:end="31:56">offset</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:60" pos:end="31:74"><expr pos:start="31:60" pos:end="31:74"><name pos:start="31:60" pos:end="31:74"><name pos:start="31:60" pos:end="31:68">subregion</name><operator pos:start="31:69" pos:end="31:70">-&gt;</operator><name pos:start="31:71" pos:end="31:74">size</name></name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="33:26" pos:end="33:51"><expr pos:start="33:26" pos:end="33:51"><call pos:start="33:26" pos:end="33:51"><name pos:start="33:26" pos:end="33:38">int128_make64</name><argument_list pos:start="33:39" pos:end="33:51">(<argument pos:start="33:40" pos:end="33:50"><expr pos:start="33:40" pos:end="33:50"><name pos:start="33:40" pos:end="33:50"><name pos:start="33:40" pos:end="33:44">other</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:50">addr</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:55" pos:end="58:0">{<block_content pos:start="35:13" pos:end="35:21">

            <continue pos:start="35:13" pos:end="35:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="39:1" pos:end="39:5">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:5"><literal type="number" pos:start="39:5" pos:end="39:5">0</literal></expr></cpp:if>

        printf("warning: subregion collision %llx/%llx (%s) "

               "vs %llx/%llx (%s)\n",

               (unsigned long long)offset,

               (unsigned long long)int128_get64(subregion-&gt;size),

               subregion-&gt;name,

               (unsigned long long)other-&gt;addr,

               (unsigned long long)int128_get64(other-&gt;size),

               other-&gt;name);

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>

    <macro pos:start="61:5" pos:end="61:59"><name pos:start="61:5" pos:end="61:18">QTAILQ_FOREACH</name><argument_list pos:start="61:19" pos:end="61:59">(<argument pos:start="61:20" pos:end="61:24">other</argument>, <argument pos:start="61:27" pos:end="61:41">&amp;mr-&gt;subregions</argument>, <argument pos:start="61:44" pos:end="61:58">subregions_link</argument>)</argument_list></macro> <block pos:start="61:61" pos:end="71:5">{<block_content pos:start="63:9" pos:end="69:9">

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:51">(<expr pos:start="63:13" pos:end="63:50"><name pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:21">subregion</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:31">priority</name></name> <operator pos:start="63:33" pos:end="63:34">&gt;=</operator> <name pos:start="63:36" pos:end="63:50"><name pos:start="63:36" pos:end="63:40">other</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:50">priority</name></name></expr>)</condition> <block pos:start="63:53" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:22">

            <expr_stmt pos:start="65:13" pos:end="65:68"><expr pos:start="65:13" pos:end="65:67"><call pos:start="65:13" pos:end="65:67"><name pos:start="65:13" pos:end="65:32">QTAILQ_INSERT_BEFORE</name><argument_list pos:start="65:33" pos:end="65:67">(<argument pos:start="65:34" pos:end="65:38"><expr pos:start="65:34" pos:end="65:38"><name pos:start="65:34" pos:end="65:38">other</name></expr></argument>, <argument pos:start="65:41" pos:end="65:49"><expr pos:start="65:41" pos:end="65:49"><name pos:start="65:41" pos:end="65:49">subregion</name></expr></argument>, <argument pos:start="65:52" pos:end="65:66"><expr pos:start="65:52" pos:end="65:66"><name pos:start="65:52" pos:end="65:66">subregions_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="67:13" pos:end="67:22">goto <name pos:start="67:18" pos:end="67:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="73:5" pos:end="73:68"><expr pos:start="73:5" pos:end="73:67"><call pos:start="73:5" pos:end="73:67"><name pos:start="73:5" pos:end="73:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="73:23" pos:end="73:67">(<argument pos:start="73:24" pos:end="73:38"><expr pos:start="73:24" pos:end="73:38"><operator pos:start="73:24" pos:end="73:24">&amp;</operator><name pos:start="73:25" pos:end="73:38"><name pos:start="73:25" pos:end="73:26">mr</name><operator pos:start="73:27" pos:end="73:28">-&gt;</operator><name pos:start="73:29" pos:end="73:38">subregions</name></name></expr></argument>, <argument pos:start="73:41" pos:end="73:49"><expr pos:start="73:41" pos:end="73:49"><name pos:start="73:41" pos:end="73:49">subregion</name></expr></argument>, <argument pos:start="73:52" pos:end="73:66"><expr pos:start="73:52" pos:end="73:66"><name pos:start="73:52" pos:end="73:66">subregions_link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="75:1" pos:end="75:5"><name pos:start="75:1" pos:end="75:4">done</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:70"><expr pos:start="77:5" pos:end="77:69"><name pos:start="77:5" pos:end="77:32">memory_region_update_pending</name> <operator pos:start="77:34" pos:end="77:35">|=</operator> <name pos:start="77:37" pos:end="77:47"><name pos:start="77:37" pos:end="77:38">mr</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:47">enabled</name></name> <operator pos:start="77:49" pos:end="77:50">&amp;&amp;</operator> <name pos:start="77:52" pos:end="77:69"><name pos:start="77:52" pos:end="77:60">subregion</name><operator pos:start="77:61" pos:end="77:62">-&gt;</operator><name pos:start="77:63" pos:end="77:69">enabled</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:39"><expr pos:start="79:5" pos:end="79:38"><call pos:start="79:5" pos:end="79:38"><name pos:start="79:5" pos:end="79:36">memory_region_transaction_commit</name><argument_list pos:start="79:37" pos:end="79:38">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
