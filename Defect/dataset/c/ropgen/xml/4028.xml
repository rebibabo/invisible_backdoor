<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4028.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:25">cpu_get_note_size</name><parameter_list pos:start="1:26" pos:end="1:62">(<parameter pos:start="1:27" pos:end="1:35"><decl pos:start="1:27" pos:end="1:35"><type pos:start="1:27" pos:end="1:35"><name pos:start="1:27" pos:end="1:29">int</name></type> <name pos:start="1:31" pos:end="1:35">class</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:48">machine</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">nr_cpus</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:37">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">name_size</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">8</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="5:24" pos:end="5:53">/* "CORE" or "QEMU" rounded */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:24">elf_note_size</name> <init pos:start="7:26" pos:end="7:28">= <expr pos:start="7:28" pos:end="7:28"><literal type="number" pos:start="7:28" pos:end="7:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">note_head_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:24"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:22">NoteFuncDesc</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:26">nf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><call pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:31">(<argument pos:start="15:12" pos:end="15:30"><expr pos:start="15:12" pos:end="15:30"><name pos:start="15:12" pos:end="15:16">class</name> <operator pos:start="15:18" pos:end="15:19">==</operator> <name pos:start="15:21" pos:end="15:30">ELFCLASS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:30">(<argument pos:start="17:12" pos:end="17:29"><expr pos:start="17:12" pos:end="17:29"><name pos:start="17:12" pos:end="17:18">machine</name> <operator pos:start="17:20" pos:end="17:21">==</operator> <name pos:start="17:23" pos:end="17:29">EM_S390</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:18">note_head_size</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <sizeof pos:start="21:22" pos:end="21:39">sizeof<argument_list pos:start="21:28" pos:end="21:39">(<argument pos:start="21:29" pos:end="21:38"><expr pos:start="21:29" pos:end="21:38"><name pos:start="21:29" pos:end="21:38">Elf64_Nhdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="31:5">for <control pos:start="25:9" pos:end="25:54">(<init pos:start="25:10" pos:end="25:24"><expr pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:11">nf</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:23">note_func</name></expr>;</init> <condition pos:start="25:26" pos:end="25:48"><expr pos:start="25:26" pos:end="25:47"><name pos:start="25:26" pos:end="25:47"><name pos:start="25:26" pos:end="25:27">nf</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:47">note_contents_func</name></name></expr>;</condition> <incr pos:start="25:50" pos:end="25:53"><expr pos:start="25:50" pos:end="25:53"><name pos:start="25:50" pos:end="25:51">nf</name><operator pos:start="25:52" pos:end="25:53">++</operator></expr></incr>)</control> <block pos:start="25:56" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:42">

        <expr_stmt pos:start="27:9" pos:end="29:42"><expr pos:start="27:9" pos:end="29:41"><name pos:start="27:9" pos:end="27:21">elf_note_size</name> <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:37">elf_note_size</name> <operator pos:start="27:39" pos:end="27:39">+</operator> <name pos:start="27:41" pos:end="27:54">note_head_size</name> <operator pos:start="27:56" pos:end="27:56">+</operator> <name pos:start="27:58" pos:end="27:66">name_size</name> <operator pos:start="27:68" pos:end="27:68">+</operator>

                        <name pos:start="29:25" pos:end="29:41"><name pos:start="29:25" pos:end="29:26">nf</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:41">contents_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="35:5" pos:end="35:37">return <expr pos:start="35:12" pos:end="35:36"><operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:25">elf_note_size</name><operator pos:start="35:26" pos:end="35:26">)</operator> <operator pos:start="35:28" pos:end="35:28">*</operator> <name pos:start="35:30" pos:end="35:36">nr_cpus</name></expr>;</return>

</block_content>}</block></function>
</unit>
