<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3578.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">SCSIDevice</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:37">scsi_bus_legacy_add_drive</name><parameter_list pos:start="1:38" pos:end="5:71">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:45">SCSIBus</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">bus</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:74"><decl pos:start="1:53" pos:end="1:74"><type pos:start="1:53" pos:end="1:74"><name pos:start="1:53" pos:end="1:68">BlockDriverState</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:74">bdrv</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:46"><decl pos:start="3:39" pos:end="3:46"><type pos:start="3:39" pos:end="3:46"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:46">unit</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:52">bool</name></type> <name pos:start="3:54" pos:end="3:62">removable</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:77"><decl pos:start="3:65" pos:end="3:77"><type pos:start="3:65" pos:end="3:77"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:77">bootindex</name></decl></parameter>,

                                      <parameter pos:start="5:39" pos:end="5:56"><decl pos:start="5:39" pos:end="5:56"><type pos:start="5:39" pos:end="5:56"><specifier pos:start="5:39" pos:end="5:43">const</specifier> <name pos:start="5:45" pos:end="5:48">char</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:56">serial</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:70"><decl pos:start="5:59" pos:end="5:70"><type pos:start="5:59" pos:end="5:70"><name pos:start="5:59" pos:end="5:63">Error</name> <modifier pos:start="5:65" pos:end="5:65">*</modifier><modifier pos:start="5:66" pos:end="5:66">*</modifier></type><name pos:start="5:67" pos:end="5:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="65:1">{<block_content pos:start="9:5" pos:end="63:28">

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:22">driver</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">DeviceState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:10">driver</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <ternary pos:start="17:14" pos:end="17:60"><condition pos:start="17:14" pos:end="17:31"><expr pos:start="17:14" pos:end="17:29"><call pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:23">bdrv_is_sg</name><argument_list pos:start="17:24" pos:end="17:29">(<argument pos:start="17:25" pos:end="17:28"><expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">bdrv</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="17:33" pos:end="17:46"> <expr pos:start="17:33" pos:end="17:46"><literal type="string" pos:start="17:33" pos:end="17:46">"scsi-generic"</literal></expr> </then><else pos:start="17:48" pos:end="17:60">: <expr pos:start="17:50" pos:end="17:60"><literal type="string" pos:start="17:50" pos:end="17:60">"scsi-disk"</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:7">dev</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:41"><name pos:start="19:11" pos:end="19:21">qdev_create</name><argument_list pos:start="19:22" pos:end="19:41">(<argument pos:start="19:23" pos:end="19:32"><expr pos:start="19:23" pos:end="19:32"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:32"><name pos:start="19:24" pos:end="19:26">bus</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">qbus</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:40"><expr pos:start="19:35" pos:end="19:40"><name pos:start="19:35" pos:end="19:40">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:47"><expr pos:start="21:5" pos:end="21:46"><call pos:start="21:5" pos:end="21:46"><name pos:start="21:5" pos:end="21:24">qdev_prop_set_uint32</name><argument_list pos:start="21:25" pos:end="21:46">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>, <argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><literal type="string" pos:start="21:31" pos:end="21:39">"scsi-id"</literal></expr></argument>, <argument pos:start="21:42" pos:end="21:45"><expr pos:start="21:42" pos:end="21:45"><name pos:start="21:42" pos:end="21:45">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:17">bootindex</name> <operator pos:start="23:19" pos:end="23:20">&gt;=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>)</condition> <block pos:start="23:25" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:57">

        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><call pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:27">qdev_prop_set_int32</name><argument_list pos:start="25:28" pos:end="25:56">(<argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">dev</name></expr></argument>, <argument pos:start="25:34" pos:end="25:44"><expr pos:start="25:34" pos:end="25:44"><literal type="string" pos:start="25:34" pos:end="25:44">"bootindex"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:55"><expr pos:start="25:47" pos:end="25:55"><name pos:start="25:47" pos:end="25:55">bootindex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:61">(<expr pos:start="29:9" pos:end="29:60"><call pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:28">object_property_find</name><argument_list pos:start="29:29" pos:end="29:60">(<argument pos:start="29:30" pos:end="29:40"><expr pos:start="29:30" pos:end="29:40"><call pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:35">OBJECT</name><argument_list pos:start="29:36" pos:end="29:40">(<argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:43" pos:end="29:53"><expr pos:start="29:43" pos:end="29:53"><literal type="string" pos:start="29:43" pos:end="29:53">"removable"</literal></expr></argument>, <argument pos:start="29:56" pos:end="29:59"><expr pos:start="29:56" pos:end="29:59"><name pos:start="29:56" pos:end="29:59">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:63" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:55">

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><call pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:25">qdev_prop_set_bit</name><argument_list pos:start="31:26" pos:end="31:54">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">dev</name></expr></argument>, <argument pos:start="31:32" pos:end="31:42"><expr pos:start="31:32" pos:end="31:42"><literal type="string" pos:start="31:32" pos:end="31:42">"removable"</literal></expr></argument>, <argument pos:start="31:45" pos:end="31:53"><expr pos:start="31:45" pos:end="31:53"><name pos:start="31:45" pos:end="31:53">removable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:14">serial</name></expr>)</condition> <block pos:start="35:17" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:52">

        <expr_stmt pos:start="37:9" pos:end="37:52"><expr pos:start="37:9" pos:end="37:51"><call pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:28">qdev_prop_set_string</name><argument_list pos:start="37:29" pos:end="37:51">(<argument pos:start="37:30" pos:end="37:32"><expr pos:start="37:30" pos:end="37:32"><name pos:start="37:30" pos:end="37:32">dev</name></expr></argument>, <argument pos:start="37:35" pos:end="37:42"><expr pos:start="37:35" pos:end="37:42"><literal type="string" pos:start="37:35" pos:end="37:42">"serial"</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:50"><expr pos:start="37:45" pos:end="37:50"><name pos:start="37:45" pos:end="37:50">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:52">(<expr pos:start="41:9" pos:end="41:51"><call pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:27">qdev_prop_set_drive</name><argument_list pos:start="41:28" pos:end="41:47">(<argument pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><name pos:start="41:29" pos:end="41:31">dev</name></expr></argument>, <argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><literal type="string" pos:start="41:34" pos:end="41:40">"drive"</literal></expr></argument>, <argument pos:start="41:43" pos:end="41:46"><expr pos:start="41:43" pos:end="41:46"><name pos:start="41:43" pos:end="41:46">bdrv</name></expr></argument>)</argument_list></call> <operator pos:start="41:49" pos:end="41:49">&lt;</operator> <literal type="number" pos:start="41:51" pos:end="41:51">0</literal></expr>)</condition> <block pos:start="41:54" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:20">

        <expr_stmt pos:start="43:9" pos:end="43:58"><expr pos:start="43:9" pos:end="43:57"><call pos:start="43:9" pos:end="43:57"><name pos:start="43:9" pos:end="43:18">error_setg</name><argument_list pos:start="43:19" pos:end="43:57">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">errp</name></expr></argument>, <argument pos:start="43:26" pos:end="43:56"><expr pos:start="43:26" pos:end="43:56"><literal type="string" pos:start="43:26" pos:end="43:56">"Setting drive property failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><call pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:17">qdev_free</name><argument_list pos:start="45:18" pos:end="45:22">(<argument pos:start="45:19" pos:end="45:21"><expr pos:start="45:19" pos:end="45:21"><name pos:start="45:19" pos:end="45:21">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:20">return <expr pos:start="47:16" pos:end="47:19"><name pos:start="47:16" pos:end="47:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:66"><expr pos:start="51:5" pos:end="51:65"><call pos:start="51:5" pos:end="51:65"><name pos:start="51:5" pos:end="51:28">object_property_set_bool</name><argument_list pos:start="51:29" pos:end="51:65">(<argument pos:start="51:30" pos:end="51:40"><expr pos:start="51:30" pos:end="51:40"><call pos:start="51:30" pos:end="51:40"><name pos:start="51:30" pos:end="51:35">OBJECT</name><argument_list pos:start="51:36" pos:end="51:40">(<argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:43" pos:end="51:46"><expr pos:start="51:43" pos:end="51:46"><name pos:start="51:43" pos:end="51:46">true</name></expr></argument>, <argument pos:start="51:49" pos:end="51:58"><expr pos:start="51:49" pos:end="51:58"><literal type="string" pos:start="51:49" pos:end="51:58">"realized"</literal></expr></argument>, <argument pos:start="51:61" pos:end="51:64"><expr pos:start="51:61" pos:end="51:64"><operator pos:start="51:61" pos:end="51:61">&amp;</operator><name pos:start="51:62" pos:end="51:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:20">(<expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:11">err</name> <operator pos:start="53:13" pos:end="53:14">!=</operator> <name pos:start="53:16" pos:end="53:19">NULL</name></expr>)</condition> <block pos:start="53:22" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:20">

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><call pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:23">error_propagate</name><argument_list pos:start="55:24" pos:end="55:34">(<argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">errp</name></expr></argument>, <argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:23"><expr pos:start="57:9" pos:end="57:22"><call pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:17">qdev_free</name><argument_list pos:start="57:18" pos:end="57:22">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><name pos:start="57:19" pos:end="57:21">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="59:9" pos:end="59:20">return <expr pos:start="59:16" pos:end="59:19"><name pos:start="59:16" pos:end="59:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:28">return <expr pos:start="63:12" pos:end="63:27"><call pos:start="63:12" pos:end="63:27"><name pos:start="63:12" pos:end="63:22">SCSI_DEVICE</name><argument_list pos:start="63:23" pos:end="63:27">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">dev</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
