<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19239.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">net_slirp_smb</name><parameter_list pos:start="1:19" pos:end="1:44">(<parameter pos:start="1:20" pos:end="1:43"><decl pos:start="1:20" pos:end="1:43"><type pos:start="1:20" pos:end="1:31"><specifier pos:start="1:20" pos:end="1:24">const</specifier> <name pos:start="1:26" pos:end="1:29">char</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:43">exported_dir</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:5">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:49"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">in_addr</name></name></type> <name pos:start="5:20" pos:end="5:31">vserver_addr</name> <init pos:start="5:33" pos:end="5:49">= <expr pos:start="5:35" pos:end="5:49"><block pos:start="5:35" pos:end="5:49">{ <expr pos:start="5:37" pos:end="5:47"><operator pos:start="5:37" pos:end="5:37">.</operator><name pos:start="5:38" pos:end="5:43">s_addr</name> <operator pos:start="5:45" pos:end="5:45">=</operator> <literal type="number" pos:start="5:47" pos:end="5:47">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:25">legacy_smb_export</name></expr>)</condition> <block pos:start="9:28" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:16">

        <expr_stmt pos:start="11:9" pos:end="11:46"><expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:15">fprintf</name><argument_list pos:start="11:16" pos:end="11:45">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22">stderr</name></expr></argument>, <argument pos:start="11:25" pos:end="11:44"><expr pos:start="11:25" pos:end="11:44"><literal type="string" pos:start="11:25" pos:end="11:44">"-smb given twice\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:16"><expr pos:start="13:9" pos:end="13:15"><call pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:12">exit</name><argument_list pos:start="13:13" pos:end="13:15">(<argument pos:start="13:14" pos:end="13:14"><expr pos:start="13:14" pos:end="13:14"><literal type="number" pos:start="13:14" pos:end="13:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:21">legacy_smb_export</name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:36">exported_dir</name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:37">(<expr pos:start="19:9" pos:end="19:36"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:36"><name pos:start="19:10" pos:end="19:21">QTAILQ_EMPTY</name><argument_list pos:start="19:22" pos:end="19:36">(<argument pos:start="19:23" pos:end="19:35"><expr pos:start="19:23" pos:end="19:35"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:35">slirp_stacks</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:39" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:32">

        <expr_stmt pos:start="21:9" pos:end="23:32"><expr pos:start="21:9" pos:end="23:31"><call pos:start="21:9" pos:end="23:31"><name pos:start="21:9" pos:end="21:17">slirp_smb</name><argument_list pos:start="21:18" pos:end="23:31">(<argument pos:start="21:19" pos:end="21:45"><expr pos:start="21:19" pos:end="21:45"><call pos:start="21:19" pos:end="21:45"><name pos:start="21:19" pos:end="21:30">QTAILQ_FIRST</name><argument_list pos:start="21:31" pos:end="21:45">(<argument pos:start="21:32" pos:end="21:44"><expr pos:start="21:32" pos:end="21:44"><operator pos:start="21:32" pos:end="21:32">&amp;</operator><name pos:start="21:33" pos:end="21:44">slirp_stacks</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:48" pos:end="21:51"><expr pos:start="21:48" pos:end="21:51"><name pos:start="21:48" pos:end="21:51">NULL</name></expr></argument>, <argument pos:start="21:54" pos:end="21:65"><expr pos:start="21:54" pos:end="21:65"><name pos:start="21:54" pos:end="21:65">exported_dir</name></expr></argument>,

                  <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">vserver_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
