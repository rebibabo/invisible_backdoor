<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11545.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">qemu_laio_completion_cb</name><parameter_list pos:start="1:36" pos:end="1:53">(<parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:49">EventNotifier</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">e</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:75"><decl pos:start="5:5" pos:end="5:74"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">qemu_laio_state</name></name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:29">s</name> <init pos:start="5:31" pos:end="5:74">= <expr pos:start="5:33" pos:end="5:74"><call pos:start="5:33" pos:end="5:74"><name pos:start="5:33" pos:end="5:44">container_of</name><argument_list pos:start="5:45" pos:end="5:74">(<argument pos:start="5:46" pos:end="5:46"><expr pos:start="5:46" pos:end="5:46"><name pos:start="5:46" pos:end="5:46">e</name></expr></argument>, <argument pos:start="5:49" pos:end="5:70"><expr pos:start="5:49" pos:end="5:70">struct <name pos:start="5:56" pos:end="5:70">qemu_laio_state</name></expr></argument>, <argument pos:start="5:73" pos:end="5:73"><expr pos:start="5:73" pos:end="5:73"><name pos:start="5:73" pos:end="5:73">e</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <while pos:start="9:5" pos:end="43:5">while <condition pos:start="9:11" pos:end="9:48">(<expr pos:start="9:12" pos:end="9:47"><call pos:start="9:12" pos:end="9:47"><name pos:start="9:12" pos:end="9:40">event_notifier_test_and_clear</name><argument_list pos:start="9:41" pos:end="9:47">(<argument pos:start="9:42" pos:end="9:46"><expr pos:start="9:42" pos:end="9:46"><operator pos:start="9:42" pos:end="9:42">&amp;</operator><name pos:start="9:43" pos:end="9:46"><name pos:start="9:43" pos:end="9:43">s</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:46">e</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:50" pos:end="43:5">{<block_content pos:start="11:9" pos:end="41:9">

        <decl_stmt pos:start="11:9" pos:end="11:43"><decl pos:start="11:9" pos:end="11:42"><type pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:14">struct</name> <name pos:start="11:16" pos:end="11:23">io_event</name></name></type> <name pos:start="11:25" pos:end="11:42"><name pos:start="11:25" pos:end="11:30">events</name><index pos:start="11:31" pos:end="11:42">[<expr pos:start="11:32" pos:end="11:41"><name pos:start="11:32" pos:end="11:41">MAX_EVENTS</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:35"><decl pos:start="13:9" pos:end="13:34"><type pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:14">struct</name> <name pos:start="13:16" pos:end="13:23">timespec</name></name></type> <name pos:start="13:25" pos:end="13:26">ts</name> <init pos:start="13:28" pos:end="13:34">= <expr pos:start="13:30" pos:end="13:34"><block pos:start="13:30" pos:end="13:34">{ <expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:23"><decl pos:start="15:9" pos:end="15:19"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:19">nevents</name></decl>, <decl pos:start="15:22" pos:end="15:22"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:22" pos:end="15:22">i</name></decl>;</decl_stmt>



        <do pos:start="19:9" pos:end="23:36">do <block pos:start="19:12" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:80">

            <expr_stmt pos:start="21:13" pos:end="21:80"><expr pos:start="21:13" pos:end="21:79"><name pos:start="21:13" pos:end="21:19">nevents</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="21:79"><name pos:start="21:23" pos:end="21:34">io_getevents</name><argument_list pos:start="21:35" pos:end="21:79">(<argument pos:start="21:36" pos:end="21:41"><expr pos:start="21:36" pos:end="21:41"><name pos:start="21:36" pos:end="21:41"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:41">ctx</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:53"><expr pos:start="21:44" pos:end="21:53"><name pos:start="21:44" pos:end="21:53">MAX_EVENTS</name></expr></argument>, <argument pos:start="21:56" pos:end="21:65"><expr pos:start="21:56" pos:end="21:65"><name pos:start="21:56" pos:end="21:65">MAX_EVENTS</name></expr></argument>, <argument pos:start="21:68" pos:end="21:73"><expr pos:start="21:68" pos:end="21:73"><name pos:start="21:68" pos:end="21:73">events</name></expr></argument>, <argument pos:start="21:76" pos:end="21:78"><expr pos:start="21:76" pos:end="21:78"><operator pos:start="21:76" pos:end="21:76">&amp;</operator><name pos:start="21:77" pos:end="21:78">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="23:17" pos:end="23:35">(<expr pos:start="23:18" pos:end="23:34"><name pos:start="23:18" pos:end="23:24">nevents</name> <operator pos:start="23:26" pos:end="23:27">==</operator> <operator pos:start="23:29" pos:end="23:29">-</operator><name pos:start="23:30" pos:end="23:34">EINTR</name></expr>)</condition>;</do>



        <for pos:start="27:9" pos:end="41:9">for <control pos:start="27:13" pos:end="27:37">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:31"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <name pos:start="27:25" pos:end="27:31">nevents</name></expr>;</condition> <incr pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:34">i</name><operator pos:start="27:35" pos:end="27:36">++</operator></expr></incr>)</control> <block pos:start="27:39" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:52">

            <decl_stmt pos:start="29:13" pos:end="29:46"><decl pos:start="29:13" pos:end="29:45"><type pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:18">struct</name> <name pos:start="29:20" pos:end="29:23">iocb</name></name> <modifier pos:start="29:25" pos:end="29:25">*</modifier></type><name pos:start="29:26" pos:end="29:29">iocb</name> <init pos:start="29:31" pos:end="29:45">= <expr pos:start="29:33" pos:end="29:45"><name pos:start="29:33" pos:end="29:41"><name pos:start="29:33" pos:end="29:38">events</name><index pos:start="29:39" pos:end="29:41">[<expr pos:start="29:40" pos:end="29:40"><name pos:start="29:40" pos:end="29:40">i</name></expr>]</index></name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:45">obj</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="33:65"><decl pos:start="31:13" pos:end="33:64"><type pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:18">struct</name> <name pos:start="31:20" pos:end="31:30">qemu_laiocb</name></name> <modifier pos:start="31:32" pos:end="31:32">*</modifier></type><name pos:start="31:33" pos:end="31:38">laiocb</name> <init pos:start="31:40" pos:end="33:64">=

                    <expr pos:start="33:21" pos:end="33:64"><call pos:start="33:21" pos:end="33:64"><name pos:start="33:21" pos:end="33:32">container_of</name><argument_list pos:start="33:33" pos:end="33:64">(<argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">iocb</name></expr></argument>, <argument pos:start="33:40" pos:end="33:57"><expr pos:start="33:40" pos:end="33:57">struct <name pos:start="33:47" pos:end="33:57">qemu_laiocb</name></expr></argument>, <argument pos:start="33:60" pos:end="33:63"><expr pos:start="33:60" pos:end="33:63"><name pos:start="33:60" pos:end="33:63">iocb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="37:13" pos:end="37:51"><expr pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:23"><name pos:start="37:13" pos:end="37:18">laiocb</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:23">ret</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:50"><name pos:start="37:27" pos:end="37:38">io_event_ret</name><argument_list pos:start="37:39" pos:end="37:50">(<argument pos:start="37:40" pos:end="37:49"><expr pos:start="37:40" pos:end="37:49"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:49"><name pos:start="37:41" pos:end="37:46">events</name><index pos:start="37:47" pos:end="37:49">[<expr pos:start="37:48" pos:end="37:48"><name pos:start="37:48" pos:end="37:48">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:52"><expr pos:start="39:13" pos:end="39:51"><call pos:start="39:13" pos:end="39:51"><name pos:start="39:13" pos:end="39:40">qemu_laio_process_completion</name><argument_list pos:start="39:41" pos:end="39:51">(<argument pos:start="39:42" pos:end="39:42"><expr pos:start="39:42" pos:end="39:42"><name pos:start="39:42" pos:end="39:42">s</name></expr></argument>, <argument pos:start="39:45" pos:end="39:50"><expr pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:50">laiocb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
