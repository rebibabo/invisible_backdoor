<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14860.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">target_mprotect</name><parameter_list pos:start="1:20" pos:end="1:61">(<parameter pos:start="1:21" pos:end="1:35"><decl pos:start="1:21" pos:end="1:35"><type pos:start="1:21" pos:end="1:35"><name pos:start="1:21" pos:end="1:29">abi_ulong</name></type> <name pos:start="1:31" pos:end="1:35">start</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:46">abi_ulong</name></type> <name pos:start="1:48" pos:end="1:50">len</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:60"><decl pos:start="1:53" pos:end="1:60"><type pos:start="1:53" pos:end="1:60"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:60">prot</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">abi_ulong</name></type> <name pos:start="5:15" pos:end="5:17">end</name></decl>, <decl pos:start="5:20" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:20" pos:end="5:29">host_start</name></decl>, <decl pos:start="5:32" pos:end="5:39"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:32" pos:end="5:39">host_end</name></decl>, <decl pos:start="5:42" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:13"/><name pos:start="5:42" pos:end="5:45">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">prot1</name></decl>, <decl pos:start="7:16" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:18">ret</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="11:1" pos:end="11:17">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:17">DEBUG_MMAP</name></cpp:ifdef>

    <expr_stmt pos:start="13:5" pos:end="24:0"><expr pos:start="13:5" pos:end="21:40"><call pos:start="13:5" pos:end="21:40"><name pos:start="13:5" pos:end="13:10">printf</name><argument_list pos:start="13:11" pos:end="21:40">(<argument pos:start="13:12" pos:end="15:50"><expr pos:start="13:12" pos:end="15:50"><literal type="string" pos:start="13:12" pos:end="13:31">"mprotect: start=0x"</literal> <name pos:start="13:33" pos:end="13:45">TARGET_FMT_lx</name>

           <literal type="string" pos:start="15:12" pos:end="15:19">"len=0x"</literal> <name pos:start="15:21" pos:end="15:33">TARGET_FMT_lx</name> <literal type="string" pos:start="15:35" pos:end="15:50">" prot=%c%c%c\n"</literal></expr></argument>, <argument pos:start="15:53" pos:end="15:57"><expr pos:start="15:53" pos:end="15:57"><name pos:start="15:53" pos:end="15:57">start</name></expr></argument>, <argument pos:start="15:60" pos:end="15:62"><expr pos:start="15:60" pos:end="15:62"><name pos:start="15:60" pos:end="15:62">len</name></expr></argument>,

           <argument pos:start="17:12" pos:end="17:39"><expr pos:start="17:12" pos:end="17:39"><ternary pos:start="17:12" pos:end="17:39"><condition pos:start="17:12" pos:end="17:29"><expr pos:start="17:12" pos:end="17:27"><name pos:start="17:12" pos:end="17:15">prot</name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <name pos:start="17:19" pos:end="17:27">PROT_READ</name></expr> ?</condition><then pos:start="17:31" pos:end="17:33"> <expr pos:start="17:31" pos:end="17:33"><literal type="char" pos:start="17:31" pos:end="17:33">'r'</literal></expr> </then><else pos:start="17:35" pos:end="17:39">: <expr pos:start="17:37" pos:end="17:39"><literal type="char" pos:start="17:37" pos:end="17:39">'-'</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="19:12" pos:end="19:40"><expr pos:start="19:12" pos:end="19:40"><ternary pos:start="19:12" pos:end="19:40"><condition pos:start="19:12" pos:end="19:30"><expr pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:15">prot</name> <operator pos:start="19:17" pos:end="19:17">&amp;</operator> <name pos:start="19:19" pos:end="19:28">PROT_WRITE</name></expr> ?</condition><then pos:start="19:32" pos:end="19:34"> <expr pos:start="19:32" pos:end="19:34"><literal type="char" pos:start="19:32" pos:end="19:34">'w'</literal></expr> </then><else pos:start="19:36" pos:end="19:40">: <expr pos:start="19:38" pos:end="19:40"><literal type="char" pos:start="19:38" pos:end="19:40">'-'</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="21:12" pos:end="21:39"><expr pos:start="21:12" pos:end="21:39"><ternary pos:start="21:12" pos:end="21:39"><condition pos:start="21:12" pos:end="21:29"><expr pos:start="21:12" pos:end="21:27"><name pos:start="21:12" pos:end="21:15">prot</name> <operator pos:start="21:17" pos:end="21:17">&amp;</operator> <name pos:start="21:19" pos:end="21:27">PROT_EXEC</name></expr> ?</condition><then pos:start="21:31" pos:end="21:33"> <expr pos:start="21:31" pos:end="21:33"><literal type="char" pos:start="21:31" pos:end="21:33">'x'</literal></expr> </then><else pos:start="21:35" pos:end="21:39">: <expr pos:start="21:37" pos:end="21:39"><literal type="char" pos:start="21:37" pos:end="21:39">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="27:5" pos:end="29:23"><if pos:start="27:5" pos:end="29:23">if <condition pos:start="27:8" pos:end="27:41">(<expr pos:start="27:9" pos:end="27:40"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:14">start</name> <operator pos:start="27:16" pos:end="27:16">&amp;</operator> <operator pos:start="27:18" pos:end="27:18">~</operator><name pos:start="27:19" pos:end="27:34">TARGET_PAGE_MASK</name><operator pos:start="27:35" pos:end="27:35">)</operator> <operator pos:start="27:37" pos:end="27:38">!=</operator> <literal type="number" pos:start="27:40" pos:end="27:40">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:23"><block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:7">len</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:32"><name pos:start="31:11" pos:end="31:27">TARGET_PAGE_ALIGN</name><argument_list pos:start="31:28" pos:end="31:32">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:7">end</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <name pos:start="33:11" pos:end="33:15">start</name> <operator pos:start="33:17" pos:end="33:17">+</operator> <name pos:start="33:19" pos:end="33:21">len</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:23"><if pos:start="35:5" pos:end="37:23">if <condition pos:start="35:8" pos:end="35:20">(<expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">end</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <name pos:start="35:15" pos:end="35:19">start</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:23"><block_content pos:start="37:9" pos:end="37:23">

        <return pos:start="37:9" pos:end="37:23">return <expr pos:start="37:16" pos:end="37:22"><operator pos:start="37:16" pos:end="37:16">-</operator><name pos:start="37:17" pos:end="37:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:23"><if pos:start="39:5" pos:end="41:23">if <condition pos:start="39:8" pos:end="39:53">(<expr pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:12">prot</name> <operator pos:start="39:14" pos:end="39:14">&amp;</operator> <operator pos:start="39:16" pos:end="39:16">~</operator><operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:26">PROT_READ</name> <operator pos:start="39:28" pos:end="39:28">|</operator> <name pos:start="39:30" pos:end="39:39">PROT_WRITE</name> <operator pos:start="39:41" pos:end="39:41">|</operator> <name pos:start="39:43" pos:end="39:51">PROT_EXEC</name><operator pos:start="39:52" pos:end="39:52">)</operator></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:23"><block_content pos:start="41:9" pos:end="41:23">

        <return pos:start="41:9" pos:end="41:23">return <expr pos:start="41:16" pos:end="41:22"><operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="45:17"><if pos:start="43:5" pos:end="45:17">if <condition pos:start="43:8" pos:end="43:17">(<expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">len</name> <operator pos:start="43:13" pos:end="43:14">==</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:17"><block_content pos:start="45:9" pos:end="45:17">

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:14">host_start</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:22">start</name> <operator pos:start="49:24" pos:end="49:24">&amp;</operator> <name pos:start="49:26" pos:end="49:44">qemu_host_page_mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:12">host_end</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <call pos:start="51:16" pos:end="51:35"><name pos:start="51:16" pos:end="51:30">HOST_PAGE_ALIGN</name><argument_list pos:start="51:31" pos:end="51:35">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="85:5"><if pos:start="53:5" pos:end="85:5">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:13">start</name> <operator pos:start="53:15" pos:end="53:15">&gt;</operator> <name pos:start="53:17" pos:end="53:26">host_start</name></expr>)</condition> <block pos:start="53:29" pos:end="85:5">{<block_content pos:start="57:9" pos:end="83:42">

        <comment type="block" pos:start="55:9" pos:end="55:47">/* handle host page containing start */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:13">prot1</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:20">prot</name></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="63:9">for<control pos:start="59:12" pos:end="59:70">(<init pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:16">addr</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:29">host_start</name></expr>;</init> <condition pos:start="59:32" pos:end="59:44"><expr pos:start="59:32" pos:end="59:43"><name pos:start="59:32" pos:end="59:35">addr</name> <operator pos:start="59:37" pos:end="59:37">&lt;</operator> <name pos:start="59:39" pos:end="59:43">start</name></expr>;</condition> <incr pos:start="59:46" pos:end="59:69"><expr pos:start="59:46" pos:end="59:69"><name pos:start="59:46" pos:end="59:49">addr</name> <operator pos:start="59:51" pos:end="59:52">+=</operator> <name pos:start="59:54" pos:end="59:69">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="59:72" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:42">

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:17">prot1</name> <operator pos:start="61:19" pos:end="61:20">|=</operator> <call pos:start="61:22" pos:end="61:41"><name pos:start="61:22" pos:end="61:35">page_get_flags</name><argument_list pos:start="61:36" pos:end="61:41">(<argument pos:start="61:37" pos:end="61:40"><expr pos:start="61:37" pos:end="61:40"><name pos:start="61:37" pos:end="61:40">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="65:57">(<expr pos:start="65:13" pos:end="65:56"><name pos:start="65:13" pos:end="65:20">host_end</name> <operator pos:start="65:22" pos:end="65:23">==</operator> <name pos:start="65:25" pos:end="65:34">host_start</name> <operator pos:start="65:36" pos:end="65:36">+</operator> <name pos:start="65:38" pos:end="65:56">qemu_host_page_size</name></expr>)</condition> <block pos:start="65:59" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:27">

            <for pos:start="67:13" pos:end="71:13">for<control pos:start="67:16" pos:end="67:70">(<init pos:start="67:17" pos:end="67:27"><expr pos:start="67:17" pos:end="67:26"><name pos:start="67:17" pos:end="67:20">addr</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:26">end</name></expr>;</init> <condition pos:start="67:29" pos:end="67:44"><expr pos:start="67:29" pos:end="67:43"><name pos:start="67:29" pos:end="67:32">addr</name> <operator pos:start="67:34" pos:end="67:34">&lt;</operator> <name pos:start="67:36" pos:end="67:43">host_end</name></expr>;</condition> <incr pos:start="67:46" pos:end="67:69"><expr pos:start="67:46" pos:end="67:69"><name pos:start="67:46" pos:end="67:49">addr</name> <operator pos:start="67:51" pos:end="67:52">+=</operator> <name pos:start="67:54" pos:end="67:69">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="67:72" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:46">

                <expr_stmt pos:start="69:17" pos:end="69:46"><expr pos:start="69:17" pos:end="69:45"><name pos:start="69:17" pos:end="69:21">prot1</name> <operator pos:start="69:23" pos:end="69:24">|=</operator> <call pos:start="69:26" pos:end="69:45"><name pos:start="69:26" pos:end="69:39">page_get_flags</name><argument_list pos:start="69:40" pos:end="69:45">(<argument pos:start="69:41" pos:end="69:44"><expr pos:start="69:41" pos:end="69:44"><name pos:start="69:41" pos:end="69:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:15">end</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:26">host_end</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:80"><expr pos:start="77:9" pos:end="77:79"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:79"><name pos:start="77:15" pos:end="77:22">mprotect</name><argument_list pos:start="77:23" pos:end="77:79">(<argument pos:start="77:24" pos:end="77:38"><expr pos:start="77:24" pos:end="77:38"><call pos:start="77:24" pos:end="77:38"><name pos:start="77:24" pos:end="77:26">g2h</name><argument_list pos:start="77:27" pos:end="77:38">(<argument pos:start="77:28" pos:end="77:37"><expr pos:start="77:28" pos:end="77:37"><name pos:start="77:28" pos:end="77:37">host_start</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:41" pos:end="77:59"><expr pos:start="77:41" pos:end="77:59"><name pos:start="77:41" pos:end="77:59">qemu_host_page_size</name></expr></argument>, <argument pos:start="77:62" pos:end="77:78"><expr pos:start="77:62" pos:end="77:78"><name pos:start="77:62" pos:end="77:66">prot1</name> <operator pos:start="77:68" pos:end="77:68">&amp;</operator> <name pos:start="77:70" pos:end="77:78">PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:23"><if pos:start="79:9" pos:end="81:23">if <condition pos:start="79:12" pos:end="79:21">(<expr pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:18">!=</operator> <literal type="number" pos:start="79:20" pos:end="79:20">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:23"><block_content pos:start="81:13" pos:end="81:23">

            <return pos:start="81:13" pos:end="81:23">return <expr pos:start="81:20" pos:end="81:22"><name pos:start="81:20" pos:end="81:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:42"><expr pos:start="83:9" pos:end="83:41"><name pos:start="83:9" pos:end="83:18">host_start</name> <operator pos:start="83:20" pos:end="83:21">+=</operator> <name pos:start="83:23" pos:end="83:41">qemu_host_page_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="107:5"><if pos:start="87:5" pos:end="107:5">if <condition pos:start="87:8" pos:end="87:23">(<expr pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:11">end</name> <operator pos:start="87:13" pos:end="87:13">&lt;</operator> <name pos:start="87:15" pos:end="87:22">host_end</name></expr>)</condition> <block pos:start="87:25" pos:end="107:5">{<block_content pos:start="89:9" pos:end="105:40">

        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:13">prot1</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:20">prot</name></expr>;</expr_stmt>

        <for pos:start="91:9" pos:end="95:9">for<control pos:start="91:12" pos:end="91:66">(<init pos:start="91:13" pos:end="91:23"><expr pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:16">addr</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:22">end</name></expr>;</init> <condition pos:start="91:25" pos:end="91:40"><expr pos:start="91:25" pos:end="91:39"><name pos:start="91:25" pos:end="91:28">addr</name> <operator pos:start="91:30" pos:end="91:30">&lt;</operator> <name pos:start="91:32" pos:end="91:39">host_end</name></expr>;</condition> <incr pos:start="91:42" pos:end="91:65"><expr pos:start="91:42" pos:end="91:65"><name pos:start="91:42" pos:end="91:45">addr</name> <operator pos:start="91:47" pos:end="91:48">+=</operator> <name pos:start="91:50" pos:end="91:65">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="91:68" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:42">

            <expr_stmt pos:start="93:13" pos:end="93:42"><expr pos:start="93:13" pos:end="93:41"><name pos:start="93:13" pos:end="93:17">prot1</name> <operator pos:start="93:19" pos:end="93:20">|=</operator> <call pos:start="93:22" pos:end="93:41"><name pos:start="93:22" pos:end="93:35">page_get_flags</name><argument_list pos:start="93:36" pos:end="93:41">(<argument pos:start="93:37" pos:end="93:40"><expr pos:start="93:37" pos:end="93:40"><name pos:start="93:37" pos:end="93:40">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="97:9" pos:end="99:42"><expr pos:start="97:9" pos:end="99:41"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="99:41"><name pos:start="97:15" pos:end="97:22">mprotect</name><argument_list pos:start="97:23" pos:end="99:41">(<argument pos:start="97:24" pos:end="97:58"><expr pos:start="97:24" pos:end="97:58"><call pos:start="97:24" pos:end="97:58"><name pos:start="97:24" pos:end="97:26">g2h</name><argument_list pos:start="97:27" pos:end="97:58">(<argument pos:start="97:28" pos:end="97:57"><expr pos:start="97:28" pos:end="97:57"><name pos:start="97:28" pos:end="97:35">host_end</name> <operator pos:start="97:37" pos:end="97:37">-</operator> <name pos:start="97:39" pos:end="97:57">qemu_host_page_size</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:61" pos:end="97:79"><expr pos:start="97:61" pos:end="97:79"><name pos:start="97:61" pos:end="97:79">qemu_host_page_size</name></expr></argument>,

                       <argument pos:start="99:24" pos:end="99:40"><expr pos:start="99:24" pos:end="99:40"><name pos:start="99:24" pos:end="99:28">prot1</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <name pos:start="99:32" pos:end="99:40">PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:23"><if pos:start="101:9" pos:end="103:23">if <condition pos:start="101:12" pos:end="101:21">(<expr pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:18">!=</operator> <literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:23"><block_content pos:start="103:13" pos:end="103:23">

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:40"><expr pos:start="105:9" pos:end="105:39"><name pos:start="105:9" pos:end="105:16">host_end</name> <operator pos:start="105:18" pos:end="105:19">-=</operator> <name pos:start="105:21" pos:end="105:39">qemu_host_page_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="111:40">/* handle the pages in the middle */</comment>

    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:30">(<expr pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:18">host_start</name> <operator pos:start="113:20" pos:end="113:20">&lt;</operator> <name pos:start="113:22" pos:end="113:29">host_end</name></expr>)</condition> <block pos:start="113:32" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:23">

        <expr_stmt pos:start="115:9" pos:end="115:69"><expr pos:start="115:9" pos:end="115:68"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:68"><name pos:start="115:15" pos:end="115:22">mprotect</name><argument_list pos:start="115:23" pos:end="115:68">(<argument pos:start="115:24" pos:end="115:38"><expr pos:start="115:24" pos:end="115:38"><call pos:start="115:24" pos:end="115:38"><name pos:start="115:24" pos:end="115:26">g2h</name><argument_list pos:start="115:27" pos:end="115:38">(<argument pos:start="115:28" pos:end="115:37"><expr pos:start="115:28" pos:end="115:37"><name pos:start="115:28" pos:end="115:37">host_start</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:41" pos:end="115:61"><expr pos:start="115:41" pos:end="115:61"><name pos:start="115:41" pos:end="115:48">host_end</name> <operator pos:start="115:50" pos:end="115:50">-</operator> <name pos:start="115:52" pos:end="115:61">host_start</name></expr></argument>, <argument pos:start="115:64" pos:end="115:67"><expr pos:start="115:64" pos:end="115:67"><name pos:start="115:64" pos:end="115:67">prot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:23"><if pos:start="117:9" pos:end="119:23">if <condition pos:start="117:12" pos:end="117:21">(<expr pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:18">!=</operator> <literal type="number" pos:start="117:20" pos:end="117:20">0</literal></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:23"><block_content pos:start="119:13" pos:end="119:23">

            <return pos:start="119:13" pos:end="119:23">return <expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:58"><expr pos:start="123:5" pos:end="123:57"><call pos:start="123:5" pos:end="123:57"><name pos:start="123:5" pos:end="123:18">page_set_flags</name><argument_list pos:start="123:19" pos:end="123:57">(<argument pos:start="123:20" pos:end="123:24"><expr pos:start="123:20" pos:end="123:24"><name pos:start="123:20" pos:end="123:24">start</name></expr></argument>, <argument pos:start="123:27" pos:end="123:37"><expr pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:31">start</name> <operator pos:start="123:33" pos:end="123:33">+</operator> <name pos:start="123:35" pos:end="123:37">len</name></expr></argument>, <argument pos:start="123:40" pos:end="123:56"><expr pos:start="123:40" pos:end="123:56"><name pos:start="123:40" pos:end="123:43">prot</name> <operator pos:start="123:45" pos:end="123:45">|</operator> <name pos:start="123:47" pos:end="123:56">PAGE_VALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
