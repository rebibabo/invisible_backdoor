<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1829.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">visit_type_int8</name><parameter_list pos:start="1:21" pos:end="1:77">(<parameter pos:start="1:22" pos:end="1:31"><decl pos:start="1:22" pos:end="1:31"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:28">Visitor</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">v</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:39">int8_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">obj</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">name</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:69">Error</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier><modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">value</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="33:5"><if pos:start="7:5" pos:end="33:5">if <condition pos:start="7:8" pos:end="7:28">(<expr pos:start="7:9" pos:end="7:27"><operator pos:start="7:9" pos:end="7:9">!</operator><call pos:start="7:10" pos:end="7:27"><name pos:start="7:10" pos:end="7:21">error_is_set</name><argument_list pos:start="7:22" pos:end="7:27">(<argument pos:start="7:23" pos:end="7:26"><expr pos:start="7:23" pos:end="7:26"><name pos:start="7:23" pos:end="7:26">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:30" pos:end="33:5">{<block_content pos:start="9:9" pos:end="31:9">

        <if_stmt pos:start="9:9" pos:end="31:9"><if pos:start="9:9" pos:end="13:9">if <condition pos:start="9:12" pos:end="9:25">(<expr pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:13">v</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:24">type_int8</name></name></expr>)</condition> <block pos:start="9:27" pos:end="13:9">{<block_content pos:start="11:13" pos:end="11:45">

            <expr_stmt pos:start="11:13" pos:end="11:45"><expr pos:start="11:13" pos:end="11:44"><call pos:start="11:13" pos:end="11:44"><name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:13">v</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:24">type_int8</name></name><argument_list pos:start="11:25" pos:end="11:44">(<argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><name pos:start="11:26" pos:end="11:26">v</name></expr></argument>, <argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">obj</name></expr></argument>, <argument pos:start="11:34" pos:end="11:37"><expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">name</name></expr></argument>, <argument pos:start="11:40" pos:end="11:43"><expr pos:start="11:40" pos:end="11:43"><name pos:start="11:40" pos:end="11:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="13:11" pos:end="31:9">else <block pos:start="13:16" pos:end="31:9">{<block_content pos:start="15:13" pos:end="29:25">

            <expr_stmt pos:start="15:13" pos:end="15:25"><expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:17">value</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <operator pos:start="15:21" pos:end="15:21">*</operator><name pos:start="15:22" pos:end="15:24">obj</name></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:47"><expr pos:start="17:13" pos:end="17:46"><call pos:start="17:13" pos:end="17:46"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:13">v</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:23">type_int</name></name><argument_list pos:start="17:24" pos:end="17:46">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">v</name></expr></argument>, <argument pos:start="17:28" pos:end="17:33"><expr pos:start="17:28" pos:end="17:33"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:33">value</name></expr></argument>, <argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">name</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="27:13"><if pos:start="19:13" pos:end="27:13">if <condition pos:start="19:16" pos:end="19:53">(<expr pos:start="19:17" pos:end="19:52"><name pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:21">value</name> <argument_list type="generic" pos:start="19:23" pos:end="19:43">&lt; <argument pos:start="19:25" pos:end="19:41"><expr pos:start="19:25" pos:end="19:41"><name pos:start="19:25" pos:end="19:32">INT8_MIN</name> <operator pos:start="19:34" pos:end="19:35">||</operator> <name pos:start="19:37" pos:end="19:41">value</name></expr></argument> &gt;</argument_list></name> <name pos:start="19:45" pos:end="19:52">INT8_MAX</name></expr>)</condition> <block pos:start="19:55" pos:end="27:13">{<block_content pos:start="21:17" pos:end="25:23">

                <expr_stmt pos:start="21:17" pos:end="23:36"><expr pos:start="21:17" pos:end="23:35"><call pos:start="21:17" pos:end="23:35"><name pos:start="21:17" pos:end="21:25">error_set</name><argument_list pos:start="21:26" pos:end="23:35">(<argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">errp</name></expr></argument>, <argument pos:start="21:33" pos:end="21:60"><expr pos:start="21:33" pos:end="21:60"><name pos:start="21:33" pos:end="21:60">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="21:63" pos:end="21:82"><expr pos:start="21:63" pos:end="21:82"><ternary pos:start="21:63" pos:end="21:82"><condition pos:start="21:63" pos:end="21:68"><expr pos:start="21:63" pos:end="21:66"><name pos:start="21:63" pos:end="21:66">name</name></expr> ?</condition><then pos:start="21:70" pos:end="21:73"> <expr pos:start="21:70" pos:end="21:73"><name pos:start="21:70" pos:end="21:73">name</name></expr> </then><else pos:start="21:75" pos:end="21:82">: <expr pos:start="21:77" pos:end="21:82"><literal type="string" pos:start="21:77" pos:end="21:82">"null"</literal></expr></else></ternary></expr></argument>,

                          <argument pos:start="23:27" pos:end="23:34"><expr pos:start="23:27" pos:end="23:34"><literal type="string" pos:start="23:27" pos:end="23:34">"int8_t"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="25:17" pos:end="25:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:25"><expr pos:start="29:13" pos:end="29:24"><operator pos:start="29:13" pos:end="29:13">*</operator><name pos:start="29:14" pos:end="29:16">obj</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:24">value</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
