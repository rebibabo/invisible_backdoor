<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24712.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">virt_acpi_setup</name><parameter_list pos:start="1:21" pos:end="1:47">(<parameter pos:start="1:22" pos:end="1:46"><decl pos:start="1:22" pos:end="1:46"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:34">VirtGuestInfo</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:46">guest_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:46">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19">AcpiBuildTables</name></type> <name pos:start="5:21" pos:end="5:26">tables</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AcpiBuildState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:31">build_state</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:28">(<expr pos:start="11:9" pos:end="11:27"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:27"><name pos:start="11:10" pos:end="11:19">guest_info</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:27">fw_cfg</name></name></expr>)</condition> <block pos:start="11:30" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:29">trace_virt_acpi_setup</name><argument_list pos:start="13:30" pos:end="13:31">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:21">acpi_enabled</name></expr>)</condition> <block pos:start="21:24" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><call pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:29">trace_virt_acpi_setup</name><argument_list pos:start="23:30" pos:end="23:31">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:49"><expr pos:start="31:5" pos:end="31:48"><name pos:start="31:5" pos:end="31:15">build_state</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:48"><name pos:start="31:19" pos:end="31:27">g_malloc0</name><argument_list pos:start="31:28" pos:end="31:48">(<argument pos:start="31:29" pos:end="31:47"><expr pos:start="31:29" pos:end="31:47"><sizeof pos:start="31:29" pos:end="31:34">sizeof <name/></sizeof>*<name pos:start="31:37" pos:end="31:47">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:41"><expr pos:start="33:5" pos:end="33:40"><name pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:15">build_state</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:27">guest_info</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <name pos:start="33:31" pos:end="33:40">guest_info</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><call pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:26">acpi_build_tables_init</name><argument_list pos:start="37:27" pos:end="37:35">(<argument pos:start="37:28" pos:end="37:34"><expr pos:start="37:28" pos:end="37:34"><operator pos:start="37:28" pos:end="37:28">&amp;</operator><name pos:start="37:29" pos:end="37:34">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><call pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:19">virt_acpi_build</name><argument_list pos:start="39:20" pos:end="39:53">(<argument pos:start="39:21" pos:end="39:43"><expr pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:31">build_state</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:43">guest_info</name></name></expr></argument>, <argument pos:start="39:46" pos:end="39:52"><expr pos:start="39:46" pos:end="39:52"><operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:52">tables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:36">/* Now expose it all to Guest */</comment>

    <expr_stmt pos:start="45:5" pos:end="49:74"><expr pos:start="45:5" pos:end="49:73"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:15">build_state</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:25">table_mr</name></name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="49:73"><name pos:start="45:29" pos:end="45:45">acpi_add_rom_blob</name><argument_list pos:start="45:46" pos:end="49:73">(<argument pos:start="45:47" pos:end="45:57"><expr pos:start="45:47" pos:end="45:57"><name pos:start="45:47" pos:end="45:57">build_state</name></expr></argument>, <argument pos:start="45:60" pos:end="45:76"><expr pos:start="45:60" pos:end="45:76"><name pos:start="45:60" pos:end="45:76"><name pos:start="45:60" pos:end="45:65">tables</name><operator pos:start="45:66" pos:end="45:66">.</operator><name pos:start="45:67" pos:end="45:76">table_data</name></name></expr></argument>,

                                               <argument pos:start="47:48" pos:end="47:68"><expr pos:start="47:48" pos:end="47:68"><name pos:start="47:48" pos:end="47:68">ACPI_BUILD_TABLE_FILE</name></expr></argument>,

                                               <argument pos:start="49:48" pos:end="49:72"><expr pos:start="49:48" pos:end="49:72"><name pos:start="49:48" pos:end="49:72">ACPI_BUILD_TABLE_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:42"><expr pos:start="51:5" pos:end="51:41"><call pos:start="51:5" pos:end="51:41"><name pos:start="51:5" pos:end="51:10">assert</name><argument_list pos:start="51:11" pos:end="51:41">(<argument pos:start="51:12" pos:end="51:40"><expr pos:start="51:12" pos:end="51:40"><name pos:start="51:12" pos:end="51:32"><name pos:start="51:12" pos:end="51:22">build_state</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:32">table_mr</name></name> <operator pos:start="51:34" pos:end="51:35">!=</operator> <name pos:start="51:37" pos:end="51:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:77"><expr pos:start="55:5" pos:end="57:76"><name pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:15">build_state</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:26">linker_mr</name></name> <operator pos:start="55:28" pos:end="55:28">=</operator>

        <call pos:start="57:9" pos:end="57:76"><name pos:start="57:9" pos:end="57:25">acpi_add_rom_blob</name><argument_list pos:start="57:26" pos:end="57:76">(<argument pos:start="57:27" pos:end="57:37"><expr pos:start="57:27" pos:end="57:37"><name pos:start="57:27" pos:end="57:37">build_state</name></expr></argument>, <argument pos:start="57:40" pos:end="57:52"><expr pos:start="57:40" pos:end="57:52"><name pos:start="57:40" pos:end="57:52"><name pos:start="57:40" pos:end="57:45">tables</name><operator pos:start="57:46" pos:end="57:46">.</operator><name pos:start="57:47" pos:end="57:52">linker</name></name></expr></argument>, <argument pos:start="57:55" pos:end="57:72"><expr pos:start="57:55" pos:end="57:72"><literal type="string" pos:start="57:55" pos:end="57:72">"etc/table-loader"</literal></expr></argument>, <argument pos:start="57:75" pos:end="57:75"><expr pos:start="57:75" pos:end="57:75"><literal type="number" pos:start="57:75" pos:end="57:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:73"><expr pos:start="61:5" pos:end="63:72"><call pos:start="61:5" pos:end="63:72"><name pos:start="61:5" pos:end="61:19">fw_cfg_add_file</name><argument_list pos:start="61:20" pos:end="63:72">(<argument pos:start="61:21" pos:end="61:38"><expr pos:start="61:21" pos:end="61:38"><name pos:start="61:21" pos:end="61:38"><name pos:start="61:21" pos:end="61:30">guest_info</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:38">fw_cfg</name></name></expr></argument>, <argument pos:start="61:41" pos:end="61:62"><expr pos:start="61:41" pos:end="61:62"><name pos:start="61:41" pos:end="61:62">ACPI_BUILD_TPMLOG_FILE</name></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:40"><expr pos:start="63:21" pos:end="63:40"><name pos:start="63:21" pos:end="63:40"><name pos:start="63:21" pos:end="63:26">tables</name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:34">tcpalog</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:40">data</name></name></expr></argument>, <argument pos:start="63:43" pos:end="63:71"><expr pos:start="63:43" pos:end="63:71"><call pos:start="63:43" pos:end="63:71"><name pos:start="63:43" pos:end="63:55">acpi_data_len</name><argument_list pos:start="63:56" pos:end="63:71">(<argument pos:start="63:57" pos:end="63:70"><expr pos:start="63:57" pos:end="63:70"><name pos:start="63:57" pos:end="63:70"><name pos:start="63:57" pos:end="63:62">tables</name><operator pos:start="63:63" pos:end="63:63">.</operator><name pos:start="63:64" pos:end="63:70">tcpalog</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="69:71"><expr pos:start="67:5" pos:end="69:70"><name pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:15">build_state</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:24">rsdp_mr</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="69:70"><name pos:start="67:28" pos:end="67:44">acpi_add_rom_blob</name><argument_list pos:start="67:45" pos:end="69:70">(<argument pos:start="67:46" pos:end="67:56"><expr pos:start="67:46" pos:end="67:56"><name pos:start="67:46" pos:end="67:56">build_state</name></expr></argument>, <argument pos:start="67:59" pos:end="67:69"><expr pos:start="67:59" pos:end="67:69"><name pos:start="67:59" pos:end="67:69"><name pos:start="67:59" pos:end="67:64">tables</name><operator pos:start="67:65" pos:end="67:65">.</operator><name pos:start="67:66" pos:end="67:69">rsdp</name></name></expr></argument>,

                                              <argument pos:start="69:47" pos:end="69:66"><expr pos:start="69:47" pos:end="69:66"><name pos:start="69:47" pos:end="69:66">ACPI_BUILD_RSDP_FILE</name></expr></argument>, <argument pos:start="69:69" pos:end="69:69"><expr pos:start="69:69" pos:end="69:69"><literal type="number" pos:start="69:69" pos:end="69:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:60"><expr pos:start="73:5" pos:end="73:59"><call pos:start="73:5" pos:end="73:59"><name pos:start="73:5" pos:end="73:23">qemu_register_reset</name><argument_list pos:start="73:24" pos:end="73:59">(<argument pos:start="73:25" pos:end="73:45"><expr pos:start="73:25" pos:end="73:45"><name pos:start="73:25" pos:end="73:45">virt_acpi_build_reset</name></expr></argument>, <argument pos:start="73:48" pos:end="73:58"><expr pos:start="73:48" pos:end="73:58"><name pos:start="73:48" pos:end="73:58">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:39"><expr pos:start="75:5" pos:end="75:38"><call pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:25">virt_acpi_build_reset</name><argument_list pos:start="75:26" pos:end="75:38">(<argument pos:start="75:27" pos:end="75:37"><expr pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:37">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:69"><expr pos:start="77:5" pos:end="77:68"><call pos:start="77:5" pos:end="77:68"><name pos:start="77:5" pos:end="77:20">vmstate_register</name><argument_list pos:start="77:21" pos:end="77:68">(<argument pos:start="77:22" pos:end="77:25"><expr pos:start="77:22" pos:end="77:25"><name pos:start="77:22" pos:end="77:25">NULL</name></expr></argument>, <argument pos:start="77:28" pos:end="77:28"><expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr></argument>, <argument pos:start="77:31" pos:end="77:54"><expr pos:start="77:31" pos:end="77:54"><operator pos:start="77:31" pos:end="77:31">&amp;</operator><name pos:start="77:32" pos:end="77:54">vmstate_virt_acpi_build</name></expr></argument>, <argument pos:start="77:57" pos:end="77:67"><expr pos:start="77:57" pos:end="77:67"><name pos:start="77:57" pos:end="77:67">build_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="85:7">/* Cleanup tables but don't free the memory: we track it

     * in build_state.

     */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:46"><expr pos:start="87:5" pos:end="87:45"><call pos:start="87:5" pos:end="87:45"><name pos:start="87:5" pos:end="87:29">acpi_build_tables_cleanup</name><argument_list pos:start="87:30" pos:end="87:45">(<argument pos:start="87:31" pos:end="87:37"><expr pos:start="87:31" pos:end="87:37"><operator pos:start="87:31" pos:end="87:31">&amp;</operator><name pos:start="87:32" pos:end="87:37">tables</name></expr></argument>, <argument pos:start="87:40" pos:end="87:44"><expr pos:start="87:40" pos:end="87:44"><name pos:start="87:40" pos:end="87:44">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
