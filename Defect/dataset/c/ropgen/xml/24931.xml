<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24931.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vmdk_probe</name><parameter_list pos:start="1:22" pos:end="1:77">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:35">uint8_t</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">buf</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:54">buf_size</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:76"><decl pos:start="1:57" pos:end="1:76"><type pos:start="1:57" pos:end="1:76"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:76">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:18">magic</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:16">buf_size</name> <operator pos:start="9:18" pos:end="9:18">&lt;</operator> <literal type="number" pos:start="9:20" pos:end="9:20">4</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:9">magic</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:41"><name pos:start="13:13" pos:end="13:23">be32_to_cpu</name><argument_list pos:start="13:24" pos:end="13:41">(<argument pos:start="13:25" pos:end="13:40"><expr pos:start="13:25" pos:end="13:40"><operator pos:start="13:25" pos:end="13:25">*</operator><operator pos:start="13:26" pos:end="13:26">(</operator><name pos:start="13:27" pos:end="13:34">uint32_t</name> <operator pos:start="13:36" pos:end="13:36">*</operator><operator pos:start="13:37" pos:end="13:37">)</operator><name pos:start="13:38" pos:end="13:40">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="105:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="17:29">(<expr pos:start="15:9" pos:end="17:28"><name pos:start="15:9" pos:end="15:13">magic</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <name pos:start="15:18" pos:end="15:28">VMDK3_MAGIC</name> <operator pos:start="15:30" pos:end="15:31">||</operator>

        <name pos:start="17:9" pos:end="17:13">magic</name> <operator pos:start="17:15" pos:end="17:16">==</operator> <name pos:start="17:18" pos:end="17:28">VMDK4_MAGIC</name></expr>)</condition> <block pos:start="17:31" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><literal type="number" pos:start="19:16" pos:end="19:18">100</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="105:5">else <block pos:start="21:12" pos:end="105:5">{<block_content pos:start="23:9" pos:end="103:17">

        <decl_stmt pos:start="23:9" pos:end="23:42"><decl pos:start="23:9" pos:end="23:41"><type pos:start="23:9" pos:end="23:20"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:18">char</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:21">p</name> <init pos:start="23:23" pos:end="23:41">= <expr pos:start="23:25" pos:end="23:41"><operator pos:start="23:25" pos:end="23:25">(</operator><specifier pos:start="23:26" pos:end="23:30">const</specifier> <name pos:start="23:32" pos:end="23:35">char</name> <operator pos:start="23:37" pos:end="23:37">*</operator><operator pos:start="23:38" pos:end="23:38">)</operator><name pos:start="23:39" pos:end="23:41">buf</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:39"><decl pos:start="25:9" pos:end="25:38"><type pos:start="25:9" pos:end="25:20"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:18">char</name> <modifier pos:start="25:20" pos:end="25:20">*</modifier></type><name pos:start="25:21" pos:end="25:23">end</name> <init pos:start="25:25" pos:end="25:38">= <expr pos:start="25:27" pos:end="25:38"><name pos:start="25:27" pos:end="25:27">p</name> <operator pos:start="25:29" pos:end="25:29">+</operator> <name pos:start="25:31" pos:end="25:38">buf_size</name></expr></init></decl>;</decl_stmt>

        <while pos:start="27:9" pos:end="101:9">while <condition pos:start="27:15" pos:end="27:23">(<expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:16">p</name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <name pos:start="27:20" pos:end="27:22">end</name></expr>)</condition> <block pos:start="27:25" pos:end="101:9">{<block_content pos:start="29:13" pos:end="99:21">

            <if_stmt pos:start="29:13" pos:end="43:13"><if pos:start="29:13" pos:end="43:13">if <condition pos:start="29:16" pos:end="29:26">(<expr pos:start="29:17" pos:end="29:25"><operator pos:start="29:17" pos:end="29:17">*</operator><name pos:start="29:18" pos:end="29:18">p</name> <operator pos:start="29:20" pos:end="29:21">==</operator> <literal type="char" pos:start="29:23" pos:end="29:25">'#'</literal></expr>)</condition> <block pos:start="29:28" pos:end="43:13">{<block_content pos:start="33:17" pos:end="41:25">

                <comment type="block" pos:start="31:17" pos:end="31:39">/* skip comment line */</comment>

                <while pos:start="33:17" pos:end="37:17">while <condition pos:start="33:23" pos:end="33:45">(<expr pos:start="33:24" pos:end="33:44"><name pos:start="33:24" pos:end="33:24">p</name> <operator pos:start="33:26" pos:end="33:26">&lt;</operator> <name pos:start="33:28" pos:end="33:30">end</name> <operator pos:start="33:32" pos:end="33:33">&amp;&amp;</operator> <operator pos:start="33:35" pos:end="33:35">*</operator><name pos:start="33:36" pos:end="33:36">p</name> <operator pos:start="33:38" pos:end="33:39">!=</operator> <literal type="char" pos:start="33:41" pos:end="33:44">'\n'</literal></expr>)</condition> <block pos:start="33:47" pos:end="37:17">{<block_content pos:start="35:21" pos:end="35:24">

                    <expr_stmt pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:21">p</name><operator pos:start="35:22" pos:end="35:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></while>

                <expr_stmt pos:start="39:17" pos:end="39:20"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:17">p</name><operator pos:start="39:18" pos:end="39:19">++</operator></expr>;</expr_stmt>

                <continue pos:start="41:17" pos:end="41:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="45:13" pos:end="73:13"><if pos:start="45:13" pos:end="73:13">if <condition pos:start="45:16" pos:end="45:26">(<expr pos:start="45:17" pos:end="45:25"><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:18">p</name> <operator pos:start="45:20" pos:end="45:21">==</operator> <literal type="char" pos:start="45:23" pos:end="45:25">' '</literal></expr>)</condition> <block pos:start="45:28" pos:end="73:13">{<block_content pos:start="47:17" pos:end="71:25">

                <while pos:start="47:17" pos:end="51:17">while <condition pos:start="47:23" pos:end="47:44">(<expr pos:start="47:24" pos:end="47:43"><name pos:start="47:24" pos:end="47:24">p</name> <operator pos:start="47:26" pos:end="47:26">&lt;</operator> <name pos:start="47:28" pos:end="47:30">end</name> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <operator pos:start="47:35" pos:end="47:35">*</operator><name pos:start="47:36" pos:end="47:36">p</name> <operator pos:start="47:38" pos:end="47:39">==</operator> <literal type="char" pos:start="47:41" pos:end="47:43">' '</literal></expr>)</condition> <block pos:start="47:46" pos:end="51:17">{<block_content pos:start="49:21" pos:end="49:24">

                    <expr_stmt pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:21">p</name><operator pos:start="49:22" pos:end="49:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></while>

                <comment type="block" pos:start="53:17" pos:end="53:61">/* skip '\r' if windows line endings used. */</comment>

                <if_stmt pos:start="55:17" pos:end="59:17"><if pos:start="55:17" pos:end="59:17">if <condition pos:start="55:20" pos:end="55:42">(<expr pos:start="55:21" pos:end="55:41"><name pos:start="55:21" pos:end="55:21">p</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:27">end</name> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator> <operator pos:start="55:32" pos:end="55:32">*</operator><name pos:start="55:33" pos:end="55:33">p</name> <operator pos:start="55:35" pos:end="55:36">==</operator> <literal type="char" pos:start="55:38" pos:end="55:41">'\r'</literal></expr>)</condition> <block pos:start="55:44" pos:end="59:17">{<block_content pos:start="57:21" pos:end="57:24">

                    <expr_stmt pos:start="57:21" pos:end="57:24"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:21">p</name><operator pos:start="57:22" pos:end="57:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="61:17" pos:end="61:68">/* only accept blank lines before 'version=' line */</comment>

                <if_stmt pos:start="63:17" pos:end="67:17"><if pos:start="63:17" pos:end="67:17">if <condition pos:start="63:20" pos:end="63:43">(<expr pos:start="63:21" pos:end="63:42"><name pos:start="63:21" pos:end="63:21">p</name> <operator pos:start="63:23" pos:end="63:24">==</operator> <name pos:start="63:26" pos:end="63:28">end</name> <operator pos:start="63:30" pos:end="63:31">||</operator> <operator pos:start="63:33" pos:end="63:33">*</operator><name pos:start="63:34" pos:end="63:34">p</name> <operator pos:start="63:36" pos:end="63:37">!=</operator> <literal type="char" pos:start="63:39" pos:end="63:42">'\n'</literal></expr>)</condition> <block pos:start="63:45" pos:end="67:17">{<block_content pos:start="65:21" pos:end="65:29">

                    <return pos:start="65:21" pos:end="65:29">return <expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:20"><expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:17">p</name><operator pos:start="69:18" pos:end="69:19">++</operator></expr>;</expr_stmt>

                <continue pos:start="71:17" pos:end="71:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="85:13"><if pos:start="75:13" pos:end="85:13">if <condition pos:start="75:16" pos:end="75:49">(<expr pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:19">end</name> <operator pos:start="75:21" pos:end="75:21">-</operator> <name pos:start="75:23" pos:end="75:23">p</name> <operator pos:start="75:25" pos:end="75:26">&gt;=</operator> <call pos:start="75:28" pos:end="75:48"><name pos:start="75:28" pos:end="75:33">strlen</name><argument_list pos:start="75:34" pos:end="75:48">(<argument pos:start="75:35" pos:end="75:47"><expr pos:start="75:35" pos:end="75:47"><literal type="string" pos:start="75:35" pos:end="75:47">"version=X\n"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:51" pos:end="85:13">{<block_content pos:start="77:17" pos:end="83:17">

                <if_stmt pos:start="77:17" pos:end="83:17"><if pos:start="77:17" pos:end="83:17">if <condition pos:start="77:20" pos:end="79:74">(<expr pos:start="77:21" pos:end="79:73"><call pos:start="77:21" pos:end="77:68"><name pos:start="77:21" pos:end="77:27">strncmp</name><argument_list pos:start="77:28" pos:end="77:68">(<argument pos:start="77:29" pos:end="77:41"><expr pos:start="77:29" pos:end="77:41"><literal type="string" pos:start="77:29" pos:end="77:41">"version=1\n"</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><name pos:start="77:44" pos:end="77:44">p</name></expr></argument>, <argument pos:start="77:47" pos:end="77:67"><expr pos:start="77:47" pos:end="77:67"><call pos:start="77:47" pos:end="77:67"><name pos:start="77:47" pos:end="77:52">strlen</name><argument_list pos:start="77:53" pos:end="77:67">(<argument pos:start="77:54" pos:end="77:66"><expr pos:start="77:54" pos:end="77:66"><literal type="string" pos:start="77:54" pos:end="77:66">"version=1\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="77:70" pos:end="77:71">==</operator> <literal type="number" pos:start="77:73" pos:end="77:73">0</literal> <operator pos:start="77:75" pos:end="77:76">||</operator>

                    <call pos:start="79:21" pos:end="79:68"><name pos:start="79:21" pos:end="79:27">strncmp</name><argument_list pos:start="79:28" pos:end="79:68">(<argument pos:start="79:29" pos:end="79:41"><expr pos:start="79:29" pos:end="79:41"><literal type="string" pos:start="79:29" pos:end="79:41">"version=2\n"</literal></expr></argument>, <argument pos:start="79:44" pos:end="79:44"><expr pos:start="79:44" pos:end="79:44"><name pos:start="79:44" pos:end="79:44">p</name></expr></argument>, <argument pos:start="79:47" pos:end="79:67"><expr pos:start="79:47" pos:end="79:67"><call pos:start="79:47" pos:end="79:67"><name pos:start="79:47" pos:end="79:52">strlen</name><argument_list pos:start="79:53" pos:end="79:67">(<argument pos:start="79:54" pos:end="79:66"><expr pos:start="79:54" pos:end="79:66"><literal type="string" pos:start="79:54" pos:end="79:66">"version=2\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="79:70" pos:end="79:71">==</operator> <literal type="number" pos:start="79:73" pos:end="79:73">0</literal></expr>)</condition> <block pos:start="79:76" pos:end="83:17">{<block_content pos:start="81:21" pos:end="81:31">

                    <return pos:start="81:21" pos:end="81:31">return <expr pos:start="81:28" pos:end="81:30"><literal type="number" pos:start="81:28" pos:end="81:30">100</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="87:13" pos:end="97:13"><if pos:start="87:13" pos:end="97:13">if <condition pos:start="87:16" pos:end="87:51">(<expr pos:start="87:17" pos:end="87:50"><name pos:start="87:17" pos:end="87:19">end</name> <operator pos:start="87:21" pos:end="87:21">-</operator> <name pos:start="87:23" pos:end="87:23">p</name> <operator pos:start="87:25" pos:end="87:26">&gt;=</operator> <call pos:start="87:28" pos:end="87:50"><name pos:start="87:28" pos:end="87:33">strlen</name><argument_list pos:start="87:34" pos:end="87:50">(<argument pos:start="87:35" pos:end="87:49"><expr pos:start="87:35" pos:end="87:49"><literal type="string" pos:start="87:35" pos:end="87:49">"version=X\r\n"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:53" pos:end="97:13">{<block_content pos:start="89:17" pos:end="95:17">

                <if_stmt pos:start="89:17" pos:end="95:17"><if pos:start="89:17" pos:end="95:17">if <condition pos:start="89:20" pos:end="91:78">(<expr pos:start="89:21" pos:end="91:77"><call pos:start="89:21" pos:end="89:72"><name pos:start="89:21" pos:end="89:27">strncmp</name><argument_list pos:start="89:28" pos:end="89:72">(<argument pos:start="89:29" pos:end="89:43"><expr pos:start="89:29" pos:end="89:43"><literal type="string" pos:start="89:29" pos:end="89:43">"version=1\r\n"</literal></expr></argument>, <argument pos:start="89:46" pos:end="89:46"><expr pos:start="89:46" pos:end="89:46"><name pos:start="89:46" pos:end="89:46">p</name></expr></argument>, <argument pos:start="89:49" pos:end="89:71"><expr pos:start="89:49" pos:end="89:71"><call pos:start="89:49" pos:end="89:71"><name pos:start="89:49" pos:end="89:54">strlen</name><argument_list pos:start="89:55" pos:end="89:71">(<argument pos:start="89:56" pos:end="89:70"><expr pos:start="89:56" pos:end="89:70"><literal type="string" pos:start="89:56" pos:end="89:70">"version=1\r\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="89:74" pos:end="89:75">==</operator> <literal type="number" pos:start="89:77" pos:end="89:77">0</literal> <operator pos:start="89:79" pos:end="89:80">||</operator>

                    <call pos:start="91:21" pos:end="91:72"><name pos:start="91:21" pos:end="91:27">strncmp</name><argument_list pos:start="91:28" pos:end="91:72">(<argument pos:start="91:29" pos:end="91:43"><expr pos:start="91:29" pos:end="91:43"><literal type="string" pos:start="91:29" pos:end="91:43">"version=2\r\n"</literal></expr></argument>, <argument pos:start="91:46" pos:end="91:46"><expr pos:start="91:46" pos:end="91:46"><name pos:start="91:46" pos:end="91:46">p</name></expr></argument>, <argument pos:start="91:49" pos:end="91:71"><expr pos:start="91:49" pos:end="91:71"><call pos:start="91:49" pos:end="91:71"><name pos:start="91:49" pos:end="91:54">strlen</name><argument_list pos:start="91:55" pos:end="91:71">(<argument pos:start="91:56" pos:end="91:70"><expr pos:start="91:56" pos:end="91:70"><literal type="string" pos:start="91:56" pos:end="91:70">"version=2\r\n"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="91:74" pos:end="91:75">==</operator> <literal type="number" pos:start="91:77" pos:end="91:77">0</literal></expr>)</condition> <block pos:start="91:80" pos:end="95:17">{<block_content pos:start="93:21" pos:end="93:31">

                    <return pos:start="93:21" pos:end="93:31">return <expr pos:start="93:28" pos:end="93:30"><literal type="number" pos:start="93:28" pos:end="93:30">100</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="99:13" pos:end="99:21">return <expr pos:start="99:20" pos:end="99:20"><literal type="number" pos:start="99:20" pos:end="99:20">0</literal></expr>;</return>

        </block_content>}</block></while>

        <return pos:start="103:9" pos:end="103:17">return <expr pos:start="103:16" pos:end="103:16"><literal type="number" pos:start="103:16" pos:end="103:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
