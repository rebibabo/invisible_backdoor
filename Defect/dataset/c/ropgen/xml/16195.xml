<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16195.c" pos:tabs="8"><function pos:start="1:1" pos:end="811:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:20">set_cp15</name>)<parameter_list pos:start="1:22" pos:end="1:65">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:30">CPUState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">uint32_t</name></type> <name pos:start="1:47" pos:end="1:50">insn</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:64">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="811:1">{<block_content pos:start="5:5" pos:end="809:49">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">crm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:7">op1</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <operator pos:start="13:11" pos:end="13:11">(</operator><name pos:start="13:12" pos:end="13:15">insn</name> <operator pos:start="13:17" pos:end="13:18">&gt;&gt;</operator> <literal type="number" pos:start="13:20" pos:end="13:21">21</literal><operator pos:start="13:22" pos:end="13:22">)</operator> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <literal type="number" pos:start="13:26" pos:end="13:26">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:7">op2</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:15">insn</name> <operator pos:start="15:17" pos:end="15:18">&gt;&gt;</operator> <literal type="number" pos:start="15:20" pos:end="15:20">5</literal><operator pos:start="15:21" pos:end="15:21">)</operator> <operator pos:start="15:23" pos:end="15:23">&amp;</operator> <literal type="number" pos:start="15:25" pos:end="15:25">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:7">crm</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:14">insn</name> <operator pos:start="17:16" pos:end="17:16">&amp;</operator> <literal type="number" pos:start="17:18" pos:end="17:20">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="799:5">switch <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:17">insn</name> <operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator> <literal type="number" pos:start="19:22" pos:end="19:23">16</literal><operator pos:start="19:24" pos:end="19:24">)</operator> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <literal type="number" pos:start="19:28" pos:end="19:30">0xf</literal></expr>)</condition> <block pos:start="19:33" pos:end="799:5">{<block_content pos:start="21:5" pos:end="797:14">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case>

        <comment type="block" pos:start="23:9" pos:end="23:24">/* ID codes.  */</comment>

        <if_stmt pos:start="25:9" pos:end="27:18"><if pos:start="25:9" pos:end="27:18">if <condition pos:start="25:12" pos:end="25:49">(<expr pos:start="25:13" pos:end="25:48"><call pos:start="25:13" pos:end="25:48"><name pos:start="25:13" pos:end="25:23">arm_feature</name><argument_list pos:start="25:24" pos:end="25:48">(<argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">env</name></expr></argument>, <argument pos:start="25:30" pos:end="25:47"><expr pos:start="25:30" pos:end="25:47"><name pos:start="25:30" pos:end="25:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">

            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:18"><if pos:start="29:9" pos:end="31:18">if <condition pos:start="29:12" pos:end="29:49">(<expr pos:start="29:13" pos:end="29:48"><call pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:23">arm_feature</name><argument_list pos:start="29:24" pos:end="29:48">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">env</name></expr></argument>, <argument pos:start="29:30" pos:end="29:47"><expr pos:start="29:30" pos:end="29:47"><name pos:start="29:30" pos:end="29:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:18"><block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if <condition pos:start="33:12" pos:end="35:52">(<expr pos:start="33:13" pos:end="35:51"><call pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:23">arm_feature</name><argument_list pos:start="33:24" pos:end="33:44">(<argument pos:start="33:25" pos:end="33:27"><expr pos:start="33:25" pos:end="33:27"><name pos:start="33:25" pos:end="33:27">env</name></expr></argument>, <argument pos:start="33:30" pos:end="33:43"><expr pos:start="33:30" pos:end="33:43"><name pos:start="33:30" pos:end="33:43">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call>

                <operator pos:start="35:17" pos:end="35:18">&amp;&amp;</operator> <name pos:start="35:20" pos:end="35:22">op1</name> <operator pos:start="35:24" pos:end="35:25">==</operator> <literal type="number" pos:start="35:27" pos:end="35:27">2</literal> <operator pos:start="35:29" pos:end="35:30">&amp;&amp;</operator> <name pos:start="35:32" pos:end="35:34">crm</name> <operator pos:start="35:36" pos:end="35:37">==</operator> <literal type="number" pos:start="35:39" pos:end="35:39">0</literal> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator> <name pos:start="35:44" pos:end="35:46">op2</name> <operator pos:start="35:48" pos:end="35:49">==</operator> <literal type="number" pos:start="35:51" pos:end="35:51">0</literal></expr>)</condition> <block pos:start="35:54" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:18">

            <expr_stmt pos:start="37:13" pos:end="37:43"><expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:21">cp15</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:30">c0_cssel</name></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <name pos:start="37:34" pos:end="37:36">val</name> <operator pos:start="37:38" pos:end="37:38">&amp;</operator> <literal type="number" pos:start="37:40" pos:end="37:42">0xf</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">bad_reg</name>;</goto>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">1</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:40">/* System configuration.  */</comment>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="49:52">(<expr pos:start="47:13" pos:end="49:51"><call pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:23">arm_feature</name><argument_list pos:start="47:24" pos:end="47:44">(<argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><name pos:start="47:25" pos:end="47:27">env</name></expr></argument>, <argument pos:start="47:30" pos:end="47:43"><expr pos:start="47:30" pos:end="47:43"><name pos:start="47:30" pos:end="47:43">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call>

                <operator pos:start="49:17" pos:end="49:18">&amp;&amp;</operator> <name pos:start="49:20" pos:end="49:22">op1</name> <operator pos:start="49:24" pos:end="49:25">==</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal> <operator pos:start="49:29" pos:end="49:30">&amp;&amp;</operator> <name pos:start="49:32" pos:end="49:34">crm</name> <operator pos:start="49:36" pos:end="49:37">==</operator> <literal type="number" pos:start="49:39" pos:end="49:39">1</literal> <operator pos:start="49:41" pos:end="49:42">&amp;&amp;</operator> <name pos:start="49:44" pos:end="49:46">op2</name> <operator pos:start="49:48" pos:end="49:49">==</operator> <literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr>)</condition> <block pos:start="49:54" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:18">

            <expr_stmt pos:start="51:13" pos:end="51:35"><expr pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">env</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:21">cp15</name><operator pos:start="51:22" pos:end="51:22">.</operator><name pos:start="51:23" pos:end="51:28">c1_scr</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <name pos:start="51:32" pos:end="51:34">val</name></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="59:20"><if pos:start="57:9" pos:end="59:20">if <condition pos:start="57:12" pos:end="57:49">(<expr pos:start="57:13" pos:end="57:48"><call pos:start="57:13" pos:end="57:48"><name pos:start="57:13" pos:end="57:23">arm_feature</name><argument_list pos:start="57:24" pos:end="57:48">(<argument pos:start="57:25" pos:end="57:27"><expr pos:start="57:25" pos:end="57:27"><name pos:start="57:25" pos:end="57:27">env</name></expr></argument>, <argument pos:start="57:30" pos:end="57:47"><expr pos:start="57:30" pos:end="57:47"><name pos:start="57:30" pos:end="57:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:20"><block_content pos:start="59:13" pos:end="59:20">

            <expr_stmt pos:start="59:13" pos:end="59:20"><expr pos:start="59:13" pos:end="59:19"><name pos:start="59:13" pos:end="59:15">op2</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="61:9" pos:end="113:9">switch <condition pos:start="61:16" pos:end="61:20">(<expr pos:start="61:17" pos:end="61:19"><name pos:start="61:17" pos:end="61:19">op2</name></expr>)</condition> <block pos:start="61:22" pos:end="113:9">{<block_content pos:start="63:9" pos:end="111:25">

        <case pos:start="63:9" pos:end="63:15">case <expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>:</case>

            <if_stmt pos:start="65:13" pos:end="67:39"><if pos:start="65:13" pos:end="67:39">if <condition pos:start="65:16" pos:end="65:66">(<expr pos:start="65:17" pos:end="65:65"><operator pos:start="65:17" pos:end="65:17">!</operator><call pos:start="65:18" pos:end="65:53"><name pos:start="65:18" pos:end="65:28">arm_feature</name><argument_list pos:start="65:29" pos:end="65:53">(<argument pos:start="65:30" pos:end="65:32"><expr pos:start="65:30" pos:end="65:32"><name pos:start="65:30" pos:end="65:32">env</name></expr></argument>, <argument pos:start="65:35" pos:end="65:52"><expr pos:start="65:35" pos:end="65:52"><name pos:start="65:35" pos:end="65:52">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call> <operator pos:start="65:55" pos:end="65:56">||</operator> <name pos:start="65:58" pos:end="65:60">crm</name> <operator pos:start="65:62" pos:end="65:63">==</operator> <literal type="number" pos:start="65:65" pos:end="65:65">0</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:39"><block_content pos:start="67:17" pos:end="67:39">

                <expr_stmt pos:start="67:17" pos:end="67:39"><expr pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:32"><name pos:start="67:17" pos:end="67:19">env</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:25">cp15</name><operator pos:start="67:26" pos:end="67:26">.</operator><name pos:start="67:27" pos:end="67:32">c1_sys</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:38">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="69:13" pos:end="69:62">/* ??? Lots of these bits are not implemented.  */</comment>

            <comment type="block" pos:start="71:13" pos:end="71:70">/* This may enable/disable the MMU, so do a TLB flush.  */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:30"><expr pos:start="73:13" pos:end="73:29"><call pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:21">tlb_flush</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:25"><expr pos:start="73:23" pos:end="73:25"><name pos:start="73:23" pos:end="73:25">env</name></expr></argument>, <argument pos:start="73:28" pos:end="73:28"><expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:15">case <expr pos:start="77:14" pos:end="77:14"><literal type="number" pos:start="77:14" pos:end="77:14">1</literal></expr>:</case> <comment type="block" pos:start="77:17" pos:end="77:50">/* Auxiliary control register.  */</comment>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:53">(<expr pos:start="79:17" pos:end="79:52"><call pos:start="79:17" pos:end="79:52"><name pos:start="79:17" pos:end="79:27">arm_feature</name><argument_list pos:start="79:28" pos:end="79:52">(<argument pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:31">env</name></expr></argument>, <argument pos:start="79:34" pos:end="79:51"><expr pos:start="79:34" pos:end="79:51"><name pos:start="79:34" pos:end="79:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:55" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:22">

                <expr_stmt pos:start="81:17" pos:end="81:47"><expr pos:start="81:17" pos:end="81:46"><name pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:19">env</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:25">cp15</name><operator pos:start="81:26" pos:end="81:26">.</operator><name pos:start="81:27" pos:end="81:40">c1_xscaleauxcr</name></name> <operator pos:start="81:42" pos:end="81:42">=</operator> <name pos:start="81:44" pos:end="81:46">val</name></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="87:13" pos:end="87:35">/* Not implemented.  */</comment>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">2</literal></expr>:</case>

            <if_stmt pos:start="93:13" pos:end="95:29"><if pos:start="93:13" pos:end="95:29">if <condition pos:start="93:16" pos:end="93:53">(<expr pos:start="93:17" pos:end="93:52"><call pos:start="93:17" pos:end="93:52"><name pos:start="93:17" pos:end="93:27">arm_feature</name><argument_list pos:start="93:28" pos:end="93:52">(<argument pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:31">env</name></expr></argument>, <argument pos:start="93:34" pos:end="93:51"><expr pos:start="93:34" pos:end="93:51"><name pos:start="93:34" pos:end="93:51">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:29"><block_content pos:start="95:17" pos:end="95:29">

                <goto pos:start="95:17" pos:end="95:29">goto <name pos:start="95:22" pos:end="95:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="97:13" pos:end="105:13"><if pos:start="97:13" pos:end="105:13">if <condition pos:start="97:16" pos:end="97:43">(<expr pos:start="97:17" pos:end="97:42"><name pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:19">env</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:25">cp15</name><operator pos:start="97:26" pos:end="97:26">.</operator><name pos:start="97:27" pos:end="97:35">c1_coproc</name></name> <operator pos:start="97:37" pos:end="97:38">!=</operator> <name pos:start="97:40" pos:end="97:42">val</name></expr>)</condition> <block pos:start="97:45" pos:end="105:13">{<block_content pos:start="99:17" pos:end="103:30">

                <expr_stmt pos:start="99:17" pos:end="99:42"><expr pos:start="99:17" pos:end="99:41"><name pos:start="99:17" pos:end="99:35"><name pos:start="99:17" pos:end="99:19">env</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:25">cp15</name><operator pos:start="99:26" pos:end="99:26">.</operator><name pos:start="99:27" pos:end="99:35">c1_coproc</name></name> <operator pos:start="99:37" pos:end="99:37">=</operator> <name pos:start="99:39" pos:end="99:41">val</name></expr>;</expr_stmt>

                <comment type="block" pos:start="101:17" pos:end="101:69">/* ??? Is this safe when called from within a TB?  */</comment>

                <expr_stmt pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><call pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:24">tb_flush</name><argument_list pos:start="103:25" pos:end="103:29">(<argument pos:start="103:26" pos:end="103:28"><expr pos:start="103:26" pos:end="103:28"><name pos:start="103:26" pos:end="103:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <default pos:start="109:9" pos:end="109:16">default:</default>

            <goto pos:start="111:13" pos:end="111:25">goto <name pos:start="111:18" pos:end="111:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:11">case <expr pos:start="117:10" pos:end="117:10"><literal type="number" pos:start="117:10" pos:end="117:10">2</literal></expr>:</case> <comment type="block" pos:start="117:13" pos:end="117:62">/* MMU Page table control / MPU cache control.  */</comment>

        <if_stmt pos:start="119:9" pos:end="175:9"><if pos:start="119:9" pos:end="141:9">if <condition pos:start="119:12" pos:end="119:46">(<expr pos:start="119:13" pos:end="119:45"><call pos:start="119:13" pos:end="119:45"><name pos:start="119:13" pos:end="119:23">arm_feature</name><argument_list pos:start="119:24" pos:end="119:45">(<argument pos:start="119:25" pos:end="119:27"><expr pos:start="119:25" pos:end="119:27"><name pos:start="119:25" pos:end="119:27">env</name></expr></argument>, <argument pos:start="119:30" pos:end="119:44"><expr pos:start="119:30" pos:end="119:44"><name pos:start="119:30" pos:end="119:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:48" pos:end="141:9">{<block_content pos:start="121:13" pos:end="139:13">

            <switch pos:start="121:13" pos:end="139:13">switch <condition pos:start="121:20" pos:end="121:24">(<expr pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:23">op2</name></expr>)</condition> <block pos:start="121:26" pos:end="139:13">{<block_content pos:start="123:13" pos:end="137:29">

            <case pos:start="123:13" pos:end="123:19">case <expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>:</case>

                <expr_stmt pos:start="125:17" pos:end="125:40"><expr pos:start="125:17" pos:end="125:39"><name pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:19">env</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:25">cp15</name><operator pos:start="125:26" pos:end="125:26">.</operator><name pos:start="125:27" pos:end="125:33">c2_data</name></name> <operator pos:start="125:35" pos:end="125:35">=</operator> <name pos:start="125:37" pos:end="125:39">val</name></expr>;</expr_stmt>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            <case pos:start="129:13" pos:end="129:19">case <expr pos:start="129:18" pos:end="129:18"><literal type="number" pos:start="129:18" pos:end="129:18">1</literal></expr>:</case>

                <expr_stmt pos:start="131:17" pos:end="131:40"><expr pos:start="131:17" pos:end="131:39"><name pos:start="131:17" pos:end="131:33"><name pos:start="131:17" pos:end="131:19">env</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:25">cp15</name><operator pos:start="131:26" pos:end="131:26">.</operator><name pos:start="131:27" pos:end="131:33">c2_insn</name></name> <operator pos:start="131:35" pos:end="131:35">=</operator> <name pos:start="131:37" pos:end="131:39">val</name></expr>;</expr_stmt>

                <break pos:start="133:17" pos:end="133:22">break;</break>

            <default pos:start="135:13" pos:end="135:20">default:</default>

                <goto pos:start="137:17" pos:end="137:29">goto <name pos:start="137:22" pos:end="137:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="175:9">else <block pos:start="141:16" pos:end="175:9">{<block_content pos:start="143:13" pos:end="173:13">

	    <switch pos:start="143:13" pos:end="173:13">switch <condition pos:start="143:20" pos:end="143:24">(<expr pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">op2</name></expr>)</condition> <block pos:start="143:26" pos:end="173:13">{<block_content pos:start="145:13" pos:end="171:29">

	    <case pos:start="145:13" pos:end="145:19">case <expr pos:start="145:18" pos:end="145:18"><literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>:</case>

		<expr_stmt pos:start="147:17" pos:end="147:41"><expr pos:start="147:17" pos:end="147:40"><name pos:start="147:17" pos:end="147:34"><name pos:start="147:17" pos:end="147:19">env</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:25">cp15</name><operator pos:start="147:26" pos:end="147:26">.</operator><name pos:start="147:27" pos:end="147:34">c2_base0</name></name> <operator pos:start="147:36" pos:end="147:36">=</operator> <name pos:start="147:38" pos:end="147:40">val</name></expr>;</expr_stmt>

		<break pos:start="149:17" pos:end="149:22">break;</break>

	    <case pos:start="151:13" pos:end="151:19">case <expr pos:start="151:18" pos:end="151:18"><literal type="number" pos:start="151:18" pos:end="151:18">1</literal></expr>:</case>

		<expr_stmt pos:start="153:17" pos:end="153:41"><expr pos:start="153:17" pos:end="153:40"><name pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:19">env</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:25">cp15</name><operator pos:start="153:26" pos:end="153:26">.</operator><name pos:start="153:27" pos:end="153:34">c2_base1</name></name> <operator pos:start="153:36" pos:end="153:36">=</operator> <name pos:start="153:38" pos:end="153:40">val</name></expr>;</expr_stmt>

		<break pos:start="155:17" pos:end="155:22">break;</break>

	    <case pos:start="157:13" pos:end="157:19">case <expr pos:start="157:18" pos:end="157:18"><literal type="number" pos:start="157:18" pos:end="157:18">2</literal></expr>:</case>

                <expr_stmt pos:start="159:17" pos:end="159:25"><expr pos:start="159:17" pos:end="159:24"><name pos:start="159:17" pos:end="159:19">val</name> <operator pos:start="159:21" pos:end="159:22">&amp;=</operator> <literal type="number" pos:start="159:24" pos:end="159:24">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:43"><expr pos:start="161:17" pos:end="161:42"><name pos:start="161:17" pos:end="161:36"><name pos:start="161:17" pos:end="161:19">env</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:25">cp15</name><operator pos:start="161:26" pos:end="161:26">.</operator><name pos:start="161:27" pos:end="161:36">c2_control</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <name pos:start="161:40" pos:end="161:42">val</name></expr>;</expr_stmt>

		<expr_stmt pos:start="163:17" pos:end="163:70"><expr pos:start="163:17" pos:end="163:69"><name pos:start="163:17" pos:end="163:33"><name pos:start="163:17" pos:end="163:19">env</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:25">cp15</name><operator pos:start="163:26" pos:end="163:26">.</operator><name pos:start="163:27" pos:end="163:33">c2_mask</name></name> <operator pos:start="163:35" pos:end="163:35">=</operator> <operator pos:start="163:37" pos:end="163:37">~</operator><operator pos:start="163:38" pos:end="163:38">(</operator><operator pos:start="163:39" pos:end="163:39">(</operator><operator pos:start="163:40" pos:end="163:40">(</operator><name pos:start="163:41" pos:end="163:48">uint32_t</name><operator pos:start="163:49" pos:end="163:49">)</operator><literal type="number" pos:start="163:50" pos:end="163:60">0xffffffffu</literal><operator pos:start="163:61" pos:end="163:61">)</operator> <operator pos:start="163:63" pos:end="163:64">&gt;&gt;</operator> <name pos:start="163:66" pos:end="163:68">val</name><operator pos:start="163:69" pos:end="163:69">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:69"><expr pos:start="165:17" pos:end="165:68"><name pos:start="165:17" pos:end="165:38"><name pos:start="165:17" pos:end="165:19">env</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:25">cp15</name><operator pos:start="165:26" pos:end="165:26">.</operator><name pos:start="165:27" pos:end="165:38">c2_base_mask</name></name> <operator pos:start="165:40" pos:end="165:40">=</operator> <operator pos:start="165:42" pos:end="165:42">~</operator><operator pos:start="165:43" pos:end="165:43">(</operator><operator pos:start="165:44" pos:end="165:44">(</operator><name pos:start="165:45" pos:end="165:52">uint32_t</name><operator pos:start="165:53" pos:end="165:53">)</operator><literal type="number" pos:start="165:54" pos:end="165:60">0x3fffu</literal> <operator pos:start="165:62" pos:end="165:63">&gt;&gt;</operator> <name pos:start="165:65" pos:end="165:67">val</name><operator pos:start="165:68" pos:end="165:68">)</operator></expr>;</expr_stmt>

		<break pos:start="167:17" pos:end="167:22">break;</break>

	    <default pos:start="169:13" pos:end="169:20">default:</default>

		<goto pos:start="171:17" pos:end="171:29">goto <name pos:start="171:22" pos:end="171:28">bad_reg</name>;</goto>

	    </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    <case pos:start="179:5" pos:end="179:11">case <expr pos:start="179:10" pos:end="179:10"><literal type="number" pos:start="179:10" pos:end="179:10">3</literal></expr>:</case> <comment type="block" pos:start="179:13" pos:end="179:72">/* MMU Domain access control / MPU write buffer control.  */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:27"><expr pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:20"><name pos:start="181:9" pos:end="181:11">env</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:17">cp15</name><operator pos:start="181:18" pos:end="181:18">.</operator><name pos:start="181:19" pos:end="181:20">c3</name></name> <operator pos:start="181:22" pos:end="181:22">=</operator> <name pos:start="181:24" pos:end="181:26">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:26"><expr pos:start="183:9" pos:end="183:25"><call pos:start="183:9" pos:end="183:25"><name pos:start="183:9" pos:end="183:17">tlb_flush</name><argument_list pos:start="183:18" pos:end="183:25">(<argument pos:start="183:19" pos:end="183:21"><expr pos:start="183:19" pos:end="183:21"><name pos:start="183:19" pos:end="183:21">env</name></expr></argument>, <argument pos:start="183:24" pos:end="183:24"><expr pos:start="183:24" pos:end="183:24"><literal type="number" pos:start="183:24" pos:end="183:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="183:28" pos:end="183:71">/* Flush TLB as domain not tracked in TLB */</comment>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:11">case <expr pos:start="187:10" pos:end="187:10"><literal type="number" pos:start="187:10" pos:end="187:10">4</literal></expr>:</case> <comment type="block" pos:start="187:13" pos:end="187:28">/* Reserved.  */</comment>

        <goto pos:start="189:9" pos:end="189:21">goto <name pos:start="189:14" pos:end="189:20">bad_reg</name>;</goto>

    <case pos:start="191:5" pos:end="191:11">case <expr pos:start="191:10" pos:end="191:10"><literal type="number" pos:start="191:10" pos:end="191:10">5</literal></expr>:</case> <comment type="block" pos:start="191:13" pos:end="191:60">/* MMU Fault status / MPU access permission.  */</comment>

        <if_stmt pos:start="193:9" pos:end="195:20"><if pos:start="193:9" pos:end="195:20">if <condition pos:start="193:12" pos:end="193:49">(<expr pos:start="193:13" pos:end="193:48"><call pos:start="193:13" pos:end="193:48"><name pos:start="193:13" pos:end="193:23">arm_feature</name><argument_list pos:start="193:24" pos:end="193:48">(<argument pos:start="193:25" pos:end="193:27"><expr pos:start="193:25" pos:end="193:27"><name pos:start="193:25" pos:end="193:27">env</name></expr></argument>, <argument pos:start="193:30" pos:end="193:47"><expr pos:start="193:30" pos:end="193:47"><name pos:start="193:30" pos:end="193:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:20"><block_content pos:start="195:13" pos:end="195:20">

            <expr_stmt pos:start="195:13" pos:end="195:20"><expr pos:start="195:13" pos:end="195:19"><name pos:start="195:13" pos:end="195:15">op2</name> <operator pos:start="195:17" pos:end="195:17">=</operator> <literal type="number" pos:start="195:19" pos:end="195:19">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="197:9" pos:end="243:9">switch <condition pos:start="197:16" pos:end="197:20">(<expr pos:start="197:17" pos:end="197:19"><name pos:start="197:17" pos:end="197:19">op2</name></expr>)</condition> <block pos:start="197:22" pos:end="243:9">{<block_content pos:start="199:9" pos:end="241:25">

        <case pos:start="199:9" pos:end="199:15">case <expr pos:start="199:14" pos:end="199:14"><literal type="number" pos:start="199:14" pos:end="199:14">0</literal></expr>:</case>

            <if_stmt pos:start="201:13" pos:end="203:48"><if pos:start="201:13" pos:end="203:48">if <condition pos:start="201:16" pos:end="201:50">(<expr pos:start="201:17" pos:end="201:49"><call pos:start="201:17" pos:end="201:49"><name pos:start="201:17" pos:end="201:27">arm_feature</name><argument_list pos:start="201:28" pos:end="201:49">(<argument pos:start="201:29" pos:end="201:31"><expr pos:start="201:29" pos:end="201:31"><name pos:start="201:29" pos:end="201:31">env</name></expr></argument>, <argument pos:start="201:34" pos:end="201:48"><expr pos:start="201:34" pos:end="201:48"><name pos:start="201:34" pos:end="201:48">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:48"><block_content pos:start="203:17" pos:end="203:48">

                <expr_stmt pos:start="203:17" pos:end="203:48"><expr pos:start="203:17" pos:end="203:47"><name pos:start="203:17" pos:end="203:19">val</name> <operator pos:start="203:21" pos:end="203:21">=</operator> <call pos:start="203:23" pos:end="203:47"><name pos:start="203:23" pos:end="203:42">extended_mpu_ap_bits</name><argument_list pos:start="203:43" pos:end="203:47">(<argument pos:start="203:44" pos:end="203:46"><expr pos:start="203:44" pos:end="203:46"><name pos:start="203:44" pos:end="203:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:36"><expr pos:start="205:13" pos:end="205:35"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:15">env</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:21">cp15</name><operator pos:start="205:22" pos:end="205:22">.</operator><name pos:start="205:23" pos:end="205:29">c5_data</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <name pos:start="205:33" pos:end="205:35">val</name></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>

        <case pos:start="209:9" pos:end="209:15">case <expr pos:start="209:14" pos:end="209:14"><literal type="number" pos:start="209:14" pos:end="209:14">1</literal></expr>:</case>

            <if_stmt pos:start="211:13" pos:end="213:48"><if pos:start="211:13" pos:end="213:48">if <condition pos:start="211:16" pos:end="211:50">(<expr pos:start="211:17" pos:end="211:49"><call pos:start="211:17" pos:end="211:49"><name pos:start="211:17" pos:end="211:27">arm_feature</name><argument_list pos:start="211:28" pos:end="211:49">(<argument pos:start="211:29" pos:end="211:31"><expr pos:start="211:29" pos:end="211:31"><name pos:start="211:29" pos:end="211:31">env</name></expr></argument>, <argument pos:start="211:34" pos:end="211:48"><expr pos:start="211:34" pos:end="211:48"><name pos:start="211:34" pos:end="211:48">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:48"><block_content pos:start="213:17" pos:end="213:48">

                <expr_stmt pos:start="213:17" pos:end="213:48"><expr pos:start="213:17" pos:end="213:47"><name pos:start="213:17" pos:end="213:19">val</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <call pos:start="213:23" pos:end="213:47"><name pos:start="213:23" pos:end="213:42">extended_mpu_ap_bits</name><argument_list pos:start="213:43" pos:end="213:47">(<argument pos:start="213:44" pos:end="213:46"><expr pos:start="213:44" pos:end="213:46"><name pos:start="213:44" pos:end="213:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:36"><expr pos:start="215:13" pos:end="215:35"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:15">env</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:21">cp15</name><operator pos:start="215:22" pos:end="215:22">.</operator><name pos:start="215:23" pos:end="215:29">c5_insn</name></name> <operator pos:start="215:31" pos:end="215:31">=</operator> <name pos:start="215:33" pos:end="215:35">val</name></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:15">case <expr pos:start="219:14" pos:end="219:14"><literal type="number" pos:start="219:14" pos:end="219:14">2</literal></expr>:</case>

            <if_stmt pos:start="221:13" pos:end="223:29"><if pos:start="221:13" pos:end="223:29">if <condition pos:start="221:16" pos:end="221:51">(<expr pos:start="221:17" pos:end="221:50"><operator pos:start="221:17" pos:end="221:17">!</operator><call pos:start="221:18" pos:end="221:50"><name pos:start="221:18" pos:end="221:28">arm_feature</name><argument_list pos:start="221:29" pos:end="221:50">(<argument pos:start="221:30" pos:end="221:32"><expr pos:start="221:30" pos:end="221:32"><name pos:start="221:30" pos:end="221:32">env</name></expr></argument>, <argument pos:start="221:35" pos:end="221:49"><expr pos:start="221:35" pos:end="221:49"><name pos:start="221:35" pos:end="221:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:29"><block_content pos:start="223:17" pos:end="223:29">

                <goto pos:start="223:17" pos:end="223:29">goto <name pos:start="223:22" pos:end="223:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:36"><expr pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:15">env</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:21">cp15</name><operator pos:start="225:22" pos:end="225:22">.</operator><name pos:start="225:23" pos:end="225:29">c5_data</name></name> <operator pos:start="225:31" pos:end="225:31">=</operator> <name pos:start="225:33" pos:end="225:35">val</name></expr>;</expr_stmt>

            <break pos:start="227:13" pos:end="227:18">break;</break>

        <case pos:start="229:9" pos:end="229:15">case <expr pos:start="229:14" pos:end="229:14"><literal type="number" pos:start="229:14" pos:end="229:14">3</literal></expr>:</case>

            <if_stmt pos:start="231:13" pos:end="233:29"><if pos:start="231:13" pos:end="233:29">if <condition pos:start="231:16" pos:end="231:51">(<expr pos:start="231:17" pos:end="231:50"><operator pos:start="231:17" pos:end="231:17">!</operator><call pos:start="231:18" pos:end="231:50"><name pos:start="231:18" pos:end="231:28">arm_feature</name><argument_list pos:start="231:29" pos:end="231:50">(<argument pos:start="231:30" pos:end="231:32"><expr pos:start="231:30" pos:end="231:32"><name pos:start="231:30" pos:end="231:32">env</name></expr></argument>, <argument pos:start="231:35" pos:end="231:49"><expr pos:start="231:35" pos:end="231:49"><name pos:start="231:35" pos:end="231:49">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="233:17" pos:end="233:29"><block_content pos:start="233:17" pos:end="233:29">

                <goto pos:start="233:17" pos:end="233:29">goto <name pos:start="233:22" pos:end="233:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:36"><expr pos:start="235:13" pos:end="235:35"><name pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:15">env</name><operator pos:start="235:16" pos:end="235:17">-&gt;</operator><name pos:start="235:18" pos:end="235:21">cp15</name><operator pos:start="235:22" pos:end="235:22">.</operator><name pos:start="235:23" pos:end="235:29">c5_insn</name></name> <operator pos:start="235:31" pos:end="235:31">=</operator> <name pos:start="235:33" pos:end="235:35">val</name></expr>;</expr_stmt>

            <break pos:start="237:13" pos:end="237:18">break;</break>

        <default pos:start="239:9" pos:end="239:16">default:</default>

            <goto pos:start="241:13" pos:end="241:25">goto <name pos:start="241:18" pos:end="241:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    <case pos:start="247:5" pos:end="247:11">case <expr pos:start="247:10" pos:end="247:10"><literal type="number" pos:start="247:10" pos:end="247:10">6</literal></expr>:</case> <comment type="block" pos:start="247:13" pos:end="247:53">/* MMU Fault address / MPU base/size.  */</comment>

        <if_stmt pos:start="249:9" pos:end="285:9"><if pos:start="249:9" pos:end="257:9">if <condition pos:start="249:12" pos:end="249:46">(<expr pos:start="249:13" pos:end="249:45"><call pos:start="249:13" pos:end="249:45"><name pos:start="249:13" pos:end="249:23">arm_feature</name><argument_list pos:start="249:24" pos:end="249:45">(<argument pos:start="249:25" pos:end="249:27"><expr pos:start="249:25" pos:end="249:27"><name pos:start="249:25" pos:end="249:27">env</name></expr></argument>, <argument pos:start="249:30" pos:end="249:44"><expr pos:start="249:30" pos:end="249:44"><name pos:start="249:30" pos:end="249:44">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="249:48" pos:end="257:9">{<block_content pos:start="251:13" pos:end="255:43">

            <if_stmt pos:start="251:13" pos:end="253:29"><if pos:start="251:13" pos:end="253:29">if <condition pos:start="251:16" pos:end="251:25">(<expr pos:start="251:17" pos:end="251:24"><name pos:start="251:17" pos:end="251:19">crm</name> <operator pos:start="251:21" pos:end="251:22">&gt;=</operator> <literal type="number" pos:start="251:24" pos:end="251:24">8</literal></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:29"><block_content pos:start="253:17" pos:end="253:29">

                <goto pos:start="253:17" pos:end="253:29">goto <name pos:start="253:22" pos:end="253:28">bad_reg</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:43"><expr pos:start="255:13" pos:end="255:42"><name pos:start="255:13" pos:end="255:36"><name pos:start="255:13" pos:end="255:15">env</name><operator pos:start="255:16" pos:end="255:17">-&gt;</operator><name pos:start="255:18" pos:end="255:21">cp15</name><operator pos:start="255:22" pos:end="255:22">.</operator><name pos:start="255:23" pos:end="255:31">c6_region</name><index pos:start="255:32" pos:end="255:36">[<expr pos:start="255:33" pos:end="255:35"><name pos:start="255:33" pos:end="255:35">crm</name></expr>]</index></name> <operator pos:start="255:38" pos:end="255:38">=</operator> <name pos:start="255:40" pos:end="255:42">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="257:11" pos:end="285:9">else <block pos:start="257:16" pos:end="285:9">{<block_content pos:start="259:13" pos:end="283:13">

            <if_stmt pos:start="259:13" pos:end="261:24"><if pos:start="259:13" pos:end="261:24">if <condition pos:start="259:16" pos:end="259:53">(<expr pos:start="259:17" pos:end="259:52"><call pos:start="259:17" pos:end="259:52"><name pos:start="259:17" pos:end="259:27">arm_feature</name><argument_list pos:start="259:28" pos:end="259:52">(<argument pos:start="259:29" pos:end="259:31"><expr pos:start="259:29" pos:end="259:31"><name pos:start="259:29" pos:end="259:31">env</name></expr></argument>, <argument pos:start="259:34" pos:end="259:51"><expr pos:start="259:34" pos:end="259:51"><name pos:start="259:34" pos:end="259:51">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:24"><block_content pos:start="261:17" pos:end="261:24">

                <expr_stmt pos:start="261:17" pos:end="261:24"><expr pos:start="261:17" pos:end="261:23"><name pos:start="261:17" pos:end="261:19">op2</name> <operator pos:start="261:21" pos:end="261:21">=</operator> <literal type="number" pos:start="261:23" pos:end="261:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <switch pos:start="263:13" pos:end="283:13">switch <condition pos:start="263:20" pos:end="263:24">(<expr pos:start="263:21" pos:end="263:23"><name pos:start="263:21" pos:end="263:23">op2</name></expr>)</condition> <block pos:start="263:26" pos:end="283:13">{<block_content pos:start="265:13" pos:end="281:29">

            <case pos:start="265:13" pos:end="265:19">case <expr pos:start="265:18" pos:end="265:18"><literal type="number" pos:start="265:18" pos:end="265:18">0</literal></expr>:</case>

                <expr_stmt pos:start="267:17" pos:end="267:40"><expr pos:start="267:17" pos:end="267:39"><name pos:start="267:17" pos:end="267:33"><name pos:start="267:17" pos:end="267:19">env</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:25">cp15</name><operator pos:start="267:26" pos:end="267:26">.</operator><name pos:start="267:27" pos:end="267:33">c6_data</name></name> <operator pos:start="267:35" pos:end="267:35">=</operator> <name pos:start="267:37" pos:end="267:39">val</name></expr>;</expr_stmt>

                <break pos:start="269:17" pos:end="269:22">break;</break>

            <case pos:start="271:13" pos:end="271:19">case <expr pos:start="271:18" pos:end="271:18"><literal type="number" pos:start="271:18" pos:end="271:18">1</literal></expr>:</case> <comment type="block" pos:start="271:21" pos:end="271:51">/* ??? This is WFAR on armv6 */</comment>

            <case pos:start="273:13" pos:end="273:19">case <expr pos:start="273:18" pos:end="273:18"><literal type="number" pos:start="273:18" pos:end="273:18">2</literal></expr>:</case>

                <expr_stmt pos:start="275:17" pos:end="275:40"><expr pos:start="275:17" pos:end="275:39"><name pos:start="275:17" pos:end="275:33"><name pos:start="275:17" pos:end="275:19">env</name><operator pos:start="275:20" pos:end="275:21">-&gt;</operator><name pos:start="275:22" pos:end="275:25">cp15</name><operator pos:start="275:26" pos:end="275:26">.</operator><name pos:start="275:27" pos:end="275:33">c6_insn</name></name> <operator pos:start="275:35" pos:end="275:35">=</operator> <name pos:start="275:37" pos:end="275:39">val</name></expr>;</expr_stmt>

                <break pos:start="277:17" pos:end="277:22">break;</break>

            <default pos:start="279:13" pos:end="279:20">default:</default>

                <goto pos:start="281:17" pos:end="281:29">goto <name pos:start="281:22" pos:end="281:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="287:9" pos:end="287:14">break;</break>

    <case pos:start="289:5" pos:end="289:11">case <expr pos:start="289:10" pos:end="289:10"><literal type="number" pos:start="289:10" pos:end="289:10">7</literal></expr>:</case> <comment type="block" pos:start="289:13" pos:end="289:33">/* Cache control.  */</comment>

        <expr_stmt pos:start="291:9" pos:end="291:36"><expr pos:start="291:9" pos:end="291:35"><name pos:start="291:9" pos:end="291:27"><name pos:start="291:9" pos:end="291:11">env</name><operator pos:start="291:12" pos:end="291:13">-&gt;</operator><name pos:start="291:14" pos:end="291:17">cp15</name><operator pos:start="291:18" pos:end="291:18">.</operator><name pos:start="291:19" pos:end="291:27">c15_i_max</name></name> <operator pos:start="291:29" pos:end="291:29">=</operator> <literal type="number" pos:start="291:31" pos:end="291:35">0x000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:36"><expr pos:start="293:9" pos:end="293:35"><name pos:start="293:9" pos:end="293:27"><name pos:start="293:9" pos:end="293:11">env</name><operator pos:start="293:12" pos:end="293:13">-&gt;</operator><name pos:start="293:14" pos:end="293:17">cp15</name><operator pos:start="293:18" pos:end="293:18">.</operator><name pos:start="293:19" pos:end="293:27">c15_i_min</name></name> <operator pos:start="293:29" pos:end="293:29">=</operator> <literal type="number" pos:start="293:31" pos:end="293:35">0xff0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="299:9"><if pos:start="295:9" pos:end="299:9">if <condition pos:start="295:12" pos:end="295:21">(<expr pos:start="295:13" pos:end="295:20"><name pos:start="295:13" pos:end="295:15">op1</name> <operator pos:start="295:17" pos:end="295:18">!=</operator> <literal type="number" pos:start="295:20" pos:end="295:20">0</literal></expr>)</condition> <block pos:start="295:23" pos:end="299:9">{<block_content pos:start="297:13" pos:end="297:25">

            <goto pos:start="297:13" pos:end="297:25">goto <name pos:start="297:18" pos:end="297:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="301:9" pos:end="301:68">/* No cache, so nothing to do except VA-&gt;PA translations. */</comment>

        <if_stmt pos:start="303:9" pos:end="379:9"><if pos:start="303:9" pos:end="379:9">if <condition pos:start="303:12" pos:end="303:47">(<expr pos:start="303:13" pos:end="303:46"><call pos:start="303:13" pos:end="303:46"><name pos:start="303:13" pos:end="303:23">arm_feature</name><argument_list pos:start="303:24" pos:end="303:46">(<argument pos:start="303:25" pos:end="303:27"><expr pos:start="303:25" pos:end="303:27"><name pos:start="303:25" pos:end="303:27">env</name></expr></argument>, <argument pos:start="303:30" pos:end="303:45"><expr pos:start="303:30" pos:end="303:45"><name pos:start="303:30" pos:end="303:45">ARM_FEATURE_VAPA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="303:49" pos:end="379:9">{<block_content pos:start="305:13" pos:end="377:13">

            <switch pos:start="305:13" pos:end="377:13">switch <condition pos:start="305:20" pos:end="305:24">(<expr pos:start="305:21" pos:end="305:23"><name pos:start="305:21" pos:end="305:23">crm</name></expr>)</condition> <block pos:start="305:26" pos:end="377:13">{<block_content pos:start="307:13" pos:end="375:13">

            <case pos:start="307:13" pos:end="307:19">case <expr pos:start="307:18" pos:end="307:18"><literal type="number" pos:start="307:18" pos:end="307:18">4</literal></expr>:</case>

                <if_stmt pos:start="309:17" pos:end="317:17"><if pos:start="309:17" pos:end="313:17">if <condition pos:start="309:20" pos:end="309:53">(<expr pos:start="309:21" pos:end="309:52"><call pos:start="309:21" pos:end="309:52"><name pos:start="309:21" pos:end="309:31">arm_feature</name><argument_list pos:start="309:32" pos:end="309:52">(<argument pos:start="309:33" pos:end="309:35"><expr pos:start="309:33" pos:end="309:35"><name pos:start="309:33" pos:end="309:35">env</name></expr></argument>, <argument pos:start="309:38" pos:end="309:51"><expr pos:start="309:38" pos:end="309:51"><name pos:start="309:38" pos:end="309:51">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="309:55" pos:end="313:17">{<block_content pos:start="311:21" pos:end="311:56">

                    <expr_stmt pos:start="311:21" pos:end="311:56"><expr pos:start="311:21" pos:end="311:55"><name pos:start="311:21" pos:end="311:36"><name pos:start="311:21" pos:end="311:23">env</name><operator pos:start="311:24" pos:end="311:25">-&gt;</operator><name pos:start="311:26" pos:end="311:29">cp15</name><operator pos:start="311:30" pos:end="311:30">.</operator><name pos:start="311:31" pos:end="311:36">c7_par</name></name> <operator pos:start="311:38" pos:end="311:38">=</operator> <name pos:start="311:40" pos:end="311:42">val</name> <operator pos:start="311:44" pos:end="311:44">&amp;</operator> <literal type="number" pos:start="311:46" pos:end="311:55">0xfffff6ff</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="313:19" pos:end="317:17">else <block pos:start="313:24" pos:end="317:17">{<block_content pos:start="315:21" pos:end="315:56">

                    <expr_stmt pos:start="315:21" pos:end="315:56"><expr pos:start="315:21" pos:end="315:55"><name pos:start="315:21" pos:end="315:36"><name pos:start="315:21" pos:end="315:23">env</name><operator pos:start="315:24" pos:end="315:25">-&gt;</operator><name pos:start="315:26" pos:end="315:29">cp15</name><operator pos:start="315:30" pos:end="315:30">.</operator><name pos:start="315:31" pos:end="315:36">c7_par</name></name> <operator pos:start="315:38" pos:end="315:38">=</operator> <name pos:start="315:40" pos:end="315:42">val</name> <operator pos:start="315:44" pos:end="315:44">&amp;</operator> <literal type="number" pos:start="315:46" pos:end="315:55">0xfffff1ff</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="319:17" pos:end="319:22">break;</break>

            <case pos:start="321:13" pos:end="321:19">case <expr pos:start="321:18" pos:end="321:18"><literal type="number" pos:start="321:18" pos:end="321:18">8</literal></expr>:</case> <block pos:start="321:21" pos:end="375:13">{<block_content pos:start="323:17" pos:end="373:22">

                <decl_stmt pos:start="323:17" pos:end="323:35"><decl pos:start="323:17" pos:end="323:34"><type pos:start="323:17" pos:end="323:24"><name pos:start="323:17" pos:end="323:24">uint32_t</name></type> <name pos:start="323:26" pos:end="323:34">phys_addr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="325:17" pos:end="325:39"><decl pos:start="325:17" pos:end="325:38"><type pos:start="325:17" pos:end="325:28"><name pos:start="325:17" pos:end="325:28">target_ulong</name></type> <name pos:start="325:30" pos:end="325:38">page_size</name></decl>;</decl_stmt>

                <decl_stmt pos:start="327:17" pos:end="327:25"><decl pos:start="327:17" pos:end="327:24"><type pos:start="327:17" pos:end="327:19"><name pos:start="327:17" pos:end="327:19">int</name></type> <name pos:start="327:21" pos:end="327:24">prot</name></decl>;</decl_stmt>

                <decl_stmt pos:start="329:17" pos:end="329:43"><decl pos:start="329:17" pos:end="329:23"><type pos:start="329:17" pos:end="329:19"><name pos:start="329:17" pos:end="329:19">int</name></type> <name pos:start="329:21" pos:end="329:23">ret</name></decl>, <decl pos:start="329:26" pos:end="329:42"><type ref="prev" pos:start="329:17" pos:end="329:19"/><name pos:start="329:26" pos:end="329:32">is_user</name> <init pos:start="329:34" pos:end="329:42">= <expr pos:start="329:36" pos:end="329:42"><name pos:start="329:36" pos:end="329:38">op2</name> <operator pos:start="329:40" pos:end="329:40">&amp;</operator> <literal type="number" pos:start="329:42" pos:end="329:42">2</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="331:17" pos:end="331:42"><decl pos:start="331:17" pos:end="331:41"><type pos:start="331:17" pos:end="331:19"><name pos:start="331:17" pos:end="331:19">int</name></type> <name pos:start="331:21" pos:end="331:31">access_type</name> <init pos:start="331:33" pos:end="331:41">= <expr pos:start="331:35" pos:end="331:41"><name pos:start="331:35" pos:end="331:37">op2</name> <operator pos:start="331:39" pos:end="331:39">&amp;</operator> <literal type="number" pos:start="331:41" pos:end="331:41">1</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="335:17" pos:end="341:17"><if pos:start="335:17" pos:end="341:17">if <condition pos:start="335:20" pos:end="335:28">(<expr pos:start="335:21" pos:end="335:27"><name pos:start="335:21" pos:end="335:23">op2</name> <operator pos:start="335:25" pos:end="335:25">&amp;</operator> <literal type="number" pos:start="335:27" pos:end="335:27">4</literal></expr>)</condition> <block pos:start="335:30" pos:end="341:17">{<block_content pos:start="339:21" pos:end="339:33">

                    <comment type="block" pos:start="337:21" pos:end="337:72">/* Other states are only available with TrustZone */</comment>

                    <goto pos:start="339:21" pos:end="339:33">goto <name pos:start="339:26" pos:end="339:32">bad_reg</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="343:17" pos:end="345:67"><expr pos:start="343:17" pos:end="345:66"><name pos:start="343:17" pos:end="343:19">ret</name> <operator pos:start="343:21" pos:end="343:21">=</operator> <call pos:start="343:23" pos:end="345:66"><name pos:start="343:23" pos:end="343:35">get_phys_addr</name><argument_list pos:start="343:36" pos:end="345:66">(<argument pos:start="343:37" pos:end="343:39"><expr pos:start="343:37" pos:end="343:39"><name pos:start="343:37" pos:end="343:39">env</name></expr></argument>, <argument pos:start="343:42" pos:end="343:44"><expr pos:start="343:42" pos:end="343:44"><name pos:start="343:42" pos:end="343:44">val</name></expr></argument>, <argument pos:start="343:47" pos:end="343:57"><expr pos:start="343:47" pos:end="343:57"><name pos:start="343:47" pos:end="343:57">access_type</name></expr></argument>, <argument pos:start="343:60" pos:end="343:66"><expr pos:start="343:60" pos:end="343:66"><name pos:start="343:60" pos:end="343:66">is_user</name></expr></argument>,

                                    <argument pos:start="345:37" pos:end="345:46"><expr pos:start="345:37" pos:end="345:46"><operator pos:start="345:37" pos:end="345:37">&amp;</operator><name pos:start="345:38" pos:end="345:46">phys_addr</name></expr></argument>, <argument pos:start="345:49" pos:end="345:53"><expr pos:start="345:49" pos:end="345:53"><operator pos:start="345:49" pos:end="345:49">&amp;</operator><name pos:start="345:50" pos:end="345:53">prot</name></expr></argument>, <argument pos:start="345:56" pos:end="345:65"><expr pos:start="345:56" pos:end="345:65"><operator pos:start="345:56" pos:end="345:56">&amp;</operator><name pos:start="345:57" pos:end="345:65">page_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="347:17" pos:end="371:17"><if pos:start="347:17" pos:end="363:17">if <condition pos:start="347:20" pos:end="347:29">(<expr pos:start="347:21" pos:end="347:28"><name pos:start="347:21" pos:end="347:23">ret</name> <operator pos:start="347:25" pos:end="347:26">==</operator> <literal type="number" pos:start="347:28" pos:end="347:28">0</literal></expr>)</condition> <block pos:start="347:31" pos:end="363:17">{<block_content pos:start="351:21" pos:end="361:21">

                    <comment type="block" pos:start="349:21" pos:end="349:69">/* We do not set any attribute bits in the PAR */</comment>

                    <if_stmt pos:start="351:21" pos:end="361:21"><if pos:start="351:21" pos:end="357:21">if <condition pos:start="351:24" pos:end="353:60">(<expr pos:start="351:25" pos:end="353:59"><name pos:start="351:25" pos:end="351:33">page_size</name> <operator pos:start="351:35" pos:end="351:36">==</operator> <operator pos:start="351:38" pos:end="351:38">(</operator><literal type="number" pos:start="351:39" pos:end="351:39">1</literal> <operator pos:start="351:41" pos:end="351:42">&lt;&lt;</operator> <literal type="number" pos:start="351:44" pos:end="351:45">24</literal><operator pos:start="351:46" pos:end="351:46">)</operator>

                        <operator pos:start="353:25" pos:end="353:26">&amp;&amp;</operator> <call pos:start="353:28" pos:end="353:59"><name pos:start="353:28" pos:end="353:38">arm_feature</name><argument_list pos:start="353:39" pos:end="353:59">(<argument pos:start="353:40" pos:end="353:42"><expr pos:start="353:40" pos:end="353:42"><name pos:start="353:40" pos:end="353:42">env</name></expr></argument>, <argument pos:start="353:45" pos:end="353:58"><expr pos:start="353:45" pos:end="353:58"><name pos:start="353:45" pos:end="353:58">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="353:62" pos:end="357:21">{<block_content pos:start="355:25" pos:end="355:77">

                        <expr_stmt pos:start="355:25" pos:end="355:77"><expr pos:start="355:25" pos:end="355:76"><name pos:start="355:25" pos:end="355:40"><name pos:start="355:25" pos:end="355:27">env</name><operator pos:start="355:28" pos:end="355:29">-&gt;</operator><name pos:start="355:30" pos:end="355:33">cp15</name><operator pos:start="355:34" pos:end="355:34">.</operator><name pos:start="355:35" pos:end="355:40">c7_par</name></name> <operator pos:start="355:42" pos:end="355:42">=</operator> <operator pos:start="355:44" pos:end="355:44">(</operator><name pos:start="355:45" pos:end="355:53">phys_addr</name> <operator pos:start="355:55" pos:end="355:55">&amp;</operator> <literal type="number" pos:start="355:57" pos:end="355:66">0xff000000</literal><operator pos:start="355:67" pos:end="355:67">)</operator> <operator pos:start="355:69" pos:end="355:69">|</operator> <literal type="number" pos:start="355:71" pos:end="355:71">1</literal> <operator pos:start="355:73" pos:end="355:74">&lt;&lt;</operator> <literal type="number" pos:start="355:76" pos:end="355:76">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="357:23" pos:end="361:21">else <block pos:start="357:28" pos:end="361:21">{<block_content pos:start="359:25" pos:end="359:66">

                        <expr_stmt pos:start="359:25" pos:end="359:66"><expr pos:start="359:25" pos:end="359:65"><name pos:start="359:25" pos:end="359:40"><name pos:start="359:25" pos:end="359:27">env</name><operator pos:start="359:28" pos:end="359:29">-&gt;</operator><name pos:start="359:30" pos:end="359:33">cp15</name><operator pos:start="359:34" pos:end="359:34">.</operator><name pos:start="359:35" pos:end="359:40">c7_par</name></name> <operator pos:start="359:42" pos:end="359:42">=</operator> <name pos:start="359:44" pos:end="359:52">phys_addr</name> <operator pos:start="359:54" pos:end="359:54">&amp;</operator> <literal type="number" pos:start="359:56" pos:end="359:65">0xfffff000</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="363:19" pos:end="371:17">else <block pos:start="363:24" pos:end="371:17">{<block_content pos:start="365:21" pos:end="369:62">

                    <expr_stmt pos:start="365:21" pos:end="369:62"><expr pos:start="365:21" pos:end="369:61"><name pos:start="365:21" pos:end="365:36"><name pos:start="365:21" pos:end="365:23">env</name><operator pos:start="365:24" pos:end="365:25">-&gt;</operator><name pos:start="365:26" pos:end="365:29">cp15</name><operator pos:start="365:30" pos:end="365:30">.</operator><name pos:start="365:31" pos:end="365:36">c7_par</name></name> <operator pos:start="365:38" pos:end="365:38">=</operator> <operator pos:start="365:40" pos:end="365:40">(</operator><operator pos:start="365:41" pos:end="365:41">(</operator><name pos:start="365:42" pos:end="365:44">ret</name> <operator pos:start="365:46" pos:end="365:46">&amp;</operator> <operator pos:start="365:48" pos:end="365:48">(</operator><literal type="number" pos:start="365:49" pos:end="365:50">10</literal> <operator pos:start="365:52" pos:end="365:53">&lt;&lt;</operator> <literal type="number" pos:start="365:55" pos:end="365:55">1</literal><operator pos:start="365:56" pos:end="365:56">)</operator><operator pos:start="365:57" pos:end="365:57">)</operator> <operator pos:start="365:59" pos:end="365:60">&gt;&gt;</operator> <literal type="number" pos:start="365:62" pos:end="365:62">5</literal><operator pos:start="365:63" pos:end="365:63">)</operator> <operator pos:start="365:65" pos:end="365:65">|</operator>

                                       <operator pos:start="367:40" pos:end="367:40">(</operator><operator pos:start="367:41" pos:end="367:41">(</operator><name pos:start="367:42" pos:end="367:44">ret</name> <operator pos:start="367:46" pos:end="367:46">&amp;</operator> <operator pos:start="367:48" pos:end="367:48">(</operator><literal type="number" pos:start="367:49" pos:end="367:50">12</literal> <operator pos:start="367:52" pos:end="367:53">&lt;&lt;</operator> <literal type="number" pos:start="367:55" pos:end="367:55">1</literal><operator pos:start="367:56" pos:end="367:56">)</operator><operator pos:start="367:57" pos:end="367:57">)</operator> <operator pos:start="367:59" pos:end="367:60">&gt;&gt;</operator> <literal type="number" pos:start="367:62" pos:end="367:62">6</literal><operator pos:start="367:63" pos:end="367:63">)</operator> <operator pos:start="367:65" pos:end="367:65">|</operator>

                                       <operator pos:start="369:40" pos:end="369:40">(</operator><operator pos:start="369:41" pos:end="369:41">(</operator><name pos:start="369:42" pos:end="369:44">ret</name> <operator pos:start="369:46" pos:end="369:46">&amp;</operator> <literal type="number" pos:start="369:48" pos:end="369:50">0xf</literal><operator pos:start="369:51" pos:end="369:51">)</operator> <operator pos:start="369:53" pos:end="369:54">&lt;&lt;</operator> <literal type="number" pos:start="369:56" pos:end="369:56">1</literal><operator pos:start="369:57" pos:end="369:57">)</operator> <operator pos:start="369:59" pos:end="369:59">|</operator> <literal type="number" pos:start="369:61" pos:end="369:61">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <break pos:start="373:17" pos:end="373:22">break;</break>

            </block_content>}</block>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <break pos:start="381:9" pos:end="381:14">break;</break>

    <case pos:start="383:5" pos:end="383:11">case <expr pos:start="383:10" pos:end="383:10"><literal type="number" pos:start="383:10" pos:end="383:10">8</literal></expr>:</case> <comment type="block" pos:start="383:13" pos:end="383:35">/* MMU TLB control.  */</comment>

        <switch pos:start="385:9" pos:end="417:9">switch <condition pos:start="385:16" pos:end="385:20">(<expr pos:start="385:17" pos:end="385:19"><name pos:start="385:17" pos:end="385:19">op2</name></expr>)</condition> <block pos:start="385:22" pos:end="417:9">{<block_content pos:start="387:9" pos:end="415:25">

        <case pos:start="387:9" pos:end="387:15">case <expr pos:start="387:14" pos:end="387:14"><literal type="number" pos:start="387:14" pos:end="387:14">0</literal></expr>:</case> <comment type="block" pos:start="387:17" pos:end="387:38">/* Invalidate all.  */</comment>

            <expr_stmt pos:start="389:13" pos:end="389:30"><expr pos:start="389:13" pos:end="389:29"><call pos:start="389:13" pos:end="389:29"><name pos:start="389:13" pos:end="389:21">tlb_flush</name><argument_list pos:start="389:22" pos:end="389:29">(<argument pos:start="389:23" pos:end="389:25"><expr pos:start="389:23" pos:end="389:25"><name pos:start="389:23" pos:end="389:25">env</name></expr></argument>, <argument pos:start="389:28" pos:end="389:28"><expr pos:start="389:28" pos:end="389:28"><literal type="number" pos:start="389:28" pos:end="389:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:15">case <expr pos:start="393:14" pos:end="393:14"><literal type="number" pos:start="393:14" pos:end="393:14">1</literal></expr>:</case> <comment type="block" pos:start="393:17" pos:end="393:51">/* Invalidate single TLB entry.  */</comment>

            <expr_stmt pos:start="395:13" pos:end="395:56"><expr pos:start="395:13" pos:end="395:55"><call pos:start="395:13" pos:end="395:55"><name pos:start="395:13" pos:end="395:26">tlb_flush_page</name><argument_list pos:start="395:27" pos:end="395:55">(<argument pos:start="395:28" pos:end="395:30"><expr pos:start="395:28" pos:end="395:30"><name pos:start="395:28" pos:end="395:30">env</name></expr></argument>, <argument pos:start="395:33" pos:end="395:54"><expr pos:start="395:33" pos:end="395:54"><name pos:start="395:33" pos:end="395:35">val</name> <operator pos:start="395:37" pos:end="395:37">&amp;</operator> <name pos:start="395:39" pos:end="395:54">TARGET_PAGE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <case pos:start="399:9" pos:end="399:15">case <expr pos:start="399:14" pos:end="399:14"><literal type="number" pos:start="399:14" pos:end="399:14">2</literal></expr>:</case> <comment type="block" pos:start="399:17" pos:end="399:42">/* Invalidate on ASID.  */</comment>

            <expr_stmt pos:start="401:13" pos:end="401:37"><expr pos:start="401:13" pos:end="401:36"><call pos:start="401:13" pos:end="401:36"><name pos:start="401:13" pos:end="401:21">tlb_flush</name><argument_list pos:start="401:22" pos:end="401:36">(<argument pos:start="401:23" pos:end="401:25"><expr pos:start="401:23" pos:end="401:25"><name pos:start="401:23" pos:end="401:25">env</name></expr></argument>, <argument pos:start="401:28" pos:end="401:35"><expr pos:start="401:28" pos:end="401:35"><name pos:start="401:28" pos:end="401:30">val</name> <operator pos:start="401:32" pos:end="401:33">==</operator> <literal type="number" pos:start="401:35" pos:end="401:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="403:13" pos:end="403:18">break;</break>

        <case pos:start="405:9" pos:end="405:15">case <expr pos:start="405:14" pos:end="405:14"><literal type="number" pos:start="405:14" pos:end="405:14">3</literal></expr>:</case> <comment type="block" pos:start="405:17" pos:end="405:54">/* Invalidate single entry on MVA.  */</comment>

            <comment type="block" pos:start="407:13" pos:end="407:61">/* ??? This is like case 1, but ignores ASID.  */</comment>

            <expr_stmt pos:start="409:13" pos:end="409:30"><expr pos:start="409:13" pos:end="409:29"><call pos:start="409:13" pos:end="409:29"><name pos:start="409:13" pos:end="409:21">tlb_flush</name><argument_list pos:start="409:22" pos:end="409:29">(<argument pos:start="409:23" pos:end="409:25"><expr pos:start="409:23" pos:end="409:25"><name pos:start="409:23" pos:end="409:25">env</name></expr></argument>, <argument pos:start="409:28" pos:end="409:28"><expr pos:start="409:28" pos:end="409:28"><literal type="number" pos:start="409:28" pos:end="409:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="411:13" pos:end="411:18">break;</break>

        <default pos:start="413:9" pos:end="413:16">default:</default>

            <goto pos:start="415:13" pos:end="415:25">goto <name pos:start="415:18" pos:end="415:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="419:9" pos:end="419:14">break;</break>

    <case pos:start="421:5" pos:end="421:11">case <expr pos:start="421:10" pos:end="421:10"><literal type="number" pos:start="421:10" pos:end="421:10">9</literal></expr>:</case>

        <if_stmt pos:start="423:9" pos:end="425:18"><if pos:start="423:9" pos:end="425:18">if <condition pos:start="423:12" pos:end="423:49">(<expr pos:start="423:13" pos:end="423:48"><call pos:start="423:13" pos:end="423:48"><name pos:start="423:13" pos:end="423:23">arm_feature</name><argument_list pos:start="423:24" pos:end="423:48">(<argument pos:start="423:25" pos:end="423:27"><expr pos:start="423:25" pos:end="423:27"><name pos:start="423:25" pos:end="423:27">env</name></expr></argument>, <argument pos:start="423:30" pos:end="423:47"><expr pos:start="423:30" pos:end="423:47"><name pos:start="423:30" pos:end="423:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="425:13" pos:end="425:18"><block_content pos:start="425:13" pos:end="425:18">

            <break pos:start="425:13" pos:end="425:18">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="427:9" pos:end="429:18"><if pos:start="427:9" pos:end="429:18">if <condition pos:start="427:12" pos:end="427:52">(<expr pos:start="427:13" pos:end="427:51"><call pos:start="427:13" pos:end="427:51"><name pos:start="427:13" pos:end="427:23">arm_feature</name><argument_list pos:start="427:24" pos:end="427:51">(<argument pos:start="427:25" pos:end="427:27"><expr pos:start="427:25" pos:end="427:27"><name pos:start="427:25" pos:end="427:27">env</name></expr></argument>, <argument pos:start="427:30" pos:end="427:50"><expr pos:start="427:30" pos:end="427:50"><name pos:start="427:30" pos:end="427:50">ARM_FEATURE_STRONGARM</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="429:13" pos:end="429:18"><block_content pos:start="429:13" pos:end="429:18">

            <break pos:start="429:13" pos:end="429:18">break;</break></block_content></block></if></if_stmt> <comment type="block" pos:start="429:20" pos:end="429:49">/* Ignore ReadBuffer access */</comment>

        <switch pos:start="431:9" pos:end="635:9">switch <condition pos:start="431:16" pos:end="431:20">(<expr pos:start="431:17" pos:end="431:19"><name pos:start="431:17" pos:end="431:19">crm</name></expr>)</condition> <block pos:start="431:22" pos:end="635:9">{<block_content pos:start="433:9" pos:end="633:25">

        <case pos:start="433:9" pos:end="433:15">case <expr pos:start="433:14" pos:end="433:14"><literal type="number" pos:start="433:14" pos:end="433:14">0</literal></expr>:</case> <comment type="block" pos:start="433:17" pos:end="433:38">/* Cache lockdown.  */</comment>

	    <switch pos:start="435:13" pos:end="471:13">switch <condition pos:start="435:20" pos:end="435:24">(<expr pos:start="435:21" pos:end="435:23"><name pos:start="435:21" pos:end="435:23">op1</name></expr>)</condition> <block pos:start="435:26" pos:end="471:13">{<block_content pos:start="437:13" pos:end="469:29">

	    <case pos:start="437:13" pos:end="437:19">case <expr pos:start="437:18" pos:end="437:18"><literal type="number" pos:start="437:18" pos:end="437:18">0</literal></expr>:</case> <comment type="block" pos:start="437:21" pos:end="437:36">/* L1 cache.  */</comment>

		<switch pos:start="439:17" pos:end="457:17">switch <condition pos:start="439:24" pos:end="439:28">(<expr pos:start="439:25" pos:end="439:27"><name pos:start="439:25" pos:end="439:27">op2</name></expr>)</condition> <block pos:start="439:30" pos:end="457:17">{<block_content pos:start="441:17" pos:end="455:33">

		<case pos:start="441:17" pos:end="441:23">case <expr pos:start="441:22" pos:end="441:22"><literal type="number" pos:start="441:22" pos:end="441:22">0</literal></expr>:</case>

		    <expr_stmt pos:start="443:21" pos:end="443:44"><expr pos:start="443:21" pos:end="443:43"><name pos:start="443:21" pos:end="443:37"><name pos:start="443:21" pos:end="443:23">env</name><operator pos:start="443:24" pos:end="443:25">-&gt;</operator><name pos:start="443:26" pos:end="443:29">cp15</name><operator pos:start="443:30" pos:end="443:30">.</operator><name pos:start="443:31" pos:end="443:37">c9_data</name></name> <operator pos:start="443:39" pos:end="443:39">=</operator> <name pos:start="443:41" pos:end="443:43">val</name></expr>;</expr_stmt>

		    <break pos:start="445:21" pos:end="445:26">break;</break>

		<case pos:start="447:17" pos:end="447:23">case <expr pos:start="447:22" pos:end="447:22"><literal type="number" pos:start="447:22" pos:end="447:22">1</literal></expr>:</case>

		    <expr_stmt pos:start="449:21" pos:end="449:44"><expr pos:start="449:21" pos:end="449:43"><name pos:start="449:21" pos:end="449:37"><name pos:start="449:21" pos:end="449:23">env</name><operator pos:start="449:24" pos:end="449:25">-&gt;</operator><name pos:start="449:26" pos:end="449:29">cp15</name><operator pos:start="449:30" pos:end="449:30">.</operator><name pos:start="449:31" pos:end="449:37">c9_insn</name></name> <operator pos:start="449:39" pos:end="449:39">=</operator> <name pos:start="449:41" pos:end="449:43">val</name></expr>;</expr_stmt>

		    <break pos:start="451:21" pos:end="451:26">break;</break>

		<default pos:start="453:17" pos:end="453:24">default:</default>

		    <goto pos:start="455:21" pos:end="455:33">goto <name pos:start="455:26" pos:end="455:32">bad_reg</name>;</goto>

		</block_content>}</block></switch>

		<break pos:start="459:17" pos:end="459:22">break;</break>

	    <case pos:start="461:13" pos:end="461:19">case <expr pos:start="461:18" pos:end="461:18"><literal type="number" pos:start="461:18" pos:end="461:18">1</literal></expr>:</case> <comment type="block" pos:start="461:21" pos:end="461:36">/* L2 cache.  */</comment>

		<comment type="block" pos:start="463:17" pos:end="463:72">/* Ignore writes to L2 lockdown/auxiliary registers.  */</comment>

		<break pos:start="465:17" pos:end="465:22">break;</break>

	    <default pos:start="467:13" pos:end="467:20">default:</default>

		<goto pos:start="469:17" pos:end="469:29">goto <name pos:start="469:22" pos:end="469:28">bad_reg</name>;</goto>

	    </block_content>}</block></switch>

	    <break pos:start="473:13" pos:end="473:18">break;</break>

        <case pos:start="475:9" pos:end="475:15">case <expr pos:start="475:14" pos:end="475:14"><literal type="number" pos:start="475:14" pos:end="475:14">1</literal></expr>:</case> <comment type="block" pos:start="475:17" pos:end="475:51">/* TCM memory region registers.  */</comment>

            <comment type="block" pos:start="477:13" pos:end="477:35">/* Not implemented.  */</comment>

            <goto pos:start="479:13" pos:end="479:25">goto <name pos:start="479:18" pos:end="479:24">bad_reg</name>;</goto>

        <case pos:start="481:9" pos:end="481:16">case <expr pos:start="481:14" pos:end="481:15"><literal type="number" pos:start="481:14" pos:end="481:15">12</literal></expr>:</case> <comment type="block" pos:start="481:18" pos:end="481:50">/* Performance monitor control */</comment>

            <comment type="block" pos:start="483:13" pos:end="489:15">/* Performance monitors are implementation defined in v7,

             * but with an ARM recommended set of registers, which we

             * follow (although we don't actually implement any counters)

             */</comment>

            <if_stmt pos:start="491:13" pos:end="495:13"><if pos:start="491:13" pos:end="495:13">if <condition pos:start="491:16" pos:end="491:50">(<expr pos:start="491:17" pos:end="491:49"><operator pos:start="491:17" pos:end="491:17">!</operator><call pos:start="491:18" pos:end="491:49"><name pos:start="491:18" pos:end="491:28">arm_feature</name><argument_list pos:start="491:29" pos:end="491:49">(<argument pos:start="491:30" pos:end="491:32"><expr pos:start="491:30" pos:end="491:32"><name pos:start="491:30" pos:end="491:32">env</name></expr></argument>, <argument pos:start="491:35" pos:end="491:48"><expr pos:start="491:35" pos:end="491:48"><name pos:start="491:35" pos:end="491:48">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="491:52" pos:end="495:13">{<block_content pos:start="493:17" pos:end="493:29">

                <goto pos:start="493:17" pos:end="493:29">goto <name pos:start="493:22" pos:end="493:28">bad_reg</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <switch pos:start="497:13" pos:end="551:13">switch <condition pos:start="497:20" pos:end="497:24">(<expr pos:start="497:21" pos:end="497:23"><name pos:start="497:21" pos:end="497:23">op2</name></expr>)</condition> <block pos:start="497:26" pos:end="551:13">{<block_content pos:start="499:13" pos:end="549:29">

            <case pos:start="499:13" pos:end="499:19">case <expr pos:start="499:18" pos:end="499:18"><literal type="number" pos:start="499:18" pos:end="499:18">0</literal></expr>:</case> <comment type="block" pos:start="499:21" pos:end="499:62">/* performance monitor control register */</comment>

                <comment type="block" pos:start="501:17" pos:end="501:63">/* only the DP, X, D and E bits are writable */</comment>

                <expr_stmt pos:start="503:17" pos:end="503:43"><expr pos:start="503:17" pos:end="503:42"><name pos:start="503:17" pos:end="503:33"><name pos:start="503:17" pos:end="503:19">env</name><operator pos:start="503:20" pos:end="503:21">-&gt;</operator><name pos:start="503:22" pos:end="503:25">cp15</name><operator pos:start="503:26" pos:end="503:26">.</operator><name pos:start="503:27" pos:end="503:33">c9_pmcr</name></name> <operator pos:start="503:35" pos:end="503:36">&amp;=</operator> <operator pos:start="503:38" pos:end="503:38">~</operator><literal type="number" pos:start="503:39" pos:end="503:42">0x39</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:50"><expr pos:start="505:17" pos:end="505:49"><name pos:start="505:17" pos:end="505:33"><name pos:start="505:17" pos:end="505:19">env</name><operator pos:start="505:20" pos:end="505:21">-&gt;</operator><name pos:start="505:22" pos:end="505:25">cp15</name><operator pos:start="505:26" pos:end="505:26">.</operator><name pos:start="505:27" pos:end="505:33">c9_pmcr</name></name> <operator pos:start="505:35" pos:end="505:36">|=</operator> <operator pos:start="505:38" pos:end="505:38">(</operator><name pos:start="505:39" pos:end="505:41">val</name> <operator pos:start="505:43" pos:end="505:43">&amp;</operator> <literal type="number" pos:start="505:45" pos:end="505:48">0x39</literal><operator pos:start="505:49" pos:end="505:49">)</operator></expr>;</expr_stmt>

                <break pos:start="507:17" pos:end="507:22">break;</break>

            <case pos:start="509:13" pos:end="509:19">case <expr pos:start="509:18" pos:end="509:18"><literal type="number" pos:start="509:18" pos:end="509:18">1</literal></expr>:</case> <comment type="block" pos:start="509:21" pos:end="509:51">/* Count enable set register */</comment>

                <expr_stmt pos:start="511:17" pos:end="511:33"><expr pos:start="511:17" pos:end="511:32"><name pos:start="511:17" pos:end="511:19">val</name> <operator pos:start="511:21" pos:end="511:22">&amp;=</operator> <operator pos:start="511:24" pos:end="511:24">(</operator><literal type="number" pos:start="511:25" pos:end="511:25">1</literal> <operator pos:start="511:27" pos:end="511:28">&lt;&lt;</operator> <literal type="number" pos:start="511:30" pos:end="511:31">31</literal><operator pos:start="511:32" pos:end="511:32">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="513:17" pos:end="513:44"><expr pos:start="513:17" pos:end="513:43"><name pos:start="513:17" pos:end="513:36"><name pos:start="513:17" pos:end="513:19">env</name><operator pos:start="513:20" pos:end="513:21">-&gt;</operator><name pos:start="513:22" pos:end="513:25">cp15</name><operator pos:start="513:26" pos:end="513:26">.</operator><name pos:start="513:27" pos:end="513:36">c9_pmcnten</name></name> <operator pos:start="513:38" pos:end="513:39">|=</operator> <name pos:start="513:41" pos:end="513:43">val</name></expr>;</expr_stmt>

                <break pos:start="515:17" pos:end="515:22">break;</break>

            <case pos:start="517:13" pos:end="517:19">case <expr pos:start="517:18" pos:end="517:18"><literal type="number" pos:start="517:18" pos:end="517:18">2</literal></expr>:</case> <comment type="block" pos:start="517:21" pos:end="517:44">/* Count enable clear */</comment>

                <expr_stmt pos:start="519:17" pos:end="519:33"><expr pos:start="519:17" pos:end="519:32"><name pos:start="519:17" pos:end="519:19">val</name> <operator pos:start="519:21" pos:end="519:22">&amp;=</operator> <operator pos:start="519:24" pos:end="519:24">(</operator><literal type="number" pos:start="519:25" pos:end="519:25">1</literal> <operator pos:start="519:27" pos:end="519:28">&lt;&lt;</operator> <literal type="number" pos:start="519:30" pos:end="519:31">31</literal><operator pos:start="519:32" pos:end="519:32">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="521:17" pos:end="521:45"><expr pos:start="521:17" pos:end="521:44"><name pos:start="521:17" pos:end="521:36"><name pos:start="521:17" pos:end="521:19">env</name><operator pos:start="521:20" pos:end="521:21">-&gt;</operator><name pos:start="521:22" pos:end="521:25">cp15</name><operator pos:start="521:26" pos:end="521:26">.</operator><name pos:start="521:27" pos:end="521:36">c9_pmcnten</name></name> <operator pos:start="521:38" pos:end="521:39">&amp;=</operator> <operator pos:start="521:41" pos:end="521:41">~</operator><name pos:start="521:42" pos:end="521:44">val</name></expr>;</expr_stmt>

                <break pos:start="523:17" pos:end="523:22">break;</break>

            <case pos:start="525:13" pos:end="525:19">case <expr pos:start="525:18" pos:end="525:18"><literal type="number" pos:start="525:18" pos:end="525:18">3</literal></expr>:</case> <comment type="block" pos:start="525:21" pos:end="525:46">/* Overflow flag status */</comment>

                <expr_stmt pos:start="527:17" pos:end="527:44"><expr pos:start="527:17" pos:end="527:43"><name pos:start="527:17" pos:end="527:35"><name pos:start="527:17" pos:end="527:19">env</name><operator pos:start="527:20" pos:end="527:21">-&gt;</operator><name pos:start="527:22" pos:end="527:25">cp15</name><operator pos:start="527:26" pos:end="527:26">.</operator><name pos:start="527:27" pos:end="527:35">c9_pmovsr</name></name> <operator pos:start="527:37" pos:end="527:38">&amp;=</operator> <operator pos:start="527:40" pos:end="527:40">~</operator><name pos:start="527:41" pos:end="527:43">val</name></expr>;</expr_stmt>

                <break pos:start="529:17" pos:end="529:22">break;</break>

            <case pos:start="531:13" pos:end="531:19">case <expr pos:start="531:18" pos:end="531:18"><literal type="number" pos:start="531:18" pos:end="531:18">4</literal></expr>:</case> <comment type="block" pos:start="531:21" pos:end="531:44">/* Software increment */</comment>

                <comment type="block" pos:start="533:17" pos:end="533:78">/* RAZ/WI since we don't implement the software-count event */</comment>

                <break pos:start="535:17" pos:end="535:22">break;</break>

            <case pos:start="537:13" pos:end="537:19">case <expr pos:start="537:18" pos:end="537:18"><literal type="number" pos:start="537:18" pos:end="537:18">5</literal></expr>:</case> <comment type="block" pos:start="537:21" pos:end="537:58">/* Event counter selection register */</comment>

                <comment type="block" pos:start="539:17" pos:end="543:19">/* Since we don't implement any events, writing to this register

                 * is actually UNPREDICTABLE. So we choose to RAZ/WI.

                 */</comment>

                <break pos:start="545:17" pos:end="545:22">break;</break>

            <default pos:start="547:13" pos:end="547:20">default:</default>

                <goto pos:start="549:17" pos:end="549:29">goto <name pos:start="549:22" pos:end="549:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="553:13" pos:end="553:18">break;</break>

        <case pos:start="555:9" pos:end="555:16">case <expr pos:start="555:14" pos:end="555:15"><literal type="number" pos:start="555:14" pos:end="555:15">13</literal></expr>:</case> <comment type="block" pos:start="555:18" pos:end="555:43">/* Performance counters */</comment>

            <if_stmt pos:start="557:13" pos:end="561:13"><if pos:start="557:13" pos:end="561:13">if <condition pos:start="557:16" pos:end="557:50">(<expr pos:start="557:17" pos:end="557:49"><operator pos:start="557:17" pos:end="557:17">!</operator><call pos:start="557:18" pos:end="557:49"><name pos:start="557:18" pos:end="557:28">arm_feature</name><argument_list pos:start="557:29" pos:end="557:49">(<argument pos:start="557:30" pos:end="557:32"><expr pos:start="557:30" pos:end="557:32"><name pos:start="557:30" pos:end="557:32">env</name></expr></argument>, <argument pos:start="557:35" pos:end="557:48"><expr pos:start="557:35" pos:end="557:48"><name pos:start="557:35" pos:end="557:48">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="557:52" pos:end="561:13">{<block_content pos:start="559:17" pos:end="559:29">

                <goto pos:start="559:17" pos:end="559:29">goto <name pos:start="559:22" pos:end="559:28">bad_reg</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <switch pos:start="563:13" pos:end="585:13">switch <condition pos:start="563:20" pos:end="563:24">(<expr pos:start="563:21" pos:end="563:23"><name pos:start="563:21" pos:end="563:23">op2</name></expr>)</condition> <block pos:start="563:26" pos:end="585:13">{<block_content pos:start="565:13" pos:end="583:29">

            <case pos:start="565:13" pos:end="565:19">case <expr pos:start="565:18" pos:end="565:18"><literal type="number" pos:start="565:18" pos:end="565:18">0</literal></expr>:</case> <comment type="block" pos:start="565:21" pos:end="565:74">/* Cycle count register: not implemented, so RAZ/WI */</comment>

                <break pos:start="567:17" pos:end="567:22">break;</break>

            <case pos:start="569:13" pos:end="569:19">case <expr pos:start="569:18" pos:end="569:18"><literal type="number" pos:start="569:18" pos:end="569:18">1</literal></expr>:</case> <comment type="block" pos:start="569:21" pos:end="569:43">/* Event type select */</comment>

                <expr_stmt pos:start="571:17" pos:end="571:53"><expr pos:start="571:17" pos:end="571:52"><name pos:start="571:17" pos:end="571:39"><name pos:start="571:17" pos:end="571:19">env</name><operator pos:start="571:20" pos:end="571:21">-&gt;</operator><name pos:start="571:22" pos:end="571:25">cp15</name><operator pos:start="571:26" pos:end="571:26">.</operator><name pos:start="571:27" pos:end="571:39">c9_pmxevtyper</name></name> <operator pos:start="571:41" pos:end="571:41">=</operator> <name pos:start="571:43" pos:end="571:45">val</name> <operator pos:start="571:47" pos:end="571:47">&amp;</operator> <literal type="number" pos:start="571:49" pos:end="571:52">0xff</literal></expr>;</expr_stmt>

                <break pos:start="573:17" pos:end="573:22">break;</break>

            <case pos:start="575:13" pos:end="575:19">case <expr pos:start="575:18" pos:end="575:18"><literal type="number" pos:start="575:18" pos:end="575:18">2</literal></expr>:</case> <comment type="block" pos:start="575:21" pos:end="575:46">/* Event count register */</comment>

                <comment type="block" pos:start="577:17" pos:end="577:63">/* Unimplemented (we have no events), RAZ/WI */</comment>

                <break pos:start="579:17" pos:end="579:22">break;</break>

            <default pos:start="581:13" pos:end="581:20">default:</default>

                <goto pos:start="583:17" pos:end="583:29">goto <name pos:start="583:22" pos:end="583:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

            <break pos:start="587:13" pos:end="587:18">break;</break>

        <case pos:start="589:9" pos:end="589:16">case <expr pos:start="589:14" pos:end="589:15"><literal type="number" pos:start="589:14" pos:end="589:15">14</literal></expr>:</case> <comment type="block" pos:start="589:18" pos:end="589:50">/* Performance monitor control */</comment>

            <if_stmt pos:start="591:13" pos:end="595:13"><if pos:start="591:13" pos:end="595:13">if <condition pos:start="591:16" pos:end="591:50">(<expr pos:start="591:17" pos:end="591:49"><operator pos:start="591:17" pos:end="591:17">!</operator><call pos:start="591:18" pos:end="591:49"><name pos:start="591:18" pos:end="591:28">arm_feature</name><argument_list pos:start="591:29" pos:end="591:49">(<argument pos:start="591:30" pos:end="591:32"><expr pos:start="591:30" pos:end="591:32"><name pos:start="591:30" pos:end="591:32">env</name></expr></argument>, <argument pos:start="591:35" pos:end="591:48"><expr pos:start="591:35" pos:end="591:48"><name pos:start="591:35" pos:end="591:48">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="591:52" pos:end="595:13">{<block_content pos:start="593:17" pos:end="593:29">

                <goto pos:start="593:17" pos:end="593:29">goto <name pos:start="593:22" pos:end="593:28">bad_reg</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <switch pos:start="597:13" pos:end="627:13">switch <condition pos:start="597:20" pos:end="597:24">(<expr pos:start="597:21" pos:end="597:23"><name pos:start="597:21" pos:end="597:23">op2</name></expr>)</condition> <block pos:start="597:26" pos:end="627:13">{<block_content pos:start="599:13" pos:end="625:22">

            <case pos:start="599:13" pos:end="599:19">case <expr pos:start="599:18" pos:end="599:18"><literal type="number" pos:start="599:18" pos:end="599:18">0</literal></expr>:</case> <comment type="block" pos:start="599:21" pos:end="599:37">/* user enable */</comment>

                <expr_stmt pos:start="601:17" pos:end="601:49"><expr pos:start="601:17" pos:end="601:48"><name pos:start="601:17" pos:end="601:38"><name pos:start="601:17" pos:end="601:19">env</name><operator pos:start="601:20" pos:end="601:21">-&gt;</operator><name pos:start="601:22" pos:end="601:25">cp15</name><operator pos:start="601:26" pos:end="601:26">.</operator><name pos:start="601:27" pos:end="601:38">c9_pmuserenr</name></name> <operator pos:start="601:40" pos:end="601:40">=</operator> <name pos:start="601:42" pos:end="601:44">val</name> <operator pos:start="601:46" pos:end="601:46">&amp;</operator> <literal type="number" pos:start="601:48" pos:end="601:48">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="603:17" pos:end="603:74">/* changes access rights for cp registers, so flush tbs */</comment>

                <expr_stmt pos:start="605:17" pos:end="605:30"><expr pos:start="605:17" pos:end="605:29"><call pos:start="605:17" pos:end="605:29"><name pos:start="605:17" pos:end="605:24">tb_flush</name><argument_list pos:start="605:25" pos:end="605:29">(<argument pos:start="605:26" pos:end="605:28"><expr pos:start="605:26" pos:end="605:28"><name pos:start="605:26" pos:end="605:28">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="607:17" pos:end="607:22">break;</break>

            <case pos:start="609:13" pos:end="609:19">case <expr pos:start="609:18" pos:end="609:18"><literal type="number" pos:start="609:18" pos:end="609:18">1</literal></expr>:</case> <comment type="block" pos:start="609:21" pos:end="609:46">/* interrupt enable set */</comment>

                <comment type="block" pos:start="611:17" pos:end="611:80">/* We have no event counters so only the C bit can be changed */</comment>

                <expr_stmt pos:start="613:17" pos:end="613:33"><expr pos:start="613:17" pos:end="613:32"><name pos:start="613:17" pos:end="613:19">val</name> <operator pos:start="613:21" pos:end="613:22">&amp;=</operator> <operator pos:start="613:24" pos:end="613:24">(</operator><literal type="number" pos:start="613:25" pos:end="613:25">1</literal> <operator pos:start="613:27" pos:end="613:28">&lt;&lt;</operator> <literal type="number" pos:start="613:30" pos:end="613:31">31</literal><operator pos:start="613:32" pos:end="613:32">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="615:17" pos:end="615:44"><expr pos:start="615:17" pos:end="615:43"><name pos:start="615:17" pos:end="615:36"><name pos:start="615:17" pos:end="615:19">env</name><operator pos:start="615:20" pos:end="615:21">-&gt;</operator><name pos:start="615:22" pos:end="615:25">cp15</name><operator pos:start="615:26" pos:end="615:26">.</operator><name pos:start="615:27" pos:end="615:36">c9_pminten</name></name> <operator pos:start="615:38" pos:end="615:39">|=</operator> <name pos:start="615:41" pos:end="615:43">val</name></expr>;</expr_stmt>

                <break pos:start="617:17" pos:end="617:22">break;</break>

            <case pos:start="619:13" pos:end="619:19">case <expr pos:start="619:18" pos:end="619:18"><literal type="number" pos:start="619:18" pos:end="619:18">2</literal></expr>:</case> <comment type="block" pos:start="619:21" pos:end="619:48">/* interrupt enable clear */</comment>

                <expr_stmt pos:start="621:17" pos:end="621:33"><expr pos:start="621:17" pos:end="621:32"><name pos:start="621:17" pos:end="621:19">val</name> <operator pos:start="621:21" pos:end="621:22">&amp;=</operator> <operator pos:start="621:24" pos:end="621:24">(</operator><literal type="number" pos:start="621:25" pos:end="621:25">1</literal> <operator pos:start="621:27" pos:end="621:28">&lt;&lt;</operator> <literal type="number" pos:start="621:30" pos:end="621:31">31</literal><operator pos:start="621:32" pos:end="621:32">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="623:17" pos:end="623:45"><expr pos:start="623:17" pos:end="623:44"><name pos:start="623:17" pos:end="623:36"><name pos:start="623:17" pos:end="623:19">env</name><operator pos:start="623:20" pos:end="623:21">-&gt;</operator><name pos:start="623:22" pos:end="623:25">cp15</name><operator pos:start="623:26" pos:end="623:26">.</operator><name pos:start="623:27" pos:end="623:36">c9_pminten</name></name> <operator pos:start="623:38" pos:end="623:39">&amp;=</operator> <operator pos:start="623:41" pos:end="623:41">~</operator><name pos:start="623:42" pos:end="623:44">val</name></expr>;</expr_stmt>

                <break pos:start="625:17" pos:end="625:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="629:13" pos:end="629:18">break;</break>

        <default pos:start="631:9" pos:end="631:16">default:</default>

            <goto pos:start="633:13" pos:end="633:25">goto <name pos:start="633:18" pos:end="633:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="637:9" pos:end="637:14">break;</break>

    <case pos:start="639:5" pos:end="639:12">case <expr pos:start="639:10" pos:end="639:11"><literal type="number" pos:start="639:10" pos:end="639:11">10</literal></expr>:</case> <comment type="block" pos:start="639:14" pos:end="639:37">/* MMU TLB lockdown.  */</comment>

        <comment type="block" pos:start="641:9" pos:end="641:48">/* ??? TLB lockdown not implemented.  */</comment>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:12">case <expr pos:start="645:10" pos:end="645:11"><literal type="number" pos:start="645:10" pos:end="645:11">12</literal></expr>:</case> <comment type="block" pos:start="645:14" pos:end="645:29">/* Reserved.  */</comment>

        <goto pos:start="647:9" pos:end="647:21">goto <name pos:start="647:14" pos:end="647:20">bad_reg</name>;</goto>

    <case pos:start="649:5" pos:end="649:12">case <expr pos:start="649:10" pos:end="649:11"><literal type="number" pos:start="649:10" pos:end="649:11">13</literal></expr>:</case> <comment type="block" pos:start="649:14" pos:end="649:31">/* Process ID.  */</comment>

        <switch pos:start="651:9" pos:end="687:9">switch <condition pos:start="651:16" pos:end="651:20">(<expr pos:start="651:17" pos:end="651:19"><name pos:start="651:17" pos:end="651:19">op2</name></expr>)</condition> <block pos:start="651:22" pos:end="687:9">{<block_content pos:start="653:9" pos:end="685:25">

        <case pos:start="653:9" pos:end="653:15">case <expr pos:start="653:14" pos:end="653:14"><literal type="number" pos:start="653:14" pos:end="653:14">0</literal></expr>:</case>

            <comment type="block" pos:start="655:13" pos:end="659:15">/* Unlike real hardware the qemu TLB uses virtual addresses,

               not modified virtual addresses, so this causes a TLB flush.

             */</comment>

            <if_stmt pos:start="661:13" pos:end="663:32"><if pos:start="661:13" pos:end="663:32">if <condition pos:start="661:16" pos:end="661:42">(<expr pos:start="661:17" pos:end="661:41"><name pos:start="661:17" pos:end="661:34"><name pos:start="661:17" pos:end="661:19">env</name><operator pos:start="661:20" pos:end="661:21">-&gt;</operator><name pos:start="661:22" pos:end="661:25">cp15</name><operator pos:start="661:26" pos:end="661:26">.</operator><name pos:start="661:27" pos:end="661:34">c13_fcse</name></name> <operator pos:start="661:36" pos:end="661:37">!=</operator> <name pos:start="661:39" pos:end="661:41">val</name></expr>)</condition><block type="pseudo" pos:start="663:15" pos:end="663:32"><block_content pos:start="663:15" pos:end="663:32">

              <expr_stmt pos:start="663:15" pos:end="663:32"><expr pos:start="663:15" pos:end="663:31"><call pos:start="663:15" pos:end="663:31"><name pos:start="663:15" pos:end="663:23">tlb_flush</name><argument_list pos:start="663:24" pos:end="663:31">(<argument pos:start="663:25" pos:end="663:27"><expr pos:start="663:25" pos:end="663:27"><name pos:start="663:25" pos:end="663:27">env</name></expr></argument>, <argument pos:start="663:30" pos:end="663:30"><expr pos:start="663:30" pos:end="663:30"><literal type="number" pos:start="663:30" pos:end="663:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="665:13" pos:end="665:37"><expr pos:start="665:13" pos:end="665:36"><name pos:start="665:13" pos:end="665:30"><name pos:start="665:13" pos:end="665:15">env</name><operator pos:start="665:16" pos:end="665:17">-&gt;</operator><name pos:start="665:18" pos:end="665:21">cp15</name><operator pos:start="665:22" pos:end="665:22">.</operator><name pos:start="665:23" pos:end="665:30">c13_fcse</name></name> <operator pos:start="665:32" pos:end="665:32">=</operator> <name pos:start="665:34" pos:end="665:36">val</name></expr>;</expr_stmt>

            <break pos:start="667:13" pos:end="667:18">break;</break>

        <case pos:start="669:9" pos:end="669:15">case <expr pos:start="669:14" pos:end="669:14"><literal type="number" pos:start="669:14" pos:end="669:14">1</literal></expr>:</case>

            <comment type="block" pos:start="671:13" pos:end="671:60">/* This changes the ASID, so do a TLB flush.  */</comment>

            <if_stmt pos:start="673:13" pos:end="677:32"><if pos:start="673:13" pos:end="677:32">if <condition pos:start="673:16" pos:end="675:54">(<expr pos:start="673:17" pos:end="675:53"><name pos:start="673:17" pos:end="673:37"><name pos:start="673:17" pos:end="673:19">env</name><operator pos:start="673:20" pos:end="673:21">-&gt;</operator><name pos:start="673:22" pos:end="673:25">cp15</name><operator pos:start="673:26" pos:end="673:26">.</operator><name pos:start="673:27" pos:end="673:37">c13_context</name></name> <operator pos:start="673:39" pos:end="673:40">!=</operator> <name pos:start="673:42" pos:end="673:44">val</name>

                <operator pos:start="675:17" pos:end="675:18">&amp;&amp;</operator> <operator pos:start="675:20" pos:end="675:20">!</operator><call pos:start="675:21" pos:end="675:53"><name pos:start="675:21" pos:end="675:31">arm_feature</name><argument_list pos:start="675:32" pos:end="675:53">(<argument pos:start="675:33" pos:end="675:35"><expr pos:start="675:33" pos:end="675:35"><name pos:start="675:33" pos:end="675:35">env</name></expr></argument>, <argument pos:start="675:38" pos:end="675:52"><expr pos:start="675:38" pos:end="675:52"><name pos:start="675:38" pos:end="675:52">ARM_FEATURE_MPU</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="677:15" pos:end="677:32"><block_content pos:start="677:15" pos:end="677:32">

              <expr_stmt pos:start="677:15" pos:end="677:32"><expr pos:start="677:15" pos:end="677:31"><call pos:start="677:15" pos:end="677:31"><name pos:start="677:15" pos:end="677:23">tlb_flush</name><argument_list pos:start="677:24" pos:end="677:31">(<argument pos:start="677:25" pos:end="677:27"><expr pos:start="677:25" pos:end="677:27"><name pos:start="677:25" pos:end="677:27">env</name></expr></argument>, <argument pos:start="677:30" pos:end="677:30"><expr pos:start="677:30" pos:end="677:30"><literal type="number" pos:start="677:30" pos:end="677:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="679:13" pos:end="679:40"><expr pos:start="679:13" pos:end="679:39"><name pos:start="679:13" pos:end="679:33"><name pos:start="679:13" pos:end="679:15">env</name><operator pos:start="679:16" pos:end="679:17">-&gt;</operator><name pos:start="679:18" pos:end="679:21">cp15</name><operator pos:start="679:22" pos:end="679:22">.</operator><name pos:start="679:23" pos:end="679:33">c13_context</name></name> <operator pos:start="679:35" pos:end="679:35">=</operator> <name pos:start="679:37" pos:end="679:39">val</name></expr>;</expr_stmt>

            <break pos:start="681:13" pos:end="681:18">break;</break>

        <default pos:start="683:9" pos:end="683:16">default:</default>

            <goto pos:start="685:13" pos:end="685:25">goto <name pos:start="685:18" pos:end="685:24">bad_reg</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="689:9" pos:end="689:14">break;</break>

    <case pos:start="691:5" pos:end="691:12">case <expr pos:start="691:10" pos:end="691:11"><literal type="number" pos:start="691:10" pos:end="691:11">14</literal></expr>:</case> <comment type="block" pos:start="691:14" pos:end="691:29">/* Reserved.  */</comment>

        <goto pos:start="693:9" pos:end="693:21">goto <name pos:start="693:14" pos:end="693:20">bad_reg</name>;</goto>

    <case pos:start="695:5" pos:end="695:12">case <expr pos:start="695:10" pos:end="695:11"><literal type="number" pos:start="695:10" pos:end="695:11">15</literal></expr>:</case> <comment type="block" pos:start="695:14" pos:end="695:44">/* Implementation specific.  */</comment>

        <if_stmt pos:start="697:9" pos:end="717:9"><if pos:start="697:9" pos:end="717:9">if <condition pos:start="697:12" pos:end="697:49">(<expr pos:start="697:13" pos:end="697:48"><call pos:start="697:13" pos:end="697:48"><name pos:start="697:13" pos:end="697:23">arm_feature</name><argument_list pos:start="697:24" pos:end="697:48">(<argument pos:start="697:25" pos:end="697:27"><expr pos:start="697:25" pos:end="697:27"><name pos:start="697:25" pos:end="697:27">env</name></expr></argument>, <argument pos:start="697:30" pos:end="697:47"><expr pos:start="697:30" pos:end="697:47"><name pos:start="697:30" pos:end="697:47">ARM_FEATURE_XSCALE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="697:51" pos:end="717:9">{<block_content pos:start="699:13" pos:end="715:25">

            <if_stmt pos:start="699:13" pos:end="713:13"><if pos:start="699:13" pos:end="713:13">if <condition pos:start="699:16" pos:end="699:37">(<expr pos:start="699:17" pos:end="699:36"><name pos:start="699:17" pos:end="699:19">op2</name> <operator pos:start="699:21" pos:end="699:22">==</operator> <literal type="number" pos:start="699:24" pos:end="699:24">0</literal> <operator pos:start="699:26" pos:end="699:27">&amp;&amp;</operator> <name pos:start="699:29" pos:end="699:31">crm</name> <operator pos:start="699:33" pos:end="699:34">==</operator> <literal type="number" pos:start="699:36" pos:end="699:36">1</literal></expr>)</condition> <block pos:start="699:39" pos:end="713:13">{<block_content pos:start="701:17" pos:end="711:22">

                <if_stmt pos:start="701:17" pos:end="709:17"><if pos:start="701:17" pos:end="709:17">if <condition pos:start="701:20" pos:end="701:57">(<expr pos:start="701:21" pos:end="701:56"><name pos:start="701:21" pos:end="701:38"><name pos:start="701:21" pos:end="701:23">env</name><operator pos:start="701:24" pos:end="701:25">-&gt;</operator><name pos:start="701:26" pos:end="701:29">cp15</name><operator pos:start="701:30" pos:end="701:30">.</operator><name pos:start="701:31" pos:end="701:38">c15_cpar</name></name> <operator pos:start="701:40" pos:end="701:41">!=</operator> <operator pos:start="701:43" pos:end="701:43">(</operator><name pos:start="701:44" pos:end="701:46">val</name> <operator pos:start="701:48" pos:end="701:48">&amp;</operator> <literal type="number" pos:start="701:50" pos:end="701:55">0x3fff</literal><operator pos:start="701:56" pos:end="701:56">)</operator></expr>)</condition> <block pos:start="701:59" pos:end="709:17">{<block_content pos:start="705:21" pos:end="707:54">

                    <comment type="block" pos:start="703:21" pos:end="703:77">/* Changes cp0 to cp13 behavior, so needs a TB flush.  */</comment>

                    <expr_stmt pos:start="705:21" pos:end="705:34"><expr pos:start="705:21" pos:end="705:33"><call pos:start="705:21" pos:end="705:33"><name pos:start="705:21" pos:end="705:28">tb_flush</name><argument_list pos:start="705:29" pos:end="705:33">(<argument pos:start="705:30" pos:end="705:32"><expr pos:start="705:30" pos:end="705:32"><name pos:start="705:30" pos:end="705:32">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="707:21" pos:end="707:54"><expr pos:start="707:21" pos:end="707:53"><name pos:start="707:21" pos:end="707:38"><name pos:start="707:21" pos:end="707:23">env</name><operator pos:start="707:24" pos:end="707:25">-&gt;</operator><name pos:start="707:26" pos:end="707:29">cp15</name><operator pos:start="707:30" pos:end="707:30">.</operator><name pos:start="707:31" pos:end="707:38">c15_cpar</name></name> <operator pos:start="707:40" pos:end="707:40">=</operator> <name pos:start="707:42" pos:end="707:44">val</name> <operator pos:start="707:46" pos:end="707:46">&amp;</operator> <literal type="number" pos:start="707:48" pos:end="707:53">0x3fff</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="711:17" pos:end="711:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <goto pos:start="715:13" pos:end="715:25">goto <name pos:start="715:18" pos:end="715:24">bad_reg</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="719:9" pos:end="767:9"><if pos:start="719:9" pos:end="767:9">if <condition pos:start="719:12" pos:end="719:49">(<expr pos:start="719:13" pos:end="719:48"><call pos:start="719:13" pos:end="719:48"><name pos:start="719:13" pos:end="719:23">arm_feature</name><argument_list pos:start="719:24" pos:end="719:48">(<argument pos:start="719:25" pos:end="719:27"><expr pos:start="719:25" pos:end="719:27"><name pos:start="719:25" pos:end="719:27">env</name></expr></argument>, <argument pos:start="719:30" pos:end="719:47"><expr pos:start="719:30" pos:end="719:47"><name pos:start="719:30" pos:end="719:47">ARM_FEATURE_OMAPCP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="719:51" pos:end="767:9">{<block_content pos:start="721:13" pos:end="765:13">

            <switch pos:start="721:13" pos:end="765:13">switch <condition pos:start="721:20" pos:end="721:24">(<expr pos:start="721:21" pos:end="721:23"><name pos:start="721:21" pos:end="721:23">crm</name></expr>)</condition> <block pos:start="721:26" pos:end="765:13">{<block_content pos:start="723:13" pos:end="763:29">

            <case pos:start="723:13" pos:end="723:19">case <expr pos:start="723:18" pos:end="723:18"><literal type="number" pos:start="723:18" pos:end="723:18">0</literal></expr>:</case>

                <break pos:start="725:17" pos:end="725:22">break;</break>

            <case pos:start="727:13" pos:end="727:19">case <expr pos:start="727:18" pos:end="727:18"><literal type="number" pos:start="727:18" pos:end="727:18">1</literal></expr>:</case> <comment type="block" pos:start="727:21" pos:end="727:52">/* Set TI925T configuration.  */</comment>

                <expr_stmt pos:start="729:17" pos:end="729:52"><expr pos:start="729:17" pos:end="729:51"><name pos:start="729:17" pos:end="729:38"><name pos:start="729:17" pos:end="729:19">env</name><operator pos:start="729:20" pos:end="729:21">-&gt;</operator><name pos:start="729:22" pos:end="729:25">cp15</name><operator pos:start="729:26" pos:end="729:26">.</operator><name pos:start="729:27" pos:end="729:38">c15_ticonfig</name></name> <operator pos:start="729:40" pos:end="729:40">=</operator> <name pos:start="729:42" pos:end="729:44">val</name> <operator pos:start="729:46" pos:end="729:46">&amp;</operator> <literal type="number" pos:start="729:48" pos:end="729:51">0xe7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="731:17" pos:end="733:60"><expr pos:start="731:17" pos:end="733:59"><name pos:start="731:17" pos:end="731:34"><name pos:start="731:17" pos:end="731:19">env</name><operator pos:start="731:20" pos:end="731:21">-&gt;</operator><name pos:start="731:22" pos:end="731:25">cp15</name><operator pos:start="731:26" pos:end="731:26">.</operator><name pos:start="731:27" pos:end="731:34">c0_cpuid</name></name> <operator pos:start="731:36" pos:end="731:36">=</operator> <ternary pos:start="731:38" pos:end="733:59"><condition pos:start="731:38" pos:end="731:55"><expr pos:start="731:38" pos:end="731:53"><operator pos:start="731:38" pos:end="731:38">(</operator><name pos:start="731:39" pos:end="731:41">val</name> <operator pos:start="731:43" pos:end="731:43">&amp;</operator> <operator pos:start="731:45" pos:end="731:45">(</operator><literal type="number" pos:start="731:46" pos:end="731:46">1</literal> <operator pos:start="731:48" pos:end="731:49">&lt;&lt;</operator> <literal type="number" pos:start="731:51" pos:end="731:51">5</literal><operator pos:start="731:52" pos:end="731:52">)</operator><operator pos:start="731:53" pos:end="731:53">)</operator></expr> ?</condition><then pos:start="733:25" pos:end="733:40"> <comment type="block" pos:start="731:57" pos:end="731:73">/* OS_TYPE bit */</comment>

                        <expr pos:start="733:25" pos:end="733:40"><name pos:start="733:25" pos:end="733:40">ARM_CPUID_TI915T</name></expr> </then><else pos:start="733:42" pos:end="733:59">: <expr pos:start="733:44" pos:end="733:59"><name pos:start="733:44" pos:end="733:59">ARM_CPUID_TI925T</name></expr></else></ternary></expr>;</expr_stmt>

                <break pos:start="735:17" pos:end="735:22">break;</break>

            <case pos:start="737:13" pos:end="737:19">case <expr pos:start="737:18" pos:end="737:18"><literal type="number" pos:start="737:18" pos:end="737:18">2</literal></expr>:</case> <comment type="block" pos:start="737:21" pos:end="737:37">/* Set I_max.  */</comment>

                <expr_stmt pos:start="739:17" pos:end="739:42"><expr pos:start="739:17" pos:end="739:41"><name pos:start="739:17" pos:end="739:35"><name pos:start="739:17" pos:end="739:19">env</name><operator pos:start="739:20" pos:end="739:21">-&gt;</operator><name pos:start="739:22" pos:end="739:25">cp15</name><operator pos:start="739:26" pos:end="739:26">.</operator><name pos:start="739:27" pos:end="739:35">c15_i_max</name></name> <operator pos:start="739:37" pos:end="739:37">=</operator> <name pos:start="739:39" pos:end="739:41">val</name></expr>;</expr_stmt>

                <break pos:start="741:17" pos:end="741:22">break;</break>

            <case pos:start="743:13" pos:end="743:19">case <expr pos:start="743:18" pos:end="743:18"><literal type="number" pos:start="743:18" pos:end="743:18">3</literal></expr>:</case> <comment type="block" pos:start="743:21" pos:end="743:37">/* Set I_min.  */</comment>

                <expr_stmt pos:start="745:17" pos:end="745:42"><expr pos:start="745:17" pos:end="745:41"><name pos:start="745:17" pos:end="745:35"><name pos:start="745:17" pos:end="745:19">env</name><operator pos:start="745:20" pos:end="745:21">-&gt;</operator><name pos:start="745:22" pos:end="745:25">cp15</name><operator pos:start="745:26" pos:end="745:26">.</operator><name pos:start="745:27" pos:end="745:35">c15_i_min</name></name> <operator pos:start="745:37" pos:end="745:37">=</operator> <name pos:start="745:39" pos:end="745:41">val</name></expr>;</expr_stmt>

                <break pos:start="747:17" pos:end="747:22">break;</break>

            <case pos:start="749:13" pos:end="749:19">case <expr pos:start="749:18" pos:end="749:18"><literal type="number" pos:start="749:18" pos:end="749:18">4</literal></expr>:</case> <comment type="block" pos:start="749:21" pos:end="749:41">/* Set thread-ID.  */</comment>

                <expr_stmt pos:start="751:17" pos:end="751:54"><expr pos:start="751:17" pos:end="751:53"><name pos:start="751:17" pos:end="751:38"><name pos:start="751:17" pos:end="751:19">env</name><operator pos:start="751:20" pos:end="751:21">-&gt;</operator><name pos:start="751:22" pos:end="751:25">cp15</name><operator pos:start="751:26" pos:end="751:26">.</operator><name pos:start="751:27" pos:end="751:38">c15_threadid</name></name> <operator pos:start="751:40" pos:end="751:40">=</operator> <name pos:start="751:42" pos:end="751:44">val</name> <operator pos:start="751:46" pos:end="751:46">&amp;</operator> <literal type="number" pos:start="751:48" pos:end="751:53">0xffff</literal></expr>;</expr_stmt>

                <break pos:start="753:17" pos:end="753:22">break;</break>

            <case pos:start="755:13" pos:end="755:19">case <expr pos:start="755:18" pos:end="755:18"><literal type="number" pos:start="755:18" pos:end="755:18">8</literal></expr>:</case> <comment type="block" pos:start="755:21" pos:end="755:59">/* Wait-for-interrupt (deprecated).  */</comment>

                <expr_stmt pos:start="757:17" pos:end="757:55"><expr pos:start="757:17" pos:end="757:54"><call pos:start="757:17" pos:end="757:54"><name pos:start="757:17" pos:end="757:29">cpu_interrupt</name><argument_list pos:start="757:30" pos:end="757:54">(<argument pos:start="757:31" pos:end="757:33"><expr pos:start="757:31" pos:end="757:33"><name pos:start="757:31" pos:end="757:33">env</name></expr></argument>, <argument pos:start="757:36" pos:end="757:53"><expr pos:start="757:36" pos:end="757:53"><name pos:start="757:36" pos:end="757:53">CPU_INTERRUPT_HALT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="759:17" pos:end="759:22">break;</break>

            <default pos:start="761:13" pos:end="761:20">default:</default>

                <goto pos:start="763:17" pos:end="763:29">goto <name pos:start="763:22" pos:end="763:28">bad_reg</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="769:9" pos:end="795:9"><if pos:start="769:9" pos:end="795:9">if <condition pos:start="769:12" pos:end="769:49">(<expr pos:start="769:13" pos:end="769:48"><call pos:start="769:13" pos:end="769:26"><name pos:start="769:13" pos:end="769:21">ARM_CPUID</name><argument_list pos:start="769:22" pos:end="769:26">(<argument pos:start="769:23" pos:end="769:25"><expr pos:start="769:23" pos:end="769:25"><name pos:start="769:23" pos:end="769:25">env</name></expr></argument>)</argument_list></call> <operator pos:start="769:28" pos:end="769:29">==</operator> <name pos:start="769:31" pos:end="769:48">ARM_CPUID_CORTEXA9</name></expr>)</condition> <block pos:start="769:51" pos:end="795:9">{<block_content pos:start="771:13" pos:end="793:13">

            <switch pos:start="771:13" pos:end="793:13">switch <condition pos:start="771:20" pos:end="771:24">(<expr pos:start="771:21" pos:end="771:23"><name pos:start="771:21" pos:end="771:23">crm</name></expr>)</condition> <block pos:start="771:26" pos:end="793:13">{<block_content pos:start="773:13" pos:end="791:22">

            <case pos:start="773:13" pos:end="773:19">case <expr pos:start="773:18" pos:end="773:18"><literal type="number" pos:start="773:18" pos:end="773:18">0</literal></expr>:</case>

                <if_stmt pos:start="775:17" pos:end="787:17"><if pos:start="775:17" pos:end="779:17">if <condition pos:start="775:20" pos:end="775:45">(<expr pos:start="775:21" pos:end="775:44"><operator pos:start="775:21" pos:end="775:21">(</operator><name pos:start="775:22" pos:end="775:24">op1</name> <operator pos:start="775:26" pos:end="775:27">==</operator> <literal type="number" pos:start="775:29" pos:end="775:29">0</literal><operator pos:start="775:30" pos:end="775:30">)</operator> <operator pos:start="775:32" pos:end="775:33">&amp;&amp;</operator> <operator pos:start="775:35" pos:end="775:35">(</operator><name pos:start="775:36" pos:end="775:38">op2</name> <operator pos:start="775:40" pos:end="775:41">==</operator> <literal type="number" pos:start="775:43" pos:end="775:43">0</literal><operator pos:start="775:44" pos:end="775:44">)</operator></expr>)</condition> <block pos:start="775:47" pos:end="779:17">{<block_content pos:start="777:21" pos:end="777:54">

                    <expr_stmt pos:start="777:21" pos:end="777:54"><expr pos:start="777:21" pos:end="777:53"><name pos:start="777:21" pos:end="777:47"><name pos:start="777:21" pos:end="777:23">env</name><operator pos:start="777:24" pos:end="777:25">-&gt;</operator><name pos:start="777:26" pos:end="777:29">cp15</name><operator pos:start="777:30" pos:end="777:30">.</operator><name pos:start="777:31" pos:end="777:47">c15_power_control</name></name> <operator pos:start="777:49" pos:end="777:49">=</operator> <name pos:start="777:51" pos:end="777:53">val</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="779:19" pos:end="783:17">else if <condition pos:start="779:27" pos:end="779:52">(<expr pos:start="779:28" pos:end="779:51"><operator pos:start="779:28" pos:end="779:28">(</operator><name pos:start="779:29" pos:end="779:31">op1</name> <operator pos:start="779:33" pos:end="779:34">==</operator> <literal type="number" pos:start="779:36" pos:end="779:36">0</literal><operator pos:start="779:37" pos:end="779:37">)</operator> <operator pos:start="779:39" pos:end="779:40">&amp;&amp;</operator> <operator pos:start="779:42" pos:end="779:42">(</operator><name pos:start="779:43" pos:end="779:45">op2</name> <operator pos:start="779:47" pos:end="779:48">==</operator> <literal type="number" pos:start="779:50" pos:end="779:50">1</literal><operator pos:start="779:51" pos:end="779:51">)</operator></expr>)</condition> <block pos:start="779:54" pos:end="783:17">{<block_content pos:start="781:21" pos:end="781:51">

                    <expr_stmt pos:start="781:21" pos:end="781:51"><expr pos:start="781:21" pos:end="781:50"><name pos:start="781:21" pos:end="781:44"><name pos:start="781:21" pos:end="781:23">env</name><operator pos:start="781:24" pos:end="781:25">-&gt;</operator><name pos:start="781:26" pos:end="781:29">cp15</name><operator pos:start="781:30" pos:end="781:30">.</operator><name pos:start="781:31" pos:end="781:44">c15_diagnostic</name></name> <operator pos:start="781:46" pos:end="781:46">=</operator> <name pos:start="781:48" pos:end="781:50">val</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="783:19" pos:end="787:17">else if <condition pos:start="783:27" pos:end="783:52">(<expr pos:start="783:28" pos:end="783:51"><operator pos:start="783:28" pos:end="783:28">(</operator><name pos:start="783:29" pos:end="783:31">op1</name> <operator pos:start="783:33" pos:end="783:34">==</operator> <literal type="number" pos:start="783:36" pos:end="783:36">0</literal><operator pos:start="783:37" pos:end="783:37">)</operator> <operator pos:start="783:39" pos:end="783:40">&amp;&amp;</operator> <operator pos:start="783:42" pos:end="783:42">(</operator><name pos:start="783:43" pos:end="783:45">op2</name> <operator pos:start="783:47" pos:end="783:48">==</operator> <literal type="number" pos:start="783:50" pos:end="783:50">2</literal><operator pos:start="783:51" pos:end="783:51">)</operator></expr>)</condition> <block pos:start="783:54" pos:end="787:17">{<block_content pos:start="785:21" pos:end="785:57">

                    <expr_stmt pos:start="785:21" pos:end="785:57"><expr pos:start="785:21" pos:end="785:56"><name pos:start="785:21" pos:end="785:50"><name pos:start="785:21" pos:end="785:23">env</name><operator pos:start="785:24" pos:end="785:25">-&gt;</operator><name pos:start="785:26" pos:end="785:29">cp15</name><operator pos:start="785:30" pos:end="785:30">.</operator><name pos:start="785:31" pos:end="785:50">c15_power_diagnostic</name></name> <operator pos:start="785:52" pos:end="785:52">=</operator> <name pos:start="785:54" pos:end="785:56">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            <default pos:start="789:13" pos:end="789:20">default:</default>

                <break pos:start="791:17" pos:end="791:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <break pos:start="797:9" pos:end="797:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="801:5" pos:end="801:11">return;</return>

<label pos:start="803:1" pos:end="803:8"><name pos:start="803:1" pos:end="803:7">bad_reg</name>:</label>

    <comment type="block" pos:start="805:5" pos:end="805:79">/* ??? For debugging only.  Should raise illegal instruction exception.  */</comment>

    <expr_stmt pos:start="807:5" pos:end="809:49"><expr pos:start="807:5" pos:end="809:48"><call pos:start="807:5" pos:end="809:48"><name pos:start="807:5" pos:end="807:13">cpu_abort</name><argument_list pos:start="807:14" pos:end="809:48">(<argument pos:start="807:15" pos:end="807:17"><expr pos:start="807:15" pos:end="807:17"><name pos:start="807:15" pos:end="807:17">env</name></expr></argument>, <argument pos:start="807:20" pos:end="807:77"><expr pos:start="807:20" pos:end="807:77"><literal type="string" pos:start="807:20" pos:end="807:77">"Unimplemented cp15 register write (c%d, c%d, {%d, %d})\n"</literal></expr></argument>,

              <argument pos:start="809:15" pos:end="809:32"><expr pos:start="809:15" pos:end="809:32"><operator pos:start="809:15" pos:end="809:15">(</operator><name pos:start="809:16" pos:end="809:19">insn</name> <operator pos:start="809:21" pos:end="809:22">&gt;&gt;</operator> <literal type="number" pos:start="809:24" pos:end="809:25">16</literal><operator pos:start="809:26" pos:end="809:26">)</operator> <operator pos:start="809:28" pos:end="809:28">&amp;</operator> <literal type="number" pos:start="809:30" pos:end="809:32">0xf</literal></expr></argument>, <argument pos:start="809:35" pos:end="809:37"><expr pos:start="809:35" pos:end="809:37"><name pos:start="809:35" pos:end="809:37">crm</name></expr></argument>, <argument pos:start="809:40" pos:end="809:42"><expr pos:start="809:40" pos:end="809:42"><name pos:start="809:40" pos:end="809:42">op1</name></expr></argument>, <argument pos:start="809:45" pos:end="809:47"><expr pos:start="809:45" pos:end="809:47"><name pos:start="809:45" pos:end="809:47">op2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
