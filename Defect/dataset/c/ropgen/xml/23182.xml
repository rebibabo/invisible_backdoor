<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23182.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:9">FUNC</name></type>(<name pos:start="1:11" pos:end="1:29">ff_emulated_edge_mc</name>)<parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:38">uint8_t</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">buf</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">src</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:77">linesize</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:90"><decl pos:start="1:80" pos:end="1:90"><type pos:start="1:80" pos:end="1:90"><name pos:start="1:80" pos:end="1:82">int</name></type> <name pos:start="1:84" pos:end="1:90">block_w</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:103"><decl pos:start="1:93" pos:end="1:103"><type pos:start="1:93" pos:end="1:103"><name pos:start="1:93" pos:end="1:95">int</name></type> <name pos:start="1:97" pos:end="1:103">block_h</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">src_x</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:56"><decl pos:start="3:48" pos:end="3:56"><type pos:start="3:48" pos:end="3:56"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:56">src_y</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:63"><decl pos:start="3:59" pos:end="3:63"><type pos:start="3:59" pos:end="3:63"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:63">w</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:70"><decl pos:start="3:66" pos:end="3:70"><type pos:start="3:66" pos:end="3:70"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:70">h</name></decl></parameter>)</parameter_list><block pos:start="3:72" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">start_y</name></decl>, <decl pos:start="7:18" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:24">start_x</name></decl>, <decl pos:start="7:27" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:31">end_y</name></decl>, <decl pos:start="7:34" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:34" pos:end="7:38">end_x</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="17:5">if<condition pos:start="11:7" pos:end="11:17">(<expr pos:start="11:8" pos:end="11:16"><name pos:start="11:8" pos:end="11:12">src_y</name><operator pos:start="11:13" pos:end="11:14">&gt;=</operator> <name pos:start="11:16" pos:end="11:16">h</name></expr>)</condition><block pos:start="11:18" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:11">src</name><operator pos:start="13:12" pos:end="13:13">+=</operator> <operator pos:start="13:15" pos:end="13:15">(</operator><name pos:start="13:16" pos:end="13:16">h</name><operator pos:start="13:17" pos:end="13:17">-</operator><literal type="number" pos:start="13:18" pos:end="13:19">1</literal><operator pos:start="13:19" pos:end="13:19">-</operator><name pos:start="13:20" pos:end="13:24">src_y</name><operator pos:start="13:25" pos:end="13:25">)</operator><operator pos:start="13:26" pos:end="13:26">*</operator><name pos:start="13:27" pos:end="13:34">linesize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:13">src_y</name><operator pos:start="15:14" pos:end="15:14">=</operator><name pos:start="15:15" pos:end="15:15">h</name><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="17:6" pos:end="23:5">else if<condition pos:start="17:13" pos:end="17:29">(<expr pos:start="17:14" pos:end="17:28"><name pos:start="17:14" pos:end="17:18">src_y</name><operator pos:start="17:19" pos:end="17:20">&lt;=</operator><operator pos:start="17:21" pos:end="17:21">-</operator><name pos:start="17:22" pos:end="17:28">block_h</name></expr>)</condition><block pos:start="17:30" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:24">

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:11">src</name><operator pos:start="19:12" pos:end="19:13">+=</operator> <operator pos:start="19:15" pos:end="19:15">(</operator><literal type="number" pos:start="19:16" pos:end="19:17">1</literal><operator pos:start="19:17" pos:end="19:17">-</operator><name pos:start="19:18" pos:end="19:24">block_h</name><operator pos:start="19:25" pos:end="19:25">-</operator><name pos:start="19:26" pos:end="19:30">src_y</name><operator pos:start="19:31" pos:end="19:31">)</operator><operator pos:start="19:32" pos:end="19:32">*</operator><name pos:start="19:33" pos:end="19:40">linesize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">src_y</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:16">1</literal><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:23">block_h</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="31:5">if<condition pos:start="25:7" pos:end="25:17">(<expr pos:start="25:8" pos:end="25:16"><name pos:start="25:8" pos:end="25:12">src_x</name><operator pos:start="25:13" pos:end="25:14">&gt;=</operator> <name pos:start="25:16" pos:end="25:16">w</name></expr>)</condition><block pos:start="25:18" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:40"><expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:11">src</name><operator pos:start="27:12" pos:end="27:13">+=</operator> <operator pos:start="27:15" pos:end="27:15">(</operator><name pos:start="27:16" pos:end="27:16">w</name><operator pos:start="27:17" pos:end="27:17">-</operator><literal type="number" pos:start="27:18" pos:end="27:19">1</literal><operator pos:start="27:19" pos:end="27:19">-</operator><name pos:start="27:20" pos:end="27:24">src_x</name><operator pos:start="27:25" pos:end="27:25">)</operator><operator pos:start="27:26" pos:end="27:26">*</operator><sizeof pos:start="27:27" pos:end="27:39">sizeof<argument_list pos:start="27:33" pos:end="27:39">(<argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:38">pixel</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:18"><expr pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:13">src_x</name><operator pos:start="29:14" pos:end="29:14">=</operator><name pos:start="29:15" pos:end="29:15">w</name><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="31:6" pos:end="37:5">else if<condition pos:start="31:13" pos:end="31:29">(<expr pos:start="31:14" pos:end="31:28"><name pos:start="31:14" pos:end="31:18">src_x</name><operator pos:start="31:19" pos:end="31:20">&lt;=</operator><operator pos:start="31:21" pos:end="31:21">-</operator><name pos:start="31:22" pos:end="31:28">block_w</name></expr>)</condition><block pos:start="31:30" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:24">

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:11">src</name><operator pos:start="33:12" pos:end="33:13">+=</operator> <operator pos:start="33:15" pos:end="33:15">(</operator><literal type="number" pos:start="33:16" pos:end="33:17">1</literal><operator pos:start="33:17" pos:end="33:17">-</operator><name pos:start="33:18" pos:end="33:24">block_w</name><operator pos:start="33:25" pos:end="33:25">-</operator><name pos:start="33:26" pos:end="33:30">src_x</name><operator pos:start="33:31" pos:end="33:31">)</operator><operator pos:start="33:32" pos:end="33:32">*</operator><sizeof pos:start="33:33" pos:end="33:45">sizeof<argument_list pos:start="33:39" pos:end="33:45">(<argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><name pos:start="33:40" pos:end="33:44">pixel</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">src_x</name><operator pos:start="35:14" pos:end="35:14">=</operator><literal type="number" pos:start="35:15" pos:end="35:16">1</literal><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:23">block_w</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:30"><expr pos:start="41:5" pos:end="41:29"><name pos:start="41:5" pos:end="41:11">start_y</name><operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:29"><name pos:start="41:14" pos:end="41:18">FFMAX</name><argument_list pos:start="41:19" pos:end="41:29">(<argument pos:start="41:20" pos:end="41:20"><expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr></argument>, <argument pos:start="41:23" pos:end="41:28"><expr pos:start="41:23" pos:end="41:28"><operator pos:start="41:23" pos:end="41:23">-</operator><name pos:start="41:24" pos:end="41:28">src_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:11">start_x</name><operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:29"><name pos:start="43:14" pos:end="43:18">FFMAX</name><argument_list pos:start="43:19" pos:end="43:29">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr></argument>, <argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><operator pos:start="43:23" pos:end="43:23">-</operator><name pos:start="43:24" pos:end="43:28">src_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:9">end_y</name><operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:34"><name pos:start="45:12" pos:end="45:16">FFMIN</name><argument_list pos:start="45:17" pos:end="45:34">(<argument pos:start="45:18" pos:end="45:24"><expr pos:start="45:18" pos:end="45:24"><name pos:start="45:18" pos:end="45:24">block_h</name></expr></argument>, <argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:27">h</name><operator pos:start="45:28" pos:end="45:28">-</operator><name pos:start="45:29" pos:end="45:33">src_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:9">end_x</name><operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:34"><name pos:start="47:12" pos:end="47:16">FFMIN</name><argument_list pos:start="47:17" pos:end="47:34">(<argument pos:start="47:18" pos:end="47:24"><expr pos:start="47:18" pos:end="47:24"><name pos:start="47:18" pos:end="47:24">block_w</name></expr></argument>, <argument pos:start="47:27" pos:end="47:33"><expr pos:start="47:27" pos:end="47:33"><name pos:start="47:27" pos:end="47:27">w</name><operator pos:start="47:28" pos:end="47:28">-</operator><name pos:start="47:29" pos:end="47:33">src_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><call pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:14">av_assert2</name><argument_list pos:start="49:15" pos:end="49:42">(<argument pos:start="49:16" pos:end="49:41"><expr pos:start="49:16" pos:end="49:41"><name pos:start="49:16" pos:end="49:22">start_y</name> <operator pos:start="49:24" pos:end="49:24">&lt;</operator> <name pos:start="49:26" pos:end="49:30">end_y</name> <operator pos:start="49:32" pos:end="49:33">&amp;&amp;</operator> <name pos:start="49:35" pos:end="49:41">block_h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><call pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:14">av_assert2</name><argument_list pos:start="51:15" pos:end="51:42">(<argument pos:start="51:16" pos:end="51:41"><expr pos:start="51:16" pos:end="51:41"><name pos:start="51:16" pos:end="51:22">start_x</name> <operator pos:start="51:24" pos:end="51:24">&lt;</operator> <name pos:start="51:26" pos:end="51:30">end_x</name> <operator pos:start="51:32" pos:end="51:33">&amp;&amp;</operator> <name pos:start="51:35" pos:end="51:41">block_w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:5">w</name>    <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:16">end_x</name> <operator pos:start="55:18" pos:end="55:18">-</operator> <name pos:start="55:20" pos:end="55:26">start_x</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:52"><expr pos:start="57:5" pos:end="57:51"><name pos:start="57:5" pos:end="57:7">src</name> <operator pos:start="57:9" pos:end="57:10">+=</operator> <name pos:start="57:12" pos:end="57:18">start_y</name><operator pos:start="57:19" pos:end="57:19">*</operator><name pos:start="57:20" pos:end="57:27">linesize</name> <operator pos:start="57:29" pos:end="57:29">+</operator> <name pos:start="57:31" pos:end="57:37">start_x</name><operator pos:start="57:38" pos:end="57:38">*</operator><sizeof pos:start="57:39" pos:end="57:51">sizeof<argument_list pos:start="57:45" pos:end="57:51">(<argument pos:start="57:46" pos:end="57:50"><expr pos:start="57:46" pos:end="57:50"><name pos:start="57:46" pos:end="57:50">pixel</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:7">buf</name> <operator pos:start="59:9" pos:end="59:10">+=</operator> <name pos:start="59:12" pos:end="59:18">start_x</name><operator pos:start="59:19" pos:end="59:19">*</operator><sizeof pos:start="59:20" pos:end="59:32">sizeof<argument_list pos:start="59:26" pos:end="59:32">(<argument pos:start="59:27" pos:end="59:31"><expr pos:start="59:27" pos:end="59:31"><name pos:start="59:27" pos:end="59:31">pixel</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <comment type="line" pos:start="63:5" pos:end="63:9">//top</comment>

    <for pos:start="65:5" pos:end="71:5">for<control pos:start="65:8" pos:end="65:28">(<init pos:start="65:9" pos:end="65:12"><expr pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:9">y</name><operator pos:start="65:10" pos:end="65:10">=</operator><literal type="number" pos:start="65:11" pos:end="65:11">0</literal></expr>;</init> <condition pos:start="65:14" pos:end="65:23"><expr pos:start="65:14" pos:end="65:22"><name pos:start="65:14" pos:end="65:14">y</name><operator pos:start="65:15" pos:end="65:15">&lt;</operator><name pos:start="65:16" pos:end="65:22">start_y</name></expr>;</condition> <incr pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:25">y</name><operator pos:start="65:26" pos:end="65:27">++</operator></expr></incr>)</control><block pos:start="65:29" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:24">

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><call pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:14">memcpy</name><argument_list pos:start="67:15" pos:end="67:41">(<argument pos:start="67:16" pos:end="67:18"><expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">buf</name></expr></argument>, <argument pos:start="67:21" pos:end="67:23"><expr pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">src</name></expr></argument>, <argument pos:start="67:26" pos:end="67:40"><expr pos:start="67:26" pos:end="67:40"><name pos:start="67:26" pos:end="67:26">w</name><operator pos:start="67:27" pos:end="67:27">*</operator><sizeof pos:start="67:28" pos:end="67:40">sizeof<argument_list pos:start="67:34" pos:end="67:40">(<argument pos:start="67:35" pos:end="67:39"><expr pos:start="67:35" pos:end="67:39"><name pos:start="67:35" pos:end="67:39">pixel</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:24"><expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:11">buf</name> <operator pos:start="69:13" pos:end="69:14">+=</operator> <name pos:start="69:16" pos:end="69:23">linesize</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="75:5" pos:end="75:25">// copy existing part</comment>

    <for pos:start="77:5" pos:end="85:5">for<control pos:start="77:8" pos:end="77:23">(<init pos:start="77:9" pos:end="77:9">;</init> <condition pos:start="77:11" pos:end="77:18"><expr pos:start="77:11" pos:end="77:17"><name pos:start="77:11" pos:end="77:11">y</name><operator pos:start="77:12" pos:end="77:12">&lt;</operator><name pos:start="77:13" pos:end="77:17">end_y</name></expr>;</condition> <incr pos:start="77:20" pos:end="77:22"><expr pos:start="77:20" pos:end="77:22"><name pos:start="77:20" pos:end="77:20">y</name><operator pos:start="77:21" pos:end="77:22">++</operator></expr></incr>)</control><block pos:start="77:24" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:24">

        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><call pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:14">memcpy</name><argument_list pos:start="79:15" pos:end="79:41">(<argument pos:start="79:16" pos:end="79:18"><expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">buf</name></expr></argument>, <argument pos:start="79:21" pos:end="79:23"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">src</name></expr></argument>, <argument pos:start="79:26" pos:end="79:40"><expr pos:start="79:26" pos:end="79:40"><name pos:start="79:26" pos:end="79:26">w</name><operator pos:start="79:27" pos:end="79:27">*</operator><sizeof pos:start="79:28" pos:end="79:40">sizeof<argument_list pos:start="79:34" pos:end="79:40">(<argument pos:start="79:35" pos:end="79:39"><expr pos:start="79:35" pos:end="79:39"><name pos:start="79:35" pos:end="79:39">pixel</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:11">src</name> <operator pos:start="81:13" pos:end="81:14">+=</operator> <name pos:start="81:16" pos:end="81:23">linesize</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:11">buf</name> <operator pos:start="83:13" pos:end="83:14">+=</operator> <name pos:start="83:16" pos:end="83:23">linesize</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="89:5" pos:end="89:12">//bottom</comment>

    <expr_stmt pos:start="91:5" pos:end="91:20"><expr pos:start="91:5" pos:end="91:19"><name pos:start="91:5" pos:end="91:7">src</name> <operator pos:start="91:9" pos:end="91:10">-=</operator> <name pos:start="91:12" pos:end="91:19">linesize</name></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="99:5">for<control pos:start="93:8" pos:end="93:25">(<init pos:start="93:9" pos:end="93:9">;</init> <condition pos:start="93:11" pos:end="93:20"><expr pos:start="93:11" pos:end="93:19"><name pos:start="93:11" pos:end="93:11">y</name><operator pos:start="93:12" pos:end="93:12">&lt;</operator><name pos:start="93:13" pos:end="93:19">block_h</name></expr>;</condition> <incr pos:start="93:22" pos:end="93:24"><expr pos:start="93:22" pos:end="93:24"><name pos:start="93:22" pos:end="93:22">y</name><operator pos:start="93:23" pos:end="93:24">++</operator></expr></incr>)</control><block pos:start="93:26" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:24">

        <expr_stmt pos:start="95:9" pos:end="95:42"><expr pos:start="95:9" pos:end="95:41"><call pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:14">memcpy</name><argument_list pos:start="95:15" pos:end="95:41">(<argument pos:start="95:16" pos:end="95:18"><expr pos:start="95:16" pos:end="95:18"><name pos:start="95:16" pos:end="95:18">buf</name></expr></argument>, <argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">src</name></expr></argument>, <argument pos:start="95:26" pos:end="95:40"><expr pos:start="95:26" pos:end="95:40"><name pos:start="95:26" pos:end="95:26">w</name><operator pos:start="95:27" pos:end="95:27">*</operator><sizeof pos:start="95:28" pos:end="95:40">sizeof<argument_list pos:start="95:34" pos:end="95:40">(<argument pos:start="95:35" pos:end="95:39"><expr pos:start="95:35" pos:end="95:39"><name pos:start="95:35" pos:end="95:39">pixel</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:24"><expr pos:start="97:9" pos:end="97:23"><name pos:start="97:9" pos:end="97:11">buf</name> <operator pos:start="97:13" pos:end="97:14">+=</operator> <name pos:start="97:16" pos:end="97:23">linesize</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="103:5" pos:end="103:54"><expr pos:start="103:5" pos:end="103:53"><name pos:start="103:5" pos:end="103:7">buf</name> <operator pos:start="103:9" pos:end="103:10">-=</operator> <name pos:start="103:12" pos:end="103:18">block_h</name> <operator pos:start="103:20" pos:end="103:20">*</operator> <name pos:start="103:22" pos:end="103:29">linesize</name> <operator pos:start="103:31" pos:end="103:31">+</operator> <name pos:start="103:33" pos:end="103:39">start_x</name><operator pos:start="103:40" pos:end="103:40">*</operator><sizeof pos:start="103:41" pos:end="103:53">sizeof<argument_list pos:start="103:47" pos:end="103:53">(<argument pos:start="103:48" pos:end="103:52"><expr pos:start="103:48" pos:end="103:52"><name pos:start="103:48" pos:end="103:52">pixel</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <while pos:start="105:5" pos:end="129:5">while <condition pos:start="105:11" pos:end="105:21">(<expr pos:start="105:12" pos:end="105:20"><name pos:start="105:12" pos:end="105:18">block_h</name><operator pos:start="105:19" pos:end="105:20">--</operator></expr>)</condition><block pos:start="105:22" pos:end="129:5">{<block_content pos:start="107:9" pos:end="127:24">

        <decl_stmt pos:start="107:9" pos:end="107:34"><decl pos:start="107:9" pos:end="107:33"><type pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:13">pixel</name> <modifier pos:start="107:15" pos:end="107:15">*</modifier></type><name pos:start="107:16" pos:end="107:19">bufp</name> <init pos:start="107:21" pos:end="107:33">= <expr pos:start="107:23" pos:end="107:33"><operator pos:start="107:23" pos:end="107:23">(</operator><name pos:start="107:24" pos:end="107:28">pixel</name><operator pos:start="107:29" pos:end="107:29">*</operator><operator pos:start="107:30" pos:end="107:30">)</operator><name pos:start="107:31" pos:end="107:33">buf</name></expr></init></decl>;</decl_stmt>

       <comment type="line" pos:start="109:8" pos:end="109:13">//left</comment>

        <for pos:start="111:9" pos:end="115:9">for<control pos:start="111:12" pos:end="111:32">(<init pos:start="111:13" pos:end="111:16"><expr pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:13">x</name><operator pos:start="111:14" pos:end="111:14">=</operator><literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>;</init> <condition pos:start="111:18" pos:end="111:27"><expr pos:start="111:18" pos:end="111:26"><name pos:start="111:18" pos:end="111:18">x</name><operator pos:start="111:19" pos:end="111:19">&lt;</operator><name pos:start="111:20" pos:end="111:26">start_x</name></expr>;</condition> <incr pos:start="111:29" pos:end="111:31"><expr pos:start="111:29" pos:end="111:31"><name pos:start="111:29" pos:end="111:29">x</name><operator pos:start="111:30" pos:end="111:31">++</operator></expr></incr>)</control><block pos:start="111:33" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:36">

            <expr_stmt pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:16">bufp</name><index pos:start="113:17" pos:end="113:19">[<expr pos:start="113:18" pos:end="113:18"><name pos:start="113:18" pos:end="113:18">x</name></expr>]</index></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:35"><name pos:start="113:23" pos:end="113:26">bufp</name><index pos:start="113:27" pos:end="113:35">[<expr pos:start="113:28" pos:end="113:34"><name pos:start="113:28" pos:end="113:34">start_x</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



       <comment type="line" pos:start="119:8" pos:end="119:14">//right</comment>

        <for pos:start="121:9" pos:end="125:9">for<control pos:start="121:12" pos:end="121:36">(<init pos:start="121:13" pos:end="121:20"><expr pos:start="121:13" pos:end="121:19"><name pos:start="121:13" pos:end="121:13">x</name><operator pos:start="121:14" pos:end="121:14">=</operator><name pos:start="121:15" pos:end="121:19">end_x</name></expr>;</init> <condition pos:start="121:22" pos:end="121:31"><expr pos:start="121:22" pos:end="121:30"><name pos:start="121:22" pos:end="121:22">x</name><operator pos:start="121:23" pos:end="121:23">&lt;</operator><name pos:start="121:24" pos:end="121:30">block_w</name></expr>;</condition> <incr pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:33">x</name><operator pos:start="121:34" pos:end="121:35">++</operator></expr></incr>)</control><block pos:start="121:37" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:38">

            <expr_stmt pos:start="123:13" pos:end="123:38"><expr pos:start="123:13" pos:end="123:37"><name pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:16">bufp</name><index pos:start="123:17" pos:end="123:19">[<expr pos:start="123:18" pos:end="123:18"><name pos:start="123:18" pos:end="123:18">x</name></expr>]</index></name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:26">bufp</name><index pos:start="123:27" pos:end="123:37">[<expr pos:start="123:28" pos:end="123:36"><name pos:start="123:28" pos:end="123:32">end_x</name> <operator pos:start="123:34" pos:end="123:34">-</operator> <literal type="number" pos:start="123:36" pos:end="123:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="127:9" pos:end="127:24"><expr pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:11">buf</name> <operator pos:start="127:13" pos:end="127:14">+=</operator> <name pos:start="127:16" pos:end="127:23">linesize</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
