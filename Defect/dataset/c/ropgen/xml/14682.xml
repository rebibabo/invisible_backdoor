<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14682.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">opt_pass</name><parameter_list pos:start="1:21" pos:end="1:42">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:33"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">pass_str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:19">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">pass</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:26"><expr pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:8">pass</name> <operator pos:start="7:10" pos:end="7:10">=</operator> <call pos:start="7:12" pos:end="7:25"><name pos:start="7:12" pos:end="7:15">atoi</name><argument_list pos:start="7:16" pos:end="7:25">(<argument pos:start="7:17" pos:end="7:24"><expr pos:start="7:17" pos:end="7:24"><name pos:start="7:17" pos:end="7:24">pass_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:31">(<expr pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:12">pass</name> <operator pos:start="9:14" pos:end="9:15">!=</operator> <literal type="number" pos:start="9:17" pos:end="9:17">1</literal> <operator pos:start="9:19" pos:end="9:20">&amp;&amp;</operator> <name pos:start="9:22" pos:end="9:25">pass</name> <operator pos:start="9:27" pos:end="9:28">!=</operator> <literal type="number" pos:start="9:30" pos:end="9:30">2</literal></expr>)</condition> <block pos:start="9:33" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:23">

        <expr_stmt pos:start="11:9" pos:end="11:60"><expr pos:start="11:9" pos:end="11:59"><call pos:start="11:9" pos:end="11:59"><name pos:start="11:9" pos:end="11:15">fprintf</name><argument_list pos:start="11:16" pos:end="11:59">(<argument pos:start="11:17" pos:end="11:22"><expr pos:start="11:17" pos:end="11:22"><name pos:start="11:17" pos:end="11:22">stderr</name></expr></argument>, <argument pos:start="11:25" pos:end="11:58"><expr pos:start="11:25" pos:end="11:58"><literal type="string" pos:start="11:25" pos:end="11:58">"pass number can be only 1 or 2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:23"><expr pos:start="13:9" pos:end="13:22"><call pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:19">ffmpeg_exit</name><argument_list pos:start="13:20" pos:end="13:22">(<argument pos:start="13:21" pos:end="13:21"><expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11">do_pass</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18">pass</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
