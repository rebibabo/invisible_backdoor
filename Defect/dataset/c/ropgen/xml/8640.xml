<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8640.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">dacr_write</name><parameter_list pos:start="1:23" pos:end="1:80">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:34">CPUARMState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:63"><decl pos:start="1:42" pos:end="1:63"><type pos:start="1:42" pos:end="1:63"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:59">ARMCPRegInfo</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ri</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:79"><decl pos:start="1:66" pos:end="1:79"><type pos:start="1:66" pos:end="1:79"><name pos:start="1:66" pos:end="1:73">uint64_t</name></type> <name pos:start="1:75" pos:end="1:79">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:27">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name> <init pos:start="5:17" pos:end="5:38">= <expr pos:start="5:19" pos:end="5:38"><call pos:start="5:19" pos:end="5:38"><name pos:start="5:19" pos:end="5:33">arm_env_get_cpu</name><argument_list pos:start="5:34" pos:end="5:38">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:13">cp15</name><operator pos:start="9:14" pos:end="9:14">.</operator><name pos:start="9:15" pos:end="9:16">c3</name></name> <operator pos:start="9:18" pos:end="9:18">=</operator> <name pos:start="9:20" pos:end="9:24">value</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:13">tlb_flush</name><argument_list pos:start="11:14" pos:end="11:26">(<argument pos:start="11:15" pos:end="11:22"><expr pos:start="11:15" pos:end="11:22"><call pos:start="11:15" pos:end="11:22"><name pos:start="11:15" pos:end="11:17">CPU</name><argument_list pos:start="11:18" pos:end="11:22">(<argument pos:start="11:19" pos:end="11:21"><expr pos:start="11:19" pos:end="11:21"><name pos:start="11:19" pos:end="11:21">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="11:25" pos:end="11:25"><expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="11:29" pos:end="11:72">/* Flush TLB as domain not tracked in TLB */</comment>

</block_content>}</block></function>
</unit>
