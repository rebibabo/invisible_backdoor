<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20783.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vmdk_init_tables</name><parameter_list pos:start="1:28" pos:end="3:41">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:68"><decl pos:start="1:51" pos:end="1:68"><type pos:start="1:51" pos:end="1:68"><name pos:start="1:51" pos:end="1:60">VmdkExtent</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">extent</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:33">Error</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier><modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">l1_size</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:27">/* read the L1 table */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:11">l1_size</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:29"><name pos:start="15:15" pos:end="15:20">extent</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:29">l1_size</name></name> <operator pos:start="15:31" pos:end="15:31">*</operator> <sizeof pos:start="15:33" pos:end="15:48">sizeof<argument_list pos:start="15:39" pos:end="15:48">(<argument pos:start="15:40" pos:end="15:47"><expr pos:start="15:40" pos:end="15:47"><name pos:start="15:40" pos:end="15:47">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:10">extent</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:20">l1_table</name></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <call pos:start="17:24" pos:end="17:44"><name pos:start="17:24" pos:end="17:35">g_try_malloc</name><argument_list pos:start="17:36" pos:end="17:44">(<argument pos:start="17:37" pos:end="17:43"><expr pos:start="17:37" pos:end="17:43"><name pos:start="17:37" pos:end="17:43">l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:15">l1_size</name> <operator pos:start="19:17" pos:end="19:18">&amp;&amp;</operator> <name pos:start="19:20" pos:end="19:35"><name pos:start="19:20" pos:end="19:25">extent</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:35">l1_table</name></name> <operator pos:start="19:37" pos:end="19:38">==</operator> <name pos:start="19:40" pos:end="19:43">NULL</name></expr>)</condition> <block pos:start="19:46" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:23">

        <return pos:start="21:9" pos:end="21:23">return <expr pos:start="21:16" pos:end="21:22"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="33:30"><expr pos:start="27:5" pos:end="33:29"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="33:29"><name pos:start="27:11" pos:end="27:20">bdrv_pread</name><argument_list pos:start="27:21" pos:end="33:29">(<argument pos:start="27:22" pos:end="27:33"><expr pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:27">extent</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:33">file</name></name></expr></argument>,

                     <argument pos:start="29:22" pos:end="29:44"><expr pos:start="29:22" pos:end="29:44"><name pos:start="29:22" pos:end="29:44"><name pos:start="29:22" pos:end="29:27">extent</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:44">l1_table_offset</name></name></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:37"><expr pos:start="31:22" pos:end="31:37"><name pos:start="31:22" pos:end="31:37"><name pos:start="31:22" pos:end="31:27">extent</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:37">l1_table</name></name></expr></argument>,

                     <argument pos:start="33:22" pos:end="33:28"><expr pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:28">l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="45:5"><if pos:start="35:5" pos:end="45:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:21">

        <expr_stmt pos:start="37:9" pos:end="41:49"><expr pos:start="37:9" pos:end="41:48"><call pos:start="37:9" pos:end="41:48"><name pos:start="37:9" pos:end="37:24">error_setg_errno</name><argument_list pos:start="37:25" pos:end="41:48">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">errp</name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><operator pos:start="37:32" pos:end="37:32">-</operator><name pos:start="37:33" pos:end="37:35">ret</name></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:67"><expr pos:start="39:26" pos:end="39:67"><literal type="string" pos:start="39:26" pos:end="39:67">"Could not read l1 table from extent '%s'"</literal></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:47"><expr pos:start="41:26" pos:end="41:47"><name pos:start="41:26" pos:end="41:47"><name pos:start="41:26" pos:end="41:31">extent</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:37">file</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:47">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">fail_l1</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <for pos:start="47:5" pos:end="51:5">for <control pos:start="47:9" pos:end="47:41">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:36"><expr pos:start="47:17" pos:end="47:35"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:26">extent</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:35">l1_size</name></name></expr>;</condition> <incr pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:38">i</name><operator pos:start="47:39" pos:end="47:40">++</operator></expr></incr>)</control> <block pos:start="47:43" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:43">

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><call pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:20">le32_to_cpus</name><argument_list pos:start="49:21" pos:end="49:42">(<argument pos:start="49:22" pos:end="49:41"><expr pos:start="49:22" pos:end="49:41"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:41"><name pos:start="49:23" pos:end="49:28">extent</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:38">l1_table</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="55:5" pos:end="93:5"><if pos:start="55:5" pos:end="93:5">if <condition pos:start="55:8" pos:end="55:39">(<expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:14">extent</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:38">l1_backup_table_offset</name></name></expr>)</condition> <block pos:start="55:41" pos:end="93:5">{<block_content pos:start="57:9" pos:end="91:9">

        <expr_stmt pos:start="57:9" pos:end="57:56"><expr pos:start="57:9" pos:end="57:55"><name pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:14">extent</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:31">l1_backup_table</name></name> <operator pos:start="57:33" pos:end="57:33">=</operator> <call pos:start="57:35" pos:end="57:55"><name pos:start="57:35" pos:end="57:46">g_try_malloc</name><argument_list pos:start="57:47" pos:end="57:55">(<argument pos:start="57:48" pos:end="57:54"><expr pos:start="57:48" pos:end="57:54"><name pos:start="57:48" pos:end="57:54">l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:55">(<expr pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:19">l1_size</name> <operator pos:start="59:21" pos:end="59:22">&amp;&amp;</operator> <name pos:start="59:24" pos:end="59:46"><name pos:start="59:24" pos:end="59:29">extent</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:46">l1_backup_table</name></name> <operator pos:start="59:48" pos:end="59:49">==</operator> <name pos:start="59:51" pos:end="59:54">NULL</name></expr>)</condition> <block pos:start="59:57" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:25">

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <operator pos:start="61:19" pos:end="61:19">-</operator><name pos:start="61:20" pos:end="61:25">ENOMEM</name></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:25">goto <name pos:start="63:18" pos:end="63:24">fail_l1</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="73:34"><expr pos:start="67:9" pos:end="73:33"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="73:33"><name pos:start="67:15" pos:end="67:24">bdrv_pread</name><argument_list pos:start="67:25" pos:end="73:33">(<argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:31">extent</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:37">file</name></name></expr></argument>,

                         <argument pos:start="69:26" pos:end="69:55"><expr pos:start="69:26" pos:end="69:55"><name pos:start="69:26" pos:end="69:55"><name pos:start="69:26" pos:end="69:31">extent</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:55">l1_backup_table_offset</name></name></expr></argument>,

                         <argument pos:start="71:26" pos:end="71:48"><expr pos:start="71:26" pos:end="71:48"><name pos:start="71:26" pos:end="71:48"><name pos:start="71:26" pos:end="71:31">extent</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:48">l1_backup_table</name></name></expr></argument>,

                         <argument pos:start="73:26" pos:end="73:32"><expr pos:start="73:26" pos:end="73:32"><name pos:start="73:26" pos:end="73:32">l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="85:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition> <block pos:start="75:22" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:26">

            <expr_stmt pos:start="77:13" pos:end="81:53"><expr pos:start="77:13" pos:end="81:52"><call pos:start="77:13" pos:end="81:52"><name pos:start="77:13" pos:end="77:28">error_setg_errno</name><argument_list pos:start="77:29" pos:end="81:52">(<argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">errp</name></expr></argument>, <argument pos:start="77:36" pos:end="77:39"><expr pos:start="77:36" pos:end="77:39"><operator pos:start="77:36" pos:end="77:36">-</operator><name pos:start="77:37" pos:end="77:39">ret</name></expr></argument>,

                             <argument pos:start="79:30" pos:end="79:78"><expr pos:start="79:30" pos:end="79:78"><literal type="string" pos:start="79:30" pos:end="79:78">"Could not read l1 backup table from extent '%s'"</literal></expr></argument>,

                             <argument pos:start="81:30" pos:end="81:51"><expr pos:start="81:30" pos:end="81:51"><name pos:start="81:30" pos:end="81:51"><name pos:start="81:30" pos:end="81:35">extent</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:41">file</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:51">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="83:13" pos:end="83:26">goto <name pos:start="83:18" pos:end="83:25">fail_l1b</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <for pos:start="87:9" pos:end="91:9">for <control pos:start="87:13" pos:end="87:45">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">i</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:40"><expr pos:start="87:21" pos:end="87:39"><name pos:start="87:21" pos:end="87:21">i</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:39"><name pos:start="87:25" pos:end="87:30">extent</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:39">l1_size</name></name></expr>;</condition> <incr pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:42">i</name><operator pos:start="87:43" pos:end="87:44">++</operator></expr></incr>)</control> <block pos:start="87:47" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:54">

            <expr_stmt pos:start="89:13" pos:end="89:54"><expr pos:start="89:13" pos:end="89:53"><call pos:start="89:13" pos:end="89:53"><name pos:start="89:13" pos:end="89:24">le32_to_cpus</name><argument_list pos:start="89:25" pos:end="89:53">(<argument pos:start="89:26" pos:end="89:52"><expr pos:start="89:26" pos:end="89:52"><operator pos:start="89:26" pos:end="89:26">&amp;</operator><name pos:start="89:27" pos:end="89:52"><name pos:start="89:27" pos:end="89:32">extent</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:49">l1_backup_table</name><index pos:start="89:50" pos:end="89:52">[<expr pos:start="89:51" pos:end="89:51"><name pos:start="89:51" pos:end="89:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="99:57"><expr pos:start="97:5" pos:end="99:56"><name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:10">extent</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:20">l2_cache</name></name> <operator pos:start="97:22" pos:end="97:22">=</operator>

        <call pos:start="99:9" pos:end="99:56"><name pos:start="99:9" pos:end="99:13">g_new</name><argument_list pos:start="99:14" pos:end="99:56">(<argument pos:start="99:15" pos:end="99:22"><expr pos:start="99:15" pos:end="99:22"><name pos:start="99:15" pos:end="99:22">uint32_t</name></expr></argument>, <argument pos:start="99:25" pos:end="99:55"><expr pos:start="99:25" pos:end="99:55"><name pos:start="99:25" pos:end="99:39"><name pos:start="99:25" pos:end="99:30">extent</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:39">l2_size</name></name> <operator pos:start="99:41" pos:end="99:41">*</operator> <name pos:start="99:43" pos:end="99:55">L2_CACHE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

 <label pos:start="103:2" pos:end="103:10"><name pos:start="103:2" pos:end="103:9">fail_l1b</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:36"><expr pos:start="105:5" pos:end="105:35"><call pos:start="105:5" pos:end="105:35"><name pos:start="105:5" pos:end="105:10">g_free</name><argument_list pos:start="105:11" pos:end="105:35">(<argument pos:start="105:12" pos:end="105:34"><expr pos:start="105:12" pos:end="105:34"><name pos:start="105:12" pos:end="105:34"><name pos:start="105:12" pos:end="105:17">extent</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:34">l1_backup_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 <label pos:start="107:2" pos:end="107:9"><name pos:start="107:2" pos:end="107:8">fail_l1</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><call pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:10">g_free</name><argument_list pos:start="109:11" pos:end="109:28">(<argument pos:start="109:12" pos:end="109:27"><expr pos:start="109:12" pos:end="109:27"><name pos:start="109:12" pos:end="109:27"><name pos:start="109:12" pos:end="109:17">extent</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:27">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:15">return <expr pos:start="111:12" pos:end="111:14"><name pos:start="111:12" pos:end="111:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
