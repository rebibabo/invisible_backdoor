<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6213.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">PullupField</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:36">make_field_queue</name><parameter_list pos:start="1:37" pos:end="1:63">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:50">PullupContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:62"><decl pos:start="1:56" pos:end="1:62"><type pos:start="1:56" pos:end="1:62"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:62">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:16">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">PullupField</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">head</name></decl>, <decl pos:start="5:24" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:17"><modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">f</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:5">f</name> <operator pos:start="9:7" pos:end="9:7">=</operator> <name pos:start="9:9" pos:end="9:12">head</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:40"><name pos:start="9:16" pos:end="9:25">av_mallocz</name><argument_list pos:start="9:26" pos:end="9:40">(<argument pos:start="9:27" pos:end="9:39"><expr pos:start="9:27" pos:end="9:39"><sizeof pos:start="9:27" pos:end="9:39">sizeof<argument_list pos:start="9:33" pos:end="9:39">(<argument pos:start="9:34" pos:end="9:38"><expr pos:start="9:34" pos:end="9:38"><operator pos:start="9:34" pos:end="9:34">*</operator><name pos:start="9:35" pos:end="9:38">head</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="13:20"><if pos:start="11:5" pos:end="13:20">if <condition pos:start="11:8" pos:end="11:11">(<expr pos:start="11:9" pos:end="11:10"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:10">f</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:20"><block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:32">(<expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:21">alloc_metrics</name><argument_list pos:start="17:22" pos:end="17:27">(<argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">s</name></expr></argument>, <argument pos:start="17:26" pos:end="17:26"><expr pos:start="17:26" pos:end="17:26"><name pos:start="17:26" pos:end="17:26">f</name></expr></argument>)</argument_list></call> <operator pos:start="17:29" pos:end="17:29">&lt;</operator> <literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr>)</condition> <block pos:start="17:34" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:20">

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><call pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:15">av_free</name><argument_list pos:start="19:16" pos:end="19:18">(<argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="27:5" pos:end="53:5">for <control pos:start="27:9" pos:end="27:26">(<init pos:start="27:10" pos:end="27:10">;</init> <condition pos:start="27:12" pos:end="27:19"><expr pos:start="27:12" pos:end="27:18"><name pos:start="27:12" pos:end="27:14">len</name> <operator pos:start="27:16" pos:end="27:16">&gt;</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</condition> <incr pos:start="27:21" pos:end="27:25"><expr pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:23">len</name><operator pos:start="27:24" pos:end="27:25">--</operator></expr></incr>)</control> <block pos:start="27:28" pos:end="53:5">{<block_content pos:start="29:9" pos:end="51:9">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:9">f</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:15">next</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:46"><name pos:start="29:19" pos:end="29:28">av_mallocz</name><argument_list pos:start="29:29" pos:end="29:46">(<argument pos:start="29:30" pos:end="29:45"><expr pos:start="29:30" pos:end="29:45"><sizeof pos:start="29:30" pos:end="29:45">sizeof<argument_list pos:start="29:36" pos:end="29:45">(<argument pos:start="29:37" pos:end="29:44"><expr pos:start="29:37" pos:end="29:44"><operator pos:start="29:37" pos:end="29:37">*</operator><name pos:start="29:38" pos:end="29:44"><name pos:start="29:38" pos:end="29:38">f</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:44">next</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:20"><name pos:start="31:14" pos:end="31:14">f</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:20">next</name></name></expr>)</condition> <block pos:start="31:23" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:24">

            <expr_stmt pos:start="33:13" pos:end="33:39"><expr pos:start="33:13" pos:end="33:38"><call pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:28">free_field_queue</name><argument_list pos:start="33:29" pos:end="33:38">(<argument pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:33">head</name></expr></argument>, <argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:37">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:24">return <expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:9">f</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:15">next</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">prev</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:25">f</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:9">f</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:13">f</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:19">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:36">(<expr pos:start="45:13" pos:end="45:35"><call pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:25">alloc_metrics</name><argument_list pos:start="45:26" pos:end="45:31">(<argument pos:start="45:27" pos:end="45:27"><expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">s</name></expr></argument>, <argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">f</name></expr></argument>)</argument_list></call> <operator pos:start="45:33" pos:end="45:33">&lt;</operator> <literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr>)</condition> <block pos:start="45:38" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:24">

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><call pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:28">free_field_queue</name><argument_list pos:start="47:29" pos:end="47:38">(<argument pos:start="47:30" pos:end="47:33"><expr pos:start="47:30" pos:end="47:33"><name pos:start="47:30" pos:end="47:33">head</name></expr></argument>, <argument pos:start="47:36" pos:end="47:37"><expr pos:start="47:36" pos:end="47:37"><operator pos:start="47:36" pos:end="47:36">&amp;</operator><name pos:start="47:37" pos:end="47:37">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:24">return <expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:5">f</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:11">next</name></name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:18">head</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:19"><expr pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:8">head</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:14">prev</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:18">f</name></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:16">return <expr pos:start="63:12" pos:end="63:15"><name pos:start="63:12" pos:end="63:15">head</name></expr>;</return>

</block_content>}</block></function>
</unit>
