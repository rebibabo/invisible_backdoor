<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15160.c" pos:tabs="8"><function pos:start="1:1" pos:end="98:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">ff_xvid_rate_control_init</name><parameter_list pos:start="1:30" pos:end="1:48">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list><block pos:start="1:49" pos:end="98:1">{<block_content pos:start="3:5" pos:end="96:13">

    <decl_stmt pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:10"><name pos:start="3:5" pos:end="3:8">char</name> <modifier pos:start="3:10" pos:end="3:10">*</modifier></type><name pos:start="3:11" pos:end="3:18">tmp_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name></decl>, <decl pos:start="5:13" pos:end="5:13"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:13">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">xvid_plg_create_t</name></type> <name pos:start="7:23" pos:end="7:37">xvid_plg_create</name> <init pos:start="7:39" pos:end="7:45">= <expr pos:start="7:41" pos:end="7:45"><block pos:start="7:41" pos:end="7:45">{ <expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24">xvid_plugin_2pass2_t</name></type> <name pos:start="9:26" pos:end="9:36">xvid_2pass2</name>  <init pos:start="9:39" pos:end="9:45">= <expr pos:start="9:41" pos:end="9:45"><block pos:start="9:41" pos:end="9:45">{ <expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:6">fd</name><operator pos:start="13:7" pos:end="13:7">=</operator><call pos:start="13:8" pos:end="13:53"><name pos:start="13:8" pos:end="13:18">av_tempfile</name><argument_list pos:start="13:19" pos:end="13:53">(<argument pos:start="13:20" pos:end="13:28"><expr pos:start="13:20" pos:end="13:28"><literal type="string" pos:start="13:20" pos:end="13:28">"xvidrc."</literal></expr></argument>, <argument pos:start="13:31" pos:end="13:39"><expr pos:start="13:31" pos:end="13:39"><operator pos:start="13:31" pos:end="13:31">&amp;</operator><name pos:start="13:32" pos:end="13:39">tmp_name</name></expr></argument>, <argument pos:start="13:42" pos:end="13:42"><expr pos:start="13:42" pos:end="13:42"><literal type="number" pos:start="13:42" pos:end="13:42">0</literal></expr></argument>, <argument pos:start="13:45" pos:end="13:52"><expr pos:start="13:45" pos:end="13:52"><name pos:start="13:45" pos:end="13:52"><name pos:start="13:45" pos:end="13:45">s</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:52">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>)</condition> <block pos:start="15:19" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><call pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:74">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr></argument>, <argument pos:start="17:22" pos:end="17:33"><expr pos:start="17:22" pos:end="17:33"><name pos:start="17:22" pos:end="17:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:36" pos:end="17:73"><expr pos:start="17:36" pos:end="17:73"><literal type="string" pos:start="17:36" pos:end="17:73">"Can't create temporary pass2 file.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="25:5" pos:end="57:5">for<control pos:start="25:8" pos:end="25:46">(<init pos:start="25:9" pos:end="25:12"><expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">i</name><operator pos:start="25:10" pos:end="25:10">=</operator><literal type="number" pos:start="25:11" pos:end="25:11">0</literal></expr>;</init> <condition pos:start="25:14" pos:end="25:41"><expr pos:start="25:14" pos:end="25:40"><name pos:start="25:14" pos:end="25:14">i</name><operator pos:start="25:15" pos:end="25:15">&lt;</operator><name pos:start="25:16" pos:end="25:40"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:28">rc_context</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:40">num_entries</name></name></expr>;</condition> <incr pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:43">i</name><operator pos:start="25:44" pos:end="25:45">++</operator></expr></incr>)</control><block pos:start="25:47" pos:end="57:5">{<block_content pos:start="27:9" pos:end="55:9">

        <decl_stmt pos:start="27:9" pos:end="27:50"><decl pos:start="27:9" pos:end="27:49"><type pos:start="27:9" pos:end="27:25"><specifier pos:start="27:9" pos:end="27:14">static</specifier> <specifier pos:start="27:16" pos:end="27:20">const</specifier> <name pos:start="27:22" pos:end="27:25">char</name></type> <name pos:start="27:27" pos:end="27:39"><name pos:start="27:27" pos:end="27:37">frame_types</name><index pos:start="27:38" pos:end="27:39">[]</index></name> <init pos:start="27:41" pos:end="27:49">= <expr pos:start="27:43" pos:end="27:49"><literal type="string" pos:start="27:43" pos:end="27:49">" ipbs"</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:22"><decl pos:start="29:9" pos:end="29:21"><type pos:start="29:9" pos:end="29:12"><name pos:start="29:9" pos:end="29:12">char</name></type> <name pos:start="29:14" pos:end="29:21"><name pos:start="29:14" pos:end="29:16">tmp</name><index pos:start="29:17" pos:end="29:21">[<expr pos:start="29:18" pos:end="29:20"><literal type="number" pos:start="29:18" pos:end="29:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:30"><decl pos:start="31:9" pos:end="31:29"><type pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:24">RateControlEntry</name> <modifier pos:start="31:26" pos:end="31:26">*</modifier></type><name pos:start="31:27" pos:end="31:29">rce</name></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:11">rce</name><operator pos:start="35:12" pos:end="35:12">=</operator> <operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:36"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:27">rc_context</name><operator pos:start="35:28" pos:end="35:28">.</operator><name pos:start="35:29" pos:end="35:33">entry</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="43:124"><expr pos:start="39:9" pos:end="43:123"><call pos:start="39:9" pos:end="43:123"><name pos:start="39:9" pos:end="39:16">snprintf</name><argument_list pos:start="39:17" pos:end="43:123">(<argument pos:start="39:18" pos:end="39:20"><expr pos:start="39:18" pos:end="39:20"><name pos:start="39:18" pos:end="39:20">tmp</name></expr></argument>, <argument pos:start="39:23" pos:end="39:33"><expr pos:start="39:23" pos:end="39:33"><sizeof pos:start="39:23" pos:end="39:33">sizeof<argument_list pos:start="39:29" pos:end="39:33">(<argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:36" pos:end="39:59"><expr pos:start="39:36" pos:end="39:59"><literal type="string" pos:start="39:36" pos:end="39:59">"%c %d %d %d %d %d %d\n"</literal></expr></argument>,

            <argument pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:23">frame_types</name><index pos:start="41:24" pos:end="41:39">[<expr pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:38"><name pos:start="41:25" pos:end="41:27">rce</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:38">pict_type</name></name></expr>]</index></name></expr></argument>, <argument pos:start="41:42" pos:end="41:80"><expr pos:start="41:42" pos:end="41:80"><operator pos:start="41:42" pos:end="41:42">(</operator><name pos:start="41:43" pos:end="41:45">int</name><operator pos:start="41:46" pos:end="41:46">)</operator><call pos:start="41:47" pos:end="41:80"><name pos:start="41:47" pos:end="41:52">lrintf</name><argument_list pos:start="41:53" pos:end="41:80">(<argument pos:start="41:54" pos:end="41:79"><expr pos:start="41:54" pos:end="41:79"><name pos:start="41:54" pos:end="41:64"><name pos:start="41:54" pos:end="41:56">rce</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:64">qscale</name></name> <operator pos:start="41:66" pos:end="41:66">/</operator> <name pos:start="41:68" pos:end="41:79">FF_QP2LAMBDA</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:83" pos:end="41:94"><expr pos:start="41:83" pos:end="41:94"><name pos:start="41:83" pos:end="41:94"><name pos:start="41:83" pos:end="41:85">rce</name><operator pos:start="41:86" pos:end="41:87">-&gt;</operator><name pos:start="41:88" pos:end="41:94">i_count</name></name></expr></argument>, <argument pos:start="41:97" pos:end="41:138"><expr pos:start="41:97" pos:end="41:138"><name pos:start="41:97" pos:end="41:105"><name pos:start="41:97" pos:end="41:97">s</name><operator pos:start="41:98" pos:end="41:99">-&gt;</operator><name pos:start="41:100" pos:end="41:105">mb_num</name></name> <operator pos:start="41:107" pos:end="41:107">-</operator> <name pos:start="41:109" pos:end="41:120"><name pos:start="41:109" pos:end="41:111">rce</name><operator pos:start="41:112" pos:end="41:113">-&gt;</operator><name pos:start="41:114" pos:end="41:120">i_count</name></name> <operator pos:start="41:122" pos:end="41:122">-</operator> <name pos:start="41:124" pos:end="41:138"><name pos:start="41:124" pos:end="41:126">rce</name><operator pos:start="41:127" pos:end="41:128">-&gt;</operator><name pos:start="41:129" pos:end="41:138">skip_count</name></name></expr></argument>,

            <argument pos:start="43:13" pos:end="43:27"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:15">rce</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">skip_count</name></name></expr></argument>, <argument pos:start="43:30" pos:end="43:85"><expr pos:start="43:30" pos:end="43:85"><operator pos:start="43:30" pos:end="43:30">(</operator><name pos:start="43:31" pos:end="43:45"><name pos:start="43:31" pos:end="43:33">rce</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:45">i_tex_bits</name></name> <operator pos:start="43:47" pos:end="43:47">+</operator> <name pos:start="43:49" pos:end="43:63"><name pos:start="43:49" pos:end="43:51">rce</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:63">p_tex_bits</name></name> <operator pos:start="43:65" pos:end="43:65">+</operator> <name pos:start="43:67" pos:end="43:80"><name pos:start="43:67" pos:end="43:69">rce</name><operator pos:start="43:70" pos:end="43:71">-&gt;</operator><name pos:start="43:72" pos:end="43:80">misc_bits</name></name><operator pos:start="43:81" pos:end="43:81">+</operator><literal type="number" pos:start="43:82" pos:end="43:82">7</literal><operator pos:start="43:83" pos:end="43:83">)</operator><operator pos:start="43:84" pos:end="43:84">/</operator><literal type="number" pos:start="43:85" pos:end="43:85">8</literal></expr></argument>, <argument pos:start="43:88" pos:end="43:122"><expr pos:start="43:88" pos:end="43:122"><operator pos:start="43:88" pos:end="43:88">(</operator><name pos:start="43:89" pos:end="43:104"><name pos:start="43:89" pos:end="43:91">rce</name><operator pos:start="43:92" pos:end="43:93">-&gt;</operator><name pos:start="43:94" pos:end="43:104">header_bits</name></name><operator pos:start="43:105" pos:end="43:105">+</operator><name pos:start="43:106" pos:end="43:117"><name pos:start="43:106" pos:end="43:108">rce</name><operator pos:start="43:109" pos:end="43:110">-&gt;</operator><name pos:start="43:111" pos:end="43:117">mv_bits</name></name><operator pos:start="43:118" pos:end="43:118">+</operator><literal type="number" pos:start="43:119" pos:end="43:119">7</literal><operator pos:start="43:120" pos:end="43:120">)</operator><operator pos:start="43:121" pos:end="43:121">/</operator><literal type="number" pos:start="43:122" pos:end="43:122">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:44">(<expr pos:start="47:13" pos:end="47:43"><call pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:17">write</name><argument_list pos:start="47:18" pos:end="47:39">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">fd</name></expr></argument>, <argument pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><name pos:start="47:23" pos:end="47:25">tmp</name></expr></argument>, <argument pos:start="47:28" pos:end="47:38"><expr pos:start="47:28" pos:end="47:38"><call pos:start="47:28" pos:end="47:38"><name pos:start="47:28" pos:end="47:33">strlen</name><argument_list pos:start="47:34" pos:end="47:38">(<argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">tmp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="47:41" pos:end="47:41">&lt;</operator> <literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr>)</condition> <block pos:start="47:46" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:34">

            <expr_stmt pos:start="49:13" pos:end="49:92"><expr pos:start="49:13" pos:end="49:91"><call pos:start="49:13" pos:end="49:91"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:91">(<argument pos:start="49:20" pos:end="49:23"><expr pos:start="49:20" pos:end="49:23"><name pos:start="49:20" pos:end="49:23">NULL</name></expr></argument>, <argument pos:start="49:26" pos:end="49:37"><expr pos:start="49:26" pos:end="49:37"><name pos:start="49:26" pos:end="49:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:40" pos:end="49:73"><expr pos:start="49:40" pos:end="49:73"><literal type="string" pos:start="49:40" pos:end="49:73">"Error %s writing 2pass logfile\n"</literal></expr></argument>, <argument pos:start="49:76" pos:end="49:90"><expr pos:start="49:76" pos:end="49:90"><call pos:start="49:76" pos:end="49:90"><name pos:start="49:76" pos:end="49:83">strerror</name><argument_list pos:start="49:84" pos:end="49:90">(<argument pos:start="49:85" pos:end="49:89"><expr pos:start="49:85" pos:end="49:89"><name pos:start="49:85" pos:end="49:89">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="53:13" pos:end="53:34">return <expr pos:start="53:20" pos:end="53:33"><call pos:start="53:20" pos:end="53:33"><name pos:start="53:20" pos:end="53:26">AVERROR</name><argument_list pos:start="53:27" pos:end="53:33">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">errno</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>






    <expr_stmt pos:start="64:5" pos:end="64:50"><expr pos:start="64:5" pos:end="64:49"><name pos:start="64:5" pos:end="64:23"><name pos:start="64:5" pos:end="64:15">xvid_2pass2</name><operator pos:start="64:16" pos:end="64:16">.</operator><name pos:start="64:17" pos:end="64:23">version</name></name><operator pos:start="64:24" pos:end="64:24">=</operator> <call pos:start="64:26" pos:end="64:49"><name pos:start="64:26" pos:end="64:42">XVID_MAKE_VERSION</name><argument_list pos:start="64:43" pos:end="64:49">(<argument pos:start="64:44" pos:end="64:44"><expr pos:start="64:44" pos:end="64:44"><literal type="number" pos:start="64:44" pos:end="64:44">1</literal></expr></argument>,<argument pos:start="64:46" pos:end="64:46"><expr pos:start="64:46" pos:end="64:46"><literal type="number" pos:start="64:46" pos:end="64:46">1</literal></expr></argument>,<argument pos:start="64:48" pos:end="64:48"><expr pos:start="64:48" pos:end="64:48"><literal type="number" pos:start="64:48" pos:end="64:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:35"><expr pos:start="66:5" pos:end="66:34"><name pos:start="66:5" pos:end="66:24"><name pos:start="66:5" pos:end="66:15">xvid_2pass2</name><operator pos:start="66:16" pos:end="66:16">.</operator><name pos:start="66:17" pos:end="66:24">filename</name></name><operator pos:start="66:25" pos:end="66:25">=</operator> <name pos:start="66:27" pos:end="66:34">tmp_name</name></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:44"><expr pos:start="68:5" pos:end="68:43"><name pos:start="68:5" pos:end="68:23"><name pos:start="68:5" pos:end="68:15">xvid_2pass2</name><operator pos:start="68:16" pos:end="68:16">.</operator><name pos:start="68:17" pos:end="68:23">bitrate</name></name><operator pos:start="68:24" pos:end="68:24">=</operator> <name pos:start="68:26" pos:end="68:43"><name pos:start="68:26" pos:end="68:26">s</name><operator pos:start="68:27" pos:end="68:28">-&gt;</operator><name pos:start="68:29" pos:end="68:33">avctx</name><operator pos:start="68:34" pos:end="68:35">-&gt;</operator><name pos:start="68:36" pos:end="68:43">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:51"><expr pos:start="70:5" pos:end="70:50"><name pos:start="70:5" pos:end="70:24"><name pos:start="70:5" pos:end="70:15">xvid_2pass2</name><operator pos:start="70:16" pos:end="70:16">.</operator><name pos:start="70:17" pos:end="70:24">vbv_size</name></name><operator pos:start="70:25" pos:end="70:25">=</operator> <name pos:start="70:27" pos:end="70:50"><name pos:start="70:27" pos:end="70:27">s</name><operator pos:start="70:28" pos:end="70:29">-&gt;</operator><name pos:start="70:30" pos:end="70:34">avctx</name><operator pos:start="70:35" pos:end="70:36">-&gt;</operator><name pos:start="70:37" pos:end="70:50">rc_buffer_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="72:51"><expr pos:start="72:5" pos:end="72:50"><name pos:start="72:5" pos:end="72:27"><name pos:start="72:5" pos:end="72:15">xvid_2pass2</name><operator pos:start="72:16" pos:end="72:16">.</operator><name pos:start="72:17" pos:end="72:27">vbv_maxrate</name></name><operator pos:start="72:28" pos:end="72:28">=</operator> <name pos:start="72:30" pos:end="72:50"><name pos:start="72:30" pos:end="72:30">s</name><operator pos:start="72:31" pos:end="72:32">-&gt;</operator><name pos:start="72:33" pos:end="72:37">avctx</name><operator pos:start="72:38" pos:end="72:39">-&gt;</operator><name pos:start="72:40" pos:end="72:50">rc_max_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:67"><expr pos:start="74:5" pos:end="74:66"><name pos:start="74:5" pos:end="74:27"><name pos:start="74:5" pos:end="74:15">xvid_2pass2</name><operator pos:start="74:16" pos:end="74:16">.</operator><name pos:start="74:17" pos:end="74:27">vbv_initial</name></name><operator pos:start="74:28" pos:end="74:28">=</operator> <name pos:start="74:30" pos:end="74:66"><name pos:start="74:30" pos:end="74:30">s</name><operator pos:start="74:31" pos:end="74:32">-&gt;</operator><name pos:start="74:33" pos:end="74:37">avctx</name><operator pos:start="74:38" pos:end="74:39">-&gt;</operator><name pos:start="74:40" pos:end="74:66">rc_initial_buffer_occupancy</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="78:5" pos:end="78:54"><expr pos:start="78:5" pos:end="78:53"><name pos:start="78:5" pos:end="78:27"><name pos:start="78:5" pos:end="78:19">xvid_plg_create</name><operator pos:start="78:20" pos:end="78:20">.</operator><name pos:start="78:21" pos:end="78:27">version</name></name><operator pos:start="78:28" pos:end="78:28">=</operator> <call pos:start="78:30" pos:end="78:53"><name pos:start="78:30" pos:end="78:46">XVID_MAKE_VERSION</name><argument_list pos:start="78:47" pos:end="78:53">(<argument pos:start="78:48" pos:end="78:48"><expr pos:start="78:48" pos:end="78:48"><literal type="number" pos:start="78:48" pos:end="78:48">1</literal></expr></argument>,<argument pos:start="78:50" pos:end="78:50"><expr pos:start="78:50" pos:end="78:50"><literal type="number" pos:start="78:50" pos:end="78:50">1</literal></expr></argument>,<argument pos:start="78:52" pos:end="78:52"><expr pos:start="78:52" pos:end="78:52"><literal type="number" pos:start="78:52" pos:end="78:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="80:5" pos:end="80:51"><expr pos:start="80:5" pos:end="80:50"><name pos:start="80:5" pos:end="80:25"><name pos:start="80:5" pos:end="80:19">xvid_plg_create</name><operator pos:start="80:20" pos:end="80:20">.</operator><name pos:start="80:21" pos:end="80:25">fbase</name></name><operator pos:start="80:26" pos:end="80:26">=</operator> <name pos:start="80:28" pos:end="80:50"><name pos:start="80:28" pos:end="80:28">s</name><operator pos:start="80:29" pos:end="80:30">-&gt;</operator><name pos:start="80:31" pos:end="80:35">avctx</name><operator pos:start="80:36" pos:end="80:37">-&gt;</operator><name pos:start="80:38" pos:end="80:46">time_base</name><operator pos:start="80:47" pos:end="80:47">.</operator><name pos:start="80:48" pos:end="80:50">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="82:5" pos:end="82:51"><expr pos:start="82:5" pos:end="82:50"><name pos:start="82:5" pos:end="82:25"><name pos:start="82:5" pos:end="82:19">xvid_plg_create</name><operator pos:start="82:20" pos:end="82:20">.</operator><name pos:start="82:21" pos:end="82:25">fincr</name></name><operator pos:start="82:26" pos:end="82:26">=</operator> <name pos:start="82:28" pos:end="82:50"><name pos:start="82:28" pos:end="82:28">s</name><operator pos:start="82:29" pos:end="82:30">-&gt;</operator><name pos:start="82:31" pos:end="82:35">avctx</name><operator pos:start="82:36" pos:end="82:37">-&gt;</operator><name pos:start="82:38" pos:end="82:46">time_base</name><operator pos:start="82:47" pos:end="82:47">.</operator><name pos:start="82:48" pos:end="82:50">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="84:5" pos:end="84:40"><expr pos:start="84:5" pos:end="84:39"><name pos:start="84:5" pos:end="84:25"><name pos:start="84:5" pos:end="84:19">xvid_plg_create</name><operator pos:start="84:20" pos:end="84:20">.</operator><name pos:start="84:21" pos:end="84:25">param</name></name><operator pos:start="84:26" pos:end="84:26">=</operator> <operator pos:start="84:28" pos:end="84:28">&amp;</operator><name pos:start="84:29" pos:end="84:39">xvid_2pass2</name></expr>;</expr_stmt>



    <if_stmt pos:start="88:5" pos:end="94:5"><if pos:start="88:5" pos:end="94:5">if<condition pos:start="88:7" pos:end="88:101">(<expr pos:start="88:8" pos:end="88:100"><call pos:start="88:8" pos:end="88:98"><name pos:start="88:8" pos:end="88:25">xvid_plugin_2pass2</name><argument_list pos:start="88:26" pos:end="88:98">(<argument pos:start="88:27" pos:end="88:30"><expr pos:start="88:27" pos:end="88:30"><name pos:start="88:27" pos:end="88:30">NULL</name></expr></argument>, <argument pos:start="88:33" pos:end="88:47"><expr pos:start="88:33" pos:end="88:47"><name pos:start="88:33" pos:end="88:47">XVID_PLG_CREATE</name></expr></argument>, <argument pos:start="88:50" pos:end="88:65"><expr pos:start="88:50" pos:end="88:65"><operator pos:start="88:50" pos:end="88:50">&amp;</operator><name pos:start="88:51" pos:end="88:65">xvid_plg_create</name></expr></argument>, <argument pos:start="88:68" pos:end="88:97"><expr pos:start="88:68" pos:end="88:97"><operator pos:start="88:68" pos:end="88:68">&amp;</operator><name pos:start="88:69" pos:end="88:97"><name pos:start="88:69" pos:end="88:69">s</name><operator pos:start="88:70" pos:end="88:71">-&gt;</operator><name pos:start="88:72" pos:end="88:81">rc_context</name><operator pos:start="88:82" pos:end="88:82">.</operator><name pos:start="88:83" pos:end="88:97">non_lavc_opaque</name></name></expr></argument>)</argument_list></call><operator pos:start="88:99" pos:end="88:99">&lt;</operator><literal type="number" pos:start="88:100" pos:end="88:100">0</literal></expr>)</condition><block pos:start="88:102" pos:end="94:5">{<block_content pos:start="90:9" pos:end="92:18">

        <expr_stmt pos:start="90:9" pos:end="90:66"><expr pos:start="90:9" pos:end="90:65"><call pos:start="90:9" pos:end="90:65"><name pos:start="90:9" pos:end="90:14">av_log</name><argument_list pos:start="90:15" pos:end="90:65">(<argument pos:start="90:16" pos:end="90:19"><expr pos:start="90:16" pos:end="90:19"><name pos:start="90:16" pos:end="90:19">NULL</name></expr></argument>, <argument pos:start="90:22" pos:end="90:33"><expr pos:start="90:22" pos:end="90:33"><name pos:start="90:22" pos:end="90:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="90:36" pos:end="90:64"><expr pos:start="90:36" pos:end="90:64"><literal type="string" pos:start="90:36" pos:end="90:64">"xvid_plugin_2pass2 failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="92:9" pos:end="92:18">return <expr pos:start="92:16" pos:end="92:17"><operator pos:start="92:16" pos:end="92:16">-</operator><literal type="number" pos:start="92:17" pos:end="92:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="96:5" pos:end="96:13">return <expr pos:start="96:12" pos:end="96:12"><literal type="number" pos:start="96:12" pos:end="96:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
