<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17475.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">nsv_parse_NSVf_header</name><parameter_list pos:start="1:33" pos:end="1:76">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:75"><decl pos:start="1:54" pos:end="1:75"><type pos:start="1:54" pos:end="1:75"><name pos:start="1:54" pos:end="1:71">AVFormatParameters</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:75">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NSVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">nsv</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">tag</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:22">tag1</name></decl>, <decl pos:start="9:25" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:25" pos:end="9:31">handler</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:70"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">codec_type</name></decl>, <decl pos:start="11:21" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:32">stream_index</name></decl>, <decl pos:start="11:35" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:35" pos:end="11:46">frame_period</name></decl>, <decl pos:start="11:49" pos:end="11:56"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:49" pos:end="11:56">bit_rate</name></decl>, <decl pos:start="11:59" pos:end="11:63"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:59" pos:end="11:63">scale</name></decl>, <decl pos:start="11:66" pos:end="11:69"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:66" pos:end="11:69">rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:26">file_size</name></decl>, <decl pos:start="13:29" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:29" pos:end="13:32">size</name></decl>, <decl pos:start="13:35" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:35" pos:end="13:43">nb_frames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:20">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:20">strings_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">table_entries</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:26">table_entries_used</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:13"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">AVStream</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:19"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:13">NSVStream</name> <modifier pos:start="27:15" pos:end="27:15">*</modifier></type><name pos:start="27:16" pos:end="27:18">ast</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:9">PRINT</name><argument_list pos:start="31:10" pos:end="31:35">(<argument pos:start="31:11" pos:end="31:34"><expr pos:start="31:11" pos:end="31:34"><operator pos:start="31:11" pos:end="31:11">(</operator><literal type="string" pos:start="31:12" pos:end="31:19">"%s()\n"</literal><operator pos:start="31:20" pos:end="31:20">,</operator> <name pos:start="31:22" pos:end="31:33">__FUNCTION__</name><operator pos:start="31:34" pos:end="31:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:7">nsv</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:14">state</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:27">NSV_UNSYNC</name></expr>;</expr_stmt> <comment type="block" pos:start="35:30" pos:end="35:50">/* in case we fail */</comment>

    

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:8">size</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:23"><name pos:start="39:12" pos:end="39:19">get_le32</name><argument_list pos:start="39:20" pos:end="39:23">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="44:25"><if pos:start="41:5" pos:end="44:25">if <condition pos:start="41:8" pos:end="41:18">(<expr pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:12">size</name> <operator pos:start="41:14" pos:end="41:14">&lt;</operator> <literal type="number" pos:start="41:16" pos:end="41:17">28</literal></expr>)</condition><block type="pseudo" pos:start="44:5" pos:end="44:25"><block_content pos:start="44:5" pos:end="44:25">


    <expr_stmt pos:start="44:5" pos:end="44:25"><expr pos:start="44:5" pos:end="44:24"><name pos:start="44:5" pos:end="44:17"><name pos:start="44:5" pos:end="44:7">nsv</name><operator pos:start="44:8" pos:end="44:9">-&gt;</operator><name pos:start="44:10" pos:end="44:17">NSVf_end</name></name> <operator pos:start="44:19" pos:end="44:19">=</operator> <name pos:start="44:21" pos:end="44:24">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="48:5" pos:end="48:44">//s-&gt;file_size = (uint32_t)get_le32(pb);</comment>

    <expr_stmt pos:start="50:5" pos:end="50:39"><expr pos:start="50:5" pos:end="50:38"><name pos:start="50:5" pos:end="50:13">file_size</name> <operator pos:start="50:15" pos:end="50:15">=</operator> <operator pos:start="50:17" pos:end="50:17">(</operator><name pos:start="50:18" pos:end="50:25">uint32_t</name><operator pos:start="50:26" pos:end="50:26">)</operator><call pos:start="50:27" pos:end="50:38"><name pos:start="50:27" pos:end="50:34">get_le32</name><argument_list pos:start="50:35" pos:end="50:38">(<argument pos:start="50:36" pos:end="50:37"><expr pos:start="50:36" pos:end="50:37"><name pos:start="50:36" pos:end="50:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:47"><expr pos:start="52:5" pos:end="52:46"><call pos:start="52:5" pos:end="52:46"><name pos:start="52:5" pos:end="52:9">PRINT</name><argument_list pos:start="52:10" pos:end="52:46">(<argument pos:start="52:11" pos:end="52:45"><expr pos:start="52:11" pos:end="52:45"><operator pos:start="52:11" pos:end="52:11">(</operator><literal type="string" pos:start="52:12" pos:end="52:38">"NSV NSVf chunk_size %ld\n"</literal><operator pos:start="52:39" pos:end="52:39">,</operator> <name pos:start="52:41" pos:end="52:44">size</name><operator pos:start="52:45" pos:end="52:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:51"><expr pos:start="54:5" pos:end="54:50"><call pos:start="54:5" pos:end="54:50"><name pos:start="54:5" pos:end="54:9">PRINT</name><argument_list pos:start="54:10" pos:end="54:50">(<argument pos:start="54:11" pos:end="54:49"><expr pos:start="54:11" pos:end="54:49"><operator pos:start="54:11" pos:end="54:11">(</operator><literal type="string" pos:start="54:12" pos:end="54:37">"NSV NSVf file_size %Ld\n"</literal><operator pos:start="54:38" pos:end="54:38">,</operator> <name pos:start="54:40" pos:end="54:48">file_size</name><operator pos:start="54:49" pos:end="54:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="58:5" pos:end="58:28"><expr pos:start="58:5" pos:end="58:27"><name pos:start="58:5" pos:end="58:12">duration</name> <operator pos:start="58:14" pos:end="58:14">=</operator> <call pos:start="58:16" pos:end="58:27"><name pos:start="58:16" pos:end="58:23">get_le32</name><argument_list pos:start="58:24" pos:end="58:27">(<argument pos:start="58:25" pos:end="58:26"><expr pos:start="58:25" pos:end="58:26"><name pos:start="58:25" pos:end="58:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="58:30" pos:end="58:40">/* in ms */</comment>

    <expr_stmt pos:start="60:5" pos:end="60:51"><expr pos:start="60:5" pos:end="60:50"><name pos:start="60:5" pos:end="60:17"><name pos:start="60:5" pos:end="60:7">nsv</name><operator pos:start="60:8" pos:end="60:9">-&gt;</operator><name pos:start="60:10" pos:end="60:17">duration</name></name> <operator pos:start="60:19" pos:end="60:19">=</operator> <name pos:start="60:21" pos:end="60:28">duration</name> <operator pos:start="60:30" pos:end="60:30">*</operator> <name pos:start="60:32" pos:end="60:43">AV_TIME_BASE</name> <operator pos:start="60:45" pos:end="60:45">/</operator> <literal type="number" pos:start="60:47" pos:end="60:50">1000</literal></expr>;</expr_stmt> <comment type="block" pos:start="60:53" pos:end="60:65">/* convert */</comment>

    <expr_stmt pos:start="62:5" pos:end="62:52"><expr pos:start="62:5" pos:end="62:51"><call pos:start="62:5" pos:end="62:51"><name pos:start="62:5" pos:end="62:9">PRINT</name><argument_list pos:start="62:10" pos:end="62:51">(<argument pos:start="62:11" pos:end="62:50"><expr pos:start="62:11" pos:end="62:50"><operator pos:start="62:11" pos:end="62:11">(</operator><literal type="string" pos:start="62:12" pos:end="62:39">"NSV NSVf duration %Ld ms\n"</literal><operator pos:start="62:40" pos:end="62:40">,</operator> <name pos:start="62:42" pos:end="62:49">duration</name><operator pos:start="62:50" pos:end="62:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="64:5" pos:end="64:33">// XXX: store it in AVStreams</comment>



    <expr_stmt pos:start="68:5" pos:end="68:32"><expr pos:start="68:5" pos:end="68:31"><name pos:start="68:5" pos:end="68:16">strings_size</name> <operator pos:start="68:18" pos:end="68:18">=</operator> <call pos:start="68:20" pos:end="68:31"><name pos:start="68:20" pos:end="68:27">get_le32</name><argument_list pos:start="68:28" pos:end="68:31">(<argument pos:start="68:29" pos:end="68:30"><expr pos:start="68:29" pos:end="68:30"><name pos:start="68:29" pos:end="68:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="70:5" pos:end="70:33"><expr pos:start="70:5" pos:end="70:32"><name pos:start="70:5" pos:end="70:17">table_entries</name> <operator pos:start="70:19" pos:end="70:19">=</operator> <call pos:start="70:21" pos:end="70:32"><name pos:start="70:21" pos:end="70:28">get_le32</name><argument_list pos:start="70:29" pos:end="70:32">(<argument pos:start="70:30" pos:end="70:31"><expr pos:start="70:30" pos:end="70:31"><name pos:start="70:30" pos:end="70:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="72:38"><expr pos:start="72:5" pos:end="72:37"><name pos:start="72:5" pos:end="72:22">table_entries_used</name> <operator pos:start="72:24" pos:end="72:24">=</operator> <call pos:start="72:26" pos:end="72:37"><name pos:start="72:26" pos:end="72:33">get_le32</name><argument_list pos:start="72:34" pos:end="72:37">(<argument pos:start="72:35" pos:end="72:36"><expr pos:start="72:35" pos:end="72:36"><name pos:start="72:35" pos:end="72:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="74:5" pos:end="76:62"><expr pos:start="74:5" pos:end="76:61"><call pos:start="74:5" pos:end="76:61"><name pos:start="74:5" pos:end="74:9">PRINT</name><argument_list pos:start="74:10" pos:end="76:61">(<argument pos:start="74:11" pos:end="76:60"><expr pos:start="74:11" pos:end="76:60"><operator pos:start="74:11" pos:end="74:11">(</operator><literal type="string" pos:start="74:12" pos:end="74:72">"NSV NSVf info-strings size: %d, table entries: %d, bis %d\n"</literal><operator pos:start="74:73" pos:end="74:73">,</operator> 

            <name pos:start="76:13" pos:end="76:24">strings_size</name><operator pos:start="76:25" pos:end="76:25">,</operator> <name pos:start="76:27" pos:end="76:39">table_entries</name><operator pos:start="76:40" pos:end="76:40">,</operator> <name pos:start="76:42" pos:end="76:59">table_entries_used</name><operator pos:start="76:60" pos:end="76:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="78:5" pos:end="83:60"><if pos:start="78:5" pos:end="83:60">if <condition pos:start="78:8" pos:end="78:21">(<expr pos:start="78:9" pos:end="78:20"><call pos:start="78:9" pos:end="78:20"><name pos:start="78:9" pos:end="78:16">url_feof</name><argument_list pos:start="78:17" pos:end="78:20">(<argument pos:start="78:18" pos:end="78:19"><expr pos:start="78:18" pos:end="78:19"><name pos:start="78:18" pos:end="78:19">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="83:5" pos:end="83:60"><block_content pos:start="83:5" pos:end="83:60">


    

    <expr_stmt pos:start="83:5" pos:end="83:60"><expr pos:start="83:5" pos:end="83:59"><call pos:start="83:5" pos:end="83:59"><name pos:start="83:5" pos:end="83:9">PRINT</name><argument_list pos:start="83:10" pos:end="83:59">(<argument pos:start="83:11" pos:end="83:58"><expr pos:start="83:11" pos:end="83:58"><operator pos:start="83:11" pos:end="83:11">(</operator><literal type="string" pos:start="83:12" pos:end="83:42">"NSV got header; filepos %Ld\n"</literal><operator pos:start="83:43" pos:end="83:43">,</operator> <call pos:start="83:45" pos:end="83:57"><name pos:start="83:45" pos:end="83:53">url_ftell</name><argument_list pos:start="83:54" pos:end="83:57">(<argument pos:start="83:55" pos:end="83:56"><expr pos:start="83:55" pos:end="83:56"><name pos:start="83:55" pos:end="83:56">pb</name></expr></argument>)</argument_list></call><operator pos:start="83:58" pos:end="83:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="161:5"><if pos:start="87:5" pos:end="161:5">if <condition pos:start="87:8" pos:end="87:25">(<expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:20">strings_size</name> <operator pos:start="87:22" pos:end="87:22">&gt;</operator> <literal type="number" pos:start="87:24" pos:end="87:24">0</literal></expr>)</condition> <block pos:start="87:27" pos:end="161:5">{<block_content pos:start="89:9" pos:end="159:25">

        <decl_stmt pos:start="89:9" pos:end="89:22"><decl pos:start="89:9" pos:end="89:21"><type pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:12">char</name> <modifier pos:start="89:14" pos:end="89:14">*</modifier></type><name pos:start="89:15" pos:end="89:21">strings</name></decl>;</decl_stmt> <comment type="block" pos:start="89:24" pos:end="89:76">/* last byte will be '\0' to play safe with str*() */</comment>

        <decl_stmt pos:start="91:9" pos:end="91:23"><decl pos:start="91:9" pos:end="91:15"><type pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:12">char</name> <modifier pos:start="91:14" pos:end="91:14">*</modifier></type><name pos:start="91:15" pos:end="91:15">p</name></decl>, <decl pos:start="91:18" pos:end="91:22"><type ref="prev" pos:start="91:9" pos:end="91:14"><modifier pos:start="91:18" pos:end="91:18">*</modifier></type><name pos:start="91:19" pos:end="91:22">endp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:28"><decl pos:start="93:9" pos:end="93:19"><type pos:start="93:9" pos:end="93:14"><name pos:start="93:9" pos:end="93:12">char</name> <modifier pos:start="93:14" pos:end="93:14">*</modifier></type><name pos:start="93:15" pos:end="93:19">token</name></decl>, <decl pos:start="93:22" pos:end="93:27"><type ref="prev" pos:start="93:9" pos:end="93:14"><modifier pos:start="93:22" pos:end="93:22">*</modifier></type><name pos:start="93:23" pos:end="93:27">value</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:19"><decl pos:start="95:9" pos:end="95:18"><type pos:start="95:9" pos:end="95:12"><name pos:start="95:9" pos:end="95:12">char</name></type> <name pos:start="95:14" pos:end="95:18">quote</name></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:51"><expr pos:start="99:9" pos:end="99:50"><name pos:start="99:9" pos:end="99:9">p</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <name pos:start="99:13" pos:end="99:19">strings</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:50"><name pos:start="99:23" pos:end="99:32">av_mallocz</name><argument_list pos:start="99:33" pos:end="99:50">(<argument pos:start="99:34" pos:end="99:49"><expr pos:start="99:34" pos:end="99:49"><name pos:start="99:34" pos:end="99:45">strings_size</name> <operator pos:start="99:47" pos:end="99:47">+</operator> <literal type="number" pos:start="99:49" pos:end="99:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:38"><expr pos:start="101:9" pos:end="101:37"><name pos:start="101:9" pos:end="101:12">endp</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:22">strings</name> <operator pos:start="101:24" pos:end="101:24">+</operator> <name pos:start="101:26" pos:end="101:37">strings_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:46"><expr pos:start="103:9" pos:end="103:45"><call pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:18">get_buffer</name><argument_list pos:start="103:19" pos:end="103:45">(<argument pos:start="103:20" pos:end="103:21"><expr pos:start="103:20" pos:end="103:21"><name pos:start="103:20" pos:end="103:21">pb</name></expr></argument>, <argument pos:start="103:24" pos:end="103:30"><expr pos:start="103:24" pos:end="103:30"><name pos:start="103:24" pos:end="103:30">strings</name></expr></argument>, <argument pos:start="103:33" pos:end="103:44"><expr pos:start="103:33" pos:end="103:44"><name pos:start="103:33" pos:end="103:44">strings_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="105:9" pos:end="157:9">while <condition pos:start="105:15" pos:end="105:24">(<expr pos:start="105:16" pos:end="105:23"><name pos:start="105:16" pos:end="105:16">p</name> <operator pos:start="105:18" pos:end="105:18">&lt;</operator> <name pos:start="105:20" pos:end="105:23">endp</name></expr>)</condition> <block pos:start="105:26" pos:end="157:9">{<block_content pos:start="107:13" pos:end="155:13">

            <while pos:start="107:13" pos:end="109:20">while <condition pos:start="107:19" pos:end="107:29">(<expr pos:start="107:20" pos:end="107:28"><operator pos:start="107:20" pos:end="107:20">*</operator><name pos:start="107:21" pos:end="107:21">p</name> <operator pos:start="107:23" pos:end="107:24">==</operator> <literal type="char" pos:start="107:26" pos:end="107:28">' '</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:20"><block_content pos:start="109:17" pos:end="109:20">

                <expr_stmt pos:start="109:17" pos:end="109:20"><expr pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:17">p</name><operator pos:start="109:18" pos:end="109:19">++</operator></expr>;</expr_stmt></block_content></block></while> <comment type="block" pos:start="109:22" pos:end="109:43">/* strip out spaces */</comment>

            <if_stmt pos:start="111:13" pos:end="113:22"><if pos:start="111:13" pos:end="113:22">if <condition pos:start="111:16" pos:end="111:28">(<expr pos:start="111:17" pos:end="111:27"><name pos:start="111:17" pos:end="111:17">p</name> <operator pos:start="111:19" pos:end="111:20">&gt;=</operator> <name pos:start="111:22" pos:end="111:25">endp</name><operator pos:start="111:26" pos:end="111:26">-</operator><literal type="number" pos:start="111:27" pos:end="111:27">2</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:22"><block_content pos:start="113:17" pos:end="113:22">

                <break pos:start="113:17" pos:end="113:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:22"><expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:17">token</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <name pos:start="115:21" pos:end="115:21">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:31"><expr pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:13">p</name> <operator pos:start="117:15" pos:end="117:15">=</operator> <call pos:start="117:17" pos:end="117:30"><name pos:start="117:17" pos:end="117:22">strchr</name><argument_list pos:start="117:23" pos:end="117:30">(<argument pos:start="117:24" pos:end="117:24"><expr pos:start="117:24" pos:end="117:24"><name pos:start="117:24" pos:end="117:24">p</name></expr></argument>, <argument pos:start="117:27" pos:end="117:29"><expr pos:start="117:27" pos:end="117:29"><literal type="char" pos:start="117:27" pos:end="117:29">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="121:22"><if pos:start="119:13" pos:end="121:22">if <condition pos:start="119:16" pos:end="119:34">(<expr pos:start="119:17" pos:end="119:33"><operator pos:start="119:17" pos:end="119:17">!</operator><name pos:start="119:18" pos:end="119:18">p</name> <operator pos:start="119:20" pos:end="119:21">||</operator> <name pos:start="119:23" pos:end="119:23">p</name> <operator pos:start="119:25" pos:end="119:26">&gt;=</operator> <name pos:start="119:28" pos:end="119:31">endp</name><operator pos:start="119:32" pos:end="119:32">-</operator><literal type="number" pos:start="119:33" pos:end="119:33">2</literal></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:22"><block_content pos:start="121:17" pos:end="121:22">

                <break pos:start="121:17" pos:end="121:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:24"><expr pos:start="123:13" pos:end="123:23"><operator pos:start="123:13" pos:end="123:13">*</operator><name pos:start="123:14" pos:end="123:14">p</name><operator pos:start="123:15" pos:end="123:16">++</operator> <operator pos:start="123:18" pos:end="123:18">=</operator> <literal type="char" pos:start="123:20" pos:end="123:23">'\0'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:25"><expr pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:17">quote</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <operator pos:start="125:21" pos:end="125:21">*</operator><name pos:start="125:22" pos:end="125:22">p</name><operator pos:start="125:23" pos:end="125:24">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:22"><expr pos:start="127:13" pos:end="127:21"><name pos:start="127:13" pos:end="127:17">value</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:21">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:33"><expr pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:13">p</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <call pos:start="129:17" pos:end="129:32"><name pos:start="129:17" pos:end="129:22">strchr</name><argument_list pos:start="129:23" pos:end="129:32">(<argument pos:start="129:24" pos:end="129:24"><expr pos:start="129:24" pos:end="129:24"><name pos:start="129:24" pos:end="129:24">p</name></expr></argument>, <argument pos:start="129:27" pos:end="129:31"><expr pos:start="129:27" pos:end="129:31"><name pos:start="129:27" pos:end="129:31">quote</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="133:22"><if pos:start="131:13" pos:end="133:22">if <condition pos:start="131:16" pos:end="131:32">(<expr pos:start="131:17" pos:end="131:31"><operator pos:start="131:17" pos:end="131:17">!</operator><name pos:start="131:18" pos:end="131:18">p</name> <operator pos:start="131:20" pos:end="131:21">||</operator> <name pos:start="131:23" pos:end="131:23">p</name> <operator pos:start="131:25" pos:end="131:26">&gt;=</operator> <name pos:start="131:28" pos:end="131:31">endp</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:22"><block_content pos:start="133:17" pos:end="133:22">

                <break pos:start="133:17" pos:end="133:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:24"><expr pos:start="135:13" pos:end="135:23"><operator pos:start="135:13" pos:end="135:13">*</operator><name pos:start="135:14" pos:end="135:14">p</name><operator pos:start="135:15" pos:end="135:16">++</operator> <operator pos:start="135:18" pos:end="135:18">=</operator> <literal type="char" pos:start="135:20" pos:end="135:23">'\0'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:62"><expr pos:start="137:13" pos:end="137:61"><call pos:start="137:13" pos:end="137:61"><name pos:start="137:13" pos:end="137:17">PRINT</name><argument_list pos:start="137:18" pos:end="137:61">(<argument pos:start="137:19" pos:end="137:60"><expr pos:start="137:19" pos:end="137:60"><operator pos:start="137:19" pos:end="137:19">(</operator><literal type="string" pos:start="137:20" pos:end="137:45">"NSV NSVf INFO: %s='%s'\n"</literal><operator pos:start="137:46" pos:end="137:46">,</operator> <name pos:start="137:48" pos:end="137:52">token</name><operator pos:start="137:53" pos:end="137:53">,</operator> <name pos:start="137:55" pos:end="137:59">value</name><operator pos:start="137:60" pos:end="137:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="155:13"><if pos:start="139:13" pos:end="143:13">if <condition pos:start="139:16" pos:end="139:41">(<expr pos:start="139:17" pos:end="139:40"><operator pos:start="139:17" pos:end="139:17">!</operator><call pos:start="139:18" pos:end="139:40"><name pos:start="139:18" pos:end="139:23">strcmp</name><argument_list pos:start="139:24" pos:end="139:40">(<argument pos:start="139:25" pos:end="139:29"><expr pos:start="139:25" pos:end="139:29"><name pos:start="139:25" pos:end="139:29">token</name></expr></argument>, <argument pos:start="139:32" pos:end="139:39"><expr pos:start="139:32" pos:end="139:39"><literal type="string" pos:start="139:32" pos:end="139:39">"ASPECT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:43" pos:end="143:13">{<block_content>

                <comment type="block" pos:start="141:17" pos:end="141:32">/* don't care */</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="143:15" pos:end="147:13">else if <condition pos:start="143:23" pos:end="143:77">(<expr pos:start="143:24" pos:end="143:76"><operator pos:start="143:24" pos:end="143:24">!</operator><call pos:start="143:25" pos:end="143:48"><name pos:start="143:25" pos:end="143:30">strcmp</name><argument_list pos:start="143:31" pos:end="143:48">(<argument pos:start="143:32" pos:end="143:36"><expr pos:start="143:32" pos:end="143:36"><name pos:start="143:32" pos:end="143:36">token</name></expr></argument>, <argument pos:start="143:39" pos:end="143:47"><expr pos:start="143:39" pos:end="143:47"><literal type="string" pos:start="143:39" pos:end="143:47">"CREATOR"</literal></expr></argument>)</argument_list></call> <operator pos:start="143:50" pos:end="143:51">||</operator> <operator pos:start="143:53" pos:end="143:53">!</operator><call pos:start="143:54" pos:end="143:76"><name pos:start="143:54" pos:end="143:59">strcmp</name><argument_list pos:start="143:60" pos:end="143:76">(<argument pos:start="143:61" pos:end="143:65"><expr pos:start="143:61" pos:end="143:65"><name pos:start="143:61" pos:end="143:65">token</name></expr></argument>, <argument pos:start="143:68" pos:end="143:75"><expr pos:start="143:68" pos:end="143:75"><literal type="string" pos:start="143:68" pos:end="143:75">"Author"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:79" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:49">

                <expr_stmt pos:start="145:17" pos:end="145:49"><expr pos:start="145:17" pos:end="145:48"><call pos:start="145:17" pos:end="145:48"><name pos:start="145:17" pos:end="145:23">strncpy</name><argument_list pos:start="145:24" pos:end="145:48">(<argument pos:start="145:25" pos:end="145:33"><expr pos:start="145:25" pos:end="145:33"><name pos:start="145:25" pos:end="145:33"><name pos:start="145:25" pos:end="145:25">s</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:33">author</name></name></expr></argument>, <argument pos:start="145:36" pos:end="145:40"><expr pos:start="145:36" pos:end="145:40"><name pos:start="145:36" pos:end="145:40">value</name></expr></argument>, <argument pos:start="145:43" pos:end="145:47"><expr pos:start="145:43" pos:end="145:47"><literal type="number" pos:start="145:43" pos:end="145:46">512</literal><operator pos:start="145:46" pos:end="145:46">-</operator><literal type="number" pos:start="145:47" pos:end="145:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="147:15" pos:end="151:13">else if <condition pos:start="147:23" pos:end="147:51">(<expr pos:start="147:24" pos:end="147:50"><operator pos:start="147:24" pos:end="147:24">!</operator><call pos:start="147:25" pos:end="147:50"><name pos:start="147:25" pos:end="147:30">strcmp</name><argument_list pos:start="147:31" pos:end="147:50">(<argument pos:start="147:32" pos:end="147:36"><expr pos:start="147:32" pos:end="147:36"><name pos:start="147:32" pos:end="147:36">token</name></expr></argument>, <argument pos:start="147:39" pos:end="147:49"><expr pos:start="147:39" pos:end="147:49"><literal type="string" pos:start="147:39" pos:end="147:49">"Copyright"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="147:53" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:52">

                <expr_stmt pos:start="149:17" pos:end="149:52"><expr pos:start="149:17" pos:end="149:51"><call pos:start="149:17" pos:end="149:51"><name pos:start="149:17" pos:end="149:23">strncpy</name><argument_list pos:start="149:24" pos:end="149:51">(<argument pos:start="149:25" pos:end="149:36"><expr pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:36"><name pos:start="149:25" pos:end="149:25">s</name><operator pos:start="149:26" pos:end="149:27">-&gt;</operator><name pos:start="149:28" pos:end="149:36">copyright</name></name></expr></argument>, <argument pos:start="149:39" pos:end="149:43"><expr pos:start="149:39" pos:end="149:43"><name pos:start="149:39" pos:end="149:43">value</name></expr></argument>, <argument pos:start="149:46" pos:end="149:50"><expr pos:start="149:46" pos:end="149:50"><literal type="number" pos:start="149:46" pos:end="149:49">512</literal><operator pos:start="149:49" pos:end="149:49">-</operator><literal type="number" pos:start="149:50" pos:end="149:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="151:15" pos:end="155:13">else if <condition pos:start="151:23" pos:end="151:74">(<expr pos:start="151:24" pos:end="151:73"><operator pos:start="151:24" pos:end="151:24">!</operator><call pos:start="151:25" pos:end="151:46"><name pos:start="151:25" pos:end="151:30">strcmp</name><argument_list pos:start="151:31" pos:end="151:46">(<argument pos:start="151:32" pos:end="151:36"><expr pos:start="151:32" pos:end="151:36"><name pos:start="151:32" pos:end="151:36">token</name></expr></argument>, <argument pos:start="151:39" pos:end="151:45"><expr pos:start="151:39" pos:end="151:45"><literal type="string" pos:start="151:39" pos:end="151:45">"TITLE"</literal></expr></argument>)</argument_list></call> <operator pos:start="151:48" pos:end="151:49">||</operator> <operator pos:start="151:51" pos:end="151:51">!</operator><call pos:start="151:52" pos:end="151:73"><name pos:start="151:52" pos:end="151:57">strcmp</name><argument_list pos:start="151:58" pos:end="151:73">(<argument pos:start="151:59" pos:end="151:63"><expr pos:start="151:59" pos:end="151:63"><name pos:start="151:59" pos:end="151:63">token</name></expr></argument>, <argument pos:start="151:66" pos:end="151:72"><expr pos:start="151:66" pos:end="151:72"><literal type="string" pos:start="151:66" pos:end="151:72">"Title"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:76" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:48">

                <expr_stmt pos:start="153:17" pos:end="153:48"><expr pos:start="153:17" pos:end="153:47"><call pos:start="153:17" pos:end="153:47"><name pos:start="153:17" pos:end="153:23">strncpy</name><argument_list pos:start="153:24" pos:end="153:47">(<argument pos:start="153:25" pos:end="153:32"><expr pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:32"><name pos:start="153:25" pos:end="153:25">s</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:32">title</name></name></expr></argument>, <argument pos:start="153:35" pos:end="153:39"><expr pos:start="153:35" pos:end="153:39"><name pos:start="153:35" pos:end="153:39">value</name></expr></argument>, <argument pos:start="153:42" pos:end="153:46"><expr pos:start="153:42" pos:end="153:46"><literal type="number" pos:start="153:42" pos:end="153:45">512</literal><operator pos:start="153:45" pos:end="153:45">-</operator><literal type="number" pos:start="153:46" pos:end="153:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><call pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:15">av_free</name><argument_list pos:start="159:16" pos:end="159:24">(<argument pos:start="159:17" pos:end="159:23"><expr pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:23">strings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="163:5" pos:end="168:59"><if pos:start="163:5" pos:end="168:59">if <condition pos:start="163:8" pos:end="163:21">(<expr pos:start="163:9" pos:end="163:20"><call pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:16">url_feof</name><argument_list pos:start="163:17" pos:end="163:20">(<argument pos:start="163:18" pos:end="163:19"><expr pos:start="163:18" pos:end="163:19"><name pos:start="163:18" pos:end="163:19">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="168:5" pos:end="168:59"><block_content pos:start="168:5" pos:end="168:59">


    

    <expr_stmt pos:start="168:5" pos:end="168:59"><expr pos:start="168:5" pos:end="168:58"><call pos:start="168:5" pos:end="168:58"><name pos:start="168:5" pos:end="168:9">PRINT</name><argument_list pos:start="168:10" pos:end="168:58">(<argument pos:start="168:11" pos:end="168:57"><expr pos:start="168:11" pos:end="168:57"><operator pos:start="168:11" pos:end="168:11">(</operator><literal type="string" pos:start="168:12" pos:end="168:41">"NSV got infos; filepos %Ld\n"</literal><operator pos:start="168:42" pos:end="168:42">,</operator> <call pos:start="168:44" pos:end="168:56"><name pos:start="168:44" pos:end="168:52">url_ftell</name><argument_list pos:start="168:53" pos:end="168:56">(<argument pos:start="168:54" pos:end="168:55"><expr pos:start="168:54" pos:end="168:55"><name pos:start="168:54" pos:end="168:55">pb</name></expr></argument>)</argument_list></call><operator pos:start="168:57" pos:end="168:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="172:5" pos:end="182:5"><if pos:start="172:5" pos:end="182:5">if <condition pos:start="172:8" pos:end="172:31">(<expr pos:start="172:9" pos:end="172:30"><name pos:start="172:9" pos:end="172:26">table_entries_used</name> <operator pos:start="172:28" pos:end="172:28">&gt;</operator> <literal type="number" pos:start="172:30" pos:end="172:30">0</literal></expr>)</condition> <block pos:start="172:33" pos:end="182:5">{<block_content pos:start="174:9" pos:end="180:79">

        <expr_stmt pos:start="174:9" pos:end="174:48"><expr pos:start="174:9" pos:end="174:47"><name pos:start="174:9" pos:end="174:26"><name pos:start="174:9" pos:end="174:11">nsv</name><operator pos:start="174:12" pos:end="174:13">-&gt;</operator><name pos:start="174:14" pos:end="174:26">index_entries</name></name> <operator pos:start="174:28" pos:end="174:28">=</operator> <name pos:start="174:30" pos:end="174:47">table_entries_used</name></expr>;</expr_stmt>



        <expr_stmt pos:start="178:9" pos:end="178:75"><expr pos:start="178:9" pos:end="178:74"><name pos:start="178:9" pos:end="178:28"><name pos:start="178:9" pos:end="178:11">nsv</name><operator pos:start="178:12" pos:end="178:13">-&gt;</operator><name pos:start="178:14" pos:end="178:28">nsvf_index_data</name></name> <operator pos:start="178:30" pos:end="178:30">=</operator> <call pos:start="178:32" pos:end="178:74"><name pos:start="178:32" pos:end="178:40">av_malloc</name><argument_list pos:start="178:41" pos:end="178:74">(<argument pos:start="178:42" pos:end="178:73"><expr pos:start="178:42" pos:end="178:73"><name pos:start="178:42" pos:end="178:54">table_entries</name> <operator pos:start="178:56" pos:end="178:56">*</operator> <sizeof pos:start="178:58" pos:end="178:73">sizeof<argument_list pos:start="178:64" pos:end="178:73">(<argument pos:start="178:65" pos:end="178:72"><expr pos:start="178:65" pos:end="178:72"><name pos:start="178:65" pos:end="178:72">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="180:9" pos:end="180:79"><expr pos:start="180:9" pos:end="180:78"><call pos:start="180:9" pos:end="180:78"><name pos:start="180:9" pos:end="180:18">get_buffer</name><argument_list pos:start="180:19" pos:end="180:78">(<argument pos:start="180:20" pos:end="180:21"><expr pos:start="180:20" pos:end="180:21"><name pos:start="180:20" pos:end="180:21">pb</name></expr></argument>, <argument pos:start="180:24" pos:end="180:43"><expr pos:start="180:24" pos:end="180:43"><name pos:start="180:24" pos:end="180:43"><name pos:start="180:24" pos:end="180:26">nsv</name><operator pos:start="180:27" pos:end="180:28">-&gt;</operator><name pos:start="180:29" pos:end="180:43">nsvf_index_data</name></name></expr></argument>, <argument pos:start="180:46" pos:end="180:77"><expr pos:start="180:46" pos:end="180:77"><name pos:start="180:46" pos:end="180:58">table_entries</name> <operator pos:start="180:60" pos:end="180:60">*</operator> <sizeof pos:start="180:62" pos:end="180:77">sizeof<argument_list pos:start="180:68" pos:end="180:77">(<argument pos:start="180:69" pos:end="180:76"><expr pos:start="180:69" pos:end="180:76"><name pos:start="180:69" pos:end="180:76">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="186:5" pos:end="193:0"><expr pos:start="186:5" pos:end="186:58"><call pos:start="186:5" pos:end="186:58"><name pos:start="186:5" pos:end="186:9">PRINT</name><argument_list pos:start="186:10" pos:end="186:58">(<argument pos:start="186:11" pos:end="186:57"><expr pos:start="186:11" pos:end="186:57"><operator pos:start="186:11" pos:end="186:11">(</operator><literal type="string" pos:start="186:12" pos:end="186:41">"NSV got index; filepos %Ld\n"</literal><operator pos:start="186:42" pos:end="186:42">,</operator> <call pos:start="186:44" pos:end="186:56"><name pos:start="186:44" pos:end="186:52">url_ftell</name><argument_list pos:start="186:53" pos:end="186:56">(<argument pos:start="186:54" pos:end="186:55"><expr pos:start="186:54" pos:end="186:55"><name pos:start="186:54" pos:end="186:55">pb</name></expr></argument>)</argument_list></call><operator pos:start="186:57" pos:end="186:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

<cpp:ifdef pos:start="190:1" pos:end="190:23">#<cpp:directive pos:start="190:2" pos:end="190:6">ifdef</cpp:directive> <name pos:start="190:8" pos:end="190:23">DEBUG_DUMP_INDEX</name></cpp:ifdef>

<cpp:define pos:start="192:1" pos:end="192:40">#<cpp:directive pos:start="192:2" pos:end="192:7">define</cpp:directive> <cpp:macro pos:start="192:9" pos:end="192:12"><name pos:start="192:9" pos:end="192:9">V</name><parameter_list pos:start="192:10" pos:end="192:12">(<parameter pos:start="192:11" pos:end="192:11"><type pos:start="192:11" pos:end="192:11"><name pos:start="192:11" pos:end="192:11">v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="192:14" pos:end="192:40">((v&lt;0x20 || v &gt; 127)?'.':v)</cpp:value></cpp:define>

    <comment type="block" pos:start="194:5" pos:end="194:20">/* dump index */</comment>

    <expr_stmt pos:start="196:5" pos:end="196:54"><expr pos:start="196:5" pos:end="196:53"><call pos:start="196:5" pos:end="196:53"><name pos:start="196:5" pos:end="196:9">PRINT</name><argument_list pos:start="196:10" pos:end="196:53">(<argument pos:start="196:11" pos:end="196:52"><expr pos:start="196:11" pos:end="196:52"><operator pos:start="196:11" pos:end="196:11">(</operator><literal type="string" pos:start="196:12" pos:end="196:36">"NSV %d INDEX ENTRIES:\n"</literal><operator pos:start="196:37" pos:end="196:37">,</operator> <name pos:start="196:39" pos:end="196:51">table_entries</name><operator pos:start="196:52" pos:end="196:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="198:5" pos:end="198:61"><expr pos:start="198:5" pos:end="198:60"><call pos:start="198:5" pos:end="198:60"><name pos:start="198:5" pos:end="198:9">PRINT</name><argument_list pos:start="198:10" pos:end="198:60">(<argument pos:start="198:11" pos:end="198:59"><expr pos:start="198:11" pos:end="198:59"><operator pos:start="198:11" pos:end="198:11">(</operator><literal type="string" pos:start="198:12" pos:end="198:43">"NSV [dataoffset][fileoffset]\n"</literal><operator pos:start="198:44" pos:end="198:44">,</operator> <name pos:start="198:46" pos:end="198:58">table_entries</name><operator pos:start="198:59" pos:end="198:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="200:5" pos:end="225:0">for <control pos:start="200:9" pos:end="200:39">(<init pos:start="200:10" pos:end="200:15"><expr pos:start="200:10" pos:end="200:14"><name pos:start="200:10" pos:end="200:10">i</name> <operator pos:start="200:12" pos:end="200:12">=</operator> <literal type="number" pos:start="200:14" pos:end="200:14">0</literal></expr>;</init> <condition pos:start="200:17" pos:end="200:34"><expr pos:start="200:17" pos:end="200:33"><name pos:start="200:17" pos:end="200:17">i</name> <operator pos:start="200:19" pos:end="200:19">&lt;</operator> <name pos:start="200:21" pos:end="200:33">table_entries</name></expr>;</condition> <incr pos:start="200:36" pos:end="200:38"><expr pos:start="200:36" pos:end="200:38"><name pos:start="200:36" pos:end="200:36">i</name><operator pos:start="200:37" pos:end="200:38">++</operator></expr></incr>)</control> <block pos:start="200:41" pos:end="225:0">{<block_content pos:start="202:9" pos:end="216:85">

        <decl_stmt pos:start="202:9" pos:end="202:27"><decl pos:start="202:9" pos:end="202:26"><type pos:start="202:9" pos:end="202:21"><name pos:start="202:9" pos:end="202:16">unsigned</name> <name pos:start="202:18" pos:end="202:21">char</name></type> <name pos:start="202:23" pos:end="202:26"><name pos:start="202:23" pos:end="202:23">b</name><index pos:start="202:24" pos:end="202:26">[<expr pos:start="202:25" pos:end="202:25"><literal type="number" pos:start="202:25" pos:end="202:25">8</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="204:9" pos:end="204:64"><expr pos:start="204:9" pos:end="204:63"><call pos:start="204:9" pos:end="204:63"><name pos:start="204:9" pos:end="204:17">url_fseek</name><argument_list pos:start="204:18" pos:end="204:63">(<argument pos:start="204:19" pos:end="204:20"><expr pos:start="204:19" pos:end="204:20"><name pos:start="204:19" pos:end="204:20">pb</name></expr></argument>, <argument pos:start="204:23" pos:end="204:52"><expr pos:start="204:23" pos:end="204:52"><name pos:start="204:23" pos:end="204:26">size</name> <operator pos:start="204:28" pos:end="204:28">+</operator> <name pos:start="204:30" pos:end="204:52"><name pos:start="204:30" pos:end="204:32">nsv</name><operator pos:start="204:33" pos:end="204:34">-&gt;</operator><name pos:start="204:35" pos:end="204:49">nsvf_index_data</name><index pos:start="204:50" pos:end="204:52">[<expr pos:start="204:51" pos:end="204:51"><name pos:start="204:51" pos:end="204:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="204:55" pos:end="204:62"><expr pos:start="204:55" pos:end="204:62"><name pos:start="204:55" pos:end="204:62">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="206:9" pos:end="206:29"><expr pos:start="206:9" pos:end="206:28"><call pos:start="206:9" pos:end="206:28"><name pos:start="206:9" pos:end="206:18">get_buffer</name><argument_list pos:start="206:19" pos:end="206:28">(<argument pos:start="206:20" pos:end="206:21"><expr pos:start="206:20" pos:end="206:21"><name pos:start="206:20" pos:end="206:21">pb</name></expr></argument>, <argument pos:start="206:24" pos:end="206:24"><expr pos:start="206:24" pos:end="206:24"><name pos:start="206:24" pos:end="206:24">b</name></expr></argument>, <argument pos:start="206:27" pos:end="206:27"><expr pos:start="206:27" pos:end="206:27"><literal type="number" pos:start="206:27" pos:end="206:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="208:9" pos:end="216:85"><expr pos:start="208:9" pos:end="216:84"><call pos:start="208:9" pos:end="216:84"><name pos:start="208:9" pos:end="208:13">PRINT</name><argument_list pos:start="208:14" pos:end="216:84">(<argument pos:start="208:15" pos:end="216:83"><expr pos:start="208:15" pos:end="216:83"><operator pos:start="208:15" pos:end="208:15">(</operator><literal type="string" pos:start="208:16" pos:end="208:80">"NSV [0x%08lx][0x%08lx]: %02x %02x %02x %02x %02x %02x %02x %02x"</literal>

           <literal type="string" pos:start="210:12" pos:end="210:31">"%c%c%c%c%c%c%c%c\n"</literal><operator pos:start="210:32" pos:end="210:32">,</operator>

           <name pos:start="212:12" pos:end="212:34"><name pos:start="212:12" pos:end="212:14">nsv</name><operator pos:start="212:15" pos:end="212:16">-&gt;</operator><name pos:start="212:17" pos:end="212:31">nsvf_index_data</name><index pos:start="212:32" pos:end="212:34">[<expr pos:start="212:33" pos:end="212:33"><name pos:start="212:33" pos:end="212:33">i</name></expr>]</index></name><operator pos:start="212:35" pos:end="212:35">,</operator> <name pos:start="212:37" pos:end="212:40">size</name> <operator pos:start="212:42" pos:end="212:42">+</operator> <name pos:start="212:44" pos:end="212:66"><name pos:start="212:44" pos:end="212:46">nsv</name><operator pos:start="212:47" pos:end="212:48">-&gt;</operator><name pos:start="212:49" pos:end="212:63">nsvf_index_data</name><index pos:start="212:64" pos:end="212:66">[<expr pos:start="212:65" pos:end="212:65"><name pos:start="212:65" pos:end="212:65">i</name></expr>]</index></name><operator pos:start="212:67" pos:end="212:67">,</operator>

           <name pos:start="214:12" pos:end="214:15"><name pos:start="214:12" pos:end="214:12">b</name><index pos:start="214:13" pos:end="214:15">[<expr pos:start="214:14" pos:end="214:14"><literal type="number" pos:start="214:14" pos:end="214:14">0</literal></expr>]</index></name><operator pos:start="214:16" pos:end="214:16">,</operator> <name pos:start="214:18" pos:end="214:21"><name pos:start="214:18" pos:end="214:18">b</name><index pos:start="214:19" pos:end="214:21">[<expr pos:start="214:20" pos:end="214:20"><literal type="number" pos:start="214:20" pos:end="214:20">1</literal></expr>]</index></name><operator pos:start="214:22" pos:end="214:22">,</operator> <name pos:start="214:24" pos:end="214:27"><name pos:start="214:24" pos:end="214:24">b</name><index pos:start="214:25" pos:end="214:27">[<expr pos:start="214:26" pos:end="214:26"><literal type="number" pos:start="214:26" pos:end="214:26">2</literal></expr>]</index></name><operator pos:start="214:28" pos:end="214:28">,</operator> <name pos:start="214:30" pos:end="214:33"><name pos:start="214:30" pos:end="214:30">b</name><index pos:start="214:31" pos:end="214:33">[<expr pos:start="214:32" pos:end="214:32"><literal type="number" pos:start="214:32" pos:end="214:32">3</literal></expr>]</index></name><operator pos:start="214:34" pos:end="214:34">,</operator> <name pos:start="214:36" pos:end="214:39"><name pos:start="214:36" pos:end="214:36">b</name><index pos:start="214:37" pos:end="214:39">[<expr pos:start="214:38" pos:end="214:38"><literal type="number" pos:start="214:38" pos:end="214:38">4</literal></expr>]</index></name><operator pos:start="214:40" pos:end="214:40">,</operator> <name pos:start="214:42" pos:end="214:45"><name pos:start="214:42" pos:end="214:42">b</name><index pos:start="214:43" pos:end="214:45">[<expr pos:start="214:44" pos:end="214:44"><literal type="number" pos:start="214:44" pos:end="214:44">5</literal></expr>]</index></name><operator pos:start="214:46" pos:end="214:46">,</operator> <name pos:start="214:48" pos:end="214:51"><name pos:start="214:48" pos:end="214:48">b</name><index pos:start="214:49" pos:end="214:51">[<expr pos:start="214:50" pos:end="214:50"><literal type="number" pos:start="214:50" pos:end="214:50">6</literal></expr>]</index></name><operator pos:start="214:52" pos:end="214:52">,</operator> <name pos:start="214:54" pos:end="214:57"><name pos:start="214:54" pos:end="214:54">b</name><index pos:start="214:55" pos:end="214:57">[<expr pos:start="214:56" pos:end="214:56"><literal type="number" pos:start="214:56" pos:end="214:56">7</literal></expr>]</index></name><operator pos:start="214:58" pos:end="214:58">,</operator> 

           <call pos:start="216:12" pos:end="216:18"><name pos:start="216:12" pos:end="216:12">V</name><argument_list pos:start="216:13" pos:end="216:18">(<argument pos:start="216:14" pos:end="216:17"><expr pos:start="216:14" pos:end="216:17"><name pos:start="216:14" pos:end="216:17"><name pos:start="216:14" pos:end="216:14">b</name><index pos:start="216:15" pos:end="216:17">[<expr pos:start="216:16" pos:end="216:16"><literal type="number" pos:start="216:16" pos:end="216:16">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:19" pos:end="216:19">,</operator> <call pos:start="216:21" pos:end="216:27"><name pos:start="216:21" pos:end="216:21">V</name><argument_list pos:start="216:22" pos:end="216:27">(<argument pos:start="216:23" pos:end="216:26"><expr pos:start="216:23" pos:end="216:26"><name pos:start="216:23" pos:end="216:26"><name pos:start="216:23" pos:end="216:23">b</name><index pos:start="216:24" pos:end="216:26">[<expr pos:start="216:25" pos:end="216:25"><literal type="number" pos:start="216:25" pos:end="216:25">1</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:28" pos:end="216:28">,</operator> <call pos:start="216:30" pos:end="216:36"><name pos:start="216:30" pos:end="216:30">V</name><argument_list pos:start="216:31" pos:end="216:36">(<argument pos:start="216:32" pos:end="216:35"><expr pos:start="216:32" pos:end="216:35"><name pos:start="216:32" pos:end="216:35"><name pos:start="216:32" pos:end="216:32">b</name><index pos:start="216:33" pos:end="216:35">[<expr pos:start="216:34" pos:end="216:34"><literal type="number" pos:start="216:34" pos:end="216:34">2</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:37" pos:end="216:37">,</operator> <call pos:start="216:39" pos:end="216:45"><name pos:start="216:39" pos:end="216:39">V</name><argument_list pos:start="216:40" pos:end="216:45">(<argument pos:start="216:41" pos:end="216:44"><expr pos:start="216:41" pos:end="216:44"><name pos:start="216:41" pos:end="216:44"><name pos:start="216:41" pos:end="216:41">b</name><index pos:start="216:42" pos:end="216:44">[<expr pos:start="216:43" pos:end="216:43"><literal type="number" pos:start="216:43" pos:end="216:43">3</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:46" pos:end="216:46">,</operator> <call pos:start="216:48" pos:end="216:54"><name pos:start="216:48" pos:end="216:48">V</name><argument_list pos:start="216:49" pos:end="216:54">(<argument pos:start="216:50" pos:end="216:53"><expr pos:start="216:50" pos:end="216:53"><name pos:start="216:50" pos:end="216:53"><name pos:start="216:50" pos:end="216:50">b</name><index pos:start="216:51" pos:end="216:53">[<expr pos:start="216:52" pos:end="216:52"><literal type="number" pos:start="216:52" pos:end="216:52">4</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:55" pos:end="216:55">,</operator> <call pos:start="216:57" pos:end="216:63"><name pos:start="216:57" pos:end="216:57">V</name><argument_list pos:start="216:58" pos:end="216:63">(<argument pos:start="216:59" pos:end="216:62"><expr pos:start="216:59" pos:end="216:62"><name pos:start="216:59" pos:end="216:62"><name pos:start="216:59" pos:end="216:59">b</name><index pos:start="216:60" pos:end="216:62">[<expr pos:start="216:61" pos:end="216:61"><literal type="number" pos:start="216:61" pos:end="216:61">5</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:64" pos:end="216:64">,</operator> <call pos:start="216:66" pos:end="216:72"><name pos:start="216:66" pos:end="216:66">V</name><argument_list pos:start="216:67" pos:end="216:72">(<argument pos:start="216:68" pos:end="216:71"><expr pos:start="216:68" pos:end="216:71"><name pos:start="216:68" pos:end="216:71"><name pos:start="216:68" pos:end="216:68">b</name><index pos:start="216:69" pos:end="216:71">[<expr pos:start="216:70" pos:end="216:70"><literal type="number" pos:start="216:70" pos:end="216:70">6</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="216:73" pos:end="216:73">,</operator> <call pos:start="216:75" pos:end="216:81"><name pos:start="216:75" pos:end="216:75">V</name><argument_list pos:start="216:76" pos:end="216:81">(<argument pos:start="216:77" pos:end="216:80"><expr pos:start="216:77" pos:end="216:80"><name pos:start="216:77" pos:end="216:80"><name pos:start="216:77" pos:end="216:77">b</name><index pos:start="216:78" pos:end="216:80">[<expr pos:start="216:79" pos:end="216:79"><literal type="number" pos:start="216:79" pos:end="216:79">7</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="216:83" pos:end="216:83">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="line" pos:start="220:5" pos:end="220:67">//url_fseek(pb, size, SEEK_SET); /* go back to end of header */</comment>

<cpp:undef pos:start="222:1" pos:end="222:8">#<cpp:directive pos:start="222:2" pos:end="222:6">undef</cpp:directive> <name pos:start="222:8" pos:end="222:8">V</name></cpp:undef>

<cpp:endif pos:start="224:1" pos:end="224:6">#<cpp:directive pos:start="224:2" pos:end="224:6">endif</cpp:directive></cpp:endif>

    

    <expr_stmt pos:start="228:5" pos:end="228:53"><expr pos:start="228:5" pos:end="228:52"><call pos:start="228:5" pos:end="228:52"><name pos:start="228:5" pos:end="228:13">url_fseek</name><argument_list pos:start="228:14" pos:end="228:52">(<argument pos:start="228:15" pos:end="228:16"><expr pos:start="228:15" pos:end="228:16"><name pos:start="228:15" pos:end="228:16">pb</name></expr></argument>, <argument pos:start="228:19" pos:end="228:41"><expr pos:start="228:19" pos:end="228:41"><name pos:start="228:19" pos:end="228:34"><name pos:start="228:19" pos:end="228:21">nsv</name><operator pos:start="228:22" pos:end="228:23">-&gt;</operator><name pos:start="228:24" pos:end="228:34">base_offset</name></name> <operator pos:start="228:36" pos:end="228:36">+</operator> <name pos:start="228:38" pos:end="228:41">size</name></expr></argument>, <argument pos:start="228:44" pos:end="228:51"><expr pos:start="228:44" pos:end="228:51"><name pos:start="228:44" pos:end="228:51">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="228:55" pos:end="228:108">/* required for dumbdriving-271.nsv (2 extra bytes) */</comment>

    

    <if_stmt pos:start="232:5" pos:end="235:35"><if pos:start="232:5" pos:end="235:35">if <condition pos:start="232:8" pos:end="232:21">(<expr pos:start="232:9" pos:end="232:20"><call pos:start="232:9" pos:end="232:20"><name pos:start="232:9" pos:end="232:16">url_feof</name><argument_list pos:start="232:17" pos:end="232:20">(<argument pos:start="232:18" pos:end="232:19"><expr pos:start="232:18" pos:end="232:19"><name pos:start="232:18" pos:end="232:19">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="235:5" pos:end="235:35"><block_content pos:start="235:5" pos:end="235:35">


    <expr_stmt pos:start="235:5" pos:end="235:35"><expr pos:start="235:5" pos:end="235:34"><name pos:start="235:5" pos:end="235:14"><name pos:start="235:5" pos:end="235:7">nsv</name><operator pos:start="235:8" pos:end="235:9">-&gt;</operator><name pos:start="235:10" pos:end="235:14">state</name></name> <operator pos:start="235:16" pos:end="235:16">=</operator> <name pos:start="235:18" pos:end="235:34">NSV_HAS_READ_NSVF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
