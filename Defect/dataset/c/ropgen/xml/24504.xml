<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24504.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:35">gen_fcmov</name> <parameter_list pos:start="1:37" pos:end="3:60">(<parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:41">void</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">func</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:43"><decl pos:start="3:38" pos:end="3:43"><type pos:start="3:38" pos:end="3:43"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:43">ra</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:51"><decl pos:start="3:46" pos:end="3:51"><type pos:start="3:46" pos:end="3:51"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:51">rb</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:59"><decl pos:start="3:54" pos:end="3:59"><type pos:start="3:54" pos:end="3:59"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:59">rc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:22">

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">l1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:12">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><call pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:26">(<argument pos:start="13:18" pos:end="13:25"><expr pos:start="13:18" pos:end="13:25"><name pos:start="13:18" pos:end="13:19">rc</name> <operator pos:start="13:21" pos:end="13:22">==</operator> <literal type="number" pos:start="13:24" pos:end="13:25">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:6">l1</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:24"><name pos:start="19:10" pos:end="19:22">gen_new_label</name><argument_list pos:start="19:23" pos:end="19:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:7">tmp</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:36"><name pos:start="21:11" pos:end="21:22">tcg_temp_new</name><argument_list pos:start="21:23" pos:end="21:36">(<argument pos:start="21:24" pos:end="21:35"><expr pos:start="21:24" pos:end="21:35"><name pos:start="21:24" pos:end="21:35">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:17">(<expr pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">ra</name> <operator pos:start="23:12" pos:end="23:13">!=</operator> <literal type="number" pos:start="23:15" pos:end="23:16">31</literal></expr>)</condition> <block pos:start="23:19" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:51">

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:11">tmp</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:40"><name pos:start="25:15" pos:end="25:26">tcg_temp_new</name><argument_list pos:start="25:27" pos:end="25:40">(<argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:39">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:51"><expr pos:start="27:9" pos:end="27:50"><call pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:26">tcg_gen_helper_1_1</name><argument_list pos:start="27:27" pos:end="27:50">(<argument pos:start="27:28" pos:end="27:31"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">func</name></expr></argument>, <argument pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:36">tmp</name></expr></argument>, <argument pos:start="27:39" pos:end="27:49"><expr pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:49"><name pos:start="27:39" pos:end="27:45">cpu_fir</name><index pos:start="27:46" pos:end="27:49">[<expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="35:5">else  <block pos:start="29:13" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:43">

        <expr_stmt pos:start="31:9" pos:end="31:31"><expr pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:11">tmp</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:30"><name pos:start="31:15" pos:end="31:27">tcg_const_i64</name><argument_list pos:start="31:28" pos:end="31:30">(<argument pos:start="31:29" pos:end="31:29"><expr pos:start="31:29" pos:end="31:29"><literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:26">tcg_gen_helper_1_1</name><argument_list pos:start="33:27" pos:end="33:42">(<argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">func</name></expr></argument>, <argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:36">tmp</name></expr></argument>, <argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><call pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:23">tcg_gen_brcondi_i64</name><argument_list pos:start="37:24" pos:end="37:48">(<argument pos:start="37:25" pos:end="37:35"><expr pos:start="37:25" pos:end="37:35"><name pos:start="37:25" pos:end="37:35">TCG_COND_EQ</name></expr></argument>, <argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">tmp</name></expr></argument>, <argument pos:start="37:43" pos:end="37:43"><expr pos:start="37:43" pos:end="37:43"><literal type="number" pos:start="37:43" pos:end="37:43">0</literal></expr></argument>, <argument pos:start="37:46" pos:end="37:47"><expr pos:start="37:46" pos:end="37:47"><name pos:start="37:46" pos:end="37:47">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:41"><if pos:start="39:5" pos:end="41:50">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:10">rb</name> <operator pos:start="39:12" pos:end="39:13">!=</operator> <literal type="number" pos:start="39:15" pos:end="39:16">31</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:50"><block_content pos:start="41:9" pos:end="41:50">

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><call pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:23">tcg_gen_mov_i64</name><argument_list pos:start="41:24" pos:end="41:49">(<argument pos:start="41:25" pos:end="41:35"><expr pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:35"><name pos:start="41:25" pos:end="41:31">cpu_fir</name><index pos:start="41:32" pos:end="41:35">[<expr pos:start="41:33" pos:end="41:34"><name pos:start="41:33" pos:end="41:34">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="41:38" pos:end="41:48"><expr pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:44">cpu_fir</name><index pos:start="41:45" pos:end="41:48">[<expr pos:start="41:46" pos:end="41:47"><name pos:start="41:46" pos:end="41:47">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="43:5" pos:end="45:41">else<block type="pseudo" pos:start="45:9" pos:end="45:41"><block_content pos:start="45:9" pos:end="45:41">

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:24">tcg_gen_movi_i64</name><argument_list pos:start="45:25" pos:end="45:40">(<argument pos:start="45:26" pos:end="45:36"><expr pos:start="45:26" pos:end="45:36"><name pos:start="45:26" pos:end="45:36"><name pos:start="45:26" pos:end="45:32">cpu_fir</name><index pos:start="45:33" pos:end="45:36">[<expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><call pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:17">gen_set_label</name><argument_list pos:start="47:18" pos:end="47:21">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
