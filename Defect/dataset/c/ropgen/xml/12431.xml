<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12431.c" pos:tabs="8"><function pos:start="1:1" pos:end="359:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vmd_decode</name><parameter_list pos:start="1:22" pos:end="1:57">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">VmdVideoContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:49">AVFrame</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:56">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="359:1">{<block_content pos:start="5:5" pos:end="357:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:27">palette32</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:19">r</name></decl>, <decl pos:start="9:22" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:22" pos:end="9:22">g</name></decl>, <decl pos:start="9:25" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:25" pos:end="9:25">b</name></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">GetByteContext</name></type> <name pos:start="13:20" pos:end="13:21">gb</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">char</name></type> <name pos:start="17:19" pos:end="17:22">meth</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:21">dp</name></decl>;</decl_stmt>   <comment type="block" pos:start="19:26" pos:end="19:55">/* pointer to current frame */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name> <modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:21">pp</name></decl>;</decl_stmt>   <comment type="block" pos:start="21:26" pos:end="21:56">/* pointer to previous frame */</comment>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:21"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:17">char</name></type> <name pos:start="23:19" pos:end="23:21">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ofs</name></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:25"><decl pos:start="29:5" pos:end="29:15"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:15">frame_x</name></decl>, <decl pos:start="29:18" pos:end="29:24"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:18" pos:end="29:24">frame_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:34"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:19">frame_width</name></decl>, <decl pos:start="31:22" pos:end="31:33"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:22" pos:end="31:33">frame_height</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:11">frame_x</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:33"><name pos:start="35:15" pos:end="35:21">AV_RL16</name><argument_list pos:start="35:22" pos:end="35:33">(<argument pos:start="35:23" pos:end="35:32"><expr pos:start="35:23" pos:end="35:32"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:32"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:29">buf</name><index pos:start="35:30" pos:end="35:32">[<expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:11">frame_y</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:33"><name pos:start="37:15" pos:end="37:21">AV_RL16</name><argument_list pos:start="37:22" pos:end="37:33">(<argument pos:start="37:23" pos:end="37:32"><expr pos:start="37:23" pos:end="37:32"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:32"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:29">buf</name><index pos:start="37:30" pos:end="37:32">[<expr pos:start="37:31" pos:end="37:31"><literal type="number" pos:start="37:31" pos:end="37:31">8</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:15">frame_width</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:38"><name pos:start="39:19" pos:end="39:25">AV_RL16</name><argument_list pos:start="39:26" pos:end="39:38">(<argument pos:start="39:27" pos:end="39:37"><expr pos:start="39:27" pos:end="39:37"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:37"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:33">buf</name><index pos:start="39:34" pos:end="39:37">[<expr pos:start="39:35" pos:end="39:36"><literal type="number" pos:start="39:35" pos:end="39:36">10</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="39:40" pos:end="39:40">-</operator> <name pos:start="39:42" pos:end="39:48">frame_x</name> <operator pos:start="39:50" pos:end="39:50">+</operator> <literal type="number" pos:start="39:52" pos:end="39:52">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:54"><expr pos:start="41:5" pos:end="41:53"><name pos:start="41:5" pos:end="41:16">frame_height</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:39"><name pos:start="41:20" pos:end="41:26">AV_RL16</name><argument_list pos:start="41:27" pos:end="41:39">(<argument pos:start="41:28" pos:end="41:38"><expr pos:start="41:28" pos:end="41:38"><operator pos:start="41:28" pos:end="41:28">&amp;</operator><name pos:start="41:29" pos:end="41:38"><name pos:start="41:29" pos:end="41:29">s</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:34">buf</name><index pos:start="41:35" pos:end="41:38">[<expr pos:start="41:36" pos:end="41:37"><literal type="number" pos:start="41:36" pos:end="41:37">12</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="41:41" pos:end="41:41">-</operator> <name pos:start="41:43" pos:end="41:49">frame_y</name> <operator pos:start="41:51" pos:end="41:51">+</operator> <literal type="number" pos:start="41:53" pos:end="41:53">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="47:29">(<expr pos:start="45:9" pos:end="47:28"><operator pos:start="45:9" pos:end="45:9">(</operator><name pos:start="45:10" pos:end="45:20">frame_width</name> <operator pos:start="45:22" pos:end="45:23">==</operator> <name pos:start="45:25" pos:end="45:39"><name pos:start="45:25" pos:end="45:25">s</name><operator pos:start="45:26" pos:end="45:27">-&gt;</operator><name pos:start="45:28" pos:end="45:32">avctx</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:39">width</name></name> <operator pos:start="45:41" pos:end="45:42">&amp;&amp;</operator> <name pos:start="45:44" pos:end="45:55">frame_height</name> <operator pos:start="45:57" pos:end="45:58">==</operator> <name pos:start="45:60" pos:end="45:75"><name pos:start="45:60" pos:end="45:60">s</name><operator pos:start="45:61" pos:end="45:62">-&gt;</operator><name pos:start="45:63" pos:end="45:67">avctx</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:75">height</name></name><operator pos:start="45:76" pos:end="45:76">)</operator> <operator pos:start="45:78" pos:end="45:79">&amp;&amp;</operator>

        <operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:16">frame_x</name> <operator pos:start="47:18" pos:end="47:19">||</operator> <name pos:start="47:21" pos:end="47:27">frame_y</name><operator pos:start="47:28" pos:end="47:28">)</operator></expr>)</condition> <block pos:start="47:31" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:27">



        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">x_off</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:26">frame_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">y_off</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:26">frame_y</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:11">frame_x</name> <operator pos:start="57:13" pos:end="57:14">-=</operator> <name pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">x_off</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:11">frame_y</name> <operator pos:start="59:13" pos:end="59:14">-=</operator> <name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">y_off</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="79:5"><if pos:start="63:5" pos:end="79:5">if <condition pos:start="63:8" pos:end="69:48">(<expr pos:start="63:9" pos:end="69:47"><name pos:start="63:9" pos:end="69:31"><name pos:start="63:9" pos:end="63:15">frame_x</name> <argument_list type="generic" pos:start="63:17" pos:end="69:31">&lt; <argument pos:start="63:19" pos:end="69:29"><expr pos:start="63:19" pos:end="69:29"><literal type="number" pos:start="63:19" pos:end="63:19">0</literal> <operator pos:start="63:21" pos:end="63:22">||</operator> <name pos:start="63:24" pos:end="67:21"><name pos:start="63:24" pos:end="63:34">frame_width</name> <argument_list type="generic" pos:start="63:36" pos:end="67:21">&lt; <argument pos:start="63:38" pos:end="67:19"><expr pos:start="63:38" pos:end="67:19"><literal type="number" pos:start="63:38" pos:end="63:38">0</literal> <operator pos:start="63:40" pos:end="63:41">||</operator>

        <name pos:start="65:9" pos:end="65:15">frame_x</name> <operator pos:start="65:17" pos:end="65:18">&gt;=</operator> <name pos:start="65:20" pos:end="65:34"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:27">avctx</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:34">width</name></name> <operator pos:start="65:36" pos:end="65:37">||</operator>

        <name pos:start="67:9" pos:end="67:19">frame_width</name></expr></argument> &gt;</argument_list></name> <name pos:start="67:23" pos:end="67:37"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:30">avctx</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:37">width</name></name> <operator pos:start="67:39" pos:end="67:40">||</operator>

        <name pos:start="69:9" pos:end="69:15">frame_x</name> <operator pos:start="69:17" pos:end="69:17">+</operator> <name pos:start="69:19" pos:end="69:29">frame_width</name></expr></argument> &gt;</argument_list></name> <name pos:start="69:33" pos:end="69:47"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:40">avctx</name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:47">width</name></name></expr>)</condition> <block pos:start="69:50" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:35">

        <expr_stmt pos:start="71:9" pos:end="75:37"><expr pos:start="71:9" pos:end="75:36"><call pos:start="71:9" pos:end="75:36"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="75:36">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="73:16" pos:end="73:49"><expr pos:start="73:16" pos:end="73:49"><literal type="string" pos:start="73:16" pos:end="73:49">"Invalid horizontal range %d-%d\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:22"><expr pos:start="75:16" pos:end="75:22"><name pos:start="75:16" pos:end="75:22">frame_x</name></expr></argument>, <argument pos:start="75:25" pos:end="75:35"><expr pos:start="75:25" pos:end="75:35"><name pos:start="75:25" pos:end="75:35">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:35">return <expr pos:start="77:16" pos:end="77:34"><name pos:start="77:16" pos:end="77:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="97:5"><if pos:start="81:5" pos:end="97:5">if <condition pos:start="81:8" pos:end="87:50">(<expr pos:start="81:9" pos:end="87:49"><name pos:start="81:9" pos:end="87:32"><name pos:start="81:9" pos:end="81:15">frame_y</name> <argument_list type="generic" pos:start="81:17" pos:end="87:32">&lt; <argument pos:start="81:19" pos:end="87:30"><expr pos:start="81:19" pos:end="87:30"><literal type="number" pos:start="81:19" pos:end="81:19">0</literal> <operator pos:start="81:21" pos:end="81:22">||</operator> <name pos:start="81:24" pos:end="85:22"><name pos:start="81:24" pos:end="81:35">frame_height</name> <argument_list type="generic" pos:start="81:37" pos:end="85:22">&lt; <argument pos:start="81:39" pos:end="85:20"><expr pos:start="81:39" pos:end="85:20"><literal type="number" pos:start="81:39" pos:end="81:39">0</literal> <operator pos:start="81:41" pos:end="81:42">||</operator>

        <name pos:start="83:9" pos:end="83:15">frame_y</name> <operator pos:start="83:17" pos:end="83:18">&gt;=</operator> <name pos:start="83:20" pos:end="83:35"><name pos:start="83:20" pos:end="83:20">s</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:27">avctx</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:35">height</name></name> <operator pos:start="83:37" pos:end="83:38">||</operator>

        <name pos:start="85:9" pos:end="85:20">frame_height</name></expr></argument> &gt;</argument_list></name> <name pos:start="85:24" pos:end="85:39"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">avctx</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:39">height</name></name> <operator pos:start="85:41" pos:end="85:42">||</operator>

        <name pos:start="87:9" pos:end="87:15">frame_y</name> <operator pos:start="87:17" pos:end="87:17">+</operator> <name pos:start="87:19" pos:end="87:30">frame_height</name></expr></argument> &gt;</argument_list></name> <name pos:start="87:34" pos:end="87:49"><name pos:start="87:34" pos:end="87:34">s</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:41">avctx</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:49">height</name></name></expr>)</condition> <block pos:start="87:52" pos:end="97:5">{<block_content pos:start="89:9" pos:end="95:35">

        <expr_stmt pos:start="89:9" pos:end="93:37"><expr pos:start="89:9" pos:end="93:36"><call pos:start="89:9" pos:end="93:36"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="93:36">(<argument pos:start="89:16" pos:end="89:23"><expr pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:23"><name pos:start="89:16" pos:end="89:16">s</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:23">avctx</name></name></expr></argument>, <argument pos:start="89:26" pos:end="89:37"><expr pos:start="89:26" pos:end="89:37"><name pos:start="89:26" pos:end="89:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="91:16" pos:end="91:47"><expr pos:start="91:16" pos:end="91:47"><literal type="string" pos:start="91:16" pos:end="91:47">"Invalid vertical range %d-%d\n"</literal></expr></argument>,

               <argument pos:start="93:16" pos:end="93:22"><expr pos:start="93:16" pos:end="93:22"><name pos:start="93:16" pos:end="93:22">frame_x</name></expr></argument>, <argument pos:start="93:25" pos:end="93:35"><expr pos:start="93:25" pos:end="93:35"><name pos:start="93:25" pos:end="93:35">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:35">return <expr pos:start="95:16" pos:end="95:34"><name pos:start="95:16" pos:end="95:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="103:33">/* if only a certain region will be updated, copy the entire previous

     * frame before the decode */</comment>

    <if_stmt pos:start="105:5" pos:end="117:5"><if pos:start="105:5" pos:end="117:5">if <condition pos:start="105:8" pos:end="109:44">(<expr pos:start="105:9" pos:end="109:43"><name pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:21">prev_frame</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:27">data</name><index pos:start="105:28" pos:end="105:30">[<expr pos:start="105:29" pos:end="105:29"><literal type="number" pos:start="105:29" pos:end="105:29">0</literal></expr>]</index></name> <operator pos:start="105:32" pos:end="105:33">&amp;&amp;</operator>

        <operator pos:start="107:9" pos:end="107:9">(</operator><name pos:start="107:10" pos:end="107:16">frame_x</name> <operator pos:start="107:18" pos:end="107:19">||</operator> <name pos:start="107:21" pos:end="107:27">frame_y</name> <operator pos:start="107:29" pos:end="107:30">||</operator> <operator pos:start="107:32" pos:end="107:32">(</operator><name pos:start="107:33" pos:end="107:43">frame_width</name> <operator pos:start="107:45" pos:end="107:46">!=</operator> <name pos:start="107:48" pos:end="107:62"><name pos:start="107:48" pos:end="107:48">s</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:55">avctx</name><operator pos:start="107:56" pos:end="107:57">-&gt;</operator><name pos:start="107:58" pos:end="107:62">width</name></name><operator pos:start="107:63" pos:end="107:63">)</operator> <operator pos:start="107:65" pos:end="107:66">||</operator>

        <operator pos:start="109:9" pos:end="109:9">(</operator><name pos:start="109:10" pos:end="109:21">frame_height</name> <operator pos:start="109:23" pos:end="109:24">!=</operator> <name pos:start="109:26" pos:end="109:41"><name pos:start="109:26" pos:end="109:26">s</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:33">avctx</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:41">height</name></name><operator pos:start="109:42" pos:end="109:42">)</operator><operator pos:start="109:43" pos:end="109:43">)</operator></expr>)</condition> <block pos:start="109:46" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:51">



        <expr_stmt pos:start="113:9" pos:end="115:51"><expr pos:start="113:9" pos:end="115:50"><call pos:start="113:9" pos:end="115:50"><name pos:start="113:9" pos:end="113:14">memcpy</name><argument_list pos:start="113:15" pos:end="115:50">(<argument pos:start="113:16" pos:end="113:29"><expr pos:start="113:16" pos:end="113:29"><name pos:start="113:16" pos:end="113:29"><name pos:start="113:16" pos:end="113:20">frame</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:26">data</name><index pos:start="113:27" pos:end="113:29">[<expr pos:start="113:28" pos:end="113:28"><literal type="number" pos:start="113:28" pos:end="113:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:32" pos:end="113:53"><expr pos:start="113:32" pos:end="113:53"><name pos:start="113:32" pos:end="113:53"><name pos:start="113:32" pos:end="113:32">s</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:44">prev_frame</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:50">data</name><index pos:start="113:51" pos:end="113:53">[<expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">0</literal></expr>]</index></name></expr></argument>,

            <argument pos:start="115:13" pos:end="115:49"><expr pos:start="115:13" pos:end="115:49"><name pos:start="115:13" pos:end="115:28"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:20">avctx</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:28">height</name></name> <operator pos:start="115:30" pos:end="115:30">*</operator> <name pos:start="115:32" pos:end="115:49"><name pos:start="115:32" pos:end="115:36">frame</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:46">linesize</name><index pos:start="115:47" pos:end="115:49">[<expr pos:start="115:48" pos:end="115:48"><literal type="number" pos:start="115:48" pos:end="115:48">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:41">/* check if there is a new palette */</comment>

    <expr_stmt pos:start="123:5" pos:end="123:53"><expr pos:start="123:5" pos:end="123:52"><call pos:start="123:5" pos:end="123:52"><name pos:start="123:5" pos:end="123:20">bytestream2_init</name><argument_list pos:start="123:21" pos:end="123:52">(<argument pos:start="123:22" pos:end="123:24"><expr pos:start="123:22" pos:end="123:24"><operator pos:start="123:22" pos:end="123:22">&amp;</operator><name pos:start="123:23" pos:end="123:24">gb</name></expr></argument>, <argument pos:start="123:27" pos:end="123:37"><expr pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:32"><name pos:start="123:27" pos:end="123:27">s</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:32">buf</name></name> <operator pos:start="123:34" pos:end="123:34">+</operator> <literal type="number" pos:start="123:36" pos:end="123:37">16</literal></expr></argument>, <argument pos:start="123:40" pos:end="123:51"><expr pos:start="123:40" pos:end="123:51"><name pos:start="123:40" pos:end="123:46"><name pos:start="123:40" pos:end="123:40">s</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:46">size</name></name> <operator pos:start="123:48" pos:end="123:48">-</operator> <literal type="number" pos:start="123:50" pos:end="123:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="155:5"><if pos:start="125:5" pos:end="155:5">if <condition pos:start="125:8" pos:end="125:26">(<expr pos:start="125:9" pos:end="125:25"><name pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:14">buf</name><index pos:start="125:15" pos:end="125:18">[<expr pos:start="125:16" pos:end="125:17"><literal type="number" pos:start="125:16" pos:end="125:17">15</literal></expr>]</index></name> <operator pos:start="125:20" pos:end="125:20">&amp;</operator> <literal type="number" pos:start="125:22" pos:end="125:25">0x02</literal></expr>)</condition> <block pos:start="125:28" pos:end="155:5">{<block_content pos:start="127:9" pos:end="153:9">

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><call pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:24">bytestream2_skip</name><argument_list pos:start="127:25" pos:end="127:32">(<argument pos:start="127:26" pos:end="127:28"><expr pos:start="127:26" pos:end="127:28"><operator pos:start="127:26" pos:end="127:26">&amp;</operator><name pos:start="127:27" pos:end="127:28">gb</name></expr></argument>, <argument pos:start="127:31" pos:end="127:31"><expr pos:start="127:31" pos:end="127:31"><literal type="number" pos:start="127:31" pos:end="127:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:47"><expr pos:start="129:9" pos:end="129:46"><name pos:start="129:9" pos:end="129:17">palette32</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <operator pos:start="129:21" pos:end="129:21">(</operator><name pos:start="129:22" pos:end="129:29">unsigned</name> <name pos:start="129:31" pos:end="129:33">int</name> <operator pos:start="129:35" pos:end="129:35">*</operator><operator pos:start="129:36" pos:end="129:36">)</operator><name pos:start="129:37" pos:end="129:46"><name pos:start="129:37" pos:end="129:37">s</name><operator pos:start="129:38" pos:end="129:39">-&gt;</operator><name pos:start="129:40" pos:end="129:46">palette</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="153:9"><if pos:start="131:9" pos:end="147:9">if <condition pos:start="131:12" pos:end="131:65">(<expr pos:start="131:13" pos:end="131:64"><call pos:start="131:13" pos:end="131:43"><name pos:start="131:13" pos:end="131:38">bytestream2_get_bytes_left</name><argument_list pos:start="131:39" pos:end="131:43">(<argument pos:start="131:40" pos:end="131:42"><expr pos:start="131:40" pos:end="131:42"><operator pos:start="131:40" pos:end="131:40">&amp;</operator><name pos:start="131:41" pos:end="131:42">gb</name></expr></argument>)</argument_list></call> <operator pos:start="131:45" pos:end="131:46">&gt;=</operator> <name pos:start="131:48" pos:end="131:60">PALETTE_COUNT</name> <operator pos:start="131:62" pos:end="131:62">*</operator> <literal type="number" pos:start="131:64" pos:end="131:64">3</literal></expr>)</condition> <block pos:start="131:67" pos:end="147:9">{<block_content pos:start="133:13" pos:end="145:13">

            <for pos:start="133:13" pos:end="145:13">for <control pos:start="133:17" pos:end="133:47">(<init pos:start="133:18" pos:end="133:23"><expr pos:start="133:18" pos:end="133:22"><name pos:start="133:18" pos:end="133:18">i</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr>;</init> <condition pos:start="133:25" pos:end="133:42"><expr pos:start="133:25" pos:end="133:41"><name pos:start="133:25" pos:end="133:25">i</name> <operator pos:start="133:27" pos:end="133:27">&lt;</operator> <name pos:start="133:29" pos:end="133:41">PALETTE_COUNT</name></expr>;</condition> <incr pos:start="133:44" pos:end="133:46"><expr pos:start="133:44" pos:end="133:46"><name pos:start="133:44" pos:end="133:44">i</name><operator pos:start="133:45" pos:end="133:46">++</operator></expr></incr>)</control> <block pos:start="133:49" pos:end="145:13">{<block_content pos:start="135:17" pos:end="143:60">

                <expr_stmt pos:start="135:17" pos:end="135:51"><expr pos:start="135:17" pos:end="135:50"><name pos:start="135:17" pos:end="135:17">r</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <call pos:start="135:21" pos:end="135:46"><name pos:start="135:21" pos:end="135:41">bytestream2_get_byteu</name><argument_list pos:start="135:42" pos:end="135:46">(<argument pos:start="135:43" pos:end="135:45"><expr pos:start="135:43" pos:end="135:45"><operator pos:start="135:43" pos:end="135:43">&amp;</operator><name pos:start="135:44" pos:end="135:45">gb</name></expr></argument>)</argument_list></call> <operator pos:start="135:48" pos:end="135:48">*</operator> <literal type="number" pos:start="135:50" pos:end="135:50">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:51"><expr pos:start="137:17" pos:end="137:50"><name pos:start="137:17" pos:end="137:17">g</name> <operator pos:start="137:19" pos:end="137:19">=</operator> <call pos:start="137:21" pos:end="137:46"><name pos:start="137:21" pos:end="137:41">bytestream2_get_byteu</name><argument_list pos:start="137:42" pos:end="137:46">(<argument pos:start="137:43" pos:end="137:45"><expr pos:start="137:43" pos:end="137:45"><operator pos:start="137:43" pos:end="137:43">&amp;</operator><name pos:start="137:44" pos:end="137:45">gb</name></expr></argument>)</argument_list></call> <operator pos:start="137:48" pos:end="137:48">*</operator> <literal type="number" pos:start="137:50" pos:end="137:50">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:51"><expr pos:start="139:17" pos:end="139:50"><name pos:start="139:17" pos:end="139:17">b</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <call pos:start="139:21" pos:end="139:46"><name pos:start="139:21" pos:end="139:41">bytestream2_get_byteu</name><argument_list pos:start="139:42" pos:end="139:46">(<argument pos:start="139:43" pos:end="139:45"><expr pos:start="139:43" pos:end="139:45"><operator pos:start="139:43" pos:end="139:43">&amp;</operator><name pos:start="139:44" pos:end="139:45">gb</name></expr></argument>)</argument_list></call> <operator pos:start="139:48" pos:end="139:48">*</operator> <literal type="number" pos:start="139:50" pos:end="139:50">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:72"><expr pos:start="141:17" pos:end="141:71"><name pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:25">palette32</name><index pos:start="141:26" pos:end="141:28">[<expr pos:start="141:27" pos:end="141:27"><name pos:start="141:27" pos:end="141:27">i</name></expr>]</index></name> <operator pos:start="141:30" pos:end="141:30">=</operator> <literal type="number" pos:start="141:32" pos:end="141:36">0xFFU</literal> <operator pos:start="141:38" pos:end="141:39">&lt;&lt;</operator> <literal type="number" pos:start="141:41" pos:end="141:42">24</literal> <operator pos:start="141:44" pos:end="141:44">|</operator> <operator pos:start="141:46" pos:end="141:46">(</operator><name pos:start="141:47" pos:end="141:47">r</name> <operator pos:start="141:49" pos:end="141:50">&lt;&lt;</operator> <literal type="number" pos:start="141:52" pos:end="141:53">16</literal><operator pos:start="141:54" pos:end="141:54">)</operator> <operator pos:start="141:56" pos:end="141:56">|</operator> <operator pos:start="141:58" pos:end="141:58">(</operator><name pos:start="141:59" pos:end="141:59">g</name> <operator pos:start="141:61" pos:end="141:62">&lt;&lt;</operator> <literal type="number" pos:start="141:64" pos:end="141:64">8</literal><operator pos:start="141:65" pos:end="141:65">)</operator> <operator pos:start="141:67" pos:end="141:67">|</operator> <operator pos:start="141:69" pos:end="141:69">(</operator><name pos:start="141:70" pos:end="141:70">b</name><operator pos:start="141:71" pos:end="141:71">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:60"><expr pos:start="143:17" pos:end="143:59"><name pos:start="143:17" pos:end="143:28"><name pos:start="143:17" pos:end="143:25">palette32</name><index pos:start="143:26" pos:end="143:28">[<expr pos:start="143:27" pos:end="143:27"><name pos:start="143:27" pos:end="143:27">i</name></expr>]</index></name> <operator pos:start="143:30" pos:end="143:31">|=</operator> <name pos:start="143:33" pos:end="143:44"><name pos:start="143:33" pos:end="143:41">palette32</name><index pos:start="143:42" pos:end="143:44">[<expr pos:start="143:43" pos:end="143:43"><name pos:start="143:43" pos:end="143:43">i</name></expr>]</index></name> <operator pos:start="143:46" pos:end="143:47">&gt;&gt;</operator> <literal type="number" pos:start="143:49" pos:end="143:49">6</literal> <operator pos:start="143:51" pos:end="143:51">&amp;</operator> <literal type="number" pos:start="143:53" pos:end="143:59">0x30303</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="147:11" pos:end="153:9">else <block pos:start="147:16" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:39">

            <expr_stmt pos:start="149:13" pos:end="149:67"><expr pos:start="149:13" pos:end="149:66"><call pos:start="149:13" pos:end="149:66"><name pos:start="149:13" pos:end="149:18">av_log</name><argument_list pos:start="149:19" pos:end="149:66">(<argument pos:start="149:20" pos:end="149:27"><expr pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:27"><name pos:start="149:20" pos:end="149:20">s</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:27">avctx</name></name></expr></argument>, <argument pos:start="149:30" pos:end="149:41"><expr pos:start="149:30" pos:end="149:41"><name pos:start="149:30" pos:end="149:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:44" pos:end="149:65"><expr pos:start="149:44" pos:end="149:65"><literal type="string" pos:start="149:44" pos:end="149:65">"Incomplete palette\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="151:13" pos:end="151:39">return <expr pos:start="151:20" pos:end="151:38"><name pos:start="151:20" pos:end="151:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="159:5" pos:end="161:17"><if pos:start="159:5" pos:end="161:17">if <condition pos:start="159:8" pos:end="159:17">(<expr pos:start="159:9" pos:end="159:16"><operator pos:start="159:9" pos:end="159:9">!</operator><name pos:start="159:10" pos:end="159:16"><name pos:start="159:10" pos:end="159:10">s</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:16">size</name></name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:17"><block_content pos:start="161:9" pos:end="161:17">

        <return pos:start="161:9" pos:end="161:17">return <expr pos:start="161:16" pos:end="161:16"><literal type="number" pos:start="161:16" pos:end="161:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="165:5" pos:end="165:46">/* originally UnpackFrame in VAG's code */</comment>

    <if_stmt pos:start="167:5" pos:end="169:35"><if pos:start="167:5" pos:end="169:35">if <condition pos:start="167:8" pos:end="167:44">(<expr pos:start="167:9" pos:end="167:43"><call pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:34">bytestream2_get_bytes_left</name><argument_list pos:start="167:35" pos:end="167:39">(<argument pos:start="167:36" pos:end="167:38"><expr pos:start="167:36" pos:end="167:38"><operator pos:start="167:36" pos:end="167:36">&amp;</operator><name pos:start="167:37" pos:end="167:38">gb</name></expr></argument>)</argument_list></call> <operator pos:start="167:41" pos:end="167:41">&lt;</operator> <literal type="number" pos:start="167:43" pos:end="167:43">1</literal></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:35"><block_content pos:start="169:9" pos:end="169:35">

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:38"><expr pos:start="171:5" pos:end="171:37"><name pos:start="171:5" pos:end="171:8">meth</name> <operator pos:start="171:10" pos:end="171:10">=</operator> <call pos:start="171:12" pos:end="171:37"><name pos:start="171:12" pos:end="171:32">bytestream2_get_byteu</name><argument_list pos:start="171:33" pos:end="171:37">(<argument pos:start="171:34" pos:end="171:36"><expr pos:start="171:34" pos:end="171:36"><operator pos:start="171:34" pos:end="171:34">&amp;</operator><name pos:start="171:35" pos:end="171:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="193:5"><if pos:start="173:5" pos:end="193:5">if <condition pos:start="173:8" pos:end="173:20">(<expr pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:12">meth</name> <operator pos:start="173:14" pos:end="173:14">&amp;</operator> <literal type="number" pos:start="173:16" pos:end="173:19">0x80</literal></expr>)</condition> <block pos:start="173:22" pos:end="193:5">{<block_content pos:start="175:9" pos:end="191:71">

        <if_stmt pos:start="175:9" pos:end="183:9"><if pos:start="175:9" pos:end="183:9">if <condition pos:start="175:12" pos:end="175:35">(<expr pos:start="175:13" pos:end="175:34"><operator pos:start="175:13" pos:end="175:13">!</operator><name pos:start="175:14" pos:end="175:34"><name pos:start="175:14" pos:end="175:14">s</name><operator pos:start="175:15" pos:end="175:16">-&gt;</operator><name pos:start="175:17" pos:end="175:34">unpack_buffer_size</name></name></expr>)</condition> <block pos:start="175:37" pos:end="183:9">{<block_content pos:start="177:13" pos:end="181:39">

            <expr_stmt pos:start="177:13" pos:end="179:79"><expr pos:start="177:13" pos:end="179:78"><call pos:start="177:13" pos:end="179:78"><name pos:start="177:13" pos:end="177:18">av_log</name><argument_list pos:start="177:19" pos:end="179:78">(<argument pos:start="177:20" pos:end="177:27"><expr pos:start="177:20" pos:end="177:27"><name pos:start="177:20" pos:end="177:27"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:27">avctx</name></name></expr></argument>, <argument pos:start="177:30" pos:end="177:41"><expr pos:start="177:30" pos:end="177:41"><name pos:start="177:30" pos:end="177:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="179:20" pos:end="179:77"><expr pos:start="179:20" pos:end="179:77"><literal type="string" pos:start="179:20" pos:end="179:77">"Trying to unpack LZ-compressed frame with no LZ buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="181:13" pos:end="181:39">return <expr pos:start="181:20" pos:end="181:38"><name pos:start="181:20" pos:end="181:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="187:59"><expr pos:start="185:9" pos:end="187:58"><call pos:start="185:9" pos:end="187:58"><name pos:start="185:9" pos:end="185:17">lz_unpack</name><argument_list pos:start="185:18" pos:end="187:58">(<argument pos:start="185:19" pos:end="185:27"><expr pos:start="185:19" pos:end="185:27"><name pos:start="185:19" pos:end="185:27"><name pos:start="185:19" pos:end="185:20">gb</name><operator pos:start="185:21" pos:end="185:21">.</operator><name pos:start="185:22" pos:end="185:27">buffer</name></name></expr></argument>, <argument pos:start="185:30" pos:end="185:60"><expr pos:start="185:30" pos:end="185:60"><call pos:start="185:30" pos:end="185:60"><name pos:start="185:30" pos:end="185:55">bytestream2_get_bytes_left</name><argument_list pos:start="185:56" pos:end="185:60">(<argument pos:start="185:57" pos:end="185:59"><expr pos:start="185:57" pos:end="185:59"><operator pos:start="185:57" pos:end="185:57">&amp;</operator><name pos:start="185:58" pos:end="185:59">gb</name></expr></argument>)</argument_list></call></expr></argument>,

                  <argument pos:start="187:19" pos:end="187:34"><expr pos:start="187:19" pos:end="187:34"><name pos:start="187:19" pos:end="187:34"><name pos:start="187:19" pos:end="187:19">s</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:34">unpack_buffer</name></name></expr></argument>, <argument pos:start="187:37" pos:end="187:57"><expr pos:start="187:37" pos:end="187:57"><name pos:start="187:37" pos:end="187:57"><name pos:start="187:37" pos:end="187:37">s</name><operator pos:start="187:38" pos:end="187:39">-&gt;</operator><name pos:start="187:40" pos:end="187:57">unpack_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:21"><expr pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:12">meth</name> <operator pos:start="189:14" pos:end="189:15">&amp;=</operator> <literal type="number" pos:start="189:17" pos:end="189:20">0x7F</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:71"><expr pos:start="191:9" pos:end="191:70"><call pos:start="191:9" pos:end="191:70"><name pos:start="191:9" pos:end="191:24">bytestream2_init</name><argument_list pos:start="191:25" pos:end="191:70">(<argument pos:start="191:26" pos:end="191:28"><expr pos:start="191:26" pos:end="191:28"><operator pos:start="191:26" pos:end="191:26">&amp;</operator><name pos:start="191:27" pos:end="191:28">gb</name></expr></argument>, <argument pos:start="191:31" pos:end="191:46"><expr pos:start="191:31" pos:end="191:46"><name pos:start="191:31" pos:end="191:46"><name pos:start="191:31" pos:end="191:31">s</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:46">unpack_buffer</name></name></expr></argument>, <argument pos:start="191:49" pos:end="191:69"><expr pos:start="191:49" pos:end="191:69"><name pos:start="191:49" pos:end="191:69"><name pos:start="191:49" pos:end="191:49">s</name><operator pos:start="191:50" pos:end="191:51">-&gt;</operator><name pos:start="191:52" pos:end="191:69">unpack_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:65"><expr pos:start="197:5" pos:end="197:64"><name pos:start="197:5" pos:end="197:6">dp</name> <operator pos:start="197:8" pos:end="197:8">=</operator> <operator pos:start="197:10" pos:end="197:10">&amp;</operator><name pos:start="197:11" pos:end="197:64"><name pos:start="197:11" pos:end="197:15">frame</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:21">data</name><index pos:start="197:22" pos:end="197:24">[<expr pos:start="197:23" pos:end="197:23"><literal type="number" pos:start="197:23" pos:end="197:23">0</literal></expr>]</index><index pos:start="197:25" pos:end="197:64">[<expr pos:start="197:26" pos:end="197:63"><name pos:start="197:26" pos:end="197:32">frame_y</name> <operator pos:start="197:34" pos:end="197:34">*</operator> <name pos:start="197:36" pos:end="197:53"><name pos:start="197:36" pos:end="197:40">frame</name><operator pos:start="197:41" pos:end="197:42">-&gt;</operator><name pos:start="197:43" pos:end="197:50">linesize</name><index pos:start="197:51" pos:end="197:53">[<expr pos:start="197:52" pos:end="197:52"><literal type="number" pos:start="197:52" pos:end="197:52">0</literal></expr>]</index></name> <operator pos:start="197:55" pos:end="197:55">+</operator> <name pos:start="197:57" pos:end="197:63">frame_x</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:81"><expr pos:start="199:5" pos:end="199:80"><name pos:start="199:5" pos:end="199:6">pp</name> <operator pos:start="199:8" pos:end="199:8">=</operator> <operator pos:start="199:10" pos:end="199:10">&amp;</operator><name pos:start="199:11" pos:end="199:80"><name pos:start="199:11" pos:end="199:11">s</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:23">prev_frame</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:29">data</name><index pos:start="199:30" pos:end="199:32">[<expr pos:start="199:31" pos:end="199:31"><literal type="number" pos:start="199:31" pos:end="199:31">0</literal></expr>]</index><index pos:start="199:33" pos:end="199:80">[<expr pos:start="199:34" pos:end="199:79"><name pos:start="199:34" pos:end="199:40">frame_y</name> <operator pos:start="199:42" pos:end="199:42">*</operator> <name pos:start="199:44" pos:end="199:69"><name pos:start="199:44" pos:end="199:44">s</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:56">prev_frame</name><operator pos:start="199:57" pos:end="199:58">-&gt;</operator><name pos:start="199:59" pos:end="199:66">linesize</name><index pos:start="199:67" pos:end="199:69">[<expr pos:start="199:68" pos:end="199:68"><literal type="number" pos:start="199:68" pos:end="199:68">0</literal></expr>]</index></name> <operator pos:start="199:71" pos:end="199:71">+</operator> <name pos:start="199:73" pos:end="199:79">frame_x</name></expr>]</index></name></expr>;</expr_stmt>

    <switch pos:start="201:5" pos:end="355:5">switch <condition pos:start="201:12" pos:end="201:17">(<expr pos:start="201:13" pos:end="201:16"><name pos:start="201:13" pos:end="201:16">meth</name></expr>)</condition> <block pos:start="201:19" pos:end="355:5">{<block_content pos:start="203:5" pos:end="353:14">

    <case pos:start="203:5" pos:end="203:11">case <expr pos:start="203:10" pos:end="203:10"><literal type="number" pos:start="203:10" pos:end="203:10">1</literal></expr>:</case>

        <for pos:start="205:9" pos:end="259:9">for <control pos:start="205:13" pos:end="205:42">(<init pos:start="205:14" pos:end="205:19"><expr pos:start="205:14" pos:end="205:18"><name pos:start="205:14" pos:end="205:14">i</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <literal type="number" pos:start="205:18" pos:end="205:18">0</literal></expr>;</init> <condition pos:start="205:21" pos:end="205:37"><expr pos:start="205:21" pos:end="205:36"><name pos:start="205:21" pos:end="205:21">i</name> <operator pos:start="205:23" pos:end="205:23">&lt;</operator> <name pos:start="205:25" pos:end="205:36">frame_height</name></expr>;</condition> <incr pos:start="205:39" pos:end="205:41"><expr pos:start="205:39" pos:end="205:41"><name pos:start="205:39" pos:end="205:39">i</name><operator pos:start="205:40" pos:end="205:41">++</operator></expr></incr>)</control> <block pos:start="205:44" pos:end="259:9">{<block_content pos:start="207:13" pos:end="257:45">

            <expr_stmt pos:start="207:13" pos:end="207:20"><expr pos:start="207:13" pos:end="207:19"><name pos:start="207:13" pos:end="207:15">ofs</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <literal type="number" pos:start="207:19" pos:end="207:19">0</literal></expr>;</expr_stmt>

            <do pos:start="209:13" pos:end="241:40">do <block pos:start="209:16" pos:end="241:13">{<block_content pos:start="211:17" pos:end="239:17">

                <expr_stmt pos:start="211:17" pos:end="211:48"><expr pos:start="211:17" pos:end="211:47"><name pos:start="211:17" pos:end="211:19">len</name> <operator pos:start="211:21" pos:end="211:21">=</operator> <call pos:start="211:23" pos:end="211:47"><name pos:start="211:23" pos:end="211:42">bytestream2_get_byte</name><argument_list pos:start="211:43" pos:end="211:47">(<argument pos:start="211:44" pos:end="211:46"><expr pos:start="211:44" pos:end="211:46"><operator pos:start="211:44" pos:end="211:44">&amp;</operator><name pos:start="211:45" pos:end="211:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="213:17" pos:end="239:17"><if pos:start="213:17" pos:end="227:17">if <condition pos:start="213:20" pos:end="213:31">(<expr pos:start="213:21" pos:end="213:30"><name pos:start="213:21" pos:end="213:23">len</name> <operator pos:start="213:25" pos:end="213:25">&amp;</operator> <literal type="number" pos:start="213:27" pos:end="213:30">0x80</literal></expr>)</condition> <block pos:start="213:33" pos:end="227:17">{<block_content pos:start="215:21" pos:end="225:31">

                    <expr_stmt pos:start="215:21" pos:end="215:43"><expr pos:start="215:21" pos:end="215:42"><name pos:start="215:21" pos:end="215:23">len</name> <operator pos:start="215:25" pos:end="215:25">=</operator> <operator pos:start="215:27" pos:end="215:27">(</operator><name pos:start="215:28" pos:end="215:30">len</name> <operator pos:start="215:32" pos:end="215:32">&amp;</operator> <literal type="number" pos:start="215:34" pos:end="215:37">0x7F</literal><operator pos:start="215:38" pos:end="215:38">)</operator> <operator pos:start="215:40" pos:end="215:40">+</operator> <literal type="number" pos:start="215:42" pos:end="215:42">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="217:21" pos:end="221:51"><if pos:start="217:21" pos:end="221:51">if <condition pos:start="217:24" pos:end="219:62">(<expr pos:start="217:25" pos:end="219:61"><name pos:start="217:25" pos:end="217:27">ofs</name> <operator pos:start="217:29" pos:end="217:29">+</operator> <name pos:start="217:31" pos:end="217:33">len</name> <operator pos:start="217:35" pos:end="217:35">&gt;</operator> <name pos:start="217:37" pos:end="217:47">frame_width</name> <operator pos:start="217:49" pos:end="217:50">||</operator>

                        <call pos:start="219:25" pos:end="219:55"><name pos:start="219:25" pos:end="219:50">bytestream2_get_bytes_left</name><argument_list pos:start="219:51" pos:end="219:55">(<argument pos:start="219:52" pos:end="219:54"><expr pos:start="219:52" pos:end="219:54"><operator pos:start="219:52" pos:end="219:52">&amp;</operator><name pos:start="219:53" pos:end="219:54">gb</name></expr></argument>)</argument_list></call> <operator pos:start="219:57" pos:end="219:57">&lt;</operator> <name pos:start="219:59" pos:end="219:61">len</name></expr>)</condition><block type="pseudo" pos:start="221:25" pos:end="221:51"><block_content pos:start="221:25" pos:end="221:51">

                        <return pos:start="221:25" pos:end="221:51">return <expr pos:start="221:32" pos:end="221:50"><name pos:start="221:32" pos:end="221:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="223:21" pos:end="223:64"><expr pos:start="223:21" pos:end="223:63"><call pos:start="223:21" pos:end="223:63"><name pos:start="223:21" pos:end="223:43">bytestream2_get_bufferu</name><argument_list pos:start="223:44" pos:end="223:63">(<argument pos:start="223:45" pos:end="223:47"><expr pos:start="223:45" pos:end="223:47"><operator pos:start="223:45" pos:end="223:45">&amp;</operator><name pos:start="223:46" pos:end="223:47">gb</name></expr></argument>, <argument pos:start="223:50" pos:end="223:57"><expr pos:start="223:50" pos:end="223:57"><operator pos:start="223:50" pos:end="223:50">&amp;</operator><name pos:start="223:51" pos:end="223:57"><name pos:start="223:51" pos:end="223:52">dp</name><index pos:start="223:53" pos:end="223:57">[<expr pos:start="223:54" pos:end="223:56"><name pos:start="223:54" pos:end="223:56">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="223:60" pos:end="223:62"><expr pos:start="223:60" pos:end="223:62"><name pos:start="223:60" pos:end="223:62">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:31"><expr pos:start="225:21" pos:end="225:30"><name pos:start="225:21" pos:end="225:23">ofs</name> <operator pos:start="225:25" pos:end="225:26">+=</operator> <name pos:start="225:28" pos:end="225:30">len</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="227:19" pos:end="239:17">else <block pos:start="227:24" pos:end="239:17">{<block_content pos:start="231:21" pos:end="237:35">

                    <comment type="block" pos:start="229:21" pos:end="229:47">/* interframe pixel copy */</comment>

                    <if_stmt pos:start="231:21" pos:end="233:51"><if pos:start="231:21" pos:end="233:51">if <condition pos:start="231:24" pos:end="231:79">(<expr pos:start="231:25" pos:end="231:78"><name pos:start="231:25" pos:end="231:27">ofs</name> <operator pos:start="231:29" pos:end="231:29">+</operator> <name pos:start="231:31" pos:end="231:33">len</name> <operator pos:start="231:35" pos:end="231:35">+</operator> <literal type="number" pos:start="231:37" pos:end="231:37">1</literal> <operator pos:start="231:39" pos:end="231:39">&gt;</operator> <name pos:start="231:41" pos:end="231:51">frame_width</name> <operator pos:start="231:53" pos:end="231:54">||</operator> <operator pos:start="231:56" pos:end="231:56">!</operator><name pos:start="231:57" pos:end="231:78"><name pos:start="231:57" pos:end="231:57">s</name><operator pos:start="231:58" pos:end="231:59">-&gt;</operator><name pos:start="231:60" pos:end="231:69">prev_frame</name><operator pos:start="231:70" pos:end="231:71">-&gt;</operator><name pos:start="231:72" pos:end="231:75">data</name><index pos:start="231:76" pos:end="231:78">[<expr pos:start="231:77" pos:end="231:77"><literal type="number" pos:start="231:77" pos:end="231:77">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="233:25" pos:end="233:51"><block_content pos:start="233:25" pos:end="233:51">

                        <return pos:start="233:25" pos:end="233:51">return <expr pos:start="233:32" pos:end="233:50"><name pos:start="233:32" pos:end="233:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:56"><expr pos:start="235:21" pos:end="235:55"><call pos:start="235:21" pos:end="235:55"><name pos:start="235:21" pos:end="235:26">memcpy</name><argument_list pos:start="235:27" pos:end="235:55">(<argument pos:start="235:28" pos:end="235:35"><expr pos:start="235:28" pos:end="235:35"><operator pos:start="235:28" pos:end="235:28">&amp;</operator><name pos:start="235:29" pos:end="235:35"><name pos:start="235:29" pos:end="235:30">dp</name><index pos:start="235:31" pos:end="235:35">[<expr pos:start="235:32" pos:end="235:34"><name pos:start="235:32" pos:end="235:34">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="235:38" pos:end="235:45"><expr pos:start="235:38" pos:end="235:45"><operator pos:start="235:38" pos:end="235:38">&amp;</operator><name pos:start="235:39" pos:end="235:45"><name pos:start="235:39" pos:end="235:40">pp</name><index pos:start="235:41" pos:end="235:45">[<expr pos:start="235:42" pos:end="235:44"><name pos:start="235:42" pos:end="235:44">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="235:48" pos:end="235:54"><expr pos:start="235:48" pos:end="235:54"><name pos:start="235:48" pos:end="235:50">len</name> <operator pos:start="235:52" pos:end="235:52">+</operator> <literal type="number" pos:start="235:54" pos:end="235:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="237:21" pos:end="237:35"><expr pos:start="237:21" pos:end="237:34"><name pos:start="237:21" pos:end="237:23">ofs</name> <operator pos:start="237:25" pos:end="237:26">+=</operator> <name pos:start="237:28" pos:end="237:30">len</name> <operator pos:start="237:32" pos:end="237:32">+</operator> <literal type="number" pos:start="237:34" pos:end="237:34">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block> while <condition pos:start="241:21" pos:end="241:39">(<expr pos:start="241:22" pos:end="241:38"><name pos:start="241:22" pos:end="241:24">ofs</name> <operator pos:start="241:26" pos:end="241:26">&lt;</operator> <name pos:start="241:28" pos:end="241:38">frame_width</name></expr>)</condition>;</do>

            <if_stmt pos:start="243:13" pos:end="253:13"><if pos:start="243:13" pos:end="253:13">if <condition pos:start="243:16" pos:end="243:34">(<expr pos:start="243:17" pos:end="243:33"><name pos:start="243:17" pos:end="243:19">ofs</name> <operator pos:start="243:21" pos:end="243:21">&gt;</operator> <name pos:start="243:23" pos:end="243:33">frame_width</name></expr>)</condition> <block pos:start="243:36" pos:end="253:13">{<block_content pos:start="245:17" pos:end="251:43">

                <expr_stmt pos:start="245:17" pos:end="249:41"><expr pos:start="245:17" pos:end="249:40"><call pos:start="245:17" pos:end="249:40"><name pos:start="245:17" pos:end="245:22">av_log</name><argument_list pos:start="245:23" pos:end="249:40">(<argument pos:start="245:24" pos:end="245:31"><expr pos:start="245:24" pos:end="245:31"><name pos:start="245:24" pos:end="245:31"><name pos:start="245:24" pos:end="245:24">s</name><operator pos:start="245:25" pos:end="245:26">-&gt;</operator><name pos:start="245:27" pos:end="245:31">avctx</name></name></expr></argument>, <argument pos:start="245:34" pos:end="245:45"><expr pos:start="245:34" pos:end="245:45"><name pos:start="245:34" pos:end="245:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="247:24" pos:end="247:51"><expr pos:start="247:24" pos:end="247:51"><literal type="string" pos:start="247:24" pos:end="247:51">"offset &gt; width (%d &gt; %d)\n"</literal></expr></argument>,

                       <argument pos:start="249:24" pos:end="249:26"><expr pos:start="249:24" pos:end="249:26"><name pos:start="249:24" pos:end="249:26">ofs</name></expr></argument>, <argument pos:start="249:29" pos:end="249:39"><expr pos:start="249:29" pos:end="249:39"><name pos:start="249:29" pos:end="249:39">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="251:17" pos:end="251:43">return <expr pos:start="251:24" pos:end="251:42"><name pos:start="251:24" pos:end="251:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:37"><expr pos:start="255:13" pos:end="255:36"><name pos:start="255:13" pos:end="255:14">dp</name> <operator pos:start="255:16" pos:end="255:17">+=</operator> <name pos:start="255:19" pos:end="255:36"><name pos:start="255:19" pos:end="255:23">frame</name><operator pos:start="255:24" pos:end="255:25">-&gt;</operator><name pos:start="255:26" pos:end="255:33">linesize</name><index pos:start="255:34" pos:end="255:36">[<expr pos:start="255:35" pos:end="255:35"><literal type="number" pos:start="255:35" pos:end="255:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:45"><expr pos:start="257:13" pos:end="257:44"><name pos:start="257:13" pos:end="257:14">pp</name> <operator pos:start="257:16" pos:end="257:17">+=</operator> <name pos:start="257:19" pos:end="257:44"><name pos:start="257:19" pos:end="257:19">s</name><operator pos:start="257:20" pos:end="257:21">-&gt;</operator><name pos:start="257:22" pos:end="257:31">prev_frame</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:41">linesize</name><index pos:start="257:42" pos:end="257:44">[<expr pos:start="257:43" pos:end="257:43"><literal type="number" pos:start="257:43" pos:end="257:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="261:9" pos:end="261:14">break;</break>



    <case pos:start="265:5" pos:end="265:11">case <expr pos:start="265:10" pos:end="265:10"><literal type="number" pos:start="265:10" pos:end="265:10">2</literal></expr>:</case>

        <for pos:start="267:9" pos:end="275:9">for <control pos:start="267:13" pos:end="267:42">(<init pos:start="267:14" pos:end="267:19"><expr pos:start="267:14" pos:end="267:18"><name pos:start="267:14" pos:end="267:14">i</name> <operator pos:start="267:16" pos:end="267:16">=</operator> <literal type="number" pos:start="267:18" pos:end="267:18">0</literal></expr>;</init> <condition pos:start="267:21" pos:end="267:37"><expr pos:start="267:21" pos:end="267:36"><name pos:start="267:21" pos:end="267:21">i</name> <operator pos:start="267:23" pos:end="267:23">&lt;</operator> <name pos:start="267:25" pos:end="267:36">frame_height</name></expr>;</condition> <incr pos:start="267:39" pos:end="267:41"><expr pos:start="267:39" pos:end="267:41"><name pos:start="267:39" pos:end="267:39">i</name><operator pos:start="267:40" pos:end="267:41">++</operator></expr></incr>)</control> <block pos:start="267:44" pos:end="275:9">{<block_content pos:start="269:13" pos:end="273:45">

            <expr_stmt pos:start="269:13" pos:end="269:57"><expr pos:start="269:13" pos:end="269:56"><call pos:start="269:13" pos:end="269:56"><name pos:start="269:13" pos:end="269:34">bytestream2_get_buffer</name><argument_list pos:start="269:35" pos:end="269:56">(<argument pos:start="269:36" pos:end="269:38"><expr pos:start="269:36" pos:end="269:38"><operator pos:start="269:36" pos:end="269:36">&amp;</operator><name pos:start="269:37" pos:end="269:38">gb</name></expr></argument>, <argument pos:start="269:41" pos:end="269:42"><expr pos:start="269:41" pos:end="269:42"><name pos:start="269:41" pos:end="269:42">dp</name></expr></argument>, <argument pos:start="269:45" pos:end="269:55"><expr pos:start="269:45" pos:end="269:55"><name pos:start="269:45" pos:end="269:55">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:37"><expr pos:start="271:13" pos:end="271:36"><name pos:start="271:13" pos:end="271:14">dp</name> <operator pos:start="271:16" pos:end="271:17">+=</operator> <name pos:start="271:19" pos:end="271:36"><name pos:start="271:19" pos:end="271:23">frame</name><operator pos:start="271:24" pos:end="271:25">-&gt;</operator><name pos:start="271:26" pos:end="271:33">linesize</name><index pos:start="271:34" pos:end="271:36">[<expr pos:start="271:35" pos:end="271:35"><literal type="number" pos:start="271:35" pos:end="271:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:45"><expr pos:start="273:13" pos:end="273:44"><name pos:start="273:13" pos:end="273:14">pp</name> <operator pos:start="273:16" pos:end="273:17">+=</operator> <name pos:start="273:19" pos:end="273:44"><name pos:start="273:19" pos:end="273:19">s</name><operator pos:start="273:20" pos:end="273:21">-&gt;</operator><name pos:start="273:22" pos:end="273:31">prev_frame</name><operator pos:start="273:32" pos:end="273:33">-&gt;</operator><name pos:start="273:34" pos:end="273:41">linesize</name><index pos:start="273:42" pos:end="273:44">[<expr pos:start="273:43" pos:end="273:43"><literal type="number" pos:start="273:43" pos:end="273:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="277:9" pos:end="277:14">break;</break>



    <case pos:start="281:5" pos:end="281:11">case <expr pos:start="281:10" pos:end="281:10"><literal type="number" pos:start="281:10" pos:end="281:10">3</literal></expr>:</case>

        <for pos:start="283:9" pos:end="351:9">for <control pos:start="283:13" pos:end="283:42">(<init pos:start="283:14" pos:end="283:19"><expr pos:start="283:14" pos:end="283:18"><name pos:start="283:14" pos:end="283:14">i</name> <operator pos:start="283:16" pos:end="283:16">=</operator> <literal type="number" pos:start="283:18" pos:end="283:18">0</literal></expr>;</init> <condition pos:start="283:21" pos:end="283:37"><expr pos:start="283:21" pos:end="283:36"><name pos:start="283:21" pos:end="283:21">i</name> <operator pos:start="283:23" pos:end="283:23">&lt;</operator> <name pos:start="283:25" pos:end="283:36">frame_height</name></expr>;</condition> <incr pos:start="283:39" pos:end="283:41"><expr pos:start="283:39" pos:end="283:41"><name pos:start="283:39" pos:end="283:39">i</name><operator pos:start="283:40" pos:end="283:41">++</operator></expr></incr>)</control> <block pos:start="283:44" pos:end="351:9">{<block_content pos:start="285:13" pos:end="349:45">

            <expr_stmt pos:start="285:13" pos:end="285:20"><expr pos:start="285:13" pos:end="285:19"><name pos:start="285:13" pos:end="285:15">ofs</name> <operator pos:start="285:17" pos:end="285:17">=</operator> <literal type="number" pos:start="285:19" pos:end="285:19">0</literal></expr>;</expr_stmt>

            <do pos:start="287:13" pos:end="333:40">do <block pos:start="287:16" pos:end="333:13">{<block_content pos:start="289:17" pos:end="331:17">

                <expr_stmt pos:start="289:17" pos:end="289:48"><expr pos:start="289:17" pos:end="289:47"><name pos:start="289:17" pos:end="289:19">len</name> <operator pos:start="289:21" pos:end="289:21">=</operator> <call pos:start="289:23" pos:end="289:47"><name pos:start="289:23" pos:end="289:42">bytestream2_get_byte</name><argument_list pos:start="289:43" pos:end="289:47">(<argument pos:start="289:44" pos:end="289:46"><expr pos:start="289:44" pos:end="289:46"><operator pos:start="289:44" pos:end="289:44">&amp;</operator><name pos:start="289:45" pos:end="289:46">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="331:17"><if pos:start="291:17" pos:end="319:17">if <condition pos:start="291:20" pos:end="291:31">(<expr pos:start="291:21" pos:end="291:30"><name pos:start="291:21" pos:end="291:23">len</name> <operator pos:start="291:25" pos:end="291:25">&amp;</operator> <literal type="number" pos:start="291:27" pos:end="291:30">0x80</literal></expr>)</condition> <block pos:start="291:33" pos:end="319:17">{<block_content pos:start="293:21" pos:end="317:21">

                    <expr_stmt pos:start="293:21" pos:end="293:43"><expr pos:start="293:21" pos:end="293:42"><name pos:start="293:21" pos:end="293:23">len</name> <operator pos:start="293:25" pos:end="293:25">=</operator> <operator pos:start="293:27" pos:end="293:27">(</operator><name pos:start="293:28" pos:end="293:30">len</name> <operator pos:start="293:32" pos:end="293:32">&amp;</operator> <literal type="number" pos:start="293:34" pos:end="293:37">0x7F</literal><operator pos:start="293:38" pos:end="293:38">)</operator> <operator pos:start="293:40" pos:end="293:40">+</operator> <literal type="number" pos:start="293:42" pos:end="293:42">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="295:21" pos:end="317:21"><if pos:start="295:21" pos:end="311:21">if <condition pos:start="295:24" pos:end="295:59">(<expr pos:start="295:25" pos:end="295:58"><call pos:start="295:25" pos:end="295:50"><name pos:start="295:25" pos:end="295:45">bytestream2_peek_byte</name><argument_list pos:start="295:46" pos:end="295:50">(<argument pos:start="295:47" pos:end="295:49"><expr pos:start="295:47" pos:end="295:49"><operator pos:start="295:47" pos:end="295:47">&amp;</operator><name pos:start="295:48" pos:end="295:49">gb</name></expr></argument>)</argument_list></call> <operator pos:start="295:52" pos:end="295:53">==</operator> <literal type="number" pos:start="295:55" pos:end="295:58">0xFF</literal></expr>)</condition> <block pos:start="295:61" pos:end="311:21">{<block_content pos:start="297:25" pos:end="309:51">

                        <decl_stmt pos:start="297:25" pos:end="297:39"><decl pos:start="297:25" pos:end="297:38"><type pos:start="297:25" pos:end="297:27"><name pos:start="297:25" pos:end="297:27">int</name></type> <name pos:start="297:29" pos:end="297:32">slen</name> <init pos:start="297:34" pos:end="297:38">= <expr pos:start="297:36" pos:end="297:38"><name pos:start="297:36" pos:end="297:38">len</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="299:25" pos:end="299:50"><expr pos:start="299:25" pos:end="299:49"><call pos:start="299:25" pos:end="299:49"><name pos:start="299:25" pos:end="299:44">bytestream2_get_byte</name><argument_list pos:start="299:45" pos:end="299:49">(<argument pos:start="299:46" pos:end="299:48"><expr pos:start="299:46" pos:end="299:48"><operator pos:start="299:46" pos:end="299:46">&amp;</operator><name pos:start="299:47" pos:end="299:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="301:25" pos:end="305:60"><expr pos:start="301:25" pos:end="305:59"><name pos:start="301:25" pos:end="301:27">len</name> <operator pos:start="301:29" pos:end="301:29">=</operator> <call pos:start="301:31" pos:end="305:59"><name pos:start="301:31" pos:end="301:40">rle_unpack</name><argument_list pos:start="301:41" pos:end="305:59">(<argument pos:start="301:42" pos:end="301:50"><expr pos:start="301:42" pos:end="301:50"><name pos:start="301:42" pos:end="301:50"><name pos:start="301:42" pos:end="301:43">gb</name><operator pos:start="301:44" pos:end="301:44">.</operator><name pos:start="301:45" pos:end="301:50">buffer</name></name></expr></argument>, <argument pos:start="301:53" pos:end="301:60"><expr pos:start="301:53" pos:end="301:60"><operator pos:start="301:53" pos:end="301:53">&amp;</operator><name pos:start="301:54" pos:end="301:60"><name pos:start="301:54" pos:end="301:55">dp</name><index pos:start="301:56" pos:end="301:60">[<expr pos:start="301:57" pos:end="301:59"><name pos:start="301:57" pos:end="301:59">ofs</name></expr>]</index></name></expr></argument>,

                                         <argument pos:start="303:42" pos:end="303:44"><expr pos:start="303:42" pos:end="303:44"><name pos:start="303:42" pos:end="303:44">len</name></expr></argument>, <argument pos:start="303:47" pos:end="303:77"><expr pos:start="303:47" pos:end="303:77"><call pos:start="303:47" pos:end="303:77"><name pos:start="303:47" pos:end="303:72">bytestream2_get_bytes_left</name><argument_list pos:start="303:73" pos:end="303:77">(<argument pos:start="303:74" pos:end="303:76"><expr pos:start="303:74" pos:end="303:76"><operator pos:start="303:74" pos:end="303:74">&amp;</operator><name pos:start="303:75" pos:end="303:76">gb</name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="305:42" pos:end="305:58"><expr pos:start="305:42" pos:end="305:58"><name pos:start="305:42" pos:end="305:52">frame_width</name> <operator pos:start="305:54" pos:end="305:54">-</operator> <name pos:start="305:56" pos:end="305:58">ofs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="307:25" pos:end="307:36"><expr pos:start="307:25" pos:end="307:35"><name pos:start="307:25" pos:end="307:27">ofs</name> <operator pos:start="307:29" pos:end="307:30">+=</operator> <name pos:start="307:32" pos:end="307:35">slen</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="309:25" pos:end="309:51"><expr pos:start="309:25" pos:end="309:50"><call pos:start="309:25" pos:end="309:50"><name pos:start="309:25" pos:end="309:40">bytestream2_skip</name><argument_list pos:start="309:41" pos:end="309:50">(<argument pos:start="309:42" pos:end="309:44"><expr pos:start="309:42" pos:end="309:44"><operator pos:start="309:42" pos:end="309:42">&amp;</operator><name pos:start="309:43" pos:end="309:44">gb</name></expr></argument>, <argument pos:start="309:47" pos:end="309:49"><expr pos:start="309:47" pos:end="309:49"><name pos:start="309:47" pos:end="309:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="311:23" pos:end="317:21">else <block pos:start="311:28" pos:end="317:21">{<block_content pos:start="313:25" pos:end="315:35">

                        <expr_stmt pos:start="313:25" pos:end="313:67"><expr pos:start="313:25" pos:end="313:66"><call pos:start="313:25" pos:end="313:66"><name pos:start="313:25" pos:end="313:46">bytestream2_get_buffer</name><argument_list pos:start="313:47" pos:end="313:66">(<argument pos:start="313:48" pos:end="313:50"><expr pos:start="313:48" pos:end="313:50"><operator pos:start="313:48" pos:end="313:48">&amp;</operator><name pos:start="313:49" pos:end="313:50">gb</name></expr></argument>, <argument pos:start="313:53" pos:end="313:60"><expr pos:start="313:53" pos:end="313:60"><operator pos:start="313:53" pos:end="313:53">&amp;</operator><name pos:start="313:54" pos:end="313:60"><name pos:start="313:54" pos:end="313:55">dp</name><index pos:start="313:56" pos:end="313:60">[<expr pos:start="313:57" pos:end="313:59"><name pos:start="313:57" pos:end="313:59">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="313:63" pos:end="313:65"><expr pos:start="313:63" pos:end="313:65"><name pos:start="313:63" pos:end="313:65">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="315:25" pos:end="315:35"><expr pos:start="315:25" pos:end="315:34"><name pos:start="315:25" pos:end="315:27">ofs</name> <operator pos:start="315:29" pos:end="315:30">+=</operator> <name pos:start="315:32" pos:end="315:34">len</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="319:19" pos:end="331:17">else <block pos:start="319:24" pos:end="331:17">{<block_content pos:start="323:21" pos:end="329:35">

                    <comment type="block" pos:start="321:21" pos:end="321:47">/* interframe pixel copy */</comment>

                    <if_stmt pos:start="323:21" pos:end="325:51"><if pos:start="323:21" pos:end="325:51">if <condition pos:start="323:24" pos:end="323:79">(<expr pos:start="323:25" pos:end="323:78"><name pos:start="323:25" pos:end="323:27">ofs</name> <operator pos:start="323:29" pos:end="323:29">+</operator> <name pos:start="323:31" pos:end="323:33">len</name> <operator pos:start="323:35" pos:end="323:35">+</operator> <literal type="number" pos:start="323:37" pos:end="323:37">1</literal> <operator pos:start="323:39" pos:end="323:39">&gt;</operator> <name pos:start="323:41" pos:end="323:51">frame_width</name> <operator pos:start="323:53" pos:end="323:54">||</operator> <operator pos:start="323:56" pos:end="323:56">!</operator><name pos:start="323:57" pos:end="323:78"><name pos:start="323:57" pos:end="323:57">s</name><operator pos:start="323:58" pos:end="323:59">-&gt;</operator><name pos:start="323:60" pos:end="323:69">prev_frame</name><operator pos:start="323:70" pos:end="323:71">-&gt;</operator><name pos:start="323:72" pos:end="323:75">data</name><index pos:start="323:76" pos:end="323:78">[<expr pos:start="323:77" pos:end="323:77"><literal type="number" pos:start="323:77" pos:end="323:77">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="325:25" pos:end="325:51"><block_content pos:start="325:25" pos:end="325:51">

                        <return pos:start="325:25" pos:end="325:51">return <expr pos:start="325:32" pos:end="325:50"><name pos:start="325:32" pos:end="325:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="327:21" pos:end="327:56"><expr pos:start="327:21" pos:end="327:55"><call pos:start="327:21" pos:end="327:55"><name pos:start="327:21" pos:end="327:26">memcpy</name><argument_list pos:start="327:27" pos:end="327:55">(<argument pos:start="327:28" pos:end="327:35"><expr pos:start="327:28" pos:end="327:35"><operator pos:start="327:28" pos:end="327:28">&amp;</operator><name pos:start="327:29" pos:end="327:35"><name pos:start="327:29" pos:end="327:30">dp</name><index pos:start="327:31" pos:end="327:35">[<expr pos:start="327:32" pos:end="327:34"><name pos:start="327:32" pos:end="327:34">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="327:38" pos:end="327:45"><expr pos:start="327:38" pos:end="327:45"><operator pos:start="327:38" pos:end="327:38">&amp;</operator><name pos:start="327:39" pos:end="327:45"><name pos:start="327:39" pos:end="327:40">pp</name><index pos:start="327:41" pos:end="327:45">[<expr pos:start="327:42" pos:end="327:44"><name pos:start="327:42" pos:end="327:44">ofs</name></expr>]</index></name></expr></argument>, <argument pos:start="327:48" pos:end="327:54"><expr pos:start="327:48" pos:end="327:54"><name pos:start="327:48" pos:end="327:50">len</name> <operator pos:start="327:52" pos:end="327:52">+</operator> <literal type="number" pos:start="327:54" pos:end="327:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="329:35"><expr pos:start="329:21" pos:end="329:34"><name pos:start="329:21" pos:end="329:23">ofs</name> <operator pos:start="329:25" pos:end="329:26">+=</operator> <name pos:start="329:28" pos:end="329:30">len</name> <operator pos:start="329:32" pos:end="329:32">+</operator> <literal type="number" pos:start="329:34" pos:end="329:34">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block> while <condition pos:start="333:21" pos:end="333:39">(<expr pos:start="333:22" pos:end="333:38"><name pos:start="333:22" pos:end="333:24">ofs</name> <operator pos:start="333:26" pos:end="333:26">&lt;</operator> <name pos:start="333:28" pos:end="333:38">frame_width</name></expr>)</condition>;</do>

            <if_stmt pos:start="335:13" pos:end="345:13"><if pos:start="335:13" pos:end="345:13">if <condition pos:start="335:16" pos:end="335:34">(<expr pos:start="335:17" pos:end="335:33"><name pos:start="335:17" pos:end="335:19">ofs</name> <operator pos:start="335:21" pos:end="335:21">&gt;</operator> <name pos:start="335:23" pos:end="335:33">frame_width</name></expr>)</condition> <block pos:start="335:36" pos:end="345:13">{<block_content pos:start="337:17" pos:end="343:43">

                <expr_stmt pos:start="337:17" pos:end="341:41"><expr pos:start="337:17" pos:end="341:40"><call pos:start="337:17" pos:end="341:40"><name pos:start="337:17" pos:end="337:22">av_log</name><argument_list pos:start="337:23" pos:end="341:40">(<argument pos:start="337:24" pos:end="337:31"><expr pos:start="337:24" pos:end="337:31"><name pos:start="337:24" pos:end="337:31"><name pos:start="337:24" pos:end="337:24">s</name><operator pos:start="337:25" pos:end="337:26">-&gt;</operator><name pos:start="337:27" pos:end="337:31">avctx</name></name></expr></argument>, <argument pos:start="337:34" pos:end="337:45"><expr pos:start="337:34" pos:end="337:45"><name pos:start="337:34" pos:end="337:45">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="339:24" pos:end="339:51"><expr pos:start="339:24" pos:end="339:51"><literal type="string" pos:start="339:24" pos:end="339:51">"offset &gt; width (%d &gt; %d)\n"</literal></expr></argument>,

                       <argument pos:start="341:24" pos:end="341:26"><expr pos:start="341:24" pos:end="341:26"><name pos:start="341:24" pos:end="341:26">ofs</name></expr></argument>, <argument pos:start="341:29" pos:end="341:39"><expr pos:start="341:29" pos:end="341:39"><name pos:start="341:29" pos:end="341:39">frame_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="343:17" pos:end="343:43">return <expr pos:start="343:24" pos:end="343:42"><name pos:start="343:24" pos:end="343:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:37"><expr pos:start="347:13" pos:end="347:36"><name pos:start="347:13" pos:end="347:14">dp</name> <operator pos:start="347:16" pos:end="347:17">+=</operator> <name pos:start="347:19" pos:end="347:36"><name pos:start="347:19" pos:end="347:23">frame</name><operator pos:start="347:24" pos:end="347:25">-&gt;</operator><name pos:start="347:26" pos:end="347:33">linesize</name><index pos:start="347:34" pos:end="347:36">[<expr pos:start="347:35" pos:end="347:35"><literal type="number" pos:start="347:35" pos:end="347:35">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:45"><expr pos:start="349:13" pos:end="349:44"><name pos:start="349:13" pos:end="349:14">pp</name> <operator pos:start="349:16" pos:end="349:17">+=</operator> <name pos:start="349:19" pos:end="349:44"><name pos:start="349:19" pos:end="349:19">s</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:31">prev_frame</name><operator pos:start="349:32" pos:end="349:33">-&gt;</operator><name pos:start="349:34" pos:end="349:41">linesize</name><index pos:start="349:42" pos:end="349:44">[<expr pos:start="349:43" pos:end="349:43"><literal type="number" pos:start="349:43" pos:end="349:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="353:9" pos:end="353:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="357:5" pos:end="357:13">return <expr pos:start="357:12" pos:end="357:12"><literal type="number" pos:start="357:12" pos:end="357:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
