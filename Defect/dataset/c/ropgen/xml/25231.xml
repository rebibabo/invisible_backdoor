<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25231.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">cdrom_probe_device</name><parameter_list pos:start="1:30" pos:end="1:51">(<parameter pos:start="1:31" pos:end="1:50"><decl pos:start="1:31" pos:end="1:50"><type pos:start="1:31" pos:end="1:42"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:50">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:16">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name></decl>, <decl pos:start="5:13" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">prio</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:18"><if pos:start="11:5" pos:end="13:18">if <condition pos:start="11:8" pos:end="11:44">(<expr pos:start="11:9" pos:end="11:43"><call pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:16">strstart</name><argument_list pos:start="11:17" pos:end="11:43">(<argument pos:start="11:18" pos:end="11:25"><expr pos:start="11:18" pos:end="11:25"><name pos:start="11:18" pos:end="11:25">filename</name></expr></argument>, <argument pos:start="11:28" pos:end="11:36"><expr pos:start="11:28" pos:end="11:36"><literal type="string" pos:start="11:28" pos:end="11:36">"/dev/cd"</literal></expr></argument>, <argument pos:start="11:39" pos:end="11:42"><expr pos:start="11:39" pos:end="11:42"><name pos:start="11:39" pos:end="11:42">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:18"><block_content pos:start="13:9" pos:end="13:18">

        <expr_stmt pos:start="13:9" pos:end="13:18"><expr pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:12">prio</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <literal type="number" pos:start="13:16" pos:end="13:17">50</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:6">fd</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:46"><name pos:start="17:10" pos:end="17:13">open</name><argument_list pos:start="17:14" pos:end="17:46">(<argument pos:start="17:15" pos:end="17:22"><expr pos:start="17:15" pos:end="17:22"><name pos:start="17:15" pos:end="17:22">filename</name></expr></argument>, <argument pos:start="17:25" pos:end="17:45"><expr pos:start="17:25" pos:end="17:45"><name pos:start="17:25" pos:end="17:32">O_RDONLY</name> <operator pos:start="17:34" pos:end="17:34">|</operator> <name pos:start="17:36" pos:end="17:45">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">fd</name> <operator pos:start="19:12" pos:end="19:12">&lt;</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>)</condition> <block pos:start="19:17" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:54">/* Attempt to detect via a CDROM specific ioctl */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:54"><expr pos:start="29:5" pos:end="29:53"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:53"><name pos:start="29:11" pos:end="29:15">ioctl</name><argument_list pos:start="29:16" pos:end="29:53">(<argument pos:start="29:17" pos:end="29:18"><expr pos:start="29:17" pos:end="29:18"><name pos:start="29:17" pos:end="29:18">fd</name></expr></argument>, <argument pos:start="29:21" pos:end="29:38"><expr pos:start="29:21" pos:end="29:38"><name pos:start="29:21" pos:end="29:38">CDROM_DRIVE_STATUS</name></expr></argument>, <argument pos:start="29:41" pos:end="29:52"><expr pos:start="29:41" pos:end="29:52"><name pos:start="29:41" pos:end="29:52">CDSL_CURRENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:19"><if pos:start="31:5" pos:end="33:19">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:14">&gt;=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:12">prio</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="number" pos:start="33:16" pos:end="33:18">100</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:14"><expr pos:start="37:5" pos:end="37:13"><call pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:9">close</name><argument_list pos:start="37:10" pos:end="37:13">(<argument pos:start="37:11" pos:end="37:12"><expr pos:start="37:11" pos:end="37:12"><name pos:start="37:11" pos:end="37:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="39:1" pos:end="39:4"><name pos:start="39:1" pos:end="39:3">out</name>:</label>

    <return pos:start="41:5" pos:end="41:16">return <expr pos:start="41:12" pos:end="41:15"><name pos:start="41:12" pos:end="41:15">prio</name></expr>;</return>

</block_content>}</block></function>
</unit>
