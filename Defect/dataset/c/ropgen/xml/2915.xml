<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2915.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">coroutine_fn</name> <name pos:start="1:21" pos:end="1:23">int</name></type> <name pos:start="1:25" pos:end="1:35">sd_co_readv</name><parameter_list pos:start="1:36" pos:end="3:58">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:52">BlockDriverState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">bs</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:76"><decl pos:start="1:59" pos:end="1:76"><type pos:start="1:59" pos:end="1:76"><name pos:start="1:59" pos:end="1:65">int64_t</name></type> <name pos:start="1:67" pos:end="1:76">sector_num</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:37"><decl pos:start="3:24" pos:end="3:37"><type pos:start="3:24" pos:end="3:37"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:37">nb_sectors</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:57"><decl pos:start="3:40" pos:end="3:57"><type pos:start="3:40" pos:end="3:57"><name pos:start="3:40" pos:end="3:51">QEMUIOVector</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">qiov</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:19">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">SheepdogAIOCB</name></type> <name pos:start="7:19" pos:end="7:21">acb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">BDRVSheepdogState</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">s</name> <init pos:start="9:26" pos:end="9:37">= <expr pos:start="9:28" pos:end="9:37"><name pos:start="9:28" pos:end="9:37"><name pos:start="9:28" pos:end="9:29">bs</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:37">opaque</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:74"><expr pos:start="13:5" pos:end="13:73"><call pos:start="13:5" pos:end="13:73"><name pos:start="13:5" pos:end="13:16">sd_aio_setup</name><argument_list pos:start="13:17" pos:end="13:73">(<argument pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:21"><operator pos:start="13:18" pos:end="13:18">&amp;</operator><name pos:start="13:19" pos:end="13:21">acb</name></expr></argument>, <argument pos:start="13:24" pos:end="13:24"><expr pos:start="13:24" pos:end="13:24"><name pos:start="13:24" pos:end="13:24">s</name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">qiov</name></expr></argument>, <argument pos:start="13:33" pos:end="13:42"><expr pos:start="13:33" pos:end="13:42"><name pos:start="13:33" pos:end="13:42">sector_num</name></expr></argument>, <argument pos:start="13:45" pos:end="13:54"><expr pos:start="13:45" pos:end="13:54"><name pos:start="13:45" pos:end="13:54">nb_sectors</name></expr></argument>, <argument pos:start="13:57" pos:end="13:72"><expr pos:start="13:57" pos:end="13:72"><name pos:start="13:57" pos:end="13:72">AIOCB_READ_UDATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="17:1" pos:end="17:6"><name pos:start="17:1" pos:end="17:5">retry</name>:</label>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:31">check_overlapping_aiocb</name><argument_list pos:start="19:32" pos:end="19:40">(<argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">s</name></expr></argument>, <argument pos:start="19:36" pos:end="19:39"><expr pos:start="19:36" pos:end="19:39"><operator pos:start="19:36" pos:end="19:36">&amp;</operator><name pos:start="19:37" pos:end="19:39">acb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:43" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:19">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:26">qemu_co_queue_wait</name><argument_list pos:start="21:27" pos:end="21:49">(<argument pos:start="21:28" pos:end="21:48"><expr pos:start="21:28" pos:end="21:48"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:48"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:48">overlapping_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:19">goto <name pos:start="23:14" pos:end="23:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:19">sd_co_rw_vector</name><argument_list pos:start="29:20" pos:end="29:25">(<argument pos:start="29:21" pos:end="29:24"><expr pos:start="29:21" pos:end="29:24"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:24">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><call pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:16">QLIST_REMOVE</name><argument_list pos:start="33:17" pos:end="33:38">(<argument pos:start="33:18" pos:end="33:21"><expr pos:start="33:18" pos:end="33:21"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:21">acb</name></expr></argument>, <argument pos:start="33:24" pos:end="33:37"><expr pos:start="33:24" pos:end="33:37"><name pos:start="33:24" pos:end="33:37">aiocb_siblings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><call pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:29">qemu_co_queue_restart_all</name><argument_list pos:start="35:30" pos:end="35:52">(<argument pos:start="35:31" pos:end="35:51"><expr pos:start="35:31" pos:end="35:51"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:51"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:51">overlapping_queue</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="37:5" pos:end="37:19">return <expr pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:18"><name pos:start="37:12" pos:end="37:14">acb</name><operator pos:start="37:15" pos:end="37:15">.</operator><name pos:start="37:16" pos:end="37:18">ret</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
