<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6266.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qcow2_refcount_init</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:19">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:37">refcount_table_size2</name></decl>, <decl pos:start="7:40" pos:end="7:40"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:40" pos:end="7:40">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:65"><expr pos:start="13:5" pos:end="13:64"><call pos:start="13:5" pos:end="13:64"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:64">(<argument pos:start="13:12" pos:end="13:63"><expr pos:start="13:12" pos:end="13:63"><name pos:start="13:12" pos:end="13:33"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:33">refcount_table_size</name></name> <operator pos:start="13:35" pos:end="13:36">&lt;=</operator> <name pos:start="13:38" pos:end="13:44">INT_MAX</name> <operator pos:start="13:46" pos:end="13:46">/</operator> <sizeof pos:start="13:48" pos:end="13:63">sizeof<argument_list pos:start="13:54" pos:end="13:63">(<argument pos:start="13:55" pos:end="13:62"><expr pos:start="13:55" pos:end="13:62"><name pos:start="13:55" pos:end="13:62">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:24">refcount_table_size2</name> <operator pos:start="15:26" pos:end="15:26">=</operator> <name pos:start="15:28" pos:end="15:49"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:49">refcount_table_size</name></name> <operator pos:start="15:51" pos:end="15:51">*</operator> <sizeof pos:start="15:53" pos:end="15:68">sizeof<argument_list pos:start="15:59" pos:end="15:68">(<argument pos:start="15:60" pos:end="15:67"><expr pos:start="15:60" pos:end="15:67"><name pos:start="15:60" pos:end="15:67">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:59"><expr pos:start="17:5" pos:end="17:58"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:21">refcount_table</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:58"><name pos:start="17:25" pos:end="17:36">g_try_malloc</name><argument_list pos:start="17:37" pos:end="17:58">(<argument pos:start="17:38" pos:end="17:57"><expr pos:start="17:38" pos:end="17:57"><name pos:start="17:38" pos:end="17:57">refcount_table_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="43:5"><if pos:start="21:5" pos:end="43:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:30">refcount_table_size</name></name> <operator pos:start="21:32" pos:end="21:32">&gt;</operator> <literal type="number" pos:start="21:34" pos:end="21:34">0</literal></expr>)</condition> <block pos:start="21:37" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:48">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:38">(<expr pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:29">refcount_table</name></name> <operator pos:start="23:31" pos:end="23:32">==</operator> <name pos:start="23:34" pos:end="23:37">NULL</name></expr>)</condition> <block pos:start="23:40" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:22">

            <goto pos:start="25:13" pos:end="25:22">goto <name pos:start="25:18" pos:end="25:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:20">BLKDBG_EVENT</name><argument_list pos:start="29:21" pos:end="29:52">(<argument pos:start="29:22" pos:end="29:29"><expr pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:23">bs</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:29">file</name></name></expr></argument>, <argument pos:start="29:32" pos:end="29:51"><expr pos:start="29:32" pos:end="29:51"><name pos:start="29:32" pos:end="29:51">BLKDBG_REFTABLE_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:66"><expr pos:start="31:9" pos:end="33:65"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="33:65"><name pos:start="31:15" pos:end="31:24">bdrv_pread</name><argument_list pos:start="31:25" pos:end="33:65">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:27">bs</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">file</name></name></expr></argument>, <argument pos:start="31:36" pos:end="31:59"><expr pos:start="31:36" pos:end="31:59"><name pos:start="31:36" pos:end="31:59"><name pos:start="31:36" pos:end="31:36">s</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:59">refcount_table_offset</name></name></expr></argument>,

                         <argument pos:start="33:26" pos:end="33:42"><expr pos:start="33:26" pos:end="33:42"><name pos:start="33:26" pos:end="33:42"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:42">refcount_table</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:64"><expr pos:start="33:45" pos:end="33:64"><name pos:start="33:45" pos:end="33:64">refcount_table_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:22"><if pos:start="35:9" pos:end="37:22">if <condition pos:start="35:12" pos:end="35:40">(<expr pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:18">!=</operator> <name pos:start="35:20" pos:end="35:39">refcount_table_size2</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:22"><block_content pos:start="37:13" pos:end="37:22">

            <goto pos:start="37:13" pos:end="37:22">goto <name pos:start="37:18" pos:end="37:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <for pos:start="39:9" pos:end="41:48">for<control pos:start="39:12" pos:end="39:51">(<init pos:start="39:13" pos:end="39:18"><expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:13">i</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr>;</init> <condition pos:start="39:20" pos:end="39:46"><expr pos:start="39:20" pos:end="39:45"><name pos:start="39:20" pos:end="39:20">i</name> <operator pos:start="39:22" pos:end="39:22">&lt;</operator> <name pos:start="39:24" pos:end="39:45"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:45">refcount_table_size</name></name></expr>;</condition> <incr pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:48">i</name><operator pos:start="39:49" pos:end="39:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:13" pos:end="41:48"><block_content pos:start="41:13" pos:end="41:48">

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><call pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:24">be64_to_cpus</name><argument_list pos:start="41:25" pos:end="41:47">(<argument pos:start="41:26" pos:end="41:46"><expr pos:start="41:26" pos:end="41:46"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:46"><name pos:start="41:27" pos:end="41:27">s</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:43">refcount_table</name><index pos:start="41:44" pos:end="41:46">[<expr pos:start="41:45" pos:end="41:45"><name pos:start="41:45" pos:end="41:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

 <label pos:start="47:2" pos:end="47:6"><name pos:start="47:2" pos:end="47:5">fail</name>:</label>

    <return pos:start="49:5" pos:end="49:19">return <expr pos:start="49:12" pos:end="49:18"><operator pos:start="49:12" pos:end="49:12">-</operator><name pos:start="49:13" pos:end="49:18">ENOMEM</name></expr>;</return>

</block_content>}</block></function>
</unit>
