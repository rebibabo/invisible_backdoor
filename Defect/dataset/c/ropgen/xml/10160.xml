<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10160.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">process_command</name><parameter_list pos:start="1:27" pos:end="3:61">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">AVFilterContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">cmd</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:82"><decl pos:start="1:67" pos:end="1:82"><type pos:start="1:67" pos:end="1:82"><specifier pos:start="1:67" pos:end="1:71">const</specifier> <name pos:start="1:73" pos:end="1:76">char</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:82">args</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:36"><decl pos:start="3:28" pos:end="3:36"><type pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:31">char</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:36">res</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:49"><decl pos:start="3:39" pos:end="3:49"><type pos:start="3:39" pos:end="3:49"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:49">res_len</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:54">int</name></type> <name pos:start="3:56" pos:end="3:60">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:15">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">OverlayContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">over</name> <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:30"><if pos:start="13:5" pos:end="15:50">if      <condition pos:start="13:13" pos:end="13:31">(<expr pos:start="13:14" pos:end="13:30"><operator pos:start="13:14" pos:end="13:14">!</operator><call pos:start="13:15" pos:end="13:30"><name pos:start="13:15" pos:end="13:20">strcmp</name><argument_list pos:start="13:21" pos:end="13:30">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">cmd</name></expr></argument>, <argument pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><literal type="string" pos:start="13:27" pos:end="13:29">"x"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:50"><block_content pos:start="15:9" pos:end="15:50">

        <expr_stmt pos:start="15:9" pos:end="15:50"><expr pos:start="15:9" pos:end="15:49"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:49"><name pos:start="15:15" pos:end="15:22">set_expr</name><argument_list pos:start="15:23" pos:end="15:49">(<argument pos:start="15:24" pos:end="15:37"><expr pos:start="15:24" pos:end="15:37"><operator pos:start="15:24" pos:end="15:24">&amp;</operator><name pos:start="15:25" pos:end="15:37"><name pos:start="15:25" pos:end="15:28">over</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:37">x_pexpr</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:43"><expr pos:start="15:40" pos:end="15:43"><name pos:start="15:40" pos:end="15:43">args</name></expr></argument>, <argument pos:start="15:46" pos:end="15:48"><expr pos:start="15:46" pos:end="15:48"><name pos:start="15:46" pos:end="15:48">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="17:5" pos:end="19:50">else if <condition pos:start="17:13" pos:end="17:31">(<expr pos:start="17:14" pos:end="17:30"><operator pos:start="17:14" pos:end="17:14">!</operator><call pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:20">strcmp</name><argument_list pos:start="17:21" pos:end="17:30">(<argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">cmd</name></expr></argument>, <argument pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><literal type="string" pos:start="17:27" pos:end="17:29">"y"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:50"><block_content pos:start="19:9" pos:end="19:50">

        <expr_stmt pos:start="19:9" pos:end="19:50"><expr pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:49"><name pos:start="19:15" pos:end="19:22">set_expr</name><argument_list pos:start="19:23" pos:end="19:49">(<argument pos:start="19:24" pos:end="19:37"><expr pos:start="19:24" pos:end="19:37"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:37"><name pos:start="19:25" pos:end="19:28">over</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:37">y_pexpr</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:43"><expr pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:43">args</name></expr></argument>, <argument pos:start="19:46" pos:end="19:48"><expr pos:start="19:46" pos:end="19:48"><name pos:start="19:46" pos:end="19:48">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="21:5" pos:end="23:55">else if <condition pos:start="21:13" pos:end="21:36">(<expr pos:start="21:14" pos:end="21:35"><operator pos:start="21:14" pos:end="21:14">!</operator><call pos:start="21:15" pos:end="21:35"><name pos:start="21:15" pos:end="21:20">strcmp</name><argument_list pos:start="21:21" pos:end="21:35">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">cmd</name></expr></argument>, <argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><literal type="string" pos:start="21:27" pos:end="21:34">"enable"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:55"><block_content pos:start="23:9" pos:end="23:55">

        <expr_stmt pos:start="23:9" pos:end="23:55"><expr pos:start="23:9" pos:end="23:54"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:54"><name pos:start="23:15" pos:end="23:22">set_expr</name><argument_list pos:start="23:23" pos:end="23:54">(<argument pos:start="23:24" pos:end="23:42"><expr pos:start="23:24" pos:end="23:42"><operator pos:start="23:24" pos:end="23:24">&amp;</operator><name pos:start="23:25" pos:end="23:42"><name pos:start="23:25" pos:end="23:28">over</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:42">enable_pexpr</name></name></expr></argument>, <argument pos:start="23:45" pos:end="23:48"><expr pos:start="23:45" pos:end="23:48"><name pos:start="23:45" pos:end="23:48">args</name></expr></argument>, <argument pos:start="23:51" pos:end="23:53"><expr pos:start="23:51" pos:end="23:53"><name pos:start="23:51" pos:end="23:53">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:30">else<block type="pseudo" pos:start="27:9" pos:end="27:30"><block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:29"><name pos:start="27:15" pos:end="27:21">AVERROR</name><argument_list pos:start="27:22" pos:end="27:29">(<argument pos:start="27:23" pos:end="27:28"><expr pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:28">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:19"><if pos:start="31:5" pos:end="33:19">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:42">(<expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:12">over</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:23">eval_mode</name></name> <operator pos:start="37:25" pos:end="37:26">==</operator> <name pos:start="37:28" pos:end="37:41">EVAL_MODE_INIT</name></expr>)</condition> <block pos:start="37:44" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:29">

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:17">eval_expr</name><argument_list pos:start="39:18" pos:end="39:32">(<argument pos:start="39:19" pos:end="39:21"><expr pos:start="39:19" pos:end="39:21"><name pos:start="39:19" pos:end="39:21">ctx</name></expr></argument>, <argument pos:start="39:24" pos:end="39:31"><expr pos:start="39:24" pos:end="39:31"><name pos:start="39:24" pos:end="39:31">EVAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="47:29"><expr pos:start="41:9" pos:end="47:28"><call pos:start="41:9" pos:end="47:28"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="47:28">(<argument pos:start="41:16" pos:end="41:18"><expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ctx</name></expr></argument>, <argument pos:start="41:21" pos:end="41:34"><expr pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="41:37" pos:end="41:71"><expr pos:start="41:37" pos:end="41:71"><literal type="string" pos:start="41:37" pos:end="41:71">"x:%f xi:%d y:%f yi:%d enable:%f\n"</literal></expr></argument>,

               <argument pos:start="43:16" pos:end="43:38"><expr pos:start="43:16" pos:end="43:38"><name pos:start="43:16" pos:end="43:38"><name pos:start="43:16" pos:end="43:19">over</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:31">var_values</name><index pos:start="43:32" pos:end="43:38">[<expr pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:37">VAR_X</name></expr>]</index></name></expr></argument>, <argument pos:start="43:41" pos:end="43:47"><expr pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:44">over</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:47">x</name></name></expr></argument>,

               <argument pos:start="45:16" pos:end="45:38"><expr pos:start="45:16" pos:end="45:38"><name pos:start="45:16" pos:end="45:38"><name pos:start="45:16" pos:end="45:19">over</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:31">var_values</name><index pos:start="45:32" pos:end="45:38">[<expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">VAR_Y</name></expr>]</index></name></expr></argument>, <argument pos:start="45:41" pos:end="45:47"><expr pos:start="45:41" pos:end="45:47"><name pos:start="45:41" pos:end="45:47"><name pos:start="45:41" pos:end="45:44">over</name><operator pos:start="45:45" pos:end="45:46">-&gt;</operator><name pos:start="45:47" pos:end="45:47">y</name></name></expr></argument>,

               <argument pos:start="47:16" pos:end="47:27"><expr pos:start="47:16" pos:end="47:27"><name pos:start="47:16" pos:end="47:27"><name pos:start="47:16" pos:end="47:19">over</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:27">enable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
