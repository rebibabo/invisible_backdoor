<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11645.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">raw_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">TAKDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:23">tc</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="43:5"><if pos:start="11:5" pos:end="39:5">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:10">tc</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:23">mlast_frame</name></name></expr>)</condition> <block pos:start="11:26" pos:end="39:5">{<block_content pos:start="13:9" pos:end="37:30">

        <decl_stmt pos:start="13:9" pos:end="13:32"><decl pos:start="13:9" pos:end="13:31"><type pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:19">AVIOContext</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:23">pb</name> <init pos:start="13:25" pos:end="13:31">= <expr pos:start="13:27" pos:end="13:31"><name pos:start="13:27" pos:end="13:31"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:31">pb</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:27"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15">int64_t</name></type> <name pos:start="15:17" pos:end="15:20">size</name></decl>, <decl pos:start="15:23" pos:end="15:26"><type ref="prev" pos:start="15:9" pos:end="15:15"/><name pos:start="15:23" pos:end="15:26">left</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:47"><expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:12">left</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:17">tc</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:27">data_end</name></name> <operator pos:start="19:29" pos:end="19:29">-</operator> <call pos:start="19:31" pos:end="19:46"><name pos:start="19:31" pos:end="19:39">avio_tell</name><argument_list pos:start="19:40" pos:end="19:46">(<argument pos:start="19:41" pos:end="19:45"><expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:41">s</name><operator pos:start="19:42" pos:end="19:43">-&gt;</operator><name pos:start="19:44" pos:end="19:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:12">size</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:32"><name pos:start="21:16" pos:end="21:20">FFMIN</name><argument_list pos:start="21:21" pos:end="21:32">(<argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">left</name></expr></argument>, <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><literal type="number" pos:start="21:28" pos:end="21:31">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:31"><if pos:start="23:9" pos:end="25:31">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:19">&lt;=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:31"><block_content pos:start="25:13" pos:end="25:31">

            <return pos:start="25:13" pos:end="25:31">return <expr pos:start="25:20" pos:end="25:30"><name pos:start="25:20" pos:end="25:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:43"><expr pos:start="29:9" pos:end="29:42"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:42"><name pos:start="29:15" pos:end="29:27">av_get_packet</name><argument_list pos:start="29:28" pos:end="29:42">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">pb</name></expr></argument>, <argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">pkt</name></expr></argument>, <argument pos:start="29:38" pos:end="29:41"><expr pos:start="29:38" pos:end="29:41"><name pos:start="29:38" pos:end="29:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:11">pkt</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:25">stream_index</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:49">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:48"><name pos:start="41:15" pos:end="41:40">ff_raw_read_partial_packet</name><argument_list pos:start="41:41" pos:end="41:48">(<argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><name pos:start="41:42" pos:end="41:42">s</name></expr></argument>, <argument pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:47">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="47:5" pos:end="47:15">return <expr pos:start="47:12" pos:end="47:14"><name pos:start="47:12" pos:end="47:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
