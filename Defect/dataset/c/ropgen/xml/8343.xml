<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8343.c" pos:tabs="8"><function pos:start="1:1" pos:end="28:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">test_uuid_unparse_strdup</name><parameter_list pos:start="1:37" pos:end="1:42">(<parameter pos:start="1:38" pos:end="1:41"><decl pos:start="1:38" pos:end="1:41"><type pos:start="1:38" pos:end="1:41"><name pos:start="1:38" pos:end="1:41">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="28:1">{<block_content pos:start="5:5" pos:end="26:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="26:5">for <control pos:start="9:9" pos:end="9:52">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:47"><expr pos:start="9:17" pos:end="9:46"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <call pos:start="9:21" pos:end="9:46"><name pos:start="9:21" pos:end="9:30">ARRAY_SIZE</name><argument_list pos:start="9:31" pos:end="9:46">(<argument pos:start="9:32" pos:end="9:45"><expr pos:start="9:32" pos:end="9:45"><name pos:start="9:32" pos:end="9:45">uuid_test_data</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="9:49" pos:end="9:51"><expr pos:start="9:49" pos:end="9:51"><name pos:start="9:49" pos:end="9:49">i</name><operator pos:start="9:50" pos:end="9:51">++</operator></expr></incr>)</control> <block pos:start="9:54" pos:end="26:5">{<block_content pos:start="11:9" pos:end="23:60">

        <decl_stmt pos:start="11:9" pos:end="11:18"><decl pos:start="11:9" pos:end="11:17"><type pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:12">char</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">out</name></decl>;</decl_stmt>



        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:45">(<expr pos:start="15:13" pos:end="15:44"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:30"><name pos:start="15:14" pos:end="15:27">uuid_test_data</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">i</name></expr>]</index></name><operator pos:start="15:31" pos:end="15:31">.</operator><name pos:start="15:32" pos:end="15:44">check_unparse</name></expr>)</condition> <block pos:start="15:47" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:11">out</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:63"><name pos:start="21:15" pos:end="21:38">qemu_uuid_unparse_strdup</name><argument_list pos:start="21:39" pos:end="21:63">(<argument pos:start="21:40" pos:end="21:62"><expr pos:start="21:40" pos:end="21:62"><operator pos:start="21:40" pos:end="21:40">&amp;</operator><name pos:start="21:41" pos:end="21:57"><name pos:start="21:41" pos:end="21:54">uuid_test_data</name><index pos:start="21:55" pos:end="21:57">[<expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">i</name></expr>]</index></name><operator pos:start="21:58" pos:end="21:58">.</operator><name pos:start="21:59" pos:end="21:62">uuid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:60"><expr pos:start="23:9" pos:end="23:59"><call pos:start="23:9" pos:end="23:59"><name pos:start="23:9" pos:end="23:23">g_assert_cmpstr</name><argument_list pos:start="23:24" pos:end="23:59">(<argument pos:start="23:25" pos:end="23:49"><expr pos:start="23:25" pos:end="23:49"><name pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:38">uuid_test_data</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><name pos:start="23:40" pos:end="23:40">i</name></expr>]</index></name><operator pos:start="23:42" pos:end="23:42">.</operator><name pos:start="23:43" pos:end="23:49">uuidstr</name></expr></argument>, <argument pos:start="23:52" pos:end="23:53"><expr pos:start="23:52" pos:end="23:53"><operator pos:start="23:52" pos:end="23:53">==</operator></expr></argument>, <argument pos:start="23:56" pos:end="23:58"><expr pos:start="23:56" pos:end="23:58"><name pos:start="23:56" pos:end="23:58">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></for>

</block_content>}</block></function></unit>
