<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27175.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">poll_rest</name><parameter_list pos:start="1:21" pos:end="3:60">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:29">gboolean</name></type> <name pos:start="1:31" pos:end="1:39">poll_msgs</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:47">HANDLE</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:56">handles</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:62">gint</name></type> <name pos:start="1:64" pos:end="1:71">nhandles</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:28">GPollFD</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:33">fds</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:45"><decl pos:start="3:36" pos:end="3:45"><type pos:start="3:36" pos:end="3:45"><name pos:start="3:36" pos:end="3:40">guint</name></type> <name pos:start="3:42" pos:end="3:45">nfds</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:59"><decl pos:start="3:48" pos:end="3:59"><type pos:start="3:48" pos:end="3:59"><name pos:start="3:48" pos:end="3:51">gint</name></type> <name pos:start="3:53" pos:end="3:59">timeout</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="183:1">{<block_content pos:start="7:5" pos:end="181:13">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">DWORD</name></type> <name pos:start="7:11" pos:end="7:15">ready</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">GPollFD</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">recursed_result</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="77:5"><if pos:start="15:5" pos:end="39:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17">poll_msgs</name></expr>)</condition> <block pos:start="15:20" pos:end="39:5">{<block_content pos:start="23:9" pos:end="37:9">

        <comment type="block" pos:start="17:9" pos:end="21:11">/* Wait for either messages or handles

         * -&gt; Use MsgWaitForMultipleObjectsEx

         */</comment>

        <expr_stmt pos:start="23:9" pos:end="25:73"><expr pos:start="23:9" pos:end="25:72"><name pos:start="23:9" pos:end="23:13">ready</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="25:72"><name pos:start="23:17" pos:end="23:43">MsgWaitForMultipleObjectsEx</name><argument_list pos:start="23:44" pos:end="25:72">(<argument pos:start="23:45" pos:end="23:52"><expr pos:start="23:45" pos:end="23:52"><name pos:start="23:45" pos:end="23:52">nhandles</name></expr></argument>, <argument pos:start="23:55" pos:end="23:61"><expr pos:start="23:55" pos:end="23:61"><name pos:start="23:55" pos:end="23:61">handles</name></expr></argument>, <argument pos:start="23:64" pos:end="23:70"><expr pos:start="23:64" pos:end="23:70"><name pos:start="23:64" pos:end="23:70">timeout</name></expr></argument>,

                                            <argument pos:start="25:45" pos:end="25:55"><expr pos:start="25:45" pos:end="25:55"><name pos:start="25:45" pos:end="25:55">QS_ALLINPUT</name></expr></argument>, <argument pos:start="25:58" pos:end="25:71"><expr pos:start="25:58" pos:end="25:71"><name pos:start="25:58" pos:end="25:71">MWMO_ALERTABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:33">(<expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:17">ready</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:32">WAIT_FAILED</name></expr>)</condition> <block pos:start="29:35" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:25">

            <decl_stmt pos:start="31:13" pos:end="31:64"><decl pos:start="31:13" pos:end="31:63"><type pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:17">gchar</name> <modifier pos:start="31:19" pos:end="31:19">*</modifier></type><name pos:start="31:20" pos:end="31:23">emsg</name> <init pos:start="31:25" pos:end="31:63">= <expr pos:start="31:27" pos:end="31:63"><call pos:start="31:27" pos:end="31:63"><name pos:start="31:27" pos:end="31:47">g_win32_error_message</name><argument_list pos:start="31:48" pos:end="31:63">(<argument pos:start="31:49" pos:end="31:62"><expr pos:start="31:49" pos:end="31:62"><call pos:start="31:49" pos:end="31:62"><name pos:start="31:49" pos:end="31:60">GetLastError</name><argument_list pos:start="31:61" pos:end="31:62">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:70"><expr pos:start="33:13" pos:end="33:69"><call pos:start="33:13" pos:end="33:69"><name pos:start="33:13" pos:end="33:21">g_warning</name><argument_list pos:start="33:22" pos:end="33:69">(<argument pos:start="33:23" pos:end="33:62"><expr pos:start="33:23" pos:end="33:62"><literal type="string" pos:start="33:23" pos:end="33:62">"MsgWaitForMultipleObjectsEx failed: %s"</literal></expr></argument>, <argument pos:start="33:65" pos:end="33:68"><expr pos:start="33:65" pos:end="33:68"><name pos:start="33:65" pos:end="33:68">emsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:24"><call pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:18">g_free</name><argument_list pos:start="35:19" pos:end="35:24">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">emsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="55:5">else if <condition pos:start="39:15" pos:end="39:29">(<expr pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:23">nhandles</name> <operator pos:start="39:25" pos:end="39:26">==</operator> <literal type="number" pos:start="39:28" pos:end="39:28">0</literal></expr>)</condition> <block pos:start="39:31" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <comment type="block" pos:start="41:9" pos:end="41:54">/* No handles to wait for, just the timeout */</comment>

        <if_stmt pos:start="43:9" pos:end="53:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:32">(<expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:19">timeout</name> <operator pos:start="43:21" pos:end="43:22">==</operator> <name pos:start="43:24" pos:end="43:31">INFINITE</name></expr>)</condition> <block pos:start="43:34" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:32">

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:17">ready</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:31">WAIT_FAILED</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="53:9">else <block pos:start="47:16" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:33">

            <expr_stmt pos:start="49:13" pos:end="49:35"><expr pos:start="49:13" pos:end="49:34"><call pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:19">SleepEx</name><argument_list pos:start="49:20" pos:end="49:34">(<argument pos:start="49:21" pos:end="49:27"><expr pos:start="49:21" pos:end="49:27"><name pos:start="49:21" pos:end="49:27">timeout</name></expr></argument>, <argument pos:start="49:30" pos:end="49:33"><expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:17">ready</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:32">WAIT_TIMEOUT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="77:5">else <block pos:start="55:12" pos:end="77:5">{<block_content pos:start="63:9" pos:end="75:9">

        <comment type="block" pos:start="57:9" pos:end="61:11">/* Wait for just handles

         * -&gt; Use WaitForMultipleObjectsEx

         */</comment>

        <expr_stmt pos:start="63:9" pos:end="65:78"><expr pos:start="63:9" pos:end="65:77"><name pos:start="63:9" pos:end="63:13">ready</name> <operator pos:start="63:15" pos:end="63:15">=</operator>

            <call pos:start="65:13" pos:end="65:77"><name pos:start="65:13" pos:end="65:36">WaitForMultipleObjectsEx</name><argument_list pos:start="65:37" pos:end="65:77">(<argument pos:start="65:38" pos:end="65:45"><expr pos:start="65:38" pos:end="65:45"><name pos:start="65:38" pos:end="65:45">nhandles</name></expr></argument>, <argument pos:start="65:48" pos:end="65:54"><expr pos:start="65:48" pos:end="65:54"><name pos:start="65:48" pos:end="65:54">handles</name></expr></argument>, <argument pos:start="65:57" pos:end="65:61"><expr pos:start="65:57" pos:end="65:61"><name pos:start="65:57" pos:end="65:61">FALSE</name></expr></argument>, <argument pos:start="65:64" pos:end="65:70"><expr pos:start="65:64" pos:end="65:70"><name pos:start="65:64" pos:end="65:70">timeout</name></expr></argument>, <argument pos:start="65:73" pos:end="65:76"><expr pos:start="65:73" pos:end="65:76"><name pos:start="65:73" pos:end="65:76">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:33">(<expr pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:17">ready</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <name pos:start="67:22" pos:end="67:32">WAIT_FAILED</name></expr>)</condition> <block pos:start="67:35" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:25">

            <decl_stmt pos:start="69:13" pos:end="69:64"><decl pos:start="69:13" pos:end="69:63"><type pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:17">gchar</name> <modifier pos:start="69:19" pos:end="69:19">*</modifier></type><name pos:start="69:20" pos:end="69:23">emsg</name> <init pos:start="69:25" pos:end="69:63">= <expr pos:start="69:27" pos:end="69:63"><call pos:start="69:27" pos:end="69:63"><name pos:start="69:27" pos:end="69:47">g_win32_error_message</name><argument_list pos:start="69:48" pos:end="69:63">(<argument pos:start="69:49" pos:end="69:62"><expr pos:start="69:49" pos:end="69:62"><call pos:start="69:49" pos:end="69:62"><name pos:start="69:49" pos:end="69:60">GetLastError</name><argument_list pos:start="69:61" pos:end="69:62">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:67"><expr pos:start="71:13" pos:end="71:66"><call pos:start="71:13" pos:end="71:66"><name pos:start="71:13" pos:end="71:21">g_warning</name><argument_list pos:start="71:22" pos:end="71:66">(<argument pos:start="71:23" pos:end="71:59"><expr pos:start="71:23" pos:end="71:59"><literal type="string" pos:start="71:23" pos:end="71:59">"WaitForMultipleObjectsEx failed: %s"</literal></expr></argument>, <argument pos:start="71:62" pos:end="71:65"><expr pos:start="71:62" pos:end="71:65"><name pos:start="71:62" pos:end="71:65">emsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:25"><expr pos:start="73:13" pos:end="73:24"><call pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:18">g_free</name><argument_list pos:start="73:19" pos:end="73:24">(<argument pos:start="73:20" pos:end="73:23"><expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">emsg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="177:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:29">(<expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:13">ready</name> <operator pos:start="81:15" pos:end="81:16">==</operator> <name pos:start="81:18" pos:end="81:28">WAIT_FAILED</name></expr>)</condition> <block pos:start="81:31" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:18">

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="89:5">else if <condition pos:start="85:15" pos:end="85:68">(<expr pos:start="85:16" pos:end="85:67"><name pos:start="85:16" pos:end="85:20">ready</name> <operator pos:start="85:22" pos:end="85:23">==</operator> <name pos:start="85:25" pos:end="85:36">WAIT_TIMEOUT</name> <operator pos:start="85:38" pos:end="85:39">||</operator> <name pos:start="85:41" pos:end="85:45">ready</name> <operator pos:start="85:47" pos:end="85:48">==</operator> <name pos:start="85:50" pos:end="85:67">WAIT_IO_COMPLETION</name></expr>)</condition> <block pos:start="85:70" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:17">

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="89:7" pos:end="127:5">else if <condition pos:start="89:15" pos:end="89:62">(<expr pos:start="89:16" pos:end="89:61"><name pos:start="89:16" pos:end="89:24">poll_msgs</name> <operator pos:start="89:26" pos:end="89:27">&amp;&amp;</operator> <name pos:start="89:29" pos:end="89:33">ready</name> <operator pos:start="89:35" pos:end="89:36">==</operator> <name pos:start="89:38" pos:end="89:50">WAIT_OBJECT_0</name> <operator pos:start="89:52" pos:end="89:52">+</operator> <name pos:start="89:54" pos:end="89:61">nhandles</name></expr>)</condition> <block pos:start="89:64" pos:end="127:5">{<block_content pos:start="91:9" pos:end="125:66">

        <for pos:start="91:9" pos:end="99:9">for <control pos:start="91:13" pos:end="91:42">(<init pos:start="91:14" pos:end="91:21"><expr pos:start="91:14" pos:end="91:20"><name pos:start="91:14" pos:end="91:14">f</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:20">fds</name></expr>;</init> <condition pos:start="91:23" pos:end="91:37"><expr pos:start="91:23" pos:end="91:36"><name pos:start="91:23" pos:end="91:23">f</name> <operator pos:start="91:25" pos:end="91:25">&lt;</operator> <operator pos:start="91:27" pos:end="91:27">&amp;</operator><name pos:start="91:28" pos:end="91:36"><name pos:start="91:28" pos:end="91:30">fds</name><index pos:start="91:31" pos:end="91:36">[<expr pos:start="91:32" pos:end="91:35"><name pos:start="91:32" pos:end="91:35">nfds</name></expr>]</index></name></expr>;</condition> <incr pos:start="91:39" pos:end="91:41"><expr pos:start="91:39" pos:end="91:41"><operator pos:start="91:39" pos:end="91:40">++</operator><name pos:start="91:41" pos:end="91:41">f</name></expr></incr>)</control> <block pos:start="91:44" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:13">

            <if_stmt pos:start="93:13" pos:end="97:13"><if pos:start="93:13" pos:end="97:13">if <condition pos:start="93:16" pos:end="93:67">(<expr pos:start="93:17" pos:end="93:66"><name pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">f</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:21">fd</name></name> <operator pos:start="93:23" pos:end="93:24">==</operator> <name pos:start="93:26" pos:end="93:43">G_WIN32_MSG_HANDLE</name> <operator pos:start="93:45" pos:end="93:46">&amp;&amp;</operator> <name pos:start="93:48" pos:end="93:56"><name pos:start="93:48" pos:end="93:48">f</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:56">events</name></name> <operator pos:start="93:58" pos:end="93:58">&amp;</operator> <name pos:start="93:60" pos:end="93:66">G_IO_IN</name></expr>)</condition> <block pos:start="93:69" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:38">

                <expr_stmt pos:start="95:17" pos:end="95:38"><expr pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:17">f</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:26">revents</name></name> <operator pos:start="95:28" pos:end="95:29">|=</operator> <name pos:start="95:31" pos:end="95:37">G_IO_IN</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="103:9" pos:end="107:11">/* If we have a timeout, or no handles to poll, be satisfied

         * with just noticing we have messages waiting.

         */</comment>

        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:42">(<expr pos:start="109:13" pos:end="109:41"><name pos:start="109:13" pos:end="109:19">timeout</name> <operator pos:start="109:21" pos:end="109:22">!=</operator> <literal type="number" pos:start="109:24" pos:end="109:24">0</literal> <operator pos:start="109:26" pos:end="109:27">||</operator> <name pos:start="109:29" pos:end="109:36">nhandles</name> <operator pos:start="109:38" pos:end="109:39">==</operator> <literal type="number" pos:start="109:41" pos:end="109:41">0</literal></expr>)</condition> <block pos:start="109:44" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:21">

            <return pos:start="111:13" pos:end="111:21">return <expr pos:start="111:20" pos:end="111:20"><literal type="number" pos:start="111:20" pos:end="111:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="117:9" pos:end="121:11">/* If no timeout and handles to poll, recurse to poll them,

         * too.

         */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:76"><expr pos:start="123:9" pos:end="123:75"><name pos:start="123:9" pos:end="123:23">recursed_result</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <call pos:start="123:27" pos:end="123:75"><name pos:start="123:27" pos:end="123:35">poll_rest</name><argument_list pos:start="123:36" pos:end="123:75">(<argument pos:start="123:37" pos:end="123:41"><expr pos:start="123:37" pos:end="123:41"><name pos:start="123:37" pos:end="123:41">FALSE</name></expr></argument>, <argument pos:start="123:44" pos:end="123:50"><expr pos:start="123:44" pos:end="123:50"><name pos:start="123:44" pos:end="123:50">handles</name></expr></argument>, <argument pos:start="123:53" pos:end="123:60"><expr pos:start="123:53" pos:end="123:60"><name pos:start="123:53" pos:end="123:60">nhandles</name></expr></argument>, <argument pos:start="123:63" pos:end="123:65"><expr pos:start="123:63" pos:end="123:65"><name pos:start="123:63" pos:end="123:65">fds</name></expr></argument>, <argument pos:start="123:68" pos:end="123:71"><expr pos:start="123:68" pos:end="123:71"><name pos:start="123:68" pos:end="123:71">nfds</name></expr></argument>, <argument pos:start="123:74" pos:end="123:74"><expr pos:start="123:74" pos:end="123:74"><literal type="number" pos:start="123:74" pos:end="123:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="125:9" pos:end="125:66">return <expr pos:start="125:16" pos:end="125:65"><ternary pos:start="125:16" pos:end="125:65"><condition pos:start="125:16" pos:end="125:40"><expr pos:start="125:16" pos:end="125:38"><operator pos:start="125:16" pos:end="125:16">(</operator><name pos:start="125:17" pos:end="125:31">recursed_result</name> <operator pos:start="125:33" pos:end="125:34">==</operator> <operator pos:start="125:36" pos:end="125:36">-</operator><literal type="number" pos:start="125:37" pos:end="125:37">1</literal><operator pos:start="125:38" pos:end="125:38">)</operator></expr> ?</condition><then pos:start="125:42" pos:end="125:43"> <expr pos:start="125:42" pos:end="125:43"><operator pos:start="125:42" pos:end="125:42">-</operator><literal type="number" pos:start="125:43" pos:end="125:43">1</literal></expr> </then><else pos:start="125:45" pos:end="125:65">: <expr pos:start="125:47" pos:end="125:65"><literal type="number" pos:start="125:47" pos:end="125:49">1</literal> <operator pos:start="125:49" pos:end="125:49">+</operator> <name pos:start="125:51" pos:end="125:65">recursed_result</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="127:7" pos:end="177:5">else if <condition pos:start="127:15" pos:end="131:48">(<comment type="block" pos:start="127:16" pos:end="129:66">/* QEMU: removed the following unneeded statement which causes

                * a compiler warning: ready &gt;= WAIT_OBJECT_0 &amp;&amp; */</comment>

               <expr pos:start="131:16" pos:end="131:47"><name pos:start="131:16" pos:end="131:20">ready</name> <operator pos:start="131:22" pos:end="131:22">&lt;</operator> <name pos:start="131:24" pos:end="131:36">WAIT_OBJECT_0</name> <operator pos:start="131:38" pos:end="131:38">+</operator> <name pos:start="131:40" pos:end="131:47">nhandles</name></expr>)</condition> <block pos:start="131:50" pos:end="177:5">{<block_content pos:start="133:9" pos:end="175:17">

        <for pos:start="133:9" pos:end="141:9">for <control pos:start="133:13" pos:end="133:42">(<init pos:start="133:14" pos:end="133:21"><expr pos:start="133:14" pos:end="133:20"><name pos:start="133:14" pos:end="133:14">f</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <name pos:start="133:18" pos:end="133:20">fds</name></expr>;</init> <condition pos:start="133:23" pos:end="133:37"><expr pos:start="133:23" pos:end="133:36"><name pos:start="133:23" pos:end="133:23">f</name> <operator pos:start="133:25" pos:end="133:25">&lt;</operator> <operator pos:start="133:27" pos:end="133:27">&amp;</operator><name pos:start="133:28" pos:end="133:36"><name pos:start="133:28" pos:end="133:30">fds</name><index pos:start="133:31" pos:end="133:36">[<expr pos:start="133:32" pos:end="133:35"><name pos:start="133:32" pos:end="133:35">nfds</name></expr>]</index></name></expr>;</condition> <incr pos:start="133:39" pos:end="133:41"><expr pos:start="133:39" pos:end="133:41"><operator pos:start="133:39" pos:end="133:40">++</operator><name pos:start="133:41" pos:end="133:41">f</name></expr></incr>)</control> <block pos:start="133:44" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:13">

            <if_stmt pos:start="135:13" pos:end="139:13"><if pos:start="135:13" pos:end="139:13">if <condition pos:start="135:16" pos:end="135:65">(<expr pos:start="135:17" pos:end="135:64"><operator pos:start="135:17" pos:end="135:17">(</operator><name pos:start="135:18" pos:end="135:23">HANDLE</name><operator pos:start="135:24" pos:end="135:24">)</operator> <name pos:start="135:26" pos:end="135:30"><name pos:start="135:26" pos:end="135:26">f</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:30">fd</name></name> <operator pos:start="135:32" pos:end="135:33">==</operator> <name pos:start="135:35" pos:end="135:64"><name pos:start="135:35" pos:end="135:41">handles</name><index pos:start="135:42" pos:end="135:64">[<expr pos:start="135:43" pos:end="135:63"><name pos:start="135:43" pos:end="135:47">ready</name> <operator pos:start="135:49" pos:end="135:49">-</operator> <name pos:start="135:51" pos:end="135:63">WAIT_OBJECT_0</name></expr>]</index></name></expr>)</condition> <block pos:start="135:67" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:39">

                <expr_stmt pos:start="137:17" pos:end="137:39"><expr pos:start="137:17" pos:end="137:38"><name pos:start="137:17" pos:end="137:26"><name pos:start="137:17" pos:end="137:17">f</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:26">revents</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:38"><name pos:start="137:30" pos:end="137:30">f</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:38">events</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="145:9" pos:end="149:11">/* If no timeout and polling several handles, recurse to poll

         * the rest of them.

         */</comment>

        <if_stmt pos:start="151:9" pos:end="173:9"><if pos:start="151:9" pos:end="173:9">if <condition pos:start="151:12" pos:end="151:41">(<expr pos:start="151:13" pos:end="151:40"><name pos:start="151:13" pos:end="151:19">timeout</name> <operator pos:start="151:21" pos:end="151:22">==</operator> <literal type="number" pos:start="151:24" pos:end="151:24">0</literal> <operator pos:start="151:26" pos:end="151:27">&amp;&amp;</operator> <name pos:start="151:29" pos:end="151:36">nhandles</name> <operator pos:start="151:38" pos:end="151:38">&gt;</operator> <literal type="number" pos:start="151:40" pos:end="151:40">1</literal></expr>)</condition> <block pos:start="151:43" pos:end="173:9">{<block_content pos:start="155:13" pos:end="171:70">

            <comment type="block" pos:start="153:13" pos:end="153:46">/* Remove the handle that fired */</comment>

            <decl_stmt pos:start="155:13" pos:end="155:18"><decl pos:start="155:13" pos:end="155:17"><type pos:start="155:13" pos:end="155:15"><name pos:start="155:13" pos:end="155:15">int</name></type> <name pos:start="155:17" pos:end="155:17">i</name></decl>;</decl_stmt>

            <if_stmt pos:start="157:13" pos:end="165:13"><if pos:start="157:13" pos:end="165:13">if <condition pos:start="157:16" pos:end="157:37">(<expr pos:start="157:17" pos:end="157:36"><name pos:start="157:17" pos:end="157:21">ready</name> <operator pos:start="157:23" pos:end="157:23">&lt;</operator> <name pos:start="157:25" pos:end="157:32">nhandles</name> <operator pos:start="157:34" pos:end="157:34">-</operator> <literal type="number" pos:start="157:36" pos:end="157:36">1</literal></expr>)</condition> <block pos:start="157:39" pos:end="165:13">{<block_content pos:start="159:17" pos:end="163:17">

                <for pos:start="159:17" pos:end="163:17">for <control pos:start="159:21" pos:end="159:70">(<init pos:start="159:22" pos:end="159:51"><expr pos:start="159:22" pos:end="159:50"><name pos:start="159:22" pos:end="159:22">i</name> <operator pos:start="159:24" pos:end="159:24">=</operator> <name pos:start="159:26" pos:end="159:30">ready</name> <operator pos:start="159:32" pos:end="159:32">-</operator> <name pos:start="159:34" pos:end="159:46">WAIT_OBJECT_0</name> <operator pos:start="159:48" pos:end="159:48">+</operator> <literal type="number" pos:start="159:50" pos:end="159:50">1</literal></expr>;</init> <condition pos:start="159:53" pos:end="159:65"><expr pos:start="159:53" pos:end="159:64"><name pos:start="159:53" pos:end="159:53">i</name> <operator pos:start="159:55" pos:end="159:55">&lt;</operator> <name pos:start="159:57" pos:end="159:64">nhandles</name></expr>;</condition> <incr pos:start="159:67" pos:end="159:69"><expr pos:start="159:67" pos:end="159:69"><name pos:start="159:67" pos:end="159:67">i</name><operator pos:start="159:68" pos:end="159:69">++</operator></expr></incr>)</control> <block pos:start="159:72" pos:end="163:17">{<block_content pos:start="161:21" pos:end="161:46">

                    <expr_stmt pos:start="161:21" pos:end="161:46"><expr pos:start="161:21" pos:end="161:45"><name pos:start="161:21" pos:end="161:32"><name pos:start="161:21" pos:end="161:27">handles</name><index pos:start="161:28" pos:end="161:32">[<expr pos:start="161:29" pos:end="161:31"><name pos:start="161:29" pos:end="161:29">i</name><operator pos:start="161:30" pos:end="161:30">-</operator><literal type="number" pos:start="161:31" pos:end="161:31">1</literal></expr>]</index></name> <operator pos:start="161:34" pos:end="161:34">=</operator> <name pos:start="161:36" pos:end="161:45"><name pos:start="161:36" pos:end="161:42">handles</name><index pos:start="161:43" pos:end="161:45">[<expr pos:start="161:44" pos:end="161:44"><name pos:start="161:44" pos:end="161:44">i</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:23"><expr pos:start="167:13" pos:end="167:22"><name pos:start="167:13" pos:end="167:20">nhandles</name><operator pos:start="167:21" pos:end="167:22">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:80"><expr pos:start="169:13" pos:end="169:79"><name pos:start="169:13" pos:end="169:27">recursed_result</name> <operator pos:start="169:29" pos:end="169:29">=</operator> <call pos:start="169:31" pos:end="169:79"><name pos:start="169:31" pos:end="169:39">poll_rest</name><argument_list pos:start="169:40" pos:end="169:79">(<argument pos:start="169:41" pos:end="169:45"><expr pos:start="169:41" pos:end="169:45"><name pos:start="169:41" pos:end="169:45">FALSE</name></expr></argument>, <argument pos:start="169:48" pos:end="169:54"><expr pos:start="169:48" pos:end="169:54"><name pos:start="169:48" pos:end="169:54">handles</name></expr></argument>, <argument pos:start="169:57" pos:end="169:64"><expr pos:start="169:57" pos:end="169:64"><name pos:start="169:57" pos:end="169:64">nhandles</name></expr></argument>, <argument pos:start="169:67" pos:end="169:69"><expr pos:start="169:67" pos:end="169:69"><name pos:start="169:67" pos:end="169:69">fds</name></expr></argument>, <argument pos:start="169:72" pos:end="169:75"><expr pos:start="169:72" pos:end="169:75"><name pos:start="169:72" pos:end="169:75">nfds</name></expr></argument>, <argument pos:start="169:78" pos:end="169:78"><expr pos:start="169:78" pos:end="169:78"><literal type="number" pos:start="169:78" pos:end="169:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="171:13" pos:end="171:70">return <expr pos:start="171:20" pos:end="171:69"><ternary pos:start="171:20" pos:end="171:69"><condition pos:start="171:20" pos:end="171:44"><expr pos:start="171:20" pos:end="171:42"><operator pos:start="171:20" pos:end="171:20">(</operator><name pos:start="171:21" pos:end="171:35">recursed_result</name> <operator pos:start="171:37" pos:end="171:38">==</operator> <operator pos:start="171:40" pos:end="171:40">-</operator><literal type="number" pos:start="171:41" pos:end="171:41">1</literal><operator pos:start="171:42" pos:end="171:42">)</operator></expr> ?</condition><then pos:start="171:46" pos:end="171:47"> <expr pos:start="171:46" pos:end="171:47"><operator pos:start="171:46" pos:end="171:46">-</operator><literal type="number" pos:start="171:47" pos:end="171:47">1</literal></expr> </then><else pos:start="171:49" pos:end="171:69">: <expr pos:start="171:51" pos:end="171:69"><literal type="number" pos:start="171:51" pos:end="171:53">1</literal> <operator pos:start="171:53" pos:end="171:53">+</operator> <name pos:start="171:55" pos:end="171:69">recursed_result</name></expr></else></ternary></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="175:9" pos:end="175:17">return <expr pos:start="175:16" pos:end="175:16"><literal type="number" pos:start="175:16" pos:end="175:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
