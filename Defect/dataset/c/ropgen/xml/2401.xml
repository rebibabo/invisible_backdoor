<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2401.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:42">mpeg2_decode_block_intra</name><parameter_list pos:start="1:43" pos:end="3:65">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:57">MpegEncContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:50">int16_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:57">block</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:64"><decl pos:start="3:60" pos:end="3:64"><type pos:start="3:60" pos:end="3:64"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:64">n</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="167:1">{<block_content pos:start="7:5" pos:end="165:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>, <decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:17">dc</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:23">diff</name></decl>, <decl pos:start="7:26" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:26">i</name></decl>, <decl pos:start="7:29" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:29">j</name></decl>, <decl pos:start="7:32" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:34">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">component</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">RLTable</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:15">rl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier><specifier pos:start="13:14" pos:end="13:18">const</specifier></type> <name pos:start="13:20" pos:end="13:28">scantable</name> <init pos:start="13:30" pos:end="13:60">= <expr pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:60"><name pos:start="13:32" pos:end="13:32">s</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:49">intra_scantable</name><operator pos:start="13:50" pos:end="13:50">.</operator><name pos:start="13:51" pos:end="13:60">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:18">uint16_t</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:32">quant_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:20">qscale</name> <init pos:start="17:22" pos:end="17:32">= <expr pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:32">qscale</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">mismatch</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:24">/* DC coefficient */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:11">&lt;</operator> <literal type="number" pos:start="25:13" pos:end="25:13">4</literal></expr>)</condition> <block pos:start="25:16" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:25">

        <expr_stmt pos:start="27:9" pos:end="27:39"><expr pos:start="27:9" pos:end="27:38"><name pos:start="27:9" pos:end="27:20">quant_matrix</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:38"><name pos:start="27:24" pos:end="27:24">s</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:38">intra_matrix</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:17">component</name>    <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:35">

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:20">quant_matrix</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:45"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:45">chroma_intra_matrix</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:17">component</name>    <operator pos:start="35:22" pos:end="35:22">=</operator> <operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:25">n</name> <operator pos:start="35:27" pos:end="35:27">&amp;</operator> <literal type="number" pos:start="35:29" pos:end="35:29">1</literal><operator pos:start="35:30" pos:end="35:30">)</operator> <operator pos:start="35:32" pos:end="35:32">+</operator> <literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:8">diff</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <call pos:start="39:12" pos:end="39:39"><name pos:start="39:12" pos:end="39:20">decode_dc</name><argument_list pos:start="39:21" pos:end="39:39">(<argument pos:start="39:22" pos:end="39:27"><expr pos:start="39:22" pos:end="39:27"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:27"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:27">gb</name></name></expr></argument>, <argument pos:start="39:30" pos:end="39:38"><expr pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:38">component</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:35"><if pos:start="41:5" pos:end="43:35">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:12">diff</name> <operator pos:start="41:14" pos:end="41:15">&gt;=</operator> <literal type="number" pos:start="41:17" pos:end="41:22">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:35"><block_content pos:start="43:9" pos:end="43:35">

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:6">dc</name>  <operator pos:start="45:9" pos:end="45:9">=</operator> <name pos:start="45:11" pos:end="45:31"><name pos:start="45:11" pos:end="45:11">s</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:20">last_dc</name><index pos:start="45:21" pos:end="45:31">[<expr pos:start="45:22" pos:end="45:30"><name pos:start="45:22" pos:end="45:30">component</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:6">dc</name> <operator pos:start="47:8" pos:end="47:9">+=</operator> <name pos:start="47:11" pos:end="47:14">diff</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">last_dc</name><index pos:start="49:15" pos:end="49:25">[<expr pos:start="49:16" pos:end="49:24"><name pos:start="49:16" pos:end="49:24">component</name></expr>]</index></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:30">dc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:49"><expr pos:start="51:5" pos:end="51:48"><name pos:start="51:5" pos:end="51:12"><name pos:start="51:5" pos:end="51:9">block</name><index pos:start="51:10" pos:end="51:12">[<expr pos:start="51:11" pos:end="51:11"><literal type="number" pos:start="51:11" pos:end="51:11">0</literal></expr>]</index></name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:17">dc</name> <operator pos:start="51:19" pos:end="51:20">&lt;&lt;</operator> <operator pos:start="51:22" pos:end="51:22">(</operator><literal type="number" pos:start="51:23" pos:end="51:25">3</literal> <operator pos:start="51:25" pos:end="51:25">-</operator> <name pos:start="51:27" pos:end="51:47"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:47">intra_dc_precision</name></name><operator pos:start="51:48" pos:end="51:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:43"><expr pos:start="53:5" pos:end="53:42"><call pos:start="53:5" pos:end="53:42"><name pos:start="53:5" pos:end="53:11">ff_tlog</name><argument_list pos:start="53:12" pos:end="53:42">(<argument pos:start="53:13" pos:end="53:20"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:20">avctx</name></name></expr></argument>, <argument pos:start="53:23" pos:end="53:31"><expr pos:start="53:23" pos:end="53:31"><literal type="string" pos:start="53:23" pos:end="53:31">"dc=%d\n"</literal></expr></argument>, <argument pos:start="53:34" pos:end="53:41"><expr pos:start="53:34" pos:end="53:41"><name pos:start="53:34" pos:end="53:41"><name pos:start="53:34" pos:end="53:38">block</name><index pos:start="53:39" pos:end="53:41">[<expr pos:start="53:40" pos:end="53:40"><literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:28"><expr pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:12">mismatch</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:20">block</name><index pos:start="55:21" pos:end="55:23">[<expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>]</index></name> <operator pos:start="55:25" pos:end="55:25">^</operator> <literal type="number" pos:start="55:27" pos:end="55:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:10"><expr pos:start="57:5" pos:end="57:9"><name pos:start="57:5" pos:end="57:5">i</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <literal type="number" pos:start="57:9" pos:end="57:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:26"><if pos:start="59:5" pos:end="61:26">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:27">intra_vlc_format</name></name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:26"><block_content pos:start="61:9" pos:end="61:26">

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:10">rl</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:25">ff_rl_mpeg2</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="63:5" pos:end="65:26">else<block type="pseudo" pos:start="65:9" pos:end="65:26"><block_content pos:start="65:9" pos:end="65:26">

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:10">rl</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:25">ff_rl_mpeg1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <block pos:start="69:5" pos:end="153:5">{<block_content pos:start="71:9" pos:end="151:33">

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><call pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:19">OPEN_READER</name><argument_list pos:start="71:20" pos:end="71:31">(<argument pos:start="71:21" pos:end="71:22"><expr pos:start="71:21" pos:end="71:22"><name pos:start="71:21" pos:end="71:22">re</name></expr></argument>, <argument pos:start="71:25" pos:end="71:30"><expr pos:start="71:25" pos:end="71:30"><operator pos:start="71:25" pos:end="71:25">&amp;</operator><name pos:start="71:26" pos:end="71:30"><name pos:start="71:26" pos:end="71:26">s</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="73:9" pos:end="73:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="75:9" pos:end="149:9">for <control pos:start="75:13" pos:end="75:16">(<init pos:start="75:14" pos:end="75:14">;</init><condition pos:start="75:15" pos:end="75:15">;</condition><incr/>)</control> <block pos:start="75:18" pos:end="149:9">{<block_content pos:start="77:13" pos:end="147:30">

            <expr_stmt pos:start="77:13" pos:end="77:37"><expr pos:start="77:13" pos:end="77:36"><call pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:24">UPDATE_CACHE</name><argument_list pos:start="77:25" pos:end="77:36">(<argument pos:start="77:26" pos:end="77:27"><expr pos:start="77:26" pos:end="77:27"><name pos:start="77:26" pos:end="77:27">re</name></expr></argument>, <argument pos:start="77:30" pos:end="77:35"><expr pos:start="77:30" pos:end="77:35"><operator pos:start="77:30" pos:end="77:30">&amp;</operator><name pos:start="77:31" pos:end="77:35"><name pos:start="77:31" pos:end="77:31">s</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="81:43"><expr pos:start="79:13" pos:end="81:42"><call pos:start="79:13" pos:end="81:42"><name pos:start="79:13" pos:end="79:22">GET_RL_VLC</name><argument_list pos:start="79:23" pos:end="81:42">(<argument pos:start="79:24" pos:end="79:28"><expr pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:28">level</name></expr></argument>, <argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">run</name></expr></argument>, <argument pos:start="79:36" pos:end="79:37"><expr pos:start="79:36" pos:end="79:37"><name pos:start="79:36" pos:end="79:37">re</name></expr></argument>, <argument pos:start="79:40" pos:end="79:45"><expr pos:start="79:40" pos:end="79:45"><operator pos:start="79:40" pos:end="79:40">&amp;</operator><name pos:start="79:41" pos:end="79:45"><name pos:start="79:41" pos:end="79:41">s</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:45">gb</name></name></expr></argument>, <argument pos:start="79:48" pos:end="79:60"><expr pos:start="79:48" pos:end="79:60"><name pos:start="79:48" pos:end="79:60"><name pos:start="79:48" pos:end="79:49">rl</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:57">rl_vlc</name><index pos:start="79:58" pos:end="79:60">[<expr pos:start="79:59" pos:end="79:59"><literal type="number" pos:start="79:59" pos:end="79:59">0</literal></expr>]</index></name></expr></argument>,

                       <argument pos:start="81:24" pos:end="81:35"><expr pos:start="81:24" pos:end="81:35"><name pos:start="81:24" pos:end="81:35">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="81:38" pos:end="81:38"><expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">2</literal></expr></argument>, <argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><literal type="number" pos:start="81:41" pos:end="81:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="85:13" pos:end="141:13"><if pos:start="85:13" pos:end="89:13">if <condition pos:start="85:16" pos:end="85:29">(<expr pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:21">level</name> <operator pos:start="85:23" pos:end="85:24">==</operator> <literal type="number" pos:start="85:26" pos:end="85:28">127</literal></expr>)</condition> <block pos:start="85:31" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:22">

                <break pos:start="87:17" pos:end="87:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="89:15" pos:end="107:13">else if <condition pos:start="89:23" pos:end="89:34">(<expr pos:start="89:24" pos:end="89:33"><name pos:start="89:24" pos:end="89:28">level</name> <operator pos:start="89:30" pos:end="89:31">!=</operator> <literal type="number" pos:start="89:33" pos:end="89:33">0</literal></expr>)</condition> <block pos:start="89:36" pos:end="107:13">{<block_content pos:start="91:17" pos:end="105:46">

                <expr_stmt pos:start="91:17" pos:end="91:25"><expr pos:start="91:17" pos:end="91:24"><name pos:start="91:17" pos:end="91:17">i</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <name pos:start="91:22" pos:end="91:24">run</name></expr>;</expr_stmt>

                <if_stmt pos:start="93:17" pos:end="95:26"><if pos:start="93:17" pos:end="95:26">if <condition pos:start="93:20" pos:end="93:34">(<expr pos:start="93:21" pos:end="93:33"><name pos:start="93:21" pos:end="93:21">i</name> <operator pos:start="93:23" pos:end="93:23">&gt;</operator> <name pos:start="93:25" pos:end="93:33">MAX_INDEX</name></expr>)</condition><block type="pseudo" pos:start="95:21" pos:end="95:26"><block_content pos:start="95:21" pos:end="95:26">

                    <break pos:start="95:21" pos:end="95:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:33"><expr pos:start="97:17" pos:end="97:32"><name pos:start="97:17" pos:end="97:17">j</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:32"><name pos:start="97:21" pos:end="97:29">scantable</name><index pos:start="97:30" pos:end="97:32">[<expr pos:start="97:31" pos:end="97:31"><name pos:start="97:31" pos:end="97:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:64"><expr pos:start="99:17" pos:end="99:63"><name pos:start="99:17" pos:end="99:21">level</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <operator pos:start="99:25" pos:end="99:25">(</operator><name pos:start="99:26" pos:end="99:30">level</name> <operator pos:start="99:32" pos:end="99:32">*</operator> <name pos:start="99:34" pos:end="99:39">qscale</name> <operator pos:start="99:41" pos:end="99:41">*</operator> <name pos:start="99:43" pos:end="99:57"><name pos:start="99:43" pos:end="99:54">quant_matrix</name><index pos:start="99:55" pos:end="99:57">[<expr pos:start="99:56" pos:end="99:56"><name pos:start="99:56" pos:end="99:56">j</name></expr>]</index></name><operator pos:start="99:58" pos:end="99:58">)</operator> <operator pos:start="99:60" pos:end="99:61">&gt;&gt;</operator> <literal type="number" pos:start="99:63" pos:end="99:63">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="103:50"><expr pos:start="101:17" pos:end="103:49"><name pos:start="101:17" pos:end="101:21">level</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:30">level</name> <operator pos:start="101:32" pos:end="101:32">^</operator> <call pos:start="101:34" pos:end="101:58"><name pos:start="101:34" pos:end="101:43">SHOW_SBITS</name><argument_list pos:start="101:44" pos:end="101:58">(<argument pos:start="101:45" pos:end="101:46"><expr pos:start="101:45" pos:end="101:46"><name pos:start="101:45" pos:end="101:46">re</name></expr></argument>, <argument pos:start="101:49" pos:end="101:54"><expr pos:start="101:49" pos:end="101:54"><operator pos:start="101:49" pos:end="101:49">&amp;</operator><name pos:start="101:50" pos:end="101:54"><name pos:start="101:50" pos:end="101:50">s</name><operator pos:start="101:51" pos:end="101:52">-&gt;</operator><name pos:start="101:53" pos:end="101:54">gb</name></name></expr></argument>, <argument pos:start="101:57" pos:end="101:57"><expr pos:start="101:57" pos:end="101:57"><literal type="number" pos:start="101:57" pos:end="101:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="101:59" pos:end="101:59">)</operator> <operator pos:start="101:61" pos:end="101:61">-</operator>

                        <call pos:start="103:25" pos:end="103:49"><name pos:start="103:25" pos:end="103:34">SHOW_SBITS</name><argument_list pos:start="103:35" pos:end="103:49">(<argument pos:start="103:36" pos:end="103:37"><expr pos:start="103:36" pos:end="103:37"><name pos:start="103:36" pos:end="103:37">re</name></expr></argument>, <argument pos:start="103:40" pos:end="103:45"><expr pos:start="103:40" pos:end="103:45"><operator pos:start="103:40" pos:end="103:40">&amp;</operator><name pos:start="103:41" pos:end="103:45"><name pos:start="103:41" pos:end="103:41">s</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:45">gb</name></name></expr></argument>, <argument pos:start="103:48" pos:end="103:48"><expr pos:start="103:48" pos:end="103:48"><literal type="number" pos:start="103:48" pos:end="103:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:46"><expr pos:start="105:17" pos:end="105:45"><call pos:start="105:17" pos:end="105:45"><name pos:start="105:17" pos:end="105:30">LAST_SKIP_BITS</name><argument_list pos:start="105:31" pos:end="105:45">(<argument pos:start="105:32" pos:end="105:33"><expr pos:start="105:32" pos:end="105:33"><name pos:start="105:32" pos:end="105:33">re</name></expr></argument>, <argument pos:start="105:36" pos:end="105:41"><expr pos:start="105:36" pos:end="105:41"><operator pos:start="105:36" pos:end="105:36">&amp;</operator><name pos:start="105:37" pos:end="105:41"><name pos:start="105:37" pos:end="105:37">s</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:41">gb</name></name></expr></argument>, <argument pos:start="105:44" pos:end="105:44"><expr pos:start="105:44" pos:end="105:44"><literal type="number" pos:start="105:44" pos:end="105:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="107:15" pos:end="141:13">else <block pos:start="107:20" pos:end="141:13">{<block_content pos:start="111:17" pos:end="139:17">

                <comment type="block" pos:start="109:17" pos:end="109:28">/* escape */</comment>

                <expr_stmt pos:start="111:17" pos:end="111:52"><expr pos:start="111:17" pos:end="111:51"><name pos:start="111:17" pos:end="111:19">run</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="111:47"><name pos:start="111:23" pos:end="111:32">SHOW_UBITS</name><argument_list pos:start="111:33" pos:end="111:47">(<argument pos:start="111:34" pos:end="111:35"><expr pos:start="111:34" pos:end="111:35"><name pos:start="111:34" pos:end="111:35">re</name></expr></argument>, <argument pos:start="111:38" pos:end="111:43"><expr pos:start="111:38" pos:end="111:43"><operator pos:start="111:38" pos:end="111:38">&amp;</operator><name pos:start="111:39" pos:end="111:43"><name pos:start="111:39" pos:end="111:39">s</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:43">gb</name></name></expr></argument>, <argument pos:start="111:46" pos:end="111:46"><expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">6</literal></expr></argument>)</argument_list></call> <operator pos:start="111:49" pos:end="111:49">+</operator> <literal type="number" pos:start="111:51" pos:end="111:51">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:46"><expr pos:start="113:17" pos:end="113:45"><call pos:start="113:17" pos:end="113:45"><name pos:start="113:17" pos:end="113:30">LAST_SKIP_BITS</name><argument_list pos:start="113:31" pos:end="113:45">(<argument pos:start="113:32" pos:end="113:33"><expr pos:start="113:32" pos:end="113:33"><name pos:start="113:32" pos:end="113:33">re</name></expr></argument>, <argument pos:start="113:36" pos:end="113:41"><expr pos:start="113:36" pos:end="113:41"><operator pos:start="113:36" pos:end="113:36">&amp;</operator><name pos:start="113:37" pos:end="113:41"><name pos:start="113:37" pos:end="113:37">s</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:41">gb</name></name></expr></argument>, <argument pos:start="113:44" pos:end="113:44"><expr pos:start="113:44" pos:end="113:44"><literal type="number" pos:start="113:44" pos:end="113:44">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:41"><expr pos:start="115:17" pos:end="115:40"><call pos:start="115:17" pos:end="115:40"><name pos:start="115:17" pos:end="115:28">UPDATE_CACHE</name><argument_list pos:start="115:29" pos:end="115:40">(<argument pos:start="115:30" pos:end="115:31"><expr pos:start="115:30" pos:end="115:31"><name pos:start="115:30" pos:end="115:31">re</name></expr></argument>, <argument pos:start="115:34" pos:end="115:39"><expr pos:start="115:34" pos:end="115:39"><operator pos:start="115:34" pos:end="115:34">&amp;</operator><name pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:35">s</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:51"><expr pos:start="117:17" pos:end="117:50"><name pos:start="117:17" pos:end="117:21">level</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <call pos:start="117:25" pos:end="117:50"><name pos:start="117:25" pos:end="117:34">SHOW_SBITS</name><argument_list pos:start="117:35" pos:end="117:50">(<argument pos:start="117:36" pos:end="117:37"><expr pos:start="117:36" pos:end="117:37"><name pos:start="117:36" pos:end="117:37">re</name></expr></argument>, <argument pos:start="117:40" pos:end="117:45"><expr pos:start="117:40" pos:end="117:45"><operator pos:start="117:40" pos:end="117:40">&amp;</operator><name pos:start="117:41" pos:end="117:45"><name pos:start="117:41" pos:end="117:41">s</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:45">gb</name></name></expr></argument>, <argument pos:start="117:48" pos:end="117:49"><expr pos:start="117:48" pos:end="117:49"><literal type="number" pos:start="117:48" pos:end="117:49">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:42"><expr pos:start="119:17" pos:end="119:41"><call pos:start="119:17" pos:end="119:41"><name pos:start="119:17" pos:end="119:25">SKIP_BITS</name><argument_list pos:start="119:26" pos:end="119:41">(<argument pos:start="119:27" pos:end="119:28"><expr pos:start="119:27" pos:end="119:28"><name pos:start="119:27" pos:end="119:28">re</name></expr></argument>, <argument pos:start="119:31" pos:end="119:36"><expr pos:start="119:31" pos:end="119:36"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:36"><name pos:start="119:32" pos:end="119:32">s</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:36">gb</name></name></expr></argument>, <argument pos:start="119:39" pos:end="119:40"><expr pos:start="119:39" pos:end="119:40"><literal type="number" pos:start="119:39" pos:end="119:40">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:25"><expr pos:start="121:17" pos:end="121:24"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:20">+=</operator> <name pos:start="121:22" pos:end="121:24">run</name></expr>;</expr_stmt>

                <if_stmt pos:start="123:17" pos:end="125:26"><if pos:start="123:17" pos:end="125:26">if <condition pos:start="123:20" pos:end="123:34">(<expr pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:23">&gt;</operator> <name pos:start="123:25" pos:end="123:33">MAX_INDEX</name></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:26"><block_content pos:start="125:21" pos:end="125:26">

                    <break pos:start="125:21" pos:end="125:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:33"><expr pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:17">j</name> <operator pos:start="127:19" pos:end="127:19">=</operator> <name pos:start="127:21" pos:end="127:32"><name pos:start="127:21" pos:end="127:29">scantable</name><index pos:start="127:30" pos:end="127:32">[<expr pos:start="127:31" pos:end="127:31"><name pos:start="127:31" pos:end="127:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="129:17" pos:end="139:17"><if pos:start="129:17" pos:end="135:17">if <condition pos:start="129:20" pos:end="129:30">(<expr pos:start="129:21" pos:end="129:29"><name pos:start="129:21" pos:end="129:25">level</name> <operator pos:start="129:27" pos:end="129:27">&lt;</operator> <literal type="number" pos:start="129:29" pos:end="129:29">0</literal></expr>)</condition> <block pos:start="129:32" pos:end="135:17">{<block_content pos:start="131:21" pos:end="133:35">

                    <expr_stmt pos:start="131:21" pos:end="131:69"><expr pos:start="131:21" pos:end="131:68"><name pos:start="131:21" pos:end="131:25">level</name> <operator pos:start="131:27" pos:end="131:27">=</operator> <operator pos:start="131:29" pos:end="131:29">(</operator><operator pos:start="131:30" pos:end="131:30">-</operator><name pos:start="131:31" pos:end="131:35">level</name> <operator pos:start="131:37" pos:end="131:37">*</operator> <name pos:start="131:39" pos:end="131:44">qscale</name> <operator pos:start="131:46" pos:end="131:46">*</operator> <name pos:start="131:48" pos:end="131:62"><name pos:start="131:48" pos:end="131:59">quant_matrix</name><index pos:start="131:60" pos:end="131:62">[<expr pos:start="131:61" pos:end="131:61"><name pos:start="131:61" pos:end="131:61">j</name></expr>]</index></name><operator pos:start="131:63" pos:end="131:63">)</operator> <operator pos:start="131:65" pos:end="131:66">&gt;&gt;</operator> <literal type="number" pos:start="131:68" pos:end="131:68">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="133:21" pos:end="133:35"><expr pos:start="133:21" pos:end="133:34"><name pos:start="133:21" pos:end="133:25">level</name> <operator pos:start="133:27" pos:end="133:27">=</operator> <operator pos:start="133:29" pos:end="133:29">-</operator><name pos:start="133:30" pos:end="133:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="135:19" pos:end="139:17">else <block pos:start="135:24" pos:end="139:17">{<block_content pos:start="137:21" pos:end="137:68">

                    <expr_stmt pos:start="137:21" pos:end="137:68"><expr pos:start="137:21" pos:end="137:67"><name pos:start="137:21" pos:end="137:25">level</name> <operator pos:start="137:27" pos:end="137:27">=</operator> <operator pos:start="137:29" pos:end="137:29">(</operator><name pos:start="137:30" pos:end="137:34">level</name> <operator pos:start="137:36" pos:end="137:36">*</operator> <name pos:start="137:38" pos:end="137:43">qscale</name> <operator pos:start="137:45" pos:end="137:45">*</operator> <name pos:start="137:47" pos:end="137:61"><name pos:start="137:47" pos:end="137:58">quant_matrix</name><index pos:start="137:59" pos:end="137:61">[<expr pos:start="137:60" pos:end="137:60"><name pos:start="137:60" pos:end="137:60">j</name></expr>]</index></name><operator pos:start="137:62" pos:end="137:62">)</operator> <operator pos:start="137:64" pos:end="137:65">&gt;&gt;</operator> <literal type="number" pos:start="137:67" pos:end="137:67">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:30"><expr pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:20">mismatch</name> <operator pos:start="145:22" pos:end="145:23">^=</operator> <name pos:start="145:25" pos:end="145:29">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:17">block</name><index pos:start="147:18" pos:end="147:20">[<expr pos:start="147:19" pos:end="147:19"><name pos:start="147:19" pos:end="147:19">j</name></expr>]</index></name>  <operator pos:start="147:23" pos:end="147:23">=</operator> <name pos:start="147:25" pos:end="147:29">level</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><call pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:20">CLOSE_READER</name><argument_list pos:start="151:21" pos:end="151:32">(<argument pos:start="151:22" pos:end="151:23"><expr pos:start="151:22" pos:end="151:23"><name pos:start="151:22" pos:end="151:23">re</name></expr></argument>, <argument pos:start="151:26" pos:end="151:31"><expr pos:start="151:26" pos:end="151:31"><operator pos:start="151:26" pos:end="151:26">&amp;</operator><name pos:start="151:27" pos:end="151:31"><name pos:start="151:27" pos:end="151:27">s</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="155:5" pos:end="155:30"><expr pos:start="155:5" pos:end="155:29"><name pos:start="155:5" pos:end="155:13"><name pos:start="155:5" pos:end="155:9">block</name><index pos:start="155:10" pos:end="155:13">[<expr pos:start="155:11" pos:end="155:12"><literal type="number" pos:start="155:11" pos:end="155:12">63</literal></expr>]</index></name> <operator pos:start="155:15" pos:end="155:16">^=</operator> <name pos:start="155:18" pos:end="155:25">mismatch</name> <operator pos:start="155:27" pos:end="155:27">&amp;</operator> <literal type="number" pos:start="155:29" pos:end="155:29">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:32"><expr pos:start="159:5" pos:end="159:31"><call pos:start="159:5" pos:end="159:31"><name pos:start="159:5" pos:end="159:25">check_scantable_index</name><argument_list pos:start="159:26" pos:end="159:31">(<argument pos:start="159:27" pos:end="159:27"><expr pos:start="159:27" pos:end="159:27"><name pos:start="159:27" pos:end="159:27">s</name></expr></argument>, <argument pos:start="159:30" pos:end="159:30"><expr pos:start="159:30" pos:end="159:30"><name pos:start="159:30" pos:end="159:30">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:31"><expr pos:start="163:5" pos:end="163:30"><name pos:start="163:5" pos:end="163:26"><name pos:start="163:5" pos:end="163:5">s</name><operator pos:start="163:6" pos:end="163:7">-&gt;</operator><name pos:start="163:8" pos:end="163:23">block_last_index</name><index pos:start="163:24" pos:end="163:26">[<expr pos:start="163:25" pos:end="163:25"><name pos:start="163:25" pos:end="163:25">n</name></expr>]</index></name> <operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:30">i</name></expr>;</expr_stmt>

    <return pos:start="165:5" pos:end="165:13">return <expr pos:start="165:12" pos:end="165:12"><literal type="number" pos:start="165:12" pos:end="165:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
