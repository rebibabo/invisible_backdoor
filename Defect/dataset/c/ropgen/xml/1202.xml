<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1202.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">dbdma_writel</name> <parameter_list pos:start="1:26" pos:end="3:66">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:49"><decl pos:start="3:27" pos:end="3:49"><type pos:start="3:27" pos:end="3:49"><name pos:start="3:27" pos:end="3:44">target_phys_addr_t</name></type> <name pos:start="3:46" pos:end="3:49">addr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:65"><decl pos:start="3:52" pos:end="3:65"><type pos:start="3:52" pos:end="3:65"><name pos:start="3:52" pos:end="3:59">uint32_t</name></type> <name pos:start="3:61" pos:end="3:65">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="93:5">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">channel</name> <init pos:start="7:17" pos:end="7:45">= <expr pos:start="7:19" pos:end="7:45"><name pos:start="7:19" pos:end="7:22">addr</name> <operator pos:start="7:24" pos:end="7:25">&gt;&gt;</operator> <name pos:start="7:27" pos:end="7:45">DBDMA_CHANNEL_SHIFT</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">DBDMA_channel</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">ch</name> <init pos:start="9:23" pos:end="9:57">= <expr pos:start="9:25" pos:end="9:57"><operator pos:start="9:25" pos:end="9:25">(</operator><name pos:start="9:26" pos:end="9:38">DBDMA_channel</name> <operator pos:start="9:40" pos:end="9:40">*</operator><operator pos:start="9:41" pos:end="9:41">)</operator><name pos:start="9:42" pos:end="9:47">opaque</name> <operator pos:start="9:49" pos:end="9:49">+</operator> <name pos:start="9:51" pos:end="9:57">channel</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:60"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">reg</name> <init pos:start="11:13" pos:end="11:60">= <expr pos:start="11:15" pos:end="11:60"><operator pos:start="11:15" pos:end="11:15">(</operator><name pos:start="11:16" pos:end="11:19">addr</name> <operator pos:start="11:21" pos:end="11:21">-</operator> <operator pos:start="11:23" pos:end="11:23">(</operator><name pos:start="11:24" pos:end="11:30">channel</name> <operator pos:start="11:32" pos:end="11:33">&lt;&lt;</operator> <name pos:start="11:35" pos:end="11:53">DBDMA_CHANNEL_SHIFT</name><operator pos:start="11:54" pos:end="11:54">)</operator><operator pos:start="11:55" pos:end="11:55">)</operator> <operator pos:start="11:57" pos:end="11:58">&gt;&gt;</operator> <literal type="number" pos:start="11:60" pos:end="11:60">2</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:74"><expr pos:start="15:5" pos:end="15:73"><call pos:start="15:5" pos:end="15:73"><name pos:start="15:5" pos:end="15:17">DBDMA_DPRINTF</name><argument_list pos:start="15:18" pos:end="15:73">(<argument pos:start="15:19" pos:end="15:59"><expr pos:start="15:19" pos:end="15:59"><literal type="string" pos:start="15:19" pos:end="15:29">"writel 0x"</literal> <name pos:start="15:31" pos:end="15:44">TARGET_FMT_plx</name> <literal type="string" pos:start="15:46" pos:end="15:59">" &lt;= 0x%08x\n"</literal></expr></argument>, <argument pos:start="15:62" pos:end="15:65"><expr pos:start="15:62" pos:end="15:65"><name pos:start="15:62" pos:end="15:65">addr</name></expr></argument>, <argument pos:start="15:68" pos:end="15:72"><expr pos:start="15:68" pos:end="15:72"><name pos:start="15:68" pos:end="15:72">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="19:62"><expr pos:start="17:5" pos:end="19:61"><call pos:start="17:5" pos:end="19:61"><name pos:start="17:5" pos:end="17:17">DBDMA_DPRINTF</name><argument_list pos:start="17:18" pos:end="19:61">(<argument pos:start="17:19" pos:end="17:43"><expr pos:start="17:19" pos:end="17:43"><literal type="string" pos:start="17:19" pos:end="17:43">"channel 0x%x reg 0x%x\n"</literal></expr></argument>,

                  <argument pos:start="19:19" pos:end="19:55"><expr pos:start="19:19" pos:end="19:55"><operator pos:start="19:19" pos:end="19:19">(</operator><name pos:start="19:20" pos:end="19:27">uint32_t</name><operator pos:start="19:28" pos:end="19:28">)</operator><name pos:start="19:29" pos:end="19:32">addr</name> <operator pos:start="19:34" pos:end="19:35">&gt;&gt;</operator> <name pos:start="19:37" pos:end="19:55">DBDMA_CHANNEL_SHIFT</name></expr></argument>, <argument pos:start="19:58" pos:end="19:60"><expr pos:start="19:58" pos:end="19:60"><name pos:start="19:58" pos:end="19:60">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:63">/* cmdptr cannot be modified if channel is RUN or ACTIVE */</comment>



    <if_stmt pos:start="27:5" pos:end="31:15"><if pos:start="27:5" pos:end="31:15">if <condition pos:start="27:8" pos:end="29:61">(<expr pos:start="27:9" pos:end="29:60"><name pos:start="27:9" pos:end="27:11">reg</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <name pos:start="27:16" pos:end="27:30">DBDMA_CMDPTR_LO</name> <operator pos:start="27:32" pos:end="27:33">&amp;&amp;</operator>

        <operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:11">ch</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">regs</name><index pos:start="29:18" pos:end="29:31">[<expr pos:start="29:19" pos:end="29:30"><name pos:start="29:19" pos:end="29:30">DBDMA_STATUS</name></expr>]</index></name> <operator pos:start="29:33" pos:end="29:33">&amp;</operator> <call pos:start="29:35" pos:end="29:59"><name pos:start="29:35" pos:end="29:45">cpu_to_be32</name><argument_list pos:start="29:46" pos:end="29:59">(<argument pos:start="29:47" pos:end="29:58"><expr pos:start="29:47" pos:end="29:58"><name pos:start="29:47" pos:end="29:49">RUN</name> <operator pos:start="29:51" pos:end="29:51">|</operator> <name pos:start="29:53" pos:end="29:58">ACTIVE</name></expr></argument>)</argument_list></call><operator pos:start="29:60" pos:end="29:60">)</operator></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

	<return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:6">ch</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:12">regs</name><index pos:start="35:13" pos:end="35:17">[<expr pos:start="35:14" pos:end="35:16"><name pos:start="35:14" pos:end="35:16">reg</name></expr>]</index></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:25">value</name></expr>;</expr_stmt>



    <switch pos:start="39:5" pos:end="93:5">switch<condition pos:start="39:11" pos:end="39:15">(<expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">reg</name></expr>)</condition> <block pos:start="39:17" pos:end="93:5">{<block_content pos:start="41:5" pos:end="91:14">

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">DBDMA_CONTROL</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><call pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:27">dbdma_control_write</name><argument_list pos:start="43:28" pos:end="43:31">(<argument pos:start="43:29" pos:end="43:30"><expr pos:start="43:29" pos:end="43:30"><name pos:start="43:29" pos:end="43:30">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:25">case <expr pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:24">DBDMA_CMDPTR_LO</name></expr>:</case>

        <comment type="block" pos:start="49:9" pos:end="49:29">/* 16-byte aligned */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:55"><expr pos:start="51:9" pos:end="51:54"><name pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:10">ch</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:16">regs</name><index pos:start="51:17" pos:end="51:33">[<expr pos:start="51:18" pos:end="51:32"><name pos:start="51:18" pos:end="51:32">DBDMA_CMDPTR_LO</name></expr>]</index></name> <operator pos:start="51:35" pos:end="51:36">&amp;=</operator> <call pos:start="51:38" pos:end="51:54"><name pos:start="51:38" pos:end="51:48">cpu_to_be32</name><argument_list pos:start="51:49" pos:end="51:54">(<argument pos:start="51:50" pos:end="51:53"><expr pos:start="51:50" pos:end="51:53"><operator pos:start="51:50" pos:end="51:50">~</operator><literal type="number" pos:start="51:51" pos:end="51:53">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:25">dbdma_cmdptr_load</name><argument_list pos:start="53:26" pos:end="53:29">(<argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><name pos:start="53:27" pos:end="53:28">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:22">case <expr pos:start="57:10" pos:end="57:21"><name pos:start="57:10" pos:end="57:21">DBDMA_STATUS</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:24">case <expr pos:start="59:10" pos:end="59:23"><name pos:start="59:10" pos:end="59:23">DBDMA_INTR_SEL</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:26">case <expr pos:start="61:10" pos:end="61:25"><name pos:start="61:10" pos:end="61:25">DBDMA_BRANCH_SEL</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:24">case <expr pos:start="63:10" pos:end="63:23"><name pos:start="63:10" pos:end="63:23">DBDMA_WAIT_SEL</name></expr>:</case>

        <comment type="block" pos:start="65:9" pos:end="65:27">/* nothing to do */</comment>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:25">case <expr pos:start="69:10" pos:end="69:24"><name pos:start="69:10" pos:end="69:24">DBDMA_XFER_MODE</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:25">case <expr pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:24">DBDMA_CMDPTR_HI</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:27">case <expr pos:start="73:10" pos:end="73:26"><name pos:start="73:10" pos:end="73:26">DBDMA_DATA2PTR_HI</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:27">case <expr pos:start="75:10" pos:end="75:26"><name pos:start="75:10" pos:end="75:26">DBDMA_DATA2PTR_LO</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:26">case <expr pos:start="77:10" pos:end="77:25"><name pos:start="77:10" pos:end="77:25">DBDMA_ADDRESS_HI</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:30">case <expr pos:start="79:10" pos:end="79:29"><name pos:start="79:10" pos:end="79:29">DBDMA_BRANCH_ADDR_HI</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:20">case <expr pos:start="81:10" pos:end="81:19"><name pos:start="81:10" pos:end="81:19">DBDMA_RES1</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:20">case <expr pos:start="83:10" pos:end="83:19"><name pos:start="83:10" pos:end="83:19">DBDMA_RES2</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:20">case <expr pos:start="85:10" pos:end="85:19"><name pos:start="85:10" pos:end="85:19">DBDMA_RES3</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:20">case <expr pos:start="87:10" pos:end="87:19"><name pos:start="87:10" pos:end="87:19">DBDMA_RES4</name></expr>:</case>

        <comment type="block" pos:start="89:9" pos:end="89:20">/* unused */</comment>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
