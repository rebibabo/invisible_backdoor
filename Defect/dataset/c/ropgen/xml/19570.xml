<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19570.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:20"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">BlockDriver</name> <modifier pos:start="1:20" pos:end="1:20">*</modifier></type><name pos:start="1:21" pos:end="1:33">find_protocol</name><parameter_list pos:start="1:34" pos:end="1:55">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:46"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:54">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:16">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlockDriver</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">drv1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:22"><name pos:start="7:10" pos:end="7:17">protocol</name><index pos:start="7:18" pos:end="7:22">[<expr pos:start="7:19" pos:end="7:21"><literal type="number" pos:start="7:19" pos:end="7:21">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="16:0"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">p</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="15:1" pos:end="15:13">#<cpp:directive pos:start="15:2" pos:end="15:6">ifdef</cpp:directive> <name pos:start="15:8" pos:end="15:13">_WIN32</name></cpp:ifdef>

    <if_stmt pos:start="17:5" pos:end="24:0"><if pos:start="17:5" pos:end="24:0">if <condition pos:start="17:8" pos:end="19:42">(<expr pos:start="17:9" pos:end="19:41"><call pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:24">is_windows_drive</name><argument_list pos:start="17:25" pos:end="17:34">(<argument pos:start="17:26" pos:end="17:33"><expr pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:33">filename</name></expr></argument>)</argument_list></call> <operator pos:start="17:36" pos:end="17:37">||</operator>

        <call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:31">is_windows_drive_prefix</name><argument_list pos:start="19:32" pos:end="19:41">(<argument pos:start="19:33" pos:end="19:40"><expr pos:start="19:33" pos:end="19:40"><name pos:start="19:33" pos:end="19:40">filename</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="24:0"><block_content pos:start="21:9" pos:end="24:0">

        <return pos:start="21:9" pos:end="24:0">return <expr pos:start="21:16" pos:end="21:38"><call pos:start="21:16" pos:end="21:38"><name pos:start="21:16" pos:end="21:31">bdrv_find_format</name><argument_list pos:start="21:32" pos:end="21:38">(<argument pos:start="21:33" pos:end="21:37"><expr pos:start="21:33" pos:end="21:37"><literal type="string" pos:start="21:33" pos:end="21:37">"raw"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="25:5" pos:end="25:30"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:5">p</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <call pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:14">strchr</name><argument_list pos:start="25:15" pos:end="25:29">(<argument pos:start="25:16" pos:end="25:23"><expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:23">filename</name></expr></argument>, <argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><literal type="char" pos:start="25:26" pos:end="25:28">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:39"><if pos:start="27:5" pos:end="29:39">if <condition pos:start="27:8" pos:end="27:11">(<expr pos:start="27:9" pos:end="27:10"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:10">p</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:39"><block_content pos:start="29:9" pos:end="29:39">

        <return pos:start="29:9" pos:end="29:39">return <expr pos:start="29:16" pos:end="29:38"><call pos:start="29:16" pos:end="29:38"><name pos:start="29:16" pos:end="29:31">bdrv_find_format</name><argument_list pos:start="29:32" pos:end="29:38">(<argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><literal type="string" pos:start="29:33" pos:end="29:37">"raw"</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:7">len</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <name pos:start="31:11" pos:end="31:11">p</name> <operator pos:start="31:13" pos:end="31:13">-</operator> <name pos:start="31:15" pos:end="31:22">filename</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:35"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:35">(<expr pos:start="33:9" pos:end="33:34"><name pos:start="33:9" pos:end="33:11">len</name> <operator pos:start="33:13" pos:end="33:13">&gt;</operator> <sizeof pos:start="33:15" pos:end="33:30">sizeof<argument_list pos:start="33:21" pos:end="33:30">(<argument pos:start="33:22" pos:end="33:29"><expr pos:start="33:22" pos:end="33:29"><name pos:start="33:22" pos:end="33:29">protocol</name></expr></argument>)</argument_list></sizeof> <operator pos:start="33:32" pos:end="33:32">-</operator> <literal type="number" pos:start="33:34" pos:end="33:34">1</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <sizeof pos:start="35:15" pos:end="35:30">sizeof<argument_list pos:start="35:21" pos:end="35:30">(<argument pos:start="35:22" pos:end="35:29"><expr pos:start="35:22" pos:end="35:29"><name pos:start="35:22" pos:end="35:29">protocol</name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:32" pos:end="35:32">-</operator> <literal type="number" pos:start="35:34" pos:end="35:34">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><call pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:10">memcpy</name><argument_list pos:start="37:11" pos:end="37:35">(<argument pos:start="37:12" pos:end="37:19"><expr pos:start="37:12" pos:end="37:19"><name pos:start="37:12" pos:end="37:19">protocol</name></expr></argument>, <argument pos:start="37:22" pos:end="37:29"><expr pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:29">filename</name></expr></argument>, <argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:12">protocol</name><index pos:start="39:13" pos:end="39:17">[<expr pos:start="39:14" pos:end="39:16"><name pos:start="39:14" pos:end="39:16">len</name></expr>]</index></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <literal type="char" pos:start="39:21" pos:end="39:24">'\0'</literal></expr>;</expr_stmt>

    <macro pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:17">QLIST_FOREACH</name><argument_list pos:start="41:18" pos:end="41:44">(<argument pos:start="41:19" pos:end="41:22">drv1</argument>, <argument pos:start="41:25" pos:end="41:37">&amp;bdrv_drivers</argument>, <argument pos:start="41:40" pos:end="41:43">list</argument>)</argument_list></macro> <block pos:start="41:46" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:9">

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="45:51">(<expr pos:start="43:13" pos:end="45:50"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:16">drv1</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:31">protocol_name</name></name> <operator pos:start="43:33" pos:end="43:34">&amp;&amp;</operator>

            <operator pos:start="45:13" pos:end="45:13">!</operator><call pos:start="45:14" pos:end="45:50"><name pos:start="45:14" pos:end="45:19">strcmp</name><argument_list pos:start="45:20" pos:end="45:50">(<argument pos:start="45:21" pos:end="45:39"><expr pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:39"><name pos:start="45:21" pos:end="45:24">drv1</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:39">protocol_name</name></name></expr></argument>, <argument pos:start="45:42" pos:end="45:49"><expr pos:start="45:42" pos:end="45:49"><name pos:start="45:42" pos:end="45:49">protocol</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:53" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:24">

            <return pos:start="47:13" pos:end="47:24">return <expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">drv1</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <return pos:start="53:5" pos:end="53:16">return <expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
