<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14607.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">opt_map</name><parameter_list pos:start="1:19" pos:end="1:71">(<parameter pos:start="1:20" pos:end="1:36"><decl pos:start="1:20" pos:end="1:36"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:33">OptionsContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">o</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:53"><decl pos:start="1:39" pos:end="1:53"><type pos:start="1:39" pos:end="1:53"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">opt</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><specifier pos:start="1:56" pos:end="1:60">const</specifier> <name pos:start="1:62" pos:end="1:65">char</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">StreamMap</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">m</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:19">negative</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>, <decl pos:start="7:26" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:33">file_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">sync_file_idx</name> <init pos:start="9:23" pos:end="9:26">= <expr pos:start="9:25" pos:end="9:26"><operator pos:start="9:25" pos:end="9:25">-</operator><literal type="number" pos:start="9:26" pos:end="9:26">1</literal></expr></init></decl>, <decl pos:start="9:29" pos:end="9:43"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:43">sync_stream_idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:11">p</name></decl>, <decl pos:start="11:14" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">map</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:20">(<expr pos:start="17:9" pos:end="17:19"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:12">arg</name> <operator pos:start="17:14" pos:end="17:15">==</operator> <literal type="char" pos:start="17:17" pos:end="17:19">'-'</literal></expr>)</condition> <block pos:start="17:22" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:14">

        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">negative</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:11">arg</name><operator pos:start="21:12" pos:end="21:13">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:7">map</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:24"><name pos:start="25:11" pos:end="25:19">av_strdup</name><argument_list pos:start="25:20" pos:end="25:24">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:66">/* parse sync stream first, just pick first matching stream */</comment>

    <if_stmt pos:start="31:5" pos:end="71:5"><if pos:start="31:5" pos:end="71:5">if <condition pos:start="31:8" pos:end="31:32">(<expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:12">sync</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:31"><name pos:start="31:16" pos:end="31:21">strchr</name><argument_list pos:start="31:22" pos:end="31:31">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">map</name></expr></argument>, <argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><literal type="char" pos:start="31:28" pos:end="31:30">','</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:34" pos:end="71:5">{<block_content pos:start="33:9" pos:end="69:9">

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:13">sync</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:21">sync_file_idx</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:50"><name pos:start="35:25" pos:end="35:30">strtol</name><argument_list pos:start="35:31" pos:end="35:50">(<argument pos:start="35:32" pos:end="35:39"><expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:35">sync</name> <operator pos:start="35:37" pos:end="35:37">+</operator> <literal type="number" pos:start="35:39" pos:end="35:39">1</literal></expr></argument>, <argument pos:start="35:42" pos:end="35:46"><expr pos:start="35:42" pos:end="35:46"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:46">sync</name></expr></argument>, <argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:65">(<expr pos:start="37:13" pos:end="37:64"><name pos:start="37:13" pos:end="37:25">sync_file_idx</name> <operator pos:start="37:27" pos:end="37:28">&gt;=</operator> <name pos:start="37:30" pos:end="37:43">nb_input_files</name> <operator pos:start="37:45" pos:end="37:46">||</operator> <name pos:start="37:48" pos:end="37:60">sync_file_idx</name> <operator pos:start="37:62" pos:end="37:62">&lt;</operator> <literal type="number" pos:start="37:64" pos:end="37:64">0</literal></expr>)</condition> <block pos:start="37:67" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:28">

            <expr_stmt pos:start="39:13" pos:end="39:88"><expr pos:start="39:13" pos:end="39:87"><call pos:start="39:13" pos:end="39:87"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:87">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">NULL</name></expr></argument>, <argument pos:start="39:26" pos:end="39:37"><expr pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="39:40" pos:end="39:71"><expr pos:start="39:40" pos:end="39:71"><literal type="string" pos:start="39:40" pos:end="39:71">"Invalid sync file index: %d.\n"</literal></expr></argument>, <argument pos:start="39:74" pos:end="39:86"><expr pos:start="39:74" pos:end="39:86"><name pos:start="39:74" pos:end="39:86">sync_file_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:28"><expr pos:start="41:13" pos:end="41:27"><call pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:24">exit_program</name><argument_list pos:start="41:25" pos:end="41:27">(<argument pos:start="41:26" pos:end="41:26"><expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="47:19"><if pos:start="45:9" pos:end="47:19">if <condition pos:start="45:12" pos:end="45:18">(<expr pos:start="45:13" pos:end="45:17"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:17">sync</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:19"><block_content pos:start="47:13" pos:end="47:19">

            <expr_stmt pos:start="47:13" pos:end="47:19"><expr pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:16">sync</name><operator pos:start="47:17" pos:end="47:18">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="49:9" pos:end="59:13">for <control pos:start="49:13" pos:end="49:67">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:62"><expr pos:start="49:21" pos:end="49:61"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:50"><name pos:start="49:25" pos:end="49:35">input_files</name><index pos:start="49:36" pos:end="49:50">[<expr pos:start="49:37" pos:end="49:49"><name pos:start="49:37" pos:end="49:49">sync_file_idx</name></expr>]</index></name><operator pos:start="49:51" pos:end="49:51">.</operator><name pos:start="49:52" pos:end="49:61">nb_streams</name></expr>;</condition> <incr pos:start="49:64" pos:end="49:66"><expr pos:start="49:64" pos:end="49:66"><name pos:start="49:64" pos:end="49:64">i</name><operator pos:start="49:65" pos:end="49:66">++</operator></expr></incr>)</control><block type="pseudo" pos:start="51:13" pos:end="59:13"><block_content pos:start="51:13" pos:end="59:13">

            <if_stmt pos:start="51:13" pos:end="59:13"><if pos:start="51:13" pos:end="59:13">if <condition pos:start="51:16" pos:end="53:94">(<expr pos:start="51:17" pos:end="53:93"><call pos:start="51:17" pos:end="53:88"><name pos:start="51:17" pos:end="51:38">check_stream_specifier</name><argument_list pos:start="51:39" pos:end="53:88">(<argument pos:start="51:40" pos:end="51:69"><expr pos:start="51:40" pos:end="51:69"><name pos:start="51:40" pos:end="51:65"><name pos:start="51:40" pos:end="51:50">input_files</name><index pos:start="51:51" pos:end="51:65">[<expr pos:start="51:52" pos:end="51:64"><name pos:start="51:52" pos:end="51:64">sync_file_idx</name></expr>]</index></name><operator pos:start="51:66" pos:end="51:66">.</operator><name pos:start="51:67" pos:end="51:69">ctx</name></expr></argument>,

                                       <argument pos:start="53:40" pos:end="53:81"><expr pos:start="53:40" pos:end="53:81"><name pos:start="53:40" pos:end="53:65"><name pos:start="53:40" pos:end="53:50">input_files</name><index pos:start="53:51" pos:end="53:65">[<expr pos:start="53:52" pos:end="53:64"><name pos:start="53:52" pos:end="53:64">sync_file_idx</name></expr>]</index></name><operator pos:start="53:66" pos:end="53:66">.</operator><name pos:start="53:67" pos:end="53:81"><name pos:start="53:67" pos:end="53:69">ctx</name><operator pos:start="53:70" pos:end="53:71">-&gt;</operator><name pos:start="53:72" pos:end="53:78">streams</name><index pos:start="53:79" pos:end="53:81">[<expr pos:start="53:80" pos:end="53:80"><name pos:start="53:80" pos:end="53:80">i</name></expr>]</index></name></expr></argument>, <argument pos:start="53:84" pos:end="53:87"><expr pos:start="53:84" pos:end="53:87"><name pos:start="53:84" pos:end="53:87">sync</name></expr></argument>)</argument_list></call> <operator pos:start="53:90" pos:end="53:91">==</operator> <literal type="number" pos:start="53:93" pos:end="53:93">1</literal></expr>)</condition> <block pos:start="53:96" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:22">

                <expr_stmt pos:start="55:17" pos:end="55:36"><expr pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:31">sync_stream_idx</name> <operator pos:start="55:33" pos:end="55:33">=</operator> <name pos:start="55:35" pos:end="55:35">i</name></expr>;</expr_stmt>

                <break pos:start="57:17" pos:end="57:22">break;</break>

            </block_content>}</block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:55">(<expr pos:start="61:13" pos:end="61:54"><name pos:start="61:13" pos:end="61:13">i</name> <operator pos:start="61:15" pos:end="61:16">==</operator> <name pos:start="61:18" pos:end="61:43"><name pos:start="61:18" pos:end="61:28">input_files</name><index pos:start="61:29" pos:end="61:43">[<expr pos:start="61:30" pos:end="61:42"><name pos:start="61:30" pos:end="61:42">sync_file_idx</name></expr>]</index></name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:54">nb_streams</name></expr>)</condition> <block pos:start="61:57" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:28">

            <expr_stmt pos:start="63:13" pos:end="65:68"><expr pos:start="63:13" pos:end="65:67"><call pos:start="63:13" pos:end="65:67"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="65:67">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">NULL</name></expr></argument>, <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="63:40" pos:end="65:61"><expr pos:start="63:40" pos:end="65:61"><literal type="string" pos:start="63:40" pos:end="63:86">"Sync stream specification in map %s does not "</literal>

                                       <literal type="string" pos:start="65:40" pos:end="65:61">"match any streams.\n"</literal></expr></argument>, <argument pos:start="65:64" pos:end="65:66"><expr pos:start="65:64" pos:end="65:66"><name pos:start="65:64" pos:end="65:66">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:28"><expr pos:start="67:13" pos:end="67:27"><call pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:24">exit_program</name><argument_list pos:start="67:25" pos:end="67:27">(<argument pos:start="67:26" pos:end="67:26"><expr pos:start="67:26" pos:end="67:26"><literal type="number" pos:start="67:26" pos:end="67:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:12">file_idx</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <call pos:start="77:16" pos:end="77:33"><name pos:start="77:16" pos:end="77:21">strtol</name><argument_list pos:start="77:22" pos:end="77:33">(<argument pos:start="77:23" pos:end="77:25"><expr pos:start="77:23" pos:end="77:25"><name pos:start="77:23" pos:end="77:25">map</name></expr></argument>, <argument pos:start="77:28" pos:end="77:29"><expr pos:start="77:28" pos:end="77:29"><operator pos:start="77:28" pos:end="77:28">&amp;</operator><name pos:start="77:29" pos:end="77:29">p</name></expr></argument>, <argument pos:start="77:32" pos:end="77:32"><expr pos:start="77:32" pos:end="77:32"><literal type="number" pos:start="77:32" pos:end="77:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:51">(<expr pos:start="79:9" pos:end="79:50"><name pos:start="79:9" pos:end="79:16">file_idx</name> <operator pos:start="79:18" pos:end="79:19">&gt;=</operator> <name pos:start="79:21" pos:end="79:34">nb_input_files</name> <operator pos:start="79:36" pos:end="79:37">||</operator> <name pos:start="79:39" pos:end="79:46">file_idx</name> <operator pos:start="79:48" pos:end="79:48">&lt;</operator> <literal type="number" pos:start="79:50" pos:end="79:50">0</literal></expr>)</condition> <block pos:start="79:53" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:24">

        <expr_stmt pos:start="81:9" pos:end="81:80"><expr pos:start="81:9" pos:end="81:79"><call pos:start="81:9" pos:end="81:79"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:79">(<argument pos:start="81:16" pos:end="81:19"><expr pos:start="81:16" pos:end="81:19"><name pos:start="81:16" pos:end="81:19">NULL</name></expr></argument>, <argument pos:start="81:22" pos:end="81:33"><expr pos:start="81:22" pos:end="81:33"><name pos:start="81:22" pos:end="81:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="81:36" pos:end="81:68"><expr pos:start="81:36" pos:end="81:68"><literal type="string" pos:start="81:36" pos:end="81:68">"Invalid input file index: %d.\n"</literal></expr></argument>, <argument pos:start="81:71" pos:end="81:78"><expr pos:start="81:71" pos:end="81:78"><name pos:start="81:71" pos:end="81:78">file_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:24"><expr pos:start="83:9" pos:end="83:23"><call pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:20">exit_program</name><argument_list pos:start="83:21" pos:end="83:23">(<argument pos:start="83:22" pos:end="83:22"><expr pos:start="83:22" pos:end="83:22"><literal type="number" pos:start="83:22" pos:end="83:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="145:9"><if pos:start="87:5" pos:end="105:9">if <condition pos:start="87:8" pos:end="87:17">(<expr pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:16">negative</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="105:9"><block_content pos:start="91:9" pos:end="105:9">

        <comment type="block" pos:start="89:9" pos:end="89:47">/* disable some already defined maps */</comment>

        <for pos:start="91:9" pos:end="105:9">for <control pos:start="91:13" pos:end="91:47">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">i</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:42"><expr pos:start="91:21" pos:end="91:41"><name pos:start="91:21" pos:end="91:21">i</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:41"><name pos:start="91:25" pos:end="91:25">o</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:41">nb_stream_maps</name></name></expr>;</condition> <incr pos:start="91:44" pos:end="91:46"><expr pos:start="91:44" pos:end="91:46"><name pos:start="91:44" pos:end="91:44">i</name><operator pos:start="91:45" pos:end="91:46">++</operator></expr></incr>)</control> <block pos:start="91:49" pos:end="105:9">{<block_content pos:start="93:13" pos:end="103:32">

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:13">m</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <operator pos:start="93:17" pos:end="93:17">&amp;</operator><name pos:start="93:18" pos:end="93:34"><name pos:start="93:18" pos:end="93:18">o</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:31">stream_maps</name><index pos:start="93:32" pos:end="93:34">[<expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="103:32"><if pos:start="95:13" pos:end="103:32">if <condition pos:start="95:16" pos:end="101:66">(<expr pos:start="95:17" pos:end="101:65"><name pos:start="95:17" pos:end="95:24">file_idx</name> <operator pos:start="95:26" pos:end="95:27">==</operator> <name pos:start="95:29" pos:end="95:41"><name pos:start="95:29" pos:end="95:29">m</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:41">file_index</name></name> <operator pos:start="95:43" pos:end="95:44">&amp;&amp;</operator>

                <call pos:start="97:17" pos:end="101:61"><name pos:start="97:17" pos:end="97:38">check_stream_specifier</name><argument_list pos:start="97:39" pos:end="101:61">(<argument pos:start="97:40" pos:end="97:69"><expr pos:start="97:40" pos:end="97:69"><name pos:start="97:40" pos:end="97:65"><name pos:start="97:40" pos:end="97:50">input_files</name><index pos:start="97:51" pos:end="97:65">[<expr pos:start="97:52" pos:end="97:64"><name pos:start="97:52" pos:end="97:64"><name pos:start="97:52" pos:end="97:52">m</name><operator pos:start="97:53" pos:end="97:54">-&gt;</operator><name pos:start="97:55" pos:end="97:64">file_index</name></name></expr>]</index></name><operator pos:start="97:66" pos:end="97:66">.</operator><name pos:start="97:67" pos:end="97:69">ctx</name></expr></argument>,

                                       <argument pos:start="99:40" pos:end="99:95"><expr pos:start="99:40" pos:end="99:95"><name pos:start="99:40" pos:end="99:65"><name pos:start="99:40" pos:end="99:50">input_files</name><index pos:start="99:51" pos:end="99:65">[<expr pos:start="99:52" pos:end="99:64"><name pos:start="99:52" pos:end="99:64"><name pos:start="99:52" pos:end="99:52">m</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:64">file_index</name></name></expr>]</index></name><operator pos:start="99:66" pos:end="99:66">.</operator><name pos:start="99:67" pos:end="99:95"><name pos:start="99:67" pos:end="99:69">ctx</name><operator pos:start="99:70" pos:end="99:71">-&gt;</operator><name pos:start="99:72" pos:end="99:78">streams</name><index pos:start="99:79" pos:end="99:95">[<expr pos:start="99:80" pos:end="99:94"><name pos:start="99:80" pos:end="99:94"><name pos:start="99:80" pos:end="99:80">m</name><operator pos:start="99:81" pos:end="99:82">-&gt;</operator><name pos:start="99:83" pos:end="99:94">stream_index</name></name></expr>]</index></name></expr></argument>,

                                       <argument pos:start="101:40" pos:end="101:60"><expr pos:start="101:40" pos:end="101:60"><ternary pos:start="101:40" pos:end="101:60"><condition pos:start="101:40" pos:end="101:50"><expr pos:start="101:40" pos:end="101:48"><operator pos:start="101:40" pos:end="101:40">*</operator><name pos:start="101:41" pos:end="101:41">p</name> <operator pos:start="101:43" pos:end="101:44">==</operator> <literal type="char" pos:start="101:46" pos:end="101:48">':'</literal></expr> ?</condition><then pos:start="101:52" pos:end="101:56"> <expr pos:start="101:52" pos:end="101:56"><name pos:start="101:52" pos:end="101:52">p</name> <operator pos:start="101:54" pos:end="101:54">+</operator> <literal type="number" pos:start="101:56" pos:end="101:56">1</literal></expr> </then><else pos:start="101:58" pos:end="101:60">: <expr pos:start="101:60" pos:end="101:60"><name pos:start="101:60" pos:end="101:60">p</name></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="101:63" pos:end="101:63">&gt;</operator> <literal type="number" pos:start="101:65" pos:end="101:65">0</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:32"><block_content pos:start="103:17" pos:end="103:32">

                <expr_stmt pos:start="103:17" pos:end="103:32"><expr pos:start="103:17" pos:end="103:31"><name pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:17">m</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:27">disabled</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <literal type="number" pos:start="103:31" pos:end="103:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for></block_content></block></if>

    <else pos:start="107:5" pos:end="145:9">else<block type="pseudo" pos:start="109:9" pos:end="145:9"><block_content pos:start="109:9" pos:end="145:9">

        <for pos:start="109:9" pos:end="145:9">for <control pos:start="109:13" pos:end="109:62">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">i</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:57"><expr pos:start="109:21" pos:end="109:56"><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:45"><name pos:start="109:25" pos:end="109:35">input_files</name><index pos:start="109:36" pos:end="109:45">[<expr pos:start="109:37" pos:end="109:44"><name pos:start="109:37" pos:end="109:44">file_idx</name></expr>]</index></name><operator pos:start="109:46" pos:end="109:46">.</operator><name pos:start="109:47" pos:end="109:56">nb_streams</name></expr>;</condition> <incr pos:start="109:59" pos:end="109:61"><expr pos:start="109:59" pos:end="109:61"><name pos:start="109:59" pos:end="109:59">i</name><operator pos:start="109:60" pos:end="109:61">++</operator></expr></incr>)</control> <block pos:start="109:64" pos:end="145:9">{<block_content pos:start="111:13" pos:end="143:13">

            <if_stmt pos:start="111:13" pos:end="115:25"><if pos:start="111:13" pos:end="115:25">if <condition pos:start="111:16" pos:end="113:52">(<expr pos:start="111:17" pos:end="113:51"><call pos:start="111:17" pos:end="113:46"><name pos:start="111:17" pos:end="111:38">check_stream_specifier</name><argument_list pos:start="111:39" pos:end="113:46">(<argument pos:start="111:40" pos:end="111:64"><expr pos:start="111:40" pos:end="111:64"><name pos:start="111:40" pos:end="111:60"><name pos:start="111:40" pos:end="111:50">input_files</name><index pos:start="111:51" pos:end="111:60">[<expr pos:start="111:52" pos:end="111:59"><name pos:start="111:52" pos:end="111:59">file_idx</name></expr>]</index></name><operator pos:start="111:61" pos:end="111:61">.</operator><name pos:start="111:62" pos:end="111:64">ctx</name></expr></argument>, <argument pos:start="111:67" pos:end="111:103"><expr pos:start="111:67" pos:end="111:103"><name pos:start="111:67" pos:end="111:87"><name pos:start="111:67" pos:end="111:77">input_files</name><index pos:start="111:78" pos:end="111:87">[<expr pos:start="111:79" pos:end="111:86"><name pos:start="111:79" pos:end="111:86">file_idx</name></expr>]</index></name><operator pos:start="111:88" pos:end="111:88">.</operator><name pos:start="111:89" pos:end="111:103"><name pos:start="111:89" pos:end="111:91">ctx</name><operator pos:start="111:92" pos:end="111:93">-&gt;</operator><name pos:start="111:94" pos:end="111:100">streams</name><index pos:start="111:101" pos:end="111:103">[<expr pos:start="111:102" pos:end="111:102"><name pos:start="111:102" pos:end="111:102">i</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="113:25" pos:end="113:45"><expr pos:start="113:25" pos:end="113:45"><ternary pos:start="113:25" pos:end="113:45"><condition pos:start="113:25" pos:end="113:35"><expr pos:start="113:25" pos:end="113:33"><operator pos:start="113:25" pos:end="113:25">*</operator><name pos:start="113:26" pos:end="113:26">p</name> <operator pos:start="113:28" pos:end="113:29">==</operator> <literal type="char" pos:start="113:31" pos:end="113:33">':'</literal></expr> ?</condition><then pos:start="113:37" pos:end="113:41"> <expr pos:start="113:37" pos:end="113:41"><name pos:start="113:37" pos:end="113:37">p</name> <operator pos:start="113:39" pos:end="113:39">+</operator> <literal type="number" pos:start="113:41" pos:end="113:41">1</literal></expr> </then><else pos:start="113:43" pos:end="113:45">: <expr pos:start="113:45" pos:end="113:45"><name pos:start="113:45" pos:end="113:45">p</name></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="113:48" pos:end="113:49">&lt;=</operator> <literal type="number" pos:start="113:51" pos:end="113:51">0</literal></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:25"><block_content pos:start="115:17" pos:end="115:25">

                <continue pos:start="115:17" pos:end="115:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="119:83"><expr pos:start="117:13" pos:end="119:82"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:13">o</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:26">stream_maps</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <call pos:start="117:30" pos:end="119:82"><name pos:start="117:30" pos:end="117:39">grow_array</name><argument_list pos:start="117:40" pos:end="119:82">(<argument pos:start="117:41" pos:end="117:54"><expr pos:start="117:41" pos:end="117:54"><name pos:start="117:41" pos:end="117:54"><name pos:start="117:41" pos:end="117:41">o</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:54">stream_maps</name></name></expr></argument>, <argument pos:start="117:57" pos:end="117:79"><expr pos:start="117:57" pos:end="117:79"><sizeof pos:start="117:57" pos:end="117:79">sizeof<argument_list pos:start="117:63" pos:end="117:79">(<argument pos:start="117:64" pos:end="117:78"><expr pos:start="117:64" pos:end="117:78"><operator pos:start="117:64" pos:end="117:64">*</operator><name pos:start="117:65" pos:end="117:78"><name pos:start="117:65" pos:end="117:65">o</name><operator pos:start="117:66" pos:end="117:67">-&gt;</operator><name pos:start="117:68" pos:end="117:78">stream_maps</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                        <argument pos:start="119:41" pos:end="119:58"><expr pos:start="119:41" pos:end="119:58"><operator pos:start="119:41" pos:end="119:41">&amp;</operator><name pos:start="119:42" pos:end="119:58"><name pos:start="119:42" pos:end="119:42">o</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:58">nb_stream_maps</name></name></expr></argument>, <argument pos:start="119:61" pos:end="119:81"><expr pos:start="119:61" pos:end="119:81"><name pos:start="119:61" pos:end="119:77"><name pos:start="119:61" pos:end="119:61">o</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:77">nb_stream_maps</name></name> <operator pos:start="119:79" pos:end="119:79">+</operator> <literal type="number" pos:start="119:81" pos:end="119:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:55"><expr pos:start="121:13" pos:end="121:54"><name pos:start="121:13" pos:end="121:13">m</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <operator pos:start="121:17" pos:end="121:17">&amp;</operator><name pos:start="121:18" pos:end="121:54"><name pos:start="121:18" pos:end="121:18">o</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:31">stream_maps</name><index pos:start="121:32" pos:end="121:54">[<expr pos:start="121:33" pos:end="121:53"><name pos:start="121:33" pos:end="121:49"><name pos:start="121:33" pos:end="121:33">o</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:49">nb_stream_maps</name></name> <operator pos:start="121:51" pos:end="121:51">-</operator> <literal type="number" pos:start="121:53" pos:end="121:53">1</literal></expr>]</index></name></expr>;</expr_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:39"><expr pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:13">m</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:25">file_index</name></name>   <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:38">file_idx</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:32"><expr pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:27"><name pos:start="127:13" pos:end="127:13">m</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:27">stream_index</name></name> <operator pos:start="127:29" pos:end="127:29">=</operator> <name pos:start="127:31" pos:end="127:31">i</name></expr>;</expr_stmt>



            <if_stmt pos:start="131:13" pos:end="143:13"><if pos:start="131:13" pos:end="137:13">if <condition pos:start="131:16" pos:end="131:35">(<expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:29">sync_file_idx</name> <operator pos:start="131:31" pos:end="131:32">&gt;=</operator> <literal type="number" pos:start="131:34" pos:end="131:34">0</literal></expr>)</condition> <block pos:start="131:37" pos:end="137:13">{<block_content pos:start="133:17" pos:end="135:55">

                <expr_stmt pos:start="133:17" pos:end="133:53"><expr pos:start="133:17" pos:end="133:52"><name pos:start="133:17" pos:end="133:34"><name pos:start="133:17" pos:end="133:17">m</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:34">sync_file_index</name></name>   <operator pos:start="133:38" pos:end="133:38">=</operator> <name pos:start="133:40" pos:end="133:52">sync_file_idx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:55"><expr pos:start="135:17" pos:end="135:54"><name pos:start="135:17" pos:end="135:36"><name pos:start="135:17" pos:end="135:17">m</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:36">sync_stream_index</name></name> <operator pos:start="135:38" pos:end="135:38">=</operator> <name pos:start="135:40" pos:end="135:54">sync_stream_idx</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="137:15" pos:end="143:13">else <block pos:start="137:20" pos:end="143:13">{<block_content pos:start="139:17" pos:end="141:41">

                <expr_stmt pos:start="139:17" pos:end="139:48"><expr pos:start="139:17" pos:end="139:47"><name pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:17">m</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:34">sync_file_index</name></name>   <operator pos:start="139:38" pos:end="139:38">=</operator> <name pos:start="139:40" pos:end="139:47">file_idx</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:41"><expr pos:start="141:17" pos:end="141:40"><name pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:17">m</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:36">sync_stream_index</name></name> <operator pos:start="141:38" pos:end="141:38">=</operator> <name pos:start="141:40" pos:end="141:40">i</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for></block_content></block></else></if_stmt>



    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:11">(<expr pos:start="149:9" pos:end="149:10"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:10">m</name></expr>)</condition> <block pos:start="149:13" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:24">

        <expr_stmt pos:start="151:9" pos:end="151:81"><expr pos:start="151:9" pos:end="151:80"><call pos:start="151:9" pos:end="151:80"><name pos:start="151:9" pos:end="151:14">av_log</name><argument_list pos:start="151:15" pos:end="151:80">(<argument pos:start="151:16" pos:end="151:19"><expr pos:start="151:16" pos:end="151:19"><name pos:start="151:16" pos:end="151:19">NULL</name></expr></argument>, <argument pos:start="151:22" pos:end="151:33"><expr pos:start="151:22" pos:end="151:33"><name pos:start="151:22" pos:end="151:33">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="151:36" pos:end="151:74"><expr pos:start="151:36" pos:end="151:74"><literal type="string" pos:start="151:36" pos:end="151:74">"Stream map '%s' matches no streams.\n"</literal></expr></argument>, <argument pos:start="151:77" pos:end="151:79"><expr pos:start="151:77" pos:end="151:79"><name pos:start="151:77" pos:end="151:79">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:24"><expr pos:start="153:9" pos:end="153:23"><call pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:20">exit_program</name><argument_list pos:start="153:21" pos:end="153:23">(<argument pos:start="153:22" pos:end="153:22"><expr pos:start="153:22" pos:end="153:22"><literal type="number" pos:start="153:22" pos:end="153:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:19"><expr pos:start="159:5" pos:end="159:18"><call pos:start="159:5" pos:end="159:18"><name pos:start="159:5" pos:end="159:12">av_freep</name><argument_list pos:start="159:13" pos:end="159:18">(<argument pos:start="159:14" pos:end="159:17"><expr pos:start="159:14" pos:end="159:17"><operator pos:start="159:14" pos:end="159:14">&amp;</operator><name pos:start="159:15" pos:end="159:17">map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="161:5" pos:end="161:13">return <expr pos:start="161:12" pos:end="161:12"><literal type="number" pos:start="161:12" pos:end="161:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
