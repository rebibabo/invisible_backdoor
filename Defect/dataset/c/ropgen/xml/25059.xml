<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25059.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:44">h_add_logical_lan_buffer</name><parameter_list pos:start="1:45" pos:end="7:64">(<parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:56">CPUPPCState</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">env</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:68"><decl pos:start="3:46" pos:end="3:68"><type pos:start="3:46" pos:end="3:68"><name pos:start="3:46" pos:end="3:61">sPAPREnvironment</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:68">spapr</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:64"><decl pos:start="5:46" pos:end="5:64"><type pos:start="5:46" pos:end="5:64"><name pos:start="5:46" pos:end="5:57">target_ulong</name></type> <name pos:start="5:59" pos:end="5:64">opcode</name></decl></parameter>,

                                             <parameter pos:start="7:46" pos:end="7:63"><decl pos:start="7:46" pos:end="7:63"><type pos:start="7:46" pos:end="7:63"><name pos:start="7:46" pos:end="7:57">target_ulong</name> <modifier pos:start="7:59" pos:end="7:59">*</modifier></type><name pos:start="7:60" pos:end="7:63">args</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="95:1">{<block_content pos:start="11:5" pos:end="93:21">

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:20">reg</name> <init pos:start="11:22" pos:end="11:30">= <expr pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:30"><name pos:start="11:24" pos:end="11:27">args</name><index pos:start="11:28" pos:end="11:30">[<expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:20">buf</name> <init pos:start="13:22" pos:end="13:30">= <expr pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:30"><name pos:start="13:24" pos:end="13:27">args</name><index pos:start="13:28" pos:end="13:30">[<expr pos:start="13:29" pos:end="13:29"><literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:70"><decl pos:start="15:5" pos:end="15:69"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">VIOsPAPRDevice</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:24">sdev</name> <init pos:start="15:26" pos:end="15:69">= <expr pos:start="15:28" pos:end="15:69"><call pos:start="15:28" pos:end="15:69"><name pos:start="15:28" pos:end="15:48">spapr_vio_find_by_reg</name><argument_list pos:start="15:49" pos:end="15:69">(<argument pos:start="15:50" pos:end="15:63"><expr pos:start="15:50" pos:end="15:63"><name pos:start="15:50" pos:end="15:63"><name pos:start="15:50" pos:end="15:54">spapr</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:63">vio_bus</name></name></expr></argument>, <argument pos:start="15:66" pos:end="15:68"><expr pos:start="15:66" pos:end="15:68"><name pos:start="15:66" pos:end="15:68">reg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:57"><decl pos:start="17:5" pos:end="17:56"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:22">VIOsPAPRVLANDevice</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:27">dev</name> <init pos:start="17:29" pos:end="17:56">= <expr pos:start="17:31" pos:end="17:56"><operator pos:start="17:31" pos:end="17:31">(</operator><name pos:start="17:32" pos:end="17:49">VIOsPAPRVLANDevice</name> <operator pos:start="17:51" pos:end="17:51">*</operator><operator pos:start="17:52" pos:end="17:52">)</operator><name pos:start="17:53" pos:end="17:56">sdev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:13">vlan_bd_t</name></type> <name pos:start="19:15" pos:end="19:16">bd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:50"><expr pos:start="23:5" pos:end="25:49"><call pos:start="23:5" pos:end="25:49"><name pos:start="23:5" pos:end="23:11">dprintf</name><argument_list pos:start="23:12" pos:end="25:49">(<argument pos:start="23:13" pos:end="25:38"><expr pos:start="23:13" pos:end="25:38"><literal type="string" pos:start="23:13" pos:end="23:41">"H_ADD_LOGICAL_LAN_BUFFER(0x"</literal> <name pos:start="23:43" pos:end="23:55">TARGET_FMT_lx</name>

            <literal type="string" pos:start="25:13" pos:end="25:18">", 0x"</literal> <name pos:start="25:20" pos:end="25:32">TARGET_FMT_lx</name> <literal type="string" pos:start="25:34" pos:end="25:38">")\n"</literal></expr></argument>, <argument pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><name pos:start="25:41" pos:end="25:43">reg</name></expr></argument>, <argument pos:start="25:46" pos:end="25:48"><expr pos:start="25:46" pos:end="25:48"><name pos:start="25:46" pos:end="25:48">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:13">sdev</name></expr>)</condition> <block pos:start="29:16" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:27">

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><call pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:21">hcall_dprintf</name><argument_list pos:start="31:22" pos:end="31:37">(<argument pos:start="31:23" pos:end="31:36"><expr pos:start="31:23" pos:end="31:36"><literal type="string" pos:start="31:23" pos:end="31:36">"Bad device\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="41:35">(<expr pos:start="39:9" pos:end="41:34"><operator pos:start="39:9" pos:end="39:9">(</operator><call pos:start="39:10" pos:end="39:30"><name pos:start="39:10" pos:end="39:17">check_bd</name><argument_list pos:start="39:18" pos:end="39:30">(<argument pos:start="39:19" pos:end="39:21"><expr pos:start="39:19" pos:end="39:21"><name pos:start="39:19" pos:end="39:21">dev</name></expr></argument>, <argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">buf</name></expr></argument>, <argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">4</literal></expr></argument>)</argument_list></call> <operator pos:start="39:32" pos:end="39:32">&lt;</operator> <literal type="number" pos:start="39:34" pos:end="39:34">0</literal><operator pos:start="39:35" pos:end="39:35">)</operator>

        <operator pos:start="41:9" pos:end="41:10">||</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><call pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:23">VLAN_BD_LEN</name><argument_list pos:start="41:24" pos:end="41:28">(<argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">buf</name></expr></argument>)</argument_list></call> <operator pos:start="41:30" pos:end="41:30">&lt;</operator> <literal type="number" pos:start="41:32" pos:end="41:33">16</literal><operator pos:start="41:34" pos:end="41:34">)</operator></expr>)</condition> <block pos:start="41:37" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:27">

        <expr_stmt pos:start="43:9" pos:end="43:47"><expr pos:start="43:9" pos:end="43:46"><call pos:start="43:9" pos:end="43:46"><name pos:start="43:9" pos:end="43:21">hcall_dprintf</name><argument_list pos:start="43:22" pos:end="43:46">(<argument pos:start="43:23" pos:end="43:45"><expr pos:start="43:23" pos:end="43:45"><literal type="string" pos:start="43:23" pos:end="43:45">"Bad buffer enqueued\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:27">return <expr pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:54">(<expr pos:start="51:9" pos:end="51:53"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:20"><name pos:start="51:10" pos:end="51:12">dev</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:20">isopen</name></name> <operator pos:start="51:22" pos:end="51:23">||</operator> <name pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:27">dev</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:36">rx_bufs</name></name> <operator pos:start="51:38" pos:end="51:39">&gt;=</operator> <name pos:start="51:41" pos:end="51:53">VLAN_MAX_BUFS</name></expr>)</condition> <block pos:start="51:56" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:26">

        <return pos:start="53:9" pos:end="53:26">return <expr pos:start="53:16" pos:end="53:25"><name pos:start="53:16" pos:end="53:25">H_RESOURCE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <do pos:start="59:5" pos:end="73:33">do <block pos:start="59:8" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:61">

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:11">dev</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:24">add_buf_ptr</name></name> <operator pos:start="61:26" pos:end="61:27">+=</operator> <literal type="number" pos:start="61:29" pos:end="61:29">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="67:9"><if pos:start="63:9" pos:end="67:9">if <condition pos:start="63:12" pos:end="63:56">(<expr pos:start="63:13" pos:end="63:55"><name pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:15">dev</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:28">add_buf_ptr</name></name> <operator pos:start="63:30" pos:end="63:31">&gt;=</operator> <name pos:start="63:33" pos:end="63:55">SPAPR_VIO_TCE_PAGE_SIZE</name></expr>)</condition> <block pos:start="63:58" pos:end="67:9">{<block_content pos:start="65:13" pos:end="65:47">

            <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:15">dev</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:28">add_buf_ptr</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <name pos:start="65:32" pos:end="65:46">VLAN_RX_BDS_OFF</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:61"><expr pos:start="71:9" pos:end="71:60"><name pos:start="71:9" pos:end="71:10">bd</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <call pos:start="71:14" pos:end="71:60"><name pos:start="71:14" pos:end="71:20">ldq_tce</name><argument_list pos:start="71:21" pos:end="71:60">(<argument pos:start="71:22" pos:end="71:25"><expr pos:start="71:22" pos:end="71:25"><name pos:start="71:22" pos:end="71:25">sdev</name></expr></argument>, <argument pos:start="71:28" pos:end="71:59"><expr pos:start="71:28" pos:end="71:59"><name pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:30">dev</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:40">buf_list</name></name> <operator pos:start="71:42" pos:end="71:42">+</operator> <name pos:start="71:44" pos:end="71:59"><name pos:start="71:44" pos:end="71:46">dev</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:59">add_buf_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="73:13" pos:end="73:32">(<expr pos:start="73:14" pos:end="73:31"><name pos:start="73:14" pos:end="73:15">bd</name> <operator pos:start="73:17" pos:end="73:17">&amp;</operator> <name pos:start="73:19" pos:end="73:31">VLAN_BD_VALID</name></expr>)</condition>;</do>



    <expr_stmt pos:start="77:5" pos:end="77:57"><expr pos:start="77:5" pos:end="77:56"><call pos:start="77:5" pos:end="77:56"><name pos:start="77:5" pos:end="77:11">stq_tce</name><argument_list pos:start="77:12" pos:end="77:56">(<argument pos:start="77:13" pos:end="77:16"><expr pos:start="77:13" pos:end="77:16"><name pos:start="77:13" pos:end="77:16">sdev</name></expr></argument>, <argument pos:start="77:19" pos:end="77:50"><expr pos:start="77:19" pos:end="77:50"><name pos:start="77:19" pos:end="77:31"><name pos:start="77:19" pos:end="77:21">dev</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:31">buf_list</name></name> <operator pos:start="77:33" pos:end="77:33">+</operator> <name pos:start="77:35" pos:end="77:50"><name pos:start="77:35" pos:end="77:37">dev</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:50">add_buf_ptr</name></name></expr></argument>, <argument pos:start="77:53" pos:end="77:55"><expr pos:start="77:53" pos:end="77:55"><name pos:start="77:53" pos:end="77:55">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:19"><expr pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:16"><name pos:start="81:5" pos:end="81:7">dev</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:16">rx_bufs</name></name><operator pos:start="81:17" pos:end="81:18">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="89:37"><expr pos:start="85:5" pos:end="89:36"><call pos:start="85:5" pos:end="89:36"><name pos:start="85:5" pos:end="85:11">dprintf</name><argument_list pos:start="85:12" pos:end="89:36">(<argument pos:start="85:13" pos:end="87:29"><expr pos:start="85:13" pos:end="87:29"><literal type="string" pos:start="85:13" pos:end="85:72">"h_add_logical_lan_buffer():  Added buf  ptr=%d  rx_bufs=%d"</literal>

            <literal type="string" pos:start="87:13" pos:end="87:29">" bd=0x%016llx\n"</literal></expr></argument>, <argument pos:start="87:32" pos:end="87:47"><expr pos:start="87:32" pos:end="87:47"><name pos:start="87:32" pos:end="87:47"><name pos:start="87:32" pos:end="87:34">dev</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:47">add_buf_ptr</name></name></expr></argument>, <argument pos:start="87:50" pos:end="87:61"><expr pos:start="87:50" pos:end="87:61"><name pos:start="87:50" pos:end="87:61"><name pos:start="87:50" pos:end="87:52">dev</name><operator pos:start="87:53" pos:end="87:54">-&gt;</operator><name pos:start="87:55" pos:end="87:61">rx_bufs</name></name></expr></argument>,

            <argument pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:35"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:21">unsigned</name> <name pos:start="89:23" pos:end="89:26">long</name> <name pos:start="89:28" pos:end="89:31">long</name><operator pos:start="89:32" pos:end="89:32">)</operator><name pos:start="89:33" pos:end="89:35">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="93:5" pos:end="93:21">return <expr pos:start="93:12" pos:end="93:20"><name pos:start="93:12" pos:end="93:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
