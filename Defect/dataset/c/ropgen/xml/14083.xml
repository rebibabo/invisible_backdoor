<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14083.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">i2c_end_transfer</name><parameter_list pos:start="1:22" pos:end="1:34">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:28">I2CBus</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">bus</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:27">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">I2CSlaveClass</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">I2CNode</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">node</name></decl>, <decl pos:start="7:20" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:24">next</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:40">(<expr pos:start="11:9" pos:end="11:39"><call pos:start="11:9" pos:end="11:39"><name pos:start="11:9" pos:end="11:19">QLIST_EMPTY</name><argument_list pos:start="11:20" pos:end="11:39">(<argument pos:start="11:21" pos:end="11:38"><expr pos:start="11:21" pos:end="11:38"><operator pos:start="11:21" pos:end="11:21">&amp;</operator><name pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:24">bus</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:38">current_devs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:42" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="19:5" pos:end="19:60"><name pos:start="19:5" pos:end="19:22">QLIST_FOREACH_SAFE</name><argument_list pos:start="19:23" pos:end="19:60">(<argument pos:start="19:24" pos:end="19:27">node</argument>, <argument pos:start="19:30" pos:end="19:47">&amp;bus-&gt;current_devs</argument>, <argument pos:start="19:50" pos:end="19:53">next</argument>, <argument pos:start="19:56" pos:end="19:59">next</argument>)</argument_list></macro> <block pos:start="19:62" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:21">

        <expr_stmt pos:start="21:9" pos:end="21:44"><expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:10">sc</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:43"><name pos:start="21:14" pos:end="21:32">I2C_SLAVE_GET_CLASS</name><argument_list pos:start="21:33" pos:end="21:43">(<argument pos:start="21:34" pos:end="21:42"><expr pos:start="21:34" pos:end="21:42"><name pos:start="21:34" pos:end="21:42"><name pos:start="21:34" pos:end="21:37">node</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:42">elt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:14">sc</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:21">event</name></name></expr>)</condition> <block pos:start="23:24" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:45">

            <expr_stmt pos:start="25:13" pos:end="25:45"><expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:21"><name pos:start="25:13" pos:end="25:14">sc</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:21">event</name></name><argument_list pos:start="25:22" pos:end="25:44">(<argument pos:start="25:23" pos:end="25:31"><expr pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:31"><name pos:start="25:23" pos:end="25:26">node</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:31">elt</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:43"><expr pos:start="25:34" pos:end="25:43"><name pos:start="25:34" pos:end="25:43">I2C_FINISH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:20">QLIST_REMOVE</name><argument_list pos:start="29:21" pos:end="29:32">(<argument pos:start="29:22" pos:end="29:25"><expr pos:start="29:22" pos:end="29:25"><name pos:start="29:22" pos:end="29:25">node</name></expr></argument>, <argument pos:start="29:28" pos:end="29:31"><expr pos:start="29:28" pos:end="29:31"><name pos:start="29:28" pos:end="29:31">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><call pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:14">g_free</name><argument_list pos:start="31:15" pos:end="31:20">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:7">bus</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:18">broadcast</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:26">false</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
