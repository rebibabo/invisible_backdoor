<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5092.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">virtio_scsi_hotplug</name><parameter_list pos:start="1:32" pos:end="3:45">(<parameter pos:start="1:33" pos:end="1:59"><decl pos:start="1:33" pos:end="1:59"><type pos:start="1:33" pos:end="1:59"><name pos:start="1:33" pos:end="1:46">HotplugHandler</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:59">hotplug_dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><name pos:start="1:62" pos:end="1:72">DeviceState</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">dev</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:37">Error</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier><modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:5">

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:51">= <expr pos:start="7:26" pos:end="7:51"><call pos:start="7:26" pos:end="7:51"><name pos:start="7:26" pos:end="7:38">VIRTIO_DEVICE</name><argument_list pos:start="7:39" pos:end="7:51">(<argument pos:start="7:40" pos:end="7:50"><expr pos:start="7:40" pos:end="7:50"><name pos:start="7:40" pos:end="7:50">hotplug_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">VirtIOSCSI</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:37">= <expr pos:start="9:21" pos:end="9:37"><call pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:31">VIRTIO_SCSI</name><argument_list pos:start="9:32" pos:end="9:37">(<argument pos:start="9:33" pos:end="9:36"><expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">SCSIDevice</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:18">sd</name> <init pos:start="11:20" pos:end="11:37">= <expr pos:start="11:22" pos:end="11:37"><call pos:start="11:22" pos:end="11:37"><name pos:start="11:22" pos:end="11:32">SCSI_DEVICE</name><argument_list pos:start="11:33" pos:end="11:37">(<argument pos:start="11:34" pos:end="11:36"><expr pos:start="11:34" pos:end="11:36"><name pos:start="11:34" pos:end="11:36">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">ctx</name></name> <operator pos:start="15:16" pos:end="15:17">&amp;&amp;</operator> <operator pos:start="15:19" pos:end="15:19">!</operator><name pos:start="15:20" pos:end="15:40"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:40">dataplane_disabled</name></name></expr>)</condition> <block pos:start="15:43" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:51">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:75">(<expr pos:start="17:13" pos:end="17:74"><call pos:start="17:13" pos:end="17:74"><name pos:start="17:13" pos:end="17:29">blk_op_is_blocked</name><argument_list pos:start="17:30" pos:end="17:74">(<argument pos:start="17:31" pos:end="17:42"><expr pos:start="17:31" pos:end="17:42"><name pos:start="17:31" pos:end="17:42"><name pos:start="17:31" pos:end="17:32">sd</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:38">conf</name><operator pos:start="17:39" pos:end="17:39">.</operator><name pos:start="17:40" pos:end="17:42">blk</name></name></expr></argument>, <argument pos:start="17:45" pos:end="17:67"><expr pos:start="17:45" pos:end="17:67"><name pos:start="17:45" pos:end="17:67">BLOCK_OP_TYPE_DATAPLANE</name></expr></argument>, <argument pos:start="17:70" pos:end="17:73"><expr pos:start="17:70" pos:end="17:73"><name pos:start="17:70" pos:end="17:73">errp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:77" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:19">

            <return pos:start="19:13" pos:end="19:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><call pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:24">blk_op_block_all</name><argument_list pos:start="23:25" pos:end="23:50">(<argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:27">sd</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:33">conf</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:37">blk</name></name></expr></argument>, <argument pos:start="23:40" pos:end="23:49"><expr pos:start="23:40" pos:end="23:49"><name pos:start="23:40" pos:end="23:49"><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:49">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:60">(<expr pos:start="29:9" pos:end="29:59"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:29"><name pos:start="29:10" pos:end="29:13">vdev</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:29">guest_features</name></name> <operator pos:start="29:31" pos:end="29:32">&gt;&gt;</operator> <name pos:start="29:34" pos:end="29:54">VIRTIO_SCSI_F_HOTPLUG</name><operator pos:start="29:55" pos:end="29:55">)</operator> <operator pos:start="29:57" pos:end="29:57">&amp;</operator> <literal type="number" pos:start="29:59" pos:end="29:59">1</literal></expr>)</condition> <block pos:start="29:62" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:61">

        <expr_stmt pos:start="31:9" pos:end="35:61"><expr pos:start="31:9" pos:end="35:60"><call pos:start="31:9" pos:end="35:60"><name pos:start="31:9" pos:end="31:30">virtio_scsi_push_event</name><argument_list pos:start="31:31" pos:end="35:60">(<argument pos:start="31:32" pos:end="31:32"><expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">s</name></expr></argument>, <argument pos:start="31:35" pos:end="31:36"><expr pos:start="31:35" pos:end="31:36"><name pos:start="31:35" pos:end="31:36">sd</name></expr></argument>,

                               <argument pos:start="33:32" pos:end="33:60"><expr pos:start="33:32" pos:end="33:60"><name pos:start="33:32" pos:end="33:60">VIRTIO_SCSI_T_TRANSPORT_RESET</name></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:59"><expr pos:start="35:32" pos:end="35:59"><name pos:start="35:32" pos:end="35:59">VIRTIO_SCSI_EVT_RESET_RESCAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
