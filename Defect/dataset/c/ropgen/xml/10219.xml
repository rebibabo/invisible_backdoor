<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10219.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">vmdk_write_cid</name><parameter_list pos:start="1:26" pos:end="1:61">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:60">cid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:24"><name pos:start="5:10" pos:end="5:13">desc</name><index pos:start="5:14" pos:end="5:24">[<expr pos:start="5:15" pos:end="5:23"><name pos:start="5:15" pos:end="5:23">DESC_SIZE</name></expr>]</index></name></decl>, <decl pos:start="5:27" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:27" pos:end="5:45"><name pos:start="5:27" pos:end="5:34">tmp_desc</name><index pos:start="5:35" pos:end="5:45">[<expr pos:start="5:36" pos:end="5:44"><name pos:start="5:36" pos:end="5:44">DESC_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">p_name</name></decl>, <decl pos:start="7:19" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:26">tmp_str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">BDRVVmdkState</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:20">s</name> <init pos:start="9:22" pos:end="9:33">= <expr pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:33"><name pos:start="9:24" pos:end="9:25">bs</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:33">opaque</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><call pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:33">(<argument pos:start="13:12" pos:end="13:15"><expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:15">desc</name></expr></argument>, <argument pos:start="13:18" pos:end="13:18"><expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></argument>, <argument pos:start="13:21" pos:end="13:32"><expr pos:start="13:21" pos:end="13:32"><sizeof pos:start="13:21" pos:end="13:32">sizeof<argument_list pos:start="13:27" pos:end="13:32">(<argument pos:start="13:28" pos:end="13:31"><expr pos:start="13:28" pos:end="13:31"><name pos:start="13:28" pos:end="13:31">desc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:75">(<expr pos:start="15:9" pos:end="15:74"><call pos:start="15:9" pos:end="15:61"><name pos:start="15:9" pos:end="15:18">bdrv_pread</name><argument_list pos:start="15:19" pos:end="15:61">(<argument pos:start="15:20" pos:end="15:27"><expr pos:start="15:20" pos:end="15:27"><name pos:start="15:20" pos:end="15:27"><name pos:start="15:20" pos:end="15:21">bs</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:27">file</name></name></expr></argument>, <argument pos:start="15:30" pos:end="15:43"><expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:30">s</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:43">desc_offset</name></name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">desc</name></expr></argument>, <argument pos:start="15:52" pos:end="15:60"><expr pos:start="15:52" pos:end="15:60"><name pos:start="15:52" pos:end="15:60">DESC_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="15:63" pos:end="15:64">!=</operator> <name pos:start="15:66" pos:end="15:74">DESC_SIZE</name></expr>)</condition> <block pos:start="15:77" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:11">tmp_str</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:38"><name pos:start="23:15" pos:end="23:20">strstr</name><argument_list pos:start="23:21" pos:end="23:38">(<argument pos:start="23:22" pos:end="23:25"><expr pos:start="23:22" pos:end="23:25"><name pos:start="23:22" pos:end="23:25">desc</name></expr></argument>,<argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><literal type="string" pos:start="23:27" pos:end="23:37">"parentCID"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><call pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:11">pstrcpy</name><argument_list pos:start="25:12" pos:end="25:48">(<argument pos:start="25:13" pos:end="25:20"><expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:20">tmp_desc</name></expr></argument>, <argument pos:start="25:23" pos:end="25:38"><expr pos:start="25:23" pos:end="25:38"><sizeof pos:start="25:23" pos:end="25:38">sizeof<argument_list pos:start="25:29" pos:end="25:38">(<argument pos:start="25:30" pos:end="25:37"><expr pos:start="25:30" pos:end="25:37"><name pos:start="25:30" pos:end="25:37">tmp_desc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:41" pos:end="25:47"><expr pos:start="25:41" pos:end="25:47"><name pos:start="25:41" pos:end="25:47">tmp_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:46">(<expr pos:start="27:9" pos:end="27:45"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:15">p_name</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:36"><name pos:start="27:19" pos:end="27:24">strstr</name><argument_list pos:start="27:25" pos:end="27:36">(<argument pos:start="27:26" pos:end="27:29"><expr pos:start="27:26" pos:end="27:29"><name pos:start="27:26" pos:end="27:29">desc</name></expr></argument>,<argument pos:start="27:31" pos:end="27:35"><expr pos:start="27:31" pos:end="27:35"><literal type="string" pos:start="27:31" pos:end="27:35">"CID"</literal></expr></argument>)</argument_list></call><operator pos:start="27:37" pos:end="27:37">)</operator> <operator pos:start="27:39" pos:end="27:40">!=</operator> <name pos:start="27:42" pos:end="27:45">NULL</name></expr>)</condition> <block pos:start="27:48" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:46">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:14">p_name</name> <operator pos:start="29:16" pos:end="29:17">+=</operator> <sizeof pos:start="29:19" pos:end="29:31">sizeof<argument_list pos:start="29:25" pos:end="29:31">(<argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><literal type="string" pos:start="29:26" pos:end="29:30">"CID"</literal></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:70"><expr pos:start="31:9" pos:end="31:69"><call pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:16">snprintf</name><argument_list pos:start="31:17" pos:end="31:69">(<argument pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:23"><name pos:start="31:18" pos:end="31:23">p_name</name></expr></argument>, <argument pos:start="31:26" pos:end="31:55"><expr pos:start="31:26" pos:end="31:55"><sizeof pos:start="31:26" pos:end="31:37">sizeof<argument_list pos:start="31:32" pos:end="31:37">(<argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">desc</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:39" pos:end="31:39">-</operator> <operator pos:start="31:41" pos:end="31:41">(</operator><name pos:start="31:42" pos:end="31:47">p_name</name> <operator pos:start="31:49" pos:end="31:49">-</operator> <name pos:start="31:51" pos:end="31:54">desc</name><operator pos:start="31:55" pos:end="31:55">)</operator></expr></argument>, <argument pos:start="31:58" pos:end="31:63"><expr pos:start="31:58" pos:end="31:63"><literal type="string" pos:start="31:58" pos:end="31:63">"%x\n"</literal></expr></argument>, <argument pos:start="31:66" pos:end="31:68"><expr pos:start="31:66" pos:end="31:68"><name pos:start="31:66" pos:end="31:68">cid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:15">pstrcat</name><argument_list pos:start="33:16" pos:end="33:45">(<argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:20">desc</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><sizeof pos:start="33:23" pos:end="33:34">sizeof<argument_list pos:start="33:29" pos:end="33:34">(<argument pos:start="33:30" pos:end="33:33"><expr pos:start="33:30" pos:end="33:33"><name pos:start="33:30" pos:end="33:33">desc</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:37" pos:end="33:44"><expr pos:start="33:37" pos:end="33:44"><name pos:start="33:37" pos:end="33:44">tmp_desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:72">(<expr pos:start="39:9" pos:end="39:71"><call pos:start="39:9" pos:end="39:67"><name pos:start="39:9" pos:end="39:24">bdrv_pwrite_sync</name><argument_list pos:start="39:25" pos:end="39:67">(<argument pos:start="39:26" pos:end="39:33"><expr pos:start="39:26" pos:end="39:33"><name pos:start="39:26" pos:end="39:33"><name pos:start="39:26" pos:end="39:27">bs</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:33">file</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:49"><expr pos:start="39:36" pos:end="39:49"><name pos:start="39:36" pos:end="39:49"><name pos:start="39:36" pos:end="39:36">s</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:49">desc_offset</name></name></expr></argument>, <argument pos:start="39:52" pos:end="39:55"><expr pos:start="39:52" pos:end="39:55"><name pos:start="39:52" pos:end="39:55">desc</name></expr></argument>, <argument pos:start="39:58" pos:end="39:66"><expr pos:start="39:58" pos:end="39:66"><name pos:start="39:58" pos:end="39:66">DESC_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="39:69" pos:end="39:69">&lt;</operator> <literal type="number" pos:start="39:71" pos:end="39:71">0</literal></expr>)</condition> <block pos:start="39:74" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:20">

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><operator pos:start="41:16" pos:end="41:16">-</operator><name pos:start="41:17" pos:end="41:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
