<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18143.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">dxva_adjust_hwframes</name><parameter_list pos:start="1:33" pos:end="1:86">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:85"><decl pos:start="1:57" pos:end="1:85"><type pos:start="1:57" pos:end="1:85"><name pos:start="1:57" pos:end="1:73">AVHWFramesContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:85">frames_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="106:0">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">FFDXVASharedContext</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">sctx</name> <init pos:start="5:31" pos:end="5:58">= <expr pos:start="5:33" pos:end="5:58"><call pos:start="5:33" pos:end="5:58"><name pos:start="5:33" pos:end="5:51">DXVA_SHARED_CONTEXT</name><argument_list pos:start="5:52" pos:end="5:58">(<argument pos:start="5:53" pos:end="5:57"><expr pos:start="5:53" pos:end="5:57"><name pos:start="5:53" pos:end="5:57">avctx</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:25">surface_alignment</name></decl>, <decl pos:start="7:28" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:39">num_surfaces</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:14">frames_ctx</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:22">format</name></name> <operator pos:start="11:24" pos:end="11:24">=</operator> <name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:29">sctx</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:38">pix_fmt</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="17:62">/* decoding MPEG-2 requires additional alignment on some Intel GPUs,

    but it causes issues for H.264 on certain AMD GPUs..... */</comment>

    <if_stmt pos:start="19:5" pos:end="33:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:50">(<expr pos:start="19:9" pos:end="19:49"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">codec_id</name></name> <operator pos:start="19:25" pos:end="19:26">==</operator> <name pos:start="19:28" pos:end="19:49">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <expr_stmt pos:start="21:9" pos:end="21:31"><expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:25">surface_alignment</name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:30">32</literal></expr>;</expr_stmt></block_content></block></if>

    <comment type="block" pos:start="23:5" pos:end="25:56">/* the HEVC DXVA2 spec asks for 128 pixel aligned surfaces to ensure

    all coding features have enough room to work with */</comment>

    <if type="elseif" pos:start="27:5" pos:end="29:32">else if <condition pos:start="27:13" pos:end="27:49">(<expr pos:start="27:14" pos:end="27:48"><name pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:18">avctx</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:28">codec_id</name></name> <operator pos:start="27:30" pos:end="27:31">==</operator> <name pos:start="27:33" pos:end="27:48">AV_CODEC_ID_HEVC</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:32"><block_content pos:start="29:9" pos:end="29:32">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:25">surface_alignment</name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:31">128</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="31:5" pos:end="33:31">else<block type="pseudo" pos:start="33:9" pos:end="33:31"><block_content pos:start="33:9" pos:end="33:31">

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:25">surface_alignment</name> <operator pos:start="33:27" pos:end="33:27">=</operator> <literal type="number" pos:start="33:29" pos:end="33:30">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:30">/* 4 base work surfaces */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:16">num_surfaces</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:55">/* add surfaces based on number of possible refs */</comment>

    <if_stmt pos:start="45:5" pos:end="51:26"><if pos:start="45:5" pos:end="47:27">if <condition pos:start="45:8" pos:end="45:83">(<expr pos:start="45:9" pos:end="45:82"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">codec_id</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <name pos:start="45:28" pos:end="45:43">AV_CODEC_ID_H264</name> <operator pos:start="45:45" pos:end="45:46">||</operator> <name pos:start="45:48" pos:end="45:62"><name pos:start="45:48" pos:end="45:52">avctx</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:62">codec_id</name></name> <operator pos:start="45:64" pos:end="45:65">==</operator> <name pos:start="45:67" pos:end="45:82">AV_CODEC_ID_HEVC</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:27"><block_content pos:start="47:9" pos:end="47:27">

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:20">num_surfaces</name> <operator pos:start="47:22" pos:end="47:23">+=</operator> <literal type="number" pos:start="47:25" pos:end="47:26">16</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="51:26">else<block type="pseudo" pos:start="51:9" pos:end="51:26"><block_content pos:start="51:9" pos:end="51:26">

        <expr_stmt pos:start="51:9" pos:end="51:26"><expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:20">num_surfaces</name> <operator pos:start="51:22" pos:end="51:23">+=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:48">/* add extra surfaces for frame threading */</comment>

    <if_stmt pos:start="57:5" pos:end="59:44"><if pos:start="57:5" pos:end="59:44">if <condition pos:start="57:8" pos:end="57:52">(<expr pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:13">avctx</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:33">active_thread_type</name></name> <operator pos:start="57:35" pos:end="57:35">&amp;</operator> <name pos:start="57:37" pos:end="57:51">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:44"><block_content pos:start="59:9" pos:end="59:44">

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:20">num_surfaces</name> <operator pos:start="59:22" pos:end="59:23">+=</operator> <name pos:start="59:25" pos:end="59:43"><name pos:start="59:25" pos:end="59:29">avctx</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:43">thread_count</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="65:62"><expr pos:start="63:5" pos:end="65:61"><name pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:14">frames_ctx</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:25">sw_format</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <ternary pos:start="63:29" pos:end="65:61"><condition pos:start="63:29" pos:end="63:71"><expr pos:start="63:29" pos:end="63:69"><name pos:start="63:29" pos:end="63:45"><name pos:start="63:29" pos:end="63:33">avctx</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:45">sw_pix_fmt</name></name> <operator pos:start="63:47" pos:end="63:48">==</operator> <name pos:start="63:50" pos:end="63:69">AV_PIX_FMT_YUV420P10</name></expr> ?</condition><then pos:start="65:29" pos:end="65:43">

                            <expr pos:start="65:29" pos:end="65:43"><name pos:start="65:29" pos:end="65:43">AV_PIX_FMT_P010</name></expr> </then><else pos:start="65:45" pos:end="65:61">: <expr pos:start="65:47" pos:end="65:61"><name pos:start="65:47" pos:end="65:61">AV_PIX_FMT_NV12</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:71"><expr pos:start="67:5" pos:end="67:70"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:14">frames_ctx</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:21">width</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <call pos:start="67:25" pos:end="67:70"><name pos:start="67:25" pos:end="67:31">FFALIGN</name><argument_list pos:start="67:32" pos:end="67:70">(<argument pos:start="67:33" pos:end="67:50"><expr pos:start="67:33" pos:end="67:50"><name pos:start="67:33" pos:end="67:50"><name pos:start="67:33" pos:end="67:37">avctx</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:50">coded_width</name></name></expr></argument>, <argument pos:start="67:53" pos:end="67:69"><expr pos:start="67:53" pos:end="67:69"><name pos:start="67:53" pos:end="67:69">surface_alignment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:14">frames_ctx</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:22">height</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:72"><name pos:start="69:26" pos:end="69:32">FFALIGN</name><argument_list pos:start="69:33" pos:end="69:72">(<argument pos:start="69:34" pos:end="69:52"><expr pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:38">avctx</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:52">coded_height</name></name></expr></argument>, <argument pos:start="69:55" pos:end="69:71"><expr pos:start="69:55" pos:end="69:71"><name pos:start="69:55" pos:end="69:71">surface_alignment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="78:0"><expr pos:start="71:5" pos:end="71:48"><name pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:14">frames_ctx</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:33">initial_pool_size</name></name> <operator pos:start="71:35" pos:end="71:35">=</operator> <name pos:start="71:37" pos:end="71:48">num_surfaces</name></expr>;</expr_stmt>





<cpp:if pos:start="77:1" pos:end="77:16">#<cpp:directive pos:start="77:2" pos:end="77:3">if</cpp:directive> <expr pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="79:5" pos:end="94:0"><if pos:start="79:5" pos:end="94:0">if <condition pos:start="79:8" pos:end="79:51">(<expr pos:start="79:9" pos:end="79:50"><name pos:start="79:9" pos:end="79:26"><name pos:start="79:9" pos:end="79:18">frames_ctx</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:26">format</name></name> <operator pos:start="79:28" pos:end="79:29">==</operator> <name pos:start="79:31" pos:end="79:50">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="79:53" pos:end="94:0">{<block_content pos:start="81:9" pos:end="85:68">

        <decl_stmt pos:start="81:9" pos:end="81:63"><decl pos:start="81:9" pos:end="81:62"><type pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:28">AVDXVA2FramesContext</name> <modifier pos:start="81:30" pos:end="81:30">*</modifier></type><name pos:start="81:31" pos:end="81:42">frames_hwctx</name> <init pos:start="81:44" pos:end="81:62">= <expr pos:start="81:46" pos:end="81:62"><name pos:start="81:46" pos:end="81:62"><name pos:start="81:46" pos:end="81:55">frames_ctx</name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:62">hwctx</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:68"><expr pos:start="85:9" pos:end="85:67"><name pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:20">frames_hwctx</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:34">surface_type</name></name> <operator pos:start="85:36" pos:end="85:36">=</operator> <name pos:start="85:38" pos:end="85:67">DXVA2_VideoDecoderRenderTarget</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="93:1" pos:end="93:18">#<cpp:directive pos:start="93:2" pos:end="93:3">if</cpp:directive> <expr pos:start="93:5" pos:end="93:18"><name pos:start="93:5" pos:end="93:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="95:5" pos:end="106:0"><if pos:start="95:5" pos:end="106:0">if <condition pos:start="95:8" pos:end="95:47">(<expr pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:18">frames_ctx</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:26">format</name></name> <operator pos:start="95:28" pos:end="95:29">==</operator> <name pos:start="95:31" pos:end="95:46">AV_PIX_FMT_D3D11</name></expr>)</condition> <block pos:start="95:49" pos:end="106:0">{<block_content pos:start="97:9" pos:end="101:54">

        <decl_stmt pos:start="97:9" pos:end="97:65"><decl pos:start="97:9" pos:end="97:64"><type pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:30">AVD3D11VAFramesContext</name> <modifier pos:start="97:32" pos:end="97:32">*</modifier></type><name pos:start="97:33" pos:end="97:44">frames_hwctx</name> <init pos:start="97:46" pos:end="97:64">= <expr pos:start="97:48" pos:end="97:64"><name pos:start="97:48" pos:end="97:64"><name pos:start="97:48" pos:end="97:57">frames_ctx</name><operator pos:start="97:58" pos:end="97:59">-&gt;</operator><name pos:start="97:60" pos:end="97:64">hwctx</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:54"><expr pos:start="101:9" pos:end="101:53"><name pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:20">frames_hwctx</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:31">BindFlags</name></name> <operator pos:start="101:33" pos:end="101:34">|=</operator> <name pos:start="101:36" pos:end="101:53">D3D11_BIND_DECODER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="105:1" pos:end="105:6">#<cpp:directive pos:start="105:2" pos:end="105:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
