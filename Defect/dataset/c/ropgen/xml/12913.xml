<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12913.c" pos:tabs="8"><function pos:start="1:1" pos:end="679:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">output_packet</name><parameter_list pos:start="1:25" pos:end="5:45">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:36">InputStream</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">ist</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:56">ist_index</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:48"><decl pos:start="3:26" pos:end="3:48"><type pos:start="3:26" pos:end="3:48"><name pos:start="3:26" pos:end="3:37">OutputStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:48">ost_table</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:65">nb_ostreams</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:44"><decl pos:start="5:26" pos:end="5:44"><type pos:start="5:26" pos:end="5:44"><specifier pos:start="5:26" pos:end="5:30">const</specifier> <name pos:start="5:32" pos:end="5:39">AVPacket</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:44">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="679:1">{<block_content pos:start="9:5" pos:end="677:13">

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">OutputStream</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">got_output</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:24">buffer_to_free</name> <init pos:start="17:26" pos:end="17:31">= <expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:39"><type pos:start="19:5" pos:end="19:23"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:19">unsigned</name> <name pos:start="19:21" pos:end="19:23">int</name></type> <name pos:start="19:25" pos:end="19:36">samples_size</name><init pos:start="19:37" pos:end="19:39">= <expr pos:start="19:39" pos:end="19:39"><literal type="number" pos:start="19:39" pos:end="19:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:43"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:14">AVSubtitle</name></type> <name pos:start="21:16" pos:end="21:23">subtitle</name></decl>, <decl pos:start="21:26" pos:end="21:42"><type ref="prev" pos:start="21:5" pos:end="21:14"><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:42">subtitle_to_free</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="26:0"><decl pos:start="23:5" pos:end="23:36"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:19">pkt_pts</name> <init pos:start="23:21" pos:end="23:36">= <expr pos:start="23:23" pos:end="23:36"><name pos:start="23:23" pos:end="23:36">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="25:1" pos:end="25:19">#<cpp:directive pos:start="25:2" pos:end="25:3">if</cpp:directive> <expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <decl_stmt pos:start="27:5" pos:end="30:0"><decl pos:start="27:5" pos:end="27:23"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:23">frame_available</name></decl>;</decl_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="31:5" pos:end="31:18"><decl pos:start="31:5" pos:end="31:17"><type pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:9">float</name></type> <name pos:start="31:11" pos:end="31:17">quality</name></decl>;</decl_stmt>



    <decl_stmt pos:start="35:5" pos:end="35:19"><decl pos:start="35:5" pos:end="35:18"><type pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:12">AVPacket</name></type> <name pos:start="35:14" pos:end="35:18">avpkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:66"><decl pos:start="37:5" pos:end="37:65"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:11">bps</name> <init pos:start="37:13" pos:end="37:65">= <expr pos:start="37:15" pos:end="37:65"><call pos:start="37:15" pos:end="37:65"><name pos:start="37:15" pos:end="37:37">av_get_bytes_per_sample</name><argument_list pos:start="37:38" pos:end="37:65">(<argument pos:start="37:39" pos:end="37:64"><expr pos:start="37:39" pos:end="37:64"><name pos:start="37:39" pos:end="37:64"><name pos:start="37:39" pos:end="37:41">ist</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:45">st</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:52">codec</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:64">sample_fmt</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="41:5" pos:end="43:32"><if pos:start="41:5" pos:end="43:32">if<condition pos:start="41:7" pos:end="41:39">(<expr pos:start="41:8" pos:end="41:38"><name pos:start="41:8" pos:end="41:20"><name pos:start="41:8" pos:end="41:10">ist</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:20">next_pts</name></name> <operator pos:start="41:22" pos:end="41:23">==</operator> <name pos:start="41:25" pos:end="41:38">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:32"><block_content pos:start="43:9" pos:end="43:32">

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">ist</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:21">next_pts</name></name><operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:31"><name pos:start="43:24" pos:end="43:26">ist</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:31">pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="63:5"><if pos:start="47:5" pos:end="59:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:11">pkt</name> <operator pos:start="47:13" pos:end="47:14">==</operator> <name pos:start="47:16" pos:end="47:19">NULL</name></expr>)</condition> <block pos:start="47:22" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:24">

        <comment type="block" pos:start="49:9" pos:end="49:26">/* EOF handling */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:22">av_init_packet</name><argument_list pos:start="51:23" pos:end="51:30">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:29">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:13">avpkt</name><operator pos:start="53:14" pos:end="53:14">.</operator><name pos:start="53:15" pos:end="53:18">data</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:25">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:13">avpkt</name><operator pos:start="55:14" pos:end="55:14">.</operator><name pos:start="55:15" pos:end="55:18">size</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:24">goto <name pos:start="57:14" pos:end="57:23">handle_eof</name>;</goto>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:21">

        <expr_stmt pos:start="61:9" pos:end="61:21"><expr pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:13">avpkt</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <operator pos:start="61:17" pos:end="61:17">*</operator><name pos:start="61:18" pos:end="61:20">pkt</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="69:94"><if pos:start="67:5" pos:end="69:94">if<condition pos:start="67:7" pos:end="67:34">(<expr pos:start="67:8" pos:end="67:33"><name pos:start="67:8" pos:end="67:15"><name pos:start="67:8" pos:end="67:10">pkt</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:15">dts</name></name> <operator pos:start="67:17" pos:end="67:18">!=</operator> <name pos:start="67:20" pos:end="67:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:94"><block_content pos:start="69:9" pos:end="69:94">

        <expr_stmt pos:start="69:9" pos:end="69:94"><expr pos:start="69:9" pos:end="69:93"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">ist</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:21">next_pts</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:32"><name pos:start="69:25" pos:end="69:27">ist</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:32">pts</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <call pos:start="69:36" pos:end="69:93"><name pos:start="69:36" pos:end="69:47">av_rescale_q</name><argument_list pos:start="69:48" pos:end="69:93">(<argument pos:start="69:49" pos:end="69:56"><expr pos:start="69:49" pos:end="69:56"><name pos:start="69:49" pos:end="69:56"><name pos:start="69:49" pos:end="69:51">pkt</name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:56">dts</name></name></expr></argument>, <argument pos:start="69:59" pos:end="69:76"><expr pos:start="69:59" pos:end="69:76"><name pos:start="69:59" pos:end="69:76"><name pos:start="69:59" pos:end="69:61">ist</name><operator pos:start="69:62" pos:end="69:63">-&gt;</operator><name pos:start="69:64" pos:end="69:65">st</name><operator pos:start="69:66" pos:end="69:67">-&gt;</operator><name pos:start="69:68" pos:end="69:76">time_base</name></name></expr></argument>, <argument pos:start="69:79" pos:end="69:92"><expr pos:start="69:79" pos:end="69:92"><name pos:start="69:79" pos:end="69:92">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="73:77"><if pos:start="71:5" pos:end="73:77">if<condition pos:start="71:7" pos:end="71:34">(<expr pos:start="71:8" pos:end="71:33"><name pos:start="71:8" pos:end="71:15"><name pos:start="71:8" pos:end="71:10">pkt</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:15">pts</name></name> <operator pos:start="71:17" pos:end="71:18">!=</operator> <name pos:start="71:20" pos:end="71:33">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:77"><block_content pos:start="73:9" pos:end="73:77">

        <expr_stmt pos:start="73:9" pos:end="73:77"><expr pos:start="73:9" pos:end="73:76"><name pos:start="73:9" pos:end="73:15">pkt_pts</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:76"><name pos:start="73:19" pos:end="73:30">av_rescale_q</name><argument_list pos:start="73:31" pos:end="73:76">(<argument pos:start="73:32" pos:end="73:39"><expr pos:start="73:32" pos:end="73:39"><name pos:start="73:32" pos:end="73:39"><name pos:start="73:32" pos:end="73:34">pkt</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:39">pts</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:59"><expr pos:start="73:42" pos:end="73:59"><name pos:start="73:42" pos:end="73:59"><name pos:start="73:42" pos:end="73:44">ist</name><operator pos:start="73:45" pos:end="73:46">-&gt;</operator><name pos:start="73:47" pos:end="73:48">st</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:59">time_base</name></name></expr></argument>, <argument pos:start="73:62" pos:end="73:75"><expr pos:start="73:62" pos:end="73:75"><name pos:start="73:62" pos:end="73:75">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="77:5" pos:end="77:83">//while we have more to decode or while the decoder did output something on EOF</comment>

    <while pos:start="79:5" pos:end="671:5">while <condition pos:start="79:11" pos:end="79:50">(<expr pos:start="79:12" pos:end="79:49"><name pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:16">avpkt</name><operator pos:start="79:17" pos:end="79:17">.</operator><name pos:start="79:18" pos:end="79:21">size</name></name> <operator pos:start="79:23" pos:end="79:23">&gt;</operator> <literal type="number" pos:start="79:25" pos:end="79:25">0</literal> <operator pos:start="79:27" pos:end="79:28">||</operator> <operator pos:start="79:30" pos:end="79:30">(</operator><operator pos:start="79:31" pos:end="79:31">!</operator><name pos:start="79:32" pos:end="79:34">pkt</name> <operator pos:start="79:36" pos:end="79:37">&amp;&amp;</operator> <name pos:start="79:39" pos:end="79:48">got_output</name><operator pos:start="79:49" pos:end="79:49">)</operator></expr>)</condition> <block pos:start="79:52" pos:end="671:5">{<block_content pos:start="81:9" pos:end="669:23">

        <decl_stmt pos:start="81:9" pos:end="81:45"><decl pos:start="81:9" pos:end="81:25"><type pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:15">uint8_t</name> <modifier pos:start="81:17" pos:end="81:17">*</modifier></type><name pos:start="81:18" pos:end="81:25">data_buf</name></decl>, <decl pos:start="81:28" pos:end="81:44"><type ref="prev" pos:start="81:9" pos:end="81:17"><modifier pos:start="81:28" pos:end="81:28">*</modifier></type><name pos:start="81:29" pos:end="81:44">decoded_data_buf</name></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:41"><decl pos:start="83:9" pos:end="83:21"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:21">data_size</name></decl>, <decl pos:start="83:24" pos:end="83:40"><type ref="prev" pos:start="83:9" pos:end="83:11"/><name pos:start="83:24" pos:end="83:40">decoded_data_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:48"><decl pos:start="85:9" pos:end="85:30"><type pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:15">AVFrame</name> <modifier pos:start="85:17" pos:end="85:17">*</modifier></type><name pos:start="85:18" pos:end="85:30">decoded_frame</name></decl>, <decl pos:start="85:33" pos:end="85:47"><type ref="prev" pos:start="85:9" pos:end="85:17"><modifier pos:start="85:33" pos:end="85:33">*</modifier></type><name pos:start="85:34" pos:end="85:47">filtered_frame</name></decl>;</decl_stmt>

    <label pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:14">handle_eof</name>:</label>

        <expr_stmt pos:start="89:9" pos:end="89:32"><expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:16"><name pos:start="89:9" pos:end="89:11">ist</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:16">pts</name></name><operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:31"><name pos:start="89:19" pos:end="89:21">ist</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:31">next_pts</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="93:9" pos:end="97:86"><if pos:start="93:9" pos:end="97:86">if<condition pos:start="93:11" pos:end="93:49">(<expr pos:start="93:12" pos:end="93:48"><name pos:start="93:12" pos:end="93:21"><name pos:start="93:12" pos:end="93:16">avpkt</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:21">size</name></name> <operator pos:start="93:23" pos:end="93:24">&amp;&amp;</operator> <name pos:start="93:26" pos:end="93:35"><name pos:start="93:26" pos:end="93:30">avpkt</name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:35">size</name></name> <operator pos:start="93:37" pos:end="93:38">!=</operator> <name pos:start="93:40" pos:end="93:48"><name pos:start="93:40" pos:end="93:42">pkt</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:48">size</name></name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="97:86"><block_content pos:start="95:13" pos:end="97:86">

            <expr_stmt pos:start="95:13" pos:end="97:86"><expr pos:start="95:13" pos:end="97:85"><call pos:start="95:13" pos:end="97:85"><name pos:start="95:13" pos:end="95:18">av_log</name><argument_list pos:start="95:19" pos:end="97:85">(<argument pos:start="95:20" pos:end="95:23"><expr pos:start="95:20" pos:end="95:23"><name pos:start="95:20" pos:end="95:23">NULL</name></expr></argument>, <argument pos:start="95:26" pos:end="95:91"><expr pos:start="95:26" pos:end="95:91"><ternary pos:start="95:26" pos:end="95:91"><condition pos:start="95:26" pos:end="95:59"><expr pos:start="95:26" pos:end="95:57"><name pos:start="95:26" pos:end="95:57"><name pos:start="95:26" pos:end="95:28">ist</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:57">showed_multi_packet_warning</name></name></expr> ?</condition><then pos:start="95:61" pos:end="95:74"> <expr pos:start="95:61" pos:end="95:74"><name pos:start="95:61" pos:end="95:74">AV_LOG_VERBOSE</name></expr> </then><else pos:start="95:76" pos:end="95:91">: <expr pos:start="95:78" pos:end="95:91"><name pos:start="95:78" pos:end="95:91">AV_LOG_WARNING</name></expr></else></ternary></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:65"><expr pos:start="97:20" pos:end="97:65"><literal type="string" pos:start="97:20" pos:end="97:65">"Multiple frames in a packet from stream %d\n"</literal></expr></argument>, <argument pos:start="97:68" pos:end="97:84"><expr pos:start="97:68" pos:end="97:84"><name pos:start="97:68" pos:end="97:84"><name pos:start="97:68" pos:end="97:70">pkt</name><operator pos:start="97:71" pos:end="97:72">-&gt;</operator><name pos:start="97:73" pos:end="97:84">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:47"><expr pos:start="99:13" pos:end="99:46"><name pos:start="99:13" pos:end="99:44"><name pos:start="99:13" pos:end="99:15">ist</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:44">showed_multi_packet_warning</name></name><operator pos:start="99:45" pos:end="99:45">=</operator><literal type="number" pos:start="99:46" pos:end="99:46">1</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="103:9" pos:end="103:41">/* decode the packet if needed */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:21">decoded_frame</name>    <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:41">filtered_frame</name> <operator pos:start="105:43" pos:end="105:43">=</operator> <name pos:start="105:45" pos:end="105:48">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:32"><expr pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:24">decoded_data_buf</name> <operator pos:start="107:26" pos:end="107:26">=</operator> <name pos:start="107:28" pos:end="107:31">NULL</name></expr>;</expr_stmt> <comment type="block" pos:start="107:34" pos:end="107:48">/* fail safe */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:29"><expr pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:25">decoded_data_size</name><operator pos:start="109:26" pos:end="109:26">=</operator> <literal type="number" pos:start="109:28" pos:end="109:28">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:16">data_buf</name>  <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:30"><name pos:start="111:21" pos:end="111:25">avpkt</name><operator pos:start="111:26" pos:end="111:26">.</operator><name pos:start="111:27" pos:end="111:30">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:31"><expr pos:start="113:9" pos:end="113:30"><name pos:start="113:9" pos:end="113:17">data_size</name> <operator pos:start="113:19" pos:end="113:19">=</operator> <name pos:start="113:21" pos:end="113:30"><name pos:start="113:21" pos:end="113:25">avpkt</name><operator pos:start="113:26" pos:end="113:26">.</operator><name pos:start="113:27" pos:end="113:30">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:32"><expr pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:24">subtitle_to_free</name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:31">NULL</name></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="298:0"><if pos:start="117:9" pos:end="261:9">if <condition pos:start="117:12" pos:end="117:33">(<expr pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:15">ist</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:32">decoding_needed</name></name></expr>)</condition> <block pos:start="117:35" pos:end="261:9">{<block_content pos:start="119:13" pos:end="259:13">

            <switch pos:start="119:13" pos:end="259:13">switch<condition pos:start="119:19" pos:end="119:46">(<expr pos:start="119:20" pos:end="119:45"><name pos:start="119:20" pos:end="119:45"><name pos:start="119:20" pos:end="119:22">ist</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:26">st</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:33">codec</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:45">codec_type</name></name></expr>)</condition> <block pos:start="119:48" pos:end="259:13">{<block_content pos:start="121:13" pos:end="257:26">

            <case pos:start="121:13" pos:end="121:36">case <expr pos:start="121:18" pos:end="121:35"><name pos:start="121:18" pos:end="121:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case><block pos:start="121:37" pos:end="173:23">{<block_content pos:start="123:17" pos:end="173:22">

                <if_stmt pos:start="123:17" pos:end="131:17"><if pos:start="123:17" pos:end="131:17">if<condition pos:start="123:19" pos:end="123:105">(<expr pos:start="123:20" pos:end="123:104"><name pos:start="123:20" pos:end="123:22">pkt</name> <operator pos:start="123:24" pos:end="123:25">&amp;&amp;</operator> <name pos:start="123:27" pos:end="123:38">samples_size</name> <operator pos:start="123:40" pos:end="123:40">&lt;</operator> <call pos:start="123:42" pos:end="123:104"><name pos:start="123:42" pos:end="123:46">FFMAX</name><argument_list pos:start="123:47" pos:end="123:104">(<argument pos:start="123:48" pos:end="123:73"><expr pos:start="123:48" pos:end="123:73"><name pos:start="123:48" pos:end="123:56"><name pos:start="123:48" pos:end="123:50">pkt</name><operator pos:start="123:51" pos:end="123:52">-&gt;</operator><name pos:start="123:53" pos:end="123:56">size</name></name><operator pos:start="123:57" pos:end="123:57">*</operator><sizeof pos:start="123:58" pos:end="123:73">sizeof<argument_list pos:start="123:64" pos:end="123:73">(<argument pos:start="123:65" pos:end="123:72"><expr pos:start="123:65" pos:end="123:72"><operator pos:start="123:65" pos:end="123:65">*</operator><name pos:start="123:66" pos:end="123:72">samples</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="123:76" pos:end="123:103"><expr pos:start="123:76" pos:end="123:103"><name pos:start="123:76" pos:end="123:103">AVCODEC_MAX_AUDIO_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:107" pos:end="131:17">{<block_content pos:start="125:21" pos:end="129:53">

                    <expr_stmt pos:start="125:21" pos:end="125:99"><expr pos:start="125:21" pos:end="125:98"><name pos:start="125:21" pos:end="125:32">samples_size</name> <operator pos:start="125:34" pos:end="125:34">=</operator> <call pos:start="125:36" pos:end="125:98"><name pos:start="125:36" pos:end="125:40">FFMAX</name><argument_list pos:start="125:41" pos:end="125:98">(<argument pos:start="125:42" pos:end="125:67"><expr pos:start="125:42" pos:end="125:67"><name pos:start="125:42" pos:end="125:50"><name pos:start="125:42" pos:end="125:44">pkt</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:50">size</name></name><operator pos:start="125:51" pos:end="125:51">*</operator><sizeof pos:start="125:52" pos:end="125:67">sizeof<argument_list pos:start="125:58" pos:end="125:67">(<argument pos:start="125:59" pos:end="125:66"><expr pos:start="125:59" pos:end="125:66"><operator pos:start="125:59" pos:end="125:59">*</operator><name pos:start="125:60" pos:end="125:66">samples</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="125:70" pos:end="125:97"><expr pos:start="125:70" pos:end="125:97"><name pos:start="125:70" pos:end="125:97">AVCODEC_MAX_AUDIO_FRAME_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="127:21" pos:end="127:37"><expr pos:start="127:21" pos:end="127:36"><call pos:start="127:21" pos:end="127:36"><name pos:start="127:21" pos:end="127:27">av_free</name><argument_list pos:start="127:28" pos:end="127:36">(<argument pos:start="127:29" pos:end="127:35"><expr pos:start="127:29" pos:end="127:35"><name pos:start="127:29" pos:end="127:35">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="129:21" pos:end="129:53"><expr pos:start="129:21" pos:end="129:52"><name pos:start="129:21" pos:end="129:27">samples</name><operator pos:start="129:28" pos:end="129:28">=</operator> <call pos:start="129:30" pos:end="129:52"><name pos:start="129:30" pos:end="129:38">av_malloc</name><argument_list pos:start="129:39" pos:end="129:52">(<argument pos:start="129:40" pos:end="129:51"><expr pos:start="129:40" pos:end="129:51"><name pos:start="129:40" pos:end="129:51">samples_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:48"><expr pos:start="133:17" pos:end="133:47"><name pos:start="133:17" pos:end="133:33">decoded_data_size</name><operator pos:start="133:34" pos:end="133:34">=</operator> <name pos:start="133:36" pos:end="133:47">samples_size</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="135:21" pos:end="137:43">/* XXX: could avoid copy if PCM 16 bits with same

                       endianness as CPU */</comment>

                <expr_stmt pos:start="139:17" pos:end="141:52"><expr pos:start="139:17" pos:end="141:51"><name pos:start="139:17" pos:end="139:19">ret</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <call pos:start="139:23" pos:end="141:51"><name pos:start="139:23" pos:end="139:43">avcodec_decode_audio3</name><argument_list pos:start="139:44" pos:end="141:51">(<argument pos:start="139:45" pos:end="139:58"><expr pos:start="139:45" pos:end="139:58"><name pos:start="139:45" pos:end="139:58"><name pos:start="139:45" pos:end="139:47">ist</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:51">st</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:58">codec</name></name></expr></argument>, <argument pos:start="139:61" pos:end="139:67"><expr pos:start="139:61" pos:end="139:67"><name pos:start="139:61" pos:end="139:67">samples</name></expr></argument>, <argument pos:start="139:70" pos:end="139:87"><expr pos:start="139:70" pos:end="139:87"><operator pos:start="139:70" pos:end="139:70">&amp;</operator><name pos:start="139:71" pos:end="139:87">decoded_data_size</name></expr></argument>,

                                            <argument pos:start="141:45" pos:end="141:50"><expr pos:start="141:45" pos:end="141:50"><operator pos:start="141:45" pos:end="141:45">&amp;</operator><name pos:start="141:46" pos:end="141:50">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="143:17" pos:end="145:31"><if pos:start="143:17" pos:end="145:31">if <condition pos:start="143:20" pos:end="143:28">(<expr pos:start="143:21" pos:end="143:27"><name pos:start="143:21" pos:end="143:23">ret</name> <operator pos:start="143:25" pos:end="143:25">&lt;</operator> <literal type="number" pos:start="143:27" pos:end="143:27">0</literal></expr>)</condition><block type="pseudo" pos:start="145:21" pos:end="145:31"><block_content pos:start="145:21" pos:end="145:31">

                    <return pos:start="145:21" pos:end="145:31">return <expr pos:start="145:28" pos:end="145:30"><name pos:start="145:28" pos:end="145:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:34"><expr pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:26"><name pos:start="147:17" pos:end="147:21">avpkt</name><operator pos:start="147:22" pos:end="147:22">.</operator><name pos:start="147:23" pos:end="147:26">data</name></name> <operator pos:start="147:28" pos:end="147:29">+=</operator> <name pos:start="147:31" pos:end="147:33">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:34"><expr pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:26"><name pos:start="149:17" pos:end="149:21">avpkt</name><operator pos:start="149:22" pos:end="149:22">.</operator><name pos:start="149:23" pos:end="149:26">size</name></name> <operator pos:start="149:28" pos:end="149:29">-=</operator> <name pos:start="149:31" pos:end="149:33">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:34"><expr pos:start="151:17" pos:end="151:33"><name pos:start="151:17" pos:end="151:25">data_size</name>   <operator pos:start="151:29" pos:end="151:29">=</operator> <name pos:start="151:31" pos:end="151:33">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:52"><expr pos:start="153:17" pos:end="153:51"><name pos:start="153:17" pos:end="153:26">got_output</name>  <operator pos:start="153:29" pos:end="153:29">=</operator> <name pos:start="153:31" pos:end="153:47">decoded_data_size</name> <operator pos:start="153:49" pos:end="153:49">&gt;</operator> <literal type="number" pos:start="153:51" pos:end="153:51">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="155:17" pos:end="155:58">/* Some bug in mpeg audio decoder gives */</comment>

                <comment type="block" pos:start="157:17" pos:end="157:72">/* decoded_data_size &lt; 0, it seems they are overflows */</comment>

                <if_stmt pos:start="159:17" pos:end="165:17"><if pos:start="159:17" pos:end="165:17">if <condition pos:start="159:20" pos:end="159:32">(<expr pos:start="159:21" pos:end="159:31"><operator pos:start="159:21" pos:end="159:21">!</operator><name pos:start="159:22" pos:end="159:31">got_output</name></expr>)</condition> <block pos:start="159:34" pos:end="165:17">{<block_content pos:start="163:21" pos:end="163:29">

                    <comment type="block" pos:start="161:21" pos:end="161:40">/* no audio frame */</comment>

                    <continue pos:start="163:21" pos:end="163:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:54"><expr pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:32">decoded_data_buf</name> <operator pos:start="167:34" pos:end="167:34">=</operator> <operator pos:start="167:36" pos:end="167:36">(</operator><name pos:start="167:37" pos:end="167:43">uint8_t</name> <operator pos:start="167:45" pos:end="167:45">*</operator><operator pos:start="167:46" pos:end="167:46">)</operator><name pos:start="167:47" pos:end="167:53">samples</name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="171:77"><expr pos:start="169:17" pos:end="171:76"><name pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:19">ist</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:29">next_pts</name></name> <operator pos:start="169:31" pos:end="169:32">+=</operator> <operator pos:start="169:34" pos:end="169:34">(</operator><operator pos:start="169:35" pos:end="169:35">(</operator><name pos:start="169:36" pos:end="169:42">int64_t</name><operator pos:start="169:43" pos:end="169:43">)</operator><name pos:start="169:44" pos:end="169:55">AV_TIME_BASE</name><operator pos:start="169:56" pos:end="169:56">/</operator><name pos:start="169:57" pos:end="169:59">bps</name> <operator pos:start="169:61" pos:end="169:61">*</operator> <name pos:start="169:63" pos:end="169:79">decoded_data_size</name><operator pos:start="169:80" pos:end="169:80">)</operator> <operator pos:start="169:82" pos:end="169:82">/</operator>

                    <operator pos:start="171:21" pos:end="171:21">(</operator><name pos:start="171:22" pos:end="171:48"><name pos:start="171:22" pos:end="171:24">ist</name><operator pos:start="171:25" pos:end="171:26">-&gt;</operator><name pos:start="171:27" pos:end="171:28">st</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:35">codec</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:48">sample_rate</name></name> <operator pos:start="171:50" pos:end="171:50">*</operator> <name pos:start="171:52" pos:end="171:75"><name pos:start="171:52" pos:end="171:54">ist</name><operator pos:start="171:55" pos:end="171:56">-&gt;</operator><name pos:start="171:57" pos:end="171:58">st</name><operator pos:start="171:59" pos:end="171:60">-&gt;</operator><name pos:start="171:61" pos:end="171:65">codec</name><operator pos:start="171:66" pos:end="171:67">-&gt;</operator><name pos:start="171:68" pos:end="171:75">channels</name></name><operator pos:start="171:76" pos:end="171:76">)</operator></expr>;</expr_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break></block_content>}</block>

            <case pos:start="175:13" pos:end="175:36">case <expr pos:start="175:18" pos:end="175:35"><name pos:start="175:18" pos:end="175:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                    <expr_stmt pos:start="177:21" pos:end="177:97"><expr pos:start="177:21" pos:end="177:96"><name pos:start="177:21" pos:end="177:37">decoded_data_size</name> <operator pos:start="177:39" pos:end="177:39">=</operator> <operator pos:start="177:41" pos:end="177:41">(</operator><name pos:start="177:42" pos:end="177:62"><name pos:start="177:42" pos:end="177:44">ist</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:48">st</name><operator pos:start="177:49" pos:end="177:50">-&gt;</operator><name pos:start="177:51" pos:end="177:55">codec</name><operator pos:start="177:56" pos:end="177:57">-&gt;</operator><name pos:start="177:58" pos:end="177:62">width</name></name> <operator pos:start="177:64" pos:end="177:64">*</operator> <name pos:start="177:66" pos:end="177:87"><name pos:start="177:66" pos:end="177:68">ist</name><operator pos:start="177:69" pos:end="177:70">-&gt;</operator><name pos:start="177:71" pos:end="177:72">st</name><operator pos:start="177:73" pos:end="177:74">-&gt;</operator><name pos:start="177:75" pos:end="177:79">codec</name><operator pos:start="177:80" pos:end="177:81">-&gt;</operator><name pos:start="177:82" pos:end="177:87">height</name></name> <operator pos:start="177:89" pos:end="177:89">*</operator> <literal type="number" pos:start="177:91" pos:end="177:91">3</literal><operator pos:start="177:92" pos:end="177:92">)</operator> <operator pos:start="177:94" pos:end="177:94">/</operator> <literal type="number" pos:start="177:96" pos:end="177:96">2</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="179:21" pos:end="181:47"><if pos:start="179:21" pos:end="181:47">if <condition pos:start="179:24" pos:end="179:65">(<expr pos:start="179:25" pos:end="179:64"><operator pos:start="179:25" pos:end="179:25">!</operator><operator pos:start="179:26" pos:end="179:26">(</operator><name pos:start="179:27" pos:end="179:39">decoded_frame</name> <operator pos:start="179:41" pos:end="179:41">=</operator> <call pos:start="179:43" pos:end="179:63"><name pos:start="179:43" pos:end="179:61">avcodec_alloc_frame</name><argument_list pos:start="179:62" pos:end="179:63">()</argument_list></call><operator pos:start="179:64" pos:end="179:64">)</operator></expr>)</condition><block type="pseudo" pos:start="181:25" pos:end="181:47"><block_content pos:start="181:25" pos:end="181:47">

                        <return pos:start="181:25" pos:end="181:47">return <expr pos:start="181:32" pos:end="181:46"><call pos:start="181:32" pos:end="181:46"><name pos:start="181:32" pos:end="181:38">AVERROR</name><argument_list pos:start="181:39" pos:end="181:46">(<argument pos:start="181:40" pos:end="181:45"><expr pos:start="181:40" pos:end="181:45"><name pos:start="181:40" pos:end="181:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:40"><expr pos:start="183:21" pos:end="183:39"><name pos:start="183:21" pos:end="183:29"><name pos:start="183:21" pos:end="183:25">avpkt</name><operator pos:start="183:26" pos:end="183:26">.</operator><name pos:start="183:27" pos:end="183:29">pts</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <name pos:start="183:33" pos:end="183:39">pkt_pts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:41"><expr pos:start="185:21" pos:end="185:40"><name pos:start="185:21" pos:end="185:29"><name pos:start="185:21" pos:end="185:25">avpkt</name><operator pos:start="185:26" pos:end="185:26">.</operator><name pos:start="185:27" pos:end="185:29">dts</name></name> <operator pos:start="185:31" pos:end="185:31">=</operator> <name pos:start="185:33" pos:end="185:40"><name pos:start="185:33" pos:end="185:35">ist</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:40">pts</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:45"><expr pos:start="187:21" pos:end="187:44"><name pos:start="187:21" pos:end="187:27">pkt_pts</name> <operator pos:start="187:29" pos:end="187:29">=</operator> <name pos:start="187:31" pos:end="187:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="191:21" pos:end="193:84"><expr pos:start="191:21" pos:end="193:83"><name pos:start="191:21" pos:end="191:23">ret</name> <operator pos:start="191:25" pos:end="191:25">=</operator> <call pos:start="191:27" pos:end="193:83"><name pos:start="191:27" pos:end="191:47">avcodec_decode_video2</name><argument_list pos:start="191:48" pos:end="193:83">(<argument pos:start="191:49" pos:end="191:62"><expr pos:start="191:49" pos:end="191:62"><name pos:start="191:49" pos:end="191:62"><name pos:start="191:49" pos:end="191:51">ist</name><operator pos:start="191:52" pos:end="191:53">-&gt;</operator><name pos:start="191:54" pos:end="191:55">st</name><operator pos:start="191:56" pos:end="191:57">-&gt;</operator><name pos:start="191:58" pos:end="191:62">codec</name></name></expr></argument>,

                                                <argument pos:start="193:49" pos:end="193:61"><expr pos:start="193:49" pos:end="193:61"><name pos:start="193:49" pos:end="193:61">decoded_frame</name></expr></argument>, <argument pos:start="193:64" pos:end="193:74"><expr pos:start="193:64" pos:end="193:74"><operator pos:start="193:64" pos:end="193:64">&amp;</operator><name pos:start="193:65" pos:end="193:74">got_output</name></expr></argument>, <argument pos:start="193:77" pos:end="193:82"><expr pos:start="193:77" pos:end="193:82"><operator pos:start="193:77" pos:end="193:77">&amp;</operator><name pos:start="193:78" pos:end="193:82">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:70"><expr pos:start="195:21" pos:end="195:69"><name pos:start="195:21" pos:end="195:27">quality</name> <operator pos:start="195:29" pos:end="195:29">=</operator> <ternary pos:start="195:31" pos:end="195:69"><condition pos:start="195:31" pos:end="195:42"><expr pos:start="195:31" pos:end="195:40"><name pos:start="195:31" pos:end="195:40">same_quant</name></expr> ?</condition><then pos:start="195:44" pos:end="195:65"> <expr pos:start="195:44" pos:end="195:65"><name pos:start="195:44" pos:end="195:65"><name pos:start="195:44" pos:end="195:56">decoded_frame</name><operator pos:start="195:57" pos:end="195:58">-&gt;</operator><name pos:start="195:59" pos:end="195:65">quality</name></name></expr> </then><else pos:start="195:67" pos:end="195:69">: <expr pos:start="195:69" pos:end="195:69"><literal type="number" pos:start="195:69" pos:end="195:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

                    <if_stmt pos:start="197:21" pos:end="199:34"><if pos:start="197:21" pos:end="199:34">if <condition pos:start="197:24" pos:end="197:32">(<expr pos:start="197:25" pos:end="197:31"><name pos:start="197:25" pos:end="197:27">ret</name> <operator pos:start="197:29" pos:end="197:29">&lt;</operator> <literal type="number" pos:start="197:31" pos:end="197:31">0</literal></expr>)</condition><block type="pseudo" pos:start="199:25" pos:end="199:34"><block_content pos:start="199:25" pos:end="199:34">

                        <goto pos:start="199:25" pos:end="199:34">goto <name pos:start="199:30" pos:end="199:33">fail</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="201:21" pos:end="209:21"><if pos:start="201:21" pos:end="209:21">if <condition pos:start="201:24" pos:end="201:36">(<expr pos:start="201:25" pos:end="201:35"><operator pos:start="201:25" pos:end="201:25">!</operator><name pos:start="201:26" pos:end="201:35">got_output</name></expr>)</condition> <block pos:start="201:38" pos:end="209:21">{<block_content pos:start="205:25" pos:end="207:44">

                        <comment type="block" pos:start="203:25" pos:end="203:44">/* no picture yet */</comment>

                        <expr_stmt pos:start="205:25" pos:end="205:49"><expr pos:start="205:25" pos:end="205:48"><call pos:start="205:25" pos:end="205:48"><name pos:start="205:25" pos:end="205:32">av_freep</name><argument_list pos:start="205:33" pos:end="205:48">(<argument pos:start="205:34" pos:end="205:47"><expr pos:start="205:34" pos:end="205:47"><operator pos:start="205:34" pos:end="205:34">&amp;</operator><name pos:start="205:35" pos:end="205:47">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="207:25" pos:end="207:44">goto <name pos:start="207:30" pos:end="207:43">discard_packet</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:84"><expr pos:start="211:21" pos:end="211:83"><name pos:start="211:21" pos:end="211:33"><name pos:start="211:21" pos:end="211:23">ist</name><operator pos:start="211:24" pos:end="211:25">-&gt;</operator><name pos:start="211:26" pos:end="211:33">next_pts</name></name> <operator pos:start="211:35" pos:end="211:35">=</operator> <name pos:start="211:37" pos:end="211:44"><name pos:start="211:37" pos:end="211:39">ist</name><operator pos:start="211:40" pos:end="211:41">-&gt;</operator><name pos:start="211:42" pos:end="211:44">pts</name></name> <operator pos:start="211:46" pos:end="211:46">=</operator> <name pos:start="211:48" pos:end="211:83"><name pos:start="211:48" pos:end="211:60">decoded_frame</name><operator pos:start="211:61" pos:end="211:62">-&gt;</operator><name pos:start="211:63" pos:end="211:83">best_effort_timestamp</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="213:21" pos:end="223:21"><if pos:start="213:21" pos:end="223:21">if <condition pos:start="213:24" pos:end="213:59">(<expr pos:start="213:25" pos:end="213:58"><name pos:start="213:25" pos:end="213:53"><name pos:start="213:25" pos:end="213:27">ist</name><operator pos:start="213:28" pos:end="213:29">-&gt;</operator><name pos:start="213:30" pos:end="213:31">st</name><operator pos:start="213:32" pos:end="213:33">-&gt;</operator><name pos:start="213:34" pos:end="213:38">codec</name><operator pos:start="213:39" pos:end="213:40">-&gt;</operator><name pos:start="213:41" pos:end="213:49">time_base</name><operator pos:start="213:50" pos:end="213:50">.</operator><name pos:start="213:51" pos:end="213:53">num</name></name> <operator pos:start="213:55" pos:end="213:56">!=</operator> <literal type="number" pos:start="213:58" pos:end="213:58">0</literal></expr>)</condition> <block pos:start="213:61" pos:end="223:21">{<block_content pos:start="215:25" pos:end="221:58">

                        <decl_stmt pos:start="215:25" pos:end="215:118"><decl pos:start="215:25" pos:end="215:117"><type pos:start="215:25" pos:end="215:27"><name pos:start="215:25" pos:end="215:27">int</name></type> <name pos:start="215:29" pos:end="215:33">ticks</name><init pos:start="215:34" pos:end="215:117">= <expr pos:start="215:36" pos:end="215:117"><ternary pos:start="215:36" pos:end="215:117"><condition pos:start="215:36" pos:end="215:52"><expr pos:start="215:36" pos:end="215:50"><name pos:start="215:36" pos:end="215:50"><name pos:start="215:36" pos:end="215:38">ist</name><operator pos:start="215:39" pos:end="215:40">-&gt;</operator><name pos:start="215:41" pos:end="215:42">st</name><operator pos:start="215:43" pos:end="215:44">-&gt;</operator><name pos:start="215:45" pos:end="215:50">parser</name></name></expr> ?</condition><then pos:start="215:54" pos:end="215:83"> <expr pos:start="215:54" pos:end="215:83"><name pos:start="215:54" pos:end="215:81"><name pos:start="215:54" pos:end="215:56">ist</name><operator pos:start="215:57" pos:end="215:58">-&gt;</operator><name pos:start="215:59" pos:end="215:60">st</name><operator pos:start="215:61" pos:end="215:62">-&gt;</operator><name pos:start="215:63" pos:end="215:68">parser</name><operator pos:start="215:69" pos:end="215:70">-&gt;</operator><name pos:start="215:71" pos:end="215:81">repeat_pict</name></name><operator pos:start="215:82" pos:end="215:82">+</operator><literal type="number" pos:start="215:83" pos:end="215:83">1</literal></expr> </then><else pos:start="215:85" pos:end="215:117">: <expr pos:start="215:87" pos:end="215:117"><name pos:start="215:87" pos:end="215:117"><name pos:start="215:87" pos:end="215:89">ist</name><operator pos:start="215:90" pos:end="215:91">-&gt;</operator><name pos:start="215:92" pos:end="215:93">st</name><operator pos:start="215:94" pos:end="215:95">-&gt;</operator><name pos:start="215:96" pos:end="215:100">codec</name><operator pos:start="215:101" pos:end="215:102">-&gt;</operator><name pos:start="215:103" pos:end="215:117">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="217:25" pos:end="221:58"><expr pos:start="217:25" pos:end="221:57"><name pos:start="217:25" pos:end="217:37"><name pos:start="217:25" pos:end="217:27">ist</name><operator pos:start="217:28" pos:end="217:29">-&gt;</operator><name pos:start="217:30" pos:end="217:37">next_pts</name></name> <operator pos:start="217:39" pos:end="217:40">+=</operator> <operator pos:start="217:42" pos:end="217:42">(</operator><operator pos:start="217:43" pos:end="217:43">(</operator><name pos:start="217:44" pos:end="217:50">int64_t</name><operator pos:start="217:51" pos:end="217:51">)</operator><name pos:start="217:52" pos:end="217:63">AV_TIME_BASE</name> <operator pos:start="217:65" pos:end="217:65">*</operator>

                                          <name pos:start="219:43" pos:end="219:71"><name pos:start="219:43" pos:end="219:45">ist</name><operator pos:start="219:46" pos:end="219:47">-&gt;</operator><name pos:start="219:48" pos:end="219:49">st</name><operator pos:start="219:50" pos:end="219:51">-&gt;</operator><name pos:start="219:52" pos:end="219:56">codec</name><operator pos:start="219:57" pos:end="219:58">-&gt;</operator><name pos:start="219:59" pos:end="219:67">time_base</name><operator pos:start="219:68" pos:end="219:68">.</operator><name pos:start="219:69" pos:end="219:71">num</name></name> <operator pos:start="219:73" pos:end="219:73">*</operator> <name pos:start="219:75" pos:end="219:79">ticks</name><operator pos:start="219:80" pos:end="219:80">)</operator> <operator pos:start="219:82" pos:end="219:82">/</operator>

                            <name pos:start="221:29" pos:end="221:57"><name pos:start="221:29" pos:end="221:31">ist</name><operator pos:start="221:32" pos:end="221:33">-&gt;</operator><name pos:start="221:34" pos:end="221:35">st</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:42">codec</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:53">time_base</name><operator pos:start="221:54" pos:end="221:54">.</operator><name pos:start="221:55" pos:end="221:57">den</name></name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="225:21" pos:end="225:35"><expr pos:start="225:21" pos:end="225:34"><name pos:start="225:21" pos:end="225:30"><name pos:start="225:21" pos:end="225:25">avpkt</name><operator pos:start="225:26" pos:end="225:26">.</operator><name pos:start="225:27" pos:end="225:30">size</name></name> <operator pos:start="225:32" pos:end="225:32">=</operator> <literal type="number" pos:start="225:34" pos:end="225:34">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:42"><expr pos:start="227:21" pos:end="227:41"><name pos:start="227:21" pos:end="227:34">buffer_to_free</name> <operator pos:start="227:36" pos:end="227:36">=</operator> <name pos:start="227:38" pos:end="227:41">NULL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:94"><expr pos:start="229:21" pos:end="229:93"><call pos:start="229:21" pos:end="229:93"><name pos:start="229:21" pos:end="229:43">pre_process_video_frame</name><argument_list pos:start="229:44" pos:end="229:93">(<argument pos:start="229:45" pos:end="229:47"><expr pos:start="229:45" pos:end="229:47"><name pos:start="229:45" pos:end="229:47">ist</name></expr></argument>, <argument pos:start="229:50" pos:end="229:75"><expr pos:start="229:50" pos:end="229:75"><operator pos:start="229:50" pos:end="229:50">(</operator><name pos:start="229:51" pos:end="229:59">AVPicture</name> <operator pos:start="229:61" pos:end="229:61">*</operator><operator pos:start="229:62" pos:end="229:62">)</operator><name pos:start="229:63" pos:end="229:75">decoded_frame</name></expr></argument>, <argument pos:start="229:78" pos:end="229:92"><expr pos:start="229:78" pos:end="229:92"><operator pos:start="229:78" pos:end="229:78">&amp;</operator><name pos:start="229:79" pos:end="229:92">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="231:21" pos:end="231:26">break;</break>

            <case pos:start="233:13" pos:end="233:39">case <expr pos:start="233:18" pos:end="233:38"><name pos:start="233:18" pos:end="233:38">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                <expr_stmt pos:start="235:17" pos:end="237:79"><expr pos:start="235:17" pos:end="237:78"><name pos:start="235:17" pos:end="235:19">ret</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <call pos:start="235:23" pos:end="237:78"><name pos:start="235:23" pos:end="235:46">avcodec_decode_subtitle2</name><argument_list pos:start="235:47" pos:end="237:78">(<argument pos:start="235:48" pos:end="235:61"><expr pos:start="235:48" pos:end="235:61"><name pos:start="235:48" pos:end="235:61"><name pos:start="235:48" pos:end="235:50">ist</name><operator pos:start="235:51" pos:end="235:52">-&gt;</operator><name pos:start="235:53" pos:end="235:54">st</name><operator pos:start="235:55" pos:end="235:56">-&gt;</operator><name pos:start="235:57" pos:end="235:61">codec</name></name></expr></argument>,

                                               <argument pos:start="237:48" pos:end="237:56"><expr pos:start="237:48" pos:end="237:56"><operator pos:start="237:48" pos:end="237:48">&amp;</operator><name pos:start="237:49" pos:end="237:56">subtitle</name></expr></argument>, <argument pos:start="237:59" pos:end="237:69"><expr pos:start="237:59" pos:end="237:69"><operator pos:start="237:59" pos:end="237:59">&amp;</operator><name pos:start="237:60" pos:end="237:69">got_output</name></expr></argument>, <argument pos:start="237:72" pos:end="237:77"><expr pos:start="237:72" pos:end="237:77"><operator pos:start="237:72" pos:end="237:72">&amp;</operator><name pos:start="237:73" pos:end="237:77">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="239:17" pos:end="241:31"><if pos:start="239:17" pos:end="241:31">if <condition pos:start="239:20" pos:end="239:28">(<expr pos:start="239:21" pos:end="239:27"><name pos:start="239:21" pos:end="239:23">ret</name> <operator pos:start="239:25" pos:end="239:25">&lt;</operator> <literal type="number" pos:start="239:27" pos:end="239:27">0</literal></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:31"><block_content pos:start="241:21" pos:end="241:31">

                    <return pos:start="241:21" pos:end="241:31">return <expr pos:start="241:28" pos:end="241:30"><name pos:start="241:28" pos:end="241:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="243:17" pos:end="247:17"><if pos:start="243:17" pos:end="247:17">if <condition pos:start="243:20" pos:end="243:32">(<expr pos:start="243:21" pos:end="243:31"><operator pos:start="243:21" pos:end="243:21">!</operator><name pos:start="243:22" pos:end="243:31">got_output</name></expr>)</condition> <block pos:start="243:34" pos:end="247:17">{<block_content pos:start="245:21" pos:end="245:40">

                    <goto pos:start="245:21" pos:end="245:40">goto <name pos:start="245:26" pos:end="245:39">discard_packet</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:45"><expr pos:start="249:17" pos:end="249:44"><name pos:start="249:17" pos:end="249:32">subtitle_to_free</name> <operator pos:start="249:34" pos:end="249:34">=</operator> <operator pos:start="249:36" pos:end="249:36">&amp;</operator><name pos:start="249:37" pos:end="249:44">subtitle</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:31"><expr pos:start="251:17" pos:end="251:30"><name pos:start="251:17" pos:end="251:26"><name pos:start="251:17" pos:end="251:21">avpkt</name><operator pos:start="251:22" pos:end="251:22">.</operator><name pos:start="251:23" pos:end="251:26">size</name></name> <operator pos:start="251:28" pos:end="251:28">=</operator> <literal type="number" pos:start="251:30" pos:end="251:30">0</literal></expr>;</expr_stmt>

                <break pos:start="253:17" pos:end="253:22">break;</break>

            <default pos:start="255:13" pos:end="255:20">default:</default>

                <return pos:start="257:17" pos:end="257:26">return <expr pos:start="257:24" pos:end="257:25"><operator pos:start="257:24" pos:end="257:24">-</operator><literal type="number" pos:start="257:25" pos:end="257:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="261:11" pos:end="298:0">else <block pos:start="261:16" pos:end="298:0">{<block_content pos:start="263:13" pos:end="291:27">

            <switch pos:start="263:13" pos:end="289:13">switch<condition pos:start="263:19" pos:end="263:46">(<expr pos:start="263:20" pos:end="263:45"><name pos:start="263:20" pos:end="263:45"><name pos:start="263:20" pos:end="263:22">ist</name><operator pos:start="263:23" pos:end="263:24">-&gt;</operator><name pos:start="263:25" pos:end="263:26">st</name><operator pos:start="263:27" pos:end="263:28">-&gt;</operator><name pos:start="263:29" pos:end="263:33">codec</name><operator pos:start="263:34" pos:end="263:35">-&gt;</operator><name pos:start="263:36" pos:end="263:45">codec_type</name></name></expr>)</condition> <block pos:start="263:48" pos:end="289:13">{<block_content pos:start="265:13" pos:end="287:22">

            <case pos:start="265:13" pos:end="265:36">case <expr pos:start="265:18" pos:end="265:35"><name pos:start="265:18" pos:end="265:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <expr_stmt pos:start="267:17" pos:end="269:48"><expr pos:start="267:17" pos:end="269:47"><name pos:start="267:17" pos:end="267:29"><name pos:start="267:17" pos:end="267:19">ist</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:29">next_pts</name></name> <operator pos:start="267:31" pos:end="267:32">+=</operator> <operator pos:start="267:34" pos:end="267:34">(</operator><operator pos:start="267:35" pos:end="267:35">(</operator><name pos:start="267:36" pos:end="267:42">int64_t</name><operator pos:start="267:43" pos:end="267:43">)</operator><name pos:start="267:44" pos:end="267:55">AV_TIME_BASE</name> <operator pos:start="267:57" pos:end="267:57">*</operator> <name pos:start="267:59" pos:end="267:84"><name pos:start="267:59" pos:end="267:61">ist</name><operator pos:start="267:62" pos:end="267:63">-&gt;</operator><name pos:start="267:64" pos:end="267:65">st</name><operator pos:start="267:66" pos:end="267:67">-&gt;</operator><name pos:start="267:68" pos:end="267:72">codec</name><operator pos:start="267:73" pos:end="267:74">-&gt;</operator><name pos:start="267:75" pos:end="267:84">frame_size</name></name><operator pos:start="267:85" pos:end="267:85">)</operator> <operator pos:start="267:87" pos:end="267:87">/</operator>

                    <name pos:start="269:21" pos:end="269:47"><name pos:start="269:21" pos:end="269:23">ist</name><operator pos:start="269:24" pos:end="269:25">-&gt;</operator><name pos:start="269:26" pos:end="269:27">st</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:34">codec</name><operator pos:start="269:35" pos:end="269:36">-&gt;</operator><name pos:start="269:37" pos:end="269:47">sample_rate</name></name></expr>;</expr_stmt>

                <break pos:start="271:17" pos:end="271:22">break;</break>

            <case pos:start="273:13" pos:end="273:36">case <expr pos:start="273:18" pos:end="273:35"><name pos:start="273:18" pos:end="273:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

                <if_stmt pos:start="275:17" pos:end="285:17"><if pos:start="275:17" pos:end="285:17">if <condition pos:start="275:20" pos:end="275:55">(<expr pos:start="275:21" pos:end="275:54"><name pos:start="275:21" pos:end="275:49"><name pos:start="275:21" pos:end="275:23">ist</name><operator pos:start="275:24" pos:end="275:25">-&gt;</operator><name pos:start="275:26" pos:end="275:27">st</name><operator pos:start="275:28" pos:end="275:29">-&gt;</operator><name pos:start="275:30" pos:end="275:34">codec</name><operator pos:start="275:35" pos:end="275:36">-&gt;</operator><name pos:start="275:37" pos:end="275:45">time_base</name><operator pos:start="275:46" pos:end="275:46">.</operator><name pos:start="275:47" pos:end="275:49">num</name></name> <operator pos:start="275:51" pos:end="275:52">!=</operator> <literal type="number" pos:start="275:54" pos:end="275:54">0</literal></expr>)</condition> <block pos:start="275:57" pos:end="285:17">{<block_content pos:start="277:21" pos:end="283:54">

                    <decl_stmt pos:start="277:21" pos:end="277:114"><decl pos:start="277:21" pos:end="277:113"><type pos:start="277:21" pos:end="277:23"><name pos:start="277:21" pos:end="277:23">int</name></type> <name pos:start="277:25" pos:end="277:29">ticks</name><init pos:start="277:30" pos:end="277:113">= <expr pos:start="277:32" pos:end="277:113"><ternary pos:start="277:32" pos:end="277:113"><condition pos:start="277:32" pos:end="277:48"><expr pos:start="277:32" pos:end="277:46"><name pos:start="277:32" pos:end="277:46"><name pos:start="277:32" pos:end="277:34">ist</name><operator pos:start="277:35" pos:end="277:36">-&gt;</operator><name pos:start="277:37" pos:end="277:38">st</name><operator pos:start="277:39" pos:end="277:40">-&gt;</operator><name pos:start="277:41" pos:end="277:46">parser</name></name></expr> ?</condition><then pos:start="277:50" pos:end="277:79"> <expr pos:start="277:50" pos:end="277:79"><name pos:start="277:50" pos:end="277:77"><name pos:start="277:50" pos:end="277:52">ist</name><operator pos:start="277:53" pos:end="277:54">-&gt;</operator><name pos:start="277:55" pos:end="277:56">st</name><operator pos:start="277:57" pos:end="277:58">-&gt;</operator><name pos:start="277:59" pos:end="277:64">parser</name><operator pos:start="277:65" pos:end="277:66">-&gt;</operator><name pos:start="277:67" pos:end="277:77">repeat_pict</name></name><operator pos:start="277:78" pos:end="277:78">+</operator><literal type="number" pos:start="277:79" pos:end="277:79">1</literal></expr> </then><else pos:start="277:81" pos:end="277:113">: <expr pos:start="277:83" pos:end="277:113"><name pos:start="277:83" pos:end="277:113"><name pos:start="277:83" pos:end="277:85">ist</name><operator pos:start="277:86" pos:end="277:87">-&gt;</operator><name pos:start="277:88" pos:end="277:89">st</name><operator pos:start="277:90" pos:end="277:91">-&gt;</operator><name pos:start="277:92" pos:end="277:96">codec</name><operator pos:start="277:97" pos:end="277:98">-&gt;</operator><name pos:start="277:99" pos:end="277:113">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="279:21" pos:end="283:54"><expr pos:start="279:21" pos:end="283:53"><name pos:start="279:21" pos:end="279:33"><name pos:start="279:21" pos:end="279:23">ist</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:33">next_pts</name></name> <operator pos:start="279:35" pos:end="279:36">+=</operator> <operator pos:start="279:38" pos:end="279:38">(</operator><operator pos:start="279:39" pos:end="279:39">(</operator><name pos:start="279:40" pos:end="279:46">int64_t</name><operator pos:start="279:47" pos:end="279:47">)</operator><name pos:start="279:48" pos:end="279:59">AV_TIME_BASE</name> <operator pos:start="279:61" pos:end="279:61">*</operator>

                                      <name pos:start="281:39" pos:end="281:67"><name pos:start="281:39" pos:end="281:41">ist</name><operator pos:start="281:42" pos:end="281:43">-&gt;</operator><name pos:start="281:44" pos:end="281:45">st</name><operator pos:start="281:46" pos:end="281:47">-&gt;</operator><name pos:start="281:48" pos:end="281:52">codec</name><operator pos:start="281:53" pos:end="281:54">-&gt;</operator><name pos:start="281:55" pos:end="281:63">time_base</name><operator pos:start="281:64" pos:end="281:64">.</operator><name pos:start="281:65" pos:end="281:67">num</name></name> <operator pos:start="281:69" pos:end="281:69">*</operator> <name pos:start="281:71" pos:end="281:75">ticks</name><operator pos:start="281:76" pos:end="281:76">)</operator> <operator pos:start="281:78" pos:end="281:78">/</operator>

                        <name pos:start="283:25" pos:end="283:53"><name pos:start="283:25" pos:end="283:27">ist</name><operator pos:start="283:28" pos:end="283:29">-&gt;</operator><name pos:start="283:30" pos:end="283:31">st</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:38">codec</name><operator pos:start="283:39" pos:end="283:40">-&gt;</operator><name pos:start="283:41" pos:end="283:49">time_base</name><operator pos:start="283:50" pos:end="283:50">.</operator><name pos:start="283:51" pos:end="283:53">den</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="287:17" pos:end="287:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="291:13" pos:end="291:27"><expr pos:start="291:13" pos:end="291:26"><name pos:start="291:13" pos:end="291:22"><name pos:start="291:13" pos:end="291:17">avpkt</name><operator pos:start="291:18" pos:end="291:18">.</operator><name pos:start="291:19" pos:end="291:22">size</name></name> <operator pos:start="291:24" pos:end="291:24">=</operator> <literal type="number" pos:start="291:26" pos:end="291:26">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



<cpp:if pos:start="297:1" pos:end="297:19">#<cpp:directive pos:start="297:2" pos:end="297:3">if</cpp:directive> <expr pos:start="297:5" pos:end="297:19"><name pos:start="297:5" pos:end="297:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <if_stmt pos:start="299:9" pos:end="328:0"><if pos:start="299:9" pos:end="328:0">if<condition pos:start="299:11" pos:end="299:60">(<expr pos:start="299:12" pos:end="299:59"><name pos:start="299:12" pos:end="299:37"><name pos:start="299:12" pos:end="299:14">ist</name><operator pos:start="299:15" pos:end="299:16">-&gt;</operator><name pos:start="299:17" pos:end="299:18">st</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:25">codec</name><operator pos:start="299:26" pos:end="299:27">-&gt;</operator><name pos:start="299:28" pos:end="299:37">codec_type</name></name> <operator pos:start="299:39" pos:end="299:40">==</operator> <name pos:start="299:42" pos:end="299:59">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="301:9" pos:end="328:0"><block_content pos:start="301:9" pos:end="328:0">

        <for pos:start="301:9" pos:end="328:0">for<control pos:start="301:12" pos:end="301:34">(<init pos:start="301:13" pos:end="301:16"><expr pos:start="301:13" pos:end="301:15"><name pos:start="301:13" pos:end="301:13">i</name><operator pos:start="301:14" pos:end="301:14">=</operator><literal type="number" pos:start="301:15" pos:end="301:15">0</literal></expr>;</init><condition pos:start="301:17" pos:end="301:30"><expr pos:start="301:17" pos:end="301:29"><name pos:start="301:17" pos:end="301:17">i</name><operator pos:start="301:18" pos:end="301:18">&lt;</operator><name pos:start="301:19" pos:end="301:29">nb_ostreams</name></expr>;</condition><incr pos:start="301:31" pos:end="301:33"><expr pos:start="301:31" pos:end="301:33"><name pos:start="301:31" pos:end="301:31">i</name><operator pos:start="301:32" pos:end="301:33">++</operator></expr></incr>)</control> <block pos:start="301:36" pos:end="328:0">{<block_content pos:start="303:13" pos:end="323:13">

            <decl_stmt pos:start="303:13" pos:end="303:68"><decl pos:start="303:13" pos:end="303:67"><type pos:start="303:13" pos:end="303:24"><name pos:start="303:13" pos:end="303:22">OutputFile</name> <modifier pos:start="303:24" pos:end="303:24">*</modifier></type><name pos:start="303:25" pos:end="303:26">of</name> <init pos:start="303:28" pos:end="303:67">= <expr pos:start="303:30" pos:end="303:67"><operator pos:start="303:30" pos:end="303:30">&amp;</operator><name pos:start="303:31" pos:end="303:67"><name pos:start="303:31" pos:end="303:42">output_files</name><index pos:start="303:43" pos:end="303:67">[<expr pos:start="303:44" pos:end="303:66"><name pos:start="303:44" pos:end="303:55"><name pos:start="303:44" pos:end="303:52">ost_table</name><index pos:start="303:53" pos:end="303:55">[<expr pos:start="303:54" pos:end="303:54"><name pos:start="303:54" pos:end="303:54">i</name></expr>]</index></name><operator pos:start="303:56" pos:end="303:56">.</operator><name pos:start="303:57" pos:end="303:66">file_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="305:13" pos:end="323:13"><if pos:start="305:13" pos:end="323:13">if <condition pos:start="305:16" pos:end="305:66">(<expr pos:start="305:17" pos:end="305:65"><name pos:start="305:17" pos:end="305:30"><name pos:start="305:17" pos:end="305:18">of</name><operator pos:start="305:19" pos:end="305:20">-&gt;</operator><name pos:start="305:21" pos:end="305:30">start_time</name></name> <operator pos:start="305:32" pos:end="305:33">==</operator> <literal type="number" pos:start="305:35" pos:end="305:35">0</literal> <operator pos:start="305:37" pos:end="305:38">||</operator> <name pos:start="305:40" pos:end="305:47"><name pos:start="305:40" pos:end="305:42">ist</name><operator pos:start="305:43" pos:end="305:44">-&gt;</operator><name pos:start="305:45" pos:end="305:47">pts</name></name> <operator pos:start="305:49" pos:end="305:50">&gt;=</operator> <name pos:start="305:52" pos:end="305:65"><name pos:start="305:52" pos:end="305:53">of</name><operator pos:start="305:54" pos:end="305:55">-&gt;</operator><name pos:start="305:56" pos:end="305:65">start_time</name></name></expr>)</condition> <block pos:start="305:68" pos:end="323:13">{<block_content pos:start="307:17" pos:end="321:17">

                <expr_stmt pos:start="307:17" pos:end="307:36"><expr pos:start="307:17" pos:end="307:35"><name pos:start="307:17" pos:end="307:19">ost</name> <operator pos:start="307:21" pos:end="307:21">=</operator> <operator pos:start="307:23" pos:end="307:23">&amp;</operator><name pos:start="307:24" pos:end="307:35"><name pos:start="307:24" pos:end="307:32">ost_table</name><index pos:start="307:33" pos:end="307:35">[<expr pos:start="307:34" pos:end="307:34"><name pos:start="307:34" pos:end="307:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="309:17" pos:end="321:17"><if pos:start="309:17" pos:end="321:17">if <condition pos:start="309:20" pos:end="309:78">(<expr pos:start="309:21" pos:end="309:77"><name pos:start="309:21" pos:end="309:43"><name pos:start="309:21" pos:end="309:23">ost</name><operator pos:start="309:24" pos:end="309:25">-&gt;</operator><name pos:start="309:26" pos:end="309:43">input_video_filter</name></name> <operator pos:start="309:45" pos:end="309:46">&amp;&amp;</operator> <name pos:start="309:48" pos:end="309:64"><name pos:start="309:48" pos:end="309:50">ost</name><operator pos:start="309:51" pos:end="309:52">-&gt;</operator><name pos:start="309:53" pos:end="309:64">source_index</name></name> <operator pos:start="309:66" pos:end="309:67">==</operator> <name pos:start="309:69" pos:end="309:77">ist_index</name></expr>)</condition> <block pos:start="309:80" pos:end="321:17">{<block_content pos:start="311:17" pos:end="319:109">

                <if_stmt pos:start="311:17" pos:end="313:86"><if pos:start="311:17" pos:end="313:86">if <condition pos:start="311:20" pos:end="311:60">(<expr pos:start="311:21" pos:end="311:59"><operator pos:start="311:21" pos:end="311:21">!</operator><name pos:start="311:22" pos:end="311:59"><name pos:start="311:22" pos:end="311:34">decoded_frame</name><operator pos:start="311:35" pos:end="311:36">-&gt;</operator><name pos:start="311:37" pos:end="311:55">sample_aspect_ratio</name><operator pos:start="311:56" pos:end="311:56">.</operator><name pos:start="311:57" pos:end="311:59">num</name></name></expr>)</condition><block type="pseudo" pos:start="313:21" pos:end="313:86"><block_content pos:start="313:21" pos:end="313:86">

                    <expr_stmt pos:start="313:21" pos:end="313:86"><expr pos:start="313:21" pos:end="313:85"><name pos:start="313:21" pos:end="313:54"><name pos:start="313:21" pos:end="313:33">decoded_frame</name><operator pos:start="313:34" pos:end="313:35">-&gt;</operator><name pos:start="313:36" pos:end="313:54">sample_aspect_ratio</name></name> <operator pos:start="313:56" pos:end="313:56">=</operator> <name pos:start="313:58" pos:end="313:85"><name pos:start="313:58" pos:end="313:60">ist</name><operator pos:start="313:61" pos:end="313:62">-&gt;</operator><name pos:start="313:63" pos:end="313:64">st</name><operator pos:start="313:65" pos:end="313:66">-&gt;</operator><name pos:start="313:67" pos:end="313:85">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:46"><expr pos:start="315:17" pos:end="315:45"><name pos:start="315:17" pos:end="315:34"><name pos:start="315:17" pos:end="315:29">decoded_frame</name><operator pos:start="315:30" pos:end="315:31">-&gt;</operator><name pos:start="315:32" pos:end="315:34">pts</name></name> <operator pos:start="315:36" pos:end="315:36">=</operator> <name pos:start="315:38" pos:end="315:45"><name pos:start="315:38" pos:end="315:40">ist</name><operator pos:start="315:41" pos:end="315:42">-&gt;</operator><name pos:start="315:43" pos:end="315:45">pts</name></name></expr>;</expr_stmt>



                <expr_stmt pos:start="319:17" pos:end="319:109"><expr pos:start="319:17" pos:end="319:108"><call pos:start="319:17" pos:end="319:108"><name pos:start="319:17" pos:end="319:40">av_vsrc_buffer_add_frame</name><argument_list pos:start="319:41" pos:end="319:108">(<argument pos:start="319:42" pos:end="319:64"><expr pos:start="319:42" pos:end="319:64"><name pos:start="319:42" pos:end="319:64"><name pos:start="319:42" pos:end="319:44">ost</name><operator pos:start="319:45" pos:end="319:46">-&gt;</operator><name pos:start="319:47" pos:end="319:64">input_video_filter</name></name></expr></argument>, <argument pos:start="319:67" pos:end="319:79"><expr pos:start="319:67" pos:end="319:79"><name pos:start="319:67" pos:end="319:79">decoded_frame</name></expr></argument>, <argument pos:start="319:82" pos:end="319:107"><expr pos:start="319:82" pos:end="319:107"><name pos:start="319:82" pos:end="319:107">AV_VSRC_BUF_FLAG_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>

<cpp:endif pos:start="327:1" pos:end="327:6">#<cpp:directive pos:start="327:2" pos:end="327:6">endif</cpp:directive></cpp:endif>



        <comment type="line" pos:start="331:9" pos:end="331:36">// preprocess audio (volume)</comment>

        <if_stmt pos:start="333:9" pos:end="351:9"><if pos:start="333:9" pos:end="351:9">if <condition pos:start="333:12" pos:end="333:61">(<expr pos:start="333:13" pos:end="333:60"><name pos:start="333:13" pos:end="333:38"><name pos:start="333:13" pos:end="333:15">ist</name><operator pos:start="333:16" pos:end="333:17">-&gt;</operator><name pos:start="333:18" pos:end="333:19">st</name><operator pos:start="333:20" pos:end="333:21">-&gt;</operator><name pos:start="333:22" pos:end="333:26">codec</name><operator pos:start="333:27" pos:end="333:28">-&gt;</operator><name pos:start="333:29" pos:end="333:38">codec_type</name></name> <operator pos:start="333:40" pos:end="333:41">==</operator> <name pos:start="333:43" pos:end="333:60">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="333:63" pos:end="351:9">{<block_content pos:start="335:13" pos:end="349:13">

            <if_stmt pos:start="335:13" pos:end="349:13"><if pos:start="335:13" pos:end="349:13">if <condition pos:start="335:16" pos:end="335:36">(<expr pos:start="335:17" pos:end="335:35"><name pos:start="335:17" pos:end="335:28">audio_volume</name> <operator pos:start="335:30" pos:end="335:31">!=</operator> <literal type="number" pos:start="335:33" pos:end="335:35">256</literal></expr>)</condition> <block pos:start="335:38" pos:end="349:13">{<block_content pos:start="337:17" pos:end="347:17">

                <decl_stmt pos:start="337:17" pos:end="337:28"><decl pos:start="337:17" pos:end="337:27"><type pos:start="337:17" pos:end="337:23"><name pos:start="337:17" pos:end="337:21">short</name> <modifier pos:start="337:23" pos:end="337:23">*</modifier></type><name pos:start="337:24" pos:end="337:27">volp</name></decl>;</decl_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:31"><expr pos:start="339:17" pos:end="339:30"><name pos:start="339:17" pos:end="339:20">volp</name> <operator pos:start="339:22" pos:end="339:22">=</operator> <name pos:start="339:24" pos:end="339:30">samples</name></expr>;</expr_stmt>

                <for pos:start="341:17" pos:end="347:17">for<control pos:start="341:20" pos:end="341:66">(<init pos:start="341:21" pos:end="341:24"><expr pos:start="341:21" pos:end="341:23"><name pos:start="341:21" pos:end="341:21">i</name><operator pos:start="341:22" pos:end="341:22">=</operator><literal type="number" pos:start="341:23" pos:end="341:23">0</literal></expr>;</init><condition pos:start="341:25" pos:end="341:62"><expr pos:start="341:25" pos:end="341:61"><name pos:start="341:25" pos:end="341:25">i</name><operator pos:start="341:26" pos:end="341:26">&lt;</operator><operator pos:start="341:27" pos:end="341:27">(</operator><name pos:start="341:28" pos:end="341:44">decoded_data_size</name> <operator pos:start="341:46" pos:end="341:46">/</operator> <sizeof pos:start="341:48" pos:end="341:60">sizeof<argument_list pos:start="341:54" pos:end="341:60">(<argument pos:start="341:55" pos:end="341:59"><expr pos:start="341:55" pos:end="341:59"><name pos:start="341:55" pos:end="341:59">short</name></expr></argument>)</argument_list></sizeof><operator pos:start="341:61" pos:end="341:61">)</operator></expr>;</condition><incr pos:start="341:63" pos:end="341:65"><expr pos:start="341:63" pos:end="341:65"><name pos:start="341:63" pos:end="341:63">i</name><operator pos:start="341:64" pos:end="341:65">++</operator></expr></incr>)</control> <block pos:start="341:68" pos:end="347:17">{<block_content pos:start="343:21" pos:end="345:47">

                    <decl_stmt pos:start="343:21" pos:end="343:64"><decl pos:start="343:21" pos:end="343:63"><type pos:start="343:21" pos:end="343:23"><name pos:start="343:21" pos:end="343:23">int</name></type> <name pos:start="343:25" pos:end="343:25">v</name> <init pos:start="343:27" pos:end="343:63">= <expr pos:start="343:29" pos:end="343:63"><operator pos:start="343:29" pos:end="343:29">(</operator><operator pos:start="343:30" pos:end="343:30">(</operator><operator pos:start="343:31" pos:end="343:31">*</operator><name pos:start="343:32" pos:end="343:35">volp</name><operator pos:start="343:36" pos:end="343:36">)</operator> <operator pos:start="343:38" pos:end="343:38">*</operator> <name pos:start="343:40" pos:end="343:51">audio_volume</name> <operator pos:start="343:53" pos:end="343:53">+</operator> <literal type="number" pos:start="343:55" pos:end="343:57">128</literal><operator pos:start="343:58" pos:end="343:58">)</operator> <operator pos:start="343:60" pos:end="343:61">&gt;&gt;</operator> <literal type="number" pos:start="343:63" pos:end="343:63">8</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="345:21" pos:end="345:47"><expr pos:start="345:21" pos:end="345:46"><operator pos:start="345:21" pos:end="345:21">*</operator><name pos:start="345:22" pos:end="345:25">volp</name><operator pos:start="345:26" pos:end="345:27">++</operator> <operator pos:start="345:29" pos:end="345:29">=</operator> <call pos:start="345:31" pos:end="345:46"><name pos:start="345:31" pos:end="345:43">av_clip_int16</name><argument_list pos:start="345:44" pos:end="345:46">(<argument pos:start="345:45" pos:end="345:45"><expr pos:start="345:45" pos:end="345:45"><name pos:start="345:45" pos:end="345:45">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="355:9" pos:end="355:34">/* frame rate emulation */</comment>

        <if_stmt pos:start="357:9" pos:end="367:9"><if pos:start="357:9" pos:end="367:9">if <condition pos:start="357:12" pos:end="357:50">(<expr pos:start="357:13" pos:end="357:49"><name pos:start="357:13" pos:end="357:40"><name pos:start="357:13" pos:end="357:23">input_files</name><index pos:start="357:24" pos:end="357:40">[<expr pos:start="357:25" pos:end="357:39"><name pos:start="357:25" pos:end="357:39"><name pos:start="357:25" pos:end="357:27">ist</name><operator pos:start="357:28" pos:end="357:29">-&gt;</operator><name pos:start="357:30" pos:end="357:39">file_index</name></name></expr>]</index></name><operator pos:start="357:41" pos:end="357:41">.</operator><name pos:start="357:42" pos:end="357:49">rate_emu</name></expr>)</condition> <block pos:start="357:52" pos:end="367:9">{<block_content pos:start="359:13" pos:end="365:34">

            <decl_stmt pos:start="359:13" pos:end="359:70"><decl pos:start="359:13" pos:end="359:69"><type pos:start="359:13" pos:end="359:19"><name pos:start="359:13" pos:end="359:19">int64_t</name></type> <name pos:start="359:21" pos:end="359:23">pts</name> <init pos:start="359:25" pos:end="359:69">= <expr pos:start="359:27" pos:end="359:69"><call pos:start="359:27" pos:end="359:69"><name pos:start="359:27" pos:end="359:36">av_rescale</name><argument_list pos:start="359:37" pos:end="359:69">(<argument pos:start="359:38" pos:end="359:45"><expr pos:start="359:38" pos:end="359:45"><name pos:start="359:38" pos:end="359:45"><name pos:start="359:38" pos:end="359:40">ist</name><operator pos:start="359:41" pos:end="359:42">-&gt;</operator><name pos:start="359:43" pos:end="359:45">pts</name></name></expr></argument>, <argument pos:start="359:48" pos:end="359:54"><expr pos:start="359:48" pos:end="359:54"><literal type="number" pos:start="359:48" pos:end="359:54">1000000</literal></expr></argument>, <argument pos:start="359:57" pos:end="359:68"><expr pos:start="359:57" pos:end="359:68"><name pos:start="359:57" pos:end="359:68">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="361:13" pos:end="361:52"><decl pos:start="361:13" pos:end="361:51"><type pos:start="361:13" pos:end="361:19"><name pos:start="361:13" pos:end="361:19">int64_t</name></type> <name pos:start="361:21" pos:end="361:23">now</name> <init pos:start="361:25" pos:end="361:51">= <expr pos:start="361:27" pos:end="361:51"><call pos:start="361:27" pos:end="361:38"><name pos:start="361:27" pos:end="361:36">av_gettime</name><argument_list pos:start="361:37" pos:end="361:38">()</argument_list></call> <operator pos:start="361:40" pos:end="361:40">-</operator> <name pos:start="361:42" pos:end="361:51"><name pos:start="361:42" pos:end="361:44">ist</name><operator pos:start="361:45" pos:end="361:46">-&gt;</operator><name pos:start="361:47" pos:end="361:51">start</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="363:13" pos:end="365:34"><if pos:start="363:13" pos:end="365:34">if <condition pos:start="363:16" pos:end="363:26">(<expr pos:start="363:17" pos:end="363:25"><name pos:start="363:17" pos:end="363:19">pts</name> <operator pos:start="363:21" pos:end="363:21">&gt;</operator> <name pos:start="363:23" pos:end="363:25">now</name></expr>)</condition><block type="pseudo" pos:start="365:17" pos:end="365:34"><block_content pos:start="365:17" pos:end="365:34">

                <expr_stmt pos:start="365:17" pos:end="365:34"><expr pos:start="365:17" pos:end="365:33"><call pos:start="365:17" pos:end="365:33"><name pos:start="365:17" pos:end="365:22">usleep</name><argument_list pos:start="365:23" pos:end="365:33">(<argument pos:start="365:24" pos:end="365:32"><expr pos:start="365:24" pos:end="365:32"><name pos:start="365:24" pos:end="365:26">pts</name> <operator pos:start="365:28" pos:end="365:28">-</operator> <name pos:start="365:30" pos:end="365:32">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="369:9" pos:end="371:44">/* if output time reached then transcode raw format,

           encode packets and output them */</comment>

        <for pos:start="373:9" pos:end="647:9">for <control pos:start="373:13" pos:end="373:41">(<init pos:start="373:14" pos:end="373:19"><expr pos:start="373:14" pos:end="373:18"><name pos:start="373:14" pos:end="373:14">i</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <literal type="number" pos:start="373:18" pos:end="373:18">0</literal></expr>;</init> <condition pos:start="373:21" pos:end="373:36"><expr pos:start="373:21" pos:end="373:35"><name pos:start="373:21" pos:end="373:21">i</name> <operator pos:start="373:23" pos:end="373:23">&lt;</operator> <name pos:start="373:25" pos:end="373:35">nb_ostreams</name></expr>;</condition> <incr pos:start="373:38" pos:end="373:40"><expr pos:start="373:38" pos:end="373:40"><name pos:start="373:38" pos:end="373:38">i</name><operator pos:start="373:39" pos:end="373:40">++</operator></expr></incr>)</control> <block pos:start="373:43" pos:end="647:9">{<block_content pos:start="375:13" pos:end="646:0">

            <decl_stmt pos:start="375:13" pos:end="375:68"><decl pos:start="375:13" pos:end="375:67"><type pos:start="375:13" pos:end="375:24"><name pos:start="375:13" pos:end="375:22">OutputFile</name> <modifier pos:start="375:24" pos:end="375:24">*</modifier></type><name pos:start="375:25" pos:end="375:26">of</name> <init pos:start="375:28" pos:end="375:67">= <expr pos:start="375:30" pos:end="375:67"><operator pos:start="375:30" pos:end="375:30">&amp;</operator><name pos:start="375:31" pos:end="375:67"><name pos:start="375:31" pos:end="375:42">output_files</name><index pos:start="375:43" pos:end="375:67">[<expr pos:start="375:44" pos:end="375:66"><name pos:start="375:44" pos:end="375:55"><name pos:start="375:44" pos:end="375:52">ost_table</name><index pos:start="375:53" pos:end="375:55">[<expr pos:start="375:54" pos:end="375:54"><name pos:start="375:54" pos:end="375:54">i</name></expr>]</index></name><operator pos:start="375:56" pos:end="375:56">.</operator><name pos:start="375:57" pos:end="375:66">file_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="377:13" pos:end="377:27"><decl pos:start="377:13" pos:end="377:26"><type pos:start="377:13" pos:end="377:15"><name pos:start="377:13" pos:end="377:15">int</name></type> <name pos:start="377:17" pos:end="377:26">frame_size</name></decl>;</decl_stmt>



            <expr_stmt pos:start="381:13" pos:end="381:32"><expr pos:start="381:13" pos:end="381:31"><name pos:start="381:13" pos:end="381:15">ost</name> <operator pos:start="381:17" pos:end="381:17">=</operator> <operator pos:start="381:19" pos:end="381:19">&amp;</operator><name pos:start="381:20" pos:end="381:31"><name pos:start="381:20" pos:end="381:28">ost_table</name><index pos:start="381:29" pos:end="381:31">[<expr pos:start="381:30" pos:end="381:30"><name pos:start="381:30" pos:end="381:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="383:13" pos:end="385:25"><if pos:start="383:13" pos:end="385:25">if <condition pos:start="383:16" pos:end="383:47">(<expr pos:start="383:17" pos:end="383:46"><name pos:start="383:17" pos:end="383:33"><name pos:start="383:17" pos:end="383:19">ost</name><operator pos:start="383:20" pos:end="383:21">-&gt;</operator><name pos:start="383:22" pos:end="383:33">source_index</name></name> <operator pos:start="383:35" pos:end="383:36">!=</operator> <name pos:start="383:38" pos:end="383:46">ist_index</name></expr>)</condition><block type="pseudo" pos:start="385:17" pos:end="385:25"><block_content pos:start="385:17" pos:end="385:25">

                <continue pos:start="385:17" pos:end="385:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="389:13" pos:end="391:25"><if pos:start="389:13" pos:end="391:25">if <condition pos:start="389:16" pos:end="389:60">(<expr pos:start="389:17" pos:end="389:59"><name pos:start="389:17" pos:end="389:30"><name pos:start="389:17" pos:end="389:18">of</name><operator pos:start="389:19" pos:end="389:20">-&gt;</operator><name pos:start="389:21" pos:end="389:30">start_time</name></name> <operator pos:start="389:32" pos:end="389:33">&amp;&amp;</operator> <name pos:start="389:35" pos:end="389:42"><name pos:start="389:35" pos:end="389:37">ist</name><operator pos:start="389:38" pos:end="389:39">-&gt;</operator><name pos:start="389:40" pos:end="389:42">pts</name></name> <operator pos:start="389:44" pos:end="389:44">&lt;</operator> <name pos:start="389:46" pos:end="389:59"><name pos:start="389:46" pos:end="389:47">of</name><operator pos:start="389:48" pos:end="389:49">-&gt;</operator><name pos:start="389:50" pos:end="389:59">start_time</name></name></expr>)</condition><block type="pseudo" pos:start="391:17" pos:end="391:25"><block_content pos:start="391:17" pos:end="391:25">

                <continue pos:start="391:17" pos:end="391:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="395:13" pos:end="410:0"><if pos:start="395:13" pos:end="410:0">if <condition pos:start="395:16" pos:end="399:61">(<expr pos:start="395:17" pos:end="399:60"><name pos:start="395:17" pos:end="395:34"><name pos:start="395:17" pos:end="395:18">of</name><operator pos:start="395:19" pos:end="395:20">-&gt;</operator><name pos:start="395:21" pos:end="395:34">recording_time</name></name> <operator pos:start="395:36" pos:end="395:37">!=</operator> <name pos:start="395:39" pos:end="395:47">INT64_MAX</name> <operator pos:start="395:49" pos:end="395:50">&amp;&amp;</operator>

                <macro pos:start="397:17" pos:end="399:55"><name pos:start="397:17" pos:end="397:29">av_compare_ts</name><argument_list pos:start="397:30" pos:end="399:55">(<argument pos:start="397:31" pos:end="397:38">ist-&gt;pts</argument>, <argument pos:start="397:41" pos:end="397:54">AV_TIME_BASE_Q</argument>, <argument pos:start="397:57" pos:end="397:91">of-&gt;recording_time + of-&gt;start_time</argument>,

                              <argument pos:start="399:31" pos:end="399:44">(AVRational){<literal type="number" pos:start="399:44" pos:end="399:44">1</literal></argument>, <argument pos:start="399:47" pos:end="399:54"><literal type="number" pos:start="399:47" pos:end="399:53">1000000</literal>}</argument>)</argument_list></macro> <operator pos:start="399:57" pos:end="399:58">&gt;=</operator> <literal type="number" pos:start="399:60" pos:end="399:60">0</literal></expr>)</condition> <block pos:start="399:63" pos:end="410:0">{<block_content pos:start="401:17" pos:end="403:25">

                <expr_stmt pos:start="401:17" pos:end="401:48"><expr pos:start="401:17" pos:end="401:47"><name pos:start="401:17" pos:end="401:43"><name pos:start="401:17" pos:end="401:19">ost</name><operator pos:start="401:20" pos:end="401:21">-&gt;</operator><name pos:start="401:22" pos:end="401:43">is_past_recording_time</name></name> <operator pos:start="401:45" pos:end="401:45">=</operator> <literal type="number" pos:start="401:47" pos:end="401:47">1</literal></expr>;</expr_stmt>

                <continue pos:start="403:17" pos:end="403:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



<cpp:if pos:start="409:1" pos:end="409:19">#<cpp:directive pos:start="409:2" pos:end="409:3">if</cpp:directive> <expr pos:start="409:5" pos:end="409:19"><name pos:start="409:5" pos:end="409:19">CONFIG_AVFILTER</name></expr></cpp:if>

            <expr_stmt pos:start="411:13" pos:end="413:102"><expr pos:start="411:13" pos:end="413:101"><name pos:start="411:13" pos:end="411:27">frame_available</name> <operator pos:start="411:29" pos:end="411:29">=</operator> <name pos:start="411:31" pos:end="411:56"><name pos:start="411:31" pos:end="411:33">ist</name><operator pos:start="411:34" pos:end="411:35">-&gt;</operator><name pos:start="411:36" pos:end="411:37">st</name><operator pos:start="411:38" pos:end="411:39">-&gt;</operator><name pos:start="411:40" pos:end="411:44">codec</name><operator pos:start="411:45" pos:end="411:46">-&gt;</operator><name pos:start="411:47" pos:end="411:56">codec_type</name></name> <operator pos:start="411:58" pos:end="411:59">!=</operator> <name pos:start="411:61" pos:end="411:78">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="411:80" pos:end="411:81">||</operator>

                <operator pos:start="413:17" pos:end="413:17">!</operator><name pos:start="413:18" pos:end="413:41"><name pos:start="413:18" pos:end="413:20">ost</name><operator pos:start="413:21" pos:end="413:22">-&gt;</operator><name pos:start="413:23" pos:end="413:41">output_video_filter</name></name> <operator pos:start="413:43" pos:end="413:44">||</operator> <call pos:start="413:46" pos:end="413:101"><name pos:start="413:46" pos:end="413:64">avfilter_poll_frame</name><argument_list pos:start="413:65" pos:end="413:101">(<argument pos:start="413:66" pos:end="413:100"><expr pos:start="413:66" pos:end="413:100"><name pos:start="413:66" pos:end="413:100"><name pos:start="413:66" pos:end="413:68">ost</name><operator pos:start="413:69" pos:end="413:70">-&gt;</operator><name pos:start="413:71" pos:end="413:89">output_video_filter</name><operator pos:start="413:90" pos:end="413:91">-&gt;</operator><name pos:start="413:92" pos:end="413:97">inputs</name><index pos:start="413:98" pos:end="413:100">[<expr pos:start="413:99" pos:end="413:99"><literal type="number" pos:start="413:99" pos:end="413:99">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <while pos:start="415:13" pos:end="641:13">while <condition pos:start="415:19" pos:end="415:35">(<expr pos:start="415:20" pos:end="415:34"><name pos:start="415:20" pos:end="415:34">frame_available</name></expr>)</condition> <block pos:start="415:37" pos:end="641:13">{<block_content pos:start="417:17" pos:end="639:51">

                <if_stmt pos:start="417:17" pos:end="446:0"><if pos:start="417:17" pos:end="446:0">if <condition pos:start="417:20" pos:end="417:97">(<expr pos:start="417:21" pos:end="417:96"><name pos:start="417:21" pos:end="417:46"><name pos:start="417:21" pos:end="417:23">ist</name><operator pos:start="417:24" pos:end="417:25">-&gt;</operator><name pos:start="417:26" pos:end="417:27">st</name><operator pos:start="417:28" pos:end="417:29">-&gt;</operator><name pos:start="417:30" pos:end="417:34">codec</name><operator pos:start="417:35" pos:end="417:36">-&gt;</operator><name pos:start="417:37" pos:end="417:46">codec_type</name></name> <operator pos:start="417:48" pos:end="417:49">==</operator> <name pos:start="417:51" pos:end="417:68">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="417:70" pos:end="417:71">&amp;&amp;</operator> <name pos:start="417:73" pos:end="417:96"><name pos:start="417:73" pos:end="417:75">ost</name><operator pos:start="417:76" pos:end="417:77">-&gt;</operator><name pos:start="417:78" pos:end="417:96">output_video_filter</name></name></expr>)</condition> <block pos:start="417:99" pos:end="446:0">{<block_content pos:start="419:21" pos:end="441:21">

                    <decl_stmt pos:start="419:21" pos:end="419:91"><decl pos:start="419:21" pos:end="419:90"><type pos:start="419:21" pos:end="419:30"><name pos:start="419:21" pos:end="419:30">AVRational</name></type> <name pos:start="419:32" pos:end="419:41">ist_pts_tb</name> <init pos:start="419:43" pos:end="419:90">= <expr pos:start="419:45" pos:end="419:90"><name pos:start="419:45" pos:end="419:79"><name pos:start="419:45" pos:end="419:47">ost</name><operator pos:start="419:48" pos:end="419:49">-&gt;</operator><name pos:start="419:50" pos:end="419:68">output_video_filter</name><operator pos:start="419:69" pos:end="419:70">-&gt;</operator><name pos:start="419:71" pos:end="419:76">inputs</name><index pos:start="419:77" pos:end="419:79">[<expr pos:start="419:78" pos:end="419:78"><literal type="number" pos:start="419:78" pos:end="419:78">0</literal></expr>]</index></name><operator pos:start="419:80" pos:end="419:81">-&gt;</operator><name pos:start="419:82" pos:end="419:90">time_base</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="421:21" pos:end="423:34"><if pos:start="421:21" pos:end="423:34">if <condition pos:start="421:24" pos:end="421:100">(<expr pos:start="421:25" pos:end="421:99"><call pos:start="421:25" pos:end="421:95"><name pos:start="421:25" pos:end="421:52">av_buffersink_get_buffer_ref</name><argument_list pos:start="421:53" pos:end="421:95">(<argument pos:start="421:54" pos:end="421:77"><expr pos:start="421:54" pos:end="421:77"><name pos:start="421:54" pos:end="421:77"><name pos:start="421:54" pos:end="421:56">ost</name><operator pos:start="421:57" pos:end="421:58">-&gt;</operator><name pos:start="421:59" pos:end="421:77">output_video_filter</name></name></expr></argument>, <argument pos:start="421:80" pos:end="421:91"><expr pos:start="421:80" pos:end="421:91"><operator pos:start="421:80" pos:end="421:80">&amp;</operator><name pos:start="421:81" pos:end="421:91"><name pos:start="421:81" pos:end="421:83">ost</name><operator pos:start="421:84" pos:end="421:85">-&gt;</operator><name pos:start="421:86" pos:end="421:91">picref</name></name></expr></argument>, <argument pos:start="421:94" pos:end="421:94"><expr pos:start="421:94" pos:end="421:94"><literal type="number" pos:start="421:94" pos:end="421:94">0</literal></expr></argument>)</argument_list></call> <operator pos:start="421:97" pos:end="421:97">&lt;</operator> <literal type="number" pos:start="421:99" pos:end="421:99">0</literal></expr>)</condition><block type="pseudo" pos:start="423:25" pos:end="423:34"><block_content pos:start="423:25" pos:end="423:34">

                        <goto pos:start="423:25" pos:end="423:34">goto <name pos:start="423:30" pos:end="423:33">cont</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="425:21" pos:end="431:21"><if pos:start="425:21" pos:end="431:21">if <condition pos:start="425:24" pos:end="425:85">(<expr pos:start="425:25" pos:end="425:84"><operator pos:start="425:25" pos:end="425:25">!</operator><name pos:start="425:26" pos:end="425:39">filtered_frame</name> <operator pos:start="425:41" pos:end="425:42">&amp;&amp;</operator> <operator pos:start="425:44" pos:end="425:44">!</operator><operator pos:start="425:45" pos:end="425:45">(</operator><name pos:start="425:46" pos:end="425:59">filtered_frame</name> <operator pos:start="425:61" pos:end="425:61">=</operator> <call pos:start="425:63" pos:end="425:83"><name pos:start="425:63" pos:end="425:81">avcodec_alloc_frame</name><argument_list pos:start="425:82" pos:end="425:83">()</argument_list></call><operator pos:start="425:84" pos:end="425:84">)</operator></expr>)</condition> <block pos:start="425:87" pos:end="431:21">{<block_content pos:start="427:25" pos:end="429:34">

                        <expr_stmt pos:start="427:25" pos:end="427:46"><expr pos:start="427:25" pos:end="427:45"><name pos:start="427:25" pos:end="427:27">ret</name> <operator pos:start="427:29" pos:end="427:29">=</operator> <call pos:start="427:31" pos:end="427:45"><name pos:start="427:31" pos:end="427:37">AVERROR</name><argument_list pos:start="427:38" pos:end="427:45">(<argument pos:start="427:39" pos:end="427:44"><expr pos:start="427:39" pos:end="427:44"><name pos:start="427:39" pos:end="427:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="429:25" pos:end="429:34">goto <name pos:start="429:30" pos:end="429:33">fail</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="433:21" pos:end="433:52"><expr pos:start="433:21" pos:end="433:51"><operator pos:start="433:21" pos:end="433:21">*</operator><name pos:start="433:22" pos:end="433:35">filtered_frame</name><operator pos:start="433:36" pos:end="433:36">=</operator> <operator pos:start="433:38" pos:end="433:38">*</operator><name pos:start="433:39" pos:end="433:51">decoded_frame</name></expr>;</expr_stmt> <comment type="line" pos:start="433:54" pos:end="433:71">//for me_threshold</comment>

                    <if_stmt pos:start="435:21" pos:end="441:21"><if pos:start="435:21" pos:end="441:21">if <condition pos:start="435:24" pos:end="435:36">(<expr pos:start="435:25" pos:end="435:35"><name pos:start="435:25" pos:end="435:35"><name pos:start="435:25" pos:end="435:27">ost</name><operator pos:start="435:28" pos:end="435:29">-&gt;</operator><name pos:start="435:30" pos:end="435:35">picref</name></name></expr>)</condition> <block pos:start="435:38" pos:end="441:21">{<block_content pos:start="437:25" pos:end="439:94">

                        <expr_stmt pos:start="437:25" pos:end="437:95"><expr pos:start="437:25" pos:end="437:94"><call pos:start="437:25" pos:end="437:94"><name pos:start="437:25" pos:end="437:65">avfilter_fill_frame_from_video_buffer_ref</name><argument_list pos:start="437:66" pos:end="437:94">(<argument pos:start="437:67" pos:end="437:80"><expr pos:start="437:67" pos:end="437:80"><name pos:start="437:67" pos:end="437:80">filtered_frame</name></expr></argument>, <argument pos:start="437:83" pos:end="437:93"><expr pos:start="437:83" pos:end="437:93"><name pos:start="437:83" pos:end="437:93"><name pos:start="437:83" pos:end="437:85">ost</name><operator pos:start="437:86" pos:end="437:87">-&gt;</operator><name pos:start="437:88" pos:end="437:93">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="439:25" pos:end="439:94"><expr pos:start="439:25" pos:end="439:93"><name pos:start="439:25" pos:end="439:32"><name pos:start="439:25" pos:end="439:27">ist</name><operator pos:start="439:28" pos:end="439:29">-&gt;</operator><name pos:start="439:30" pos:end="439:32">pts</name></name> <operator pos:start="439:34" pos:end="439:34">=</operator> <call pos:start="439:36" pos:end="439:93"><name pos:start="439:36" pos:end="439:47">av_rescale_q</name><argument_list pos:start="439:48" pos:end="439:93">(<argument pos:start="439:49" pos:end="439:64"><expr pos:start="439:49" pos:end="439:64"><name pos:start="439:49" pos:end="439:64"><name pos:start="439:49" pos:end="439:51">ost</name><operator pos:start="439:52" pos:end="439:53">-&gt;</operator><name pos:start="439:54" pos:end="439:59">picref</name><operator pos:start="439:60" pos:end="439:61">-&gt;</operator><name pos:start="439:62" pos:end="439:64">pts</name></name></expr></argument>, <argument pos:start="439:67" pos:end="439:76"><expr pos:start="439:67" pos:end="439:76"><name pos:start="439:67" pos:end="439:76">ist_pts_tb</name></expr></argument>, <argument pos:start="439:79" pos:end="439:92"><expr pos:start="439:79" pos:end="439:92"><name pos:start="439:79" pos:end="439:92">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

<cpp:else pos:start="445:1" pos:end="445:5">#<cpp:directive pos:start="445:2" pos:end="445:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="447:17" pos:end="450:0"><expr pos:start="447:17" pos:end="447:46"><name pos:start="447:17" pos:end="447:30">filtered_frame</name> <operator pos:start="447:32" pos:end="447:32">=</operator> <name pos:start="447:34" pos:end="447:46">decoded_frame</name></expr>;</expr_stmt>

<cpp:endif pos:start="449:1" pos:end="449:6">#<cpp:directive pos:start="449:2" pos:end="449:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="451:17" pos:end="451:55"><expr pos:start="451:17" pos:end="451:54"><name pos:start="451:17" pos:end="451:18">os</name> <operator pos:start="451:20" pos:end="451:20">=</operator> <name pos:start="451:22" pos:end="451:50"><name pos:start="451:22" pos:end="451:33">output_files</name><index pos:start="451:34" pos:end="451:50">[<expr pos:start="451:35" pos:end="451:49"><name pos:start="451:35" pos:end="451:49"><name pos:start="451:35" pos:end="451:37">ost</name><operator pos:start="451:38" pos:end="451:39">-&gt;</operator><name pos:start="451:40" pos:end="451:49">file_index</name></name></expr>]</index></name><operator pos:start="451:51" pos:end="451:51">.</operator><name pos:start="451:52" pos:end="451:54">ctx</name></expr>;</expr_stmt>



                <comment type="block" pos:start="455:17" pos:end="455:52">/* set the input output pts pairs */</comment>

                <comment type="line" pos:start="457:17" pos:end="457:122">//ost-&gt;sync_ipts = (double)(ist-&gt;pts + input_files[ist-&gt;file_index].ts_offset - start_time)/ AV_TIME_BASE;</comment>



                <if_stmt pos:start="461:17" pos:end="632:0"><if pos:start="461:17" pos:end="507:17">if <condition pos:start="461:20" pos:end="461:41">(<expr pos:start="461:21" pos:end="461:40"><name pos:start="461:21" pos:end="461:40"><name pos:start="461:21" pos:end="461:23">ost</name><operator pos:start="461:24" pos:end="461:25">-&gt;</operator><name pos:start="461:26" pos:end="461:40">encoding_needed</name></name></expr>)</condition> <block pos:start="461:43" pos:end="507:17">{<block_content pos:start="463:21" pos:end="505:21">

                    <expr_stmt pos:start="463:21" pos:end="463:53"><expr pos:start="463:21" pos:end="463:52"><call pos:start="463:21" pos:end="463:52"><name pos:start="463:21" pos:end="463:30">av_assert0</name><argument_list pos:start="463:31" pos:end="463:52">(<argument pos:start="463:32" pos:end="463:51"><expr pos:start="463:32" pos:end="463:51"><name pos:start="463:32" pos:end="463:51"><name pos:start="463:32" pos:end="463:34">ist</name><operator pos:start="463:35" pos:end="463:36">-&gt;</operator><name pos:start="463:37" pos:end="463:51">decoding_needed</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="465:21" pos:end="505:21">switch<condition pos:start="465:27" pos:end="465:54">(<expr pos:start="465:28" pos:end="465:53"><name pos:start="465:28" pos:end="465:53"><name pos:start="465:28" pos:end="465:30">ost</name><operator pos:start="465:31" pos:end="465:32">-&gt;</operator><name pos:start="465:33" pos:end="465:34">st</name><operator pos:start="465:35" pos:end="465:36">-&gt;</operator><name pos:start="465:37" pos:end="465:41">codec</name><operator pos:start="465:42" pos:end="465:43">-&gt;</operator><name pos:start="465:44" pos:end="465:53">codec_type</name></name></expr>)</condition> <block pos:start="465:56" pos:end="505:21">{<block_content pos:start="467:21" pos:end="503:32">

                    <case pos:start="467:21" pos:end="467:44">case <expr pos:start="467:26" pos:end="467:43"><name pos:start="467:26" pos:end="467:43">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                        <expr_stmt pos:start="469:25" pos:end="469:88"><expr pos:start="469:25" pos:end="469:87"><call pos:start="469:25" pos:end="469:87"><name pos:start="469:25" pos:end="469:36">do_audio_out</name><argument_list pos:start="469:37" pos:end="469:87">(<argument pos:start="469:38" pos:end="469:39"><expr pos:start="469:38" pos:end="469:39"><name pos:start="469:38" pos:end="469:39">os</name></expr></argument>, <argument pos:start="469:42" pos:end="469:44"><expr pos:start="469:42" pos:end="469:44"><name pos:start="469:42" pos:end="469:44">ost</name></expr></argument>, <argument pos:start="469:47" pos:end="469:49"><expr pos:start="469:47" pos:end="469:49"><name pos:start="469:47" pos:end="469:49">ist</name></expr></argument>, <argument pos:start="469:52" pos:end="469:67"><expr pos:start="469:52" pos:end="469:67"><name pos:start="469:52" pos:end="469:67">decoded_data_buf</name></expr></argument>, <argument pos:start="469:70" pos:end="469:86"><expr pos:start="469:70" pos:end="469:86"><name pos:start="469:70" pos:end="469:86">decoded_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="471:25" pos:end="471:30">break;</break>

                    <case pos:start="473:21" pos:end="476:0">case <expr pos:start="473:26" pos:end="473:43"><name pos:start="473:26" pos:end="473:43">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

<cpp:if pos:start="475:1" pos:end="475:19">#<cpp:directive pos:start="475:2" pos:end="475:3">if</cpp:directive> <expr pos:start="475:5" pos:end="475:19"><name pos:start="475:5" pos:end="475:19">CONFIG_AVFILTER</name></expr></cpp:if>

                        <if_stmt pos:start="477:25" pos:end="482:0"><if pos:start="477:25" pos:end="482:0">if <condition pos:start="477:28" pos:end="477:75">(<expr pos:start="477:29" pos:end="477:74"><name pos:start="477:29" pos:end="477:46"><name pos:start="477:29" pos:end="477:31">ost</name><operator pos:start="477:32" pos:end="477:33">-&gt;</operator><name pos:start="477:34" pos:end="477:39">picref</name><operator pos:start="477:40" pos:end="477:41">-&gt;</operator><name pos:start="477:42" pos:end="477:46">video</name></name> <operator pos:start="477:48" pos:end="477:49">&amp;&amp;</operator> <operator pos:start="477:51" pos:end="477:51">!</operator><name pos:start="477:52" pos:end="477:74"><name pos:start="477:52" pos:end="477:54">ost</name><operator pos:start="477:55" pos:end="477:56">-&gt;</operator><name pos:start="477:57" pos:end="477:74">frame_aspect_ratio</name></name></expr>)</condition><block type="pseudo" pos:start="479:29" pos:end="482:0"><block_content pos:start="479:29" pos:end="482:0">

                            <expr_stmt pos:start="479:29" pos:end="482:0"><expr pos:start="479:29" pos:end="479:105"><name pos:start="479:29" pos:end="479:63"><name pos:start="479:29" pos:end="479:31">ost</name><operator pos:start="479:32" pos:end="479:33">-&gt;</operator><name pos:start="479:34" pos:end="479:35">st</name><operator pos:start="479:36" pos:end="479:37">-&gt;</operator><name pos:start="479:38" pos:end="479:42">codec</name><operator pos:start="479:43" pos:end="479:44">-&gt;</operator><name pos:start="479:45" pos:end="479:63">sample_aspect_ratio</name></name> <operator pos:start="479:65" pos:end="479:65">=</operator> <name pos:start="479:67" pos:end="479:105"><name pos:start="479:67" pos:end="479:69">ost</name><operator pos:start="479:70" pos:end="479:71">-&gt;</operator><name pos:start="479:72" pos:end="479:77">picref</name><operator pos:start="479:78" pos:end="479:79">-&gt;</operator><name pos:start="479:80" pos:end="479:84">video</name><operator pos:start="479:85" pos:end="479:86">-&gt;</operator><name pos:start="479:87" pos:end="479:105">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="481:1" pos:end="481:6">#<cpp:directive pos:start="481:2" pos:end="481:6">endif</cpp:directive></cpp:endif>

                        <expr_stmt pos:start="483:25" pos:end="485:92"><expr pos:start="483:25" pos:end="485:91"><call pos:start="483:25" pos:end="485:91"><name pos:start="483:25" pos:end="483:36">do_video_out</name><argument_list pos:start="483:37" pos:end="485:91">(<argument pos:start="483:38" pos:end="483:39"><expr pos:start="483:38" pos:end="483:39"><name pos:start="483:38" pos:end="483:39">os</name></expr></argument>, <argument pos:start="483:42" pos:end="483:44"><expr pos:start="483:42" pos:end="483:44"><name pos:start="483:42" pos:end="483:44">ost</name></expr></argument>, <argument pos:start="483:47" pos:end="483:49"><expr pos:start="483:47" pos:end="483:49"><name pos:start="483:47" pos:end="483:49">ist</name></expr></argument>, <argument pos:start="483:52" pos:end="483:65"><expr pos:start="483:52" pos:end="483:65"><name pos:start="483:52" pos:end="483:65">filtered_frame</name></expr></argument>, <argument pos:start="483:68" pos:end="483:78"><expr pos:start="483:68" pos:end="483:78"><operator pos:start="483:68" pos:end="483:68">&amp;</operator><name pos:start="483:69" pos:end="483:78">frame_size</name></expr></argument>,

                                     <argument pos:start="485:38" pos:end="485:90"><expr pos:start="485:38" pos:end="485:90"><ternary pos:start="485:38" pos:end="485:90"><condition pos:start="485:38" pos:end="485:49"><expr pos:start="485:38" pos:end="485:47"><name pos:start="485:38" pos:end="485:47">same_quant</name></expr> ?</condition><then pos:start="485:51" pos:end="485:57"> <expr pos:start="485:51" pos:end="485:57"><name pos:start="485:51" pos:end="485:57">quality</name></expr> </then><else pos:start="485:59" pos:end="485:90">: <expr pos:start="485:61" pos:end="485:90"><name pos:start="485:61" pos:end="485:90"><name pos:start="485:61" pos:end="485:63">ost</name><operator pos:start="485:64" pos:end="485:65">-&gt;</operator><name pos:start="485:66" pos:end="485:67">st</name><operator pos:start="485:68" pos:end="485:69">-&gt;</operator><name pos:start="485:70" pos:end="485:74">codec</name><operator pos:start="485:75" pos:end="485:76">-&gt;</operator><name pos:start="485:77" pos:end="485:90">global_quality</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="487:25" pos:end="489:64"><if pos:start="487:25" pos:end="489:64">if <condition pos:start="487:28" pos:end="487:58">(<expr pos:start="487:29" pos:end="487:57"><name pos:start="487:29" pos:end="487:43">vstats_filename</name> <operator pos:start="487:45" pos:end="487:46">&amp;&amp;</operator> <name pos:start="487:48" pos:end="487:57">frame_size</name></expr>)</condition><block type="pseudo" pos:start="489:29" pos:end="489:64"><block_content pos:start="489:29" pos:end="489:64">

                            <expr_stmt pos:start="489:29" pos:end="489:64"><expr pos:start="489:29" pos:end="489:63"><call pos:start="489:29" pos:end="489:63"><name pos:start="489:29" pos:end="489:42">do_video_stats</name><argument_list pos:start="489:43" pos:end="489:63">(<argument pos:start="489:44" pos:end="489:45"><expr pos:start="489:44" pos:end="489:45"><name pos:start="489:44" pos:end="489:45">os</name></expr></argument>, <argument pos:start="489:48" pos:end="489:50"><expr pos:start="489:48" pos:end="489:50"><name pos:start="489:48" pos:end="489:50">ost</name></expr></argument>, <argument pos:start="489:53" pos:end="489:62"><expr pos:start="489:53" pos:end="489:62"><name pos:start="489:53" pos:end="489:62">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="491:25" pos:end="491:30">break;</break>

                    <case pos:start="493:21" pos:end="493:47">case <expr pos:start="493:26" pos:end="493:46"><name pos:start="493:26" pos:end="493:46">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

                        <expr_stmt pos:start="495:25" pos:end="497:50"><expr pos:start="495:25" pos:end="497:49"><call pos:start="495:25" pos:end="497:49"><name pos:start="495:25" pos:end="495:39">do_subtitle_out</name><argument_list pos:start="495:40" pos:end="497:49">(<argument pos:start="495:41" pos:end="495:42"><expr pos:start="495:41" pos:end="495:42"><name pos:start="495:41" pos:end="495:42">os</name></expr></argument>, <argument pos:start="495:45" pos:end="495:47"><expr pos:start="495:45" pos:end="495:47"><name pos:start="495:45" pos:end="495:47">ost</name></expr></argument>, <argument pos:start="495:50" pos:end="495:52"><expr pos:start="495:50" pos:end="495:52"><name pos:start="495:50" pos:end="495:52">ist</name></expr></argument>, <argument pos:start="495:55" pos:end="495:63"><expr pos:start="495:55" pos:end="495:63"><operator pos:start="495:55" pos:end="495:55">&amp;</operator><name pos:start="495:56" pos:end="495:63">subtitle</name></expr></argument>,

                                        <argument pos:start="497:41" pos:end="497:48"><expr pos:start="497:41" pos:end="497:48"><name pos:start="497:41" pos:end="497:48"><name pos:start="497:41" pos:end="497:43">pkt</name><operator pos:start="497:44" pos:end="497:45">-&gt;</operator><name pos:start="497:46" pos:end="497:48">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="499:25" pos:end="499:30">break;</break>

                    <default pos:start="501:21" pos:end="501:28">default:</default>

                        <expr_stmt pos:start="503:25" pos:end="503:32"><expr pos:start="503:25" pos:end="503:31"><call pos:start="503:25" pos:end="503:31"><name pos:start="503:25" pos:end="503:29">abort</name><argument_list pos:start="503:30" pos:end="503:31">()</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="507:19" pos:end="632:0">else <block pos:start="507:24" pos:end="632:0">{<block_content pos:start="509:21" pos:end="627:42">

                    <decl_stmt pos:start="509:21" pos:end="509:35"><decl pos:start="509:21" pos:end="509:34"><type pos:start="509:21" pos:end="509:29"><name pos:start="509:21" pos:end="509:29">AVPicture</name></type> <name pos:start="509:31" pos:end="509:34">pict</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="511:21" pos:end="511:34"><decl pos:start="511:21" pos:end="511:33"><type pos:start="511:21" pos:end="511:28"><name pos:start="511:21" pos:end="511:28">AVPacket</name></type> <name pos:start="511:30" pos:end="511:33">opkt</name></decl>;</decl_stmt>

                    <decl_stmt pos:start="513:21" pos:end="513:112"><decl pos:start="513:21" pos:end="513:111"><type pos:start="513:21" pos:end="513:27"><name pos:start="513:21" pos:end="513:27">int64_t</name></type> <name pos:start="513:29" pos:end="513:45">ost_tb_start_time</name><init pos:start="513:46" pos:end="513:111">= <expr pos:start="513:48" pos:end="513:111"><call pos:start="513:48" pos:end="513:111"><name pos:start="513:48" pos:end="513:59">av_rescale_q</name><argument_list pos:start="513:60" pos:end="513:111">(<argument pos:start="513:61" pos:end="513:74"><expr pos:start="513:61" pos:end="513:74"><name pos:start="513:61" pos:end="513:74"><name pos:start="513:61" pos:end="513:62">of</name><operator pos:start="513:63" pos:end="513:64">-&gt;</operator><name pos:start="513:65" pos:end="513:74">start_time</name></name></expr></argument>, <argument pos:start="513:77" pos:end="513:90"><expr pos:start="513:77" pos:end="513:90"><name pos:start="513:77" pos:end="513:90">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="513:93" pos:end="513:110"><expr pos:start="513:93" pos:end="513:110"><name pos:start="513:93" pos:end="513:110"><name pos:start="513:93" pos:end="513:95">ost</name><operator pos:start="513:96" pos:end="513:97">-&gt;</operator><name pos:start="513:98" pos:end="513:99">st</name><operator pos:start="513:100" pos:end="513:101">-&gt;</operator><name pos:start="513:102" pos:end="513:110">time_base</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="515:21" pos:end="515:42"><expr pos:start="515:21" pos:end="515:41"><call pos:start="515:21" pos:end="515:41"><name pos:start="515:21" pos:end="515:34">av_init_packet</name><argument_list pos:start="515:35" pos:end="515:41">(<argument pos:start="515:36" pos:end="515:40"><expr pos:start="515:36" pos:end="515:40"><operator pos:start="515:36" pos:end="515:36">&amp;</operator><name pos:start="515:37" pos:end="515:40">opkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="519:21" pos:end="526:0"><if pos:start="519:21" pos:end="526:0">if <condition pos:start="519:24" pos:end="522:0">(<expr pos:start="519:25" pos:end="519:109"><operator pos:start="519:25" pos:end="519:25">(</operator><operator pos:start="519:26" pos:end="519:26">!</operator><name pos:start="519:27" pos:end="519:43"><name pos:start="519:27" pos:end="519:29">ost</name><operator pos:start="519:30" pos:end="519:31">-&gt;</operator><name pos:start="519:32" pos:end="519:43">frame_number</name></name> <operator pos:start="519:45" pos:end="519:46">&amp;&amp;</operator> <operator pos:start="519:48" pos:end="519:48">!</operator><operator pos:start="519:49" pos:end="519:49">(</operator><name pos:start="519:50" pos:end="519:59"><name pos:start="519:50" pos:end="519:52">pkt</name><operator pos:start="519:53" pos:end="519:54">-&gt;</operator><name pos:start="519:55" pos:end="519:59">flags</name></name> <operator pos:start="519:61" pos:end="519:61">&amp;</operator> <name pos:start="519:63" pos:end="519:77">AV_PKT_FLAG_KEY</name><operator pos:start="519:78" pos:end="519:78">)</operator><operator pos:start="519:79" pos:end="519:79">)</operator> <operator pos:start="519:81" pos:end="519:82">&amp;&amp;</operator> <operator pos:start="519:84" pos:end="519:84">!</operator><name pos:start="519:85" pos:end="519:109">copy_initial_nonkeyframes</name></expr>)</condition><block type="pseudo" pos:start="523:25" pos:end="526:0"><block_content pos:start="523:25" pos:end="526:0">

<cpp:if pos:start="521:1" pos:end="521:20">#<cpp:directive pos:start="521:2" pos:end="521:3">if</cpp:directive> <expr pos:start="521:5" pos:end="521:20"><operator pos:start="521:5" pos:end="521:5">!</operator><name pos:start="521:6" pos:end="521:20">CONFIG_AVFILTER</name></expr></cpp:if>

                        <continue pos:start="523:25" pos:end="526:0">continue;</continue></block_content></block></if></if_stmt>

<cpp:else pos:start="525:1" pos:end="525:5">#<cpp:directive pos:start="525:2" pos:end="525:5">else</cpp:directive></cpp:else>

                        <goto pos:start="527:25" pos:end="530:0">goto <name pos:start="527:30" pos:end="527:33">cont</name>;</goto>

<cpp:endif pos:start="529:1" pos:end="529:6">#<cpp:directive pos:start="529:2" pos:end="529:6">endif</cpp:directive></cpp:endif>



                    <comment type="block" pos:start="533:21" pos:end="533:75">/* no reencoding needed : output the packet directly */</comment>

                    <comment type="block" pos:start="535:21" pos:end="535:52">/* force the input stream PTS */</comment>



                    <if_stmt pos:start="539:21" pos:end="549:21"><if pos:start="539:21" pos:end="541:48">if<condition pos:start="539:23" pos:end="539:72">(<expr pos:start="539:24" pos:end="539:71"><name pos:start="539:24" pos:end="539:49"><name pos:start="539:24" pos:end="539:26">ost</name><operator pos:start="539:27" pos:end="539:28">-&gt;</operator><name pos:start="539:29" pos:end="539:30">st</name><operator pos:start="539:31" pos:end="539:32">-&gt;</operator><name pos:start="539:33" pos:end="539:37">codec</name><operator pos:start="539:38" pos:end="539:39">-&gt;</operator><name pos:start="539:40" pos:end="539:49">codec_type</name></name> <operator pos:start="539:51" pos:end="539:52">==</operator> <name pos:start="539:54" pos:end="539:71">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="541:25" pos:end="541:48"><block_content pos:start="541:25" pos:end="541:48">

                        <expr_stmt pos:start="541:25" pos:end="541:48"><expr pos:start="541:25" pos:end="541:47"><name pos:start="541:25" pos:end="541:34">audio_size</name> <operator pos:start="541:36" pos:end="541:37">+=</operator> <name pos:start="541:39" pos:end="541:47">data_size</name></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="543:21" pos:end="549:21">else if <condition pos:start="543:29" pos:end="543:78">(<expr pos:start="543:30" pos:end="543:77"><name pos:start="543:30" pos:end="543:55"><name pos:start="543:30" pos:end="543:32">ost</name><operator pos:start="543:33" pos:end="543:34">-&gt;</operator><name pos:start="543:35" pos:end="543:36">st</name><operator pos:start="543:37" pos:end="543:38">-&gt;</operator><name pos:start="543:39" pos:end="543:43">codec</name><operator pos:start="543:44" pos:end="543:45">-&gt;</operator><name pos:start="543:46" pos:end="543:55">codec_type</name></name> <operator pos:start="543:57" pos:end="543:58">==</operator> <name pos:start="543:60" pos:end="543:77">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="543:80" pos:end="549:21">{<block_content pos:start="545:25" pos:end="547:41">

                        <expr_stmt pos:start="545:25" pos:end="545:48"><expr pos:start="545:25" pos:end="545:47"><name pos:start="545:25" pos:end="545:34">video_size</name> <operator pos:start="545:36" pos:end="545:37">+=</operator> <name pos:start="545:39" pos:end="545:47">data_size</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="547:25" pos:end="547:41"><expr pos:start="547:25" pos:end="547:40"><name pos:start="547:25" pos:end="547:38"><name pos:start="547:25" pos:end="547:27">ost</name><operator pos:start="547:28" pos:end="547:29">-&gt;</operator><name pos:start="547:30" pos:end="547:38">sync_opts</name></name><operator pos:start="547:39" pos:end="547:40">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="553:21" pos:end="553:50"><expr pos:start="553:21" pos:end="553:49"><name pos:start="553:21" pos:end="553:37"><name pos:start="553:21" pos:end="553:24">opkt</name><operator pos:start="553:25" pos:end="553:25">.</operator><name pos:start="553:26" pos:end="553:37">stream_index</name></name><operator pos:start="553:38" pos:end="553:38">=</operator> <name pos:start="553:40" pos:end="553:49"><name pos:start="553:40" pos:end="553:42">ost</name><operator pos:start="553:43" pos:end="553:44">-&gt;</operator><name pos:start="553:45" pos:end="553:49">index</name></name></expr>;</expr_stmt>

                    <if_stmt pos:start="555:21" pos:end="561:49"><if pos:start="555:21" pos:end="557:117">if<condition pos:start="555:23" pos:end="555:50">(<expr pos:start="555:24" pos:end="555:49"><name pos:start="555:24" pos:end="555:31"><name pos:start="555:24" pos:end="555:26">pkt</name><operator pos:start="555:27" pos:end="555:28">-&gt;</operator><name pos:start="555:29" pos:end="555:31">pts</name></name> <operator pos:start="555:33" pos:end="555:34">!=</operator> <name pos:start="555:36" pos:end="555:49">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="557:25" pos:end="557:117"><block_content pos:start="557:25" pos:end="557:117">

                        <expr_stmt pos:start="557:25" pos:end="557:117"><expr pos:start="557:25" pos:end="557:116"><name pos:start="557:25" pos:end="557:32"><name pos:start="557:25" pos:end="557:28">opkt</name><operator pos:start="557:29" pos:end="557:29">.</operator><name pos:start="557:30" pos:end="557:32">pts</name></name><operator pos:start="557:33" pos:end="557:33">=</operator> <call pos:start="557:35" pos:end="557:96"><name pos:start="557:35" pos:end="557:46">av_rescale_q</name><argument_list pos:start="557:47" pos:end="557:96">(<argument pos:start="557:48" pos:end="557:55"><expr pos:start="557:48" pos:end="557:55"><name pos:start="557:48" pos:end="557:55"><name pos:start="557:48" pos:end="557:50">pkt</name><operator pos:start="557:51" pos:end="557:52">-&gt;</operator><name pos:start="557:53" pos:end="557:55">pts</name></name></expr></argument>, <argument pos:start="557:58" pos:end="557:75"><expr pos:start="557:58" pos:end="557:75"><name pos:start="557:58" pos:end="557:75"><name pos:start="557:58" pos:end="557:60">ist</name><operator pos:start="557:61" pos:end="557:62">-&gt;</operator><name pos:start="557:63" pos:end="557:64">st</name><operator pos:start="557:65" pos:end="557:66">-&gt;</operator><name pos:start="557:67" pos:end="557:75">time_base</name></name></expr></argument>, <argument pos:start="557:78" pos:end="557:95"><expr pos:start="557:78" pos:end="557:95"><name pos:start="557:78" pos:end="557:95"><name pos:start="557:78" pos:end="557:80">ost</name><operator pos:start="557:81" pos:end="557:82">-&gt;</operator><name pos:start="557:83" pos:end="557:84">st</name><operator pos:start="557:85" pos:end="557:86">-&gt;</operator><name pos:start="557:87" pos:end="557:95">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="557:98" pos:end="557:98">-</operator> <name pos:start="557:100" pos:end="557:116">ost_tb_start_time</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="559:21" pos:end="561:49">else<block type="pseudo" pos:start="561:25" pos:end="561:49"><block_content pos:start="561:25" pos:end="561:49">

                        <expr_stmt pos:start="561:25" pos:end="561:49"><expr pos:start="561:25" pos:end="561:48"><name pos:start="561:25" pos:end="561:32"><name pos:start="561:25" pos:end="561:28">opkt</name><operator pos:start="561:29" pos:end="561:29">.</operator><name pos:start="561:30" pos:end="561:32">pts</name></name><operator pos:start="561:33" pos:end="561:33">=</operator> <name pos:start="561:35" pos:end="561:48">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <if_stmt pos:start="565:21" pos:end="571:98"><if pos:start="565:21" pos:end="567:94">if <condition pos:start="565:24" pos:end="565:51">(<expr pos:start="565:25" pos:end="565:50"><name pos:start="565:25" pos:end="565:32"><name pos:start="565:25" pos:end="565:27">pkt</name><operator pos:start="565:28" pos:end="565:29">-&gt;</operator><name pos:start="565:30" pos:end="565:32">dts</name></name> <operator pos:start="565:34" pos:end="565:35">==</operator> <name pos:start="565:37" pos:end="565:50">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="567:25" pos:end="567:94"><block_content pos:start="567:25" pos:end="567:94">

                        <expr_stmt pos:start="567:25" pos:end="567:94"><expr pos:start="567:25" pos:end="567:93"><name pos:start="567:25" pos:end="567:32"><name pos:start="567:25" pos:end="567:28">opkt</name><operator pos:start="567:29" pos:end="567:29">.</operator><name pos:start="567:30" pos:end="567:32">dts</name></name> <operator pos:start="567:34" pos:end="567:34">=</operator> <call pos:start="567:36" pos:end="567:93"><name pos:start="567:36" pos:end="567:47">av_rescale_q</name><argument_list pos:start="567:48" pos:end="567:93">(<argument pos:start="567:49" pos:end="567:56"><expr pos:start="567:49" pos:end="567:56"><name pos:start="567:49" pos:end="567:56"><name pos:start="567:49" pos:end="567:51">ist</name><operator pos:start="567:52" pos:end="567:53">-&gt;</operator><name pos:start="567:54" pos:end="567:56">pts</name></name></expr></argument>, <argument pos:start="567:59" pos:end="567:72"><expr pos:start="567:59" pos:end="567:72"><name pos:start="567:59" pos:end="567:72">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="567:75" pos:end="567:92"><expr pos:start="567:75" pos:end="567:92"><name pos:start="567:75" pos:end="567:92"><name pos:start="567:75" pos:end="567:77">ost</name><operator pos:start="567:78" pos:end="567:79">-&gt;</operator><name pos:start="567:80" pos:end="567:81">st</name><operator pos:start="567:82" pos:end="567:83">-&gt;</operator><name pos:start="567:84" pos:end="567:92">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="569:21" pos:end="571:98">else<block type="pseudo" pos:start="571:25" pos:end="571:98"><block_content pos:start="571:25" pos:end="571:98">

                        <expr_stmt pos:start="571:25" pos:end="571:98"><expr pos:start="571:25" pos:end="571:97"><name pos:start="571:25" pos:end="571:32"><name pos:start="571:25" pos:end="571:28">opkt</name><operator pos:start="571:29" pos:end="571:29">.</operator><name pos:start="571:30" pos:end="571:32">dts</name></name> <operator pos:start="571:34" pos:end="571:34">=</operator> <call pos:start="571:36" pos:end="571:97"><name pos:start="571:36" pos:end="571:47">av_rescale_q</name><argument_list pos:start="571:48" pos:end="571:97">(<argument pos:start="571:49" pos:end="571:56"><expr pos:start="571:49" pos:end="571:56"><name pos:start="571:49" pos:end="571:56"><name pos:start="571:49" pos:end="571:51">pkt</name><operator pos:start="571:52" pos:end="571:53">-&gt;</operator><name pos:start="571:54" pos:end="571:56">dts</name></name></expr></argument>, <argument pos:start="571:59" pos:end="571:76"><expr pos:start="571:59" pos:end="571:76"><name pos:start="571:59" pos:end="571:76"><name pos:start="571:59" pos:end="571:61">ist</name><operator pos:start="571:62" pos:end="571:63">-&gt;</operator><name pos:start="571:64" pos:end="571:65">st</name><operator pos:start="571:66" pos:end="571:67">-&gt;</operator><name pos:start="571:68" pos:end="571:76">time_base</name></name></expr></argument>, <argument pos:start="571:79" pos:end="571:96"><expr pos:start="571:79" pos:end="571:96"><name pos:start="571:79" pos:end="571:96"><name pos:start="571:79" pos:end="571:81">ost</name><operator pos:start="571:82" pos:end="571:83">-&gt;</operator><name pos:start="571:84" pos:end="571:85">st</name><operator pos:start="571:86" pos:end="571:87">-&gt;</operator><name pos:start="571:88" pos:end="571:96">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="573:21" pos:end="573:50"><expr pos:start="573:21" pos:end="573:49"><name pos:start="573:21" pos:end="573:28"><name pos:start="573:21" pos:end="573:24">opkt</name><operator pos:start="573:25" pos:end="573:25">.</operator><name pos:start="573:26" pos:end="573:28">dts</name></name> <operator pos:start="573:30" pos:end="573:31">-=</operator> <name pos:start="573:33" pos:end="573:49">ost_tb_start_time</name></expr>;</expr_stmt>



                    <expr_stmt pos:start="577:21" pos:end="577:104"><expr pos:start="577:21" pos:end="577:103"><name pos:start="577:21" pos:end="577:33"><name pos:start="577:21" pos:end="577:24">opkt</name><operator pos:start="577:25" pos:end="577:25">.</operator><name pos:start="577:26" pos:end="577:33">duration</name></name> <operator pos:start="577:35" pos:end="577:35">=</operator> <call pos:start="577:37" pos:end="577:103"><name pos:start="577:37" pos:end="577:48">av_rescale_q</name><argument_list pos:start="577:49" pos:end="577:103">(<argument pos:start="577:50" pos:end="577:62"><expr pos:start="577:50" pos:end="577:62"><name pos:start="577:50" pos:end="577:62"><name pos:start="577:50" pos:end="577:52">pkt</name><operator pos:start="577:53" pos:end="577:54">-&gt;</operator><name pos:start="577:55" pos:end="577:62">duration</name></name></expr></argument>, <argument pos:start="577:65" pos:end="577:82"><expr pos:start="577:65" pos:end="577:82"><name pos:start="577:65" pos:end="577:82"><name pos:start="577:65" pos:end="577:67">ist</name><operator pos:start="577:68" pos:end="577:69">-&gt;</operator><name pos:start="577:70" pos:end="577:71">st</name><operator pos:start="577:72" pos:end="577:73">-&gt;</operator><name pos:start="577:74" pos:end="577:82">time_base</name></name></expr></argument>, <argument pos:start="577:85" pos:end="577:102"><expr pos:start="577:85" pos:end="577:102"><name pos:start="577:85" pos:end="577:102"><name pos:start="577:85" pos:end="577:87">ost</name><operator pos:start="577:88" pos:end="577:89">-&gt;</operator><name pos:start="577:90" pos:end="577:91">st</name><operator pos:start="577:92" pos:end="577:93">-&gt;</operator><name pos:start="577:94" pos:end="577:102">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="579:21" pos:end="579:43"><expr pos:start="579:21" pos:end="579:42"><name pos:start="579:21" pos:end="579:30"><name pos:start="579:21" pos:end="579:24">opkt</name><operator pos:start="579:25" pos:end="579:25">.</operator><name pos:start="579:26" pos:end="579:30">flags</name></name><operator pos:start="579:31" pos:end="579:31">=</operator> <name pos:start="579:33" pos:end="579:42"><name pos:start="579:33" pos:end="579:35">pkt</name><operator pos:start="579:36" pos:end="579:37">-&gt;</operator><name pos:start="579:38" pos:end="579:42">flags</name></name></expr>;</expr_stmt>



                    <comment type="line" pos:start="583:21" pos:end="583:104">//FIXME remove the following 2 lines they shall be replaced by the bitstream filters</comment>

                    <if_stmt pos:start="585:21" pos:end="603:21"><if pos:start="585:21" pos:end="597:21">if<condition pos:start="585:23" pos:end="591:24">(   <expr pos:start="585:27" pos:end="589:73"><name pos:start="585:27" pos:end="585:50"><name pos:start="585:27" pos:end="585:29">ost</name><operator pos:start="585:30" pos:end="585:31">-&gt;</operator><name pos:start="585:32" pos:end="585:33">st</name><operator pos:start="585:34" pos:end="585:35">-&gt;</operator><name pos:start="585:36" pos:end="585:40">codec</name><operator pos:start="585:41" pos:end="585:42">-&gt;</operator><name pos:start="585:43" pos:end="585:50">codec_id</name></name> <operator pos:start="585:52" pos:end="585:53">!=</operator> <name pos:start="585:55" pos:end="585:67">CODEC_ID_H264</name>

                       <operator pos:start="587:24" pos:end="587:25">&amp;&amp;</operator> <name pos:start="587:27" pos:end="587:50"><name pos:start="587:27" pos:end="587:29">ost</name><operator pos:start="587:30" pos:end="587:31">-&gt;</operator><name pos:start="587:32" pos:end="587:33">st</name><operator pos:start="587:34" pos:end="587:35">-&gt;</operator><name pos:start="587:36" pos:end="587:40">codec</name><operator pos:start="587:41" pos:end="587:42">-&gt;</operator><name pos:start="587:43" pos:end="587:50">codec_id</name></name> <operator pos:start="587:52" pos:end="587:53">!=</operator> <name pos:start="587:55" pos:end="587:73">CODEC_ID_MPEG1VIDEO</name>

                       <operator pos:start="589:24" pos:end="589:25">&amp;&amp;</operator> <name pos:start="589:27" pos:end="589:50"><name pos:start="589:27" pos:end="589:29">ost</name><operator pos:start="589:30" pos:end="589:31">-&gt;</operator><name pos:start="589:32" pos:end="589:33">st</name><operator pos:start="589:34" pos:end="589:35">-&gt;</operator><name pos:start="589:36" pos:end="589:40">codec</name><operator pos:start="589:41" pos:end="589:42">-&gt;</operator><name pos:start="589:43" pos:end="589:50">codec_id</name></name> <operator pos:start="589:52" pos:end="589:53">!=</operator> <name pos:start="589:55" pos:end="589:73">CODEC_ID_MPEG2VIDEO</name></expr>

                       )</condition> <block pos:start="591:26" pos:end="597:21">{<block_content pos:start="593:25" pos:end="595:62">

                        <if_stmt pos:start="593:25" pos:end="595:62"><if pos:start="593:25" pos:end="595:62">if<condition pos:start="593:27" pos:end="593:152">(<expr pos:start="593:28" pos:end="593:151"><call pos:start="593:28" pos:end="593:151"><name pos:start="593:28" pos:end="593:43">av_parser_change</name><argument_list pos:start="593:44" pos:end="593:151">(<argument pos:start="593:45" pos:end="593:59"><expr pos:start="593:45" pos:end="593:59"><name pos:start="593:45" pos:end="593:59"><name pos:start="593:45" pos:end="593:47">ist</name><operator pos:start="593:48" pos:end="593:49">-&gt;</operator><name pos:start="593:50" pos:end="593:51">st</name><operator pos:start="593:52" pos:end="593:53">-&gt;</operator><name pos:start="593:54" pos:end="593:59">parser</name></name></expr></argument>, <argument pos:start="593:62" pos:end="593:75"><expr pos:start="593:62" pos:end="593:75"><name pos:start="593:62" pos:end="593:75"><name pos:start="593:62" pos:end="593:64">ost</name><operator pos:start="593:65" pos:end="593:66">-&gt;</operator><name pos:start="593:67" pos:end="593:68">st</name><operator pos:start="593:69" pos:end="593:70">-&gt;</operator><name pos:start="593:71" pos:end="593:75">codec</name></name></expr></argument>, <argument pos:start="593:78" pos:end="593:87"><expr pos:start="593:78" pos:end="593:87"><operator pos:start="593:78" pos:end="593:78">&amp;</operator><name pos:start="593:79" pos:end="593:87"><name pos:start="593:79" pos:end="593:82">opkt</name><operator pos:start="593:83" pos:end="593:83">.</operator><name pos:start="593:84" pos:end="593:87">data</name></name></expr></argument>, <argument pos:start="593:90" pos:end="593:99"><expr pos:start="593:90" pos:end="593:99"><operator pos:start="593:90" pos:end="593:90">&amp;</operator><name pos:start="593:91" pos:end="593:99"><name pos:start="593:91" pos:end="593:94">opkt</name><operator pos:start="593:95" pos:end="593:95">.</operator><name pos:start="593:96" pos:end="593:99">size</name></name></expr></argument>, <argument pos:start="593:102" pos:end="593:109"><expr pos:start="593:102" pos:end="593:109"><name pos:start="593:102" pos:end="593:109">data_buf</name></expr></argument>, <argument pos:start="593:112" pos:end="593:120"><expr pos:start="593:112" pos:end="593:120"><name pos:start="593:112" pos:end="593:120">data_size</name></expr></argument>, <argument pos:start="593:123" pos:end="593:150"><expr pos:start="593:123" pos:end="593:150"><name pos:start="593:123" pos:end="593:132"><name pos:start="593:123" pos:end="593:125">pkt</name><operator pos:start="593:126" pos:end="593:127">-&gt;</operator><name pos:start="593:128" pos:end="593:132">flags</name></name> <operator pos:start="593:134" pos:end="593:134">&amp;</operator> <name pos:start="593:136" pos:end="593:150">AV_PKT_FLAG_KEY</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="595:29" pos:end="595:62"><block_content pos:start="595:29" pos:end="595:62">

                            <expr_stmt pos:start="595:29" pos:end="595:62"><expr pos:start="595:29" pos:end="595:61"><name pos:start="595:29" pos:end="595:41"><name pos:start="595:29" pos:end="595:32">opkt</name><operator pos:start="595:33" pos:end="595:33">.</operator><name pos:start="595:34" pos:end="595:41">destruct</name></name><operator pos:start="595:42" pos:end="595:42">=</operator> <name pos:start="595:44" pos:end="595:61">av_destruct_packet</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="597:23" pos:end="603:21">else <block pos:start="597:28" pos:end="603:21">{<block_content pos:start="599:25" pos:end="601:46">

                        <expr_stmt pos:start="599:25" pos:end="599:45"><expr pos:start="599:25" pos:end="599:44"><name pos:start="599:25" pos:end="599:33"><name pos:start="599:25" pos:end="599:28">opkt</name><operator pos:start="599:29" pos:end="599:29">.</operator><name pos:start="599:30" pos:end="599:33">data</name></name> <operator pos:start="599:35" pos:end="599:35">=</operator> <name pos:start="599:37" pos:end="599:44">data_buf</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="601:25" pos:end="601:46"><expr pos:start="601:25" pos:end="601:45"><name pos:start="601:25" pos:end="601:33"><name pos:start="601:25" pos:end="601:28">opkt</name><operator pos:start="601:29" pos:end="601:29">.</operator><name pos:start="601:30" pos:end="601:33">size</name></name> <operator pos:start="601:35" pos:end="601:35">=</operator> <name pos:start="601:37" pos:end="601:45">data_size</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



                    <if_stmt pos:start="607:21" pos:end="619:21"><if pos:start="607:21" pos:end="619:21">if <condition pos:start="607:24" pos:end="607:62">(<expr pos:start="607:25" pos:end="607:61"><name pos:start="607:25" pos:end="607:42"><name pos:start="607:25" pos:end="607:26">os</name><operator pos:start="607:27" pos:end="607:28">-&gt;</operator><name pos:start="607:29" pos:end="607:35">oformat</name><operator pos:start="607:36" pos:end="607:37">-&gt;</operator><name pos:start="607:38" pos:end="607:42">flags</name></name> <operator pos:start="607:44" pos:end="607:44">&amp;</operator> <name pos:start="607:46" pos:end="607:61">AVFMT_RAWPICTURE</name></expr>)</condition> <block pos:start="607:64" pos:end="619:21">{<block_content pos:start="611:25" pos:end="617:54">

                        <comment type="block" pos:start="609:25" pos:end="609:91">/* store AVPicture in AVPacket, as expected by the output format */</comment>

                        <expr_stmt pos:start="611:25" pos:end="611:129"><expr pos:start="611:25" pos:end="611:128"><call pos:start="611:25" pos:end="611:128"><name pos:start="611:25" pos:end="611:38">avpicture_fill</name><argument_list pos:start="611:39" pos:end="611:128">(<argument pos:start="611:40" pos:end="611:44"><expr pos:start="611:40" pos:end="611:44"><operator pos:start="611:40" pos:end="611:40">&amp;</operator><name pos:start="611:41" pos:end="611:44">pict</name></expr></argument>, <argument pos:start="611:47" pos:end="611:55"><expr pos:start="611:47" pos:end="611:55"><name pos:start="611:47" pos:end="611:55"><name pos:start="611:47" pos:end="611:50">opkt</name><operator pos:start="611:51" pos:end="611:51">.</operator><name pos:start="611:52" pos:end="611:55">data</name></name></expr></argument>, <argument pos:start="611:58" pos:end="611:80"><expr pos:start="611:58" pos:end="611:80"><name pos:start="611:58" pos:end="611:80"><name pos:start="611:58" pos:end="611:60">ost</name><operator pos:start="611:61" pos:end="611:62">-&gt;</operator><name pos:start="611:63" pos:end="611:64">st</name><operator pos:start="611:65" pos:end="611:66">-&gt;</operator><name pos:start="611:67" pos:end="611:71">codec</name><operator pos:start="611:72" pos:end="611:73">-&gt;</operator><name pos:start="611:74" pos:end="611:80">pix_fmt</name></name></expr></argument>, <argument pos:start="611:83" pos:end="611:103"><expr pos:start="611:83" pos:end="611:103"><name pos:start="611:83" pos:end="611:103"><name pos:start="611:83" pos:end="611:85">ost</name><operator pos:start="611:86" pos:end="611:87">-&gt;</operator><name pos:start="611:88" pos:end="611:89">st</name><operator pos:start="611:90" pos:end="611:91">-&gt;</operator><name pos:start="611:92" pos:end="611:96">codec</name><operator pos:start="611:97" pos:end="611:98">-&gt;</operator><name pos:start="611:99" pos:end="611:103">width</name></name></expr></argument>, <argument pos:start="611:106" pos:end="611:127"><expr pos:start="611:106" pos:end="611:127"><name pos:start="611:106" pos:end="611:127"><name pos:start="611:106" pos:end="611:108">ost</name><operator pos:start="611:109" pos:end="611:110">-&gt;</operator><name pos:start="611:111" pos:end="611:112">st</name><operator pos:start="611:113" pos:end="611:114">-&gt;</operator><name pos:start="611:115" pos:end="611:119">codec</name><operator pos:start="611:120" pos:end="611:121">-&gt;</operator><name pos:start="611:122" pos:end="611:127">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="613:25" pos:end="613:53"><expr pos:start="613:25" pos:end="613:52"><name pos:start="613:25" pos:end="613:33"><name pos:start="613:25" pos:end="613:28">opkt</name><operator pos:start="613:29" pos:end="613:29">.</operator><name pos:start="613:30" pos:end="613:33">data</name></name> <operator pos:start="613:35" pos:end="613:35">=</operator> <operator pos:start="613:37" pos:end="613:37">(</operator><name pos:start="613:38" pos:end="613:44">uint8_t</name> <operator pos:start="613:46" pos:end="613:46">*</operator><operator pos:start="613:47" pos:end="613:47">)</operator><operator pos:start="613:48" pos:end="613:48">&amp;</operator><name pos:start="613:49" pos:end="613:52">pict</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="615:25" pos:end="615:54"><expr pos:start="615:25" pos:end="615:53"><name pos:start="615:25" pos:end="615:33"><name pos:start="615:25" pos:end="615:28">opkt</name><operator pos:start="615:29" pos:end="615:29">.</operator><name pos:start="615:30" pos:end="615:33">size</name></name> <operator pos:start="615:35" pos:end="615:35">=</operator> <sizeof pos:start="615:37" pos:end="615:53">sizeof<argument_list pos:start="615:43" pos:end="615:53">(<argument pos:start="615:44" pos:end="615:52"><expr pos:start="615:44" pos:end="615:52"><name pos:start="615:44" pos:end="615:52">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                        <expr_stmt pos:start="617:25" pos:end="617:54"><expr pos:start="617:25" pos:end="617:53"><name pos:start="617:25" pos:end="617:34"><name pos:start="617:25" pos:end="617:28">opkt</name><operator pos:start="617:29" pos:end="617:29">.</operator><name pos:start="617:30" pos:end="617:34">flags</name></name> <operator pos:start="617:36" pos:end="617:37">|=</operator> <name pos:start="617:39" pos:end="617:53">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="621:21" pos:end="621:83"><expr pos:start="621:21" pos:end="621:82"><call pos:start="621:21" pos:end="621:82"><name pos:start="621:21" pos:end="621:31">write_frame</name><argument_list pos:start="621:32" pos:end="621:82">(<argument pos:start="621:33" pos:end="621:34"><expr pos:start="621:33" pos:end="621:34"><name pos:start="621:33" pos:end="621:34">os</name></expr></argument>, <argument pos:start="621:37" pos:end="621:41"><expr pos:start="621:37" pos:end="621:41"><operator pos:start="621:37" pos:end="621:37">&amp;</operator><name pos:start="621:38" pos:end="621:41">opkt</name></expr></argument>, <argument pos:start="621:44" pos:end="621:57"><expr pos:start="621:44" pos:end="621:57"><name pos:start="621:44" pos:end="621:57"><name pos:start="621:44" pos:end="621:46">ost</name><operator pos:start="621:47" pos:end="621:48">-&gt;</operator><name pos:start="621:49" pos:end="621:50">st</name><operator pos:start="621:51" pos:end="621:52">-&gt;</operator><name pos:start="621:53" pos:end="621:57">codec</name></name></expr></argument>, <argument pos:start="621:60" pos:end="621:81"><expr pos:start="621:60" pos:end="621:81"><name pos:start="621:60" pos:end="621:81"><name pos:start="621:60" pos:end="621:62">ost</name><operator pos:start="621:63" pos:end="621:64">-&gt;</operator><name pos:start="621:65" pos:end="621:81">bitstream_filters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="623:21" pos:end="623:51"><expr pos:start="623:21" pos:end="623:50"><name pos:start="623:21" pos:end="623:48"><name pos:start="623:21" pos:end="623:23">ost</name><operator pos:start="623:24" pos:end="623:25">-&gt;</operator><name pos:start="623:26" pos:end="623:27">st</name><operator pos:start="623:28" pos:end="623:29">-&gt;</operator><name pos:start="623:30" pos:end="623:34">codec</name><operator pos:start="623:35" pos:end="623:36">-&gt;</operator><name pos:start="623:37" pos:end="623:48">frame_number</name></name><operator pos:start="623:49" pos:end="623:50">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="625:21" pos:end="625:40"><expr pos:start="625:21" pos:end="625:39"><name pos:start="625:21" pos:end="625:37"><name pos:start="625:21" pos:end="625:23">ost</name><operator pos:start="625:24" pos:end="625:25">-&gt;</operator><name pos:start="625:26" pos:end="625:37">frame_number</name></name><operator pos:start="625:38" pos:end="625:39">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="627:21" pos:end="627:42"><expr pos:start="627:21" pos:end="627:41"><call pos:start="627:21" pos:end="627:41"><name pos:start="627:21" pos:end="627:34">av_free_packet</name><argument_list pos:start="627:35" pos:end="627:41">(<argument pos:start="627:36" pos:end="627:40"><expr pos:start="627:36" pos:end="627:40"><operator pos:start="627:36" pos:end="627:36">&amp;</operator><name pos:start="627:37" pos:end="627:40">opkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

<cpp:if pos:start="631:1" pos:end="631:19">#<cpp:directive pos:start="631:2" pos:end="631:3">if</cpp:directive> <expr pos:start="631:5" pos:end="631:19"><name pos:start="631:5" pos:end="631:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <label pos:start="633:17" pos:end="633:21"><name pos:start="633:17" pos:end="633:20">cont</name>:</label>

                <expr_stmt pos:start="635:17" pos:end="637:120"><expr pos:start="635:17" pos:end="637:119"><name pos:start="635:17" pos:end="635:31">frame_available</name> <operator pos:start="635:33" pos:end="635:33">=</operator> <operator pos:start="635:35" pos:end="635:35">(</operator><name pos:start="635:36" pos:end="635:61"><name pos:start="635:36" pos:end="635:38">ist</name><operator pos:start="635:39" pos:end="635:40">-&gt;</operator><name pos:start="635:41" pos:end="635:42">st</name><operator pos:start="635:43" pos:end="635:44">-&gt;</operator><name pos:start="635:45" pos:end="635:49">codec</name><operator pos:start="635:50" pos:end="635:51">-&gt;</operator><name pos:start="635:52" pos:end="635:61">codec_type</name></name> <operator pos:start="635:63" pos:end="635:64">==</operator> <name pos:start="635:66" pos:end="635:83">AVMEDIA_TYPE_VIDEO</name><operator pos:start="635:84" pos:end="635:84">)</operator> <operator pos:start="635:86" pos:end="635:87">&amp;&amp;</operator>

                                   <name pos:start="637:36" pos:end="637:59"><name pos:start="637:36" pos:end="637:38">ost</name><operator pos:start="637:39" pos:end="637:40">-&gt;</operator><name pos:start="637:41" pos:end="637:59">output_video_filter</name></name> <operator pos:start="637:61" pos:end="637:62">&amp;&amp;</operator> <call pos:start="637:64" pos:end="637:119"><name pos:start="637:64" pos:end="637:82">avfilter_poll_frame</name><argument_list pos:start="637:83" pos:end="637:119">(<argument pos:start="637:84" pos:end="637:118"><expr pos:start="637:84" pos:end="637:118"><name pos:start="637:84" pos:end="637:118"><name pos:start="637:84" pos:end="637:86">ost</name><operator pos:start="637:87" pos:end="637:88">-&gt;</operator><name pos:start="637:89" pos:end="637:107">output_video_filter</name><operator pos:start="637:108" pos:end="637:109">-&gt;</operator><name pos:start="637:110" pos:end="637:115">inputs</name><index pos:start="637:116" pos:end="637:118">[<expr pos:start="637:117" pos:end="637:117"><literal type="number" pos:start="637:117" pos:end="637:117">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="639:17" pos:end="639:51"><expr pos:start="639:17" pos:end="639:50"><call pos:start="639:17" pos:end="639:50"><name pos:start="639:17" pos:end="639:37">avfilter_unref_buffer</name><argument_list pos:start="639:38" pos:end="639:50">(<argument pos:start="639:39" pos:end="639:49"><expr pos:start="639:39" pos:end="639:49"><name pos:start="639:39" pos:end="639:49"><name pos:start="639:39" pos:end="639:41">ost</name><operator pos:start="639:42" pos:end="639:43">-&gt;</operator><name pos:start="639:44" pos:end="639:49">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="643:13" pos:end="646:0"><expr pos:start="643:13" pos:end="643:37"><call pos:start="643:13" pos:end="643:37"><name pos:start="643:13" pos:end="643:20">av_freep</name><argument_list pos:start="643:21" pos:end="643:37">(<argument pos:start="643:22" pos:end="643:36"><expr pos:start="643:22" pos:end="643:36"><operator pos:start="643:22" pos:end="643:22">&amp;</operator><name pos:start="643:23" pos:end="643:36">filtered_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="645:1" pos:end="645:6">#<cpp:directive pos:start="645:2" pos:end="645:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></for>



<label pos:start="651:1" pos:end="651:5"><name pos:start="651:1" pos:end="651:4">fail</name>:</label>

        <expr_stmt pos:start="653:9" pos:end="653:32"><expr pos:start="653:9" pos:end="653:31"><call pos:start="653:9" pos:end="653:31"><name pos:start="653:9" pos:end="653:15">av_free</name><argument_list pos:start="653:16" pos:end="653:31">(<argument pos:start="653:17" pos:end="653:30"><expr pos:start="653:17" pos:end="653:30"><name pos:start="653:17" pos:end="653:30">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="655:9" pos:end="655:56">/* XXX: allocate the subtitles in the codec ? */</comment>

        <if_stmt pos:start="657:9" pos:end="663:9"><if pos:start="657:9" pos:end="663:9">if <condition pos:start="657:12" pos:end="657:29">(<expr pos:start="657:13" pos:end="657:28"><name pos:start="657:13" pos:end="657:28">subtitle_to_free</name></expr>)</condition> <block pos:start="657:31" pos:end="663:9">{<block_content pos:start="659:13" pos:end="661:36">

            <expr_stmt pos:start="659:13" pos:end="659:46"><expr pos:start="659:13" pos:end="659:45"><call pos:start="659:13" pos:end="659:45"><name pos:start="659:13" pos:end="659:27">avsubtitle_free</name><argument_list pos:start="659:28" pos:end="659:45">(<argument pos:start="659:29" pos:end="659:44"><expr pos:start="659:29" pos:end="659:44"><name pos:start="659:29" pos:end="659:44">subtitle_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="661:13" pos:end="661:36"><expr pos:start="661:13" pos:end="661:35"><name pos:start="661:13" pos:end="661:28">subtitle_to_free</name> <operator pos:start="661:30" pos:end="661:30">=</operator> <name pos:start="661:32" pos:end="661:35">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:33"><expr pos:start="665:9" pos:end="665:32"><call pos:start="665:9" pos:end="665:32"><name pos:start="665:9" pos:end="665:16">av_freep</name><argument_list pos:start="665:17" pos:end="665:32">(<argument pos:start="665:18" pos:end="665:31"><expr pos:start="665:18" pos:end="665:31"><operator pos:start="665:18" pos:end="665:18">&amp;</operator><name pos:start="665:19" pos:end="665:31">decoded_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="667:9" pos:end="669:23"><if pos:start="667:9" pos:end="669:23">if <condition pos:start="667:12" pos:end="667:20">(<expr pos:start="667:13" pos:end="667:19"><name pos:start="667:13" pos:end="667:15">ret</name> <operator pos:start="667:17" pos:end="667:17">&lt;</operator> <literal type="number" pos:start="667:19" pos:end="667:19">0</literal></expr>)</condition><block type="pseudo" pos:start="669:13" pos:end="669:23"><block_content pos:start="669:13" pos:end="669:23">

            <return pos:start="669:13" pos:end="669:23">return <expr pos:start="669:20" pos:end="669:22"><name pos:start="669:20" pos:end="669:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></while>

 <label pos:start="673:2" pos:end="673:16"><name pos:start="673:2" pos:end="673:15">discard_packet</name>:</label>



    <return pos:start="677:5" pos:end="677:13">return <expr pos:start="677:12" pos:end="677:12"><literal type="number" pos:start="677:12" pos:end="677:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
