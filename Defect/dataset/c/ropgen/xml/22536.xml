<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22536.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">dvbsub_decode</name><parameter_list pos:start="1:25" pos:end="5:41">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:35"><decl pos:start="3:26" pos:end="3:35"><type pos:start="3:26" pos:end="3:35"><name pos:start="3:26" pos:end="3:29">void</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:35">data</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:51"><decl pos:start="3:38" pos:end="3:51"><type pos:start="3:38" pos:end="3:51"><name pos:start="3:38" pos:end="3:40">int</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:51">data_size</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:40"><decl pos:start="5:26" pos:end="5:40"><type pos:start="5:26" pos:end="5:40"><name pos:start="5:26" pos:end="5:33">AVPacket</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:40">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="149:1">{<block_content pos:start="9:5" pos:end="147:19">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">DVBSubContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">ctx</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:30">avctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">AVSubtitle</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:19">sub</name> <init pos:start="15:21" pos:end="15:26">= <expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:20">p</name></decl>, <decl pos:start="17:23" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:19"><modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:28">p_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:20">segment_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">page_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="28:0"><decl pos:start="23:5" pos:end="23:22"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:22">segment_length</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="27:1" pos:end="27:28">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:28">DEBUG_PACKET_CONTENTS</name></cpp:ifdef>

    <decl_stmt pos:start="29:5" pos:end="29:10"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><call pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:10">av_log</name><argument_list pos:start="33:11" pos:end="33:51">(<argument pos:start="33:12" pos:end="33:16"><expr pos:start="33:12" pos:end="33:16"><name pos:start="33:12" pos:end="33:16">avctx</name></expr></argument>, <argument pos:start="33:19" pos:end="33:29"><expr pos:start="33:19" pos:end="33:29"><name pos:start="33:19" pos:end="33:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="33:32" pos:end="33:50"><expr pos:start="33:32" pos:end="33:50"><literal type="string" pos:start="33:32" pos:end="33:50">"DVB sub packet:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="45:5">for <control pos:start="37:9" pos:end="37:32">(<init pos:start="37:10" pos:end="37:13"><expr pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:10">i</name><operator pos:start="37:11" pos:end="37:11">=</operator><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</init> <condition pos:start="37:15" pos:end="37:27"><expr pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:15">i</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <name pos:start="37:19" pos:end="37:26">buf_size</name></expr>;</condition> <incr pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:29">i</name><operator pos:start="37:30" pos:end="37:31">++</operator></expr></incr>)</control> <block pos:start="37:34" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:45">

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:51">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:33"><expr pos:start="39:23" pos:end="39:33"><name pos:start="39:23" pos:end="39:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="39:36" pos:end="39:42"><expr pos:start="39:36" pos:end="39:42"><literal type="string" pos:start="39:36" pos:end="39:42">"%02x "</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:50"><expr pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:50"><name pos:start="39:45" pos:end="39:47">buf</name><index pos:start="39:48" pos:end="39:50">[<expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:45"><if pos:start="41:9" pos:end="43:45">if <condition pos:start="41:12" pos:end="41:25">(<expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:13">i</name> <operator pos:start="41:15" pos:end="41:15">%</operator> <literal type="number" pos:start="41:17" pos:end="41:18">16</literal> <operator pos:start="41:20" pos:end="41:21">==</operator> <literal type="number" pos:start="41:23" pos:end="41:24">15</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:45"><block_content pos:start="43:13" pos:end="43:45">

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><call pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:44">(<argument pos:start="43:20" pos:end="43:24"><expr pos:start="43:20" pos:end="43:24"><name pos:start="43:20" pos:end="43:24">avctx</name></expr></argument>, <argument pos:start="43:27" pos:end="43:37"><expr pos:start="43:27" pos:end="43:37"><name pos:start="43:27" pos:end="43:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="43:40" pos:end="43:43"><expr pos:start="43:40" pos:end="43:43"><literal type="string" pos:start="43:40" pos:end="43:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="49:5" pos:end="56:0"><if pos:start="49:5" pos:end="56:0">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">i</name> <operator pos:start="49:11" pos:end="49:11">%</operator> <literal type="number" pos:start="49:13" pos:end="49:14">16</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="56:0"><block_content pos:start="51:9" pos:end="56:0">

        <expr_stmt pos:start="51:9" pos:end="56:0"><expr pos:start="51:9" pos:end="51:40"><call pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:40">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:33"><expr pos:start="51:23" pos:end="51:33"><name pos:start="51:23" pos:end="51:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="51:36" pos:end="51:39"><expr pos:start="51:36" pos:end="51:39"><literal type="string" pos:start="51:36" pos:end="51:39">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="59:5" pos:end="61:18"><if pos:start="59:5" pos:end="61:18">if <condition pos:start="59:8" pos:end="59:38">(<expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:16">buf_size</name> <operator pos:start="59:18" pos:end="59:19">&lt;=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">2</literal> <operator pos:start="59:23" pos:end="59:24">||</operator> <operator pos:start="59:26" pos:end="59:26">*</operator><name pos:start="59:27" pos:end="59:29">buf</name> <operator pos:start="59:31" pos:end="59:32">!=</operator> <literal type="number" pos:start="59:34" pos:end="59:37">0x0f</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:18"><block_content pos:start="61:9" pos:end="61:18">

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:12"><expr pos:start="65:5" pos:end="65:11"><name pos:start="65:5" pos:end="65:5">p</name> <operator pos:start="65:7" pos:end="65:7">=</operator> <name pos:start="65:9" pos:end="65:11">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:9">p_end</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <name pos:start="67:13" pos:end="67:15">buf</name> <operator pos:start="67:17" pos:end="67:17">+</operator> <name pos:start="67:19" pos:end="67:26">buf_size</name></expr>;</expr_stmt>



    <while pos:start="71:5" pos:end="143:5">while <condition pos:start="71:11" pos:end="71:35">(<expr pos:start="71:12" pos:end="71:34"><name pos:start="71:12" pos:end="71:12">p</name> <operator pos:start="71:14" pos:end="71:14">&lt;</operator> <name pos:start="71:16" pos:end="71:20">p_end</name> <operator pos:start="71:22" pos:end="71:23">&amp;&amp;</operator> <operator pos:start="71:25" pos:end="71:25">*</operator><name pos:start="71:26" pos:end="71:26">p</name> <operator pos:start="71:28" pos:end="71:29">==</operator> <literal type="number" pos:start="71:31" pos:end="71:34">0x0f</literal></expr>)</condition> <block pos:start="71:37" pos:end="143:5">{<block_content pos:start="73:9" pos:end="141:28">

        <expr_stmt pos:start="73:9" pos:end="73:15"><expr pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:9">p</name> <operator pos:start="73:11" pos:end="73:12">+=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:28"><expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:20">segment_type</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <operator pos:start="75:24" pos:end="75:24">*</operator><name pos:start="75:25" pos:end="75:25">p</name><operator pos:start="75:26" pos:end="75:27">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:15">page_id</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:28"><name pos:start="77:19" pos:end="77:25">AV_RB16</name><argument_list pos:start="77:26" pos:end="77:28">(<argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><name pos:start="77:27" pos:end="77:27">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:15"><expr pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:9">p</name> <operator pos:start="79:11" pos:end="79:12">+=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:36"><expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:22">segment_length</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <call pos:start="81:26" pos:end="81:35"><name pos:start="81:26" pos:end="81:32">AV_RB16</name><argument_list pos:start="81:33" pos:end="81:35">(<argument pos:start="81:34" pos:end="81:34"><expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:15"><expr pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:9">p</name> <operator pos:start="83:11" pos:end="83:12">+=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">2</literal></expr>;</expr_stmt>



        <if_stmt pos:start="87:9" pos:end="137:9"><if pos:start="87:9" pos:end="137:9">if <condition pos:start="87:12" pos:end="89:65">(<expr pos:start="87:13" pos:end="89:64"><name pos:start="87:13" pos:end="87:19">page_id</name> <operator pos:start="87:21" pos:end="87:22">==</operator> <name pos:start="87:24" pos:end="87:42"><name pos:start="87:24" pos:end="87:26">ctx</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:42">composition_id</name></name> <operator pos:start="87:44" pos:end="87:45">||</operator> <name pos:start="87:47" pos:end="87:53">page_id</name> <operator pos:start="87:55" pos:end="87:56">==</operator> <name pos:start="87:58" pos:end="87:74"><name pos:start="87:58" pos:end="87:60">ctx</name><operator pos:start="87:61" pos:end="87:62">-&gt;</operator><name pos:start="87:63" pos:end="87:74">ancillary_id</name></name> <operator pos:start="87:76" pos:end="87:77">||</operator>

            <name pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:15">ctx</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:31">composition_id</name></name> <operator pos:start="89:33" pos:end="89:34">==</operator> <operator pos:start="89:36" pos:end="89:36">-</operator><literal type="number" pos:start="89:37" pos:end="89:37">1</literal> <operator pos:start="89:39" pos:end="89:40">||</operator> <name pos:start="89:42" pos:end="89:58"><name pos:start="89:42" pos:end="89:44">ctx</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:58">ancillary_id</name></name> <operator pos:start="89:60" pos:end="89:61">==</operator> <operator pos:start="89:63" pos:end="89:63">-</operator><literal type="number" pos:start="89:64" pos:end="89:64">1</literal></expr>)</condition> <block pos:start="89:67" pos:end="137:9">{<block_content pos:start="91:13" pos:end="135:13">

            <switch pos:start="91:13" pos:end="135:13">switch <condition pos:start="91:20" pos:end="91:33">(<expr pos:start="91:21" pos:end="91:32"><name pos:start="91:21" pos:end="91:32">segment_type</name></expr>)</condition> <block pos:start="91:35" pos:end="135:13">{<block_content pos:start="93:13" pos:end="133:22">

            <case pos:start="93:13" pos:end="93:37">case <expr pos:start="93:18" pos:end="93:36"><name pos:start="93:18" pos:end="93:36">DVBSUB_PAGE_SEGMENT</name></expr>:</case>

                <expr_stmt pos:start="95:17" pos:end="95:68"><expr pos:start="95:17" pos:end="95:67"><call pos:start="95:17" pos:end="95:67"><name pos:start="95:17" pos:end="95:41">dvbsub_parse_page_segment</name><argument_list pos:start="95:42" pos:end="95:67">(<argument pos:start="95:43" pos:end="95:47"><expr pos:start="95:43" pos:end="95:47"><name pos:start="95:43" pos:end="95:47">avctx</name></expr></argument>, <argument pos:start="95:50" pos:end="95:50"><expr pos:start="95:50" pos:end="95:50"><name pos:start="95:50" pos:end="95:50">p</name></expr></argument>, <argument pos:start="95:53" pos:end="95:66"><expr pos:start="95:53" pos:end="95:66"><name pos:start="95:53" pos:end="95:66">segment_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="97:17" pos:end="97:22">break;</break>

            <case pos:start="99:13" pos:end="99:39">case <expr pos:start="99:18" pos:end="99:38"><name pos:start="99:18" pos:end="99:38">DVBSUB_REGION_SEGMENT</name></expr>:</case>

                <expr_stmt pos:start="101:17" pos:end="101:70"><expr pos:start="101:17" pos:end="101:69"><call pos:start="101:17" pos:end="101:69"><name pos:start="101:17" pos:end="101:43">dvbsub_parse_region_segment</name><argument_list pos:start="101:44" pos:end="101:69">(<argument pos:start="101:45" pos:end="101:49"><expr pos:start="101:45" pos:end="101:49"><name pos:start="101:45" pos:end="101:49">avctx</name></expr></argument>, <argument pos:start="101:52" pos:end="101:52"><expr pos:start="101:52" pos:end="101:52"><name pos:start="101:52" pos:end="101:52">p</name></expr></argument>, <argument pos:start="101:55" pos:end="101:68"><expr pos:start="101:55" pos:end="101:68"><name pos:start="101:55" pos:end="101:68">segment_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:37">case <expr pos:start="105:18" pos:end="105:36"><name pos:start="105:18" pos:end="105:36">DVBSUB_CLUT_SEGMENT</name></expr>:</case>

                <expr_stmt pos:start="107:17" pos:end="107:68"><expr pos:start="107:17" pos:end="107:67"><call pos:start="107:17" pos:end="107:67"><name pos:start="107:17" pos:end="107:41">dvbsub_parse_clut_segment</name><argument_list pos:start="107:42" pos:end="107:67">(<argument pos:start="107:43" pos:end="107:47"><expr pos:start="107:43" pos:end="107:47"><name pos:start="107:43" pos:end="107:47">avctx</name></expr></argument>, <argument pos:start="107:50" pos:end="107:50"><expr pos:start="107:50" pos:end="107:50"><name pos:start="107:50" pos:end="107:50">p</name></expr></argument>, <argument pos:start="107:53" pos:end="107:66"><expr pos:start="107:53" pos:end="107:66"><name pos:start="107:53" pos:end="107:66">segment_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="109:17" pos:end="109:22">break;</break>

            <case pos:start="111:13" pos:end="111:39">case <expr pos:start="111:18" pos:end="111:38"><name pos:start="111:18" pos:end="111:38">DVBSUB_OBJECT_SEGMENT</name></expr>:</case>

                <expr_stmt pos:start="113:17" pos:end="113:70"><expr pos:start="113:17" pos:end="113:69"><call pos:start="113:17" pos:end="113:69"><name pos:start="113:17" pos:end="113:43">dvbsub_parse_object_segment</name><argument_list pos:start="113:44" pos:end="113:69">(<argument pos:start="113:45" pos:end="113:49"><expr pos:start="113:45" pos:end="113:49"><name pos:start="113:45" pos:end="113:49">avctx</name></expr></argument>, <argument pos:start="113:52" pos:end="113:52"><expr pos:start="113:52" pos:end="113:52"><name pos:start="113:52" pos:end="113:52">p</name></expr></argument>, <argument pos:start="113:55" pos:end="113:68"><expr pos:start="113:55" pos:end="113:68"><name pos:start="113:55" pos:end="113:68">segment_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="115:17" pos:end="115:22">break;</break>

            <case pos:start="117:13" pos:end="117:50">case <expr pos:start="117:18" pos:end="117:49"><name pos:start="117:18" pos:end="117:49">DVBSUB_DISPLAYDEFINITION_SEGMENT</name></expr>:</case>

                <expr_stmt pos:start="119:17" pos:end="119:82"><expr pos:start="119:17" pos:end="119:81"><call pos:start="119:17" pos:end="119:81"><name pos:start="119:17" pos:end="119:55">dvbsub_parse_display_definition_segment</name><argument_list pos:start="119:56" pos:end="119:81">(<argument pos:start="119:57" pos:end="119:61"><expr pos:start="119:57" pos:end="119:61"><name pos:start="119:57" pos:end="119:61">avctx</name></expr></argument>, <argument pos:start="119:64" pos:end="119:64"><expr pos:start="119:64" pos:end="119:64"><name pos:start="119:64" pos:end="119:64">p</name></expr></argument>, <argument pos:start="119:67" pos:end="119:80"><expr pos:start="119:67" pos:end="119:80"><name pos:start="119:67" pos:end="119:80">segment_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <case pos:start="121:13" pos:end="121:40">case <expr pos:start="121:18" pos:end="121:39"><name pos:start="121:18" pos:end="121:39">DVBSUB_DISPLAY_SEGMENT</name></expr>:</case>

                <expr_stmt pos:start="123:17" pos:end="123:87"><expr pos:start="123:17" pos:end="123:86"><operator pos:start="123:17" pos:end="123:17">*</operator><name pos:start="123:18" pos:end="123:26">data_size</name> <operator pos:start="123:28" pos:end="123:28">=</operator> <call pos:start="123:30" pos:end="123:86"><name pos:start="123:30" pos:end="123:55">dvbsub_display_end_segment</name><argument_list pos:start="123:56" pos:end="123:86">(<argument pos:start="123:57" pos:end="123:61"><expr pos:start="123:57" pos:end="123:61"><name pos:start="123:57" pos:end="123:61">avctx</name></expr></argument>, <argument pos:start="123:64" pos:end="123:64"><expr pos:start="123:64" pos:end="123:64"><name pos:start="123:64" pos:end="123:64">p</name></expr></argument>, <argument pos:start="123:67" pos:end="123:80"><expr pos:start="123:67" pos:end="123:80"><name pos:start="123:67" pos:end="123:80">segment_length</name></expr></argument>, <argument pos:start="123:83" pos:end="123:85"><expr pos:start="123:83" pos:end="123:85"><name pos:start="123:83" pos:end="123:85">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="125:17" pos:end="125:22">break;</break>

            <default pos:start="127:13" pos:end="127:20">default:</default>

                <expr_stmt pos:start="129:17" pos:end="131:63"><expr pos:start="129:17" pos:end="131:62"><call pos:start="129:17" pos:end="131:62"><name pos:start="129:17" pos:end="129:23">av_dlog</name><argument_list pos:start="129:24" pos:end="131:62">(<argument pos:start="129:25" pos:end="129:29"><expr pos:start="129:25" pos:end="129:29"><name pos:start="129:25" pos:end="129:29">avctx</name></expr></argument>, <argument pos:start="129:32" pos:end="129:86"><expr pos:start="129:32" pos:end="129:86"><literal type="string" pos:start="129:32" pos:end="129:86">"Subtitling segment type 0x%x, page id %d, length %d\n"</literal></expr></argument>,

                        <argument pos:start="131:25" pos:end="131:36"><expr pos:start="131:25" pos:end="131:36"><name pos:start="131:25" pos:end="131:36">segment_type</name></expr></argument>, <argument pos:start="131:39" pos:end="131:45"><expr pos:start="131:39" pos:end="131:45"><name pos:start="131:39" pos:end="131:45">page_id</name></expr></argument>, <argument pos:start="131:48" pos:end="131:61"><expr pos:start="131:48" pos:end="131:61"><name pos:start="131:48" pos:end="131:61">segment_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="133:17" pos:end="133:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:28"><expr pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:9">p</name> <operator pos:start="141:11" pos:end="141:12">+=</operator> <name pos:start="141:14" pos:end="141:27">segment_length</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="147:5" pos:end="147:19">return <expr pos:start="147:12" pos:end="147:18"><name pos:start="147:12" pos:end="147:12">p</name> <operator pos:start="147:14" pos:end="147:14">-</operator> <name pos:start="147:16" pos:end="147:18">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
