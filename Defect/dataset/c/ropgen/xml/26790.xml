<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26790.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">char_socket_test</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:33">

    <decl_stmt pos:start="5:5" pos:end="5:75"><decl pos:start="5:5" pos:end="5:74"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Chardev</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">chr</name> <init pos:start="5:18" pos:end="5:74">= <expr pos:start="5:20" pos:end="5:74"><call pos:start="5:20" pos:end="5:74"><name pos:start="5:20" pos:end="5:31">qemu_chr_new</name><argument_list pos:start="5:32" pos:end="5:74">(<argument pos:start="5:33" pos:end="5:40"><expr pos:start="5:33" pos:end="5:40"><literal type="string" pos:start="5:33" pos:end="5:40">"server"</literal></expr></argument>, <argument pos:start="5:43" pos:end="5:73"><expr pos:start="5:43" pos:end="5:73"><literal type="string" pos:start="5:43" pos:end="5:73">"tcp:127.0.0.1:0,server,nowait"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Chardev</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:23">chr_client</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">QObject</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">QDict</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:16">qdict</name></decl>, <decl pos:start="11:19" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:11"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:23">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">port</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:18">SocketIdleData</name></type> <name pos:start="15:20" pos:end="15:20">d</name> <init pos:start="15:22" pos:end="15:37">= <expr pos:start="15:24" pos:end="15:37"><block pos:start="15:24" pos:end="15:37">{ <expr pos:start="15:26" pos:end="15:35"><operator pos:start="15:26" pos:end="15:26">.</operator><name pos:start="15:27" pos:end="15:29">chr</name> <operator pos:start="15:31" pos:end="15:31">=</operator> <name pos:start="15:33" pos:end="15:35">chr</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">CharBackend</name></type> <name pos:start="17:17" pos:end="17:18">be</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15">CharBackend</name></type> <name pos:start="19:17" pos:end="19:25">client_be</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:14"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:13">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:5">d</name><operator pos:start="25:6" pos:end="25:6">.</operator><name pos:start="25:7" pos:end="25:8">be</name></name> <operator pos:start="25:10" pos:end="25:10">=</operator> <operator pos:start="25:12" pos:end="25:12">&amp;</operator><name pos:start="25:13" pos:end="25:14">be</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:5">d</name><operator pos:start="27:6" pos:end="27:6">.</operator><name pos:start="27:7" pos:end="27:15">client_be</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:21">be</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><call pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:20">g_assert_nonnull</name><argument_list pos:start="31:21" pos:end="31:25">(<argument pos:start="31:22" pos:end="31:24"><expr pos:start="31:22" pos:end="31:24"><name pos:start="31:22" pos:end="31:24">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:80"><expr pos:start="33:5" pos:end="33:79"><call pos:start="33:5" pos:end="33:79"><name pos:start="33:5" pos:end="33:12">g_assert</name><argument_list pos:start="33:13" pos:end="33:79">(<argument pos:start="33:14" pos:end="33:78"><expr pos:start="33:14" pos:end="33:78"><operator pos:start="33:14" pos:end="33:14">!</operator><call pos:start="33:15" pos:end="33:78"><name pos:start="33:15" pos:end="33:38">object_property_get_bool</name><argument_list pos:start="33:39" pos:end="33:78">(<argument pos:start="33:40" pos:end="33:50"><expr pos:start="33:40" pos:end="33:50"><call pos:start="33:40" pos:end="33:50"><name pos:start="33:40" pos:end="33:45">OBJECT</name><argument_list pos:start="33:46" pos:end="33:50">(<argument pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><name pos:start="33:47" pos:end="33:49">chr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:53" pos:end="33:63"><expr pos:start="33:53" pos:end="33:63"><literal type="string" pos:start="33:53" pos:end="33:63">"connected"</literal></expr></argument>, <argument pos:start="33:66" pos:end="33:77"><expr pos:start="33:66" pos:end="33:77"><operator pos:start="33:66" pos:end="33:66">&amp;</operator><name pos:start="33:67" pos:end="33:77">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:74"><expr pos:start="37:5" pos:end="37:73"><name pos:start="37:5" pos:end="37:8">addr</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:73"><name pos:start="37:12" pos:end="37:38">object_property_get_qobject</name><argument_list pos:start="37:39" pos:end="37:73">(<argument pos:start="37:40" pos:end="37:50"><expr pos:start="37:40" pos:end="37:50"><call pos:start="37:40" pos:end="37:50"><name pos:start="37:40" pos:end="37:45">OBJECT</name><argument_list pos:start="37:46" pos:end="37:50">(<argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><name pos:start="37:47" pos:end="37:49">chr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:53" pos:end="37:58"><expr pos:start="37:53" pos:end="37:58"><literal type="string" pos:start="37:53" pos:end="37:58">"addr"</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:72"><expr pos:start="37:61" pos:end="37:72"><operator pos:start="37:61" pos:end="37:61">&amp;</operator><name pos:start="37:62" pos:end="37:72">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:9">qdict</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:28">qobject_to_qdict</name><argument_list pos:start="39:29" pos:end="39:34">(<argument pos:start="39:30" pos:end="39:33"><expr pos:start="39:30" pos:end="39:33"><name pos:start="39:30" pos:end="39:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:8">data</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <call pos:start="41:12" pos:end="41:41"><name pos:start="41:12" pos:end="41:26">qdict_get_qdict</name><argument_list pos:start="41:27" pos:end="41:41">(<argument pos:start="41:28" pos:end="41:32"><expr pos:start="41:28" pos:end="41:32"><name pos:start="41:28" pos:end="41:32">qdict</name></expr></argument>, <argument pos:start="41:35" pos:end="41:40"><expr pos:start="41:35" pos:end="41:40"><literal type="string" pos:start="41:35" pos:end="41:40">"data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:8">port</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:38"><name pos:start="43:12" pos:end="43:24">qdict_get_str</name><argument_list pos:start="43:25" pos:end="43:38">(<argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">data</name></expr></argument>, <argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><literal type="string" pos:start="43:32" pos:end="43:37">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:7">tmp</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:51"><name pos:start="45:11" pos:end="45:25">g_strdup_printf</name><argument_list pos:start="45:26" pos:end="45:51">(<argument pos:start="45:27" pos:end="45:44"><expr pos:start="45:27" pos:end="45:44"><literal type="string" pos:start="45:27" pos:end="45:44">"tcp:127.0.0.1:%s"</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:50"><expr pos:start="45:47" pos:end="45:50"><name pos:start="45:47" pos:end="45:50">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:19"><expr pos:start="47:5" pos:end="47:18"><call pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:11">QDECREF</name><argument_list pos:start="47:12" pos:end="47:18">(<argument pos:start="47:13" pos:end="47:17"><expr pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:17">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><call pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:20">qemu_chr_fe_init</name><argument_list pos:start="51:21" pos:end="51:44">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><operator pos:start="51:22" pos:end="51:22">&amp;</operator><name pos:start="51:23" pos:end="51:24">be</name></expr></argument>, <argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">chr</name></expr></argument>, <argument pos:start="51:32" pos:end="51:43"><expr pos:start="51:32" pos:end="51:43"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:43">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:51"><expr pos:start="53:5" pos:end="55:50"><call pos:start="53:5" pos:end="55:50"><name pos:start="53:5" pos:end="53:28">qemu_chr_fe_set_handlers</name><argument_list pos:start="53:29" pos:end="55:50">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:32">be</name></expr></argument>, <argument pos:start="53:35" pos:end="53:49"><expr pos:start="53:35" pos:end="53:49"><name pos:start="53:35" pos:end="53:49">socket_can_read</name></expr></argument>, <argument pos:start="53:52" pos:end="53:62"><expr pos:start="53:52" pos:end="53:62"><name pos:start="53:52" pos:end="53:62">socket_read</name></expr></argument>,

                             <argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">NULL</name></expr></argument>, <argument pos:start="55:36" pos:end="55:37"><expr pos:start="55:36" pos:end="55:37"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:37">d</name></expr></argument>, <argument pos:start="55:40" pos:end="55:43"><expr pos:start="55:40" pos:end="55:43"><name pos:start="55:40" pos:end="55:43">NULL</name></expr></argument>, <argument pos:start="55:46" pos:end="55:49"><expr pos:start="55:46" pos:end="55:49"><name pos:start="55:46" pos:end="55:49">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:45"><expr pos:start="59:5" pos:end="59:44"><name pos:start="59:5" pos:end="59:14">chr_client</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <call pos:start="59:18" pos:end="59:44"><name pos:start="59:18" pos:end="59:29">qemu_chr_new</name><argument_list pos:start="59:30" pos:end="59:44">(<argument pos:start="59:31" pos:end="59:38"><expr pos:start="59:31" pos:end="59:38"><literal type="string" pos:start="59:31" pos:end="59:38">"client"</literal></expr></argument>, <argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><name pos:start="59:41" pos:end="59:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><call pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:20">qemu_chr_fe_init</name><argument_list pos:start="61:21" pos:end="61:58">(<argument pos:start="61:22" pos:end="61:31"><expr pos:start="61:22" pos:end="61:31"><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:31">client_be</name></expr></argument>, <argument pos:start="61:34" pos:end="61:43"><expr pos:start="61:34" pos:end="61:43"><name pos:start="61:34" pos:end="61:43">chr_client</name></expr></argument>, <argument pos:start="61:46" pos:end="61:57"><expr pos:start="61:46" pos:end="61:57"><operator pos:start="61:46" pos:end="61:46">&amp;</operator><name pos:start="61:47" pos:end="61:57">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="67:51"><expr pos:start="63:5" pos:end="67:50"><call pos:start="63:5" pos:end="67:50"><name pos:start="63:5" pos:end="63:28">qemu_chr_fe_set_handlers</name><argument_list pos:start="63:29" pos:end="67:50">(<argument pos:start="63:30" pos:end="63:39"><expr pos:start="63:30" pos:end="63:39"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:39">client_be</name></expr></argument>, <argument pos:start="63:42" pos:end="63:62"><expr pos:start="63:42" pos:end="63:62"><name pos:start="63:42" pos:end="63:62">socket_can_read_hello</name></expr></argument>,

                             <argument pos:start="65:30" pos:end="65:46"><expr pos:start="65:30" pos:end="65:46"><name pos:start="65:30" pos:end="65:46">socket_read_hello</name></expr></argument>,

                             <argument pos:start="67:30" pos:end="67:33"><expr pos:start="67:30" pos:end="67:33"><name pos:start="67:30" pos:end="67:33">NULL</name></expr></argument>, <argument pos:start="67:36" pos:end="67:37"><expr pos:start="67:36" pos:end="67:37"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:37">d</name></expr></argument>, <argument pos:start="67:40" pos:end="67:43"><expr pos:start="67:40" pos:end="67:43"><name pos:start="67:40" pos:end="67:43">NULL</name></expr></argument>, <argument pos:start="67:46" pos:end="67:49"><expr pos:start="67:46" pos:end="67:49"><name pos:start="67:46" pos:end="67:49">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:16"><expr pos:start="69:5" pos:end="69:15"><call pos:start="69:5" pos:end="69:15"><name pos:start="69:5" pos:end="69:10">g_free</name><argument_list pos:start="69:11" pos:end="69:15">(<argument pos:start="69:12" pos:end="69:14"><expr pos:start="69:12" pos:end="69:14"><name pos:start="69:12" pos:end="69:14">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:5">d</name><operator pos:start="73:6" pos:end="73:6">.</operator><name pos:start="73:7" pos:end="73:19">conn_expected</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <name pos:start="73:23" pos:end="73:26">true</name></expr>;</expr_stmt>

    <decl_stmt pos:start="75:5" pos:end="75:53"><decl pos:start="75:5" pos:end="75:52"><type pos:start="75:5" pos:end="75:9"><name pos:start="75:5" pos:end="75:9">guint</name></type> <name pos:start="75:11" pos:end="75:12">id</name> <init pos:start="75:14" pos:end="75:52">= <expr pos:start="75:16" pos:end="75:52"><call pos:start="75:16" pos:end="75:52"><name pos:start="75:16" pos:end="75:25">g_idle_add</name><argument_list pos:start="75:26" pos:end="75:52">(<argument pos:start="75:27" pos:end="75:47"><expr pos:start="75:27" pos:end="75:47"><name pos:start="75:27" pos:end="75:47">char_socket_test_idle</name></expr></argument>, <argument pos:start="75:50" pos:end="75:51"><expr pos:start="75:50" pos:end="75:51"><operator pos:start="75:50" pos:end="75:50">&amp;</operator><name pos:start="75:51" pos:end="75:51">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:45"><expr pos:start="77:5" pos:end="77:44"><call pos:start="77:5" pos:end="77:44"><name pos:start="77:5" pos:end="77:27">g_source_set_name_by_id</name><argument_list pos:start="77:28" pos:end="77:44">(<argument pos:start="77:29" pos:end="77:30"><expr pos:start="77:29" pos:end="77:30"><name pos:start="77:29" pos:end="77:30">id</name></expr></argument>, <argument pos:start="77:33" pos:end="77:43"><expr pos:start="77:33" pos:end="77:43"><literal type="string" pos:start="77:33" pos:end="77:43">"test-idle"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><call pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:19">g_assert_cmpint</name><argument_list pos:start="79:20" pos:end="79:29">(<argument pos:start="79:21" pos:end="79:22"><expr pos:start="79:21" pos:end="79:22"><name pos:start="79:21" pos:end="79:22">id</name></expr></argument>, <argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><operator pos:start="79:25" pos:end="79:25">&gt;</operator></expr></argument>, <argument pos:start="79:28" pos:end="79:28"><expr pos:start="79:28" pos:end="79:28"><literal type="number" pos:start="79:28" pos:end="79:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:16"><expr pos:start="81:5" pos:end="81:15"><call pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:13">main_loop</name><argument_list pos:start="81:14" pos:end="81:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:79"><expr pos:start="85:5" pos:end="85:78"><call pos:start="85:5" pos:end="85:78"><name pos:start="85:5" pos:end="85:12">g_assert</name><argument_list pos:start="85:13" pos:end="85:78">(<argument pos:start="85:14" pos:end="85:77"><expr pos:start="85:14" pos:end="85:77"><call pos:start="85:14" pos:end="85:77"><name pos:start="85:14" pos:end="85:37">object_property_get_bool</name><argument_list pos:start="85:38" pos:end="85:77">(<argument pos:start="85:39" pos:end="85:49"><expr pos:start="85:39" pos:end="85:49"><call pos:start="85:39" pos:end="85:49"><name pos:start="85:39" pos:end="85:44">OBJECT</name><argument_list pos:start="85:45" pos:end="85:49">(<argument pos:start="85:46" pos:end="85:48"><expr pos:start="85:46" pos:end="85:48"><name pos:start="85:46" pos:end="85:48">chr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:52" pos:end="85:62"><expr pos:start="85:52" pos:end="85:62"><literal type="string" pos:start="85:52" pos:end="85:62">"connected"</literal></expr></argument>, <argument pos:start="85:65" pos:end="85:76"><expr pos:start="85:65" pos:end="85:76"><operator pos:start="85:65" pos:end="85:65">&amp;</operator><name pos:start="85:66" pos:end="85:76">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:66"><expr pos:start="87:5" pos:end="89:65"><call pos:start="87:5" pos:end="89:65"><name pos:start="87:5" pos:end="87:12">g_assert</name><argument_list pos:start="87:13" pos:end="89:65">(<argument pos:start="87:14" pos:end="89:64"><expr pos:start="87:14" pos:end="89:64"><call pos:start="87:14" pos:end="89:64"><name pos:start="87:14" pos:end="87:37">object_property_get_bool</name><argument_list pos:start="87:38" pos:end="89:64">(<argument pos:start="87:39" pos:end="87:56"><expr pos:start="87:39" pos:end="87:56"><call pos:start="87:39" pos:end="87:56"><name pos:start="87:39" pos:end="87:44">OBJECT</name><argument_list pos:start="87:45" pos:end="87:56">(<argument pos:start="87:46" pos:end="87:55"><expr pos:start="87:46" pos:end="87:55"><name pos:start="87:46" pos:end="87:55">chr_client</name></expr></argument>)</argument_list></call></expr></argument>,

                                      <argument pos:start="89:39" pos:end="89:49"><expr pos:start="89:39" pos:end="89:49"><literal type="string" pos:start="89:39" pos:end="89:49">"connected"</literal></expr></argument>, <argument pos:start="89:52" pos:end="89:63"><expr pos:start="89:52" pos:end="89:63"><operator pos:start="89:52" pos:end="89:52">&amp;</operator><name pos:start="89:53" pos:end="89:63">error_abort</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:60"><expr pos:start="93:5" pos:end="93:59"><call pos:start="93:5" pos:end="93:59"><name pos:start="93:5" pos:end="93:22">qemu_chr_write_all</name><argument_list pos:start="93:23" pos:end="93:59">(<argument pos:start="93:24" pos:end="93:33"><expr pos:start="93:24" pos:end="93:33"><name pos:start="93:24" pos:end="93:33">chr_client</name></expr></argument>, <argument pos:start="93:36" pos:end="93:55"><expr pos:start="93:36" pos:end="93:55"><operator pos:start="93:36" pos:end="93:36">(</operator><specifier pos:start="93:37" pos:end="93:41">const</specifier> <name pos:start="93:43" pos:end="93:49">uint8_t</name> <operator pos:start="93:51" pos:end="93:51">*</operator><operator pos:start="93:52" pos:end="93:52">)</operator><literal type="string" pos:start="93:53" pos:end="93:55">"Z"</literal></expr></argument>, <argument pos:start="93:58" pos:end="93:58"><expr pos:start="93:58" pos:end="93:58"><literal type="number" pos:start="93:58" pos:end="93:58">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:16"><expr pos:start="95:5" pos:end="95:15"><call pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:13">main_loop</name><argument_list pos:start="95:14" pos:end="95:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:40"><expr pos:start="99:5" pos:end="99:39"><call pos:start="99:5" pos:end="99:39"><name pos:start="99:5" pos:end="99:19">object_unparent</name><argument_list pos:start="99:20" pos:end="99:39">(<argument pos:start="99:21" pos:end="99:38"><expr pos:start="99:21" pos:end="99:38"><call pos:start="99:21" pos:end="99:38"><name pos:start="99:21" pos:end="99:26">OBJECT</name><argument_list pos:start="99:27" pos:end="99:38">(<argument pos:start="99:28" pos:end="99:37"><expr pos:start="99:28" pos:end="99:37"><name pos:start="99:28" pos:end="99:37">chr_client</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:28"><expr pos:start="103:5" pos:end="103:27"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:5">d</name><operator pos:start="103:6" pos:end="103:6">.</operator><name pos:start="103:7" pos:end="103:19">conn_expected</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <name pos:start="103:23" pos:end="103:27">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:42"><expr pos:start="105:5" pos:end="105:41"><call pos:start="105:5" pos:end="105:41"><name pos:start="105:5" pos:end="105:14">g_idle_add</name><argument_list pos:start="105:15" pos:end="105:41">(<argument pos:start="105:16" pos:end="105:36"><expr pos:start="105:16" pos:end="105:36"><name pos:start="105:16" pos:end="105:36">char_socket_test_idle</name></expr></argument>, <argument pos:start="105:39" pos:end="105:40"><expr pos:start="105:39" pos:end="105:40"><operator pos:start="105:39" pos:end="105:39">&amp;</operator><name pos:start="105:40" pos:end="105:40">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:16"><expr pos:start="107:5" pos:end="107:15"><call pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:13">main_loop</name><argument_list pos:start="107:14" pos:end="107:15">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><call pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:19">object_unparent</name><argument_list pos:start="111:20" pos:end="111:32">(<argument pos:start="111:21" pos:end="111:31"><expr pos:start="111:21" pos:end="111:31"><call pos:start="111:21" pos:end="111:31"><name pos:start="111:21" pos:end="111:26">OBJECT</name><argument_list pos:start="111:27" pos:end="111:31">(<argument pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:30">chr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
