<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19860.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:43">address_space_update_ioeventfds</name><parameter_list pos:start="1:44" pos:end="1:61">(<parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:56">AddressSpace</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:36">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">FlatRange</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">fr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:25">ioeventfd_nb</name> <init pos:start="7:27" pos:end="7:29">= <expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:25">MemoryRegionIoeventfd</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:37">ioeventfds</name> <init pos:start="9:39" pos:end="9:44">= <expr pos:start="9:41" pos:end="9:44"><name pos:start="9:41" pos:end="9:44">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">AddrRange</name></type> <name pos:start="11:15" pos:end="11:17">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>



    <macro pos:start="17:5" pos:end="17:45"><name pos:start="17:5" pos:end="17:23">FOR_EACH_FLAT_RANGE</name><argument_list pos:start="17:24" pos:end="17:45">(<argument pos:start="17:25" pos:end="17:26">fr</argument>, <argument pos:start="17:29" pos:end="17:44">&amp;as-&gt;current_map</argument>)</argument_list></macro> <block pos:start="17:47" pos:end="43:5">{<block_content pos:start="19:9" pos:end="41:9">

        <for pos:start="19:9" pos:end="41:9">for <control pos:start="19:13" pos:end="19:50">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">i</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:45"><expr pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:21">i</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:44"><name pos:start="19:25" pos:end="19:26">fr</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:30">mr</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:44">ioeventfd_nb</name></name></expr>;</condition> <incr pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><operator pos:start="19:47" pos:end="19:48">++</operator><name pos:start="19:49" pos:end="19:49">i</name></expr></incr>)</control> <block pos:start="19:52" pos:end="41:9">{<block_content pos:start="21:13" pos:end="39:13">

            <expr_stmt pos:start="21:13" pos:end="25:83"><expr pos:start="21:13" pos:end="25:82"><name pos:start="21:13" pos:end="21:15">tmp</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="25:82"><name pos:start="21:19" pos:end="21:33">addrrange_shift</name><argument_list pos:start="21:34" pos:end="25:82">(<argument pos:start="21:35" pos:end="21:60"><expr pos:start="21:35" pos:end="21:60"><name pos:start="21:35" pos:end="21:55"><name pos:start="21:35" pos:end="21:36">fr</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:40">mr</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:52">ioeventfds</name><index pos:start="21:53" pos:end="21:55">[<expr pos:start="21:54" pos:end="21:54"><name pos:start="21:54" pos:end="21:54">i</name></expr>]</index></name><operator pos:start="21:56" pos:end="21:56">.</operator><name pos:start="21:57" pos:end="21:60">addr</name></expr></argument>,

                                  <argument pos:start="23:35" pos:end="25:81"><expr pos:start="23:35" pos:end="25:81"><call pos:start="23:35" pos:end="25:81"><name pos:start="23:35" pos:end="23:44">int128_sub</name><argument_list pos:start="23:45" pos:end="25:81">(<argument pos:start="23:46" pos:end="23:59"><expr pos:start="23:46" pos:end="23:59"><name pos:start="23:46" pos:end="23:59"><name pos:start="23:46" pos:end="23:47">fr</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:53">addr</name><operator pos:start="23:54" pos:end="23:54">.</operator><name pos:start="23:55" pos:end="23:59">start</name></name></expr></argument>,

                                             <argument pos:start="25:46" pos:end="25:80"><expr pos:start="25:46" pos:end="25:80"><call pos:start="25:46" pos:end="25:80"><name pos:start="25:46" pos:end="25:58">int128_make64</name><argument_list pos:start="25:59" pos:end="25:80">(<argument pos:start="25:60" pos:end="25:79"><expr pos:start="25:60" pos:end="25:79"><name pos:start="25:60" pos:end="25:79"><name pos:start="25:60" pos:end="25:61">fr</name><operator pos:start="25:62" pos:end="25:63">-&gt;</operator><name pos:start="25:64" pos:end="25:79">offset_in_region</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="39:13"><if pos:start="27:13" pos:end="39:13">if <condition pos:start="27:16" pos:end="27:52">(<expr pos:start="27:17" pos:end="27:51"><call pos:start="27:17" pos:end="27:51"><name pos:start="27:17" pos:end="27:36">addrrange_intersects</name><argument_list pos:start="27:37" pos:end="27:51">(<argument pos:start="27:38" pos:end="27:45"><expr pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:45"><name pos:start="27:38" pos:end="27:39">fr</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:45">addr</name></name></expr></argument>, <argument pos:start="27:48" pos:end="27:50"><expr pos:start="27:48" pos:end="27:50"><name pos:start="27:48" pos:end="27:50">tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:54" pos:end="39:13">{<block_content pos:start="29:17" pos:end="37:54">

                <expr_stmt pos:start="29:17" pos:end="29:31"><expr pos:start="29:17" pos:end="29:30"><operator pos:start="29:17" pos:end="29:18">++</operator><name pos:start="29:19" pos:end="29:30">ioeventfd_nb</name></expr>;</expr_stmt>

                <expr_stmt pos:start="31:17" pos:end="33:78"><expr pos:start="31:17" pos:end="33:77"><name pos:start="31:17" pos:end="31:26">ioeventfds</name> <operator pos:start="31:28" pos:end="31:28">=</operator> <call pos:start="31:30" pos:end="33:77"><name pos:start="31:30" pos:end="31:38">g_realloc</name><argument_list pos:start="31:39" pos:end="33:77">(<argument pos:start="31:40" pos:end="31:49"><expr pos:start="31:40" pos:end="31:49"><name pos:start="31:40" pos:end="31:49">ioeventfds</name></expr></argument>,

                                          <argument pos:start="33:43" pos:end="33:76"><expr pos:start="33:43" pos:end="33:76"><name pos:start="33:43" pos:end="33:54">ioeventfd_nb</name> <operator pos:start="33:56" pos:end="33:56">*</operator> <sizeof pos:start="33:58" pos:end="33:76">sizeof<argument_list pos:start="33:64" pos:end="33:76">(<argument pos:start="33:65" pos:end="33:75"><expr pos:start="33:65" pos:end="33:75"><operator pos:start="33:65" pos:end="33:65">*</operator><name pos:start="33:66" pos:end="33:75">ioeventfds</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:67"><expr pos:start="35:17" pos:end="35:66"><name pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:26">ioeventfds</name><index pos:start="35:27" pos:end="35:42">[<expr pos:start="35:28" pos:end="35:41"><name pos:start="35:28" pos:end="35:39">ioeventfd_nb</name><operator pos:start="35:40" pos:end="35:40">-</operator><literal type="number" pos:start="35:41" pos:end="35:41">1</literal></expr>]</index></name> <operator pos:start="35:44" pos:end="35:44">=</operator> <name pos:start="35:46" pos:end="35:66"><name pos:start="35:46" pos:end="35:47">fr</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:51">mr</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:63">ioeventfds</name><index pos:start="35:64" pos:end="35:66">[<expr pos:start="35:65" pos:end="35:65"><name pos:start="35:65" pos:end="35:65">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:54"><expr pos:start="37:17" pos:end="37:53"><name pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:26">ioeventfds</name><index pos:start="37:27" pos:end="37:42">[<expr pos:start="37:28" pos:end="37:41"><name pos:start="37:28" pos:end="37:39">ioeventfd_nb</name><operator pos:start="37:40" pos:end="37:40">-</operator><literal type="number" pos:start="37:41" pos:end="37:41">1</literal></expr>]</index></name><operator pos:start="37:43" pos:end="37:43">.</operator><name pos:start="37:44" pos:end="37:47">addr</name> <operator pos:start="37:49" pos:end="37:49">=</operator> <name pos:start="37:51" pos:end="37:53">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block>



    <expr_stmt pos:start="47:5" pos:end="49:71"><expr pos:start="47:5" pos:end="49:70"><call pos:start="47:5" pos:end="49:70"><name pos:start="47:5" pos:end="47:36">address_space_add_del_ioeventfds</name><argument_list pos:start="47:37" pos:end="49:70">(<argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">as</name></expr></argument>, <argument pos:start="47:42" pos:end="47:51"><expr pos:start="47:42" pos:end="47:51"><name pos:start="47:42" pos:end="47:51">ioeventfds</name></expr></argument>, <argument pos:start="47:54" pos:end="47:65"><expr pos:start="47:54" pos:end="47:65"><name pos:start="47:54" pos:end="47:65">ioeventfd_nb</name></expr></argument>,

                                     <argument pos:start="49:38" pos:end="49:51"><expr pos:start="49:38" pos:end="49:51"><name pos:start="49:38" pos:end="49:51"><name pos:start="49:38" pos:end="49:39">as</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:51">ioeventfds</name></name></expr></argument>, <argument pos:start="49:54" pos:end="49:69"><expr pos:start="49:54" pos:end="49:69"><name pos:start="49:54" pos:end="49:69"><name pos:start="49:54" pos:end="49:55">as</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:69">ioeventfd_nb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><call pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:10">g_free</name><argument_list pos:start="53:11" pos:end="53:26">(<argument pos:start="53:12" pos:end="53:25"><expr pos:start="53:12" pos:end="53:25"><name pos:start="53:12" pos:end="53:25"><name pos:start="53:12" pos:end="53:13">as</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:25">ioeventfds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:6">as</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:18">ioeventfds</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:31">ioeventfds</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:6">as</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:20">ioeventfd_nb</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:35">ioeventfd_nb</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
