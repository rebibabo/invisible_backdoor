<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13170.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">write_palette</name><parameter_list pos:start="1:26" pos:end="1:70">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">key</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">QObject</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">obj</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:61">void</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">palette_cb_priv</name></name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:32">priv</name> <init pos:start="5:34" pos:end="5:41">= <expr pos:start="5:36" pos:end="5:41"><name pos:start="5:36" pos:end="5:41">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VncState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">vs</name> <init pos:start="7:18" pos:end="7:27">= <expr pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:23">priv</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">vs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">bytes</name> <init pos:start="9:20" pos:end="9:52">= <expr pos:start="9:22" pos:end="9:52"><name pos:start="9:22" pos:end="9:52"><name pos:start="9:22" pos:end="9:23">vs</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:33">clientds</name><operator pos:start="9:34" pos:end="9:34">.</operator><name pos:start="9:35" pos:end="9:36">pf</name><operator pos:start="9:37" pos:end="9:37">.</operator><name pos:start="9:38" pos:end="9:52">bytes_per_pixel</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:15">idx</name> <init pos:start="11:17" pos:end="11:52">= <expr pos:start="11:19" pos:end="11:52"><call pos:start="11:19" pos:end="11:52"><name pos:start="11:19" pos:end="11:30">qint_get_int</name><argument_list pos:start="11:31" pos:end="11:52">(<argument pos:start="11:32" pos:end="11:51"><expr pos:start="11:32" pos:end="11:51"><call pos:start="11:32" pos:end="11:51"><name pos:start="11:32" pos:end="11:46">qobject_to_qint</name><argument_list pos:start="11:47" pos:end="11:51">(<argument pos:start="11:48" pos:end="11:50"><expr pos:start="11:48" pos:end="11:50"><name pos:start="11:48" pos:end="11:50">obj</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:19">(<expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:13">bytes</name> <operator pos:start="15:15" pos:end="15:16">==</operator> <literal type="number" pos:start="15:18" pos:end="15:18">4</literal></expr>)</condition> <block pos:start="15:21" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:47">

        <decl_stmt pos:start="17:9" pos:end="17:67"><decl pos:start="17:9" pos:end="17:66"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint32_t</name></type> <name pos:start="17:18" pos:end="17:22">color</name> <init pos:start="17:24" pos:end="17:66">= <expr pos:start="17:26" pos:end="17:66"><call pos:start="17:26" pos:end="17:66"><name pos:start="17:26" pos:end="17:46">tight_palette_buf2rgb</name><argument_list pos:start="17:47" pos:end="17:66">(<argument pos:start="17:48" pos:end="17:49"><expr pos:start="17:48" pos:end="17:49"><literal type="number" pos:start="17:48" pos:end="17:49">32</literal></expr></argument>, <argument pos:start="17:52" pos:end="17:65"><expr pos:start="17:52" pos:end="17:65"><operator pos:start="17:52" pos:end="17:52">(</operator><name pos:start="17:53" pos:end="17:59">uint8_t</name> <operator pos:start="17:61" pos:end="17:61">*</operator><operator pos:start="17:62" pos:end="17:62">)</operator><name pos:start="17:63" pos:end="17:65">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:47"><expr pos:start="21:9" pos:end="21:46"><operator pos:start="21:9" pos:end="21:9">(</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:18">uint32_t</name><operator pos:start="21:19" pos:end="21:19">*</operator><operator pos:start="21:20" pos:end="21:20">)</operator><name pos:start="21:21" pos:end="21:32"><name pos:start="21:21" pos:end="21:24">priv</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:32">header</name></name><operator pos:start="21:33" pos:end="21:33">)</operator><index pos:start="21:34" pos:end="21:38">[<expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">idx</name></expr>]</index> <operator pos:start="21:40" pos:end="21:40">=</operator> <name pos:start="21:42" pos:end="21:46">color</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="31:5">else <block pos:start="23:12" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:47">

        <decl_stmt pos:start="25:9" pos:end="25:67"><decl pos:start="25:9" pos:end="25:66"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">uint16_t</name></type> <name pos:start="25:18" pos:end="25:22">color</name> <init pos:start="25:24" pos:end="25:66">= <expr pos:start="25:26" pos:end="25:66"><call pos:start="25:26" pos:end="25:66"><name pos:start="25:26" pos:end="25:46">tight_palette_buf2rgb</name><argument_list pos:start="25:47" pos:end="25:66">(<argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><literal type="number" pos:start="25:48" pos:end="25:49">16</literal></expr></argument>, <argument pos:start="25:52" pos:end="25:65"><expr pos:start="25:52" pos:end="25:65"><operator pos:start="25:52" pos:end="25:52">(</operator><name pos:start="25:53" pos:end="25:59">uint8_t</name> <operator pos:start="25:61" pos:end="25:61">*</operator><operator pos:start="25:62" pos:end="25:62">)</operator><name pos:start="25:63" pos:end="25:65">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><operator pos:start="29:9" pos:end="29:9">(</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:18">uint16_t</name><operator pos:start="29:19" pos:end="29:19">*</operator><operator pos:start="29:20" pos:end="29:20">)</operator><name pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:24">priv</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:32">header</name></name><operator pos:start="29:33" pos:end="29:33">)</operator><index pos:start="29:34" pos:end="29:38">[<expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">idx</name></expr>]</index> <operator pos:start="29:40" pos:end="29:40">=</operator> <name pos:start="29:42" pos:end="29:46">color</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
