<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1011.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:45">matroska_parse_cluster_incremental</name><parameter_list pos:start="1:46" pos:end="1:77">(<parameter pos:start="1:47" pos:end="1:76"><decl pos:start="1:47" pos:end="1:76"><type pos:start="1:47" pos:end="1:68"><name pos:start="1:47" pos:end="1:66">MatroskaDemuxContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:76">matroska</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:15">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">EbmlList</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:25">blocks_list</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MatroskaBlock</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">blocks</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">res</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="15:49"><expr pos:start="11:5" pos:end="15:48"><name pos:start="11:5" pos:end="11:7">res</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="15:48"><name pos:start="11:11" pos:end="11:20">ebml_parse</name><argument_list pos:start="11:21" pos:end="15:48">(<argument pos:start="11:22" pos:end="11:29"><expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29">matroska</name></expr></argument>,

                     <argument pos:start="13:22" pos:end="13:57"><expr pos:start="13:22" pos:end="13:57"><name pos:start="13:22" pos:end="13:57">matroska_cluster_incremental_parsing</name></expr></argument>,

                     <argument pos:start="15:22" pos:end="15:47"><expr pos:start="15:22" pos:end="15:47"><operator pos:start="15:22" pos:end="15:22">&amp;</operator><name pos:start="15:23" pos:end="15:47"><name pos:start="15:23" pos:end="15:30">matroska</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:47">current_cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="57:5"><if pos:start="17:5" pos:end="57:5">if <condition pos:start="17:8" pos:end="17:17">(<expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">res</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr>)</condition> <block pos:start="17:19" pos:end="57:5">{<block_content pos:start="21:9" pos:end="55:57">

        <comment type="block" pos:start="19:9" pos:end="19:25">/* New Cluster */</comment>

        <if_stmt pos:start="21:9" pos:end="23:37"><if pos:start="21:9" pos:end="23:37">if <condition pos:start="21:12" pos:end="21:42">(<expr pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:20">matroska</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:41">current_cluster_pos</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:37"><block_content pos:start="23:13" pos:end="23:37">

            <expr_stmt pos:start="23:13" pos:end="23:37"><expr pos:start="23:13" pos:end="23:36"><call pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:26">ebml_level_end</name><argument_list pos:start="23:27" pos:end="23:36">(<argument pos:start="23:28" pos:end="23:35"><expr pos:start="23:28" pos:end="23:35"><name pos:start="23:28" pos:end="23:35">matroska</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:64"><expr pos:start="25:9" pos:end="25:63"><call pos:start="25:9" pos:end="25:63"><name pos:start="25:9" pos:end="25:17">ebml_free</name><argument_list pos:start="25:18" pos:end="25:63">(<argument pos:start="25:19" pos:end="25:34"><expr pos:start="25:19" pos:end="25:34"><name pos:start="25:19" pos:end="25:34">matroska_cluster</name></expr></argument>, <argument pos:start="25:37" pos:end="25:62"><expr pos:start="25:37" pos:end="25:62"><operator pos:start="25:37" pos:end="25:37">&amp;</operator><name pos:start="25:38" pos:end="25:62"><name pos:start="25:38" pos:end="25:45">matroska</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:62">current_cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:14">memset</name><argument_list pos:start="27:15" pos:end="27:70">(<argument pos:start="27:16" pos:end="27:41"><expr pos:start="27:16" pos:end="27:41"><operator pos:start="27:16" pos:end="27:16">&amp;</operator><name pos:start="27:17" pos:end="27:41"><name pos:start="27:17" pos:end="27:24">matroska</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:41">current_cluster</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">0</literal></expr></argument>, <argument pos:start="27:47" pos:end="27:69"><expr pos:start="27:47" pos:end="27:69"><sizeof pos:start="27:47" pos:end="27:69">sizeof<argument_list pos:start="27:53" pos:end="27:69">(<argument pos:start="27:54" pos:end="27:68"><expr pos:start="27:54" pos:end="27:68"><name pos:start="27:54" pos:end="27:68">MatroskaCluster</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:16">matroska</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:44">current_cluster_num_blocks</name></name> <operator pos:start="29:46" pos:end="29:46">=</operator> <literal type="number" pos:start="29:48" pos:end="29:48">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:69"><expr pos:start="31:9" pos:end="31:68"><name pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:16">matroska</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:37">current_cluster_pos</name></name> <operator pos:start="31:39" pos:end="31:39">=</operator> <call pos:start="31:41" pos:end="31:68"><name pos:start="31:41" pos:end="31:49">avio_tell</name><argument_list pos:start="31:50" pos:end="31:68">(<argument pos:start="31:51" pos:end="31:67"><expr pos:start="31:51" pos:end="31:67"><name pos:start="31:51" pos:end="31:67"><name pos:start="31:51" pos:end="31:58">matroska</name><operator pos:start="31:59" pos:end="31:60">-&gt;</operator><name pos:start="31:61" pos:end="31:63">ctx</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:67">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:16">matroska</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:26">prev_pkt</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:33">NULL</name></expr>;</expr_stmt>

        <comment type="block" pos:start="35:9" pos:end="35:50">/* sizeof the ID which was already read */</comment>

        <if_stmt pos:start="37:9" pos:end="39:47"><if pos:start="37:9" pos:end="39:47">if <condition pos:start="37:12" pos:end="37:33">(<expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:20">matroska</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:32">current_id</name></name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:47"><block_content pos:start="39:13" pos:end="39:47">

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:41"><name pos:start="39:13" pos:end="39:20">matroska</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:41">current_cluster_pos</name></name> <operator pos:start="39:43" pos:end="39:44">-=</operator> <literal type="number" pos:start="39:46" pos:end="39:46">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="45:53"><expr pos:start="41:9" pos:end="45:52"><name pos:start="41:9" pos:end="41:11">res</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="45:52"><name pos:start="41:15" pos:end="41:24">ebml_parse</name><argument_list pos:start="41:25" pos:end="45:52">(<argument pos:start="41:26" pos:end="41:33"><expr pos:start="41:26" pos:end="41:33"><name pos:start="41:26" pos:end="41:33">matroska</name></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:54"><expr pos:start="43:26" pos:end="43:54"><name pos:start="43:26" pos:end="43:54">matroska_clusters_incremental</name></expr></argument>,

                         <argument pos:start="45:26" pos:end="45:51"><expr pos:start="45:26" pos:end="45:51"><operator pos:start="45:26" pos:end="45:26">&amp;</operator><name pos:start="45:27" pos:end="45:51"><name pos:start="45:27" pos:end="45:34">matroska</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:51">current_cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:42">/* Try parsing the block again. */</comment>

        <if_stmt pos:start="49:9" pos:end="55:57"><if pos:start="49:9" pos:end="55:57">if <condition pos:start="49:12" pos:end="49:21">(<expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">res</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <literal type="number" pos:start="49:20" pos:end="49:20">1</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="55:57"><block_content pos:start="51:13" pos:end="55:57">

            <expr_stmt pos:start="51:13" pos:end="55:57"><expr pos:start="51:13" pos:end="55:56"><name pos:start="51:13" pos:end="51:15">res</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="55:56"><name pos:start="51:19" pos:end="51:28">ebml_parse</name><argument_list pos:start="51:29" pos:end="55:56">(<argument pos:start="51:30" pos:end="51:37"><expr pos:start="51:30" pos:end="51:37"><name pos:start="51:30" pos:end="51:37">matroska</name></expr></argument>,

                             <argument pos:start="53:30" pos:end="53:65"><expr pos:start="53:30" pos:end="53:65"><name pos:start="53:30" pos:end="53:65">matroska_cluster_incremental_parsing</name></expr></argument>,

                             <argument pos:start="55:30" pos:end="55:55"><expr pos:start="55:30" pos:end="55:55"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:55"><name pos:start="55:31" pos:end="55:38">matroska</name><operator pos:start="55:39" pos:end="55:40">-&gt;</operator><name pos:start="55:41" pos:end="55:55">current_cluster</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="107:5"><if pos:start="61:5" pos:end="107:5">if <condition pos:start="61:8" pos:end="65:53">(<expr pos:start="61:9" pos:end="65:52"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:12">res</name> <operator pos:start="61:14" pos:end="61:15">&amp;&amp;</operator>

        <name pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:16">matroska</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:44">current_cluster_num_blocks</name></name> <operator pos:start="63:46" pos:end="63:46">&lt;</operator>

            <name pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:20">matroska</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:37">current_cluster</name><operator pos:start="65:38" pos:end="65:38">.</operator><name pos:start="65:39" pos:end="65:44">blocks</name><operator pos:start="65:45" pos:end="65:45">.</operator><name pos:start="65:46" pos:end="65:52">nb_elem</name></name></expr>)</condition> <block pos:start="65:55" pos:end="107:5">{<block_content pos:start="67:9" pos:end="105:9">

        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:19">blocks_list</name> <operator pos:start="67:21" pos:end="67:21">=</operator> <operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:55"><name pos:start="67:24" pos:end="67:31">matroska</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:48">current_cluster</name><operator pos:start="67:49" pos:end="67:49">.</operator><name pos:start="67:50" pos:end="67:55">blocks</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:14">blocks</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <name pos:start="69:18" pos:end="69:34"><name pos:start="69:18" pos:end="69:28">blocks_list</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:34">elem</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:68"><expr pos:start="73:9" pos:end="73:67"><name pos:start="73:9" pos:end="73:44"><name pos:start="73:9" pos:end="73:16">matroska</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:44">current_cluster_num_blocks</name></name> <operator pos:start="73:46" pos:end="73:46">=</operator> <name pos:start="73:48" pos:end="73:67"><name pos:start="73:48" pos:end="73:58">blocks_list</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:67">nb_elem</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:9">i</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:23">blocks_list</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:32">nb_elem</name></name> <operator pos:start="75:34" pos:end="75:34">-</operator> <literal type="number" pos:start="75:36" pos:end="75:36">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="105:9"><if pos:start="77:9" pos:end="105:9">if <condition pos:start="77:12" pos:end="77:57">(<expr pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:21"><name pos:start="77:13" pos:end="77:18">blocks</name><index pos:start="77:19" pos:end="77:21">[<expr pos:start="77:20" pos:end="77:20"><name pos:start="77:20" pos:end="77:20">i</name></expr>]</index></name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:30"><name pos:start="77:23" pos:end="77:25">bin</name><operator pos:start="77:26" pos:end="77:26">.</operator><name pos:start="77:27" pos:end="77:30">size</name></name> <operator pos:start="77:32" pos:end="77:32">&gt;</operator> <literal type="number" pos:start="77:34" pos:end="77:34">0</literal> <operator pos:start="77:36" pos:end="77:37">&amp;&amp;</operator> <name pos:start="77:39" pos:end="77:47"><name pos:start="77:39" pos:end="77:44">blocks</name><index pos:start="77:45" pos:end="77:47">[<expr pos:start="77:46" pos:end="77:46"><name pos:start="77:46" pos:end="77:46">i</name></expr>]</index></name><operator pos:start="77:48" pos:end="77:48">.</operator><name pos:start="77:49" pos:end="77:56"><name pos:start="77:49" pos:end="77:51">bin</name><operator pos:start="77:52" pos:end="77:52">.</operator><name pos:start="77:53" pos:end="77:56">data</name></name></expr>)</condition> <block pos:start="77:59" pos:end="105:9">{<block_content pos:start="79:13" pos:end="103:70">

            <decl_stmt pos:start="79:13" pos:end="79:79"><decl pos:start="79:13" pos:end="79:78"><type pos:start="79:13" pos:end="79:15"><name pos:start="79:13" pos:end="79:15">int</name></type> <name pos:start="79:17" pos:end="79:27">is_keyframe</name> <init pos:start="79:29" pos:end="79:78">= <expr pos:start="79:31" pos:end="79:78"><ternary pos:start="79:31" pos:end="79:78"><condition pos:start="79:31" pos:end="79:52"><expr pos:start="79:31" pos:end="79:50"><name pos:start="79:31" pos:end="79:39"><name pos:start="79:31" pos:end="79:36">blocks</name><index pos:start="79:37" pos:end="79:39">[<expr pos:start="79:38" pos:end="79:38"><name pos:start="79:38" pos:end="79:38">i</name></expr>]</index></name><operator pos:start="79:40" pos:end="79:40">.</operator><name pos:start="79:41" pos:end="79:50">non_simple</name></expr> ?</condition><then pos:start="79:54" pos:end="79:73"> <expr pos:start="79:54" pos:end="79:73"><operator pos:start="79:54" pos:end="79:54">!</operator><name pos:start="79:55" pos:end="79:63"><name pos:start="79:55" pos:end="79:60">blocks</name><index pos:start="79:61" pos:end="79:63">[<expr pos:start="79:62" pos:end="79:62"><name pos:start="79:62" pos:end="79:62">i</name></expr>]</index></name><operator pos:start="79:64" pos:end="79:64">.</operator><name pos:start="79:65" pos:end="79:73">reference</name></expr> </then><else pos:start="79:75" pos:end="79:78">: <expr pos:start="79:77" pos:end="79:78"><operator pos:start="79:77" pos:end="79:77">-</operator><literal type="number" pos:start="79:78" pos:end="79:78">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="83:69"><decl pos:start="81:13" pos:end="83:68"><type pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:19">uint8_t</name><modifier pos:start="81:20" pos:end="81:20">*</modifier></type> <name pos:start="81:22" pos:end="81:31">additional</name> <init pos:start="81:33" pos:end="83:68">= <expr pos:start="81:35" pos:end="83:68"><ternary pos:start="81:35" pos:end="83:68"><condition pos:start="81:35" pos:end="81:65"><expr pos:start="81:35" pos:end="81:63"><name pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:40">blocks</name><index pos:start="81:41" pos:end="81:43">[<expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">i</name></expr>]</index></name><operator pos:start="81:44" pos:end="81:44">.</operator><name pos:start="81:45" pos:end="81:59"><name pos:start="81:45" pos:end="81:54">additional</name><operator pos:start="81:55" pos:end="81:55">.</operator><name pos:start="81:56" pos:end="81:59">size</name></name> <operator pos:start="81:61" pos:end="81:61">&gt;</operator> <literal type="number" pos:start="81:63" pos:end="81:63">0</literal></expr> ?</condition><then pos:start="83:37" pos:end="83:61">

                                    <expr pos:start="83:37" pos:end="83:61"><name pos:start="83:37" pos:end="83:45"><name pos:start="83:37" pos:end="83:42">blocks</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><name pos:start="83:44" pos:end="83:44">i</name></expr>]</index></name><operator pos:start="83:46" pos:end="83:46">.</operator><name pos:start="83:47" pos:end="83:61"><name pos:start="83:47" pos:end="83:56">additional</name><operator pos:start="83:57" pos:end="83:57">.</operator><name pos:start="83:58" pos:end="83:61">data</name></name></expr> </then><else pos:start="83:63" pos:end="83:68">: <expr pos:start="83:65" pos:end="83:68"><name pos:start="83:65" pos:end="83:68">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="85:13" pos:end="87:39"><if pos:start="85:13" pos:end="87:39">if <condition pos:start="85:16" pos:end="85:38">(<expr pos:start="85:17" pos:end="85:37"><operator pos:start="85:17" pos:end="85:17">!</operator><name pos:start="85:18" pos:end="85:26"><name pos:start="85:18" pos:end="85:23">blocks</name><index pos:start="85:24" pos:end="85:26">[<expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">i</name></expr>]</index></name><operator pos:start="85:27" pos:end="85:27">.</operator><name pos:start="85:28" pos:end="85:37">non_simple</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:39"><block_content pos:start="87:17" pos:end="87:39">

                <expr_stmt pos:start="87:17" pos:end="87:39"><expr pos:start="87:17" pos:end="87:38"><name pos:start="87:17" pos:end="87:25"><name pos:start="87:17" pos:end="87:22">blocks</name><index pos:start="87:23" pos:end="87:25">[<expr pos:start="87:24" pos:end="87:24"><name pos:start="87:24" pos:end="87:24">i</name></expr>]</index></name><operator pos:start="87:26" pos:end="87:26">.</operator><name pos:start="87:27" pos:end="87:34">duration</name> <operator pos:start="87:36" pos:end="87:36">=</operator> <literal type="number" pos:start="87:38" pos:end="87:38">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="103:70"><expr pos:start="89:13" pos:end="103:69"><name pos:start="89:13" pos:end="89:15">res</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="103:69"><name pos:start="89:19" pos:end="89:38">matroska_parse_block</name><argument_list pos:start="89:39" pos:end="103:69">(<argument pos:start="89:40" pos:end="89:47"><expr pos:start="89:40" pos:end="89:47"><name pos:start="89:40" pos:end="89:47">matroska</name></expr></argument>,

                                       <argument pos:start="91:40" pos:end="91:57"><expr pos:start="91:40" pos:end="91:57"><name pos:start="91:40" pos:end="91:48"><name pos:start="91:40" pos:end="91:45">blocks</name><index pos:start="91:46" pos:end="91:48">[<expr pos:start="91:47" pos:end="91:47"><name pos:start="91:47" pos:end="91:47">i</name></expr>]</index></name><operator pos:start="91:49" pos:end="91:49">.</operator><name pos:start="91:50" pos:end="91:57"><name pos:start="91:50" pos:end="91:52">bin</name><operator pos:start="91:53" pos:end="91:53">.</operator><name pos:start="91:54" pos:end="91:57">data</name></name></expr></argument>, <argument pos:start="91:60" pos:end="91:77"><expr pos:start="91:60" pos:end="91:77"><name pos:start="91:60" pos:end="91:68"><name pos:start="91:60" pos:end="91:65">blocks</name><index pos:start="91:66" pos:end="91:68">[<expr pos:start="91:67" pos:end="91:67"><name pos:start="91:67" pos:end="91:67">i</name></expr>]</index></name><operator pos:start="91:69" pos:end="91:69">.</operator><name pos:start="91:70" pos:end="91:77"><name pos:start="91:70" pos:end="91:72">bin</name><operator pos:start="91:73" pos:end="91:73">.</operator><name pos:start="91:74" pos:end="91:77">size</name></name></expr></argument>,

                                       <argument pos:start="93:40" pos:end="93:56"><expr pos:start="93:40" pos:end="93:56"><name pos:start="93:40" pos:end="93:48"><name pos:start="93:40" pos:end="93:45">blocks</name><index pos:start="93:46" pos:end="93:48">[<expr pos:start="93:47" pos:end="93:47"><name pos:start="93:47" pos:end="93:47">i</name></expr>]</index></name><operator pos:start="93:49" pos:end="93:49">.</operator><name pos:start="93:50" pos:end="93:56"><name pos:start="93:50" pos:end="93:52">bin</name><operator pos:start="93:53" pos:end="93:53">.</operator><name pos:start="93:54" pos:end="93:56">pos</name></name></expr></argument>,

                                       <argument pos:start="95:40" pos:end="95:73"><expr pos:start="95:40" pos:end="95:73"><name pos:start="95:40" pos:end="95:73"><name pos:start="95:40" pos:end="95:47">matroska</name><operator pos:start="95:48" pos:end="95:49">-&gt;</operator><name pos:start="95:50" pos:end="95:64">current_cluster</name><operator pos:start="95:65" pos:end="95:65">.</operator><name pos:start="95:66" pos:end="95:73">timecode</name></name></expr></argument>,

                                       <argument pos:start="97:40" pos:end="97:57"><expr pos:start="97:40" pos:end="97:57"><name pos:start="97:40" pos:end="97:48"><name pos:start="97:40" pos:end="97:45">blocks</name><index pos:start="97:46" pos:end="97:48">[<expr pos:start="97:47" pos:end="97:47"><name pos:start="97:47" pos:end="97:47">i</name></expr>]</index></name><operator pos:start="97:49" pos:end="97:49">.</operator><name pos:start="97:50" pos:end="97:57">duration</name></expr></argument>, <argument pos:start="97:60" pos:end="97:70"><expr pos:start="97:60" pos:end="97:70"><name pos:start="97:60" pos:end="97:70">is_keyframe</name></expr></argument>,

                                       <argument pos:start="99:40" pos:end="99:49"><expr pos:start="99:40" pos:end="99:49"><name pos:start="99:40" pos:end="99:49">additional</name></expr></argument>, <argument pos:start="99:52" pos:end="99:74"><expr pos:start="99:52" pos:end="99:74"><name pos:start="99:52" pos:end="99:60"><name pos:start="99:52" pos:end="99:57">blocks</name><index pos:start="99:58" pos:end="99:60">[<expr pos:start="99:59" pos:end="99:59"><name pos:start="99:59" pos:end="99:59">i</name></expr>]</index></name><operator pos:start="99:61" pos:end="99:61">.</operator><name pos:start="99:62" pos:end="99:74">additional_id</name></expr></argument>,

                                       <argument pos:start="101:40" pos:end="101:64"><expr pos:start="101:40" pos:end="101:64"><name pos:start="101:40" pos:end="101:48"><name pos:start="101:40" pos:end="101:45">blocks</name><index pos:start="101:46" pos:end="101:48">[<expr pos:start="101:47" pos:end="101:47"><name pos:start="101:47" pos:end="101:47">i</name></expr>]</index></name><operator pos:start="101:49" pos:end="101:49">.</operator><name pos:start="101:50" pos:end="101:64"><name pos:start="101:50" pos:end="101:59">additional</name><operator pos:start="101:60" pos:end="101:60">.</operator><name pos:start="101:61" pos:end="101:64">size</name></name></expr></argument>,

                                       <argument pos:start="103:40" pos:end="103:68"><expr pos:start="103:40" pos:end="103:68"><name pos:start="103:40" pos:end="103:68"><name pos:start="103:40" pos:end="103:47">matroska</name><operator pos:start="103:48" pos:end="103:49">-&gt;</operator><name pos:start="103:50" pos:end="103:68">current_cluster_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="111:37"><if pos:start="111:5" pos:end="111:37">if <condition pos:start="111:8" pos:end="111:16">(<expr pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:11">res</name> <operator pos:start="111:13" pos:end="111:13">&lt;</operator> <literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>)</condition><block type="pseudo" pos:start="111:19" pos:end="111:37"><block_content pos:start="111:19" pos:end="111:37">  <expr_stmt pos:start="111:19" pos:end="111:37"><expr pos:start="111:19" pos:end="111:36"><name pos:start="111:19" pos:end="111:32"><name pos:start="111:19" pos:end="111:26">matroska</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:32">done</name></name> <operator pos:start="111:34" pos:end="111:34">=</operator> <literal type="number" pos:start="111:36" pos:end="111:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="113:5" pos:end="113:15">return <expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
