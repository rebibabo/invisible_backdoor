<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6331.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">buffer_reserve</name><parameter_list pos:start="1:27" pos:end="1:54">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:33">Buffer</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">buffer</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:49">size_t</name></type> <name pos:start="1:51" pos:end="1:53">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:5">

    <if_stmt pos:start="5:5" pos:end="19:5"><if pos:start="5:5" pos:end="19:5">if <condition pos:start="5:8" pos:end="5:50">(<expr pos:start="5:9" pos:end="5:49"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:25"><name pos:start="5:10" pos:end="5:15">buffer</name><operator pos:start="5:16" pos:end="5:17">-&gt;</operator><name pos:start="5:18" pos:end="5:25">capacity</name></name> <operator pos:start="5:27" pos:end="5:27">-</operator> <name pos:start="5:29" pos:end="5:42"><name pos:start="5:29" pos:end="5:34">buffer</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:42">offset</name></name><operator pos:start="5:43" pos:end="5:43">)</operator> <operator pos:start="5:45" pos:end="5:45">&lt;</operator> <name pos:start="5:47" pos:end="5:49">len</name></expr>)</condition> <block pos:start="5:52" pos:end="19:5">{<block_content pos:start="7:9" pos:end="17:9">

	<expr_stmt pos:start="7:9" pos:end="7:41"><expr pos:start="7:9" pos:end="7:40"><name pos:start="7:9" pos:end="7:24"><name pos:start="7:9" pos:end="7:14">buffer</name><operator pos:start="7:15" pos:end="7:16">-&gt;</operator><name pos:start="7:17" pos:end="7:24">capacity</name></name> <operator pos:start="7:26" pos:end="7:27">+=</operator> <operator pos:start="7:29" pos:end="7:29">(</operator><name pos:start="7:30" pos:end="7:32">len</name> <operator pos:start="7:34" pos:end="7:34">+</operator> <literal type="number" pos:start="7:36" pos:end="7:39">1024</literal><operator pos:start="7:40" pos:end="7:40">)</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="9:9" pos:end="9:72"><expr pos:start="9:9" pos:end="9:71"><name pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:14">buffer</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:22">buffer</name></name> <operator pos:start="9:24" pos:end="9:24">=</operator> <call pos:start="9:26" pos:end="9:71"><name pos:start="9:26" pos:end="9:37">qemu_realloc</name><argument_list pos:start="9:38" pos:end="9:71">(<argument pos:start="9:39" pos:end="9:52"><expr pos:start="9:39" pos:end="9:52"><name pos:start="9:39" pos:end="9:52"><name pos:start="9:39" pos:end="9:44">buffer</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:52">buffer</name></name></expr></argument>, <argument pos:start="9:55" pos:end="9:70"><expr pos:start="9:55" pos:end="9:70"><name pos:start="9:55" pos:end="9:70"><name pos:start="9:55" pos:end="9:60">buffer</name><operator pos:start="9:61" pos:end="9:62">-&gt;</operator><name pos:start="9:63" pos:end="9:70">capacity</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:35">(<expr pos:start="11:13" pos:end="11:34"><name pos:start="11:13" pos:end="11:26"><name pos:start="11:13" pos:end="11:18">buffer</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:26">buffer</name></name> <operator pos:start="11:28" pos:end="11:29">==</operator> <name pos:start="11:31" pos:end="11:34">NULL</name></expr>)</condition> <block pos:start="11:37" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:20">

	    <expr_stmt pos:start="13:13" pos:end="13:52"><expr pos:start="13:13" pos:end="13:51"><call pos:start="13:13" pos:end="13:51"><name pos:start="13:13" pos:end="13:19">fprintf</name><argument_list pos:start="13:20" pos:end="13:51">(<argument pos:start="13:21" pos:end="13:26"><expr pos:start="13:21" pos:end="13:26"><name pos:start="13:21" pos:end="13:26">stderr</name></expr></argument>, <argument pos:start="13:29" pos:end="13:50"><expr pos:start="13:29" pos:end="13:50"><literal type="string" pos:start="13:29" pos:end="13:50">"vnc: out of memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="15:13" pos:end="15:20"><expr pos:start="15:13" pos:end="15:19"><call pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:16">exit</name><argument_list pos:start="15:17" pos:end="15:19">(<argument pos:start="15:18" pos:end="15:18"><expr pos:start="15:18" pos:end="15:18"><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
