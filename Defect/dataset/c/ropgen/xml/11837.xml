<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11837.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">dump_aml_files</name><parameter_list pos:start="1:27" pos:end="1:57">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:36">test_data</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:42">data</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:48">bool</name></type> <name pos:start="1:50" pos:end="1:56">rebuild</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AcpiSdtTable</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">sdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">GError</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:17">error</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">gchar</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:19">aml_file</name> <init pos:start="9:21" pos:end="9:26">= <expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">gint</name></type> <name pos:start="11:10" pos:end="11:11">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">ssize_t</name></type> <name pos:start="13:13" pos:end="13:15">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="73:5">for <control pos:start="19:9" pos:end="19:43">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:38"><expr pos:start="19:17" pos:end="19:37"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:37"><name pos:start="19:21" pos:end="19:24">data</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:32">tables</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:37">len</name></name></expr>;</condition> <incr pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><operator pos:start="19:40" pos:end="19:41">++</operator><name pos:start="19:42" pos:end="19:42">i</name></expr></incr>)</control> <block pos:start="19:45" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:9">

        <decl_stmt pos:start="21:9" pos:end="21:61"><decl pos:start="21:9" pos:end="21:60"><type pos:start="21:9" pos:end="21:20"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:18">char</name> <modifier pos:start="21:20" pos:end="21:20">*</modifier></type><name pos:start="21:21" pos:end="21:23">ext</name> <init pos:start="21:25" pos:end="21:60">= <expr pos:start="21:27" pos:end="21:60"><ternary pos:start="21:27" pos:end="21:60"><condition pos:start="21:27" pos:end="21:41"><expr pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:30">data</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:39">variant</name></name></expr> ?</condition><then pos:start="21:43" pos:end="21:55"> <expr pos:start="21:43" pos:end="21:55"><name pos:start="21:43" pos:end="21:55"><name pos:start="21:43" pos:end="21:46">data</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:55">variant</name></name></expr> </then><else pos:start="21:57" pos:end="21:60">: <expr pos:start="21:59" pos:end="21:60"><literal type="string" pos:start="21:59" pos:end="21:60">""</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:60"><expr pos:start="23:9" pos:end="23:59"><name pos:start="23:9" pos:end="23:11">sdt</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <operator pos:start="23:15" pos:end="23:15">&amp;</operator><call pos:start="23:16" pos:end="23:59"><name pos:start="23:16" pos:end="23:28">g_array_index</name><argument_list pos:start="23:29" pos:end="23:59">(<argument pos:start="23:30" pos:end="23:41"><expr pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:33">data</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:41">tables</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:55"><expr pos:start="23:44" pos:end="23:55"><name pos:start="23:44" pos:end="23:55">AcpiSdtTable</name></expr></argument>, <argument pos:start="23:58" pos:end="23:58"><expr pos:start="23:58" pos:end="23:58"><name pos:start="23:58" pos:end="23:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><call pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:16">g_assert</name><argument_list pos:start="25:17" pos:end="25:26">(<argument pos:start="25:18" pos:end="25:25"><expr pos:start="25:18" pos:end="25:25"><name pos:start="25:18" pos:end="25:25"><name pos:start="25:18" pos:end="25:20">sdt</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:25">aml</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="47:9"><if pos:start="29:9" pos:end="41:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:19">rebuild</name></expr>)</condition> <block pos:start="29:22" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:65">

            <decl_stmt pos:start="31:13" pos:end="31:68"><decl pos:start="31:13" pos:end="31:67"><type pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20">uint32_t</name></type> <name pos:start="31:22" pos:end="31:30">signature</name> <init pos:start="31:32" pos:end="31:67">= <expr pos:start="31:34" pos:end="31:67"><call pos:start="31:34" pos:end="31:67"><name pos:start="31:34" pos:end="31:44">cpu_to_le32</name><argument_list pos:start="31:45" pos:end="31:67">(<argument pos:start="31:46" pos:end="31:66"><expr pos:start="31:46" pos:end="31:66"><name pos:start="31:46" pos:end="31:66"><name pos:start="31:46" pos:end="31:48">sdt</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:56">header</name><operator pos:start="31:57" pos:end="31:57">.</operator><name pos:start="31:58" pos:end="31:66">signature</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="35:65"><expr pos:start="33:13" pos:end="35:64"><name pos:start="33:13" pos:end="33:20">aml_file</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="35:64"><name pos:start="33:24" pos:end="33:38">g_strdup_printf</name><argument_list pos:start="33:39" pos:end="35:64">(<argument pos:start="33:40" pos:end="33:53"><expr pos:start="33:40" pos:end="33:53"><literal type="string" pos:start="33:40" pos:end="33:53">"%s/%s/%.4s%s"</literal></expr></argument>, <argument pos:start="33:56" pos:end="33:63"><expr pos:start="33:56" pos:end="33:63"><name pos:start="33:56" pos:end="33:63">data_dir</name></expr></argument>, <argument pos:start="33:66" pos:end="33:78"><expr pos:start="33:66" pos:end="33:78"><name pos:start="33:66" pos:end="33:78"><name pos:start="33:66" pos:end="33:69">data</name><operator pos:start="33:70" pos:end="33:71">-&gt;</operator><name pos:start="33:72" pos:end="33:78">machine</name></name></expr></argument>,

                                       <argument pos:start="35:40" pos:end="35:58"><expr pos:start="35:40" pos:end="35:58"><operator pos:start="35:40" pos:end="35:40">(</operator><name pos:start="35:41" pos:end="35:45">gchar</name> <operator pos:start="35:47" pos:end="35:47">*</operator><operator pos:start="35:48" pos:end="35:48">)</operator><operator pos:start="35:49" pos:end="35:49">&amp;</operator><name pos:start="35:50" pos:end="35:58">signature</name></expr></argument>, <argument pos:start="35:61" pos:end="35:63"><expr pos:start="35:61" pos:end="35:63"><name pos:start="35:61" pos:end="35:63">ext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="39:65"><expr pos:start="37:13" pos:end="39:64"><name pos:start="37:13" pos:end="37:14">fd</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="39:64"><name pos:start="37:18" pos:end="37:23">g_open</name><argument_list pos:start="37:24" pos:end="39:64">(<argument pos:start="37:25" pos:end="37:32"><expr pos:start="37:25" pos:end="37:32"><name pos:start="37:25" pos:end="37:32">aml_file</name></expr></argument>, <argument pos:start="37:35" pos:end="37:58"><expr pos:start="37:35" pos:end="37:58"><name pos:start="37:35" pos:end="37:42">O_WRONLY</name><operator pos:start="37:43" pos:end="37:43">|</operator><name pos:start="37:44" pos:end="37:50">O_TRUNC</name><operator pos:start="37:51" pos:end="37:51">|</operator><name pos:start="37:52" pos:end="37:58">O_CREAT</name></expr></argument>,

                        <argument pos:start="39:25" pos:end="39:63"><expr pos:start="39:25" pos:end="39:63"><name pos:start="39:25" pos:end="39:31">S_IRUSR</name><operator pos:start="39:32" pos:end="39:32">|</operator><name pos:start="39:33" pos:end="39:39">S_IWUSR</name><operator pos:start="39:40" pos:end="39:40">|</operator><name pos:start="39:41" pos:end="39:47">S_IRGRP</name><operator pos:start="39:48" pos:end="39:48">|</operator><name pos:start="39:49" pos:end="39:55">S_IWGRP</name><operator pos:start="39:56" pos:end="39:56">|</operator><name pos:start="39:57" pos:end="39:63">S_IROTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="47:9">else <block pos:start="41:16" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:37">

            <expr_stmt pos:start="43:13" pos:end="43:71"><expr pos:start="43:13" pos:end="43:70"><name pos:start="43:13" pos:end="43:14">fd</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <call pos:start="43:18" pos:end="43:70"><name pos:start="43:18" pos:end="43:32">g_file_open_tmp</name><argument_list pos:start="43:33" pos:end="43:70">(<argument pos:start="43:34" pos:end="43:45"><expr pos:start="43:34" pos:end="43:45"><literal type="string" pos:start="43:34" pos:end="43:45">"aml-XXXXXX"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:61"><expr pos:start="43:48" pos:end="43:61"><operator pos:start="43:48" pos:end="43:48">&amp;</operator><name pos:start="43:49" pos:end="43:61"><name pos:start="43:49" pos:end="43:51">sdt</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:61">aml_file</name></name></expr></argument>, <argument pos:start="43:64" pos:end="43:69"><expr pos:start="43:64" pos:end="43:69"><operator pos:start="43:64" pos:end="43:64">&amp;</operator><name pos:start="43:65" pos:end="43:69">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:37"><expr pos:start="45:13" pos:end="45:36"><call pos:start="45:13" pos:end="45:36"><name pos:start="45:13" pos:end="45:29">g_assert_no_error</name><argument_list pos:start="45:30" pos:end="45:36">(<argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><call pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:16">g_assert</name><argument_list pos:start="49:17" pos:end="49:25">(<argument pos:start="49:18" pos:end="49:24"><expr pos:start="49:18" pos:end="49:24"><name pos:start="49:18" pos:end="49:19">fd</name> <operator pos:start="49:21" pos:end="49:22">&gt;=</operator> <literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:64"><expr pos:start="53:9" pos:end="53:63"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:63"><name pos:start="53:15" pos:end="53:29">qemu_write_full</name><argument_list pos:start="53:30" pos:end="53:63">(<argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><name pos:start="53:31" pos:end="53:32">fd</name></expr></argument>, <argument pos:start="53:35" pos:end="53:37"><expr pos:start="53:35" pos:end="53:37"><name pos:start="53:35" pos:end="53:37">sdt</name></expr></argument>, <argument pos:start="53:40" pos:end="53:62"><expr pos:start="53:40" pos:end="53:62"><sizeof pos:start="53:40" pos:end="53:62">sizeof<argument_list pos:start="53:46" pos:end="53:62">(<argument pos:start="53:47" pos:end="53:61"><expr pos:start="53:47" pos:end="53:61"><name pos:start="53:47" pos:end="53:61">AcpiTableHeader</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><call pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:16">g_assert</name><argument_list pos:start="55:17" pos:end="55:48">(<argument pos:start="55:18" pos:end="55:47"><expr pos:start="55:18" pos:end="55:47"><name pos:start="55:18" pos:end="55:20">ret</name> <operator pos:start="55:22" pos:end="55:23">==</operator> <sizeof pos:start="55:25" pos:end="55:47">sizeof<argument_list pos:start="55:31" pos:end="55:47">(<argument pos:start="55:32" pos:end="55:46"><expr pos:start="55:32" pos:end="55:46"><name pos:start="55:32" pos:end="55:46">AcpiTableHeader</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:58"><expr pos:start="57:9" pos:end="57:57"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:57"><name pos:start="57:15" pos:end="57:29">qemu_write_full</name><argument_list pos:start="57:30" pos:end="57:57">(<argument pos:start="57:31" pos:end="57:32"><expr pos:start="57:31" pos:end="57:32"><name pos:start="57:31" pos:end="57:32">fd</name></expr></argument>, <argument pos:start="57:35" pos:end="57:42"><expr pos:start="57:35" pos:end="57:42"><name pos:start="57:35" pos:end="57:42"><name pos:start="57:35" pos:end="57:37">sdt</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:42">aml</name></name></expr></argument>, <argument pos:start="57:45" pos:end="57:56"><expr pos:start="57:45" pos:end="57:56"><name pos:start="57:45" pos:end="57:56"><name pos:start="57:45" pos:end="57:47">sdt</name><operator pos:start="57:48" pos:end="57:49">-&gt;</operator><name pos:start="57:50" pos:end="57:56">aml_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:16">g_assert</name><argument_list pos:start="59:17" pos:end="59:37">(<argument pos:start="59:18" pos:end="59:36"><expr pos:start="59:18" pos:end="59:36"><name pos:start="59:18" pos:end="59:20">ret</name> <operator pos:start="59:22" pos:end="59:23">==</operator> <name pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:27">sdt</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:36">aml_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:18"><expr pos:start="63:9" pos:end="63:17"><call pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:13">close</name><argument_list pos:start="63:14" pos:end="63:17">(<argument pos:start="63:15" pos:end="63:16"><expr pos:start="63:15" pos:end="63:16"><name pos:start="63:15" pos:end="63:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:21">(<expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:20">aml_file</name></expr>)</condition> <block pos:start="67:23" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:29">

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><call pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:18">g_free</name><argument_list pos:start="69:19" pos:end="69:28">(<argument pos:start="69:20" pos:end="69:27"><expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:27">aml_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
