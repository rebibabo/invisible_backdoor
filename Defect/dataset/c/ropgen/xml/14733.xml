<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14733.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">patch_reloc</name><parameter_list pos:start="1:24" pos:end="3:70">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:31">uint8_t</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">code_ptr</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:51"><decl pos:start="1:44" pos:end="1:51"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:51">type</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:45"><decl pos:start="3:25" pos:end="3:45"><type pos:start="3:25" pos:end="3:45"><name pos:start="3:25" pos:end="3:39">tcg_target_long</name></type> <name pos:start="3:41" pos:end="3:45">value</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:69"><decl pos:start="3:48" pos:end="3:69"><type pos:start="3:48" pos:end="3:69"><name pos:start="3:48" pos:end="3:62">tcg_target_long</name></type> <name pos:start="3:64" pos:end="3:69">addend</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <expr_stmt pos:start="7:5" pos:end="7:20"><expr pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:9">value</name> <operator pos:start="7:11" pos:end="7:12">+=</operator> <name pos:start="7:14" pos:end="7:19">addend</name></expr>;</expr_stmt>

    <switch pos:start="9:5" pos:end="39:5">switch <condition pos:start="9:12" pos:end="9:17">(<expr pos:start="9:13" pos:end="9:16"><name pos:start="9:13" pos:end="9:16">type</name></expr>)</condition> <block pos:start="9:19" pos:end="39:5">{<block_content pos:start="11:5" pos:end="37:20">

    <case pos:start="11:5" pos:end="11:20">case <expr pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:19">R_SPARC_32</name></expr>:</case>

        <if_stmt pos:start="13:9" pos:end="15:24"><if pos:start="13:9" pos:end="15:24">if <condition pos:start="13:12" pos:end="13:37">(<expr pos:start="13:13" pos:end="13:36"><name pos:start="13:13" pos:end="13:17">value</name> <operator pos:start="13:19" pos:end="13:20">!=</operator> <operator pos:start="13:22" pos:end="13:22">(</operator><name pos:start="13:23" pos:end="13:30">uint32_t</name><operator pos:start="13:31" pos:end="13:31">)</operator><name pos:start="13:32" pos:end="13:36">value</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:24"><block_content pos:start="15:13" pos:end="15:24">

            <expr_stmt pos:start="15:13" pos:end="15:24"><expr pos:start="15:13" pos:end="15:23"><call pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:21">tcg_abort</name><argument_list pos:start="15:22" pos:end="15:23">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><operator pos:start="17:9" pos:end="17:9">*</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:18">uint32_t</name> <operator pos:start="17:20" pos:end="17:20">*</operator><operator pos:start="17:21" pos:end="17:21">)</operator><name pos:start="17:22" pos:end="17:29">code_ptr</name> <operator pos:start="17:31" pos:end="17:31">=</operator> <name pos:start="17:33" pos:end="17:37">value</name></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:25">case <expr pos:start="21:10" pos:end="21:24"><name pos:start="21:10" pos:end="21:24">R_SPARC_WDISP22</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:13">value</name> <operator pos:start="23:15" pos:end="23:16">-=</operator> <operator pos:start="23:18" pos:end="23:18">(</operator><name pos:start="23:19" pos:end="23:22">long</name><operator pos:start="23:23" pos:end="23:23">)</operator><name pos:start="23:24" pos:end="23:31">code_ptr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:20"><expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:13">value</name> <operator pos:start="25:15" pos:end="25:17">&gt;&gt;=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:24"><if pos:start="27:9" pos:end="29:24">if <condition pos:start="27:12" pos:end="27:34">(<expr pos:start="27:13" pos:end="27:33"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:33"><name pos:start="27:14" pos:end="27:22">check_fit</name><argument_list pos:start="27:23" pos:end="27:33">(<argument pos:start="27:24" pos:end="27:28"><expr pos:start="27:24" pos:end="27:28"><name pos:start="27:24" pos:end="27:28">value</name></expr></argument>, <argument pos:start="27:31" pos:end="27:32"><expr pos:start="27:31" pos:end="27:32"><literal type="number" pos:start="27:31" pos:end="27:32">22</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:24"><block_content pos:start="29:13" pos:end="29:24">

            <expr_stmt pos:start="29:13" pos:end="29:24"><expr pos:start="29:13" pos:end="29:23"><call pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:21">tcg_abort</name><argument_list pos:start="29:22" pos:end="29:23">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:78"><expr pos:start="31:9" pos:end="31:77"><operator pos:start="31:9" pos:end="31:9">*</operator><operator pos:start="31:10" pos:end="31:10">(</operator><name pos:start="31:11" pos:end="31:18">uint32_t</name> <operator pos:start="31:20" pos:end="31:20">*</operator><operator pos:start="31:21" pos:end="31:21">)</operator><name pos:start="31:22" pos:end="31:29">code_ptr</name> <operator pos:start="31:31" pos:end="31:31">=</operator> <operator pos:start="31:33" pos:end="31:33">(</operator><operator pos:start="31:34" pos:end="31:34">(</operator><operator pos:start="31:35" pos:end="31:35">*</operator><operator pos:start="31:36" pos:end="31:36">(</operator><name pos:start="31:37" pos:end="31:44">uint32_t</name> <operator pos:start="31:46" pos:end="31:46">*</operator><operator pos:start="31:47" pos:end="31:47">)</operator><name pos:start="31:48" pos:end="31:55">code_ptr</name><operator pos:start="31:56" pos:end="31:56">)</operator> <operator pos:start="31:58" pos:end="31:58">&amp;</operator> <operator pos:start="31:60" pos:end="31:60">~</operator><literal type="number" pos:start="31:61" pos:end="31:68">0x3fffff</literal><operator pos:start="31:69" pos:end="31:69">)</operator> <operator pos:start="31:71" pos:end="31:71">|</operator> <name pos:start="31:73" pos:end="31:77">value</name></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><call pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:17">tcg_abort</name><argument_list pos:start="37:18" pos:end="37:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
