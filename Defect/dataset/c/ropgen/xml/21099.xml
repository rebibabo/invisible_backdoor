<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21099.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">unassigned_mem_write</name><parameter_list pos:start="1:33" pos:end="3:61">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:53">hwaddr</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:41">uint64_t</name></type> <name pos:start="3:43" pos:end="3:45">val</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:60"><decl pos:start="3:48" pos:end="3:60"><type pos:start="3:48" pos:end="3:60"><name pos:start="3:48" pos:end="3:55">unsigned</name></type> <name pos:start="3:57" pos:end="3:60">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="19:1">{<block_content pos:start="9:5" pos:end="18:0">

<cpp:ifdef pos:start="7:1" pos:end="7:23">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:23">DEBUG_UNASSIGNED</name></cpp:ifdef>

    <expr_stmt pos:start="9:5" pos:end="14:0"><expr pos:start="9:5" pos:end="9:80"><call pos:start="9:5" pos:end="9:80"><name pos:start="9:5" pos:end="9:10">printf</name><argument_list pos:start="9:11" pos:end="9:80">(<argument pos:start="9:12" pos:end="9:68"><expr pos:start="9:12" pos:end="9:68"><literal type="string" pos:start="9:12" pos:end="9:34">"Unassigned mem write "</literal> <name pos:start="9:36" pos:end="9:49">TARGET_FMT_plx</name> <literal type="string" pos:start="9:51" pos:end="9:58">" = 0x%"</literal><name pos:start="9:59" pos:end="9:64">PRIx64</name><literal type="string" pos:start="9:65" pos:end="9:68">"\n"</literal></expr></argument>, <argument pos:start="9:71" pos:end="9:74"><expr pos:start="9:71" pos:end="9:74"><name pos:start="9:71" pos:end="9:74">addr</name></expr></argument>, <argument pos:start="9:77" pos:end="9:79"><expr pos:start="9:77" pos:end="9:79"><name pos:start="9:77" pos:end="9:79">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="11:1" pos:end="11:6">#<cpp:directive pos:start="11:2" pos:end="11:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="13:1" pos:end="13:80">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:80"><call pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:11">defined</name><argument_list pos:start="13:12" pos:end="13:25">(<argument pos:start="13:13" pos:end="13:24"><expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24">TARGET_ALPHA</name></expr></argument>)</argument_list></call> <operator pos:start="13:27" pos:end="13:28">||</operator> <call pos:start="13:30" pos:end="13:50"><name pos:start="13:30" pos:end="13:36">defined</name><argument_list pos:start="13:37" pos:end="13:50">(<argument pos:start="13:38" pos:end="13:49"><expr pos:start="13:38" pos:end="13:49"><name pos:start="13:38" pos:end="13:49">TARGET_SPARC</name></expr></argument>)</argument_list></call> <operator pos:start="13:52" pos:end="13:53">||</operator> <call pos:start="13:55" pos:end="13:80"><name pos:start="13:55" pos:end="13:61">defined</name><argument_list pos:start="13:62" pos:end="13:80">(<argument pos:start="13:63" pos:end="13:79"><expr pos:start="13:63" pos:end="13:79"><name pos:start="13:63" pos:end="13:79">TARGET_MICROBLAZE</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:62"><call pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:25">cpu_unassigned_access</name><argument_list pos:start="15:26" pos:end="15:62">(<argument pos:start="15:27" pos:end="15:40"><expr pos:start="15:27" pos:end="15:40"><name pos:start="15:27" pos:end="15:40">cpu_single_env</name></expr></argument>, <argument pos:start="15:43" pos:end="15:46"><expr pos:start="15:43" pos:end="15:46"><name pos:start="15:43" pos:end="15:46">addr</name></expr></argument>, <argument pos:start="15:49" pos:end="15:49"><expr pos:start="15:49" pos:end="15:49"><literal type="number" pos:start="15:49" pos:end="15:49">1</literal></expr></argument>, <argument pos:start="15:52" pos:end="15:52"><expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr></argument>, <argument pos:start="15:55" pos:end="15:55"><expr pos:start="15:55" pos:end="15:55"><literal type="number" pos:start="15:55" pos:end="15:55">0</literal></expr></argument>, <argument pos:start="15:58" pos:end="15:61"><expr pos:start="15:58" pos:end="15:61"><name pos:start="15:58" pos:end="15:61">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
