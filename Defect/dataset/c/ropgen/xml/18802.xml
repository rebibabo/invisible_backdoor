<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18802.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:31">ff_celp_lp_synthesis_filter</name><parameter_list pos:start="1:32" pos:end="13:44">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:39">int16_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">out</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:60"><decl pos:start="3:33" pos:end="3:60"><type pos:start="3:33" pos:end="3:60"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">int16_t</name><modifier pos:start="3:46" pos:end="3:46">*</modifier></type> <name pos:start="3:48" pos:end="3:60">filter_coeffs</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:49"><decl pos:start="5:33" pos:end="5:49"><type pos:start="5:33" pos:end="5:49"><specifier pos:start="5:33" pos:end="5:37">const</specifier> <name pos:start="5:39" pos:end="5:45">int16_t</name><modifier pos:start="5:46" pos:end="5:46">*</modifier></type> <name pos:start="5:48" pos:end="5:49">in</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:49"><decl pos:start="7:33" pos:end="7:49"><type pos:start="7:33" pos:end="7:49"><name pos:start="7:33" pos:end="7:35">int</name></type> <name pos:start="7:37" pos:end="7:49">buffer_length</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:49"><decl pos:start="9:33" pos:end="9:49"><type pos:start="9:33" pos:end="9:49"><name pos:start="9:33" pos:end="9:35">int</name></type> <name pos:start="9:37" pos:end="9:49">filter_length</name></decl></parameter>,

                                <parameter pos:start="11:33" pos:end="11:52"><decl pos:start="11:33" pos:end="11:52"><type pos:start="11:33" pos:end="11:52"><name pos:start="11:33" pos:end="11:35">int</name></type> <name pos:start="11:37" pos:end="11:52">stop_on_overflow</name></decl></parameter>,

                                <parameter pos:start="13:33" pos:end="13:43"><decl pos:start="13:33" pos:end="13:43"><type pos:start="13:33" pos:end="13:43"><name pos:start="13:33" pos:end="13:35">int</name></type> <name pos:start="13:37" pos:end="13:43">rounder</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="59:1">{<block_content pos:start="17:5" pos:end="57:13">

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>,<decl pos:start="17:11" pos:end="17:11"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:11" pos:end="17:11">n</name></decl>;</decl_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:37">// Avoids a +1 in the inner loop.</comment>

    <expr_stmt pos:start="23:5" pos:end="23:20"><expr pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:17">filter_length</name><operator pos:start="23:18" pos:end="23:19">++</operator></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="53:5">for <control pos:start="27:9" pos:end="27:39">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">n</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:34"><expr pos:start="27:17" pos:end="27:33"><name pos:start="27:17" pos:end="27:17">n</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:33">buffer_length</name></expr>;</condition> <incr pos:start="27:36" pos:end="27:38"><expr pos:start="27:36" pos:end="27:38"><name pos:start="27:36" pos:end="27:36">n</name><operator pos:start="27:37" pos:end="27:38">++</operator></expr></incr>)</control> <block pos:start="27:41" pos:end="53:5">{<block_content pos:start="29:9" pos:end="51:21">

        <decl_stmt pos:start="29:9" pos:end="29:26"><decl pos:start="29:9" pos:end="29:25"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:15">sum</name> <init pos:start="29:17" pos:end="29:25">= <expr pos:start="29:19" pos:end="29:25"><name pos:start="29:19" pos:end="29:25">rounder</name></expr></init></decl>;</decl_stmt>

        <for pos:start="31:9" pos:end="33:49">for <control pos:start="31:13" pos:end="31:43">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">1</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:38"><expr pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:37">filter_length</name></expr>;</condition> <incr pos:start="31:40" pos:end="31:42"><expr pos:start="31:40" pos:end="31:42"><name pos:start="31:40" pos:end="31:40">i</name><operator pos:start="31:41" pos:end="31:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:13" pos:end="33:49"><block_content pos:start="33:13" pos:end="33:49">

            <expr_stmt pos:start="33:13" pos:end="33:49"><expr pos:start="33:13" pos:end="33:48"><name pos:start="33:13" pos:end="33:15">sum</name> <operator pos:start="33:17" pos:end="33:18">-=</operator> <name pos:start="33:20" pos:end="33:37"><name pos:start="33:20" pos:end="33:32">filter_coeffs</name><index pos:start="33:33" pos:end="33:37">[<expr pos:start="33:34" pos:end="33:36"><name pos:start="33:34" pos:end="33:34">i</name><operator pos:start="33:35" pos:end="33:35">-</operator><literal type="number" pos:start="33:36" pos:end="33:36">1</literal></expr>]</index></name> <operator pos:start="33:39" pos:end="33:39">*</operator> <name pos:start="33:41" pos:end="33:48"><name pos:start="33:41" pos:end="33:43">out</name><index pos:start="33:44" pos:end="33:48">[<expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:45">n</name><operator pos:start="33:46" pos:end="33:46">-</operator><name pos:start="33:47" pos:end="33:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="37:9" pos:end="37:34"><expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:11">sum</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">(</operator><name pos:start="37:16" pos:end="37:18">sum</name> <operator pos:start="37:20" pos:end="37:21">&gt;&gt;</operator> <literal type="number" pos:start="37:23" pos:end="37:24">12</literal><operator pos:start="37:25" pos:end="37:25">)</operator> <operator pos:start="37:27" pos:end="37:27">+</operator> <name pos:start="37:29" pos:end="37:33"><name pos:start="37:29" pos:end="37:30">in</name><index pos:start="37:31" pos:end="37:33">[<expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">n</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:15">sum</name> <operator pos:start="41:17" pos:end="41:17">+</operator> <literal type="number" pos:start="41:19" pos:end="41:24">0x8000</literal> <operator pos:start="41:26" pos:end="41:26">&gt;</operator> <literal type="number" pos:start="41:28" pos:end="41:34">0xFFFFU</literal></expr>)</condition> <block pos:start="41:37" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:38">

            <if_stmt pos:start="43:13" pos:end="45:25"><if pos:start="43:13" pos:end="45:25">if <condition pos:start="43:16" pos:end="43:33">(<expr pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:32">stop_on_overflow</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:25"><block_content pos:start="45:17" pos:end="45:25">

                <return pos:start="45:17" pos:end="45:25">return <expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:38"><expr pos:start="47:13" pos:end="47:37"><name pos:start="47:13" pos:end="47:15">sum</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">(</operator><name pos:start="47:20" pos:end="47:22">sum</name> <operator pos:start="47:24" pos:end="47:25">&gt;&gt;</operator> <literal type="number" pos:start="47:27" pos:end="47:28">31</literal><operator pos:start="47:29" pos:end="47:29">)</operator> <operator pos:start="47:31" pos:end="47:31">^</operator> <literal type="number" pos:start="47:33" pos:end="47:37">32767</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:11">out</name><index pos:start="51:12" pos:end="51:14">[<expr pos:start="51:13" pos:end="51:13"><name pos:start="51:13" pos:end="51:13">n</name></expr>]</index></name> <operator pos:start="51:16" pos:end="51:16">=</operator> <name pos:start="51:18" pos:end="51:20">sum</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
