<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26323.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_open_common</name><parameter_list pos:start="1:28" pos:end="3:48">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:66">BlockDriverState</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">file</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:9">QDict</name> <modifier pos:start="3:11" pos:end="3:11">*</modifier></type><name pos:start="3:12" pos:end="3:18">options</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">flags</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:42">BlockDriver</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="187:1">{<block_content pos:start="7:5" pos:end="185:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><call pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:23">(<argument pos:start="13:12" pos:end="13:22"><expr pos:start="13:12" pos:end="13:22"><name pos:start="13:12" pos:end="13:14">drv</name> <operator pos:start="13:16" pos:end="13:17">!=</operator> <name pos:start="13:19" pos:end="13:22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:28">(<argument pos:start="15:12" pos:end="15:27"><expr pos:start="15:12" pos:end="15:27"><name pos:start="15:12" pos:end="15:19"><name pos:start="15:12" pos:end="15:13">bs</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:19">file</name></name> <operator pos:start="15:21" pos:end="15:22">==</operator> <name pos:start="15:24" pos:end="15:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:53">(<argument pos:start="17:12" pos:end="17:52"><expr pos:start="17:12" pos:end="17:52"><name pos:start="17:12" pos:end="17:18">options</name> <operator pos:start="17:20" pos:end="17:21">!=</operator> <name pos:start="17:23" pos:end="17:26">NULL</name> <operator pos:start="17:28" pos:end="17:29">&amp;&amp;</operator> <name pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:32">bs</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:41">options</name></name> <operator pos:start="17:43" pos:end="17:44">!=</operator> <name pos:start="17:46" pos:end="17:52">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><call pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:26">trace_bdrv_open_common</name><argument_list pos:start="21:27" pos:end="21:65">(<argument pos:start="21:28" pos:end="21:29"><expr pos:start="21:28" pos:end="21:29"><name pos:start="21:28" pos:end="21:29">bs</name></expr></argument>, <argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39">filename</name></expr></argument>, <argument pos:start="21:42" pos:end="21:46"><expr pos:start="21:42" pos:end="21:46"><name pos:start="21:42" pos:end="21:46">flags</name></expr></argument>, <argument pos:start="21:49" pos:end="21:64"><expr pos:start="21:49" pos:end="21:64"><name pos:start="21:49" pos:end="21:64"><name pos:start="21:49" pos:end="21:51">drv</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:64">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:56">(<expr pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:26">use_bdrv_whitelist</name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <operator pos:start="25:31" pos:end="25:31">!</operator><call pos:start="25:32" pos:end="25:55"><name pos:start="25:32" pos:end="25:50">bdrv_is_whitelisted</name><argument_list pos:start="25:51" pos:end="25:55">(<argument pos:start="25:52" pos:end="25:54"><expr pos:start="25:52" pos:end="25:54"><name pos:start="25:52" pos:end="25:54">drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:58" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:24">

        <return pos:start="27:9" pos:end="27:24">return <expr pos:start="27:16" pos:end="27:23"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="37:33">/* bdrv_open() with directly using a protocol as drv. This layer is already

     * opened, so assign it to bs (while file becomes a closed BlockDriverState)

     * and return immediately. */</comment>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:44">(<expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:12">file</name> <operator pos:start="39:14" pos:end="39:15">!=</operator> <name pos:start="39:17" pos:end="39:20">NULL</name> <operator pos:start="39:22" pos:end="39:23">&amp;&amp;</operator> <name pos:start="39:25" pos:end="39:43"><name pos:start="39:25" pos:end="39:27">drv</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:43">bdrv_file_open</name></name></expr>)</condition> <block pos:start="39:46" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:17">

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><call pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:17">bdrv_swap</name><argument_list pos:start="41:18" pos:end="41:27">(<argument pos:start="41:19" pos:end="41:22"><expr pos:start="41:19" pos:end="41:22"><name pos:start="41:19" pos:end="41:22">file</name></expr></argument>, <argument pos:start="41:25" pos:end="41:26"><expr pos:start="41:25" pos:end="41:26"><name pos:start="41:25" pos:end="41:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:17">return <expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:27"><expr pos:start="49:5" pos:end="49:26"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:6">bs</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:18">open_flags</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:31"><expr pos:start="51:5" pos:end="51:30"><name pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:6">bs</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:24">buffer_alignment</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:30">512</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><call pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:10">assert</name><argument_list pos:start="55:11" pos:end="55:33">(<argument pos:start="55:12" pos:end="55:32"><expr pos:start="55:12" pos:end="55:32"><name pos:start="55:12" pos:end="55:27"><name pos:start="55:12" pos:end="55:13">bs</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:27">copy_on_read</name></name> <operator pos:start="55:29" pos:end="55:30">==</operator> <literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:36" pos:end="55:79">/* bdrv_new() and bdrv_close() make it so */</comment>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:63">(<expr pos:start="57:9" pos:end="57:62"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:14">flags</name> <operator pos:start="57:16" pos:end="57:16">&amp;</operator> <name pos:start="57:18" pos:end="57:28">BDRV_O_RDWR</name><operator pos:start="57:29" pos:end="57:29">)</operator> <operator pos:start="57:31" pos:end="57:32">&amp;&amp;</operator> <operator pos:start="57:34" pos:end="57:34">(</operator><name pos:start="57:35" pos:end="57:39">flags</name> <operator pos:start="57:41" pos:end="57:41">&amp;</operator> <name pos:start="57:43" pos:end="57:61">BDRV_O_COPY_ON_READ</name><operator pos:start="57:62" pos:end="57:62">)</operator></expr>)</condition> <block pos:start="57:65" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:37">

        <expr_stmt pos:start="59:9" pos:end="59:37"><expr pos:start="59:9" pos:end="59:36"><call pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:32">bdrv_enable_copy_on_read</name><argument_list pos:start="59:33" pos:end="59:36">(<argument pos:start="59:34" pos:end="59:35"><expr pos:start="59:34" pos:end="59:35"><name pos:start="59:34" pos:end="59:35">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:12">file</name> <operator pos:start="65:14" pos:end="65:15">!=</operator> <name pos:start="65:17" pos:end="65:20">NULL</name></expr>)</condition> <block pos:start="65:23" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:34">

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:16">filename</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:33"><name pos:start="67:20" pos:end="67:23">file</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:33">filename</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="69:7" pos:end="73:5">else <block pos:start="69:12" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:58">

        <expr_stmt pos:start="71:9" pos:end="71:58"><expr pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:16">filename</name> <operator pos:start="71:18" pos:end="71:18">=</operator> <call pos:start="71:20" pos:end="71:57"><name pos:start="71:20" pos:end="71:36">qdict_get_try_str</name><argument_list pos:start="71:37" pos:end="71:57">(<argument pos:start="71:38" pos:end="71:44"><expr pos:start="71:38" pos:end="71:44"><name pos:start="71:38" pos:end="71:44">options</name></expr></argument>, <argument pos:start="71:47" pos:end="71:56"><expr pos:start="71:47" pos:end="71:56"><literal type="string" pos:start="71:47" pos:end="71:56">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:25">(<expr pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:16">filename</name> <operator pos:start="77:18" pos:end="77:19">!=</operator> <name pos:start="77:21" pos:end="77:24">NULL</name></expr>)</condition> <block pos:start="77:27" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:62">

        <expr_stmt pos:start="79:9" pos:end="79:62"><expr pos:start="79:9" pos:end="79:61"><call pos:start="79:9" pos:end="79:61"><name pos:start="79:9" pos:end="79:15">pstrcpy</name><argument_list pos:start="79:16" pos:end="79:61">(<argument pos:start="79:17" pos:end="79:28"><expr pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:28"><name pos:start="79:17" pos:end="79:18">bs</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:28">filename</name></name></expr></argument>, <argument pos:start="79:31" pos:end="79:50"><expr pos:start="79:31" pos:end="79:50"><sizeof pos:start="79:31" pos:end="79:50">sizeof<argument_list pos:start="79:37" pos:end="79:50">(<argument pos:start="79:38" pos:end="79:49"><expr pos:start="79:38" pos:end="79:49"><name pos:start="79:38" pos:end="79:49"><name pos:start="79:38" pos:end="79:39">bs</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:49">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:53" pos:end="79:60"><expr pos:start="79:53" pos:end="79:60"><name pos:start="79:53" pos:end="79:60">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="85:5">else <block pos:start="81:12" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:31">

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:10">bs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">filename</name><index pos:start="83:21" pos:end="83:23">[<expr pos:start="83:22" pos:end="83:22"><literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>]</index></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <literal type="char" pos:start="83:27" pos:end="83:30">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:18"><expr pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:11"><name pos:start="89:5" pos:end="89:6">bs</name><operator pos:start="89:7" pos:end="89:8">-&gt;</operator><name pos:start="89:9" pos:end="89:11">drv</name></name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:47"><expr pos:start="91:5" pos:end="91:46"><name pos:start="91:5" pos:end="91:14"><name pos:start="91:5" pos:end="91:6">bs</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:14">opaque</name></name> <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:46"><name pos:start="91:18" pos:end="91:26">g_malloc0</name><argument_list pos:start="91:27" pos:end="91:46">(<argument pos:start="91:28" pos:end="91:45"><expr pos:start="91:28" pos:end="91:45"><name pos:start="91:28" pos:end="91:45"><name pos:start="91:28" pos:end="91:30">drv</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:45">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:57"><expr pos:start="95:5" pos:end="95:56"><name pos:start="95:5" pos:end="95:26"><name pos:start="95:5" pos:end="95:6">bs</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:26">enable_write_cache</name></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <operator pos:start="95:30" pos:end="95:30">!</operator><operator pos:start="95:31" pos:end="95:31">!</operator><operator pos:start="95:32" pos:end="95:32">(</operator><name pos:start="95:33" pos:end="95:37">flags</name> <operator pos:start="95:39" pos:end="95:39">&amp;</operator> <name pos:start="95:41" pos:end="95:55">BDRV_O_CACHE_WB</name><operator pos:start="95:56" pos:end="95:56">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:44"><expr pos:start="97:5" pos:end="97:43"><name pos:start="97:5" pos:end="97:14">open_flags</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:43"><name pos:start="97:18" pos:end="97:32">bdrv_open_flags</name><argument_list pos:start="97:33" pos:end="97:43">(<argument pos:start="97:34" pos:end="97:35"><expr pos:start="97:34" pos:end="97:35"><name pos:start="97:34" pos:end="97:35">bs</name></expr></argument>, <argument pos:start="97:38" pos:end="97:42"><expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:42">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:6">bs</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:17">read_only</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">!</operator><operator pos:start="101:22" pos:end="101:22">(</operator><name pos:start="101:23" pos:end="101:32">open_flags</name> <operator pos:start="101:34" pos:end="101:34">&amp;</operator> <name pos:start="101:36" pos:end="101:46">BDRV_O_RDWR</name><operator pos:start="101:47" pos:end="101:47">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:61">/* Open the image, either directly or using a protocol */</comment>

    <if_stmt pos:start="107:5" pos:end="137:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="107:28">(<expr pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:11">drv</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:27">bdrv_file_open</name></name></expr>)</condition> <block pos:start="107:30" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:59">

        <expr_stmt pos:start="109:9" pos:end="109:29"><expr pos:start="109:9" pos:end="109:28"><call pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:14">assert</name><argument_list pos:start="109:15" pos:end="109:28">(<argument pos:start="109:16" pos:end="109:27"><expr pos:start="109:16" pos:end="109:27"><name pos:start="109:16" pos:end="109:19">file</name> <operator pos:start="109:21" pos:end="109:22">==</operator> <name pos:start="109:24" pos:end="109:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:61"><expr pos:start="111:9" pos:end="111:60"><call pos:start="111:9" pos:end="111:60"><name pos:start="111:9" pos:end="111:14">assert</name><argument_list pos:start="111:15" pos:end="111:60">(<argument pos:start="111:16" pos:end="111:59"><expr pos:start="111:16" pos:end="111:59"><name pos:start="111:16" pos:end="111:39"><name pos:start="111:16" pos:end="111:18">drv</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:39">bdrv_parse_filename</name></name> <operator pos:start="111:41" pos:end="111:42">||</operator> <name pos:start="111:44" pos:end="111:51">filename</name> <operator pos:start="111:53" pos:end="111:54">!=</operator> <name pos:start="111:56" pos:end="111:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:59"><expr pos:start="113:9" pos:end="113:58"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="113:58"><name pos:start="113:15" pos:end="113:33"><name pos:start="113:15" pos:end="113:17">drv</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:33">bdrv_file_open</name></name><argument_list pos:start="113:34" pos:end="113:58">(<argument pos:start="113:35" pos:end="113:36"><expr pos:start="113:35" pos:end="113:36"><name pos:start="113:35" pos:end="113:36">bs</name></expr></argument>, <argument pos:start="113:39" pos:end="113:45"><expr pos:start="113:39" pos:end="113:45"><name pos:start="113:39" pos:end="113:45">options</name></expr></argument>, <argument pos:start="113:48" pos:end="113:57"><expr pos:start="113:48" pos:end="113:57"><name pos:start="113:48" pos:end="113:57">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="115:7" pos:end="137:5">else <block pos:start="115:12" pos:end="137:5">{<block_content pos:start="117:9" pos:end="135:54">

        <if_stmt pos:start="117:9" pos:end="129:9"><if pos:start="117:9" pos:end="129:9">if <condition pos:start="117:12" pos:end="117:25">(<expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:16">file</name> <operator pos:start="117:18" pos:end="117:19">==</operator> <name pos:start="117:21" pos:end="117:24">NULL</name></expr>)</condition> <block pos:start="117:27" pos:end="129:9">{<block_content pos:start="119:13" pos:end="127:31">

            <expr_stmt pos:start="119:13" pos:end="123:44"><expr pos:start="119:13" pos:end="123:43"><call pos:start="119:13" pos:end="123:43"><name pos:start="119:13" pos:end="119:25">qerror_report</name><argument_list pos:start="119:26" pos:end="123:43">(<argument pos:start="119:27" pos:end="119:51"><expr pos:start="119:27" pos:end="119:51"><name pos:start="119:27" pos:end="119:51">ERROR_CLASS_GENERIC_ERROR</name></expr></argument>, <argument pos:start="119:54" pos:end="121:63"><expr pos:start="119:54" pos:end="121:63"><literal type="string" pos:start="119:54" pos:end="119:75">"Can't use '%s' as a "</literal>

                          <literal type="string" pos:start="121:27" pos:end="121:63">"block driver for the protocol level"</literal></expr></argument>,

                          <argument pos:start="123:27" pos:end="123:42"><expr pos:start="123:27" pos:end="123:42"><name pos:start="123:27" pos:end="123:42"><name pos:start="123:27" pos:end="123:29">drv</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:42">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:26"><expr pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <operator pos:start="125:19" pos:end="125:19">-</operator><name pos:start="125:20" pos:end="125:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="127:13" pos:end="127:31">goto <name pos:start="127:18" pos:end="127:30">free_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:29"><expr pos:start="131:9" pos:end="131:28"><call pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:14">assert</name><argument_list pos:start="131:15" pos:end="131:28">(<argument pos:start="131:16" pos:end="131:27"><expr pos:start="131:16" pos:end="131:27"><name pos:start="131:16" pos:end="131:19">file</name> <operator pos:start="131:21" pos:end="131:22">!=</operator> <name pos:start="131:24" pos:end="131:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:10">bs</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:16">file</name></name> <operator pos:start="133:18" pos:end="133:18">=</operator> <name pos:start="133:20" pos:end="133:23">file</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:54"><expr pos:start="135:9" pos:end="135:53"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:53"><name pos:start="135:15" pos:end="135:28"><name pos:start="135:15" pos:end="135:17">drv</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:28">bdrv_open</name></name><argument_list pos:start="135:29" pos:end="135:53">(<argument pos:start="135:30" pos:end="135:31"><expr pos:start="135:30" pos:end="135:31"><name pos:start="135:30" pos:end="135:31">bs</name></expr></argument>, <argument pos:start="135:34" pos:end="135:40"><expr pos:start="135:34" pos:end="135:40"><name pos:start="135:34" pos:end="135:40">options</name></expr></argument>, <argument pos:start="135:43" pos:end="135:52"><expr pos:start="135:43" pos:end="135:52"><name pos:start="135:43" pos:end="135:52">open_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="141:5" pos:end="145:5"><if pos:start="141:5" pos:end="145:5">if <condition pos:start="141:8" pos:end="141:16">(<expr pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">&lt;</operator> <literal type="number" pos:start="141:15" pos:end="141:15">0</literal></expr>)</condition> <block pos:start="141:18" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:27">

        <goto pos:start="143:9" pos:end="143:27">goto <name pos:start="143:14" pos:end="143:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:55"><expr pos:start="149:5" pos:end="149:54"><name pos:start="149:5" pos:end="149:7">ret</name> <operator pos:start="149:9" pos:end="149:9">=</operator> <call pos:start="149:11" pos:end="149:54"><name pos:start="149:11" pos:end="149:31">refresh_total_sectors</name><argument_list pos:start="149:32" pos:end="149:54">(<argument pos:start="149:33" pos:end="149:34"><expr pos:start="149:33" pos:end="149:34"><name pos:start="149:33" pos:end="149:34">bs</name></expr></argument>, <argument pos:start="149:37" pos:end="149:53"><expr pos:start="149:37" pos:end="149:53"><name pos:start="149:37" pos:end="149:53"><name pos:start="149:37" pos:end="149:38">bs</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="160:0"><if pos:start="151:5" pos:end="160:0">if <condition pos:start="151:8" pos:end="151:16">(<expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">&lt;</operator> <literal type="number" pos:start="151:15" pos:end="151:15">0</literal></expr>)</condition> <block pos:start="151:18" pos:end="160:0">{<block_content pos:start="153:9" pos:end="153:27">

        <goto pos:start="153:9" pos:end="153:27">goto <name pos:start="153:14" pos:end="153:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="159:1" pos:end="159:14">#<cpp:directive pos:start="159:2" pos:end="159:7">ifndef</cpp:directive> <name pos:start="159:9" pos:end="159:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="161:5" pos:end="170:0"><if pos:start="161:5" pos:end="170:0">if <condition pos:start="161:8" pos:end="161:25">(<expr pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:10">bs</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:24">is_temporary</name></name></expr>)</condition> <block pos:start="161:27" pos:end="170:0">{<block_content pos:start="163:9" pos:end="165:25">

        <expr_stmt pos:start="163:9" pos:end="163:33"><expr pos:start="163:9" pos:end="163:32"><call pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:14">assert</name><argument_list pos:start="163:15" pos:end="163:32">(<argument pos:start="163:16" pos:end="163:31"><expr pos:start="163:16" pos:end="163:31"><name pos:start="163:16" pos:end="163:23">filename</name> <operator pos:start="163:25" pos:end="163:26">!=</operator> <name pos:start="163:28" pos:end="163:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:25"><expr pos:start="165:9" pos:end="165:24"><call pos:start="165:9" pos:end="165:24"><name pos:start="165:9" pos:end="165:14">unlink</name><argument_list pos:start="165:15" pos:end="165:24">(<argument pos:start="165:16" pos:end="165:23"><expr pos:start="165:16" pos:end="165:23"><name pos:start="165:16" pos:end="165:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="169:1" pos:end="169:6">#<cpp:directive pos:start="169:2" pos:end="169:6">endif</cpp:directive></cpp:endif>

    <return pos:start="171:5" pos:end="171:13">return <expr pos:start="171:12" pos:end="171:12"><literal type="number" pos:start="171:12" pos:end="171:12">0</literal></expr>;</return>



<label pos:start="175:1" pos:end="175:14"><name pos:start="175:1" pos:end="175:13">free_and_fail</name>:</label>

    <expr_stmt pos:start="177:5" pos:end="177:20"><expr pos:start="177:5" pos:end="177:19"><name pos:start="177:5" pos:end="177:12"><name pos:start="177:5" pos:end="177:6">bs</name><operator pos:start="177:7" pos:end="177:8">-&gt;</operator><name pos:start="177:9" pos:end="177:12">file</name></name> <operator pos:start="177:14" pos:end="177:14">=</operator> <name pos:start="177:16" pos:end="177:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:23"><expr pos:start="179:5" pos:end="179:22"><call pos:start="179:5" pos:end="179:22"><name pos:start="179:5" pos:end="179:10">g_free</name><argument_list pos:start="179:11" pos:end="179:22">(<argument pos:start="179:12" pos:end="179:21"><expr pos:start="179:12" pos:end="179:21"><name pos:start="179:12" pos:end="179:21"><name pos:start="179:12" pos:end="179:13">bs</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:22"><expr pos:start="181:5" pos:end="181:21"><name pos:start="181:5" pos:end="181:14"><name pos:start="181:5" pos:end="181:6">bs</name><operator pos:start="181:7" pos:end="181:8">-&gt;</operator><name pos:start="181:9" pos:end="181:14">opaque</name></name> <operator pos:start="181:16" pos:end="181:16">=</operator> <name pos:start="181:18" pos:end="181:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:19"><expr pos:start="183:5" pos:end="183:18"><name pos:start="183:5" pos:end="183:11"><name pos:start="183:5" pos:end="183:6">bs</name><operator pos:start="183:7" pos:end="183:8">-&gt;</operator><name pos:start="183:9" pos:end="183:11">drv</name></name> <operator pos:start="183:13" pos:end="183:13">=</operator> <name pos:start="183:15" pos:end="183:18">NULL</name></expr>;</expr_stmt>

    <return pos:start="185:5" pos:end="185:15">return <expr pos:start="185:12" pos:end="185:14"><name pos:start="185:12" pos:end="185:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
