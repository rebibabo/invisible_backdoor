<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14937.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">qemu_laio_process_completion</name><parameter_list pos:start="1:41" pos:end="1:68">(<parameter pos:start="1:42" pos:end="1:67"><decl pos:start="1:42" pos:end="1:67"><type pos:start="1:42" pos:end="1:67"><name pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:47">struct</name> <name pos:start="1:49" pos:end="1:59">qemu_laiocb</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:67">laiocb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <name pos:start="9:11" pos:end="9:21"><name pos:start="9:11" pos:end="9:16">laiocb</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:21">ret</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="35:5"><if pos:start="11:5" pos:end="35:5">if <condition pos:start="11:8" pos:end="11:26">(<expr pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:11">ret</name> <operator pos:start="11:13" pos:end="11:14">!=</operator> <operator pos:start="11:16" pos:end="11:16">-</operator><name pos:start="11:17" pos:end="11:25">ECANCELED</name></expr>)</condition> <block pos:start="11:28" pos:end="35:5">{<block_content pos:start="13:9" pos:end="33:9">

        <if_stmt pos:start="13:9" pos:end="33:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:34">(<expr pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:15">ret</name> <operator pos:start="13:17" pos:end="13:18">==</operator> <name pos:start="13:20" pos:end="13:33"><name pos:start="13:20" pos:end="13:25">laiocb</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">nbytes</name></name></expr>)</condition> <block pos:start="13:36" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:20">

            <expr_stmt pos:start="15:13" pos:end="15:20"><expr pos:start="15:13" pos:end="15:19"><name pos:start="15:13" pos:end="15:15">ret</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="17:11" pos:end="33:9">else if <condition pos:start="17:19" pos:end="17:28">(<expr pos:start="17:20" pos:end="17:27"><name pos:start="17:20" pos:end="17:22">ret</name> <operator pos:start="17:24" pos:end="17:25">&gt;=</operator> <literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>)</condition> <block pos:start="17:30" pos:end="33:9">{<block_content pos:start="21:13" pos:end="31:13">

            <comment type="block" pos:start="19:13" pos:end="19:55">/* Short reads mean EOF, pad with zeros. */</comment>

            <if_stmt pos:start="21:13" pos:end="31:13"><if pos:start="21:13" pos:end="27:13">if <condition pos:start="21:16" pos:end="21:32">(<expr pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:31"><name pos:start="21:17" pos:end="21:22">laiocb</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:31">is_read</name></name></expr>)</condition> <block pos:start="21:34" pos:end="27:13">{<block_content pos:start="23:17" pos:end="25:46">

                <expr_stmt pos:start="23:17" pos:end="25:46"><expr pos:start="23:17" pos:end="25:45"><call pos:start="23:17" pos:end="25:45"><name pos:start="23:17" pos:end="23:33">qemu_iovec_memset</name><argument_list pos:start="23:34" pos:end="25:45">(<argument pos:start="23:35" pos:end="23:46"><expr pos:start="23:35" pos:end="23:46"><name pos:start="23:35" pos:end="23:46"><name pos:start="23:35" pos:end="23:40">laiocb</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:46">qiov</name></name></expr></argument>, <argument pos:start="23:49" pos:end="23:51"><expr pos:start="23:49" pos:end="23:51"><name pos:start="23:49" pos:end="23:51">ret</name></expr></argument>, <argument pos:start="23:54" pos:end="23:54"><expr pos:start="23:54" pos:end="23:54"><literal type="number" pos:start="23:54" pos:end="23:54">0</literal></expr></argument>,

                    <argument pos:start="25:21" pos:end="25:44"><expr pos:start="25:21" pos:end="25:44"><name pos:start="25:21" pos:end="25:38"><name pos:start="25:21" pos:end="25:26">laiocb</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:32">qiov</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:38">size</name></name> <operator pos:start="25:40" pos:end="25:40">-</operator> <name pos:start="25:42" pos:end="25:44">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="27:15" pos:end="31:13">else <block pos:start="27:20" pos:end="31:13">{<block_content pos:start="29:17" pos:end="29:30">

                <expr_stmt pos:start="29:17" pos:end="29:30"><expr pos:start="29:17" pos:end="29:29"><name pos:start="29:17" pos:end="29:19">ret</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">-</operator><name pos:start="29:24" pos:end="29:29">ENOSPC</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:10">laiocb</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:15">ret</name></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:21">ret</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:14">laiocb</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:18">co</name></name></expr>)</condition> <block pos:start="41:21" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:41">

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:28">qemu_coroutine_enter</name><argument_list pos:start="43:29" pos:end="43:40">(<argument pos:start="43:30" pos:end="43:39"><expr pos:start="43:30" pos:end="43:39"><name pos:start="43:30" pos:end="43:39"><name pos:start="43:30" pos:end="43:35">laiocb</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:39">co</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="51:5">else <block pos:start="45:12" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:31">

        <expr_stmt pos:start="47:9" pos:end="47:54"><expr pos:start="47:9" pos:end="47:53"><call pos:start="47:9" pos:end="47:53"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:14">laiocb</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:22">common</name><operator pos:start="47:23" pos:end="47:23">.</operator><name pos:start="47:24" pos:end="47:25">cb</name></name><argument_list pos:start="47:26" pos:end="47:53">(<argument pos:start="47:27" pos:end="47:47"><expr pos:start="47:27" pos:end="47:47"><name pos:start="47:27" pos:end="47:47"><name pos:start="47:27" pos:end="47:32">laiocb</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:40">common</name><operator pos:start="47:41" pos:end="47:41">.</operator><name pos:start="47:42" pos:end="47:47">opaque</name></name></expr></argument>, <argument pos:start="47:50" pos:end="47:52"><expr pos:start="47:50" pos:end="47:52"><name pos:start="47:50" pos:end="47:52">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:22">qemu_aio_unref</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">laiocb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
