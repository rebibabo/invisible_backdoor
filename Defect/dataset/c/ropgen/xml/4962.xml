<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4962.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">xtensa_breakpoint_handler</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">CPUState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">cs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">XtensaCPU</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">cpu</name> <init pos:start="5:20" pos:end="5:35">= <expr pos:start="5:22" pos:end="5:35"><call pos:start="5:22" pos:end="5:35"><name pos:start="5:22" pos:end="5:31">XTENSA_CPU</name><argument_list pos:start="5:32" pos:end="5:35">(<argument pos:start="5:33" pos:end="5:34"><expr pos:start="5:33" pos:end="5:34"><name pos:start="5:33" pos:end="5:34">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">CPUXtensaState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">env</name> <init pos:start="7:25" pos:end="7:35">= <expr pos:start="7:27" pos:end="7:35"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:35"><name pos:start="7:28" pos:end="7:30">cpu</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:35">env</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="33:5"><if pos:start="11:5" pos:end="33:5">if <condition pos:start="11:8" pos:end="11:27">(<expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:10">cs</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:26">watchpoint_hit</name></name></expr>)</condition> <block pos:start="11:29" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <if_stmt pos:start="13:9" pos:end="31:9"><if pos:start="13:9" pos:end="31:9">if <condition pos:start="13:12" pos:end="13:47">(<expr pos:start="13:13" pos:end="13:46"><name pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:14">cs</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:30">watchpoint_hit</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:37">flags</name></name> <operator pos:start="13:39" pos:end="13:39">&amp;</operator> <name pos:start="13:41" pos:end="13:46">BP_CPU</name></expr>)</condition> <block pos:start="13:49" pos:end="31:9">{<block_content pos:start="15:13" pos:end="29:45">

            <decl_stmt pos:start="15:13" pos:end="15:27"><decl pos:start="15:13" pos:end="15:26"><type pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:20">uint32_t</name></type> <name pos:start="15:22" pos:end="15:26">cause</name></decl>;</decl_stmt>



            <expr_stmt pos:start="19:13" pos:end="19:38"><expr pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:14">cs</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:30">watchpoint_hit</name></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <name pos:start="19:34" pos:end="19:37">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:46"><expr pos:start="21:13" pos:end="21:45"><name pos:start="21:13" pos:end="21:17">cause</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <call pos:start="21:21" pos:end="21:45"><name pos:start="21:21" pos:end="21:40">check_hw_breakpoints</name><argument_list pos:start="21:41" pos:end="21:45">(<argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:22">(<expr pos:start="23:17" pos:end="23:21"><name pos:start="23:17" pos:end="23:21">cause</name></expr>)</condition> <block pos:start="23:24" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:48">

                <expr_stmt pos:start="25:17" pos:end="25:48"><expr pos:start="25:17" pos:end="25:47"><call pos:start="25:17" pos:end="25:47"><name pos:start="25:17" pos:end="25:35">debug_exception_env</name><argument_list pos:start="25:36" pos:end="25:47">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">env</name></expr></argument>, <argument pos:start="25:42" pos:end="25:46"><expr pos:start="25:42" pos:end="25:46"><name pos:start="25:42" pos:end="25:46">cause</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><call pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:34">cpu_resume_from_signal</name><argument_list pos:start="29:35" pos:end="29:44">(<argument pos:start="29:36" pos:end="29:37"><expr pos:start="29:36" pos:end="29:37"><name pos:start="29:36" pos:end="29:37">cs</name></expr></argument>, <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
