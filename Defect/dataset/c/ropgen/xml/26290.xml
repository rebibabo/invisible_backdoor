<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26290.c" pos:tabs="8"><function pos:start="1:1" pos:end="190:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">megasas_scsi_init</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:38">PCIDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="190:1">{<block_content pos:start="5:5" pos:end="188:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">d</name> <init pos:start="5:20" pos:end="5:32">= <expr pos:start="5:22" pos:end="5:32"><call pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:27">DEVICE</name><argument_list pos:start="5:28" pos:end="5:32">(<argument pos:start="5:29" pos:end="5:31"><expr pos:start="5:29" pos:end="5:31"><name pos:start="5:29" pos:end="5:31">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">MegasasState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><call pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:29">MEGASAS</name><argument_list pos:start="7:30" pos:end="7:34">(<argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><name pos:start="7:31" pos:end="7:33">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MegasasBaseClass</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">b</name> <init pos:start="9:25" pos:end="9:53">= <expr pos:start="9:27" pos:end="9:53"><call pos:start="9:27" pos:end="9:53"><name pos:start="9:27" pos:end="9:50">MEGASAS_DEVICE_GET_CLASS</name><argument_list pos:start="9:51" pos:end="9:53">(<argument pos:start="9:52" pos:end="9:52"><expr pos:start="9:52" pos:end="9:52"><name pos:start="9:52" pos:end="9:52">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:21">pci_conf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:19">bar_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:12">pci_conf</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:18">dev</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:26">config</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:31">/* PCI latency timer = 0 */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:12">pci_conf</name><index pos:start="25:13" pos:end="25:31">[<expr pos:start="25:14" pos:end="25:30"><name pos:start="25:14" pos:end="25:30">PCI_LATENCY_TIMER</name></expr>]</index></name> <operator pos:start="25:33" pos:end="25:33">=</operator> <literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:25">/* Interrupt pin 1 */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:12">pci_conf</name><index pos:start="29:13" pos:end="29:31">[<expr pos:start="29:14" pos:end="29:30"><name pos:start="29:14" pos:end="29:30">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="29:33" pos:end="29:33">=</operator> <literal type="number" pos:start="29:35" pos:end="29:38">0x01</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:50"><expr pos:start="33:5" pos:end="35:49"><call pos:start="33:5" pos:end="35:49"><name pos:start="33:5" pos:end="33:25">memory_region_init_io</name><argument_list pos:start="33:26" pos:end="35:49">(<argument pos:start="33:27" pos:end="33:37"><expr pos:start="33:27" pos:end="33:37"><operator pos:start="33:27" pos:end="33:27">&amp;</operator><name pos:start="33:28" pos:end="33:37"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:37">mmio_io</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:48"><expr pos:start="33:40" pos:end="33:48"><call pos:start="33:40" pos:end="33:48"><name pos:start="33:40" pos:end="33:45">OBJECT</name><argument_list pos:start="33:46" pos:end="33:48">(<argument pos:start="33:47" pos:end="33:47"><expr pos:start="33:47" pos:end="33:47"><name pos:start="33:47" pos:end="33:47">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:51" pos:end="33:67"><expr pos:start="33:51" pos:end="33:67"><operator pos:start="33:51" pos:end="33:51">&amp;</operator><name pos:start="33:52" pos:end="33:67">megasas_mmio_ops</name></expr></argument>, <argument pos:start="33:70" pos:end="33:70"><expr pos:start="33:70" pos:end="33:70"><name pos:start="33:70" pos:end="33:70">s</name></expr></argument>,

                          <argument pos:start="35:27" pos:end="35:40"><expr pos:start="35:27" pos:end="35:40"><literal type="string" pos:start="35:27" pos:end="35:40">"megasas-mmio"</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:48"><expr pos:start="35:43" pos:end="35:48"><literal type="number" pos:start="35:43" pos:end="35:48">0x4000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:45"><expr pos:start="37:5" pos:end="39:44"><call pos:start="37:5" pos:end="39:44"><name pos:start="37:5" pos:end="37:25">memory_region_init_io</name><argument_list pos:start="37:26" pos:end="39:44">(<argument pos:start="37:27" pos:end="37:37"><expr pos:start="37:27" pos:end="37:37"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:37"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:37">port_io</name></name></expr></argument>, <argument pos:start="37:40" pos:end="37:48"><expr pos:start="37:40" pos:end="37:48"><call pos:start="37:40" pos:end="37:48"><name pos:start="37:40" pos:end="37:45">OBJECT</name><argument_list pos:start="37:46" pos:end="37:48">(<argument pos:start="37:47" pos:end="37:47"><expr pos:start="37:47" pos:end="37:47"><name pos:start="37:47" pos:end="37:47">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:51" pos:end="37:67"><expr pos:start="37:51" pos:end="37:67"><operator pos:start="37:51" pos:end="37:51">&amp;</operator><name pos:start="37:52" pos:end="37:67">megasas_port_ops</name></expr></argument>, <argument pos:start="37:70" pos:end="37:70"><expr pos:start="37:70" pos:end="37:70"><name pos:start="37:70" pos:end="37:70">s</name></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><literal type="string" pos:start="39:27" pos:end="39:38">"megasas-io"</literal></expr></argument>, <argument pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><literal type="number" pos:start="39:41" pos:end="39:43">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:52"><expr pos:start="41:5" pos:end="43:51"><call pos:start="41:5" pos:end="43:51"><name pos:start="41:5" pos:end="41:25">memory_region_init_io</name><argument_list pos:start="41:26" pos:end="43:51">(<argument pos:start="41:27" pos:end="41:38"><expr pos:start="41:27" pos:end="41:38"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:38"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:38">queue_io</name></name></expr></argument>, <argument pos:start="41:41" pos:end="41:49"><expr pos:start="41:41" pos:end="41:49"><call pos:start="41:41" pos:end="41:49"><name pos:start="41:41" pos:end="41:46">OBJECT</name><argument_list pos:start="41:47" pos:end="41:49">(<argument pos:start="41:48" pos:end="41:48"><expr pos:start="41:48" pos:end="41:48"><name pos:start="41:48" pos:end="41:48">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:52" pos:end="41:69"><expr pos:start="41:52" pos:end="41:69"><operator pos:start="41:52" pos:end="41:52">&amp;</operator><name pos:start="41:53" pos:end="41:69">megasas_queue_ops</name></expr></argument>, <argument pos:start="41:72" pos:end="41:72"><expr pos:start="41:72" pos:end="41:72"><name pos:start="41:72" pos:end="41:72">s</name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:41"><expr pos:start="43:27" pos:end="43:41"><literal type="string" pos:start="43:27" pos:end="43:41">"megasas-queue"</literal></expr></argument>, <argument pos:start="43:44" pos:end="43:50"><expr pos:start="43:44" pos:end="43:50"><literal type="number" pos:start="43:44" pos:end="43:50">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="49:44">(<expr pos:start="47:9" pos:end="49:43"><call pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:23">megasas_use_msi</name><argument_list pos:start="47:24" pos:end="47:26">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="47:28" pos:end="47:29">&amp;&amp;</operator>

        <call pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:16">msi_init</name><argument_list pos:start="49:17" pos:end="49:43">(<argument pos:start="49:18" pos:end="49:20"><expr pos:start="49:18" pos:end="49:20"><name pos:start="49:18" pos:end="49:20">dev</name></expr></argument>, <argument pos:start="49:23" pos:end="49:26"><expr pos:start="49:23" pos:end="49:26"><literal type="number" pos:start="49:23" pos:end="49:26">0x50</literal></expr></argument>, <argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr></argument>, <argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><name pos:start="49:32" pos:end="49:35">true</name></expr></argument>, <argument pos:start="49:38" pos:end="49:42"><expr pos:start="49:38" pos:end="49:42"><name pos:start="49:38" pos:end="49:42">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:46" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:42">

        <expr_stmt pos:start="51:9" pos:end="51:42"><expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">flags</name></name> <operator pos:start="51:18" pos:end="51:19">&amp;=</operator> <operator pos:start="51:21" pos:end="51:21">~</operator><name pos:start="51:22" pos:end="51:41">MEGASAS_MASK_USE_MSI</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="59:58">(<expr pos:start="55:9" pos:end="59:57"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:24">megasas_use_msix</name><argument_list pos:start="55:25" pos:end="55:27">(<argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><name pos:start="55:26" pos:end="55:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="55:29" pos:end="55:30">&amp;&amp;</operator>

        <call pos:start="57:9" pos:end="59:57"><name pos:start="57:9" pos:end="57:17">msix_init</name><argument_list pos:start="57:18" pos:end="59:57">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><name pos:start="57:19" pos:end="57:21">dev</name></expr></argument>, <argument pos:start="57:24" pos:end="57:25"><expr pos:start="57:24" pos:end="57:25"><literal type="number" pos:start="57:24" pos:end="57:25">15</literal></expr></argument>, <argument pos:start="57:28" pos:end="57:38"><expr pos:start="57:28" pos:end="57:38"><operator pos:start="57:28" pos:end="57:28">&amp;</operator><name pos:start="57:29" pos:end="57:38"><name pos:start="57:29" pos:end="57:29">s</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:38">mmio_io</name></name></expr></argument>, <argument pos:start="57:41" pos:end="57:51"><expr pos:start="57:41" pos:end="57:51"><name pos:start="57:41" pos:end="57:51"><name pos:start="57:41" pos:end="57:41">b</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:51">mmio_bar</name></name></expr></argument>, <argument pos:start="57:54" pos:end="57:59"><expr pos:start="57:54" pos:end="57:59"><literal type="number" pos:start="57:54" pos:end="57:59">0x2000</literal></expr></argument>,

                  <argument pos:start="59:19" pos:end="59:29"><expr pos:start="59:19" pos:end="59:29"><operator pos:start="59:19" pos:end="59:19">&amp;</operator><name pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:29">mmio_io</name></name></expr></argument>, <argument pos:start="59:32" pos:end="59:42"><expr pos:start="59:32" pos:end="59:42"><name pos:start="59:32" pos:end="59:42"><name pos:start="59:32" pos:end="59:32">b</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:42">mmio_bar</name></name></expr></argument>, <argument pos:start="59:45" pos:end="59:50"><expr pos:start="59:45" pos:end="59:50"><literal type="number" pos:start="59:45" pos:end="59:50">0x3800</literal></expr></argument>, <argument pos:start="59:53" pos:end="59:56"><expr pos:start="59:53" pos:end="59:56"><literal type="number" pos:start="59:53" pos:end="59:56">0x68</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:60" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:43">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:16">flags</name></name> <operator pos:start="61:18" pos:end="61:19">&amp;=</operator> <operator pos:start="61:21" pos:end="61:21">~</operator><name pos:start="61:22" pos:end="61:42">MEGASAS_MASK_USE_MSIX</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:28">(<expr pos:start="65:9" pos:end="65:27"><call pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:22">pci_is_express</name><argument_list pos:start="65:23" pos:end="65:27">(<argument pos:start="65:24" pos:end="65:26"><expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="65:30" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:42">

        <expr_stmt pos:start="67:9" pos:end="67:42"><expr pos:start="67:9" pos:end="67:41"><call pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:30">pcie_endpoint_cap_init</name><argument_list pos:start="67:31" pos:end="67:41">(<argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">dev</name></expr></argument>, <argument pos:start="67:37" pos:end="67:40"><expr pos:start="67:37" pos:end="67:40"><literal type="number" pos:start="67:37" pos:end="67:40">0xa0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:76"><expr pos:start="73:5" pos:end="73:75"><name pos:start="73:5" pos:end="73:12">bar_type</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:44">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="73:46" pos:end="73:46">|</operator> <name pos:start="73:48" pos:end="73:75">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:61"><expr pos:start="75:5" pos:end="77:60"><call pos:start="75:5" pos:end="77:60"><name pos:start="75:5" pos:end="75:20">pci_register_bar</name><argument_list pos:start="75:21" pos:end="77:60">(<argument pos:start="75:22" pos:end="75:24"><expr pos:start="75:22" pos:end="75:24"><name pos:start="75:22" pos:end="75:24">dev</name></expr></argument>, <argument pos:start="75:27" pos:end="75:39"><expr pos:start="75:27" pos:end="75:39"><name pos:start="75:27" pos:end="75:39"><name pos:start="75:27" pos:end="75:27">b</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:39">ioport_bar</name></name></expr></argument>,

                     <argument pos:start="77:22" pos:end="77:46"><expr pos:start="77:22" pos:end="77:46"><name pos:start="77:22" pos:end="77:46">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="77:49" pos:end="77:59"><expr pos:start="77:49" pos:end="77:59"><operator pos:start="77:49" pos:end="77:49">&amp;</operator><name pos:start="77:50" pos:end="77:59"><name pos:start="77:50" pos:end="77:50">s</name><operator pos:start="77:51" pos:end="77:52">-&gt;</operator><name pos:start="77:53" pos:end="77:59">port_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:62"><expr pos:start="79:5" pos:end="79:61"><call pos:start="79:5" pos:end="79:61"><name pos:start="79:5" pos:end="79:20">pci_register_bar</name><argument_list pos:start="79:21" pos:end="79:61">(<argument pos:start="79:22" pos:end="79:24"><expr pos:start="79:22" pos:end="79:24"><name pos:start="79:22" pos:end="79:24">dev</name></expr></argument>, <argument pos:start="79:27" pos:end="79:37"><expr pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:27">b</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:37">mmio_bar</name></name></expr></argument>, <argument pos:start="79:40" pos:end="79:47"><expr pos:start="79:40" pos:end="79:47"><name pos:start="79:40" pos:end="79:47">bar_type</name></expr></argument>, <argument pos:start="79:50" pos:end="79:60"><expr pos:start="79:50" pos:end="79:60"><operator pos:start="79:50" pos:end="79:50">&amp;</operator><name pos:start="79:51" pos:end="79:60"><name pos:start="79:51" pos:end="79:51">s</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:60">mmio_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><call pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:20">pci_register_bar</name><argument_list pos:start="81:21" pos:end="81:52">(<argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">dev</name></expr></argument>, <argument pos:start="81:27" pos:end="81:27"><expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">3</literal></expr></argument>, <argument pos:start="81:30" pos:end="81:37"><expr pos:start="81:30" pos:end="81:37"><name pos:start="81:30" pos:end="81:37">bar_type</name></expr></argument>, <argument pos:start="81:40" pos:end="81:51"><expr pos:start="81:40" pos:end="81:51"><operator pos:start="81:40" pos:end="81:40">&amp;</operator><name pos:start="81:41" pos:end="81:51"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:51">queue_io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:28">(<expr pos:start="85:9" pos:end="85:27"><call pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:24">megasas_use_msix</name><argument_list pos:start="85:25" pos:end="85:27">(<argument pos:start="85:26" pos:end="85:26"><expr pos:start="85:26" pos:end="85:26"><name pos:start="85:26" pos:end="85:26">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:30" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:32">

        <expr_stmt pos:start="87:9" pos:end="87:32"><expr pos:start="87:9" pos:end="87:31"><call pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:23">msix_vector_use</name><argument_list pos:start="87:24" pos:end="87:31">(<argument pos:start="87:25" pos:end="87:27"><expr pos:start="87:25" pos:end="87:27"><name pos:start="87:25" pos:end="87:27">dev</name></expr></argument>, <argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><literal type="number" pos:start="87:30" pos:end="87:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:36"><expr pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:15">fw_state</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:35">MFI_FWSTATE_READY</name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="107:5"><if pos:start="95:5" pos:end="107:5">if <condition pos:start="95:8" pos:end="95:21">(<expr pos:start="95:9" pos:end="95:20"><operator pos:start="95:9" pos:end="95:9">!</operator><name pos:start="95:10" pos:end="95:20"><name pos:start="95:10" pos:end="95:10">s</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:20">sas_addr</name></name></expr>)</condition> <block pos:start="95:23" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:44">

        <expr_stmt pos:start="97:9" pos:end="99:60"><expr pos:start="97:9" pos:end="99:59"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:19">sas_addr</name></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <operator pos:start="97:23" pos:end="97:23">(</operator><operator pos:start="97:24" pos:end="97:24">(</operator><name pos:start="97:25" pos:end="97:47">NAA_LOCALLY_ASSIGNED_ID</name> <operator pos:start="97:49" pos:end="97:50">&lt;&lt;</operator> <literal type="number" pos:start="97:52" pos:end="97:53">24</literal><operator pos:start="97:54" pos:end="97:54">)</operator> <operator pos:start="97:56" pos:end="97:56">|</operator>

                       <name pos:start="99:24" pos:end="99:52">IEEE_COMPANY_LOCALLY_ASSIGNED</name><operator pos:start="99:53" pos:end="99:53">)</operator> <operator pos:start="99:55" pos:end="99:56">&lt;&lt;</operator> <literal type="number" pos:start="99:58" pos:end="99:59">36</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:53"><expr pos:start="101:9" pos:end="101:52"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:19">sas_addr</name></name> <operator pos:start="101:21" pos:end="101:22">|=</operator> <operator pos:start="101:24" pos:end="101:24">(</operator><call pos:start="101:25" pos:end="101:45"><name pos:start="101:25" pos:end="101:35">pci_bus_num</name><argument_list pos:start="101:36" pos:end="101:45">(<argument pos:start="101:37" pos:end="101:44"><expr pos:start="101:37" pos:end="101:44"><name pos:start="101:37" pos:end="101:44"><name pos:start="101:37" pos:end="101:39">dev</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:44">bus</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:47" pos:end="101:48">&lt;&lt;</operator> <literal type="number" pos:start="101:50" pos:end="101:51">16</literal><operator pos:start="101:52" pos:end="101:52">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:51"><expr pos:start="103:9" pos:end="103:50"><name pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:19">sas_addr</name></name> <operator pos:start="103:21" pos:end="103:22">|=</operator> <operator pos:start="103:24" pos:end="103:24">(</operator><call pos:start="103:25" pos:end="103:44"><name pos:start="103:25" pos:end="103:32">PCI_SLOT</name><argument_list pos:start="103:33" pos:end="103:44">(<argument pos:start="103:34" pos:end="103:43"><expr pos:start="103:34" pos:end="103:43"><name pos:start="103:34" pos:end="103:43"><name pos:start="103:34" pos:end="103:36">dev</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:43">devfn</name></name></expr></argument>)</argument_list></call> <operator pos:start="103:46" pos:end="103:47">&lt;&lt;</operator> <literal type="number" pos:start="103:49" pos:end="103:49">8</literal><operator pos:start="103:50" pos:end="103:50">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:44"><expr pos:start="105:9" pos:end="105:43"><name pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:19">sas_addr</name></name> <operator pos:start="105:21" pos:end="105:22">|=</operator> <call pos:start="105:24" pos:end="105:43"><name pos:start="105:24" pos:end="105:31">PCI_FUNC</name><argument_list pos:start="105:32" pos:end="105:43">(<argument pos:start="105:33" pos:end="105:42"><expr pos:start="105:33" pos:end="105:42"><name pos:start="105:33" pos:end="105:42"><name pos:start="105:33" pos:end="105:35">dev</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:42">devfn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:23">(<expr pos:start="109:9" pos:end="109:22"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:22"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:22">hba_serial</name></name></expr>)</condition> <block pos:start="109:25" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:53">

        <expr_stmt pos:start="111:9" pos:end="111:53"><expr pos:start="111:9" pos:end="111:52"><name pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:21">hba_serial</name></name> <operator pos:start="111:23" pos:end="111:23">=</operator> <call pos:start="111:25" pos:end="111:52"><name pos:start="111:25" pos:end="111:32">g_strdup</name><argument_list pos:start="111:33" pos:end="111:52">(<argument pos:start="111:34" pos:end="111:51"><expr pos:start="111:34" pos:end="111:51"><name pos:start="111:34" pos:end="111:51">MEGASAS_HBA_SERIAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="127:5"><if pos:start="115:5" pos:end="119:5">if <condition pos:start="115:8" pos:end="115:59">(<expr pos:start="115:9" pos:end="115:58"><name pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:17">fw_sge</name></name> <operator pos:start="115:19" pos:end="115:20">&gt;=</operator> <name pos:start="115:22" pos:end="115:36">MEGASAS_MAX_SGE</name> <operator pos:start="115:38" pos:end="115:38">-</operator> <name pos:start="115:40" pos:end="115:58">MFI_PASS_FRAME_SIZE</name></expr>)</condition> <block pos:start="115:61" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:58">

        <expr_stmt pos:start="117:9" pos:end="117:58"><expr pos:start="117:9" pos:end="117:57"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:17">fw_sge</name></name> <operator pos:start="117:19" pos:end="117:19">=</operator> <name pos:start="117:21" pos:end="117:35">MEGASAS_MAX_SGE</name> <operator pos:start="117:37" pos:end="117:37">-</operator> <name pos:start="117:39" pos:end="117:57">MFI_PASS_FRAME_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="119:7" pos:end="123:5">else if <condition pos:start="119:15" pos:end="119:54">(<expr pos:start="119:16" pos:end="119:53"><name pos:start="119:16" pos:end="119:24"><name pos:start="119:16" pos:end="119:16">s</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:24">fw_sge</name></name> <operator pos:start="119:26" pos:end="119:27">&gt;=</operator> <literal type="number" pos:start="119:29" pos:end="119:33">128</literal> <operator pos:start="119:33" pos:end="119:33">-</operator> <name pos:start="119:35" pos:end="119:53">MFI_PASS_FRAME_SIZE</name></expr>)</condition> <block pos:start="119:56" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:46">

        <expr_stmt pos:start="121:9" pos:end="121:46"><expr pos:start="121:9" pos:end="121:45"><name pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:17">fw_sge</name></name> <operator pos:start="121:19" pos:end="121:19">=</operator> <literal type="number" pos:start="121:21" pos:end="121:25">128</literal> <operator pos:start="121:25" pos:end="121:25">-</operator> <name pos:start="121:27" pos:end="121:45">MFI_PASS_FRAME_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="123:7" pos:end="127:5">else <block pos:start="123:12" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:45">

        <expr_stmt pos:start="125:9" pos:end="125:45"><expr pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:17">fw_sge</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <literal type="number" pos:start="125:21" pos:end="125:24">64</literal> <operator pos:start="125:24" pos:end="125:24">-</operator> <name pos:start="125:26" pos:end="125:44">MFI_PASS_FRAME_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="129:5" pos:end="133:5"><if pos:start="129:5" pos:end="133:5">if <condition pos:start="129:8" pos:end="129:40">(<expr pos:start="129:9" pos:end="129:39"><name pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:18">fw_cmds</name></name> <operator pos:start="129:20" pos:end="129:20">&gt;</operator> <name pos:start="129:22" pos:end="129:39">MEGASAS_MAX_FRAMES</name></expr>)</condition> <block pos:start="129:42" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:40">

        <expr_stmt pos:start="131:9" pos:end="131:40"><expr pos:start="131:9" pos:end="131:39"><name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:18">fw_cmds</name></name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:39">MEGASAS_MAX_FRAMES</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="137:61"><expr pos:start="135:5" pos:end="137:60"><call pos:start="135:5" pos:end="137:60"><name pos:start="135:5" pos:end="135:22">trace_megasas_init</name><argument_list pos:start="135:23" pos:end="137:60">(<argument pos:start="135:24" pos:end="135:32"><expr pos:start="135:24" pos:end="135:32"><name pos:start="135:24" pos:end="135:32"><name pos:start="135:24" pos:end="135:24">s</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:32">fw_sge</name></name></expr></argument>, <argument pos:start="135:35" pos:end="135:44"><expr pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:35">s</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:44">fw_cmds</name></name></expr></argument>,

                       <argument pos:start="137:24" pos:end="137:59"><expr pos:start="137:24" pos:end="137:59"><ternary pos:start="137:24" pos:end="137:59"><condition pos:start="137:24" pos:end="137:43"><expr pos:start="137:24" pos:end="137:41"><call pos:start="137:24" pos:end="137:41"><name pos:start="137:24" pos:end="137:38">megasas_is_jbod</name><argument_list pos:start="137:39" pos:end="137:41">(<argument pos:start="137:40" pos:end="137:40"><expr pos:start="137:40" pos:end="137:40"><name pos:start="137:40" pos:end="137:40">s</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="137:45" pos:end="137:50"> <expr pos:start="137:45" pos:end="137:50"><literal type="string" pos:start="137:45" pos:end="137:50">"jbod"</literal></expr> </then><else pos:start="137:52" pos:end="137:59">: <expr pos:start="137:54" pos:end="137:59"><literal type="string" pos:start="137:54" pos:end="137:59">"raid"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="149:5"><if pos:start="141:5" pos:end="145:5">if <condition pos:start="141:8" pos:end="141:27">(<expr pos:start="141:9" pos:end="141:26"><call pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:23">megasas_is_jbod</name><argument_list pos:start="141:24" pos:end="141:26">(<argument pos:start="141:25" pos:end="141:25"><expr pos:start="141:25" pos:end="141:25"><name pos:start="141:25" pos:end="141:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:29" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:37">

        <expr_stmt pos:start="143:9" pos:end="143:37"><expr pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:18">fw_luns</name></name> <operator pos:start="143:20" pos:end="143:20">=</operator> <name pos:start="143:22" pos:end="143:36">MFI_MAX_SYS_PDS</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="149:5">else <block pos:start="145:12" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:32">

        <expr_stmt pos:start="147:9" pos:end="147:32"><expr pos:start="147:9" pos:end="147:31"><name pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:18">fw_luns</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <name pos:start="147:22" pos:end="147:31">MFI_MAX_LD</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:23"><expr pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:18"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:18">producer_pa</name></name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:23"><expr pos:start="153:5" pos:end="153:22"><name pos:start="153:5" pos:end="153:18"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:18">consumer_pa</name></name> <operator pos:start="153:20" pos:end="153:20">=</operator> <literal type="number" pos:start="153:22" pos:end="153:22">0</literal></expr>;</expr_stmt>

    <for pos:start="155:5" pos:end="165:5">for <control pos:start="155:9" pos:end="155:36">(<init pos:start="155:10" pos:end="155:15"><expr pos:start="155:10" pos:end="155:14"><name pos:start="155:10" pos:end="155:10">i</name> <operator pos:start="155:12" pos:end="155:12">=</operator> <literal type="number" pos:start="155:14" pos:end="155:14">0</literal></expr>;</init> <condition pos:start="155:17" pos:end="155:31"><expr pos:start="155:17" pos:end="155:30"><name pos:start="155:17" pos:end="155:17">i</name> <operator pos:start="155:19" pos:end="155:19">&lt;</operator> <name pos:start="155:21" pos:end="155:30"><name pos:start="155:21" pos:end="155:21">s</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:30">fw_cmds</name></name></expr>;</condition> <incr pos:start="155:33" pos:end="155:35"><expr pos:start="155:33" pos:end="155:35"><name pos:start="155:33" pos:end="155:33">i</name><operator pos:start="155:34" pos:end="155:35">++</operator></expr></incr>)</control> <block pos:start="155:38" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:31">

        <expr_stmt pos:start="157:9" pos:end="157:31"><expr pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:17">frames</name><index pos:start="157:18" pos:end="157:20">[<expr pos:start="157:19" pos:end="157:19"><name pos:start="157:19" pos:end="157:19">i</name></expr>]</index></name><operator pos:start="157:21" pos:end="157:21">.</operator><name pos:start="157:22" pos:end="157:26">index</name> <operator pos:start="157:28" pos:end="157:28">=</operator> <name pos:start="157:30" pos:end="157:30">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:34"><expr pos:start="159:9" pos:end="159:33"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:17">frames</name><index pos:start="159:18" pos:end="159:20">[<expr pos:start="159:19" pos:end="159:19"><name pos:start="159:19" pos:end="159:19">i</name></expr>]</index></name><operator pos:start="159:21" pos:end="159:21">.</operator><name pos:start="159:22" pos:end="159:28">context</name> <operator pos:start="159:30" pos:end="159:30">=</operator> <operator pos:start="159:32" pos:end="159:32">-</operator><literal type="number" pos:start="159:33" pos:end="159:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:28"><expr pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:17">frames</name><index pos:start="161:18" pos:end="161:20">[<expr pos:start="161:19" pos:end="161:19"><name pos:start="161:19" pos:end="161:19">i</name></expr>]</index></name><operator pos:start="161:21" pos:end="161:21">.</operator><name pos:start="161:22" pos:end="161:23">pa</name> <operator pos:start="161:25" pos:end="161:25">=</operator> <literal type="number" pos:start="161:27" pos:end="161:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:20"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:17">frames</name><index pos:start="163:18" pos:end="163:20">[<expr pos:start="163:19" pos:end="163:19"><name pos:start="163:19" pos:end="163:19">i</name></expr>]</index></name><operator pos:start="163:21" pos:end="163:21">.</operator><name pos:start="163:22" pos:end="163:26">state</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <name pos:start="163:30" pos:end="163:30">s</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="169:5" pos:end="171:43"><expr pos:start="169:5" pos:end="171:42"><call pos:start="169:5" pos:end="171:42"><name pos:start="169:5" pos:end="169:16">scsi_bus_new</name><argument_list pos:start="169:17" pos:end="171:42">(<argument pos:start="169:18" pos:end="169:24"><expr pos:start="169:18" pos:end="169:24"><operator pos:start="169:18" pos:end="169:18">&amp;</operator><name pos:start="169:19" pos:end="169:24"><name pos:start="169:19" pos:end="169:19">s</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:24">bus</name></name></expr></argument>, <argument pos:start="169:27" pos:end="169:40"><expr pos:start="169:27" pos:end="169:40"><sizeof pos:start="169:27" pos:end="169:40">sizeof<argument_list pos:start="169:33" pos:end="169:40">(<argument pos:start="169:34" pos:end="169:39"><expr pos:start="169:34" pos:end="169:39"><name pos:start="169:34" pos:end="169:39"><name pos:start="169:34" pos:end="169:34">s</name><operator pos:start="169:35" pos:end="169:36">-&gt;</operator><name pos:start="169:37" pos:end="169:39">bus</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="169:43" pos:end="169:53"><expr pos:start="169:43" pos:end="169:53"><call pos:start="169:43" pos:end="169:53"><name pos:start="169:43" pos:end="169:48">DEVICE</name><argument_list pos:start="169:49" pos:end="169:53">(<argument pos:start="169:50" pos:end="169:52"><expr pos:start="169:50" pos:end="169:52"><name pos:start="169:50" pos:end="169:52">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="171:18" pos:end="171:35"><expr pos:start="171:18" pos:end="171:35"><operator pos:start="171:18" pos:end="171:18">&amp;</operator><name pos:start="171:19" pos:end="171:35">megasas_scsi_info</name></expr></argument>, <argument pos:start="171:38" pos:end="171:41"><expr pos:start="171:38" pos:end="171:41"><name pos:start="171:38" pos:end="171:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="173:5" pos:end="186:5"><if pos:start="173:5" pos:end="186:5">if <condition pos:start="173:8" pos:end="173:23">(<expr pos:start="173:9" pos:end="173:22"><operator pos:start="173:9" pos:end="173:9">!</operator><name pos:start="173:10" pos:end="173:22"><name pos:start="173:10" pos:end="173:10">d</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:22">hotplugged</name></name></expr>)</condition> <block pos:start="173:25" pos:end="186:5">{<block_content pos:start="175:9" pos:end="184:9">

        <expr_stmt pos:start="175:9" pos:end="175:54"><expr pos:start="175:9" pos:end="175:53"><call pos:start="175:9" pos:end="175:53"><name pos:start="175:9" pos:end="175:38">scsi_bus_legacy_handle_cmdline</name><argument_list pos:start="175:39" pos:end="175:53">(<argument pos:start="175:40" pos:end="175:46"><expr pos:start="175:40" pos:end="175:46"><operator pos:start="175:40" pos:end="175:40">&amp;</operator><name pos:start="175:41" pos:end="175:46"><name pos:start="175:41" pos:end="175:41">s</name><operator pos:start="175:42" pos:end="175:43">-&gt;</operator><name pos:start="175:44" pos:end="175:46">bus</name></name></expr></argument>, <argument pos:start="175:49" pos:end="175:52"><expr pos:start="175:49" pos:end="175:52"><operator pos:start="175:49" pos:end="175:49">&amp;</operator><name pos:start="175:50" pos:end="175:52">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="184:9"><if pos:start="177:9" pos:end="184:9">if <condition pos:start="177:12" pos:end="177:24">(<expr pos:start="177:13" pos:end="177:23"><name pos:start="177:13" pos:end="177:15">err</name> <operator pos:start="177:17" pos:end="177:18">!=</operator> <name pos:start="177:20" pos:end="177:23">NULL</name></expr>)</condition> <block pos:start="177:26" pos:end="184:9">{<block_content pos:start="180:13" pos:end="182:22">


            <expr_stmt pos:start="180:13" pos:end="180:28"><expr pos:start="180:13" pos:end="180:27"><call pos:start="180:13" pos:end="180:27"><name pos:start="180:13" pos:end="180:22">error_free</name><argument_list pos:start="180:23" pos:end="180:27">(<argument pos:start="180:24" pos:end="180:26"><expr pos:start="180:24" pos:end="180:26"><name pos:start="180:24" pos:end="180:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="182:13" pos:end="182:22">return <expr pos:start="182:20" pos:end="182:21"><operator pos:start="182:20" pos:end="182:20">-</operator><literal type="number" pos:start="182:21" pos:end="182:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="188:5" pos:end="188:13">return <expr pos:start="188:12" pos:end="188:12"><literal type="number" pos:start="188:12" pos:end="188:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
