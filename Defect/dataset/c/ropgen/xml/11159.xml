<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11159.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">rsd_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:15">

    <decl_stmt pos:start="5:5" pos:end="5:49"><decl pos:start="5:5" pos:end="5:48"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">codec</name> <init pos:start="5:27" pos:end="5:48">= <expr pos:start="5:29" pos:end="5:48"><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:38">streams</name><index pos:start="5:39" pos:end="5:41">[<expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">0</literal></expr>]</index></name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:48">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:17">size</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><literal type="number" pos:start="7:21" pos:end="7:24">1024</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:27"><if pos:start="11:5" pos:end="13:27">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><call pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:17">avio_feof</name><argument_list pos:start="11:18" pos:end="11:24">(<argument pos:start="11:19" pos:end="11:23"><expr pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:23">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:27"><block_content pos:start="13:9" pos:end="13:27">

        <return pos:start="13:9" pos:end="13:27">return <expr pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="51:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="19:53">(<expr pos:start="17:9" pos:end="19:52"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:13">codec</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:23">codec_id</name></name> <operator pos:start="17:25" pos:end="17:26">==</operator> <name pos:start="17:28" pos:end="17:52">AV_CODEC_ID_ADPCM_IMA_RAD</name> <operator pos:start="17:54" pos:end="17:55">||</operator>

        <name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:13">codec</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:23">codec_id</name></name> <operator pos:start="19:25" pos:end="19:26">==</operator> <name pos:start="19:28" pos:end="19:52">AV_CODEC_ID_ADPCM_IMA_WAV</name></expr>)</condition> <block pos:start="19:55" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:60">

        <expr_stmt pos:start="21:9" pos:end="21:60"><expr pos:start="21:9" pos:end="21:59"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:59"><name pos:start="21:15" pos:end="21:27">av_get_packet</name><argument_list pos:start="21:28" pos:end="21:59">(<argument pos:start="21:29" pos:end="21:33"><expr pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:33"><name pos:start="21:29" pos:end="21:29">s</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:33">pb</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">pkt</name></expr></argument>, <argument pos:start="21:41" pos:end="21:58"><expr pos:start="21:41" pos:end="21:58"><name pos:start="21:41" pos:end="21:58"><name pos:start="21:41" pos:end="21:45">codec</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:58">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="47:5">else if <condition pos:start="23:15" pos:end="25:35">(<expr pos:start="23:16" pos:end="25:34"><name pos:start="23:16" pos:end="23:31"><name pos:start="23:16" pos:end="23:20">codec</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:31">codec_tag</name></name> <operator pos:start="23:33" pos:end="23:34">==</operator> <call pos:start="23:36" pos:end="23:57"><name pos:start="23:36" pos:end="23:40">MKTAG</name><argument_list pos:start="23:41" pos:end="23:57">(<argument pos:start="23:42" pos:end="23:44"><expr pos:start="23:42" pos:end="23:44"><literal type="char" pos:start="23:42" pos:end="23:44">'W'</literal></expr></argument>,<argument pos:start="23:46" pos:end="23:48"><expr pos:start="23:46" pos:end="23:48"><literal type="char" pos:start="23:46" pos:end="23:48">'A'</literal></expr></argument>,<argument pos:start="23:50" pos:end="23:52"><expr pos:start="23:50" pos:end="23:52"><literal type="char" pos:start="23:50" pos:end="23:52">'D'</literal></expr></argument>,<argument pos:start="23:54" pos:end="23:56"><expr pos:start="23:54" pos:end="23:56"><literal type="char" pos:start="23:54" pos:end="23:56">'P'</literal></expr></argument>)</argument_list></call> <operator pos:start="23:59" pos:end="23:60">&amp;&amp;</operator>

               <name pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:20">codec</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:30">channels</name></name> <operator pos:start="25:32" pos:end="25:32">&gt;</operator> <literal type="number" pos:start="25:34" pos:end="25:34">1</literal></expr>)</condition> <block pos:start="25:37" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:16">

        <decl_stmt pos:start="27:9" pos:end="27:18"><decl pos:start="27:9" pos:end="27:13"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">i</name></decl>, <decl pos:start="27:16" pos:end="27:17"><type ref="prev" pos:start="27:9" pos:end="27:11"/><name pos:start="27:16" pos:end="27:17">ch</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><call pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:21">av_new_packet</name><argument_list pos:start="31:22" pos:end="31:46">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">pkt</name></expr></argument>, <argument pos:start="31:28" pos:end="31:45"><expr pos:start="31:28" pos:end="31:45"><name pos:start="31:28" pos:end="31:45"><name pos:start="31:28" pos:end="31:32">codec</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:45">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="43:9">for <control pos:start="33:13" pos:end="33:31">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">i</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:25">4</literal></expr>;</condition> <incr pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:28">i</name><operator pos:start="33:29" pos:end="33:30">++</operator></expr></incr>)</control> <block pos:start="33:33" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:13">

            <for pos:start="35:13" pos:end="41:13">for <control pos:start="35:17" pos:end="35:52">(<init pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:23"><name pos:start="35:18" pos:end="35:19">ch</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <literal type="number" pos:start="35:23" pos:end="35:23">0</literal></expr>;</init> <condition pos:start="35:26" pos:end="35:46"><expr pos:start="35:26" pos:end="35:45"><name pos:start="35:26" pos:end="35:27">ch</name> <operator pos:start="35:29" pos:end="35:29">&lt;</operator> <name pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:35">codec</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:45">channels</name></name></expr>;</condition> <incr pos:start="35:48" pos:end="35:51"><expr pos:start="35:48" pos:end="35:51"><name pos:start="35:48" pos:end="35:49">ch</name><operator pos:start="35:50" pos:end="35:51">++</operator></expr></incr>)</control> <block pos:start="35:54" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:63">

                <expr_stmt pos:start="37:17" pos:end="37:63"><expr pos:start="37:17" pos:end="37:62"><name pos:start="37:17" pos:end="37:45"><name pos:start="37:17" pos:end="37:19">pkt</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:25">data</name><index pos:start="37:26" pos:end="37:45">[<expr pos:start="37:27" pos:end="37:44"><name pos:start="37:27" pos:end="37:28">ch</name> <operator pos:start="37:30" pos:end="37:30">*</operator> <literal type="number" pos:start="37:32" pos:end="37:34">8</literal> <operator pos:start="37:34" pos:end="37:34">+</operator> <name pos:start="37:36" pos:end="37:36">i</name> <operator pos:start="37:38" pos:end="37:38">*</operator> <literal type="number" pos:start="37:40" pos:end="37:42">2</literal> <operator pos:start="37:42" pos:end="37:42">+</operator> <literal type="number" pos:start="37:44" pos:end="37:44">0</literal></expr>]</index></name> <operator pos:start="37:47" pos:end="37:47">=</operator> <call pos:start="37:49" pos:end="37:62"><name pos:start="37:49" pos:end="37:55">avio_r8</name><argument_list pos:start="37:56" pos:end="37:62">(<argument pos:start="37:57" pos:end="37:61"><expr pos:start="37:57" pos:end="37:61"><name pos:start="37:57" pos:end="37:61"><name pos:start="37:57" pos:end="37:57">s</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:61">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:63"><expr pos:start="39:17" pos:end="39:62"><name pos:start="39:17" pos:end="39:45"><name pos:start="39:17" pos:end="39:19">pkt</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">data</name><index pos:start="39:26" pos:end="39:45">[<expr pos:start="39:27" pos:end="39:44"><name pos:start="39:27" pos:end="39:28">ch</name> <operator pos:start="39:30" pos:end="39:30">*</operator> <literal type="number" pos:start="39:32" pos:end="39:34">8</literal> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:36">i</name> <operator pos:start="39:38" pos:end="39:38">*</operator> <literal type="number" pos:start="39:40" pos:end="39:42">2</literal> <operator pos:start="39:42" pos:end="39:42">+</operator> <literal type="number" pos:start="39:44" pos:end="39:44">1</literal></expr>]</index></name> <operator pos:start="39:47" pos:end="39:47">=</operator> <call pos:start="39:49" pos:end="39:62"><name pos:start="39:49" pos:end="39:55">avio_r8</name><argument_list pos:start="39:56" pos:end="39:62">(<argument pos:start="39:57" pos:end="39:61"><expr pos:start="39:57" pos:end="39:61"><name pos:start="39:57" pos:end="39:61"><name pos:start="39:57" pos:end="39:57">s</name><operator pos:start="39:58" pos:end="39:59">-&gt;</operator><name pos:start="39:60" pos:end="39:61">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="45:9" pos:end="45:16"><expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="51:5">else <block pos:start="47:12" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:46">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:45"><name pos:start="49:15" pos:end="49:27">av_get_packet</name><argument_list pos:start="49:28" pos:end="49:45">(<argument pos:start="49:29" pos:end="49:33"><expr pos:start="49:29" pos:end="49:33"><name pos:start="49:29" pos:end="49:33"><name pos:start="49:29" pos:end="49:29">s</name><operator pos:start="49:30" pos:end="49:31">-&gt;</operator><name pos:start="49:32" pos:end="49:33">pb</name></name></expr></argument>, <argument pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:38">pkt</name></expr></argument>, <argument pos:start="49:41" pos:end="49:44"><expr pos:start="49:41" pos:end="49:44"><name pos:start="49:41" pos:end="49:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:7">pkt</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:21">stream_index</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:15">return <expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
