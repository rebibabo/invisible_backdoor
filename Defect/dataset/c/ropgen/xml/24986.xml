<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24986.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">tcp_write</name><parameter_list pos:start="1:21" pos:end="1:59">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">URLContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">h</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">buf</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:24">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TCPContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:18">size1</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">fd_max</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">fd_set</name></type> <name pos:start="9:12" pos:end="9:15">wfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">timeval</name></name></type> <name pos:start="11:20" pos:end="11:21">tv</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:9">size1</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:16">size</name></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="69:5">while <condition pos:start="17:11" pos:end="17:20">(<expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:15">size</name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="69:5">{<block_content pos:start="19:9" pos:end="67:19">

        <if_stmt pos:start="19:9" pos:end="21:26"><if pos:start="19:9" pos:end="21:26">if <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><call pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:28">url_interrupt_cb</name><argument_list pos:start="19:29" pos:end="19:30">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:26"><block_content pos:start="21:13" pos:end="21:26">

            <return pos:start="21:13" pos:end="21:26">return <expr pos:start="21:20" pos:end="21:25"><operator pos:start="21:20" pos:end="21:20">-</operator><name pos:start="21:21" pos:end="21:25">EINTR</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:14">fd_max</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:22">fd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:15">FD_ZERO</name><argument_list pos:start="25:16" pos:end="25:22">(<argument pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:21"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:21">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:14">FD_SET</name><argument_list pos:start="27:15" pos:end="27:28">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:20">fd</name></name></expr></argument>, <argument pos:start="27:23" pos:end="27:27"><expr pos:start="27:23" pos:end="27:27"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:27">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:10">tv</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:17">tv_sec</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:10">tv</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:18">tv_usec</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:24">100</literal> <operator pos:start="31:26" pos:end="31:26">*</operator> <literal type="number" pos:start="31:28" pos:end="31:31">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:50"><call pos:start="33:9" pos:end="33:50"><name pos:start="33:9" pos:end="33:14">select</name><argument_list pos:start="33:15" pos:end="33:50">(<argument pos:start="33:16" pos:end="33:25"><expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:21">fd_max</name> <operator pos:start="33:23" pos:end="33:23">+</operator> <literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr></argument>, <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">NULL</name></expr></argument>, <argument pos:start="33:34" pos:end="33:38"><expr pos:start="33:34" pos:end="33:38"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:38">wfds</name></expr></argument>, <argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">NULL</name></expr></argument>, <argument pos:start="33:47" pos:end="33:49"><expr pos:start="33:47" pos:end="33:49"><operator pos:start="33:47" pos:end="33:47">&amp;</operator><name pos:start="33:48" pos:end="33:49">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="35:1" pos:end="35:15">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:15">__BEOS__</name></cpp:ifdef>

        <expr_stmt pos:start="37:9" pos:end="40:0"><expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:11">ret</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:39"><name pos:start="37:15" pos:end="37:18">send</name><argument_list pos:start="37:19" pos:end="37:39">(<argument pos:start="37:20" pos:end="37:24"><expr pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:24"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:24">fd</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">buf</name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">size</name></expr></argument>, <argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><literal type="number" pos:start="37:38" pos:end="37:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="39:1" pos:end="39:5">#<cpp:directive pos:start="39:2" pos:end="39:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="41:9" pos:end="44:0"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:37"><name pos:start="41:15" pos:end="41:19">write</name><argument_list pos:start="41:20" pos:end="41:37">(<argument pos:start="41:21" pos:end="41:25"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:25">fd</name></name></expr></argument>, <argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">buf</name></expr></argument>, <argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><name pos:start="41:33" pos:end="41:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="45:9" pos:end="63:9"><if pos:start="45:9" pos:end="63:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="63:9">{<block_content pos:start="47:13" pos:end="61:21">

            <if_stmt pos:start="47:13" pos:end="59:13"><if pos:start="47:13" pos:end="59:13">if <condition pos:start="47:16" pos:end="47:50">(<expr pos:start="47:17" pos:end="47:49"><name pos:start="47:17" pos:end="47:21">errno</name> <operator pos:start="47:23" pos:end="47:24">!=</operator> <name pos:start="47:26" pos:end="47:30">EINTR</name> <operator pos:start="47:32" pos:end="47:33">&amp;&amp;</operator> <name pos:start="47:35" pos:end="47:39">errno</name> <operator pos:start="47:41" pos:end="47:42">!=</operator> <name pos:start="47:44" pos:end="47:49">EAGAIN</name></expr>)</condition> <block pos:start="47:52" pos:end="59:13">{<block_content pos:start="51:17" pos:end="58:0">

<cpp:ifdef pos:start="49:1" pos:end="49:15">#<cpp:directive pos:start="49:2" pos:end="49:6">ifdef</cpp:directive> <name pos:start="49:8" pos:end="49:15">__BEOS__</name></cpp:ifdef>

                <return pos:start="51:17" pos:end="54:0">return <expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28">errno</name></expr>;</return>

<cpp:else pos:start="53:1" pos:end="53:5">#<cpp:directive pos:start="53:2" pos:end="53:5">else</cpp:directive></cpp:else>

                <return pos:start="55:17" pos:end="58:0">return <expr pos:start="55:24" pos:end="55:29"><operator pos:start="55:24" pos:end="55:24">-</operator><name pos:start="55:25" pos:end="55:29">errno</name></expr>;</return>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if></if_stmt>

            <continue pos:start="61:13" pos:end="61:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:20"><expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:15">-=</operator> <name pos:start="65:17" pos:end="65:19">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:19"><expr pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">buf</name> <operator pos:start="67:13" pos:end="67:14">+=</operator> <name pos:start="67:16" pos:end="67:18">ret</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="71:5" pos:end="71:24">return <expr pos:start="71:12" pos:end="71:23"><name pos:start="71:12" pos:end="71:16">size1</name> <operator pos:start="71:18" pos:end="71:18">-</operator> <name pos:start="71:20" pos:end="71:23">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
