<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14150.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">rpl_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">RPLContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">rpl</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:12">AVStream</name><modifier pos:start="9:13" pos:end="9:13">*</modifier></type> <name pos:start="9:15" pos:end="9:20">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:16">AVIndexEntry</name><modifier pos:start="11:17" pos:end="11:17">*</modifier></type> <name pos:start="11:19" pos:end="11:29">index_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:41">(<expr pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:11">rpl</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:23">chunk_part</name></name> <operator pos:start="17:25" pos:end="17:26">==</operator> <name pos:start="17:28" pos:end="17:40"><name pos:start="17:28" pos:end="17:28">s</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:40">nb_streams</name></name></expr>)</condition> <block pos:start="17:43" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:28">

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">rpl</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:25">chunk_number</name></name><operator pos:start="19:26" pos:end="19:27">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">rpl</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:23">chunk_part</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:10">stream</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:40"><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">streams</name><index pos:start="27:24" pos:end="27:40">[<expr pos:start="27:25" pos:end="27:39"><name pos:start="27:25" pos:end="27:39"><name pos:start="27:25" pos:end="27:27">rpl</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:39">chunk_part</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:27"><if pos:start="31:5" pos:end="33:27">if <condition pos:start="31:8" pos:end="31:54">(<expr pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">rpl</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:25">chunk_number</name></name> <operator pos:start="31:27" pos:end="31:28">&gt;=</operator> <name pos:start="31:30" pos:end="31:53"><name pos:start="31:30" pos:end="31:35">stream</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:53">nb_index_entries</name></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:27"><block_content pos:start="33:9" pos:end="33:27">

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:60"><expr pos:start="37:5" pos:end="37:59"><name pos:start="37:5" pos:end="37:15">index_entry</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">&amp;</operator><name pos:start="37:20" pos:end="37:59"><name pos:start="37:20" pos:end="37:25">stream</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:40">index_entries</name><index pos:start="37:41" pos:end="37:59">[<expr pos:start="37:42" pos:end="37:58"><name pos:start="37:42" pos:end="37:58"><name pos:start="37:42" pos:end="37:44">rpl</name><operator pos:start="37:45" pos:end="37:46">-&gt;</operator><name pos:start="37:47" pos:end="37:58">chunk_number</name></name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:32"><if pos:start="41:5" pos:end="45:32">if <condition pos:start="41:8" pos:end="41:32">(<expr pos:start="41:9" pos:end="41:31"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:11">rpl</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:26">frame_in_part</name></name> <operator pos:start="41:28" pos:end="41:29">==</operator> <literal type="number" pos:start="41:31" pos:end="41:31">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="45:32"><block_content pos:start="43:9" pos:end="45:32">

        <if_stmt pos:start="43:9" pos:end="45:32"><if pos:start="43:9" pos:end="45:32">if <condition pos:start="43:12" pos:end="43:58">(<expr pos:start="43:13" pos:end="43:57"><call pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:21">avio_seek</name><argument_list pos:start="43:22" pos:end="43:53">(<argument pos:start="43:23" pos:end="43:24"><expr pos:start="43:23" pos:end="43:24"><name pos:start="43:23" pos:end="43:24">pb</name></expr></argument>, <argument pos:start="43:27" pos:end="43:42"><expr pos:start="43:27" pos:end="43:42"><name pos:start="43:27" pos:end="43:42"><name pos:start="43:27" pos:end="43:37">index_entry</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:42">pos</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:52"><expr pos:start="43:45" pos:end="43:52"><name pos:start="43:45" pos:end="43:52">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="43:55" pos:end="43:55">&lt;</operator> <literal type="number" pos:start="43:57" pos:end="43:57">0</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:32"><block_content pos:start="45:13" pos:end="45:32">

            <return pos:start="45:13" pos:end="45:32">return <expr pos:start="45:20" pos:end="45:31"><call pos:start="45:20" pos:end="45:31"><name pos:start="45:20" pos:end="45:26">AVERROR</name><argument_list pos:start="45:27" pos:end="45:31">(<argument pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="137:5"><if pos:start="49:5" pos:end="99:5">if <condition pos:start="49:8" pos:end="51:40">(<expr pos:start="49:9" pos:end="51:39"><name pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:14">stream</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">codec</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:33">codec_type</name></name> <operator pos:start="49:35" pos:end="49:36">==</operator> <name pos:start="49:38" pos:end="49:55">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="49:57" pos:end="49:58">&amp;&amp;</operator>

        <name pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:14">stream</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:21">codec</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:32">codec_tag</name></name> <operator pos:start="51:34" pos:end="51:35">==</operator> <literal type="number" pos:start="51:37" pos:end="51:39">124</literal></expr>)</condition> <block pos:start="51:42" pos:end="99:5">{<block_content pos:start="57:9" pos:end="97:9">

        <comment type="line" pos:start="53:9" pos:end="53:63">// We have to split Escape 124 frames because there are</comment>

        <comment type="line" pos:start="55:9" pos:end="55:59">// multiple frames per chunk in Escape 124 samples.</comment>

        <decl_stmt pos:start="57:9" pos:end="57:28"><decl pos:start="57:9" pos:end="57:27"><type pos:start="57:9" pos:end="57:16"><name pos:start="57:9" pos:end="57:16">uint32_t</name></type> <name pos:start="57:18" pos:end="57:27">frame_size</name></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><call pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:17">avio_skip</name><argument_list pos:start="61:18" pos:end="61:24">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">pb</name></expr></argument>, <argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:27" pos:end="61:37">/* flags */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:18">frame_size</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:34"><name pos:start="63:22" pos:end="63:30">avio_rl32</name><argument_list pos:start="63:31" pos:end="63:34">(<argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:32"><if pos:start="65:9" pos:end="67:32">if <condition pos:start="65:12" pos:end="65:44">(<expr pos:start="65:13" pos:end="65:43"><call pos:start="65:13" pos:end="65:39"><name pos:start="65:13" pos:end="65:21">avio_seek</name><argument_list pos:start="65:22" pos:end="65:39">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">pb</name></expr></argument>, <argument pos:start="65:27" pos:end="65:28"><expr pos:start="65:27" pos:end="65:28"><operator pos:start="65:27" pos:end="65:27">-</operator><literal type="number" pos:start="65:28" pos:end="65:28">8</literal></expr></argument>, <argument pos:start="65:31" pos:end="65:38"><expr pos:start="65:31" pos:end="65:38"><name pos:start="65:31" pos:end="65:38">SEEK_CUR</name></expr></argument>)</argument_list></call> <operator pos:start="65:41" pos:end="65:41">&lt;</operator> <literal type="number" pos:start="65:43" pos:end="65:43">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:32"><block_content pos:start="67:13" pos:end="67:32">

            <return pos:start="67:13" pos:end="67:32">return <expr pos:start="67:20" pos:end="67:31"><call pos:start="67:20" pos:end="67:31"><name pos:start="67:20" pos:end="67:26">AVERROR</name><argument_list pos:start="67:27" pos:end="67:31">(<argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:49"><expr pos:start="71:9" pos:end="71:48"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <call pos:start="71:15" pos:end="71:48"><name pos:start="71:15" pos:end="71:27">av_get_packet</name><argument_list pos:start="71:28" pos:end="71:48">(<argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">pb</name></expr></argument>, <argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:35">pkt</name></expr></argument>, <argument pos:start="71:38" pos:end="71:47"><expr pos:start="71:38" pos:end="71:47"><name pos:start="71:38" pos:end="71:47">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:30">(<expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:18">!=</operator> <name pos:start="73:20" pos:end="73:29">frame_size</name></expr>)</condition> <block pos:start="73:32" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:32">

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:26">av_free_packet</name><argument_list pos:start="75:27" pos:end="75:31">(<argument pos:start="75:28" pos:end="75:30"><expr pos:start="75:28" pos:end="75:30"><name pos:start="75:28" pos:end="75:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:32">return <expr pos:start="77:20" pos:end="77:31"><call pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:26">AVERROR</name><argument_list pos:start="77:27" pos:end="77:31">(<argument pos:start="77:28" pos:end="77:30"><expr pos:start="77:28" pos:end="77:30"><name pos:start="77:28" pos:end="77:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:11">pkt</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:21">duration</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="number" pos:start="81:25" pos:end="81:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:63"><expr pos:start="83:9" pos:end="83:62"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:11">pkt</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:16">pts</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:41"><name pos:start="83:20" pos:end="83:30">index_entry</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:41">timestamp</name></name> <operator pos:start="83:43" pos:end="83:43">+</operator> <name pos:start="83:45" pos:end="83:62"><name pos:start="83:45" pos:end="83:47">rpl</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:62">frame_in_part</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:11">pkt</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:25">stream_index</name></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:43"><name pos:start="85:29" pos:end="85:31">rpl</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:43">chunk_part</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:11">rpl</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:26">frame_in_part</name></name><operator pos:start="89:27" pos:end="89:28">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:56">(<expr pos:start="91:13" pos:end="91:55"><name pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:15">rpl</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:30">frame_in_part</name></name> <operator pos:start="91:32" pos:end="91:33">==</operator> <name pos:start="91:35" pos:end="91:55"><name pos:start="91:35" pos:end="91:37">rpl</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:55">frames_per_chunk</name></name></expr>)</condition> <block pos:start="91:58" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:30">

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:30"><name pos:start="93:13" pos:end="93:15">rpl</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:30">frame_in_part</name></name> <operator pos:start="93:32" pos:end="93:32">=</operator> <literal type="number" pos:start="93:34" pos:end="93:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:15">rpl</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:27">chunk_part</name></name><operator pos:start="95:28" pos:end="95:29">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="137:5">else <block pos:start="99:12" pos:end="137:5">{<block_content pos:start="101:9" pos:end="135:26">

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:55"><name pos:start="101:15" pos:end="101:27">av_get_packet</name><argument_list pos:start="101:28" pos:end="101:55">(<argument pos:start="101:29" pos:end="101:30"><expr pos:start="101:29" pos:end="101:30"><name pos:start="101:29" pos:end="101:30">pb</name></expr></argument>, <argument pos:start="101:33" pos:end="101:35"><expr pos:start="101:33" pos:end="101:35"><name pos:start="101:33" pos:end="101:35">pkt</name></expr></argument>, <argument pos:start="101:38" pos:end="101:54"><expr pos:start="101:38" pos:end="101:54"><name pos:start="101:38" pos:end="101:54"><name pos:start="101:38" pos:end="101:48">index_entry</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:37">(<expr pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:15">ret</name> <operator pos:start="103:17" pos:end="103:18">!=</operator> <name pos:start="103:20" pos:end="103:36"><name pos:start="103:20" pos:end="103:30">index_entry</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:36">size</name></name></expr>)</condition> <block pos:start="103:39" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:32">

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><call pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:26">av_free_packet</name><argument_list pos:start="105:27" pos:end="105:31">(<argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:32">return <expr pos:start="107:20" pos:end="107:31"><call pos:start="107:20" pos:end="107:31"><name pos:start="107:20" pos:end="107:26">AVERROR</name><argument_list pos:start="107:27" pos:end="107:31">(<argument pos:start="107:28" pos:end="107:30"><expr pos:start="107:28" pos:end="107:30"><name pos:start="107:28" pos:end="107:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="113:9" pos:end="129:9"><if pos:start="113:9" pos:end="121:9">if <condition pos:start="113:12" pos:end="113:60">(<expr pos:start="113:13" pos:end="113:59"><name pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:18">stream</name><operator pos:start="113:19" pos:end="113:20">-&gt;</operator><name pos:start="113:21" pos:end="113:25">codec</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:37">codec_type</name></name> <operator pos:start="113:39" pos:end="113:40">==</operator> <name pos:start="113:42" pos:end="113:59">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="113:62" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:50">

            <comment type="line" pos:start="115:13" pos:end="115:69">// frames_per_chunk should always be one here; the header</comment>

            <comment type="line" pos:start="117:13" pos:end="117:45">// parsing will warn if it isn't.</comment>

            <expr_stmt pos:start="119:13" pos:end="119:50"><expr pos:start="119:13" pos:end="119:49"><name pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:15">pkt</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:25">duration</name></name> <operator pos:start="119:27" pos:end="119:27">=</operator> <name pos:start="119:29" pos:end="119:49"><name pos:start="119:29" pos:end="119:31">rpl</name><operator pos:start="119:32" pos:end="119:33">-&gt;</operator><name pos:start="119:34" pos:end="119:49">frames_per_chunk</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="129:9">else <block pos:start="121:16" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:36">

            <comment type="line" pos:start="123:13" pos:end="123:63">// All the audio codecs supported in this container</comment>

            <comment type="line" pos:start="125:13" pos:end="125:54">// (at least so far) are constant-bitrate.</comment>

            <expr_stmt pos:start="127:13" pos:end="127:36"><expr pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:15">pkt</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:25">duration</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:31">ret</name> <operator pos:start="127:33" pos:end="127:33">*</operator> <literal type="number" pos:start="127:35" pos:end="127:35">8</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:42"><expr pos:start="131:9" pos:end="131:41"><name pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:11">pkt</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:16">pts</name></name> <operator pos:start="131:18" pos:end="131:18">=</operator> <name pos:start="131:20" pos:end="131:41"><name pos:start="131:20" pos:end="131:30">index_entry</name><operator pos:start="131:31" pos:end="131:32">-&gt;</operator><name pos:start="131:33" pos:end="131:41">timestamp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:44"><expr pos:start="133:9" pos:end="133:43"><name pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:11">pkt</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:25">stream_index</name></name> <operator pos:start="133:27" pos:end="133:27">=</operator> <name pos:start="133:29" pos:end="133:43"><name pos:start="133:29" pos:end="133:31">rpl</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:43">chunk_part</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:26"><expr pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:23"><name pos:start="135:9" pos:end="135:11">rpl</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:23">chunk_part</name></name><operator pos:start="135:24" pos:end="135:25">++</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="141:5" pos:end="141:63">// None of the Escape formats have keyframes, and the ADPCM</comment>

    <comment type="line" pos:start="143:5" pos:end="143:42">// format used doesn't have keyframes.</comment>

    <if_stmt pos:start="145:5" pos:end="147:38"><if pos:start="145:5" pos:end="147:38">if <condition pos:start="145:8" pos:end="145:58">(<expr pos:start="145:9" pos:end="145:57"><name pos:start="145:9" pos:end="145:25"><name pos:start="145:9" pos:end="145:11">rpl</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:25">chunk_number</name></name> <operator pos:start="145:27" pos:end="145:28">==</operator> <literal type="number" pos:start="145:30" pos:end="145:30">0</literal> <operator pos:start="145:32" pos:end="145:33">&amp;&amp;</operator> <name pos:start="145:35" pos:end="145:52"><name pos:start="145:35" pos:end="145:37">rpl</name><operator pos:start="145:38" pos:end="145:39">-&gt;</operator><name pos:start="145:40" pos:end="145:52">frame_in_part</name></name> <operator pos:start="145:54" pos:end="145:55">==</operator> <literal type="number" pos:start="145:57" pos:end="145:57">0</literal></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:38"><block_content pos:start="147:9" pos:end="147:38">

        <expr_stmt pos:start="147:9" pos:end="147:38"><expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:11">pkt</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:18">flags</name></name> <operator pos:start="147:20" pos:end="147:21">|=</operator> <name pos:start="147:23" pos:end="147:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="151:5" pos:end="151:15">return <expr pos:start="151:12" pos:end="151:14"><name pos:start="151:12" pos:end="151:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
