<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25212.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">spapr_populate_pci_child_dt</name><parameter_list pos:start="1:39" pos:end="5:59">(<parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:48">PCIDevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dev</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">fdt</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">offset</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:52">phb_index</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:67"><decl pos:start="3:55" pos:end="3:67"><type pos:start="3:55" pos:end="3:67"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:67">drc_index</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:58"><decl pos:start="5:40" pos:end="5:58"><type pos:start="5:40" pos:end="5:58"><name pos:start="5:40" pos:end="5:52">sPAPRPHBState</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:58">sphb</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="191:1">{<block_content pos:start="9:5" pos:end="189:13">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">ResourceProps</name></type> <name pos:start="9:19" pos:end="9:20">rp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:18">is_bridge</name> <init pos:start="11:20" pos:end="11:26">= <expr pos:start="11:22" pos:end="11:26"><name pos:start="11:22" pos:end="11:26">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">pci_status</name></decl>, <decl pos:start="13:21" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:23">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:13">buf</name> <init pos:start="15:15" pos:end="15:20">= <expr pos:start="15:17" pos:end="15:20"><name pos:start="15:17" pos:end="15:20">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="21:31">(<expr pos:start="19:9" pos:end="21:30"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:31">pci_default_read_config</name><argument_list pos:start="19:32" pos:end="19:56">(<argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">dev</name></expr></argument>, <argument pos:start="19:38" pos:end="19:52"><expr pos:start="19:38" pos:end="19:52"><name pos:start="19:38" pos:end="19:52">PCI_HEADER_TYPE</name></expr></argument>, <argument pos:start="19:55" pos:end="19:55"><expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">1</literal></expr></argument>)</argument_list></call> <operator pos:start="19:58" pos:end="19:59">==</operator>

        <name pos:start="21:9" pos:end="21:30">PCI_HEADER_TYPE_BRIDGE</name></expr>)</condition> <block pos:start="21:33" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:25">

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:17">is_bridge</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:24">true</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:57">/* in accordance with PAPR+ v2.7 13.6.3, Table 181 */</comment>

    <expr_stmt pos:start="31:5" pos:end="33:75"><expr pos:start="31:5" pos:end="33:74"><call pos:start="31:5" pos:end="33:74"><name pos:start="31:5" pos:end="31:8">_FDT</name><argument_list pos:start="31:9" pos:end="33:74">(<argument pos:start="31:10" pos:end="33:73"><expr pos:start="31:10" pos:end="33:73"><call pos:start="31:10" pos:end="33:73"><name pos:start="31:10" pos:end="31:25">fdt_setprop_cell</name><argument_list pos:start="31:26" pos:end="33:73">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">fdt</name></expr></argument>, <argument pos:start="31:32" pos:end="31:37"><expr pos:start="31:32" pos:end="31:37"><name pos:start="31:32" pos:end="31:37">offset</name></expr></argument>, <argument pos:start="31:40" pos:end="31:50"><expr pos:start="31:40" pos:end="31:50"><literal type="string" pos:start="31:40" pos:end="31:50">"vendor-id"</literal></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:72"><expr pos:start="33:27" pos:end="33:72"><call pos:start="33:27" pos:end="33:72"><name pos:start="33:27" pos:end="33:49">pci_default_read_config</name><argument_list pos:start="33:50" pos:end="33:72">(<argument pos:start="33:51" pos:end="33:53"><expr pos:start="33:51" pos:end="33:53"><name pos:start="33:51" pos:end="33:53">dev</name></expr></argument>, <argument pos:start="33:56" pos:end="33:68"><expr pos:start="33:56" pos:end="33:68"><name pos:start="33:56" pos:end="33:68">PCI_VENDOR_ID</name></expr></argument>, <argument pos:start="33:71" pos:end="33:71"><expr pos:start="33:71" pos:end="33:71"><literal type="number" pos:start="33:71" pos:end="33:71">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:75"><expr pos:start="35:5" pos:end="37:74"><call pos:start="35:5" pos:end="37:74"><name pos:start="35:5" pos:end="35:8">_FDT</name><argument_list pos:start="35:9" pos:end="37:74">(<argument pos:start="35:10" pos:end="37:73"><expr pos:start="35:10" pos:end="37:73"><call pos:start="35:10" pos:end="37:73"><name pos:start="35:10" pos:end="35:25">fdt_setprop_cell</name><argument_list pos:start="35:26" pos:end="37:73">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">fdt</name></expr></argument>, <argument pos:start="35:32" pos:end="35:37"><expr pos:start="35:32" pos:end="35:37"><name pos:start="35:32" pos:end="35:37">offset</name></expr></argument>, <argument pos:start="35:40" pos:end="35:50"><expr pos:start="35:40" pos:end="35:50"><literal type="string" pos:start="35:40" pos:end="35:50">"device-id"</literal></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:72"><expr pos:start="37:27" pos:end="37:72"><call pos:start="37:27" pos:end="37:72"><name pos:start="37:27" pos:end="37:49">pci_default_read_config</name><argument_list pos:start="37:50" pos:end="37:72">(<argument pos:start="37:51" pos:end="37:53"><expr pos:start="37:51" pos:end="37:53"><name pos:start="37:51" pos:end="37:53">dev</name></expr></argument>, <argument pos:start="37:56" pos:end="37:68"><expr pos:start="37:56" pos:end="37:68"><name pos:start="37:56" pos:end="37:68">PCI_DEVICE_ID</name></expr></argument>, <argument pos:start="37:71" pos:end="37:71"><expr pos:start="37:71" pos:end="37:71"><literal type="number" pos:start="37:71" pos:end="37:71">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:77"><expr pos:start="39:5" pos:end="41:76"><call pos:start="39:5" pos:end="41:76"><name pos:start="39:5" pos:end="39:8">_FDT</name><argument_list pos:start="39:9" pos:end="41:76">(<argument pos:start="39:10" pos:end="41:75"><expr pos:start="39:10" pos:end="41:75"><call pos:start="39:10" pos:end="41:75"><name pos:start="39:10" pos:end="39:25">fdt_setprop_cell</name><argument_list pos:start="39:26" pos:end="41:75">(<argument pos:start="39:27" pos:end="39:29"><expr pos:start="39:27" pos:end="39:29"><name pos:start="39:27" pos:end="39:29">fdt</name></expr></argument>, <argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">offset</name></expr></argument>, <argument pos:start="39:40" pos:end="39:52"><expr pos:start="39:40" pos:end="39:52"><literal type="string" pos:start="39:40" pos:end="39:52">"revision-id"</literal></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:74"><expr pos:start="41:27" pos:end="41:74"><call pos:start="41:27" pos:end="41:74"><name pos:start="41:27" pos:end="41:49">pci_default_read_config</name><argument_list pos:start="41:50" pos:end="41:74">(<argument pos:start="41:51" pos:end="41:53"><expr pos:start="41:51" pos:end="41:53"><name pos:start="41:51" pos:end="41:53">dev</name></expr></argument>, <argument pos:start="41:56" pos:end="41:70"><expr pos:start="41:56" pos:end="41:70"><name pos:start="41:56" pos:end="41:70">PCI_REVISION_ID</name></expr></argument>, <argument pos:start="41:73" pos:end="41:73"><expr pos:start="41:73" pos:end="41:73"><literal type="number" pos:start="41:73" pos:end="41:73">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="45:76"><expr pos:start="43:5" pos:end="45:75"><call pos:start="43:5" pos:end="45:75"><name pos:start="43:5" pos:end="43:8">_FDT</name><argument_list pos:start="43:9" pos:end="45:75">(<argument pos:start="43:10" pos:end="45:74"><expr pos:start="43:10" pos:end="45:74"><call pos:start="43:10" pos:end="45:74"><name pos:start="43:10" pos:end="43:25">fdt_setprop_cell</name><argument_list pos:start="43:26" pos:end="45:74">(<argument pos:start="43:27" pos:end="43:29"><expr pos:start="43:27" pos:end="43:29"><name pos:start="43:27" pos:end="43:29">fdt</name></expr></argument>, <argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:37">offset</name></expr></argument>, <argument pos:start="43:40" pos:end="43:51"><expr pos:start="43:40" pos:end="43:51"><literal type="string" pos:start="43:40" pos:end="43:51">"class-code"</literal></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:73"><expr pos:start="45:27" pos:end="45:73"><call pos:start="45:27" pos:end="45:73"><name pos:start="45:27" pos:end="45:49">pci_default_read_config</name><argument_list pos:start="45:50" pos:end="45:73">(<argument pos:start="45:51" pos:end="45:53"><expr pos:start="45:51" pos:end="45:53"><name pos:start="45:51" pos:end="45:53">dev</name></expr></argument>, <argument pos:start="45:56" pos:end="45:69"><expr pos:start="45:56" pos:end="45:69"><name pos:start="45:56" pos:end="45:69">PCI_CLASS_PROG</name></expr></argument>, <argument pos:start="45:72" pos:end="45:72"><expr pos:start="45:72" pos:end="45:72"><literal type="number" pos:start="45:72" pos:end="45:72">3</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:59">(<expr pos:start="47:9" pos:end="47:58"><call pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:31">pci_default_read_config</name><argument_list pos:start="47:32" pos:end="47:58">(<argument pos:start="47:33" pos:end="47:35"><expr pos:start="47:33" pos:end="47:35"><name pos:start="47:33" pos:end="47:35">dev</name></expr></argument>, <argument pos:start="47:38" pos:end="47:54"><expr pos:start="47:38" pos:end="47:54"><name pos:start="47:38" pos:end="47:54">PCI_INTERRUPT_PIN</name></expr></argument>, <argument pos:start="47:57" pos:end="47:57"><expr pos:start="47:57" pos:end="47:57"><literal type="number" pos:start="47:57" pos:end="47:57">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:61" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:70">

        <expr_stmt pos:start="49:9" pos:end="51:70"><expr pos:start="49:9" pos:end="51:69"><call pos:start="49:9" pos:end="51:69"><name pos:start="49:9" pos:end="49:12">_FDT</name><argument_list pos:start="49:13" pos:end="51:69">(<argument pos:start="49:14" pos:end="51:68"><expr pos:start="49:14" pos:end="51:68"><call pos:start="49:14" pos:end="51:68"><name pos:start="49:14" pos:end="49:29">fdt_setprop_cell</name><argument_list pos:start="49:30" pos:end="51:68">(<argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">fdt</name></expr></argument>, <argument pos:start="49:36" pos:end="49:41"><expr pos:start="49:36" pos:end="49:41"><name pos:start="49:36" pos:end="49:41">offset</name></expr></argument>, <argument pos:start="49:44" pos:end="49:55"><expr pos:start="49:44" pos:end="49:55"><literal type="string" pos:start="49:44" pos:end="49:55">"interrupts"</literal></expr></argument>,

                 <argument pos:start="51:18" pos:end="51:67"><expr pos:start="51:18" pos:end="51:67"><call pos:start="51:18" pos:end="51:67"><name pos:start="51:18" pos:end="51:40">pci_default_read_config</name><argument_list pos:start="51:41" pos:end="51:67">(<argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:44">dev</name></expr></argument>, <argument pos:start="51:47" pos:end="51:63"><expr pos:start="51:47" pos:end="51:63"><name pos:start="51:47" pos:end="51:63">PCI_INTERRUPT_PIN</name></expr></argument>, <argument pos:start="51:66" pos:end="51:66"><expr pos:start="51:66" pos:end="51:66"><literal type="number" pos:start="51:66" pos:end="51:66">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:19">(<expr pos:start="57:9" pos:end="57:18"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:18">is_bridge</name></expr>)</condition> <block pos:start="57:21" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:59">

        <expr_stmt pos:start="59:9" pos:end="61:59"><expr pos:start="59:9" pos:end="61:58"><call pos:start="59:9" pos:end="61:58"><name pos:start="59:9" pos:end="59:12">_FDT</name><argument_list pos:start="59:13" pos:end="61:58">(<argument pos:start="59:14" pos:end="61:57"><expr pos:start="59:14" pos:end="61:57"><call pos:start="59:14" pos:end="61:57"><name pos:start="59:14" pos:end="59:29">fdt_setprop_cell</name><argument_list pos:start="59:30" pos:end="61:57">(<argument pos:start="59:31" pos:end="59:33"><expr pos:start="59:31" pos:end="59:33"><name pos:start="59:31" pos:end="59:33">fdt</name></expr></argument>, <argument pos:start="59:36" pos:end="59:41"><expr pos:start="59:36" pos:end="59:41"><name pos:start="59:36" pos:end="59:41">offset</name></expr></argument>, <argument pos:start="59:44" pos:end="59:54"><expr pos:start="59:44" pos:end="59:54"><literal type="string" pos:start="59:44" pos:end="59:54">"min-grant"</literal></expr></argument>,

            <argument pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:56"><call pos:start="61:13" pos:end="61:56"><name pos:start="61:13" pos:end="61:35">pci_default_read_config</name><argument_list pos:start="61:36" pos:end="61:56">(<argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">dev</name></expr></argument>, <argument pos:start="61:42" pos:end="61:52"><expr pos:start="61:42" pos:end="61:52"><name pos:start="61:42" pos:end="61:52">PCI_MIN_GNT</name></expr></argument>, <argument pos:start="61:55" pos:end="61:55"><expr pos:start="61:55" pos:end="61:55"><literal type="number" pos:start="61:55" pos:end="61:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="65:59"><expr pos:start="63:9" pos:end="65:58"><call pos:start="63:9" pos:end="65:58"><name pos:start="63:9" pos:end="63:12">_FDT</name><argument_list pos:start="63:13" pos:end="65:58">(<argument pos:start="63:14" pos:end="65:57"><expr pos:start="63:14" pos:end="65:57"><call pos:start="63:14" pos:end="65:57"><name pos:start="63:14" pos:end="63:29">fdt_setprop_cell</name><argument_list pos:start="63:30" pos:end="65:57">(<argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">fdt</name></expr></argument>, <argument pos:start="63:36" pos:end="63:41"><expr pos:start="63:36" pos:end="63:41"><name pos:start="63:36" pos:end="63:41">offset</name></expr></argument>, <argument pos:start="63:44" pos:end="63:56"><expr pos:start="63:44" pos:end="63:56"><literal type="string" pos:start="63:44" pos:end="63:56">"max-latency"</literal></expr></argument>,

            <argument pos:start="65:13" pos:end="65:56"><expr pos:start="65:13" pos:end="65:56"><call pos:start="65:13" pos:end="65:56"><name pos:start="65:13" pos:end="65:35">pci_default_read_config</name><argument_list pos:start="65:36" pos:end="65:56">(<argument pos:start="65:37" pos:end="65:39"><expr pos:start="65:37" pos:end="65:39"><name pos:start="65:37" pos:end="65:39">dev</name></expr></argument>, <argument pos:start="65:42" pos:end="65:52"><expr pos:start="65:42" pos:end="65:52"><name pos:start="65:42" pos:end="65:52">PCI_MAX_LAT</name></expr></argument>, <argument pos:start="65:55" pos:end="65:55"><expr pos:start="65:55" pos:end="65:55"><literal type="number" pos:start="65:55" pos:end="65:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:58">(<expr pos:start="71:9" pos:end="71:57"><call pos:start="71:9" pos:end="71:57"><name pos:start="71:9" pos:end="71:31">pci_default_read_config</name><argument_list pos:start="71:32" pos:end="71:57">(<argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:35">dev</name></expr></argument>, <argument pos:start="71:38" pos:end="71:53"><expr pos:start="71:38" pos:end="71:53"><name pos:start="71:38" pos:end="71:53">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="71:56" pos:end="71:56"><expr pos:start="71:56" pos:end="71:56"><literal type="number" pos:start="71:56" pos:end="71:56">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:60" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:69">

        <expr_stmt pos:start="73:9" pos:end="75:69"><expr pos:start="73:9" pos:end="75:68"><call pos:start="73:9" pos:end="75:68"><name pos:start="73:9" pos:end="73:12">_FDT</name><argument_list pos:start="73:13" pos:end="75:68">(<argument pos:start="73:14" pos:end="75:67"><expr pos:start="73:14" pos:end="75:67"><call pos:start="73:14" pos:end="75:67"><name pos:start="73:14" pos:end="73:29">fdt_setprop_cell</name><argument_list pos:start="73:30" pos:end="75:67">(<argument pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:33">fdt</name></expr></argument>, <argument pos:start="73:36" pos:end="73:41"><expr pos:start="73:36" pos:end="73:41"><name pos:start="73:36" pos:end="73:41">offset</name></expr></argument>, <argument pos:start="73:44" pos:end="73:57"><expr pos:start="73:44" pos:end="73:57"><literal type="string" pos:start="73:44" pos:end="73:57">"subsystem-id"</literal></expr></argument>,

                 <argument pos:start="75:18" pos:end="75:66"><expr pos:start="75:18" pos:end="75:66"><call pos:start="75:18" pos:end="75:66"><name pos:start="75:18" pos:end="75:40">pci_default_read_config</name><argument_list pos:start="75:41" pos:end="75:66">(<argument pos:start="75:42" pos:end="75:44"><expr pos:start="75:42" pos:end="75:44"><name pos:start="75:42" pos:end="75:44">dev</name></expr></argument>, <argument pos:start="75:47" pos:end="75:62"><expr pos:start="75:47" pos:end="75:62"><name pos:start="75:47" pos:end="75:62">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="75:65" pos:end="75:65"><expr pos:start="75:65" pos:end="75:65"><literal type="number" pos:start="75:65" pos:end="75:65">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:65">(<expr pos:start="81:9" pos:end="81:64"><call pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:31">pci_default_read_config</name><argument_list pos:start="81:32" pos:end="81:64">(<argument pos:start="81:33" pos:end="81:35"><expr pos:start="81:33" pos:end="81:35"><name pos:start="81:33" pos:end="81:35">dev</name></expr></argument>, <argument pos:start="81:38" pos:end="81:60"><expr pos:start="81:38" pos:end="81:60"><name pos:start="81:38" pos:end="81:60">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>, <argument pos:start="81:63" pos:end="81:63"><expr pos:start="81:63" pos:end="81:63"><literal type="number" pos:start="81:63" pos:end="81:63">2</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:67" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:76">

        <expr_stmt pos:start="83:9" pos:end="85:76"><expr pos:start="83:9" pos:end="85:75"><call pos:start="83:9" pos:end="85:75"><name pos:start="83:9" pos:end="83:12">_FDT</name><argument_list pos:start="83:13" pos:end="85:75">(<argument pos:start="83:14" pos:end="85:74"><expr pos:start="83:14" pos:end="85:74"><call pos:start="83:14" pos:end="85:74"><name pos:start="83:14" pos:end="83:29">fdt_setprop_cell</name><argument_list pos:start="83:30" pos:end="85:74">(<argument pos:start="83:31" pos:end="83:33"><expr pos:start="83:31" pos:end="83:33"><name pos:start="83:31" pos:end="83:33">fdt</name></expr></argument>, <argument pos:start="83:36" pos:end="83:41"><expr pos:start="83:36" pos:end="83:41"><name pos:start="83:36" pos:end="83:41">offset</name></expr></argument>, <argument pos:start="83:44" pos:end="83:64"><expr pos:start="83:44" pos:end="83:64"><literal type="string" pos:start="83:44" pos:end="83:64">"subsystem-vendor-id"</literal></expr></argument>,

                 <argument pos:start="85:18" pos:end="85:73"><expr pos:start="85:18" pos:end="85:73"><call pos:start="85:18" pos:end="85:73"><name pos:start="85:18" pos:end="85:40">pci_default_read_config</name><argument_list pos:start="85:41" pos:end="85:73">(<argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:44">dev</name></expr></argument>, <argument pos:start="85:47" pos:end="85:69"><expr pos:start="85:47" pos:end="85:69"><name pos:start="85:47" pos:end="85:69">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>, <argument pos:start="85:72" pos:end="85:72"><expr pos:start="85:72" pos:end="85:72"><literal type="number" pos:start="85:72" pos:end="85:72">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="93:63"><expr pos:start="91:5" pos:end="93:62"><call pos:start="91:5" pos:end="93:62"><name pos:start="91:5" pos:end="91:8">_FDT</name><argument_list pos:start="91:9" pos:end="93:62">(<argument pos:start="91:10" pos:end="93:61"><expr pos:start="91:10" pos:end="93:61"><call pos:start="91:10" pos:end="93:61"><name pos:start="91:10" pos:end="91:25">fdt_setprop_cell</name><argument_list pos:start="91:26" pos:end="93:61">(<argument pos:start="91:27" pos:end="91:29"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">fdt</name></expr></argument>, <argument pos:start="91:32" pos:end="91:37"><expr pos:start="91:32" pos:end="91:37"><name pos:start="91:32" pos:end="91:37">offset</name></expr></argument>, <argument pos:start="91:40" pos:end="91:56"><expr pos:start="91:40" pos:end="91:56"><literal type="string" pos:start="91:40" pos:end="91:56">"cache-line-size"</literal></expr></argument>,

        <argument pos:start="93:9" pos:end="93:60"><expr pos:start="93:9" pos:end="93:60"><call pos:start="93:9" pos:end="93:60"><name pos:start="93:9" pos:end="93:31">pci_default_read_config</name><argument_list pos:start="93:32" pos:end="93:60">(<argument pos:start="93:33" pos:end="93:35"><expr pos:start="93:33" pos:end="93:35"><name pos:start="93:33" pos:end="93:35">dev</name></expr></argument>, <argument pos:start="93:38" pos:end="93:56"><expr pos:start="93:38" pos:end="93:56"><name pos:start="93:38" pos:end="93:56">PCI_CACHE_LINE_SIZE</name></expr></argument>, <argument pos:start="93:59" pos:end="93:59"><expr pos:start="93:59" pos:end="93:59"><literal type="number" pos:start="93:59" pos:end="93:59">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:72">/* the following fdt cells are masked off the pci status register */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:61"><expr pos:start="99:5" pos:end="99:60"><name pos:start="99:5" pos:end="99:14">pci_status</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:60"><name pos:start="99:18" pos:end="99:40">pci_default_read_config</name><argument_list pos:start="99:41" pos:end="99:60">(<argument pos:start="99:42" pos:end="99:44"><expr pos:start="99:42" pos:end="99:44"><name pos:start="99:42" pos:end="99:44">dev</name></expr></argument>, <argument pos:start="99:47" pos:end="99:56"><expr pos:start="99:47" pos:end="99:56"><name pos:start="99:47" pos:end="99:56">PCI_STATUS</name></expr></argument>, <argument pos:start="99:59" pos:end="99:59"><expr pos:start="99:59" pos:end="99:59"><literal type="number" pos:start="99:59" pos:end="99:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:64"><expr pos:start="101:5" pos:end="103:63"><call pos:start="101:5" pos:end="103:63"><name pos:start="101:5" pos:end="101:8">_FDT</name><argument_list pos:start="101:9" pos:end="103:63">(<argument pos:start="101:10" pos:end="103:62"><expr pos:start="101:10" pos:end="103:62"><call pos:start="101:10" pos:end="103:62"><name pos:start="101:10" pos:end="101:25">fdt_setprop_cell</name><argument_list pos:start="101:26" pos:end="103:62">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">fdt</name></expr></argument>, <argument pos:start="101:32" pos:end="101:37"><expr pos:start="101:32" pos:end="101:37"><name pos:start="101:32" pos:end="101:37">offset</name></expr></argument>, <argument pos:start="101:40" pos:end="101:53"><expr pos:start="101:40" pos:end="101:53"><literal type="string" pos:start="101:40" pos:end="101:53">"devsel-speed"</literal></expr></argument>,

                          <argument pos:start="103:27" pos:end="103:61"><expr pos:start="103:27" pos:end="103:61"><name pos:start="103:27" pos:end="103:48">PCI_STATUS_DEVSEL_MASK</name> <operator pos:start="103:50" pos:end="103:50">&amp;</operator> <name pos:start="103:52" pos:end="103:61">pci_status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="111:5"><if pos:start="107:5" pos:end="111:5">if <condition pos:start="107:8" pos:end="107:42">(<expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:18">pci_status</name> <operator pos:start="107:20" pos:end="107:20">&amp;</operator> <name pos:start="107:22" pos:end="107:41">PCI_STATUS_FAST_BACK</name></expr>)</condition> <block pos:start="107:44" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:69">

        <expr_stmt pos:start="109:9" pos:end="109:69"><expr pos:start="109:9" pos:end="109:68"><call pos:start="109:9" pos:end="109:68"><name pos:start="109:9" pos:end="109:12">_FDT</name><argument_list pos:start="109:13" pos:end="109:68">(<argument pos:start="109:14" pos:end="109:67"><expr pos:start="109:14" pos:end="109:67"><call pos:start="109:14" pos:end="109:67"><name pos:start="109:14" pos:end="109:24">fdt_setprop</name><argument_list pos:start="109:25" pos:end="109:67">(<argument pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:28">fdt</name></expr></argument>, <argument pos:start="109:31" pos:end="109:36"><expr pos:start="109:31" pos:end="109:36"><name pos:start="109:31" pos:end="109:36">offset</name></expr></argument>, <argument pos:start="109:39" pos:end="109:57"><expr pos:start="109:39" pos:end="109:57"><literal type="string" pos:start="109:39" pos:end="109:57">"fast-back-to-back"</literal></expr></argument>, <argument pos:start="109:60" pos:end="109:63"><expr pos:start="109:60" pos:end="109:63"><name pos:start="109:60" pos:end="109:63">NULL</name></expr></argument>, <argument pos:start="109:66" pos:end="109:66"><expr pos:start="109:66" pos:end="109:66"><literal type="number" pos:start="109:66" pos:end="109:66">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:38">(<expr pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:18">pci_status</name> <operator pos:start="113:20" pos:end="113:20">&amp;</operator> <name pos:start="113:22" pos:end="113:37">PCI_STATUS_66MHZ</name></expr>)</condition> <block pos:start="113:40" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:65">

        <expr_stmt pos:start="115:9" pos:end="115:65"><expr pos:start="115:9" pos:end="115:64"><call pos:start="115:9" pos:end="115:64"><name pos:start="115:9" pos:end="115:12">_FDT</name><argument_list pos:start="115:13" pos:end="115:64">(<argument pos:start="115:14" pos:end="115:63"><expr pos:start="115:14" pos:end="115:63"><call pos:start="115:14" pos:end="115:63"><name pos:start="115:14" pos:end="115:24">fdt_setprop</name><argument_list pos:start="115:25" pos:end="115:63">(<argument pos:start="115:26" pos:end="115:28"><expr pos:start="115:26" pos:end="115:28"><name pos:start="115:26" pos:end="115:28">fdt</name></expr></argument>, <argument pos:start="115:31" pos:end="115:36"><expr pos:start="115:31" pos:end="115:36"><name pos:start="115:31" pos:end="115:36">offset</name></expr></argument>, <argument pos:start="115:39" pos:end="115:53"><expr pos:start="115:39" pos:end="115:53"><literal type="string" pos:start="115:39" pos:end="115:53">"66mhz-capable"</literal></expr></argument>, <argument pos:start="115:56" pos:end="115:59"><expr pos:start="115:56" pos:end="115:59"><name pos:start="115:56" pos:end="115:59">NULL</name></expr></argument>, <argument pos:start="115:62" pos:end="115:62"><expr pos:start="115:62" pos:end="115:62"><literal type="number" pos:start="115:62" pos:end="115:62">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:36">(<expr pos:start="119:9" pos:end="119:35"><name pos:start="119:9" pos:end="119:18">pci_status</name> <operator pos:start="119:20" pos:end="119:20">&amp;</operator> <name pos:start="119:22" pos:end="119:35">PCI_STATUS_UDF</name></expr>)</condition> <block pos:start="119:38" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:65">

        <expr_stmt pos:start="121:9" pos:end="121:65"><expr pos:start="121:9" pos:end="121:64"><call pos:start="121:9" pos:end="121:64"><name pos:start="121:9" pos:end="121:12">_FDT</name><argument_list pos:start="121:13" pos:end="121:64">(<argument pos:start="121:14" pos:end="121:63"><expr pos:start="121:14" pos:end="121:63"><call pos:start="121:14" pos:end="121:63"><name pos:start="121:14" pos:end="121:24">fdt_setprop</name><argument_list pos:start="121:25" pos:end="121:63">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">fdt</name></expr></argument>, <argument pos:start="121:31" pos:end="121:36"><expr pos:start="121:31" pos:end="121:36"><name pos:start="121:31" pos:end="121:36">offset</name></expr></argument>, <argument pos:start="121:39" pos:end="121:53"><expr pos:start="121:39" pos:end="121:53"><literal type="string" pos:start="121:39" pos:end="121:53">"udf-supported"</literal></expr></argument>, <argument pos:start="121:56" pos:end="121:59"><expr pos:start="121:56" pos:end="121:59"><name pos:start="121:56" pos:end="121:59">NULL</name></expr></argument>, <argument pos:start="121:62" pos:end="121:62"><expr pos:start="121:62" pos:end="121:62"><literal type="number" pos:start="121:62" pos:end="121:62">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="127:5" pos:end="133:7">/* NOTE: this is normally generated by firmware via path/unit name,

     * but in our case we must set it manually since it does not get

     * processed by OF beforehand

     */</comment>

    <expr_stmt pos:start="135:5" pos:end="135:57"><expr pos:start="135:5" pos:end="135:56"><call pos:start="135:5" pos:end="135:56"><name pos:start="135:5" pos:end="135:8">_FDT</name><argument_list pos:start="135:9" pos:end="135:56">(<argument pos:start="135:10" pos:end="135:55"><expr pos:start="135:10" pos:end="135:55"><call pos:start="135:10" pos:end="135:55"><name pos:start="135:10" pos:end="135:27">fdt_setprop_string</name><argument_list pos:start="135:28" pos:end="135:55">(<argument pos:start="135:29" pos:end="135:31"><expr pos:start="135:29" pos:end="135:31"><name pos:start="135:29" pos:end="135:31">fdt</name></expr></argument>, <argument pos:start="135:34" pos:end="135:39"><expr pos:start="135:34" pos:end="135:39"><name pos:start="135:34" pos:end="135:39">offset</name></expr></argument>, <argument pos:start="135:42" pos:end="135:47"><expr pos:start="135:42" pos:end="135:47"><literal type="string" pos:start="135:42" pos:end="135:47">"name"</literal></expr></argument>, <argument pos:start="135:50" pos:end="135:54"><expr pos:start="135:50" pos:end="135:54"><literal type="string" pos:start="135:50" pos:end="135:54">"pci"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:44"><expr pos:start="137:5" pos:end="137:43"><name pos:start="137:5" pos:end="137:7">buf</name> <operator pos:start="137:9" pos:end="137:9">=</operator> <call pos:start="137:11" pos:end="137:43"><name pos:start="137:11" pos:end="137:32">spapr_phb_get_loc_code</name><argument_list pos:start="137:33" pos:end="137:43">(<argument pos:start="137:34" pos:end="137:37"><expr pos:start="137:34" pos:end="137:37"><name pos:start="137:34" pos:end="137:37">sphb</name></expr></argument>, <argument pos:start="137:40" pos:end="137:42"><expr pos:start="137:40" pos:end="137:42"><name pos:start="137:40" pos:end="137:42">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:13">(<expr pos:start="139:9" pos:end="139:12"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:12">buf</name></expr>)</condition> <block pos:start="139:15" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:18">

        <expr_stmt pos:start="141:9" pos:end="141:56"><expr pos:start="141:9" pos:end="141:55"><call pos:start="141:9" pos:end="141:55"><name pos:start="141:9" pos:end="141:20">error_report</name><argument_list pos:start="141:21" pos:end="141:55">(<argument pos:start="141:22" pos:end="141:54"><expr pos:start="141:22" pos:end="141:54"><literal type="string" pos:start="141:22" pos:end="141:54">"Failed setting the ibm,loc-code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="143:9" pos:end="143:18">return <expr pos:start="143:16" pos:end="143:17"><operator pos:start="143:16" pos:end="143:16">-</operator><literal type="number" pos:start="143:17" pos:end="143:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:63"><expr pos:start="149:5" pos:end="149:62"><name pos:start="149:5" pos:end="149:7">err</name> <operator pos:start="149:9" pos:end="149:9">=</operator> <call pos:start="149:11" pos:end="149:62"><name pos:start="149:11" pos:end="149:28">fdt_setprop_string</name><argument_list pos:start="149:29" pos:end="149:62">(<argument pos:start="149:30" pos:end="149:32"><expr pos:start="149:30" pos:end="149:32"><name pos:start="149:30" pos:end="149:32">fdt</name></expr></argument>, <argument pos:start="149:35" pos:end="149:40"><expr pos:start="149:35" pos:end="149:40"><name pos:start="149:35" pos:end="149:40">offset</name></expr></argument>, <argument pos:start="149:43" pos:end="149:56"><expr pos:start="149:43" pos:end="149:56"><literal type="string" pos:start="149:43" pos:end="149:56">"ibm,loc-code"</literal></expr></argument>, <argument pos:start="149:59" pos:end="149:61"><expr pos:start="149:59" pos:end="149:61"><name pos:start="149:59" pos:end="149:61">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:16"><expr pos:start="151:5" pos:end="151:15"><call pos:start="151:5" pos:end="151:15"><name pos:start="151:5" pos:end="151:10">g_free</name><argument_list pos:start="151:11" pos:end="151:15">(<argument pos:start="151:12" pos:end="151:14"><expr pos:start="151:12" pos:end="151:14"><name pos:start="151:12" pos:end="151:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:16">(<expr pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:11">err</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>)</condition> <block pos:start="153:18" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:19">

        <return pos:start="155:9" pos:end="155:19">return <expr pos:start="155:16" pos:end="155:18"><name pos:start="155:16" pos:end="155:18">err</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:71"><expr pos:start="161:5" pos:end="161:70"><call pos:start="161:5" pos:end="161:70"><name pos:start="161:5" pos:end="161:8">_FDT</name><argument_list pos:start="161:9" pos:end="161:70">(<argument pos:start="161:10" pos:end="161:69"><expr pos:start="161:10" pos:end="161:69"><call pos:start="161:10" pos:end="161:69"><name pos:start="161:10" pos:end="161:25">fdt_setprop_cell</name><argument_list pos:start="161:26" pos:end="161:69">(<argument pos:start="161:27" pos:end="161:29"><expr pos:start="161:27" pos:end="161:29"><name pos:start="161:27" pos:end="161:29">fdt</name></expr></argument>, <argument pos:start="161:32" pos:end="161:37"><expr pos:start="161:32" pos:end="161:37"><name pos:start="161:32" pos:end="161:37">offset</name></expr></argument>, <argument pos:start="161:40" pos:end="161:57"><expr pos:start="161:40" pos:end="161:57"><literal type="string" pos:start="161:40" pos:end="161:57">"ibm,my-drc-index"</literal></expr></argument>, <argument pos:start="161:60" pos:end="161:68"><expr pos:start="161:60" pos:end="161:68"><name pos:start="161:60" pos:end="161:68">drc_index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="167:51"><expr pos:start="165:5" pos:end="167:50"><call pos:start="165:5" pos:end="167:50"><name pos:start="165:5" pos:end="165:8">_FDT</name><argument_list pos:start="165:9" pos:end="167:50">(<argument pos:start="165:10" pos:end="167:49"><expr pos:start="165:10" pos:end="167:49"><call pos:start="165:10" pos:end="167:49"><name pos:start="165:10" pos:end="165:25">fdt_setprop_cell</name><argument_list pos:start="165:26" pos:end="167:49">(<argument pos:start="165:27" pos:end="165:29"><expr pos:start="165:27" pos:end="165:29"><name pos:start="165:27" pos:end="165:29">fdt</name></expr></argument>, <argument pos:start="165:32" pos:end="165:37"><expr pos:start="165:32" pos:end="165:37"><name pos:start="165:32" pos:end="165:37">offset</name></expr></argument>, <argument pos:start="165:40" pos:end="165:55"><expr pos:start="165:40" pos:end="165:55"><literal type="string" pos:start="165:40" pos:end="165:55">"#address-cells"</literal></expr></argument>,

                          <argument pos:start="167:27" pos:end="167:48"><expr pos:start="167:27" pos:end="167:48"><name pos:start="167:27" pos:end="167:48">RESOURCE_CELLS_ADDRESS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="171:48"><expr pos:start="169:5" pos:end="171:47"><call pos:start="169:5" pos:end="171:47"><name pos:start="169:5" pos:end="169:8">_FDT</name><argument_list pos:start="169:9" pos:end="171:47">(<argument pos:start="169:10" pos:end="171:46"><expr pos:start="169:10" pos:end="171:46"><call pos:start="169:10" pos:end="171:46"><name pos:start="169:10" pos:end="169:25">fdt_setprop_cell</name><argument_list pos:start="169:26" pos:end="171:46">(<argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">fdt</name></expr></argument>, <argument pos:start="169:32" pos:end="169:37"><expr pos:start="169:32" pos:end="169:37"><name pos:start="169:32" pos:end="169:37">offset</name></expr></argument>, <argument pos:start="169:40" pos:end="169:52"><expr pos:start="169:40" pos:end="169:52"><literal type="string" pos:start="169:40" pos:end="169:52">"#size-cells"</literal></expr></argument>,

                          <argument pos:start="171:27" pos:end="171:45"><expr pos:start="171:27" pos:end="171:45"><name pos:start="171:27" pos:end="171:45">RESOURCE_CELLS_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="175:48"><expr pos:start="173:5" pos:end="175:47"><call pos:start="173:5" pos:end="175:47"><name pos:start="173:5" pos:end="173:8">_FDT</name><argument_list pos:start="173:9" pos:end="175:47">(<argument pos:start="173:10" pos:end="175:46"><expr pos:start="173:10" pos:end="175:46"><call pos:start="173:10" pos:end="175:46"><name pos:start="173:10" pos:end="173:25">fdt_setprop_cell</name><argument_list pos:start="173:26" pos:end="175:46">(<argument pos:start="173:27" pos:end="173:29"><expr pos:start="173:27" pos:end="173:29"><name pos:start="173:27" pos:end="173:29">fdt</name></expr></argument>, <argument pos:start="173:32" pos:end="173:37"><expr pos:start="173:32" pos:end="173:37"><name pos:start="173:32" pos:end="173:37">offset</name></expr></argument>, <argument pos:start="173:40" pos:end="173:54"><expr pos:start="173:40" pos:end="173:54"><literal type="string" pos:start="173:40" pos:end="173:54">"ibm,req#msi-x"</literal></expr></argument>,

                          <argument pos:start="175:27" pos:end="175:45"><expr pos:start="175:27" pos:end="175:45"><name pos:start="175:27" pos:end="175:45">RESOURCE_CELLS_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:38"><expr pos:start="179:5" pos:end="179:37"><call pos:start="179:5" pos:end="179:37"><name pos:start="179:5" pos:end="179:27">populate_resource_props</name><argument_list pos:start="179:28" pos:end="179:37">(<argument pos:start="179:29" pos:end="179:31"><expr pos:start="179:29" pos:end="179:31"><name pos:start="179:29" pos:end="179:31">dev</name></expr></argument>, <argument pos:start="179:34" pos:end="179:36"><expr pos:start="179:34" pos:end="179:36"><operator pos:start="179:34" pos:end="179:34">&amp;</operator><name pos:start="179:35" pos:end="179:36">rp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:73"><expr pos:start="181:5" pos:end="181:72"><call pos:start="181:5" pos:end="181:72"><name pos:start="181:5" pos:end="181:8">_FDT</name><argument_list pos:start="181:9" pos:end="181:72">(<argument pos:start="181:10" pos:end="181:71"><expr pos:start="181:10" pos:end="181:71"><call pos:start="181:10" pos:end="181:71"><name pos:start="181:10" pos:end="181:20">fdt_setprop</name><argument_list pos:start="181:21" pos:end="181:71">(<argument pos:start="181:22" pos:end="181:24"><expr pos:start="181:22" pos:end="181:24"><name pos:start="181:22" pos:end="181:24">fdt</name></expr></argument>, <argument pos:start="181:27" pos:end="181:32"><expr pos:start="181:27" pos:end="181:32"><name pos:start="181:27" pos:end="181:32">offset</name></expr></argument>, <argument pos:start="181:35" pos:end="181:39"><expr pos:start="181:35" pos:end="181:39"><literal type="string" pos:start="181:35" pos:end="181:39">"reg"</literal></expr></argument>, <argument pos:start="181:42" pos:end="181:58"><expr pos:start="181:42" pos:end="181:58"><operator pos:start="181:42" pos:end="181:42">(</operator><name pos:start="181:43" pos:end="181:49">uint8_t</name> <operator pos:start="181:51" pos:end="181:51">*</operator><operator pos:start="181:52" pos:end="181:52">)</operator><name pos:start="181:53" pos:end="181:58"><name pos:start="181:53" pos:end="181:54">rp</name><operator pos:start="181:55" pos:end="181:55">.</operator><name pos:start="181:56" pos:end="181:58">reg</name></name></expr></argument>, <argument pos:start="181:61" pos:end="181:70"><expr pos:start="181:61" pos:end="181:70"><name pos:start="181:61" pos:end="181:70"><name pos:start="181:61" pos:end="181:62">rp</name><operator pos:start="181:63" pos:end="181:63">.</operator><name pos:start="181:64" pos:end="181:70">reg_len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="185:63"><expr pos:start="183:5" pos:end="185:62"><call pos:start="183:5" pos:end="185:62"><name pos:start="183:5" pos:end="183:8">_FDT</name><argument_list pos:start="183:9" pos:end="185:62">(<argument pos:start="183:10" pos:end="185:61"><expr pos:start="183:10" pos:end="185:61"><call pos:start="183:10" pos:end="185:61"><name pos:start="183:10" pos:end="183:20">fdt_setprop</name><argument_list pos:start="183:21" pos:end="185:61">(<argument pos:start="183:22" pos:end="183:24"><expr pos:start="183:22" pos:end="183:24"><name pos:start="183:22" pos:end="183:24">fdt</name></expr></argument>, <argument pos:start="183:27" pos:end="183:32"><expr pos:start="183:27" pos:end="183:32"><name pos:start="183:27" pos:end="183:32">offset</name></expr></argument>, <argument pos:start="183:35" pos:end="183:54"><expr pos:start="183:35" pos:end="183:54"><literal type="string" pos:start="183:35" pos:end="183:54">"assigned-addresses"</literal></expr></argument>,

                     <argument pos:start="185:22" pos:end="185:43"><expr pos:start="185:22" pos:end="185:43"><operator pos:start="185:22" pos:end="185:22">(</operator><name pos:start="185:23" pos:end="185:29">uint8_t</name> <operator pos:start="185:31" pos:end="185:31">*</operator><operator pos:start="185:32" pos:end="185:32">)</operator><name pos:start="185:33" pos:end="185:43"><name pos:start="185:33" pos:end="185:34">rp</name><operator pos:start="185:35" pos:end="185:35">.</operator><name pos:start="185:36" pos:end="185:43">assigned</name></name></expr></argument>, <argument pos:start="185:46" pos:end="185:60"><expr pos:start="185:46" pos:end="185:60"><name pos:start="185:46" pos:end="185:60"><name pos:start="185:46" pos:end="185:47">rp</name><operator pos:start="185:48" pos:end="185:48">.</operator><name pos:start="185:49" pos:end="185:60">assigned_len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="189:5" pos:end="189:13">return <expr pos:start="189:12" pos:end="189:12"><literal type="number" pos:start="189:12" pos:end="189:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
