<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1592.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">adaptive_gain_control</name><parameter_list pos:start="1:34" pos:end="5:73">(<parameter pos:start="1:35" pos:end="1:44"><decl pos:start="1:35" pos:end="1:44"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:39">float</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">out</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:57">float</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">in</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:59"><decl pos:start="3:35" pos:end="3:59"><type pos:start="3:35" pos:end="3:59"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:45">float</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:59">speech_synth</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:42"><decl pos:start="5:35" pos:end="5:42"><type pos:start="5:35" pos:end="5:42"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:42">size</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:55"><decl pos:start="5:45" pos:end="5:55"><type pos:start="5:45" pos:end="5:55"><name pos:start="5:45" pos:end="5:49">float</name></type> <name pos:start="5:51" pos:end="5:55">alpha</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:72"><decl pos:start="5:58" pos:end="5:72"><type pos:start="5:58" pos:end="5:72"><name pos:start="5:58" pos:end="5:62">float</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:72">gain_mem</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="41:1">{<block_content pos:start="9:5" pos:end="39:20">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:74"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:23">speech_energy</name> <init pos:start="11:25" pos:end="11:29">= <expr pos:start="11:27" pos:end="11:29"><literal type="number" pos:start="11:27" pos:end="11:29">0.0</literal></expr></init></decl>, <decl pos:start="11:32" pos:end="11:54"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:32" pos:end="11:48">postfilter_energy</name> <init pos:start="11:50" pos:end="11:54">= <expr pos:start="11:52" pos:end="11:54"><literal type="number" pos:start="11:52" pos:end="11:54">0.0</literal></expr></init></decl>, <decl pos:start="11:57" pos:end="11:73"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:57" pos:end="11:73">gain_scale_factor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:13">mem</name> <init pos:start="13:15" pos:end="13:25">= <expr pos:start="13:17" pos:end="13:25"><operator pos:start="13:17" pos:end="13:17">*</operator><name pos:start="13:18" pos:end="13:25">gain_mem</name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="23:5">for <control pos:start="17:9" pos:end="17:30">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:24">size</name></expr>;</condition> <incr pos:start="17:27" pos:end="17:29"><expr pos:start="17:27" pos:end="17:29"><name pos:start="17:27" pos:end="17:27">i</name><operator pos:start="17:28" pos:end="17:29">++</operator></expr></incr>)</control> <block pos:start="17:32" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:42">

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:21">speech_energy</name>     <operator pos:start="19:27" pos:end="19:28">+=</operator> <call pos:start="19:30" pos:end="19:51"><name pos:start="19:30" pos:end="19:34">fabsf</name><argument_list pos:start="19:35" pos:end="19:51">(<argument pos:start="19:36" pos:end="19:50"><expr pos:start="19:36" pos:end="19:50"><name pos:start="19:36" pos:end="19:50"><name pos:start="19:36" pos:end="19:47">speech_synth</name><index pos:start="19:48" pos:end="19:50">[<expr pos:start="19:49" pos:end="19:49"><name pos:start="19:49" pos:end="19:49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:25">postfilter_energy</name> <operator pos:start="21:27" pos:end="21:28">+=</operator> <call pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:34">fabsf</name><argument_list pos:start="21:35" pos:end="21:41">(<argument pos:start="21:36" pos:end="21:40"><expr pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:37">in</name><index pos:start="21:38" pos:end="21:40">[<expr pos:start="21:39" pos:end="21:39"><name pos:start="21:39" pos:end="21:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="25:5" pos:end="25:74"><expr pos:start="25:5" pos:end="25:73"><name pos:start="25:5" pos:end="25:21">gain_scale_factor</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <operator pos:start="25:25" pos:end="25:25">(</operator><literal type="number" pos:start="25:26" pos:end="25:30">1.0</literal> <operator pos:start="25:30" pos:end="25:30">-</operator> <name pos:start="25:32" pos:end="25:36">alpha</name><operator pos:start="25:37" pos:end="25:37">)</operator> <operator pos:start="25:39" pos:end="25:39">*</operator> <name pos:start="25:41" pos:end="25:53">speech_energy</name> <operator pos:start="25:55" pos:end="25:55">/</operator> <name pos:start="25:57" pos:end="25:73">postfilter_energy</name></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="35:5">for <control pos:start="29:9" pos:end="29:30">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:25"><expr pos:start="29:17" pos:end="29:24"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:24">size</name></expr>;</condition> <incr pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:27">i</name><operator pos:start="29:28" pos:end="29:29">++</operator></expr></incr>)</control> <block pos:start="29:32" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:29">

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:11">mem</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:19">alpha</name> <operator pos:start="31:21" pos:end="31:21">*</operator> <name pos:start="31:23" pos:end="31:25">mem</name> <operator pos:start="31:27" pos:end="31:27">+</operator> <name pos:start="31:29" pos:end="31:45">gain_scale_factor</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:29"><expr pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:11">out</name><index pos:start="33:12" pos:end="33:14">[<expr pos:start="33:13" pos:end="33:13"><name pos:start="33:13" pos:end="33:13">i</name></expr>]</index></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:22"><name pos:start="33:18" pos:end="33:19">in</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">i</name></expr>]</index></name> <operator pos:start="33:24" pos:end="33:24">*</operator> <name pos:start="33:26" pos:end="33:28">mem</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:13">gain_mem</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:19">mem</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
