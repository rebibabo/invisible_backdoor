<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13774.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">QEMUCursor</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:29">qxl_cursor</name><parameter_list pos:start="1:30" pos:end="1:67">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:42">PCIQXLDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">qxl</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:58">QXLCursor</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">cursor</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:16">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">QEMUCursor</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">image</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:15">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:66"><expr pos:start="13:5" pos:end="13:65"><name pos:start="13:5" pos:end="13:5">c</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:65"><name pos:start="13:9" pos:end="13:20">cursor_alloc</name><argument_list pos:start="13:21" pos:end="13:65">(<argument pos:start="13:22" pos:end="13:41"><expr pos:start="13:22" pos:end="13:41"><name pos:start="13:22" pos:end="13:41"><name pos:start="13:22" pos:end="13:27">cursor</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:35">header</name><operator pos:start="13:36" pos:end="13:36">.</operator><name pos:start="13:37" pos:end="13:41">width</name></name></expr></argument>, <argument pos:start="13:44" pos:end="13:64"><expr pos:start="13:44" pos:end="13:64"><name pos:start="13:44" pos:end="13:64"><name pos:start="13:44" pos:end="13:49">cursor</name><operator pos:start="13:50" pos:end="13:51">-&gt;</operator><name pos:start="13:52" pos:end="13:57">header</name><operator pos:start="13:58" pos:end="13:58">.</operator><name pos:start="13:59" pos:end="13:64">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:41"><expr pos:start="15:5" pos:end="15:40"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:5">c</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:12">hot_x</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:40"><name pos:start="15:16" pos:end="15:21">cursor</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:29">header</name><operator pos:start="15:30" pos:end="15:30">.</operator><name pos:start="15:31" pos:end="15:40">hot_spot_x</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:5">c</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">hot_y</name></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:21">cursor</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:29">header</name><operator pos:start="17:30" pos:end="17:30">.</operator><name pos:start="17:31" pos:end="17:40">hot_spot_y</name></name></expr>;</expr_stmt>

    <switch pos:start="19:5" pos:end="59:5">switch <condition pos:start="19:12" pos:end="19:32">(<expr pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:18">cursor</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:26">header</name><operator pos:start="19:27" pos:end="19:27">.</operator><name pos:start="19:28" pos:end="19:31">type</name></name></expr>)</condition> <block pos:start="19:34" pos:end="59:5">{<block_content pos:start="21:5" pos:end="57:18">

    <case pos:start="21:5" pos:end="21:33">case <expr pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:32">SPICE_CURSOR_TYPE_ALPHA</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:79"><expr pos:start="23:9" pos:end="23:78"><name pos:start="23:9" pos:end="23:12">size</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <sizeof pos:start="23:16" pos:end="23:31">sizeof<argument_list pos:start="23:22" pos:end="23:31">(<argument pos:start="23:23" pos:end="23:30"><expr pos:start="23:23" pos:end="23:30"><name pos:start="23:23" pos:end="23:30">uint32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="23:33" pos:end="23:33">*</operator> <name pos:start="23:35" pos:end="23:54"><name pos:start="23:35" pos:end="23:40">cursor</name><operator pos:start="23:41" pos:end="23:42">-&gt;</operator><name pos:start="23:43" pos:end="23:48">header</name><operator pos:start="23:49" pos:end="23:49">.</operator><name pos:start="23:50" pos:end="23:54">width</name></name> <operator pos:start="23:56" pos:end="23:56">*</operator> <name pos:start="23:58" pos:end="23:78"><name pos:start="23:58" pos:end="23:63">cursor</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:71">header</name><operator pos:start="23:72" pos:end="23:72">.</operator><name pos:start="23:73" pos:end="23:78">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:50"><expr pos:start="25:9" pos:end="25:49"><call pos:start="25:9" pos:end="25:49"><name pos:start="25:9" pos:end="25:14">memcpy</name><argument_list pos:start="25:15" pos:end="25:49">(<argument pos:start="25:16" pos:end="25:22"><expr pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:16">c</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">data</name></name></expr></argument>, <argument pos:start="25:25" pos:end="25:42"><expr pos:start="25:25" pos:end="25:42"><name pos:start="25:25" pos:end="25:42"><name pos:start="25:25" pos:end="25:30">cursor</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:37">chunk</name><operator pos:start="25:38" pos:end="25:38">.</operator><name pos:start="25:39" pos:end="25:42">data</name></name></expr></argument>, <argument pos:start="25:45" pos:end="25:48"><expr pos:start="25:45" pos:end="25:48"><name pos:start="25:45" pos:end="25:48">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:15">qxl</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:22">debug</name></name> <operator pos:start="27:24" pos:end="27:24">&gt;</operator> <literal type="number" pos:start="27:26" pos:end="27:26">2</literal></expr>)</condition> <block pos:start="27:29" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:51">

            <expr_stmt pos:start="29:13" pos:end="29:51"><expr pos:start="29:13" pos:end="29:50"><call pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:34">cursor_print_ascii_art</name><argument_list pos:start="29:35" pos:end="29:50">(<argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><name pos:start="29:36" pos:end="29:36">c</name></expr></argument>, <argument pos:start="29:39" pos:end="29:49"><expr pos:start="29:39" pos:end="29:49"><literal type="string" pos:start="29:39" pos:end="29:49">"qxl/alpha"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:32">case <expr pos:start="35:10" pos:end="35:31"><name pos:start="35:10" pos:end="35:31">SPICE_CURSOR_TYPE_MONO</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:12">mask</name>  <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:22">cursor</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:29">chunk</name><operator pos:start="37:30" pos:end="37:30">.</operator><name pos:start="37:31" pos:end="37:34">data</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:13">image</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <name pos:start="39:17" pos:end="39:20">mask</name> <operator pos:start="39:22" pos:end="39:22">+</operator> <call pos:start="39:24" pos:end="39:45"><name pos:start="39:24" pos:end="39:42">cursor_get_mono_bpl</name><argument_list pos:start="39:43" pos:end="39:45">(<argument pos:start="39:44" pos:end="39:44"><expr pos:start="39:44" pos:end="39:44"><name pos:start="39:44" pos:end="39:44">c</name></expr></argument>)</argument_list></call> <operator pos:start="39:47" pos:end="39:47">*</operator> <name pos:start="39:49" pos:end="39:56"><name pos:start="39:49" pos:end="39:49">c</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:56">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:63"><expr pos:start="41:9" pos:end="41:62"><call pos:start="41:9" pos:end="41:62"><name pos:start="41:9" pos:end="41:23">cursor_set_mono</name><argument_list pos:start="41:24" pos:end="41:62">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">c</name></expr></argument>, <argument pos:start="41:28" pos:end="41:35"><expr pos:start="41:28" pos:end="41:35"><literal type="number" pos:start="41:28" pos:end="41:35">0xffffff</literal></expr></argument>, <argument pos:start="41:38" pos:end="41:45"><expr pos:start="41:38" pos:end="41:45"><literal type="number" pos:start="41:38" pos:end="41:45">0x000000</literal></expr></argument>, <argument pos:start="41:48" pos:end="41:52"><expr pos:start="41:48" pos:end="41:52"><name pos:start="41:48" pos:end="41:52">image</name></expr></argument>, <argument pos:start="41:55" pos:end="41:55"><expr pos:start="41:55" pos:end="41:55"><literal type="number" pos:start="41:55" pos:end="41:55">1</literal></expr></argument>, <argument pos:start="41:58" pos:end="41:61"><expr pos:start="41:58" pos:end="41:61"><name pos:start="41:58" pos:end="41:61">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:27">(<expr pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:15">qxl</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:22">debug</name></name> <operator pos:start="43:24" pos:end="43:24">&gt;</operator> <literal type="number" pos:start="43:26" pos:end="43:26">2</literal></expr>)</condition> <block pos:start="43:29" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:50">

            <expr_stmt pos:start="45:13" pos:end="45:50"><expr pos:start="45:13" pos:end="45:49"><call pos:start="45:13" pos:end="45:49"><name pos:start="45:13" pos:end="45:34">cursor_print_ascii_art</name><argument_list pos:start="45:35" pos:end="45:49">(<argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">c</name></expr></argument>, <argument pos:start="45:39" pos:end="45:48"><expr pos:start="45:39" pos:end="45:48"><literal type="string" pos:start="45:39" pos:end="45:48">"qxl/mono"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <default pos:start="51:5" pos:end="51:12">default:</default>

        <expr_stmt pos:start="53:9" pos:end="55:51"><expr pos:start="53:9" pos:end="55:50"><call pos:start="53:9" pos:end="55:50"><name pos:start="53:9" pos:end="53:15">fprintf</name><argument_list pos:start="53:16" pos:end="55:50">(<argument pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:22"><name pos:start="53:17" pos:end="53:22">stderr</name></expr></argument>, <argument pos:start="53:25" pos:end="53:56"><expr pos:start="53:25" pos:end="53:56"><literal type="string" pos:start="53:25" pos:end="53:56">"%s: not implemented: type %d\n"</literal></expr></argument>,

                <argument pos:start="55:17" pos:end="55:28"><expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:28">__FUNCTION__</name></expr></argument>, <argument pos:start="55:31" pos:end="55:49"><expr pos:start="55:31" pos:end="55:49"><name pos:start="55:31" pos:end="55:49"><name pos:start="55:31" pos:end="55:36">cursor</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:44">header</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:49">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:18">goto <name pos:start="57:14" pos:end="57:17">fail</name>;</goto>

    </block_content>}</block></switch>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><name pos:start="61:12" pos:end="61:12">c</name></expr>;</return>



<label pos:start="65:1" pos:end="65:5"><name pos:start="65:1" pos:end="65:4">fail</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><call pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:14">cursor_put</name><argument_list pos:start="67:15" pos:end="67:17">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:16">return <expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
