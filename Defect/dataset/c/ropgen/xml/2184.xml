<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2184.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">fetch_active_ports_list</name><parameter_list pos:start="1:35" pos:end="3:77">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">QEMUFile</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">f</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:62">version_id</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:50"><decl pos:start="3:36" pos:end="3:50"><type pos:start="3:36" pos:end="3:50"><name pos:start="3:36" pos:end="3:47">VirtIOSerial</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:50">s</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:76"><decl pos:start="3:53" pos:end="3:76"><type pos:start="3:53" pos:end="3:76"><name pos:start="3:53" pos:end="3:60">uint32_t</name></type> <name pos:start="3:62" pos:end="3:76">nr_active_ports</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:13">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:52"><expr pos:start="11:5" pos:end="11:51"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:16">post_load</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <call pos:start="11:20" pos:end="11:51"><name pos:start="11:20" pos:end="11:28">g_malloc0</name><argument_list pos:start="11:29" pos:end="11:51">(<argument pos:start="11:30" pos:end="11:50"><expr pos:start="11:30" pos:end="11:50"><sizeof pos:start="11:30" pos:end="11:50">sizeof<argument_list pos:start="11:36" pos:end="11:50">(<argument pos:start="11:37" pos:end="11:49"><expr pos:start="11:37" pos:end="11:49"><operator pos:start="11:37" pos:end="11:37">*</operator><name pos:start="11:38" pos:end="11:49"><name pos:start="11:38" pos:end="11:38">s</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">post_load</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">post_load</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:33">nr_active_ports</name></name> <operator pos:start="13:35" pos:end="13:35">=</operator> <name pos:start="13:37" pos:end="13:51">nr_active_ports</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:70"><expr pos:start="15:5" pos:end="17:69"><name pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:16">post_load</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:27">connected</name></name> <operator pos:start="15:29" pos:end="15:29">=</operator>

        <call pos:start="17:9" pos:end="17:69"><name pos:start="17:9" pos:end="17:17">g_malloc0</name><argument_list pos:start="17:18" pos:end="17:69">(<argument pos:start="17:19" pos:end="17:68"><expr pos:start="17:19" pos:end="17:68"><sizeof pos:start="17:19" pos:end="17:50">sizeof<argument_list pos:start="17:25" pos:end="17:50">(<argument pos:start="17:26" pos:end="17:49"><expr pos:start="17:26" pos:end="17:49"><operator pos:start="17:26" pos:end="17:26">*</operator><name pos:start="17:27" pos:end="17:49"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:38">post_load</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:49">connected</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:52" pos:end="17:52">*</operator> <name pos:start="17:54" pos:end="17:68">nr_active_ports</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="25:47"><expr pos:start="21:5" pos:end="25:46"><name pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">post_load</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">timer</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="25:46"><name pos:start="21:27" pos:end="21:38">timer_new_ns</name><argument_list pos:start="21:39" pos:end="25:46">(<argument pos:start="21:40" pos:end="21:57"><expr pos:start="21:40" pos:end="21:57"><name pos:start="21:40" pos:end="21:57">QEMU_CLOCK_VIRTUAL</name></expr></argument>,

                                            <argument pos:start="23:45" pos:end="23:76"><expr pos:start="23:45" pos:end="23:76"><name pos:start="23:45" pos:end="23:76">virtio_serial_post_load_timer_cb</name></expr></argument>,

                                            <argument pos:start="25:45" pos:end="25:45"><expr pos:start="25:45" pos:end="25:45"><name pos:start="25:45" pos:end="25:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:42">/* Items in struct VirtIOSerialPort */</comment>

    <for pos:start="31:5" pos:end="97:5">for <control pos:start="31:9" pos:end="31:41">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:36"><expr pos:start="31:17" pos:end="31:35"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:35">nr_active_ports</name></expr>;</condition> <incr pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:38">i</name><operator pos:start="31:39" pos:end="31:40">++</operator></expr></incr>)</control> <block pos:start="31:43" pos:end="97:5">{<block_content pos:start="33:9" pos:end="95:9">

        <decl_stmt pos:start="33:9" pos:end="33:31"><decl pos:start="33:9" pos:end="33:30"><type pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:24">VirtIOSerialPort</name> <modifier pos:start="33:26" pos:end="33:26">*</modifier></type><name pos:start="33:27" pos:end="33:30">port</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:20"><decl pos:start="35:9" pos:end="35:19"><type pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:16">uint32_t</name></type> <name pos:start="35:18" pos:end="35:19">id</name></decl>;</decl_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:10">id</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:29"><name pos:start="39:14" pos:end="39:26">qemu_get_be32</name><argument_list pos:start="39:27" pos:end="39:29">(<argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:12">port</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:37"><name pos:start="41:16" pos:end="41:30">find_port_by_id</name><argument_list pos:start="41:31" pos:end="41:37">(<argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><name pos:start="41:32" pos:end="41:32">s</name></expr></argument>, <argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:18">(<expr pos:start="43:13" pos:end="43:17"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:17">port</name></expr>)</condition> <block pos:start="43:20" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:27">

            <return pos:start="45:13" pos:end="45:27">return <expr pos:start="45:20" pos:end="45:26"><operator pos:start="45:20" pos:end="45:20">-</operator><name pos:start="45:21" pos:end="45:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:12">port</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:29">guest_connected</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <call pos:start="51:33" pos:end="51:48"><name pos:start="51:33" pos:end="51:45">qemu_get_byte</name><argument_list pos:start="51:46" pos:end="51:48">(<argument pos:start="51:47" pos:end="51:47"><expr pos:start="51:47" pos:end="51:47"><name pos:start="51:47" pos:end="51:47">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:20">post_load</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:31">connected</name><index pos:start="53:32" pos:end="53:34">[<expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">i</name></expr>]</index></name><operator pos:start="53:35" pos:end="53:35">.</operator><name pos:start="53:36" pos:end="53:39">port</name> <operator pos:start="53:41" pos:end="53:41">=</operator> <name pos:start="53:43" pos:end="53:46">port</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:69"><expr pos:start="55:9" pos:end="55:68"><name pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">post_load</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:31">connected</name><index pos:start="55:32" pos:end="55:34">[<expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">i</name></expr>]</index></name><operator pos:start="55:35" pos:end="55:35">.</operator><name pos:start="55:36" pos:end="55:49">host_connected</name> <operator pos:start="55:51" pos:end="55:51">=</operator> <call pos:start="55:53" pos:end="55:68"><name pos:start="55:53" pos:end="55:65">qemu_get_byte</name><argument_list pos:start="55:66" pos:end="55:68">(<argument pos:start="55:67" pos:end="55:67"><expr pos:start="55:67" pos:end="55:67"><name pos:start="55:67" pos:end="55:67">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="95:9"><if pos:start="59:9" pos:end="95:9">if <condition pos:start="59:12" pos:end="59:27">(<expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:22">version_id</name> <operator pos:start="59:24" pos:end="59:24">&gt;</operator> <literal type="number" pos:start="59:26" pos:end="59:26">2</literal></expr>)</condition> <block pos:start="59:29" pos:end="95:9">{<block_content pos:start="61:13" pos:end="93:13">

            <decl_stmt pos:start="61:13" pos:end="61:33"><decl pos:start="61:13" pos:end="61:32"><type pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:20">uint32_t</name></type> <name pos:start="61:22" pos:end="61:32">elem_popped</name></decl>;</decl_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:44"><expr pos:start="65:13" pos:end="65:43"><call pos:start="65:13" pos:end="65:43"><name pos:start="65:13" pos:end="65:26">qemu_get_be32s</name><argument_list pos:start="65:27" pos:end="65:43">(<argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><name pos:start="65:28" pos:end="65:28">f</name></expr></argument>, <argument pos:start="65:31" pos:end="65:42"><expr pos:start="65:31" pos:end="65:42"><operator pos:start="65:31" pos:end="65:31">&amp;</operator><name pos:start="65:32" pos:end="65:42">elem_popped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="67:13" pos:end="93:13"><if pos:start="67:13" pos:end="93:13">if <condition pos:start="67:16" pos:end="67:28">(<expr pos:start="67:17" pos:end="67:27"><name pos:start="67:17" pos:end="67:27">elem_popped</name></expr>)</condition> <block pos:start="67:30" pos:end="93:13">{<block_content pos:start="69:17" pos:end="91:57">

                <expr_stmt pos:start="69:17" pos:end="69:50"><expr pos:start="69:17" pos:end="69:49"><call pos:start="69:17" pos:end="69:49"><name pos:start="69:17" pos:end="69:30">qemu_get_be32s</name><argument_list pos:start="69:31" pos:end="69:49">(<argument pos:start="69:32" pos:end="69:32"><expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">f</name></expr></argument>, <argument pos:start="69:35" pos:end="69:48"><expr pos:start="69:35" pos:end="69:48"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:48"><name pos:start="69:36" pos:end="69:39">port</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:48">iov_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:53"><expr pos:start="71:17" pos:end="71:52"><call pos:start="71:17" pos:end="71:52"><name pos:start="71:17" pos:end="71:30">qemu_get_be64s</name><argument_list pos:start="71:31" pos:end="71:52">(<argument pos:start="71:32" pos:end="71:32"><expr pos:start="71:32" pos:end="71:32"><name pos:start="71:32" pos:end="71:32">f</name></expr></argument>, <argument pos:start="71:35" pos:end="71:51"><expr pos:start="71:35" pos:end="71:51"><operator pos:start="71:35" pos:end="71:35">&amp;</operator><name pos:start="71:36" pos:end="71:51"><name pos:start="71:36" pos:end="71:39">port</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:51">iov_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="75:17" pos:end="77:52"><expr pos:start="75:17" pos:end="77:51"><call pos:start="75:17" pos:end="77:51"><name pos:start="75:17" pos:end="75:31">qemu_get_buffer</name><argument_list pos:start="75:32" pos:end="77:51">(<argument pos:start="75:33" pos:end="75:33"><expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">f</name></expr></argument>, <argument pos:start="75:36" pos:end="75:63"><expr pos:start="75:36" pos:end="75:63"><operator pos:start="75:36" pos:end="75:36">(</operator><name pos:start="75:37" pos:end="75:44">unsigned</name> <name pos:start="75:46" pos:end="75:49">char</name> <operator pos:start="75:51" pos:end="75:51">*</operator><operator pos:start="75:52" pos:end="75:52">)</operator><operator pos:start="75:53" pos:end="75:53">&amp;</operator><name pos:start="75:54" pos:end="75:63"><name pos:start="75:54" pos:end="75:57">port</name><operator pos:start="75:58" pos:end="75:59">-&gt;</operator><name pos:start="75:60" pos:end="75:63">elem</name></name></expr></argument>,

                                <argument pos:start="77:33" pos:end="77:50"><expr pos:start="77:33" pos:end="77:50"><sizeof pos:start="77:33" pos:end="77:50">sizeof<argument_list pos:start="77:39" pos:end="77:50">(<argument pos:start="77:40" pos:end="77:49"><expr pos:start="77:40" pos:end="77:49"><name pos:start="77:40" pos:end="77:49"><name pos:start="77:40" pos:end="77:43">port</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:49">elem</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:43"><expr pos:start="79:17" pos:end="79:42"><call pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:29">virtqueue_map</name><argument_list pos:start="79:30" pos:end="79:42">(<argument pos:start="79:31" pos:end="79:41"><expr pos:start="79:31" pos:end="79:41"><operator pos:start="79:31" pos:end="79:31">&amp;</operator><name pos:start="79:32" pos:end="79:41"><name pos:start="79:32" pos:end="79:35">port</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:41">elem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="83:17" pos:end="89:19">/*

                 *  Port was throttled on source machine.  Let's

                 *  unthrottle it here so data starts flowing again.

                 */</comment>

                <expr_stmt pos:start="91:17" pos:end="91:57"><expr pos:start="91:17" pos:end="91:56"><call pos:start="91:17" pos:end="91:56"><name pos:start="91:17" pos:end="91:43">virtio_serial_throttle_port</name><argument_list pos:start="91:44" pos:end="91:56">(<argument pos:start="91:45" pos:end="91:48"><expr pos:start="91:45" pos:end="91:48"><name pos:start="91:45" pos:end="91:48">port</name></expr></argument>, <argument pos:start="91:51" pos:end="91:55"><expr pos:start="91:51" pos:end="91:55"><name pos:start="91:51" pos:end="91:55">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="99:5" pos:end="99:38"><expr pos:start="99:5" pos:end="99:37"><call pos:start="99:5" pos:end="99:37"><name pos:start="99:5" pos:end="99:13">timer_mod</name><argument_list pos:start="99:14" pos:end="99:37">(<argument pos:start="99:15" pos:end="99:33"><expr pos:start="99:15" pos:end="99:33"><name pos:start="99:15" pos:end="99:33"><name pos:start="99:15" pos:end="99:15">s</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:26">post_load</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:33">timer</name></name></expr></argument>, <argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><literal type="number" pos:start="99:36" pos:end="99:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
