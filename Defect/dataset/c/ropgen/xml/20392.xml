<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20392.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:35">ff_h264_execute_ref_pic_marking</name><parameter_list pos:start="1:36" pos:end="1:79">(<parameter pos:start="1:37" pos:end="1:50"><decl pos:start="1:37" pos:end="1:50"><type pos:start="1:37" pos:end="1:50"><name pos:start="1:37" pos:end="1:47">H264Context</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">h</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">MMCO</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">mmco</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:78">mmco_count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="343:1">{<block_content pos:start="5:5" pos:end="341:65">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:20">av_uninit</name><argument_list pos:start="5:21" pos:end="5:23">(<argument pos:start="5:22" pos:end="5:22"><expr pos:start="5:22" pos:end="5:22"><name pos:start="5:22" pos:end="5:22">j</name></expr></argument>)</argument_list></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:28">current_ref_assigned</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr></init></decl>, <decl pos:start="7:35" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:35" pos:end="7:37">err</name> <init pos:start="7:39" pos:end="7:41">= <expr pos:start="7:41" pos:end="7:41"><literal type="number" pos:start="7:41" pos:end="7:41">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">H264Picture</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:26">av_uninit</name><argument_list pos:start="9:27" pos:end="9:31">(<argument pos:start="9:28" pos:end="9:30"><expr pos:start="9:28" pos:end="9:30"><name pos:start="9:28" pos:end="9:30">pic</name></expr></argument>)</argument_list></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:57"><if pos:start="13:5" pos:end="15:57">if <condition pos:start="13:8" pos:end="13:61">(<expr pos:start="13:9" pos:end="13:60"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:10">h</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">avctx</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:24">debug</name></name> <operator pos:start="13:26" pos:end="13:26">&amp;</operator> <name pos:start="13:28" pos:end="13:40">FF_DEBUG_MMCO</name><operator pos:start="13:41" pos:end="13:41">)</operator> <operator pos:start="13:43" pos:end="13:44">&amp;&amp;</operator> <name pos:start="13:46" pos:end="13:55">mmco_count</name> <operator pos:start="13:57" pos:end="13:58">==</operator> <literal type="number" pos:start="13:60" pos:end="13:60">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:57"><block_content pos:start="15:9" pos:end="15:57">

        <expr_stmt pos:start="15:9" pos:end="15:57"><expr pos:start="15:9" pos:end="15:56"><call pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:56">(<argument pos:start="15:16" pos:end="15:23"><expr pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:23"><name pos:start="15:16" pos:end="15:16">h</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:23">avctx</name></name></expr></argument>, <argument pos:start="15:26" pos:end="15:37"><expr pos:start="15:26" pos:end="15:37"><name pos:start="15:26" pos:end="15:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:40" pos:end="15:55"><expr pos:start="15:40" pos:end="15:55"><literal type="string" pos:start="15:40" pos:end="15:55">"no mmco here\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="19:5" pos:end="215:5">for <control pos:start="19:9" pos:end="19:36">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:31"><expr pos:start="19:17" pos:end="19:30"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:30">mmco_count</name></expr>;</condition> <incr pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:33">i</name><operator pos:start="19:34" pos:end="19:35">++</operator></expr></incr>)</control> <block pos:start="19:38" pos:end="215:5">{<block_content pos:start="21:9" pos:end="213:9">

        <decl_stmt pos:start="21:9" pos:end="21:55"><decl pos:start="21:9" pos:end="21:32"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:21">av_uninit</name><argument_list pos:start="21:22" pos:end="21:32">(<argument pos:start="21:23" pos:end="21:31"><expr pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:31">structure</name></expr></argument>)</argument_list></decl>, <decl pos:start="21:35" pos:end="21:54"><type ref="prev" pos:start="21:9" pos:end="21:11"/><name pos:start="21:35" pos:end="21:43">av_uninit</name><argument_list pos:start="21:44" pos:end="21:54">(<argument pos:start="21:45" pos:end="21:53"><expr pos:start="21:45" pos:end="21:53"><name pos:start="21:45" pos:end="21:53">frame_num</name></expr></argument>)</argument_list></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="27:66"><if pos:start="23:9" pos:end="27:66">if <condition pos:start="23:12" pos:end="23:44">(<expr pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">avctx</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:27">debug</name></name> <operator pos:start="23:29" pos:end="23:29">&amp;</operator> <name pos:start="23:31" pos:end="23:43">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="27:66"><block_content pos:start="25:13" pos:end="27:66">

            <expr_stmt pos:start="25:13" pos:end="27:66"><expr pos:start="25:13" pos:end="27:65"><call pos:start="25:13" pos:end="27:65"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:65">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">h</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:44" pos:end="25:60"><expr pos:start="25:44" pos:end="25:60"><literal type="string" pos:start="25:44" pos:end="25:60">"mmco:%d %d %d\n"</literal></expr></argument>, <argument pos:start="25:63" pos:end="25:79"><expr pos:start="25:63" pos:end="25:79"><name pos:start="25:63" pos:end="25:72"><name pos:start="25:63" pos:end="25:63">h</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:69">mmco</name><index pos:start="25:70" pos:end="25:72">[<expr pos:start="25:71" pos:end="25:71"><name pos:start="25:71" pos:end="25:71">i</name></expr>]</index></name><operator pos:start="25:73" pos:end="25:73">.</operator><name pos:start="25:74" pos:end="25:79">opcode</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:43"><expr pos:start="27:20" pos:end="27:43"><name pos:start="27:20" pos:end="27:29"><name pos:start="27:20" pos:end="27:20">h</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:26">mmco</name><index pos:start="27:27" pos:end="27:29">[<expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">i</name></expr>]</index></name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:43">short_pic_num</name></expr></argument>, <argument pos:start="27:46" pos:end="27:64"><expr pos:start="27:46" pos:end="27:64"><name pos:start="27:46" pos:end="27:55"><name pos:start="27:46" pos:end="27:46">h</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:52">mmco</name><index pos:start="27:53" pos:end="27:55">[<expr pos:start="27:54" pos:end="27:54"><name pos:start="27:54" pos:end="27:54">i</name></expr>]</index></name><operator pos:start="27:56" pos:end="27:56">.</operator><name pos:start="27:57" pos:end="27:64">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="57:9"><if pos:start="31:9" pos:end="57:9">if <condition pos:start="31:12" pos:end="33:46">(<expr pos:start="31:13" pos:end="33:45"><name pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:16">mmco</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">i</name></expr>]</index></name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:26">opcode</name> <operator pos:start="31:28" pos:end="31:29">==</operator> <name pos:start="31:31" pos:end="31:47">MMCO_SHORT2UNUSED</name> <operator pos:start="31:49" pos:end="31:50">||</operator>

            <name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:16">mmco</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name><operator pos:start="33:20" pos:end="33:20">.</operator><name pos:start="33:21" pos:end="33:26">opcode</name> <operator pos:start="33:28" pos:end="33:29">==</operator> <name pos:start="33:31" pos:end="33:45">MMCO_SHORT2LONG</name></expr>)</condition> <block pos:start="33:48" pos:end="57:9">{<block_content pos:start="35:13" pos:end="55:13">

            <expr_stmt pos:start="35:13" pos:end="35:78"><expr pos:start="35:13" pos:end="35:77"><name pos:start="35:13" pos:end="35:21">frame_num</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:77"><name pos:start="35:25" pos:end="35:39">pic_num_extract</name><argument_list pos:start="35:40" pos:end="35:77">(<argument pos:start="35:41" pos:end="35:41"><expr pos:start="35:41" pos:end="35:41"><name pos:start="35:41" pos:end="35:41">h</name></expr></argument>, <argument pos:start="35:44" pos:end="35:64"><expr pos:start="35:44" pos:end="35:64"><name pos:start="35:44" pos:end="35:50"><name pos:start="35:44" pos:end="35:47">mmco</name><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><name pos:start="35:49" pos:end="35:49">i</name></expr>]</index></name><operator pos:start="35:51" pos:end="35:51">.</operator><name pos:start="35:52" pos:end="35:64">short_pic_num</name></expr></argument>, <argument pos:start="35:67" pos:end="35:76"><expr pos:start="35:67" pos:end="35:76"><operator pos:start="35:67" pos:end="35:67">&amp;</operator><name pos:start="35:68" pos:end="35:76">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:53"><expr pos:start="37:13" pos:end="37:52"><name pos:start="37:13" pos:end="37:15">pic</name>       <operator pos:start="37:23" pos:end="37:23">=</operator> <call pos:start="37:25" pos:end="37:52"><name pos:start="37:25" pos:end="37:34">find_short</name><argument_list pos:start="37:35" pos:end="37:52">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">h</name></expr></argument>, <argument pos:start="37:39" pos:end="37:47"><expr pos:start="37:39" pos:end="37:47"><name pos:start="37:39" pos:end="37:47">frame_num</name></expr></argument>, <argument pos:start="37:50" pos:end="37:51"><expr pos:start="37:50" pos:end="37:51"><operator pos:start="37:50" pos:end="37:50">&amp;</operator><name pos:start="37:51" pos:end="37:51">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="55:13"><if pos:start="39:13" pos:end="55:13">if <condition pos:start="39:16" pos:end="39:21">(<expr pos:start="39:17" pos:end="39:20"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:20">pic</name></expr>)</condition> <block pos:start="39:23" pos:end="55:13">{<block_content pos:start="41:17" pos:end="53:25">

                <if_stmt pos:start="41:17" pos:end="51:17"><if pos:start="41:17" pos:end="51:17">if <condition pos:start="41:20" pos:end="45:74">(<expr pos:start="41:21" pos:end="45:73"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:24">mmco</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><name pos:start="41:26" pos:end="41:26">i</name></expr>]</index></name><operator pos:start="41:28" pos:end="41:28">.</operator><name pos:start="41:29" pos:end="41:34">opcode</name> <operator pos:start="41:36" pos:end="41:37">!=</operator> <name pos:start="41:39" pos:end="41:53">MMCO_SHORT2LONG</name> <operator pos:start="41:55" pos:end="41:56">||</operator>

                    <operator pos:start="43:21" pos:end="43:21">!</operator><name pos:start="43:22" pos:end="43:50"><name pos:start="43:22" pos:end="43:22">h</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:32">long_ref</name><index pos:start="43:33" pos:end="43:50">[<expr pos:start="43:34" pos:end="43:49"><name pos:start="43:34" pos:end="43:40"><name pos:start="43:34" pos:end="43:37">mmco</name><index pos:start="43:38" pos:end="43:40">[<expr pos:start="43:39" pos:end="43:39"><name pos:start="43:39" pos:end="43:39">i</name></expr>]</index></name><operator pos:start="43:41" pos:end="43:41">.</operator><name pos:start="43:42" pos:end="43:49">long_arg</name></expr>]</index></name>    <operator pos:start="43:55" pos:end="43:56">||</operator>

                    <name pos:start="45:21" pos:end="45:49"><name pos:start="45:21" pos:end="45:21">h</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:31">long_ref</name><index pos:start="45:32" pos:end="45:49">[<expr pos:start="45:33" pos:end="45:48"><name pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:36">mmco</name><index pos:start="45:37" pos:end="45:39">[<expr pos:start="45:38" pos:end="45:38"><name pos:start="45:38" pos:end="45:38">i</name></expr>]</index></name><operator pos:start="45:40" pos:end="45:40">.</operator><name pos:start="45:41" pos:end="45:48">long_arg</name></expr>]</index></name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:60">frame_num</name> <operator pos:start="45:62" pos:end="45:63">!=</operator> <name pos:start="45:65" pos:end="45:73">frame_num</name></expr>)</condition> <block pos:start="45:76" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:46">

                    <expr_stmt pos:start="47:21" pos:end="47:82"><expr pos:start="47:21" pos:end="47:81"><call pos:start="47:21" pos:end="47:81"><name pos:start="47:21" pos:end="47:26">av_log</name><argument_list pos:start="47:27" pos:end="47:81">(<argument pos:start="47:28" pos:end="47:35"><expr pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:35"><name pos:start="47:28" pos:end="47:28">h</name><operator pos:start="47:29" pos:end="47:30">-&gt;</operator><name pos:start="47:31" pos:end="47:35">avctx</name></name></expr></argument>, <argument pos:start="47:38" pos:end="47:49"><expr pos:start="47:38" pos:end="47:49"><name pos:start="47:38" pos:end="47:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:52" pos:end="47:80"><expr pos:start="47:52" pos:end="47:80"><literal type="string" pos:start="47:52" pos:end="47:80">"mmco: unref short failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:46"><expr pos:start="49:21" pos:end="49:45"><name pos:start="49:21" pos:end="49:23">err</name> <operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:45">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <continue pos:start="53:17" pos:end="53:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="61:9" pos:end="213:9">switch <condition pos:start="61:16" pos:end="61:31">(<expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:20">mmco</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">i</name></expr>]</index></name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:30">opcode</name></expr>)</condition> <block pos:start="61:33" pos:end="213:9">{<block_content pos:start="63:9" pos:end="211:27">

        <case pos:start="63:9" pos:end="63:31">case <expr pos:start="63:14" pos:end="63:30"><name pos:start="63:14" pos:end="63:30">MMCO_SHORT2UNUSED</name></expr>:</case>

            <if_stmt pos:start="65:13" pos:end="69:69"><if pos:start="65:13" pos:end="69:69">if <condition pos:start="65:16" pos:end="65:48">(<expr pos:start="65:17" pos:end="65:47"><name pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:17">h</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">avctx</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:31">debug</name></name> <operator pos:start="65:33" pos:end="65:33">&amp;</operator> <name pos:start="65:35" pos:end="65:47">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="69:69"><block_content pos:start="67:17" pos:end="69:69">

                <expr_stmt pos:start="67:17" pos:end="69:69"><expr pos:start="67:17" pos:end="69:68"><call pos:start="67:17" pos:end="69:68"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="69:68">(<argument pos:start="67:24" pos:end="67:31"><expr pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:31"><name pos:start="67:24" pos:end="67:24">h</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">avctx</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:45"><expr pos:start="67:34" pos:end="67:45"><name pos:start="67:34" pos:end="67:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:48" pos:end="67:80"><expr pos:start="67:48" pos:end="67:80"><literal type="string" pos:start="67:48" pos:end="67:80">"mmco: unref short %d count %d\n"</literal></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:47"><expr pos:start="69:24" pos:end="69:47"><name pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:24">h</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:30">mmco</name><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><name pos:start="69:32" pos:end="69:32">i</name></expr>]</index></name><operator pos:start="69:34" pos:end="69:34">.</operator><name pos:start="69:35" pos:end="69:47">short_pic_num</name></expr></argument>, <argument pos:start="69:50" pos:end="69:67"><expr pos:start="69:50" pos:end="69:67"><name pos:start="69:50" pos:end="69:67"><name pos:start="69:50" pos:end="69:50">h</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:67">short_ref_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:63"><expr pos:start="71:13" pos:end="71:62"><call pos:start="71:13" pos:end="71:62"><name pos:start="71:13" pos:end="71:24">remove_short</name><argument_list pos:start="71:25" pos:end="71:62">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">h</name></expr></argument>, <argument pos:start="71:29" pos:end="71:37"><expr pos:start="71:29" pos:end="71:37"><name pos:start="71:29" pos:end="71:37">frame_num</name></expr></argument>, <argument pos:start="71:40" pos:end="71:61"><expr pos:start="71:40" pos:end="71:61"><name pos:start="71:40" pos:end="71:48">structure</name> <operator pos:start="71:50" pos:end="71:50">^</operator> <name pos:start="71:52" pos:end="71:61">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <case pos:start="75:9" pos:end="75:29">case <expr pos:start="75:14" pos:end="75:28"><name pos:start="75:14" pos:end="75:28">MMCO_SHORT2LONG</name></expr>:</case>

                <if_stmt pos:start="77:17" pos:end="79:56"><if pos:start="77:17" pos:end="79:56">if <condition pos:start="77:20" pos:end="77:57">(<expr pos:start="77:21" pos:end="77:56"><name pos:start="77:21" pos:end="77:49"><name pos:start="77:21" pos:end="77:21">h</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:31">long_ref</name><index pos:start="77:32" pos:end="77:49">[<expr pos:start="77:33" pos:end="77:48"><name pos:start="77:33" pos:end="77:39"><name pos:start="77:33" pos:end="77:36">mmco</name><index pos:start="77:37" pos:end="77:39">[<expr pos:start="77:38" pos:end="77:38"><name pos:start="77:38" pos:end="77:38">i</name></expr>]</index></name><operator pos:start="77:40" pos:end="77:40">.</operator><name pos:start="77:41" pos:end="77:48">long_arg</name></expr>]</index></name> <operator pos:start="77:51" pos:end="77:52">!=</operator> <name pos:start="77:54" pos:end="77:56">pic</name></expr>)</condition><block type="pseudo" pos:start="79:21" pos:end="79:56"><block_content pos:start="79:21" pos:end="79:56">

                    <expr_stmt pos:start="79:21" pos:end="79:56"><expr pos:start="79:21" pos:end="79:55"><call pos:start="79:21" pos:end="79:55"><name pos:start="79:21" pos:end="79:31">remove_long</name><argument_list pos:start="79:32" pos:end="79:55">(<argument pos:start="79:33" pos:end="79:33"><expr pos:start="79:33" pos:end="79:33"><name pos:start="79:33" pos:end="79:33">h</name></expr></argument>, <argument pos:start="79:36" pos:end="79:51"><expr pos:start="79:36" pos:end="79:51"><name pos:start="79:36" pos:end="79:42"><name pos:start="79:36" pos:end="79:39">mmco</name><index pos:start="79:40" pos:end="79:42">[<expr pos:start="79:41" pos:end="79:41"><name pos:start="79:41" pos:end="79:41">i</name></expr>]</index></name><operator pos:start="79:43" pos:end="79:43">.</operator><name pos:start="79:44" pos:end="79:51">long_arg</name></expr></argument>, <argument pos:start="79:54" pos:end="79:54"><expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="83:17" pos:end="83:44"><expr pos:start="83:17" pos:end="83:43"><call pos:start="83:17" pos:end="83:43"><name pos:start="83:17" pos:end="83:37">remove_short_at_index</name><argument_list pos:start="83:38" pos:end="83:43">(<argument pos:start="83:39" pos:end="83:39"><expr pos:start="83:39" pos:end="83:39"><name pos:start="83:39" pos:end="83:39">h</name></expr></argument>, <argument pos:start="83:42" pos:end="83:42"><expr pos:start="83:42" pos:end="83:42"><name pos:start="83:42" pos:end="83:42">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:54"><expr pos:start="85:17" pos:end="85:53"><name pos:start="85:17" pos:end="85:47"><name pos:start="85:17" pos:end="85:17">h</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:27">long_ref</name><index pos:start="85:28" pos:end="85:47">[ <expr pos:start="85:30" pos:end="85:45"><name pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:33">mmco</name><index pos:start="85:34" pos:end="85:36">[<expr pos:start="85:35" pos:end="85:35"><name pos:start="85:35" pos:end="85:35">i</name></expr>]</index></name><operator pos:start="85:37" pos:end="85:37">.</operator><name pos:start="85:38" pos:end="85:45">long_arg</name></expr> ]</index></name> <operator pos:start="85:49" pos:end="85:49">=</operator> <name pos:start="85:51" pos:end="85:53">pic</name></expr>;</expr_stmt>

                <if_stmt pos:start="87:17" pos:end="93:17"><if pos:start="87:17" pos:end="93:17">if <condition pos:start="87:20" pos:end="87:50">(<expr pos:start="87:21" pos:end="87:49"><name pos:start="87:21" pos:end="87:49"><name pos:start="87:21" pos:end="87:21">h</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:31">long_ref</name><index pos:start="87:32" pos:end="87:49">[<expr pos:start="87:33" pos:end="87:48"><name pos:start="87:33" pos:end="87:39"><name pos:start="87:33" pos:end="87:36">mmco</name><index pos:start="87:37" pos:end="87:39">[<expr pos:start="87:38" pos:end="87:38"><name pos:start="87:38" pos:end="87:38">i</name></expr>]</index></name><operator pos:start="87:40" pos:end="87:40">.</operator><name pos:start="87:41" pos:end="87:48">long_arg</name></expr>]</index></name></expr>)</condition> <block pos:start="87:52" pos:end="93:17">{<block_content pos:start="89:21" pos:end="91:40">

                    <expr_stmt pos:start="89:21" pos:end="89:64"><expr pos:start="89:21" pos:end="89:63"><name pos:start="89:21" pos:end="89:49"><name pos:start="89:21" pos:end="89:21">h</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:31">long_ref</name><index pos:start="89:32" pos:end="89:49">[<expr pos:start="89:33" pos:end="89:48"><name pos:start="89:33" pos:end="89:39"><name pos:start="89:33" pos:end="89:36">mmco</name><index pos:start="89:37" pos:end="89:39">[<expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">i</name></expr>]</index></name><operator pos:start="89:40" pos:end="89:40">.</operator><name pos:start="89:41" pos:end="89:48">long_arg</name></expr>]</index></name><operator pos:start="89:50" pos:end="89:51">-&gt;</operator><name pos:start="89:52" pos:end="89:59">long_ref</name> <operator pos:start="89:61" pos:end="89:61">=</operator> <literal type="number" pos:start="89:63" pos:end="89:63">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:40"><expr pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:37"><name pos:start="91:21" pos:end="91:21">h</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:37">long_ref_count</name></name><operator pos:start="91:38" pos:end="91:39">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:30">case <expr pos:start="97:14" pos:end="97:29"><name pos:start="97:14" pos:end="97:29">MMCO_LONG2UNUSED</name></expr>:</case>

            <expr_stmt pos:start="99:13" pos:end="99:67"><expr pos:start="99:13" pos:end="99:66"><name pos:start="99:13" pos:end="99:13">j</name>   <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:66"><name pos:start="99:19" pos:end="99:33">pic_num_extract</name><argument_list pos:start="99:34" pos:end="99:66">(<argument pos:start="99:35" pos:end="99:35"><expr pos:start="99:35" pos:end="99:35"><name pos:start="99:35" pos:end="99:35">h</name></expr></argument>, <argument pos:start="99:38" pos:end="99:53"><expr pos:start="99:38" pos:end="99:53"><name pos:start="99:38" pos:end="99:44"><name pos:start="99:38" pos:end="99:41">mmco</name><index pos:start="99:42" pos:end="99:44">[<expr pos:start="99:43" pos:end="99:43"><name pos:start="99:43" pos:end="99:43">i</name></expr>]</index></name><operator pos:start="99:45" pos:end="99:45">.</operator><name pos:start="99:46" pos:end="99:53">long_arg</name></expr></argument>, <argument pos:start="99:56" pos:end="99:65"><expr pos:start="99:56" pos:end="99:65"><operator pos:start="99:56" pos:end="99:56">&amp;</operator><name pos:start="99:57" pos:end="99:65">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:33"><expr pos:start="101:13" pos:end="101:32"><name pos:start="101:13" pos:end="101:15">pic</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:32"><name pos:start="101:19" pos:end="101:19">h</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:29">long_ref</name><index pos:start="101:30" pos:end="101:32">[<expr pos:start="101:31" pos:end="101:31"><name pos:start="101:31" pos:end="101:31">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="109:77"><if pos:start="103:13" pos:end="107:13">if <condition pos:start="103:16" pos:end="103:20">(<expr pos:start="103:17" pos:end="103:19"><name pos:start="103:17" pos:end="103:19">pic</name></expr>)</condition> <block pos:start="103:22" pos:end="107:13">{<block_content pos:start="105:17" pos:end="105:58">

                <expr_stmt pos:start="105:17" pos:end="105:58"><expr pos:start="105:17" pos:end="105:57"><call pos:start="105:17" pos:end="105:57"><name pos:start="105:17" pos:end="105:27">remove_long</name><argument_list pos:start="105:28" pos:end="105:57">(<argument pos:start="105:29" pos:end="105:29"><expr pos:start="105:29" pos:end="105:29"><name pos:start="105:29" pos:end="105:29">h</name></expr></argument>, <argument pos:start="105:32" pos:end="105:32"><expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">j</name></expr></argument>, <argument pos:start="105:35" pos:end="105:56"><expr pos:start="105:35" pos:end="105:56"><name pos:start="105:35" pos:end="105:43">structure</name> <operator pos:start="105:45" pos:end="105:45">^</operator> <name pos:start="105:47" pos:end="105:56">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="107:15" pos:end="109:77">else if <condition pos:start="107:23" pos:end="107:55">(<expr pos:start="107:24" pos:end="107:54"><name pos:start="107:24" pos:end="107:38"><name pos:start="107:24" pos:end="107:24">h</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:31">avctx</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:38">debug</name></name> <operator pos:start="107:40" pos:end="107:40">&amp;</operator> <name pos:start="107:42" pos:end="107:54">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:77"><block_content pos:start="109:17" pos:end="109:77">

                <expr_stmt pos:start="109:17" pos:end="109:77"><expr pos:start="109:17" pos:end="109:76"><call pos:start="109:17" pos:end="109:76"><name pos:start="109:17" pos:end="109:22">av_log</name><argument_list pos:start="109:23" pos:end="109:76">(<argument pos:start="109:24" pos:end="109:31"><expr pos:start="109:24" pos:end="109:31"><name pos:start="109:24" pos:end="109:31"><name pos:start="109:24" pos:end="109:24">h</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:31">avctx</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:45"><expr pos:start="109:34" pos:end="109:45"><name pos:start="109:34" pos:end="109:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:48" pos:end="109:75"><expr pos:start="109:48" pos:end="109:75"><literal type="string" pos:start="109:48" pos:end="109:75">"mmco: unref long failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:23">case <expr pos:start="113:14" pos:end="113:22"><name pos:start="113:14" pos:end="113:22">MMCO_LONG</name></expr>:</case>

                    <comment type="line" pos:start="115:21" pos:end="115:91">// Comment below left from previous code as it is an interresting note.</comment>

                    <comment type="block" pos:start="117:21" pos:end="127:23">/* First field in pair is in short term list or

                     * at a different long term index.

                     * This is not allowed; see 7.4.3.3, notes 2 and 3.

                     * Report the problem and keep the pair where it is,

                     * and mark this field valid.

                     */</comment>

            <if_stmt pos:start="129:13" pos:end="131:44"><if pos:start="129:13" pos:end="131:44">if <condition pos:start="129:16" pos:end="129:50">(<expr pos:start="129:17" pos:end="129:49"><name pos:start="129:17" pos:end="129:31"><name pos:start="129:17" pos:end="129:17">h</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:28">short_ref</name><index pos:start="129:29" pos:end="129:31">[<expr pos:start="129:30" pos:end="129:30"><literal type="number" pos:start="129:30" pos:end="129:30">0</literal></expr>]</index></name> <operator pos:start="129:33" pos:end="129:34">==</operator> <name pos:start="129:36" pos:end="129:49"><name pos:start="129:36" pos:end="129:36">h</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:49">cur_pic_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:44"><block_content pos:start="131:17" pos:end="131:44">

                <expr_stmt pos:start="131:17" pos:end="131:44"><expr pos:start="131:17" pos:end="131:43"><call pos:start="131:17" pos:end="131:43"><name pos:start="131:17" pos:end="131:37">remove_short_at_index</name><argument_list pos:start="131:38" pos:end="131:43">(<argument pos:start="131:39" pos:end="131:39"><expr pos:start="131:39" pos:end="131:39"><name pos:start="131:39" pos:end="131:39">h</name></expr></argument>, <argument pos:start="131:42" pos:end="131:42"><expr pos:start="131:42" pos:end="131:42"><literal type="number" pos:start="131:42" pos:end="131:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="135:13" pos:end="135:85">/* make sure the current picture is not already assigned as a long ref */</comment>

            <if_stmt pos:start="137:13" pos:end="147:13"><if pos:start="137:13" pos:end="147:13">if <condition pos:start="137:16" pos:end="137:41">(<expr pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:40"><name pos:start="137:17" pos:end="137:17">h</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:30">cur_pic_ptr</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:40">long_ref</name></name></expr>)</condition> <block pos:start="137:43" pos:end="147:13">{<block_content pos:start="139:17" pos:end="145:17">

                <for pos:start="139:17" pos:end="145:17">for <control pos:start="139:21" pos:end="139:65">(<init pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:22">j</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</init> <condition pos:start="139:29" pos:end="139:60"><expr pos:start="139:29" pos:end="139:59"><name pos:start="139:29" pos:end="139:29">j</name> <operator pos:start="139:31" pos:end="139:31">&lt;</operator> <call pos:start="139:33" pos:end="139:59"><name pos:start="139:33" pos:end="139:46">FF_ARRAY_ELEMS</name><argument_list pos:start="139:47" pos:end="139:59">(<argument pos:start="139:48" pos:end="139:58"><expr pos:start="139:48" pos:end="139:58"><name pos:start="139:48" pos:end="139:58"><name pos:start="139:48" pos:end="139:48">h</name><operator pos:start="139:49" pos:end="139:50">-&gt;</operator><name pos:start="139:51" pos:end="139:58">long_ref</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="139:62" pos:end="139:64"><expr pos:start="139:62" pos:end="139:64"><name pos:start="139:62" pos:end="139:62">j</name><operator pos:start="139:63" pos:end="139:64">++</operator></expr></incr>)</control> <block pos:start="139:67" pos:end="145:17">{<block_content pos:start="141:21" pos:end="143:45">

                    <if_stmt pos:start="141:21" pos:end="143:45"><if pos:start="141:21" pos:end="143:45">if <condition pos:start="141:24" pos:end="141:57">(<expr pos:start="141:25" pos:end="141:56"><name pos:start="141:25" pos:end="141:38"><name pos:start="141:25" pos:end="141:25">h</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:35">long_ref</name><index pos:start="141:36" pos:end="141:38">[<expr pos:start="141:37" pos:end="141:37"><name pos:start="141:37" pos:end="141:37">j</name></expr>]</index></name> <operator pos:start="141:40" pos:end="141:41">==</operator> <name pos:start="141:43" pos:end="141:56"><name pos:start="141:43" pos:end="141:43">h</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:56">cur_pic_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="143:25" pos:end="143:45"><block_content pos:start="143:25" pos:end="143:45">

                        <expr_stmt pos:start="143:25" pos:end="143:45"><expr pos:start="143:25" pos:end="143:44"><call pos:start="143:25" pos:end="143:44"><name pos:start="143:25" pos:end="143:35">remove_long</name><argument_list pos:start="143:36" pos:end="143:44">(<argument pos:start="143:37" pos:end="143:37"><expr pos:start="143:37" pos:end="143:37"><name pos:start="143:37" pos:end="143:37">h</name></expr></argument>, <argument pos:start="143:40" pos:end="143:40"><expr pos:start="143:40" pos:end="143:40"><name pos:start="143:40" pos:end="143:40">j</name></expr></argument>, <argument pos:start="143:43" pos:end="143:43"><expr pos:start="143:43" pos:end="143:43"><literal type="number" pos:start="143:43" pos:end="143:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>





            <if_stmt pos:start="153:13" pos:end="165:13"><if pos:start="153:13" pos:end="165:13">if <condition pos:start="153:16" pos:end="153:64">(<expr pos:start="153:17" pos:end="153:63"><name pos:start="153:17" pos:end="153:45"><name pos:start="153:17" pos:end="153:17">h</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:27">long_ref</name><index pos:start="153:28" pos:end="153:45">[<expr pos:start="153:29" pos:end="153:44"><name pos:start="153:29" pos:end="153:35"><name pos:start="153:29" pos:end="153:32">mmco</name><index pos:start="153:33" pos:end="153:35">[<expr pos:start="153:34" pos:end="153:34"><name pos:start="153:34" pos:end="153:34">i</name></expr>]</index></name><operator pos:start="153:36" pos:end="153:36">.</operator><name pos:start="153:37" pos:end="153:44">long_arg</name></expr>]</index></name> <operator pos:start="153:47" pos:end="153:48">!=</operator> <name pos:start="153:50" pos:end="153:63"><name pos:start="153:50" pos:end="153:50">h</name><operator pos:start="153:51" pos:end="153:52">-&gt;</operator><name pos:start="153:53" pos:end="153:63">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="153:66" pos:end="165:13">{<block_content pos:start="155:17" pos:end="163:36">

                <expr_stmt pos:start="155:17" pos:end="155:52"><expr pos:start="155:17" pos:end="155:51"><call pos:start="155:17" pos:end="155:51"><name pos:start="155:17" pos:end="155:27">remove_long</name><argument_list pos:start="155:28" pos:end="155:51">(<argument pos:start="155:29" pos:end="155:29"><expr pos:start="155:29" pos:end="155:29"><name pos:start="155:29" pos:end="155:29">h</name></expr></argument>, <argument pos:start="155:32" pos:end="155:47"><expr pos:start="155:32" pos:end="155:47"><name pos:start="155:32" pos:end="155:38"><name pos:start="155:32" pos:end="155:35">mmco</name><index pos:start="155:36" pos:end="155:38">[<expr pos:start="155:37" pos:end="155:37"><name pos:start="155:37" pos:end="155:37">i</name></expr>]</index></name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:47">long_arg</name></expr></argument>, <argument pos:start="155:50" pos:end="155:50"><expr pos:start="155:50" pos:end="155:50"><literal type="number" pos:start="155:50" pos:end="155:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="159:17" pos:end="159:73"><expr pos:start="159:17" pos:end="159:72"><name pos:start="159:17" pos:end="159:45"><name pos:start="159:17" pos:end="159:17">h</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:27">long_ref</name><index pos:start="159:28" pos:end="159:45">[<expr pos:start="159:29" pos:end="159:44"><name pos:start="159:29" pos:end="159:35"><name pos:start="159:29" pos:end="159:32">mmco</name><index pos:start="159:33" pos:end="159:35">[<expr pos:start="159:34" pos:end="159:34"><name pos:start="159:34" pos:end="159:34">i</name></expr>]</index></name><operator pos:start="159:36" pos:end="159:36">.</operator><name pos:start="159:37" pos:end="159:44">long_arg</name></expr>]</index></name>           <operator pos:start="159:57" pos:end="159:57">=</operator> <name pos:start="159:59" pos:end="159:72"><name pos:start="159:59" pos:end="159:59">h</name><operator pos:start="159:60" pos:end="159:61">-&gt;</operator><name pos:start="159:62" pos:end="159:72">cur_pic_ptr</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:60"><expr pos:start="161:17" pos:end="161:59"><name pos:start="161:17" pos:end="161:45"><name pos:start="161:17" pos:end="161:17">h</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:27">long_ref</name><index pos:start="161:28" pos:end="161:45">[<expr pos:start="161:29" pos:end="161:44"><name pos:start="161:29" pos:end="161:35"><name pos:start="161:29" pos:end="161:32">mmco</name><index pos:start="161:33" pos:end="161:35">[<expr pos:start="161:34" pos:end="161:34"><name pos:start="161:34" pos:end="161:34">i</name></expr>]</index></name><operator pos:start="161:36" pos:end="161:36">.</operator><name pos:start="161:37" pos:end="161:44">long_arg</name></expr>]</index></name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:55">long_ref</name> <operator pos:start="161:57" pos:end="161:57">=</operator> <literal type="number" pos:start="161:59" pos:end="161:59">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:36"><expr pos:start="163:17" pos:end="163:35"><name pos:start="163:17" pos:end="163:33"><name pos:start="163:17" pos:end="163:17">h</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:33">long_ref_count</name></name><operator pos:start="163:34" pos:end="163:35">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="169:13" pos:end="169:62"><expr pos:start="169:13" pos:end="169:61"><name pos:start="169:13" pos:end="169:37"><name pos:start="169:13" pos:end="169:13">h</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:26">cur_pic_ptr</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:37">reference</name></name> <operator pos:start="169:39" pos:end="169:40">|=</operator> <name pos:start="169:42" pos:end="169:61"><name pos:start="169:42" pos:end="169:42">h</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:61">picture_structure</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:37"><expr pos:start="171:13" pos:end="171:36"><name pos:start="171:13" pos:end="171:32">current_ref_assigned</name> <operator pos:start="171:34" pos:end="171:34">=</operator> <literal type="number" pos:start="171:36" pos:end="171:36">1</literal></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        <case pos:start="175:9" pos:end="175:31">case <expr pos:start="175:14" pos:end="175:30"><name pos:start="175:14" pos:end="175:30">MMCO_SET_MAX_LONG</name></expr>:</case>

            <expr_stmt pos:start="177:13" pos:end="177:43"><expr pos:start="177:13" pos:end="177:42"><call pos:start="177:13" pos:end="177:42"><name pos:start="177:13" pos:end="177:18">assert</name><argument_list pos:start="177:19" pos:end="177:42">(<argument pos:start="177:20" pos:end="177:41"><expr pos:start="177:20" pos:end="177:41"><name pos:start="177:20" pos:end="177:26"><name pos:start="177:20" pos:end="177:23">mmco</name><index pos:start="177:24" pos:end="177:26">[<expr pos:start="177:25" pos:end="177:25"><name pos:start="177:25" pos:end="177:25">i</name></expr>]</index></name><operator pos:start="177:27" pos:end="177:27">.</operator><name pos:start="177:28" pos:end="177:35">long_arg</name> <operator pos:start="177:37" pos:end="177:38">&lt;=</operator> <literal type="number" pos:start="177:40" pos:end="177:41">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="179:13" pos:end="179:76">// just remove the long term which index is greater than new max</comment>

            <for pos:start="181:13" pos:end="185:13">for <control pos:start="181:17" pos:end="181:51">(<init pos:start="181:18" pos:end="181:38"><expr pos:start="181:18" pos:end="181:37"><name pos:start="181:18" pos:end="181:18">j</name> <operator pos:start="181:20" pos:end="181:20">=</operator> <name pos:start="181:22" pos:end="181:28"><name pos:start="181:22" pos:end="181:25">mmco</name><index pos:start="181:26" pos:end="181:28">[<expr pos:start="181:27" pos:end="181:27"><name pos:start="181:27" pos:end="181:27">i</name></expr>]</index></name><operator pos:start="181:29" pos:end="181:29">.</operator><name pos:start="181:30" pos:end="181:37">long_arg</name></expr>;</init> <condition pos:start="181:40" pos:end="181:46"><expr pos:start="181:40" pos:end="181:45"><name pos:start="181:40" pos:end="181:40">j</name> <operator pos:start="181:42" pos:end="181:42">&lt;</operator> <literal type="number" pos:start="181:44" pos:end="181:45">16</literal></expr>;</condition> <incr pos:start="181:48" pos:end="181:50"><expr pos:start="181:48" pos:end="181:50"><name pos:start="181:48" pos:end="181:48">j</name><operator pos:start="181:49" pos:end="181:50">++</operator></expr></incr>)</control> <block pos:start="181:53" pos:end="185:13">{<block_content pos:start="183:17" pos:end="183:37">

                <expr_stmt pos:start="183:17" pos:end="183:37"><expr pos:start="183:17" pos:end="183:36"><call pos:start="183:17" pos:end="183:36"><name pos:start="183:17" pos:end="183:27">remove_long</name><argument_list pos:start="183:28" pos:end="183:36">(<argument pos:start="183:29" pos:end="183:29"><expr pos:start="183:29" pos:end="183:29"><name pos:start="183:29" pos:end="183:29">h</name></expr></argument>, <argument pos:start="183:32" pos:end="183:32"><expr pos:start="183:32" pos:end="183:32"><name pos:start="183:32" pos:end="183:32">j</name></expr></argument>, <argument pos:start="183:35" pos:end="183:35"><expr pos:start="183:35" pos:end="183:35"><literal type="number" pos:start="183:35" pos:end="183:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="187:13" pos:end="187:18">break;</break>

        <case pos:start="189:9" pos:end="189:24">case <expr pos:start="189:14" pos:end="189:23"><name pos:start="189:14" pos:end="189:23">MMCO_RESET</name></expr>:</case>

            <while pos:start="191:13" pos:end="195:13">while <condition pos:start="191:19" pos:end="191:38">(<expr pos:start="191:20" pos:end="191:37"><name pos:start="191:20" pos:end="191:37"><name pos:start="191:20" pos:end="191:20">h</name><operator pos:start="191:21" pos:end="191:22">-&gt;</operator><name pos:start="191:23" pos:end="191:37">short_ref_count</name></name></expr>)</condition> <block pos:start="191:40" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:63">

                <expr_stmt pos:start="193:17" pos:end="193:63"><expr pos:start="193:17" pos:end="193:62"><call pos:start="193:17" pos:end="193:62"><name pos:start="193:17" pos:end="193:28">remove_short</name><argument_list pos:start="193:29" pos:end="193:62">(<argument pos:start="193:30" pos:end="193:30"><expr pos:start="193:30" pos:end="193:30"><name pos:start="193:30" pos:end="193:30">h</name></expr></argument>, <argument pos:start="193:33" pos:end="193:58"><expr pos:start="193:33" pos:end="193:58"><name pos:start="193:33" pos:end="193:47"><name pos:start="193:33" pos:end="193:33">h</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:44">short_ref</name><index pos:start="193:45" pos:end="193:47">[<expr pos:start="193:46" pos:end="193:46"><literal type="number" pos:start="193:46" pos:end="193:46">0</literal></expr>]</index></name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:58">frame_num</name></expr></argument>, <argument pos:start="193:61" pos:end="193:61"><expr pos:start="193:61" pos:end="193:61"><literal type="number" pos:start="193:61" pos:end="193:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <for pos:start="197:13" pos:end="201:13">for <control pos:start="197:17" pos:end="197:36">(<init pos:start="197:18" pos:end="197:23"><expr pos:start="197:18" pos:end="197:22"><name pos:start="197:18" pos:end="197:18">j</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>;</init> <condition pos:start="197:25" pos:end="197:31"><expr pos:start="197:25" pos:end="197:30"><name pos:start="197:25" pos:end="197:25">j</name> <operator pos:start="197:27" pos:end="197:27">&lt;</operator> <literal type="number" pos:start="197:29" pos:end="197:30">16</literal></expr>;</condition> <incr pos:start="197:33" pos:end="197:35"><expr pos:start="197:33" pos:end="197:35"><name pos:start="197:33" pos:end="197:33">j</name><operator pos:start="197:34" pos:end="197:35">++</operator></expr></incr>)</control> <block pos:start="197:38" pos:end="201:13">{<block_content pos:start="199:17" pos:end="199:37">

                <expr_stmt pos:start="199:17" pos:end="199:37"><expr pos:start="199:17" pos:end="199:36"><call pos:start="199:17" pos:end="199:36"><name pos:start="199:17" pos:end="199:27">remove_long</name><argument_list pos:start="199:28" pos:end="199:36">(<argument pos:start="199:29" pos:end="199:29"><expr pos:start="199:29" pos:end="199:29"><name pos:start="199:29" pos:end="199:29">h</name></expr></argument>, <argument pos:start="199:32" pos:end="199:32"><expr pos:start="199:32" pos:end="199:32"><name pos:start="199:32" pos:end="199:32">j</name></expr></argument>, <argument pos:start="199:35" pos:end="199:35"><expr pos:start="199:35" pos:end="199:35"><literal type="number" pos:start="199:35" pos:end="199:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="203:13" pos:end="203:58"><expr pos:start="203:13" pos:end="203:57"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:13">h</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:24">frame_num</name></name>  <operator pos:start="203:27" pos:end="203:27">=</operator> <name pos:start="203:29" pos:end="203:53"><name pos:start="203:29" pos:end="203:29">h</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:42">cur_pic_ptr</name><operator pos:start="203:43" pos:end="203:44">-&gt;</operator><name pos:start="203:45" pos:end="203:53">frame_num</name></name> <operator pos:start="203:55" pos:end="203:55">=</operator> <literal type="number" pos:start="203:57" pos:end="203:57">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:30"><expr pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:25"><name pos:start="205:13" pos:end="205:13">h</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:25">mmco_reset</name></name> <operator pos:start="205:27" pos:end="205:27">=</operator> <literal type="number" pos:start="205:29" pos:end="205:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:43"><expr pos:start="207:13" pos:end="207:42"><name pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:13">h</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:26">cur_pic_ptr</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:38">mmco_reset</name></name> <operator pos:start="207:40" pos:end="207:40">=</operator> <literal type="number" pos:start="207:42" pos:end="207:42">1</literal></expr>;</expr_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        <default pos:start="211:9" pos:end="211:16">default:</default> <expr_stmt pos:start="211:18" pos:end="211:27"><expr pos:start="211:18" pos:end="211:26"><call pos:start="211:18" pos:end="211:26"><name pos:start="211:18" pos:end="211:23">assert</name><argument_list pos:start="211:24" pos:end="211:26">(<argument pos:start="211:25" pos:end="211:25"><expr pos:start="211:25" pos:end="211:25"><literal type="number" pos:start="211:25" pos:end="211:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="219:5" pos:end="281:5"><if pos:start="219:5" pos:end="281:5">if <condition pos:start="219:8" pos:end="219:30">(<expr pos:start="219:9" pos:end="219:29"><operator pos:start="219:9" pos:end="219:9">!</operator><name pos:start="219:10" pos:end="219:29">current_ref_assigned</name></expr>)</condition> <block pos:start="219:32" pos:end="281:5">{<block_content pos:start="233:9" pos:end="279:9">

        <comment type="block" pos:start="221:9" pos:end="231:11">/* Second field of complementary field pair; the first field of

         * which is already referenced. If short referenced, it

         * should be first entry in short_ref. If not, it must exist

         * in long_ref; trying to put it on the short list here is an

         * error in the encoded bit stream (ref: 7.4.3.3, NOTE 2 and 3).

         */</comment>

        <if_stmt pos:start="233:9" pos:end="279:9"><if pos:start="233:9" pos:end="239:9">if <condition pos:start="233:12" pos:end="233:68">(<expr pos:start="233:13" pos:end="233:67"><name pos:start="233:13" pos:end="233:30"><name pos:start="233:13" pos:end="233:13">h</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:30">short_ref_count</name></name> <operator pos:start="233:32" pos:end="233:33">&amp;&amp;</operator> <name pos:start="233:35" pos:end="233:49"><name pos:start="233:35" pos:end="233:35">h</name><operator pos:start="233:36" pos:end="233:37">-&gt;</operator><name pos:start="233:38" pos:end="233:46">short_ref</name><index pos:start="233:47" pos:end="233:49">[<expr pos:start="233:48" pos:end="233:48"><literal type="number" pos:start="233:48" pos:end="233:48">0</literal></expr>]</index></name> <operator pos:start="233:51" pos:end="233:52">==</operator> <name pos:start="233:54" pos:end="233:67"><name pos:start="233:54" pos:end="233:54">h</name><operator pos:start="233:55" pos:end="233:56">-&gt;</operator><name pos:start="233:57" pos:end="233:67">cur_pic_ptr</name></name></expr>)</condition> <block pos:start="233:70" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:51">

            <comment type="block" pos:start="235:13" pos:end="235:50">/* Just mark the second field valid */</comment>

            <expr_stmt pos:start="237:13" pos:end="237:51"><expr pos:start="237:13" pos:end="237:50"><name pos:start="237:13" pos:end="237:37"><name pos:start="237:13" pos:end="237:13">h</name><operator pos:start="237:14" pos:end="237:15">-&gt;</operator><name pos:start="237:16" pos:end="237:26">cur_pic_ptr</name><operator pos:start="237:27" pos:end="237:28">-&gt;</operator><name pos:start="237:29" pos:end="237:37">reference</name></name> <operator pos:start="237:39" pos:end="237:39">=</operator> <name pos:start="237:41" pos:end="237:50">PICT_FRAME</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="239:11" pos:end="251:9">else if <condition pos:start="239:19" pos:end="239:44">(<expr pos:start="239:20" pos:end="239:43"><name pos:start="239:20" pos:end="239:43"><name pos:start="239:20" pos:end="239:20">h</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:33">cur_pic_ptr</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:43">long_ref</name></name></expr>)</condition> <block pos:start="239:46" pos:end="251:9">{<block_content pos:start="241:13" pos:end="249:38">

            <expr_stmt pos:start="241:13" pos:end="247:75"><expr pos:start="241:13" pos:end="247:74"><call pos:start="241:13" pos:end="247:74"><name pos:start="241:13" pos:end="241:18">av_log</name><argument_list pos:start="241:19" pos:end="247:74">(<argument pos:start="241:20" pos:end="241:27"><expr pos:start="241:20" pos:end="241:27"><name pos:start="241:20" pos:end="241:27"><name pos:start="241:20" pos:end="241:20">h</name><operator pos:start="241:21" pos:end="241:22">-&gt;</operator><name pos:start="241:23" pos:end="241:27">avctx</name></name></expr></argument>, <argument pos:start="241:30" pos:end="241:41"><expr pos:start="241:30" pos:end="241:41"><name pos:start="241:30" pos:end="241:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="241:44" pos:end="247:73"><expr pos:start="241:44" pos:end="247:73"><literal type="string" pos:start="241:44" pos:end="241:74">"illegal short term reference "</literal>

                                           <literal type="string" pos:start="243:44" pos:end="243:73">"assignment for second field "</literal>

                                           <literal type="string" pos:start="245:44" pos:end="245:73">"in complementary field pair "</literal>

                                           <literal type="string" pos:start="247:44" pos:end="247:73">"(first field is long term)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:38"><expr pos:start="249:13" pos:end="249:37"><name pos:start="249:13" pos:end="249:15">err</name> <operator pos:start="249:17" pos:end="249:17">=</operator> <name pos:start="249:19" pos:end="249:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="251:11" pos:end="279:9">else <block pos:start="251:16" pos:end="279:9">{<block_content pos:start="253:13" pos:end="277:62">

            <expr_stmt pos:start="253:13" pos:end="253:64"><expr pos:start="253:13" pos:end="253:63"><name pos:start="253:13" pos:end="253:15">pic</name> <operator pos:start="253:17" pos:end="253:17">=</operator> <call pos:start="253:19" pos:end="253:63"><name pos:start="253:19" pos:end="253:30">remove_short</name><argument_list pos:start="253:31" pos:end="253:63">(<argument pos:start="253:32" pos:end="253:32"><expr pos:start="253:32" pos:end="253:32"><name pos:start="253:32" pos:end="253:32">h</name></expr></argument>, <argument pos:start="253:35" pos:end="253:59"><expr pos:start="253:35" pos:end="253:59"><name pos:start="253:35" pos:end="253:59"><name pos:start="253:35" pos:end="253:35">h</name><operator pos:start="253:36" pos:end="253:37">-&gt;</operator><name pos:start="253:38" pos:end="253:48">cur_pic_ptr</name><operator pos:start="253:49" pos:end="253:50">-&gt;</operator><name pos:start="253:51" pos:end="253:59">frame_num</name></name></expr></argument>, <argument pos:start="253:62" pos:end="253:62"><expr pos:start="253:62" pos:end="253:62"><literal type="number" pos:start="253:62" pos:end="253:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="255:13" pos:end="261:13"><if pos:start="255:13" pos:end="261:13">if <condition pos:start="255:16" pos:end="255:20">(<expr pos:start="255:17" pos:end="255:19"><name pos:start="255:17" pos:end="255:19">pic</name></expr>)</condition> <block pos:start="255:22" pos:end="261:13">{<block_content pos:start="257:17" pos:end="259:42">

                <expr_stmt pos:start="257:17" pos:end="257:93"><expr pos:start="257:17" pos:end="257:92"><call pos:start="257:17" pos:end="257:92"><name pos:start="257:17" pos:end="257:22">av_log</name><argument_list pos:start="257:23" pos:end="257:92">(<argument pos:start="257:24" pos:end="257:31"><expr pos:start="257:24" pos:end="257:31"><name pos:start="257:24" pos:end="257:31"><name pos:start="257:24" pos:end="257:24">h</name><operator pos:start="257:25" pos:end="257:26">-&gt;</operator><name pos:start="257:27" pos:end="257:31">avctx</name></name></expr></argument>, <argument pos:start="257:34" pos:end="257:45"><expr pos:start="257:34" pos:end="257:45"><name pos:start="257:34" pos:end="257:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="257:48" pos:end="257:91"><expr pos:start="257:48" pos:end="257:91"><literal type="string" pos:start="257:48" pos:end="257:91">"illegal short term buffer state detected\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:42"><expr pos:start="259:17" pos:end="259:41"><name pos:start="259:17" pos:end="259:19">err</name> <operator pos:start="259:21" pos:end="259:21">=</operator> <name pos:start="259:23" pos:end="259:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="265:13" pos:end="269:67"><if pos:start="265:13" pos:end="269:67">if <condition pos:start="265:16" pos:end="265:35">(<expr pos:start="265:17" pos:end="265:34"><name pos:start="265:17" pos:end="265:34"><name pos:start="265:17" pos:end="265:17">h</name><operator pos:start="265:18" pos:end="265:19">-&gt;</operator><name pos:start="265:20" pos:end="265:34">short_ref_count</name></name></expr>)</condition><block type="pseudo" pos:start="267:17" pos:end="269:67"><block_content pos:start="267:17" pos:end="269:67">

                <expr_stmt pos:start="267:17" pos:end="269:67"><expr pos:start="267:17" pos:end="269:66"><call pos:start="267:17" pos:end="269:66"><name pos:start="267:17" pos:end="267:23">memmove</name><argument_list pos:start="267:24" pos:end="269:66">(<argument pos:start="267:25" pos:end="267:40"><expr pos:start="267:25" pos:end="267:40"><operator pos:start="267:25" pos:end="267:25">&amp;</operator><name pos:start="267:26" pos:end="267:40"><name pos:start="267:26" pos:end="267:26">h</name><operator pos:start="267:27" pos:end="267:28">-&gt;</operator><name pos:start="267:29" pos:end="267:37">short_ref</name><index pos:start="267:38" pos:end="267:40">[<expr pos:start="267:39" pos:end="267:39"><literal type="number" pos:start="267:39" pos:end="267:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="267:43" pos:end="267:58"><expr pos:start="267:43" pos:end="267:58"><operator pos:start="267:43" pos:end="267:43">&amp;</operator><name pos:start="267:44" pos:end="267:58"><name pos:start="267:44" pos:end="267:44">h</name><operator pos:start="267:45" pos:end="267:46">-&gt;</operator><name pos:start="267:47" pos:end="267:55">short_ref</name><index pos:start="267:56" pos:end="267:58">[<expr pos:start="267:57" pos:end="267:57"><literal type="number" pos:start="267:57" pos:end="267:57">0</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="269:25" pos:end="269:65"><expr pos:start="269:25" pos:end="269:65"><name pos:start="269:25" pos:end="269:42"><name pos:start="269:25" pos:end="269:25">h</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:42">short_ref_count</name></name> <operator pos:start="269:44" pos:end="269:44">*</operator> <sizeof pos:start="269:46" pos:end="269:65">sizeof<argument_list pos:start="269:52" pos:end="269:65">(<argument pos:start="269:53" pos:end="269:64"><expr pos:start="269:53" pos:end="269:64"><name pos:start="269:53" pos:end="269:63">H264Picture</name><operator pos:start="269:64" pos:end="269:64">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="273:13" pos:end="273:45"><expr pos:start="273:13" pos:end="273:44"><name pos:start="273:13" pos:end="273:27"><name pos:start="273:13" pos:end="273:13">h</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:24">short_ref</name><index pos:start="273:25" pos:end="273:27">[<expr pos:start="273:26" pos:end="273:26"><literal type="number" pos:start="273:26" pos:end="273:26">0</literal></expr>]</index></name> <operator pos:start="273:29" pos:end="273:29">=</operator> <name pos:start="273:31" pos:end="273:44"><name pos:start="273:31" pos:end="273:31">h</name><operator pos:start="273:32" pos:end="273:33">-&gt;</operator><name pos:start="273:34" pos:end="273:44">cur_pic_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:33"><expr pos:start="275:13" pos:end="275:32"><name pos:start="275:13" pos:end="275:30"><name pos:start="275:13" pos:end="275:13">h</name><operator pos:start="275:14" pos:end="275:15">-&gt;</operator><name pos:start="275:16" pos:end="275:30">short_ref_count</name></name><operator pos:start="275:31" pos:end="275:32">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:62"><expr pos:start="277:13" pos:end="277:61"><name pos:start="277:13" pos:end="277:37"><name pos:start="277:13" pos:end="277:13">h</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:26">cur_pic_ptr</name><operator pos:start="277:27" pos:end="277:28">-&gt;</operator><name pos:start="277:29" pos:end="277:37">reference</name></name> <operator pos:start="277:39" pos:end="277:40">|=</operator> <name pos:start="277:42" pos:end="277:61"><name pos:start="277:42" pos:end="277:42">h</name><operator pos:start="277:43" pos:end="277:44">-&gt;</operator><name pos:start="277:45" pos:end="277:61">picture_structure</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="285:5" pos:end="333:5"><if pos:start="285:5" pos:end="333:5">if <condition pos:start="285:8" pos:end="287:69">(<expr pos:start="285:9" pos:end="287:68"><name pos:start="285:9" pos:end="285:25"><name pos:start="285:9" pos:end="285:9">h</name><operator pos:start="285:10" pos:end="285:11">-&gt;</operator><name pos:start="285:12" pos:end="285:25">long_ref_count</name></name> <operator pos:start="285:27" pos:end="285:27">+</operator> <name pos:start="285:29" pos:end="285:46"><name pos:start="285:29" pos:end="285:29">h</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:46">short_ref_count</name></name> <operator pos:start="285:48" pos:end="285:48">-</operator>

        <operator pos:start="287:9" pos:end="287:9">(</operator><name pos:start="287:10" pos:end="287:24"><name pos:start="287:10" pos:end="287:10">h</name><operator pos:start="287:11" pos:end="287:12">-&gt;</operator><name pos:start="287:13" pos:end="287:21">short_ref</name><index pos:start="287:22" pos:end="287:24">[<expr pos:start="287:23" pos:end="287:23"><literal type="number" pos:start="287:23" pos:end="287:23">0</literal></expr>]</index></name> <operator pos:start="287:26" pos:end="287:27">==</operator> <name pos:start="287:29" pos:end="287:42"><name pos:start="287:29" pos:end="287:29">h</name><operator pos:start="287:30" pos:end="287:31">-&gt;</operator><name pos:start="287:32" pos:end="287:42">cur_pic_ptr</name></name><operator pos:start="287:43" pos:end="287:43">)</operator> <operator pos:start="287:45" pos:end="287:45">&gt;</operator> <name pos:start="287:47" pos:end="287:68"><name pos:start="287:47" pos:end="287:47">h</name><operator pos:start="287:48" pos:end="287:49">-&gt;</operator><name pos:start="287:50" pos:end="287:52">sps</name><operator pos:start="287:53" pos:end="287:53">.</operator><name pos:start="287:54" pos:end="287:68">ref_frame_count</name></name></expr>)</condition> <block pos:start="287:71" pos:end="333:5">{<block_content pos:start="299:9" pos:end="331:9">



        <comment type="block" pos:start="291:9" pos:end="297:11">/* We have too many reference frames, probably due to corrupted

         * stream. Need to discard one frame. Prevents overrun of the

         * short_ref and long_ref buffers.

         */</comment>

        <expr_stmt pos:start="299:9" pos:end="305:78"><expr pos:start="299:9" pos:end="305:77"><call pos:start="299:9" pos:end="305:77"><name pos:start="299:9" pos:end="299:14">av_log</name><argument_list pos:start="299:15" pos:end="305:77">(<argument pos:start="299:16" pos:end="299:23"><expr pos:start="299:16" pos:end="299:23"><name pos:start="299:16" pos:end="299:23"><name pos:start="299:16" pos:end="299:16">h</name><operator pos:start="299:17" pos:end="299:18">-&gt;</operator><name pos:start="299:19" pos:end="299:23">avctx</name></name></expr></argument>, <argument pos:start="299:26" pos:end="299:37"><expr pos:start="299:26" pos:end="299:37"><name pos:start="299:26" pos:end="299:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="301:16" pos:end="303:49"><expr pos:start="301:16" pos:end="303:49"><literal type="string" pos:start="301:16" pos:end="301:78">"number of reference frames (%d+%d) exceeds max (%d; probably "</literal>

               <literal type="string" pos:start="303:16" pos:end="303:49">"corrupt input), discarding one\n"</literal></expr></argument>,

               <argument pos:start="305:16" pos:end="305:32"><expr pos:start="305:16" pos:end="305:32"><name pos:start="305:16" pos:end="305:32"><name pos:start="305:16" pos:end="305:16">h</name><operator pos:start="305:17" pos:end="305:18">-&gt;</operator><name pos:start="305:19" pos:end="305:32">long_ref_count</name></name></expr></argument>, <argument pos:start="305:35" pos:end="305:52"><expr pos:start="305:35" pos:end="305:52"><name pos:start="305:35" pos:end="305:52"><name pos:start="305:35" pos:end="305:35">h</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:52">short_ref_count</name></name></expr></argument>, <argument pos:start="305:55" pos:end="305:76"><expr pos:start="305:55" pos:end="305:76"><name pos:start="305:55" pos:end="305:76"><name pos:start="305:55" pos:end="305:55">h</name><operator pos:start="305:56" pos:end="305:57">-&gt;</operator><name pos:start="305:58" pos:end="305:60">sps</name><operator pos:start="305:61" pos:end="305:61">.</operator><name pos:start="305:62" pos:end="305:76">ref_frame_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:34"><expr pos:start="307:9" pos:end="307:33"><name pos:start="307:9" pos:end="307:11">err</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <name pos:start="307:15" pos:end="307:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>



        <if_stmt pos:start="311:9" pos:end="331:9"><if pos:start="311:9" pos:end="325:9">if <condition pos:start="311:12" pos:end="311:53">(<expr pos:start="311:13" pos:end="311:52"><name pos:start="311:13" pos:end="311:29"><name pos:start="311:13" pos:end="311:13">h</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:29">long_ref_count</name></name> <operator pos:start="311:31" pos:end="311:32">&amp;&amp;</operator> <operator pos:start="311:34" pos:end="311:34">!</operator><name pos:start="311:35" pos:end="311:52"><name pos:start="311:35" pos:end="311:35">h</name><operator pos:start="311:36" pos:end="311:37">-&gt;</operator><name pos:start="311:38" pos:end="311:52">short_ref_count</name></name></expr>)</condition> <block pos:start="311:55" pos:end="325:9">{<block_content pos:start="313:13" pos:end="323:33">

            <for pos:start="313:13" pos:end="317:26">for <control pos:start="313:17" pos:end="313:36">(<init pos:start="313:18" pos:end="313:23"><expr pos:start="313:18" pos:end="313:22"><name pos:start="313:18" pos:end="313:18">i</name> <operator pos:start="313:20" pos:end="313:20">=</operator> <literal type="number" pos:start="313:22" pos:end="313:22">0</literal></expr>;</init> <condition pos:start="313:25" pos:end="313:31"><expr pos:start="313:25" pos:end="313:30"><name pos:start="313:25" pos:end="313:25">i</name> <operator pos:start="313:27" pos:end="313:27">&lt;</operator> <literal type="number" pos:start="313:29" pos:end="313:30">16</literal></expr>;</condition> <incr pos:start="313:33" pos:end="313:35"><expr pos:start="313:33" pos:end="313:35"><operator pos:start="313:33" pos:end="313:34">++</operator><name pos:start="313:35" pos:end="313:35">i</name></expr></incr>)</control><block type="pseudo" pos:start="315:17" pos:end="317:26"><block_content pos:start="315:17" pos:end="317:26">

                <if_stmt pos:start="315:17" pos:end="317:26"><if pos:start="315:17" pos:end="317:26">if <condition pos:start="315:20" pos:end="315:35">(<expr pos:start="315:21" pos:end="315:34"><name pos:start="315:21" pos:end="315:34"><name pos:start="315:21" pos:end="315:21">h</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:31">long_ref</name><index pos:start="315:32" pos:end="315:34">[<expr pos:start="315:33" pos:end="315:33"><name pos:start="315:33" pos:end="315:33">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="317:21" pos:end="317:26"><block_content pos:start="317:21" pos:end="317:26">

                    <break pos:start="317:21" pos:end="317:26">break;</break></block_content></block></if></if_stmt></block_content></block></for>



            <expr_stmt pos:start="321:13" pos:end="321:27"><expr pos:start="321:13" pos:end="321:26"><call pos:start="321:13" pos:end="321:26"><name pos:start="321:13" pos:end="321:18">assert</name><argument_list pos:start="321:19" pos:end="321:26">(<argument pos:start="321:20" pos:end="321:25"><expr pos:start="321:20" pos:end="321:25"><name pos:start="321:20" pos:end="321:20">i</name> <operator pos:start="321:22" pos:end="321:22">&lt;</operator> <literal type="number" pos:start="321:24" pos:end="321:25">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:33"><expr pos:start="323:13" pos:end="323:32"><call pos:start="323:13" pos:end="323:32"><name pos:start="323:13" pos:end="323:23">remove_long</name><argument_list pos:start="323:24" pos:end="323:32">(<argument pos:start="323:25" pos:end="323:25"><expr pos:start="323:25" pos:end="323:25"><name pos:start="323:25" pos:end="323:25">h</name></expr></argument>, <argument pos:start="323:28" pos:end="323:28"><expr pos:start="323:28" pos:end="323:28"><name pos:start="323:28" pos:end="323:28">i</name></expr></argument>, <argument pos:start="323:31" pos:end="323:31"><expr pos:start="323:31" pos:end="323:31"><literal type="number" pos:start="323:31" pos:end="323:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="325:11" pos:end="331:9">else <block pos:start="325:16" pos:end="331:9">{<block_content pos:start="327:13" pos:end="329:47">

            <expr_stmt pos:start="327:13" pos:end="327:55"><expr pos:start="327:13" pos:end="327:54"><name pos:start="327:13" pos:end="327:15">pic</name> <operator pos:start="327:17" pos:end="327:17">=</operator> <name pos:start="327:19" pos:end="327:54"><name pos:start="327:19" pos:end="327:19">h</name><operator pos:start="327:20" pos:end="327:21">-&gt;</operator><name pos:start="327:22" pos:end="327:30">short_ref</name><index pos:start="327:31" pos:end="327:54">[<expr pos:start="327:32" pos:end="327:53"><name pos:start="327:32" pos:end="327:49"><name pos:start="327:32" pos:end="327:32">h</name><operator pos:start="327:33" pos:end="327:34">-&gt;</operator><name pos:start="327:35" pos:end="327:49">short_ref_count</name></name> <operator pos:start="327:51" pos:end="327:51">-</operator> <literal type="number" pos:start="327:53" pos:end="327:53">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:47"><expr pos:start="329:13" pos:end="329:46"><call pos:start="329:13" pos:end="329:46"><name pos:start="329:13" pos:end="329:24">remove_short</name><argument_list pos:start="329:25" pos:end="329:46">(<argument pos:start="329:26" pos:end="329:26"><expr pos:start="329:26" pos:end="329:26"><name pos:start="329:26" pos:end="329:26">h</name></expr></argument>, <argument pos:start="329:29" pos:end="329:42"><expr pos:start="329:29" pos:end="329:42"><name pos:start="329:29" pos:end="329:42"><name pos:start="329:29" pos:end="329:31">pic</name><operator pos:start="329:32" pos:end="329:33">-&gt;</operator><name pos:start="329:34" pos:end="329:42">frame_num</name></name></expr></argument>, <argument pos:start="329:45" pos:end="329:45"><expr pos:start="329:45" pos:end="329:45"><literal type="number" pos:start="329:45" pos:end="329:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="337:5" pos:end="337:24"><expr pos:start="337:5" pos:end="337:23"><call pos:start="337:5" pos:end="337:23"><name pos:start="337:5" pos:end="337:20">print_short_term</name><argument_list pos:start="337:21" pos:end="337:23">(<argument pos:start="337:22" pos:end="337:22"><expr pos:start="337:22" pos:end="337:22"><name pos:start="337:22" pos:end="337:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:23"><expr pos:start="339:5" pos:end="339:22"><call pos:start="339:5" pos:end="339:22"><name pos:start="339:5" pos:end="339:19">print_long_term</name><argument_list pos:start="339:20" pos:end="339:22">(<argument pos:start="339:21" pos:end="339:21"><expr pos:start="339:21" pos:end="339:21"><name pos:start="339:21" pos:end="339:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="341:5" pos:end="341:65">return <expr pos:start="341:12" pos:end="341:64"><ternary pos:start="341:12" pos:end="341:64"><condition pos:start="341:12" pos:end="341:56"><expr pos:start="341:12" pos:end="341:54"><operator pos:start="341:12" pos:end="341:12">(</operator><name pos:start="341:13" pos:end="341:37"><name pos:start="341:13" pos:end="341:13">h</name><operator pos:start="341:14" pos:end="341:15">-&gt;</operator><name pos:start="341:16" pos:end="341:20">avctx</name><operator pos:start="341:21" pos:end="341:22">-&gt;</operator><name pos:start="341:23" pos:end="341:37">err_recognition</name></name> <operator pos:start="341:39" pos:end="341:39">&amp;</operator> <name pos:start="341:41" pos:end="341:53">AV_EF_EXPLODE</name><operator pos:start="341:54" pos:end="341:54">)</operator></expr> ?</condition><then pos:start="341:58" pos:end="341:60"> <expr pos:start="341:58" pos:end="341:60"><name pos:start="341:58" pos:end="341:60">err</name></expr> </then><else pos:start="341:62" pos:end="341:64">: <expr pos:start="341:64" pos:end="341:64"><literal type="number" pos:start="341:64" pos:end="341:64">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
