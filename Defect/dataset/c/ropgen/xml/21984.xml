<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21984.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">wmv2_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list><block pos:start="1:59" pos:end="31:1">{<block_content pos:start="3:5" pos:end="29:13">

    <decl_stmt pos:start="3:5" pos:end="3:44"><decl pos:start="3:5" pos:end="3:43"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:15">Wmv2Context</name> <modifier pos:start="3:17" pos:end="3:17">*</modifier> <specifier pos:start="3:19" pos:end="3:23">const</specifier></type> <name pos:start="3:25" pos:end="3:25">w</name><init pos:start="3:26" pos:end="3:43">= <expr pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:32">avctx</name><operator pos:start="3:33" pos:end="3:34">-&gt;</operator><name pos:start="3:35" pos:end="3:43">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if<condition pos:start="7:7" pos:end="7:38">(<expr pos:start="7:8" pos:end="7:37"><name pos:start="7:8" pos:end="7:23"><name pos:start="7:8" pos:end="7:12">avctx</name><operator pos:start="7:13" pos:end="7:14">-&gt;</operator><name pos:start="7:15" pos:end="7:23">idct_algo</name></name><operator pos:start="7:24" pos:end="7:25">==</operator><name pos:start="7:26" pos:end="7:37">FF_IDCT_AUTO</name></expr>)</condition><block pos:start="7:39" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:38">

        <expr_stmt pos:start="9:9" pos:end="9:38"><expr pos:start="9:9" pos:end="9:37"><name pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:13">avctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:24">idct_algo</name></name><operator pos:start="9:25" pos:end="9:25">=</operator><name pos:start="9:26" pos:end="9:37">FF_IDCT_WMV2</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if<condition pos:start="15:7" pos:end="15:41">(<expr pos:start="15:8" pos:end="15:40"><call pos:start="15:8" pos:end="15:36"><name pos:start="15:8" pos:end="15:29">ff_msmpeg4_decode_init</name><argument_list pos:start="15:30" pos:end="15:36">(<argument pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:38">&lt;</operator> <literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:23">ff_wmv2_common_init</name><argument_list pos:start="21:24" pos:end="21:26">(<argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><name pos:start="21:25" pos:end="21:25">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:26">ff_intrax8_common_init</name><argument_list pos:start="25:27" pos:end="25:40">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><operator pos:start="25:28" pos:end="25:28">&amp;</operator><name pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:29">w</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:33">x8</name></name></expr></argument>,<argument pos:start="25:35" pos:end="25:39"><expr pos:start="25:35" pos:end="25:39"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:36">w</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:39">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
