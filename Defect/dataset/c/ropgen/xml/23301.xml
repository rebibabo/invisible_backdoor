<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23301.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">ram_decompress_buf</name><parameter_list pos:start="1:30" pos:end="1:75">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:48">RamDecompressState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:60">uint8_t</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">buf</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:74"><decl pos:start="1:68" pos:end="1:74"><type pos:start="1:68" pos:end="1:74"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:74">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">clen</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">zstream</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:24">avail_out</name></name> <operator pos:start="9:26" pos:end="9:26">=</operator> <name pos:start="9:28" pos:end="9:30">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:14">zstream</name><operator pos:start="11:15" pos:end="11:15">.</operator><name pos:start="11:16" pos:end="11:23">next_out</name></name> <operator pos:start="11:25" pos:end="11:25">=</operator> <name pos:start="11:27" pos:end="11:29">buf</name></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="43:5">while <condition pos:start="13:11" pos:end="13:36">(<expr pos:start="13:12" pos:end="13:35"><name pos:start="13:12" pos:end="13:31"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:21">zstream</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:31">avail_out</name></name> <operator pos:start="13:33" pos:end="13:33">&gt;</operator> <literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr>)</condition> <block pos:start="13:38" pos:end="43:5">{<block_content pos:start="15:9" pos:end="41:9">

        <if_stmt pos:start="15:9" pos:end="33:9"><if pos:start="15:9" pos:end="33:9">if <condition pos:start="15:12" pos:end="15:37">(<expr pos:start="15:13" pos:end="15:36"><name pos:start="15:13" pos:end="15:31"><name pos:start="15:13" pos:end="15:13">s</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:22">zstream</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:31">avail_in</name></name> <operator pos:start="15:33" pos:end="15:34">==</operator> <literal type="number" pos:start="15:36" pos:end="15:36">0</literal></expr>)</condition> <block pos:start="15:39" pos:end="33:9">{<block_content pos:start="17:13" pos:end="31:40">

            <if_stmt pos:start="17:13" pos:end="19:26"><if pos:start="17:13" pos:end="19:26">if <condition pos:start="17:16" pos:end="17:56">(<expr pos:start="17:17" pos:end="17:55"><call pos:start="17:17" pos:end="17:35"><name pos:start="17:17" pos:end="17:29">qemu_get_be16</name><argument_list pos:start="17:30" pos:end="17:35">(<argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:31">s</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:34">f</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:37" pos:end="17:38">!=</operator> <name pos:start="17:40" pos:end="17:55">RAM_CBLOCK_MAGIC</name></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:26"><block_content pos:start="19:17" pos:end="19:26">

                <return pos:start="19:17" pos:end="19:26">return <expr pos:start="19:24" pos:end="19:25"><operator pos:start="19:24" pos:end="19:24">-</operator><literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:39"><expr pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:16">clen</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:38"><name pos:start="21:20" pos:end="21:32">qemu_get_be16</name><argument_list pos:start="21:33" pos:end="21:38">(<argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:34">s</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:37">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:26"><if pos:start="23:13" pos:end="25:26">if <condition pos:start="23:16" pos:end="23:34">(<expr pos:start="23:17" pos:end="23:33"><name pos:start="23:17" pos:end="23:20">clen</name> <operator pos:start="23:22" pos:end="23:22">&gt;</operator> <name pos:start="23:24" pos:end="23:33">IOBUF_SIZE</name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:26"><block_content pos:start="25:17" pos:end="25:26">

                <return pos:start="25:17" pos:end="25:26">return <expr pos:start="25:24" pos:end="25:25"><operator pos:start="25:24" pos:end="25:24">-</operator><literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><call pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:27">qemu_get_buffer</name><argument_list pos:start="27:28" pos:end="27:47">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:32">f</name></name></expr></argument>, <argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:40">buf</name></name></expr></argument>, <argument pos:start="27:43" pos:end="27:46"><expr pos:start="27:43" pos:end="27:46"><name pos:start="27:43" pos:end="27:46">clen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">zstream</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:31">avail_in</name></name> <operator pos:start="29:33" pos:end="29:33">=</operator> <name pos:start="29:35" pos:end="29:38">clen</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">zstream</name><operator pos:start="31:23" pos:end="31:23">.</operator><name pos:start="31:24" pos:end="31:30">next_in</name></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <name pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:39">buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:51"><name pos:start="35:15" pos:end="35:21">inflate</name><argument_list pos:start="35:22" pos:end="35:51">(<argument pos:start="35:23" pos:end="35:33"><expr pos:start="35:23" pos:end="35:33"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:33"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:33">zstream</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:50"><expr pos:start="35:36" pos:end="35:50"><name pos:start="35:36" pos:end="35:50">Z_PARTIAL_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:47">(<expr pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:18">!=</operator> <name pos:start="37:20" pos:end="37:23">Z_OK</name> <operator pos:start="37:25" pos:end="37:26">&amp;&amp;</operator> <name pos:start="37:28" pos:end="37:30">ret</name> <operator pos:start="37:32" pos:end="37:33">!=</operator> <name pos:start="37:35" pos:end="37:46">Z_STREAM_END</name></expr>)</condition> <block pos:start="37:49" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <return pos:start="39:13" pos:end="39:22">return <expr pos:start="39:20" pos:end="39:21"><operator pos:start="39:20" pos:end="39:20">-</operator><literal type="number" pos:start="39:21" pos:end="39:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
