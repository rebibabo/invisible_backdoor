<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21167.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:71"><name pos:start="1:1" pos:end="1:14">MAKE_ACCESSORS</name><argument_list pos:start="1:15" pos:end="1:71">(<argument pos:start="1:16" pos:end="1:29">AVVDPAUContext</argument>, <argument pos:start="1:32" pos:end="1:44">vdpau_hwaccel</argument>, <argument pos:start="1:47" pos:end="1:61">AVVDPAU_Render2</argument>, <argument pos:start="1:64" pos:end="1:70">render2</argument>)</argument_list></macro>



<function pos:start="5:1" pos:end="193:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:24">ff_vdpau_common_init</name><parameter_list pos:start="5:25" pos:end="7:35">(<parameter pos:start="5:26" pos:end="5:46"><decl pos:start="5:26" pos:end="5:46"><type pos:start="5:26" pos:end="5:46"><name pos:start="5:26" pos:end="5:39">AVCodecContext</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:46">avctx</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:73"><decl pos:start="5:49" pos:end="5:73"><type pos:start="5:49" pos:end="5:73"><name pos:start="5:49" pos:end="5:65">VdpDecoderProfile</name></type> <name pos:start="5:67" pos:end="5:73">profile</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:34"><decl pos:start="7:26" pos:end="7:34"><type pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:28">int</name></type> <name pos:start="7:30" pos:end="7:34">level</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="193:1">{<block_content pos:start="11:5" pos:end="191:31">

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">VDPAUHWContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">hwctx</name> <init pos:start="11:27" pos:end="11:50">= <expr pos:start="11:29" pos:end="11:50"><name pos:start="11:29" pos:end="11:50"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:50">hwaccel_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">VDPAUContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:23">vdctx</name> <init pos:start="13:25" pos:end="13:60">= <expr pos:start="13:27" pos:end="13:60"><name pos:start="13:27" pos:end="13:60"><name pos:start="13:27" pos:end="13:31">avctx</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:41">internal</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:60">hwaccel_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:57"><decl pos:start="15:5" pos:end="15:56"><type pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:36">VdpVideoSurfaceQueryCapabilities</name> <modifier pos:start="15:38" pos:end="15:38">*</modifier></type><name pos:start="15:39" pos:end="15:56">surface_query_caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:31">VdpDecoderQueryCapabilities</name> <modifier pos:start="17:33" pos:end="17:33">*</modifier></type><name pos:start="17:34" pos:end="17:51">decoder_query_caps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:28"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">VdpDecoderCreate</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:28">create</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:15"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">void</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:14">func</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:13">VdpStatus</name></type> <name pos:start="23:15" pos:end="23:20">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:22"><decl pos:start="25:5" pos:end="25:21"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">VdpBool</name></type> <name pos:start="25:13" pos:end="25:21">supported</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:54"><decl pos:start="27:5" pos:end="27:22"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:22">max_level</name></decl>, <decl pos:start="27:25" pos:end="27:30"><type ref="prev" pos:start="27:5" pos:end="27:12"/><name pos:start="27:25" pos:end="27:30">max_mb</name></decl>, <decl pos:start="27:33" pos:end="27:41"><type ref="prev" pos:start="27:5" pos:end="27:12"/><name pos:start="27:33" pos:end="27:41">max_width</name></decl>, <decl pos:start="27:44" pos:end="27:53"><type ref="prev" pos:start="27:5" pos:end="27:12"/><name pos:start="27:44" pos:end="27:53">max_height</name></decl>;</decl_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:54">/* See vdpau/vdpau.h for alignment constraints. */</comment>

    <decl_stmt pos:start="31:5" pos:end="31:52"><decl pos:start="31:5" pos:end="31:51"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:18">width</name>  <init pos:start="31:21" pos:end="31:51">= <expr pos:start="31:23" pos:end="31:51"><operator pos:start="31:23" pos:end="31:23">(</operator><name pos:start="31:24" pos:end="31:41"><name pos:start="31:24" pos:end="31:28">avctx</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:41">coded_width</name></name> <operator pos:start="31:43" pos:end="31:43">+</operator> <literal type="number" pos:start="31:45" pos:end="31:45">1</literal><operator pos:start="31:46" pos:end="31:46">)</operator> <operator pos:start="31:48" pos:end="31:48">&amp;</operator> <operator pos:start="31:50" pos:end="31:50">~</operator><literal type="number" pos:start="31:51" pos:end="31:51">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:53"><decl pos:start="33:5" pos:end="33:52"><type pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:12">uint32_t</name></type> <name pos:start="33:14" pos:end="33:19">height</name> <init pos:start="33:21" pos:end="33:52">= <expr pos:start="33:23" pos:end="33:52"><operator pos:start="33:23" pos:end="33:23">(</operator><name pos:start="33:24" pos:end="33:42"><name pos:start="33:24" pos:end="33:28">avctx</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:42">coded_height</name></name> <operator pos:start="33:44" pos:end="33:44">+</operator> <literal type="number" pos:start="33:46" pos:end="33:46">3</literal><operator pos:start="33:47" pos:end="33:47">)</operator> <operator pos:start="33:49" pos:end="33:49">&amp;</operator> <operator pos:start="33:51" pos:end="33:51">~</operator><literal type="number" pos:start="33:52" pos:end="33:52">3</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:9">vdctx</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">width</name></name>            <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:40">UINT32_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:9">vdctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">height</name></name>           <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:40">UINT32_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:16"><name pos:start="41:5" pos:end="41:9">hwctx</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">reset</name></name>            <operator pos:start="41:29" pos:end="41:29">=</operator> <literal type="number" pos:start="41:31" pos:end="41:31">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:15">(<expr pos:start="45:9" pos:end="45:14"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:14">hwctx</name></expr>)</condition> <block pos:start="45:17" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:17">

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:13">vdctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">device</name></name>  <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:43">VDP_INVALID_HANDLE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:121"><expr pos:start="49:9" pos:end="49:120"><call pos:start="49:9" pos:end="49:120"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:120">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="49:39" pos:end="49:119"><expr pos:start="49:39" pos:end="49:119"><literal type="string" pos:start="49:39" pos:end="49:119">"hwaccel_context has not been setup by the user application, cannot initialize\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="57:53">(<expr pos:start="57:9" pos:end="57:52"><name pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:13">hwctx</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">context</name><operator pos:start="57:23" pos:end="57:23">.</operator><name pos:start="57:24" pos:end="57:30">decoder</name></name> <operator pos:start="57:32" pos:end="57:33">!=</operator> <name pos:start="57:35" pos:end="57:52">VDP_INVALID_HANDLE</name></expr>)</condition> <block pos:start="57:55" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:17">

        <expr_stmt pos:start="59:9" pos:end="59:48"><expr pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:13">vdctx</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:22">decoder</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:47"><name pos:start="59:26" pos:end="59:30">hwctx</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:39">context</name><operator pos:start="59:40" pos:end="59:40">.</operator><name pos:start="59:41" pos:end="59:47">decoder</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:47"><expr pos:start="61:9" pos:end="61:46"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:13">vdctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">render</name></name>  <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:46"><name pos:start="61:26" pos:end="61:30">hwctx</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:39">context</name><operator pos:start="61:40" pos:end="61:40">.</operator><name pos:start="61:41" pos:end="61:46">render</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:13">vdctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">device</name></name>  <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:43">VDP_INVALID_HANDLE</name></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:17">return <expr pos:start="65:16" pos:end="65:16"><literal type="number" pos:start="65:16" pos:end="65:16">0</literal></expr>;</return> <comment type="block" pos:start="65:19" pos:end="65:47">/* Decoder created by user */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:44"><expr pos:start="71:5" pos:end="71:43"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:9">vdctx</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:17">device</name></name>           <operator pos:start="71:29" pos:end="71:29">=</operator> <name pos:start="71:31" pos:end="71:43"><name pos:start="71:31" pos:end="71:35">hwctx</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:43">device</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:54"><expr pos:start="73:5" pos:end="73:53"><name pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:9">vdctx</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:27">get_proc_address</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <name pos:start="73:31" pos:end="73:53"><name pos:start="73:31" pos:end="73:35">hwctx</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:53">get_proc_address</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="77:5" pos:end="79:32"><if pos:start="77:5" pos:end="79:32">if <condition pos:start="77:8" pos:end="77:18">(<expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:13">level</name> <operator pos:start="77:15" pos:end="77:15">&lt;</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:32"><block_content pos:start="79:9" pos:end="79:32">

        <return pos:start="79:9" pos:end="79:32">return <expr pos:start="79:16" pos:end="79:31"><call pos:start="79:16" pos:end="79:31"><name pos:start="79:16" pos:end="79:22">AVERROR</name><argument_list pos:start="79:23" pos:end="79:31">(<argument pos:start="79:24" pos:end="79:30"><expr pos:start="79:24" pos:end="79:30"><name pos:start="79:24" pos:end="79:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="87:44"><expr pos:start="83:5" pos:end="87:43"><name pos:start="83:5" pos:end="83:10">status</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="87:43"><name pos:start="83:14" pos:end="83:36"><name pos:start="83:14" pos:end="83:18">vdctx</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:36">get_proc_address</name></name><argument_list pos:start="83:37" pos:end="87:43">(<argument pos:start="83:38" pos:end="83:50"><expr pos:start="83:38" pos:end="83:50"><name pos:start="83:38" pos:end="83:50"><name pos:start="83:38" pos:end="83:42">vdctx</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:50">device</name></name></expr></argument>,

                                     <argument pos:start="85:38" pos:end="85:81"><expr pos:start="85:38" pos:end="85:81"><name pos:start="85:38" pos:end="85:81">VDP_FUNC_ID_VIDEO_SURFACE_QUERY_CAPABILITIES</name></expr></argument>,

                                     <argument pos:start="87:38" pos:end="87:42"><expr pos:start="87:38" pos:end="87:42"><operator pos:start="87:38" pos:end="87:38">&amp;</operator><name pos:start="87:39" pos:end="87:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="95:34"><if pos:start="89:5" pos:end="91:35">if <condition pos:start="89:8" pos:end="89:32">(<expr pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:14">status</name> <operator pos:start="89:16" pos:end="89:17">!=</operator> <name pos:start="89:19" pos:end="89:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:35"><block_content pos:start="91:9" pos:end="91:35">

        <return pos:start="91:9" pos:end="91:35">return <expr pos:start="91:16" pos:end="91:34"><call pos:start="91:16" pos:end="91:34"><name pos:start="91:16" pos:end="91:26">vdpau_error</name><argument_list pos:start="91:27" pos:end="91:34">(<argument pos:start="91:28" pos:end="91:33"><expr pos:start="91:28" pos:end="91:33"><name pos:start="91:28" pos:end="91:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="93:5" pos:end="95:34">else<block type="pseudo" pos:start="95:9" pos:end="95:34"><block_content pos:start="95:9" pos:end="95:34">

        <expr_stmt pos:start="95:9" pos:end="95:34"><expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:26">surface_query_caps</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:33">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="101:57"><expr pos:start="99:5" pos:end="101:56"><name pos:start="99:5" pos:end="99:10">status</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <call pos:start="99:14" pos:end="101:56"><name pos:start="99:14" pos:end="99:31">surface_query_caps</name><argument_list pos:start="99:32" pos:end="101:56">(<argument pos:start="99:33" pos:end="99:45"><expr pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:37">vdctx</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:45">device</name></name></expr></argument>, <argument pos:start="99:48" pos:end="99:66"><expr pos:start="99:48" pos:end="99:66"><name pos:start="99:48" pos:end="99:66">VDP_CHROMA_TYPE_420</name></expr></argument>, <argument pos:start="99:69" pos:end="99:78"><expr pos:start="99:69" pos:end="99:78"><operator pos:start="99:69" pos:end="99:69">&amp;</operator><name pos:start="99:70" pos:end="99:78">supported</name></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:42"><expr pos:start="101:33" pos:end="101:42"><operator pos:start="101:33" pos:end="101:33">&amp;</operator><name pos:start="101:34" pos:end="101:42">max_width</name></expr></argument>, <argument pos:start="101:45" pos:end="101:55"><expr pos:start="101:45" pos:end="101:55"><operator pos:start="101:45" pos:end="101:45">&amp;</operator><name pos:start="101:46" pos:end="101:55">max_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="105:35"><if pos:start="103:5" pos:end="105:35">if <condition pos:start="103:8" pos:end="103:32">(<expr pos:start="103:9" pos:end="103:31"><name pos:start="103:9" pos:end="103:14">status</name> <operator pos:start="103:16" pos:end="103:17">!=</operator> <name pos:start="103:19" pos:end="103:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:35"><block_content pos:start="105:9" pos:end="105:35">

        <return pos:start="105:9" pos:end="105:35">return <expr pos:start="105:16" pos:end="105:34"><call pos:start="105:16" pos:end="105:34"><name pos:start="105:16" pos:end="105:26">vdpau_error</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="111:32"><if pos:start="107:5" pos:end="111:32">if <condition pos:start="107:8" pos:end="109:49">(<expr pos:start="107:9" pos:end="109:48"><name pos:start="107:9" pos:end="107:17">supported</name> <operator pos:start="107:19" pos:end="107:20">!=</operator> <name pos:start="107:22" pos:end="107:29">VDP_TRUE</name> <operator pos:start="107:31" pos:end="107:32">||</operator>

        <name pos:start="109:9" pos:end="109:17">max_width</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <name pos:start="109:21" pos:end="109:25">width</name> <operator pos:start="109:27" pos:end="109:28">||</operator> <name pos:start="109:30" pos:end="109:39">max_height</name> <operator pos:start="109:41" pos:end="109:41">&lt;</operator> <name pos:start="109:43" pos:end="109:48">height</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:32"><block_content pos:start="111:9" pos:end="111:32">

        <return pos:start="111:9" pos:end="111:32">return <expr pos:start="111:16" pos:end="111:31"><call pos:start="111:16" pos:end="111:31"><name pos:start="111:16" pos:end="111:22">AVERROR</name><argument_list pos:start="111:23" pos:end="111:31">(<argument pos:start="111:24" pos:end="111:30"><expr pos:start="111:24" pos:end="111:30"><name pos:start="111:24" pos:end="111:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="119:44"><expr pos:start="115:5" pos:end="119:43"><name pos:start="115:5" pos:end="115:10">status</name> <operator pos:start="115:12" pos:end="115:12">=</operator> <call pos:start="115:14" pos:end="119:43"><name pos:start="115:14" pos:end="115:36"><name pos:start="115:14" pos:end="115:18">vdctx</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:36">get_proc_address</name></name><argument_list pos:start="115:37" pos:end="119:43">(<argument pos:start="115:38" pos:end="115:50"><expr pos:start="115:38" pos:end="115:50"><name pos:start="115:38" pos:end="115:50"><name pos:start="115:38" pos:end="115:42">vdctx</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:50">device</name></name></expr></argument>,

                                     <argument pos:start="117:38" pos:end="117:75"><expr pos:start="117:38" pos:end="117:75"><name pos:start="117:38" pos:end="117:75">VDP_FUNC_ID_DECODER_QUERY_CAPABILITIES</name></expr></argument>,

                                     <argument pos:start="119:38" pos:end="119:42"><expr pos:start="119:38" pos:end="119:42"><operator pos:start="119:38" pos:end="119:38">&amp;</operator><name pos:start="119:39" pos:end="119:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="127:34"><if pos:start="121:5" pos:end="123:35">if <condition pos:start="121:8" pos:end="121:32">(<expr pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:14">status</name> <operator pos:start="121:16" pos:end="121:17">!=</operator> <name pos:start="121:19" pos:end="121:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:35"><block_content pos:start="123:9" pos:end="123:35">

        <return pos:start="123:9" pos:end="123:35">return <expr pos:start="123:16" pos:end="123:34"><call pos:start="123:16" pos:end="123:34"><name pos:start="123:16" pos:end="123:26">vdpau_error</name><argument_list pos:start="123:27" pos:end="123:34">(<argument pos:start="123:28" pos:end="123:33"><expr pos:start="123:28" pos:end="123:33"><name pos:start="123:28" pos:end="123:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="125:5" pos:end="127:34">else<block type="pseudo" pos:start="127:9" pos:end="127:34"><block_content pos:start="127:9" pos:end="127:34">

        <expr_stmt pos:start="127:9" pos:end="127:34"><expr pos:start="127:9" pos:end="127:33"><name pos:start="127:9" pos:end="127:26">decoder_query_caps</name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:33">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="133:66"><expr pos:start="131:5" pos:end="133:65"><name pos:start="131:5" pos:end="131:10">status</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <call pos:start="131:14" pos:end="133:65"><name pos:start="131:14" pos:end="131:31">decoder_query_caps</name><argument_list pos:start="131:32" pos:end="133:65">(<argument pos:start="131:33" pos:end="131:45"><expr pos:start="131:33" pos:end="131:45"><name pos:start="131:33" pos:end="131:45"><name pos:start="131:33" pos:end="131:37">vdctx</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:45">device</name></name></expr></argument>, <argument pos:start="131:48" pos:end="131:54"><expr pos:start="131:48" pos:end="131:54"><name pos:start="131:48" pos:end="131:54">profile</name></expr></argument>, <argument pos:start="131:57" pos:end="131:66"><expr pos:start="131:57" pos:end="131:66"><operator pos:start="131:57" pos:end="131:57">&amp;</operator><name pos:start="131:58" pos:end="131:66">supported</name></expr></argument>, <argument pos:start="131:69" pos:end="131:78"><expr pos:start="131:69" pos:end="131:78"><operator pos:start="131:69" pos:end="131:69">&amp;</operator><name pos:start="131:70" pos:end="131:78">max_level</name></expr></argument>,

                                <argument pos:start="133:33" pos:end="133:39"><expr pos:start="133:33" pos:end="133:39"><operator pos:start="133:33" pos:end="133:33">&amp;</operator><name pos:start="133:34" pos:end="133:39">max_mb</name></expr></argument>, <argument pos:start="133:42" pos:end="133:51"><expr pos:start="133:42" pos:end="133:51"><operator pos:start="133:42" pos:end="133:42">&amp;</operator><name pos:start="133:43" pos:end="133:51">max_width</name></expr></argument>, <argument pos:start="133:54" pos:end="133:64"><expr pos:start="133:54" pos:end="133:64"><operator pos:start="133:54" pos:end="133:54">&amp;</operator><name pos:start="133:55" pos:end="133:64">max_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="137:35"><if pos:start="135:5" pos:end="137:35">if <condition pos:start="135:8" pos:end="135:32">(<expr pos:start="135:9" pos:end="135:31"><name pos:start="135:9" pos:end="135:14">status</name> <operator pos:start="135:16" pos:end="135:17">!=</operator> <name pos:start="135:19" pos:end="135:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="137:35"><block_content pos:start="137:9" pos:end="137:35">

        <return pos:start="137:9" pos:end="137:35">return <expr pos:start="137:16" pos:end="137:34"><call pos:start="137:16" pos:end="137:34"><name pos:start="137:16" pos:end="137:26">vdpau_error</name><argument_list pos:start="137:27" pos:end="137:34">(<argument pos:start="137:28" pos:end="137:33"><expr pos:start="137:28" pos:end="137:33"><name pos:start="137:28" pos:end="137:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="145:32"><if pos:start="141:5" pos:end="145:32">if <condition pos:start="141:8" pos:end="143:49">(<expr pos:start="141:9" pos:end="143:48"><name pos:start="141:9" pos:end="141:17">supported</name> <operator pos:start="141:19" pos:end="141:20">!=</operator> <name pos:start="141:22" pos:end="141:29">VDP_TRUE</name> <operator pos:start="141:31" pos:end="141:32">||</operator> <name pos:start="141:34" pos:end="141:42">max_level</name> <operator pos:start="141:44" pos:end="141:44">&lt;</operator> <name pos:start="141:46" pos:end="141:50">level</name> <operator pos:start="141:52" pos:end="141:53">||</operator>

        <name pos:start="143:9" pos:end="143:17">max_width</name> <operator pos:start="143:19" pos:end="143:19">&lt;</operator> <name pos:start="143:21" pos:end="143:25">width</name> <operator pos:start="143:27" pos:end="143:28">||</operator> <name pos:start="143:30" pos:end="143:39">max_height</name> <operator pos:start="143:41" pos:end="143:41">&lt;</operator> <name pos:start="143:43" pos:end="143:48">height</name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:32"><block_content pos:start="145:9" pos:end="145:32">

        <return pos:start="145:9" pos:end="145:32">return <expr pos:start="145:16" pos:end="145:31"><call pos:start="145:16" pos:end="145:31"><name pos:start="145:16" pos:end="145:22">AVERROR</name><argument_list pos:start="145:23" pos:end="145:31">(<argument pos:start="145:24" pos:end="145:30"><expr pos:start="145:24" pos:end="145:30"><name pos:start="145:24" pos:end="145:30">ENOTSUP</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="151:44"><expr pos:start="149:5" pos:end="151:43"><name pos:start="149:5" pos:end="149:10">status</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <call pos:start="149:14" pos:end="151:43"><name pos:start="149:14" pos:end="149:36"><name pos:start="149:14" pos:end="149:18">vdctx</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:36">get_proc_address</name></name><argument_list pos:start="149:37" pos:end="151:43">(<argument pos:start="149:38" pos:end="149:50"><expr pos:start="149:38" pos:end="149:50"><name pos:start="149:38" pos:end="149:50"><name pos:start="149:38" pos:end="149:42">vdctx</name><operator pos:start="149:43" pos:end="149:44">-&gt;</operator><name pos:start="149:45" pos:end="149:50">device</name></name></expr></argument>, <argument pos:start="149:53" pos:end="149:78"><expr pos:start="149:53" pos:end="149:78"><name pos:start="149:53" pos:end="149:78">VDP_FUNC_ID_DECODER_CREATE</name></expr></argument>,

                                     <argument pos:start="151:38" pos:end="151:42"><expr pos:start="151:38" pos:end="151:42"><operator pos:start="151:38" pos:end="151:38">&amp;</operator><name pos:start="151:39" pos:end="151:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="159:22"><if pos:start="153:5" pos:end="155:35">if <condition pos:start="153:8" pos:end="153:32">(<expr pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:14">status</name> <operator pos:start="153:16" pos:end="153:17">!=</operator> <name pos:start="153:19" pos:end="153:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="155:9" pos:end="155:35"><block_content pos:start="155:9" pos:end="155:35">

        <return pos:start="155:9" pos:end="155:35">return <expr pos:start="155:16" pos:end="155:34"><call pos:start="155:16" pos:end="155:34"><name pos:start="155:16" pos:end="155:26">vdpau_error</name><argument_list pos:start="155:27" pos:end="155:34">(<argument pos:start="155:28" pos:end="155:33"><expr pos:start="155:28" pos:end="155:33"><name pos:start="155:28" pos:end="155:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="157:5" pos:end="159:22">else<block type="pseudo" pos:start="159:9" pos:end="159:22"><block_content pos:start="159:9" pos:end="159:22">

        <expr_stmt pos:start="159:9" pos:end="159:22"><expr pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:14">create</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <name pos:start="159:18" pos:end="159:21">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="165:44"><expr pos:start="163:5" pos:end="165:43"><name pos:start="163:5" pos:end="163:10">status</name> <operator pos:start="163:12" pos:end="163:12">=</operator> <call pos:start="163:14" pos:end="165:43"><name pos:start="163:14" pos:end="163:36"><name pos:start="163:14" pos:end="163:18">vdctx</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:36">get_proc_address</name></name><argument_list pos:start="163:37" pos:end="165:43">(<argument pos:start="163:38" pos:end="163:50"><expr pos:start="163:38" pos:end="163:50"><name pos:start="163:38" pos:end="163:50"><name pos:start="163:38" pos:end="163:42">vdctx</name><operator pos:start="163:43" pos:end="163:44">-&gt;</operator><name pos:start="163:45" pos:end="163:50">device</name></name></expr></argument>, <argument pos:start="163:53" pos:end="163:78"><expr pos:start="163:53" pos:end="163:78"><name pos:start="163:53" pos:end="163:78">VDP_FUNC_ID_DECODER_RENDER</name></expr></argument>,

                                     <argument pos:start="165:38" pos:end="165:42"><expr pos:start="165:38" pos:end="165:42"><operator pos:start="165:38" pos:end="165:38">&amp;</operator><name pos:start="165:39" pos:end="165:42">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="173:29"><if pos:start="167:5" pos:end="169:35">if <condition pos:start="167:8" pos:end="167:32">(<expr pos:start="167:9" pos:end="167:31"><name pos:start="167:9" pos:end="167:14">status</name> <operator pos:start="167:16" pos:end="167:17">!=</operator> <name pos:start="167:19" pos:end="167:31">VDP_STATUS_OK</name></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:35"><block_content pos:start="169:9" pos:end="169:35">

        <return pos:start="169:9" pos:end="169:35">return <expr pos:start="169:16" pos:end="169:34"><call pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:26">vdpau_error</name><argument_list pos:start="169:27" pos:end="169:34">(<argument pos:start="169:28" pos:end="169:33"><expr pos:start="169:28" pos:end="169:33"><name pos:start="169:28" pos:end="169:33">status</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="171:5" pos:end="173:29">else<block type="pseudo" pos:start="173:9" pos:end="173:29"><block_content pos:start="173:9" pos:end="173:29">

        <expr_stmt pos:start="173:9" pos:end="173:29"><expr pos:start="173:9" pos:end="173:28"><name pos:start="173:9" pos:end="173:21"><name pos:start="173:9" pos:end="173:13">vdctx</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:21">render</name></name> <operator pos:start="173:23" pos:end="173:23">=</operator> <name pos:start="173:25" pos:end="173:28">func</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="179:37"><expr pos:start="177:5" pos:end="179:36"><name pos:start="177:5" pos:end="177:10">status</name> <operator pos:start="177:12" pos:end="177:12">=</operator> <call pos:start="177:14" pos:end="179:36"><name pos:start="177:14" pos:end="177:19">create</name><argument_list pos:start="177:20" pos:end="179:36">(<argument pos:start="177:21" pos:end="177:33"><expr pos:start="177:21" pos:end="177:33"><name pos:start="177:21" pos:end="177:33"><name pos:start="177:21" pos:end="177:25">vdctx</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:33">device</name></name></expr></argument>, <argument pos:start="177:36" pos:end="177:42"><expr pos:start="177:36" pos:end="177:42"><name pos:start="177:36" pos:end="177:42">profile</name></expr></argument>, <argument pos:start="177:45" pos:end="177:49"><expr pos:start="177:45" pos:end="177:49"><name pos:start="177:45" pos:end="177:49">width</name></expr></argument>, <argument pos:start="177:52" pos:end="177:57"><expr pos:start="177:52" pos:end="177:57"><name pos:start="177:52" pos:end="177:57">height</name></expr></argument>, <argument pos:start="177:60" pos:end="177:70"><expr pos:start="177:60" pos:end="177:70"><name pos:start="177:60" pos:end="177:70"><name pos:start="177:60" pos:end="177:64">avctx</name><operator pos:start="177:65" pos:end="177:66">-&gt;</operator><name pos:start="177:67" pos:end="177:70">refs</name></name></expr></argument>,

                    <argument pos:start="179:21" pos:end="179:35"><expr pos:start="179:21" pos:end="179:35"><operator pos:start="179:21" pos:end="179:21">&amp;</operator><name pos:start="179:22" pos:end="179:35"><name pos:start="179:22" pos:end="179:26">vdctx</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:35">decoder</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="187:5"><if pos:start="181:5" pos:end="187:5">if <condition pos:start="181:8" pos:end="181:32">(<expr pos:start="181:9" pos:end="181:31"><name pos:start="181:9" pos:end="181:14">status</name> <operator pos:start="181:16" pos:end="181:17">==</operator> <name pos:start="181:19" pos:end="181:31">VDP_STATUS_OK</name></expr>)</condition> <block pos:start="181:34" pos:end="187:5">{<block_content pos:start="183:9" pos:end="185:44">

        <expr_stmt pos:start="183:9" pos:end="183:43"><expr pos:start="183:9" pos:end="183:42"><name pos:start="183:9" pos:end="183:20"><name pos:start="183:9" pos:end="183:13">vdctx</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:20">width</name></name>  <operator pos:start="183:23" pos:end="183:23">=</operator> <name pos:start="183:25" pos:end="183:42"><name pos:start="183:25" pos:end="183:29">avctx</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:42">coded_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:44"><expr pos:start="185:9" pos:end="185:43"><name pos:start="185:9" pos:end="185:21"><name pos:start="185:9" pos:end="185:13">vdctx</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:21">height</name></name> <operator pos:start="185:23" pos:end="185:23">=</operator> <name pos:start="185:25" pos:end="185:43"><name pos:start="185:25" pos:end="185:29">avctx</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:43">coded_height</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="191:5" pos:end="191:31">return <expr pos:start="191:12" pos:end="191:30"><call pos:start="191:12" pos:end="191:30"><name pos:start="191:12" pos:end="191:22">vdpau_error</name><argument_list pos:start="191:23" pos:end="191:30">(<argument pos:start="191:24" pos:end="191:29"><expr pos:start="191:24" pos:end="191:29"><name pos:start="191:24" pos:end="191:29">status</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
