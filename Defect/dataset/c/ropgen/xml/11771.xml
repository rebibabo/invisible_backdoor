<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11771.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">float32</name></type> <name pos:start="1:9" pos:end="1:20">float32_sqrt</name><parameter_list pos:start="1:21" pos:end="1:46">( <parameter pos:start="1:23" pos:end="1:44"><decl pos:start="1:23" pos:end="1:44"><type pos:start="1:23" pos:end="1:31"><name pos:start="1:23" pos:end="1:29">float32</name> <name pos:start="1:31" pos:end="1:31">a</name></type> <name pos:start="1:33" pos:end="1:44">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="89:59">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int16</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>, <decl pos:start="7:17" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:9"/><name pos:start="7:17" pos:end="7:20">zExp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">bits32</name></type> <name pos:start="9:12" pos:end="9:15">aSig</name></decl>, <decl pos:start="9:18" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:10"/><name pos:start="9:18" pos:end="9:21">zSig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">bits64</name></type> <name pos:start="11:12" pos:end="11:14">rem</name></decl>, <decl pos:start="11:17" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:17" pos:end="11:20">term</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:8">aSig</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:29">extractFloat32Frac</name><argument_list pos:start="15:30" pos:end="15:34">( <argument pos:start="15:32" pos:end="15:32"><expr pos:start="15:32" pos:end="15:32"><name pos:start="15:32" pos:end="15:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:8">aExp</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:28">extractFloat32Exp</name><argument_list pos:start="17:29" pos:end="17:33">( <argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:9">aSign</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:30">extractFloat32Sign</name><argument_list pos:start="19:31" pos:end="19:35">( <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:23">( <expr pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:13">aExp</name> <operator pos:start="21:15" pos:end="21:16">==</operator> <literal type="number" pos:start="21:18" pos:end="21:21">0xFF</literal></expr> )</condition> <block pos:start="21:25" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:35">

        <if_stmt pos:start="23:9" pos:end="23:66"><if pos:start="23:9" pos:end="23:66">if <condition pos:start="23:12" pos:end="23:19">( <expr pos:start="23:14" pos:end="23:17"><name pos:start="23:14" pos:end="23:17">aSig</name></expr> )</condition><block type="pseudo" pos:start="23:21" pos:end="23:66"><block_content pos:start="23:21" pos:end="23:66"> <return pos:start="23:21" pos:end="23:66">return <expr pos:start="23:28" pos:end="23:65"><call pos:start="23:28" pos:end="23:65"><name pos:start="23:28" pos:end="23:46">propagateFloat32NaN</name><argument_list pos:start="23:47" pos:end="23:65">( <argument pos:start="23:49" pos:end="23:49"><expr pos:start="23:49" pos:end="23:49"><name pos:start="23:49" pos:end="23:49">a</name></expr></argument>, <argument pos:start="23:52" pos:end="23:63"><expr pos:start="23:52" pos:end="23:63"><literal type="number" pos:start="23:52" pos:end="23:52">0</literal> <name pos:start="23:54" pos:end="23:63">STATUS_VAR</name></expr></argument> )</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="25:9" pos:end="25:32"><if pos:start="25:9" pos:end="25:32">if <condition pos:start="25:12" pos:end="25:22">( <expr pos:start="25:14" pos:end="25:20"><operator pos:start="25:14" pos:end="25:14">!</operator> <name pos:start="25:16" pos:end="25:20">aSign</name></expr> )</condition><block type="pseudo" pos:start="25:24" pos:end="25:32"><block_content pos:start="25:24" pos:end="25:32"> <return pos:start="25:24" pos:end="25:32">return <expr pos:start="25:31" pos:end="25:31"><name pos:start="25:31" pos:end="25:31">a</name></expr>;</return></block_content></block></if></if_stmt>

        <macro pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:19">float_raise</name><argument_list pos:start="27:20" pos:end="27:51">( <argument pos:start="27:22" pos:end="27:50">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="27:52" pos:end="27:52">;</empty_stmt>

        <return pos:start="29:9" pos:end="29:35">return <expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34">float32_default_nan</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:16">( <expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:14">aSign</name></expr> )</condition> <block pos:start="33:18" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:35">

        <if_stmt pos:start="35:9" pos:end="35:45"><if pos:start="35:9" pos:end="35:45">if <condition pos:start="35:12" pos:end="35:35">( <expr pos:start="35:14" pos:end="35:33"><operator pos:start="35:14" pos:end="35:14">(</operator> <name pos:start="35:16" pos:end="35:19">aExp</name> <operator pos:start="35:21" pos:end="35:21">|</operator> <name pos:start="35:23" pos:end="35:26">aSig</name> <operator pos:start="35:28" pos:end="35:28">)</operator> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="number" pos:start="35:33" pos:end="35:33">0</literal></expr> )</condition><block type="pseudo" pos:start="35:37" pos:end="35:45"><block_content pos:start="35:37" pos:end="35:45"> <return pos:start="35:37" pos:end="35:45">return <expr pos:start="35:44" pos:end="35:44"><name pos:start="35:44" pos:end="35:44">a</name></expr>;</return></block_content></block></if></if_stmt>

        <macro pos:start="37:9" pos:end="37:51"><name pos:start="37:9" pos:end="37:19">float_raise</name><argument_list pos:start="37:20" pos:end="37:51">( <argument pos:start="37:22" pos:end="37:50">float_flag_invalid STATUS_VAR</argument>)</argument_list></macro><empty_stmt pos:start="37:52" pos:end="37:52">;</empty_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">float32_default_nan</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:20">( <expr pos:start="43:10" pos:end="43:18"><name pos:start="43:10" pos:end="43:13">aExp</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr> )</condition> <block pos:start="43:22" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:56">

        <if_stmt pos:start="45:9" pos:end="45:34"><if pos:start="45:9" pos:end="45:34">if <condition pos:start="45:12" pos:end="45:24">( <expr pos:start="45:14" pos:end="45:22"><name pos:start="45:14" pos:end="45:17">aSig</name> <operator pos:start="45:19" pos:end="45:20">==</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr> )</condition><block type="pseudo" pos:start="45:26" pos:end="45:34"><block_content pos:start="45:26" pos:end="45:34"> <return pos:start="45:26" pos:end="45:34">return <expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><call pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:33">normalizeFloat32Subnormal</name><argument_list pos:start="47:34" pos:end="47:55">( <argument pos:start="47:36" pos:end="47:39"><expr pos:start="47:36" pos:end="47:39"><name pos:start="47:36" pos:end="47:39">aSig</name></expr></argument>, <argument pos:start="47:42" pos:end="47:46"><expr pos:start="47:42" pos:end="47:46"><operator pos:start="47:42" pos:end="47:42">&amp;</operator><name pos:start="47:43" pos:end="47:46">aExp</name></expr></argument>, <argument pos:start="47:49" pos:end="47:53"><expr pos:start="47:49" pos:end="47:53"><operator pos:start="47:49" pos:end="47:49">&amp;</operator><name pos:start="47:50" pos:end="47:53">aSig</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:8">zExp</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <operator pos:start="51:12" pos:end="51:12">(</operator> <operator pos:start="51:14" pos:end="51:14">(</operator> <name pos:start="51:16" pos:end="51:19">aExp</name> <operator pos:start="51:21" pos:end="51:21">-</operator> <literal type="number" pos:start="51:23" pos:end="51:26">0x7F</literal> <operator pos:start="51:28" pos:end="51:28">)</operator><operator pos:start="51:29" pos:end="51:30">&gt;&gt;</operator><literal type="number" pos:start="51:31" pos:end="51:31">1</literal> <operator pos:start="51:33" pos:end="51:33">)</operator> <operator pos:start="51:35" pos:end="51:35">+</operator> <literal type="number" pos:start="51:37" pos:end="51:40">0x7E</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:8">aSig</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <operator pos:start="53:12" pos:end="53:12">(</operator> <name pos:start="53:14" pos:end="53:17">aSig</name> <operator pos:start="53:19" pos:end="53:19">|</operator> <literal type="number" pos:start="53:21" pos:end="53:30">0x00800000</literal> <operator pos:start="53:32" pos:end="53:32">)</operator><operator pos:start="53:33" pos:end="53:34">&lt;&lt;</operator><literal type="number" pos:start="53:35" pos:end="53:35">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:44"><expr pos:start="55:5" pos:end="55:43"><name pos:start="55:5" pos:end="55:8">zSig</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <call pos:start="55:12" pos:end="55:39"><name pos:start="55:12" pos:end="55:25">estimateSqrt32</name><argument_list pos:start="55:26" pos:end="55:39">( <argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">aExp</name></expr></argument>, <argument pos:start="55:34" pos:end="55:37"><expr pos:start="55:34" pos:end="55:37"><name pos:start="55:34" pos:end="55:37">aSig</name></expr></argument> )</argument_list></call> <operator pos:start="55:41" pos:end="55:41">+</operator> <literal type="number" pos:start="55:43" pos:end="55:43">2</literal></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="83:5"><if pos:start="57:5" pos:end="83:5">if <condition pos:start="57:8" pos:end="57:31">( <expr pos:start="57:10" pos:end="57:29"><operator pos:start="57:10" pos:end="57:10">(</operator> <name pos:start="57:12" pos:end="57:15">zSig</name> <operator pos:start="57:17" pos:end="57:17">&amp;</operator> <literal type="number" pos:start="57:19" pos:end="57:22">0x7F</literal> <operator pos:start="57:24" pos:end="57:24">)</operator> <operator pos:start="57:26" pos:end="57:27">&lt;=</operator> <literal type="number" pos:start="57:29" pos:end="57:29">5</literal></expr> )</condition> <block pos:start="57:33" pos:end="83:5">{<block_content pos:start="59:9" pos:end="81:29">

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:23">( <expr pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:17">zSig</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <literal type="number" pos:start="59:21" pos:end="59:21">2</literal></expr> )</condition> <block pos:start="59:25" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:30">

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:16">zSig</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <literal type="number" pos:start="61:20" pos:end="61:29">0x7FFFFFFF</literal></expr>;</expr_stmt>

            <goto pos:start="63:13" pos:end="63:30">goto <name pos:start="63:18" pos:end="63:29">roundAndPack</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:12">aSig</name> <operator pos:start="67:14" pos:end="67:16">&gt;&gt;=</operator> <name pos:start="67:18" pos:end="67:21">aExp</name> <operator pos:start="67:23" pos:end="67:23">&amp;</operator> <literal type="number" pos:start="67:25" pos:end="67:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:40"><expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:12">term</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <operator pos:start="69:16" pos:end="69:16">(</operator> <operator pos:start="69:18" pos:end="69:18">(</operator><name pos:start="69:19" pos:end="69:24">bits64</name><operator pos:start="69:25" pos:end="69:25">)</operator> <name pos:start="69:27" pos:end="69:30">zSig</name> <operator pos:start="69:32" pos:end="69:32">)</operator> <operator pos:start="69:34" pos:end="69:34">*</operator> <name pos:start="69:36" pos:end="69:39">zSig</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:47"><expr pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:11">rem</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">(</operator> <operator pos:start="71:17" pos:end="71:17">(</operator> <operator pos:start="71:19" pos:end="71:19">(</operator><name pos:start="71:20" pos:end="71:25">bits64</name><operator pos:start="71:26" pos:end="71:26">)</operator> <name pos:start="71:28" pos:end="71:31">aSig</name> <operator pos:start="71:33" pos:end="71:33">)</operator><operator pos:start="71:34" pos:end="71:35">&lt;&lt;</operator><literal type="number" pos:start="71:36" pos:end="71:37">32</literal> <operator pos:start="71:39" pos:end="71:39">)</operator> <operator pos:start="71:41" pos:end="71:41">-</operator> <name pos:start="71:43" pos:end="71:46">term</name></expr>;</expr_stmt>

        <while pos:start="73:9" pos:end="79:9">while <condition pos:start="73:15" pos:end="73:35">( <expr pos:start="73:17" pos:end="73:33"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:24">sbits64</name><operator pos:start="73:25" pos:end="73:25">)</operator> <name pos:start="73:27" pos:end="73:29">rem</name> <operator pos:start="73:31" pos:end="73:31">&lt;</operator> <literal type="number" pos:start="73:33" pos:end="73:33">0</literal></expr> )</condition> <block pos:start="73:37" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:48">

            <expr_stmt pos:start="75:13" pos:end="75:19"><expr pos:start="75:13" pos:end="75:18"><operator pos:start="75:13" pos:end="75:14">--</operator><name pos:start="75:15" pos:end="75:18">zSig</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:48"><expr pos:start="77:13" pos:end="77:47"><name pos:start="77:13" pos:end="77:15">rem</name> <operator pos:start="77:17" pos:end="77:18">+=</operator> <operator pos:start="77:20" pos:end="77:20">(</operator> <operator pos:start="77:22" pos:end="77:22">(</operator> <operator pos:start="77:24" pos:end="77:24">(</operator><name pos:start="77:25" pos:end="77:30">bits64</name><operator pos:start="77:31" pos:end="77:31">)</operator> <name pos:start="77:33" pos:end="77:36">zSig</name> <operator pos:start="77:38" pos:end="77:38">)</operator><operator pos:start="77:39" pos:end="77:40">&lt;&lt;</operator><literal type="number" pos:start="77:41" pos:end="77:41">1</literal> <operator pos:start="77:43" pos:end="77:43">)</operator> <operator pos:start="77:45" pos:end="77:45">|</operator> <literal type="number" pos:start="77:47" pos:end="77:47">1</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:12">zSig</name> <operator pos:start="81:14" pos:end="81:15">|=</operator> <operator pos:start="81:17" pos:end="81:17">(</operator> <name pos:start="81:19" pos:end="81:21">rem</name> <operator pos:start="81:23" pos:end="81:24">!=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal> <operator pos:start="81:28" pos:end="81:28">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:42"><expr pos:start="85:5" pos:end="85:41"><call pos:start="85:5" pos:end="85:41"><name pos:start="85:5" pos:end="85:23">shift32RightJamming</name><argument_list pos:start="85:24" pos:end="85:41">( <argument pos:start="85:26" pos:end="85:29"><expr pos:start="85:26" pos:end="85:29"><name pos:start="85:26" pos:end="85:29">zSig</name></expr></argument>, <argument pos:start="85:32" pos:end="85:32"><expr pos:start="85:32" pos:end="85:32"><literal type="number" pos:start="85:32" pos:end="85:32">1</literal></expr></argument>, <argument pos:start="85:35" pos:end="85:39"><expr pos:start="85:35" pos:end="85:39"><operator pos:start="85:35" pos:end="85:35">&amp;</operator><name pos:start="85:36" pos:end="85:39">zSig</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

 <label pos:start="87:2" pos:end="87:14"><name pos:start="87:2" pos:end="87:13">roundAndPack</name>:</label>

    <return pos:start="89:5" pos:end="89:59">return <macro pos:start="89:12" pos:end="89:58"><name pos:start="89:12" pos:end="89:30">roundAndPackFloat32</name><argument_list pos:start="89:31" pos:end="89:58">( <argument pos:start="89:33" pos:end="89:33"><literal type="number" pos:start="89:33" pos:end="89:33">0</literal></argument>, <argument pos:start="89:36" pos:end="89:39">zExp</argument>, <argument pos:start="89:42" pos:end="89:56">zSig STATUS_VAR</argument> )</argument_list></macro>;</return>



</block_content>}</block></function>
</unit>
