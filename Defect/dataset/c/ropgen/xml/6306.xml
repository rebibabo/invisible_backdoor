<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6306.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mpegts_read_header</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MpegTSContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ts</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name>   <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:25">[<expr pos:start="9:17" pos:end="9:24"><literal type="number" pos:start="9:17" pos:end="9:17">8</literal> <operator pos:start="9:19" pos:end="9:19">*</operator> <literal type="number" pos:start="9:21" pos:end="9:24">1024</literal></expr>]</index></name> <init pos:start="9:27" pos:end="9:31">= <expr pos:start="9:29" pos:end="9:31"><block pos:start="9:29" pos:end="9:31">{<expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="20:0"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pos</name></decl>, <decl pos:start="13:18" pos:end="17:72"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:26">probesize</name> <init pos:start="13:28" pos:end="17:72">=

<cpp:if pos:start="15:1" pos:end="15:34">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:34"><ternary pos:start="15:5" pos:end="15:34"><condition pos:start="15:5" pos:end="15:34"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:34">AV_HAVE_INCOMPATIBLE_LIBAV_ABI</name></expr></condition></ternary></expr></cpp:if>

                             <expr pos:start="17:30" pos:end="17:72"><ternary pos:start="17:30" pos:end="17:72"><condition pos:start="17:30" pos:end="17:43"><expr pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:41"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:41">probesize</name></name></expr> ?</condition><then pos:start="17:45" pos:end="17:56"> <expr pos:start="17:45" pos:end="17:56"><name pos:start="17:45" pos:end="17:56"><name pos:start="17:45" pos:end="17:45">s</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:56">probesize</name></name></expr> </then><else pos:start="17:58" pos:end="17:72">: <expr pos:start="17:60" pos:end="17:72"><name pos:start="17:60" pos:end="17:72"><name pos:start="17:60" pos:end="17:60">s</name><operator pos:start="17:61" pos:end="17:62">-&gt;</operator><name pos:start="17:63" pos:end="17:72">probesize2</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

                             <expr_stmt pos:start="21:30" pos:end="24:0"><expr pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:41"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:41">probesize</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="27:5" pos:end="29:79"><if pos:start="27:5" pos:end="29:79">if <condition pos:start="27:8" pos:end="27:48">(<expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:28">ffio_ensure_seekback</name><argument_list pos:start="27:29" pos:end="27:43">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">pb</name></expr></argument>, <argument pos:start="27:34" pos:end="27:42"><expr pos:start="27:34" pos:end="27:42"><name pos:start="27:34" pos:end="27:42">probesize</name></expr></argument>)</argument_list></call> <operator pos:start="27:45" pos:end="27:45">&lt;</operator> <literal type="number" pos:start="27:47" pos:end="27:47">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:79"><block_content pos:start="29:9" pos:end="29:79">

        <expr_stmt pos:start="29:9" pos:end="29:79"><expr pos:start="29:9" pos:end="29:78"><call pos:start="29:9" pos:end="29:78"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:78">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:32"><expr pos:start="29:19" pos:end="29:32"><name pos:start="29:19" pos:end="29:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="29:35" pos:end="29:77"><expr pos:start="29:35" pos:end="29:77"><literal type="string" pos:start="29:35" pos:end="29:77">"Failed to allocate buffers for seekback\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:54">/* read the first 8192 bytes to get packet size */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:7">pos</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:23"><name pos:start="35:11" pos:end="35:19">avio_tell</name><argument_list pos:start="35:20" pos:end="35:23">(<argument pos:start="35:21" pos:end="35:22"><expr pos:start="35:21" pos:end="35:22"><name pos:start="35:21" pos:end="35:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:7">len</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:41"><name pos:start="37:11" pos:end="37:19">avio_read</name><argument_list pos:start="37:20" pos:end="37:41">(<argument pos:start="37:21" pos:end="37:22"><expr pos:start="37:21" pos:end="37:22"><name pos:start="37:21" pos:end="37:22">pb</name></expr></argument>, <argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">buf</name></expr></argument>, <argument pos:start="37:30" pos:end="37:40"><expr pos:start="37:30" pos:end="37:40"><sizeof pos:start="37:30" pos:end="37:40">sizeof<argument_list pos:start="37:36" pos:end="37:40">(<argument pos:start="37:37" pos:end="37:39"><expr pos:start="37:37" pos:end="37:39"><name pos:start="37:37" pos:end="37:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:6">ts</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:23">raw_packet_size</name></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:51"><name pos:start="39:27" pos:end="39:41">get_packet_size</name><argument_list pos:start="39:42" pos:end="39:51">(<argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">buf</name></expr></argument>, <argument pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:33">(<expr pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:10">ts</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:27">raw_packet_size</name></name> <operator pos:start="41:29" pos:end="41:30">&lt;=</operator> <literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr>)</condition> <block pos:start="41:35" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:45">

        <expr_stmt pos:start="43:9" pos:end="43:99"><expr pos:start="43:9" pos:end="43:98"><call pos:start="43:9" pos:end="43:98"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:98">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:32"><expr pos:start="43:19" pos:end="43:32"><name pos:start="43:19" pos:end="43:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="43:35" pos:end="43:97"><expr pos:start="43:35" pos:end="43:97"><literal type="string" pos:start="43:35" pos:end="43:97">"Could not detect TS packet size, defaulting to non-FEC/DVHS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:45"><expr pos:start="45:9" pos:end="45:44"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:10">ts</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:27">raw_packet_size</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:44">TS_PACKET_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:23"><expr pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:6">ts</name><operator pos:start="49:7" pos:end="49:8">-&gt;</operator><name pos:start="49:9" pos:end="49:14">stream</name></name>     <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:22">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:23"><expr pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:6">ts</name><operator pos:start="51:7" pos:end="51:8">-&gt;</operator><name pos:start="51:9" pos:end="51:18">auto_guess</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="191:5"><if pos:start="55:5" pos:end="91:5">if <condition pos:start="55:8" pos:end="55:41">(<expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:18">iformat</name></name> <operator pos:start="55:20" pos:end="55:21">==</operator> <operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:40">ff_mpegts_demuxer</name></expr>)</condition> <block pos:start="55:43" pos:end="91:5">{<block_content pos:start="63:9" pos:end="89:42">

        <comment type="block" pos:start="57:9" pos:end="57:26">/* normal demux */</comment>



        <comment type="block" pos:start="61:9" pos:end="61:53">/* first do a scan to get all the services */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><call pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:17">seek_back</name><argument_list pos:start="63:18" pos:end="63:29">(<argument pos:start="63:19" pos:end="63:19"><expr pos:start="63:19" pos:end="63:19"><name pos:start="63:19" pos:end="63:19">s</name></expr></argument>, <argument pos:start="63:22" pos:end="63:23"><expr pos:start="63:22" pos:end="63:23"><name pos:start="63:22" pos:end="63:23">pb</name></expr></argument>, <argument pos:start="63:26" pos:end="63:28"><expr pos:start="63:26" pos:end="63:28"><name pos:start="63:26" pos:end="63:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:63"><expr pos:start="67:9" pos:end="67:62"><call pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:34">mpegts_open_section_filter</name><argument_list pos:start="67:35" pos:end="67:62">(<argument pos:start="67:36" pos:end="67:37"><expr pos:start="67:36" pos:end="67:37"><name pos:start="67:36" pos:end="67:37">ts</name></expr></argument>, <argument pos:start="67:40" pos:end="67:46"><expr pos:start="67:40" pos:end="67:46"><name pos:start="67:40" pos:end="67:46">SDT_PID</name></expr></argument>, <argument pos:start="67:49" pos:end="67:54"><expr pos:start="67:49" pos:end="67:54"><name pos:start="67:49" pos:end="67:54">sdt_cb</name></expr></argument>, <argument pos:start="67:57" pos:end="67:58"><expr pos:start="67:57" pos:end="67:58"><name pos:start="67:57" pos:end="67:58">ts</name></expr></argument>, <argument pos:start="67:61" pos:end="67:61"><expr pos:start="67:61" pos:end="67:61"><literal type="number" pos:start="67:61" pos:end="67:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:63"><expr pos:start="71:9" pos:end="71:62"><call pos:start="71:9" pos:end="71:62"><name pos:start="71:9" pos:end="71:34">mpegts_open_section_filter</name><argument_list pos:start="71:35" pos:end="71:62">(<argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">ts</name></expr></argument>, <argument pos:start="71:40" pos:end="71:46"><expr pos:start="71:40" pos:end="71:46"><name pos:start="71:40" pos:end="71:46">PAT_PID</name></expr></argument>, <argument pos:start="71:49" pos:end="71:54"><expr pos:start="71:49" pos:end="71:54"><name pos:start="71:49" pos:end="71:54">pat_cb</name></expr></argument>, <argument pos:start="71:57" pos:end="71:58"><expr pos:start="71:57" pos:end="71:58"><name pos:start="71:57" pos:end="71:58">ts</name></expr></argument>, <argument pos:start="71:61" pos:end="71:61"><expr pos:start="71:61" pos:end="71:61"><literal type="number" pos:start="71:61" pos:end="71:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:60"><expr pos:start="75:9" pos:end="75:59"><call pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:22">handle_packets</name><argument_list pos:start="75:23" pos:end="75:59">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">ts</name></expr></argument>, <argument pos:start="75:28" pos:end="75:58"><expr pos:start="75:28" pos:end="75:58"><name pos:start="75:28" pos:end="75:36">probesize</name> <operator pos:start="75:38" pos:end="75:38">/</operator> <name pos:start="75:40" pos:end="75:58"><name pos:start="75:40" pos:end="75:41">ts</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:58">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:58">/* if could not find service, enable auto_guess */</comment>



        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:10">ts</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:22">auto_guess</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><call pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:57">(<argument pos:start="85:16" pos:end="85:25"><expr pos:start="85:16" pos:end="85:25"><name pos:start="85:16" pos:end="85:25"><name pos:start="85:16" pos:end="85:17">ts</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:25">stream</name></name></expr></argument>, <argument pos:start="85:28" pos:end="85:39"><expr pos:start="85:28" pos:end="85:39"><name pos:start="85:28" pos:end="85:39">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="85:42" pos:end="85:56"><expr pos:start="85:42" pos:end="85:56"><literal type="string" pos:start="85:42" pos:end="85:56">"tuning done\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:42"><expr pos:start="89:9" pos:end="89:41"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:20">ctx_flags</name></name> <operator pos:start="89:22" pos:end="89:23">|=</operator> <name pos:start="89:25" pos:end="89:41">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="191:5">else <block pos:start="91:12" pos:end="191:5">{<block_content pos:start="93:9" pos:end="189:74">

        <decl_stmt pos:start="93:9" pos:end="93:21"><decl pos:start="93:9" pos:end="93:20"><type pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:16">AVStream</name> <modifier pos:start="93:18" pos:end="93:18">*</modifier></type><name pos:start="93:19" pos:end="93:20">st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:58"><decl pos:start="95:9" pos:end="95:19"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:19">pcr_pid</name></decl>, <decl pos:start="95:22" pos:end="95:24"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:22" pos:end="95:24">pid</name></decl>, <decl pos:start="95:27" pos:end="95:36"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:27" pos:end="95:36">nb_packets</name></decl>, <decl pos:start="95:39" pos:end="95:45"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:39" pos:end="95:45">nb_pcrs</name></decl>, <decl pos:start="95:48" pos:end="95:50"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:48" pos:end="95:50">ret</name></decl>, <decl pos:start="95:53" pos:end="95:57"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:53" pos:end="95:57">pcr_l</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:31"><decl pos:start="97:9" pos:end="97:23"><type pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:15">int64_t</name></type> <name pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:20">pcrs</name><index pos:start="97:21" pos:end="97:23">[<expr pos:start="97:22" pos:end="97:22"><literal type="number" pos:start="97:22" pos:end="97:22">2</literal></expr>]</index></name></decl>, <decl pos:start="97:26" pos:end="97:30"><type ref="prev" pos:start="97:9" pos:end="97:15"/><name pos:start="97:26" pos:end="97:30">pcr_h</name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:28"><decl pos:start="99:9" pos:end="99:27"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:24">packet_count</name><index pos:start="99:25" pos:end="99:27">[<expr pos:start="99:26" pos:end="99:26"><literal type="number" pos:start="99:26" pos:end="99:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:39"><decl pos:start="101:9" pos:end="101:38"><type pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:15">uint8_t</name></type> <name pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:22">packet</name><index pos:start="101:23" pos:end="101:38">[<expr pos:start="101:24" pos:end="101:37"><name pos:start="101:24" pos:end="101:37">TS_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:28"><decl pos:start="103:9" pos:end="103:27"><type pos:start="103:9" pos:end="103:23"><specifier pos:start="103:9" pos:end="103:13">const</specifier> <name pos:start="103:15" pos:end="103:21">uint8_t</name> <modifier pos:start="103:23" pos:end="103:23">*</modifier></type><name pos:start="103:24" pos:end="103:27">data</name></decl>;</decl_stmt>



        <comment type="block" pos:start="107:9" pos:end="107:31">/* only read packets */</comment>



        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:10">st</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <call pos:start="111:14" pos:end="111:41"><name pos:start="111:14" pos:end="111:32">avformat_new_stream</name><argument_list pos:start="111:33" pos:end="111:41">(<argument pos:start="111:34" pos:end="111:34"><expr pos:start="111:34" pos:end="111:34"><name pos:start="111:34" pos:end="111:34">s</name></expr></argument>, <argument pos:start="111:37" pos:end="111:40"><expr pos:start="111:37" pos:end="111:40"><name pos:start="111:37" pos:end="111:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="115:35"><if pos:start="113:9" pos:end="115:35">if <condition pos:start="113:12" pos:end="113:16">(<expr pos:start="113:13" pos:end="113:15"><operator pos:start="113:13" pos:end="113:13">!</operator><name pos:start="113:14" pos:end="113:15">st</name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:35"><block_content pos:start="115:13" pos:end="115:35">

            <return pos:start="115:13" pos:end="115:35">return <expr pos:start="115:20" pos:end="115:34"><call pos:start="115:20" pos:end="115:34"><name pos:start="115:20" pos:end="115:26">AVERROR</name><argument_list pos:start="115:27" pos:end="115:34">(<argument pos:start="115:28" pos:end="115:33"><expr pos:start="115:28" pos:end="115:33"><name pos:start="115:28" pos:end="115:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:49"><expr pos:start="117:9" pos:end="117:48"><call pos:start="117:9" pos:end="117:48"><name pos:start="117:9" pos:end="117:27">avpriv_set_pts_info</name><argument_list pos:start="117:28" pos:end="117:48">(<argument pos:start="117:29" pos:end="117:30"><expr pos:start="117:29" pos:end="117:30"><name pos:start="117:29" pos:end="117:30">st</name></expr></argument>, <argument pos:start="117:33" pos:end="117:34"><expr pos:start="117:33" pos:end="117:34"><literal type="number" pos:start="117:33" pos:end="117:34">60</literal></expr></argument>, <argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">1</literal></expr></argument>, <argument pos:start="117:40" pos:end="117:47"><expr pos:start="117:40" pos:end="117:47"><literal type="number" pos:start="117:40" pos:end="117:47">27000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:50"><expr pos:start="119:9" pos:end="119:49"><name pos:start="119:9" pos:end="119:29"><name pos:start="119:9" pos:end="119:10">st</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:17">codec</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:29">codec_type</name></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:49">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:52"><expr pos:start="121:9" pos:end="121:51"><name pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:10">st</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:17">codec</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:27">codec_id</name></name>   <operator pos:start="121:31" pos:end="121:31">=</operator> <name pos:start="121:33" pos:end="121:51">AV_CODEC_ID_MPEG2TS</name></expr>;</expr_stmt>



        <comment type="block" pos:start="125:9" pos:end="125:71">/* we iterate until we find two PCRs to estimate the bitrate */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:24"><expr pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:15">pcr_pid</name>    <operator pos:start="127:20" pos:end="127:20">=</operator> <operator pos:start="127:22" pos:end="127:22">-</operator><literal type="number" pos:start="127:23" pos:end="127:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:23"><expr pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:15">nb_pcrs</name>    <operator pos:start="129:20" pos:end="129:20">=</operator> <literal type="number" pos:start="129:22" pos:end="129:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:23"><expr pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:18">nb_packets</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr>;</expr_stmt>

        <for pos:start="133:9" pos:end="169:9">for <control pos:start="133:13" pos:end="133:16">(<init pos:start="133:14" pos:end="133:14">;</init><condition pos:start="133:15" pos:end="133:15">;</condition><incr/>)</control> <block pos:start="133:18" pos:end="169:9">{<block_content pos:start="135:13" pos:end="167:25">

            <expr_stmt pos:start="135:13" pos:end="135:69"><expr pos:start="135:13" pos:end="135:68"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">=</operator> <call pos:start="135:19" pos:end="135:68"><name pos:start="135:19" pos:end="135:29">read_packet</name><argument_list pos:start="135:30" pos:end="135:68">(<argument pos:start="135:31" pos:end="135:31"><expr pos:start="135:31" pos:end="135:31"><name pos:start="135:31" pos:end="135:31">s</name></expr></argument>, <argument pos:start="135:34" pos:end="135:39"><expr pos:start="135:34" pos:end="135:39"><name pos:start="135:34" pos:end="135:39">packet</name></expr></argument>, <argument pos:start="135:42" pos:end="135:60"><expr pos:start="135:42" pos:end="135:60"><name pos:start="135:42" pos:end="135:60"><name pos:start="135:42" pos:end="135:43">ts</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:60">raw_packet_size</name></name></expr></argument>, <argument pos:start="135:63" pos:end="135:67"><expr pos:start="135:63" pos:end="135:67"><operator pos:start="135:63" pos:end="135:63">&amp;</operator><name pos:start="135:64" pos:end="135:67">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="139:27"><if pos:start="137:13" pos:end="139:27">if <condition pos:start="137:16" pos:end="137:24">(<expr pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">&lt;</operator> <literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:27"><block_content pos:start="139:17" pos:end="139:27">

                <return pos:start="139:17" pos:end="139:27">return <expr pos:start="139:24" pos:end="139:26"><name pos:start="139:24" pos:end="139:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:45"><expr pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:15">pid</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:35"><name pos:start="141:19" pos:end="141:25">AV_RB16</name><argument_list pos:start="141:26" pos:end="141:35">(<argument pos:start="141:27" pos:end="141:34"><expr pos:start="141:27" pos:end="141:34"><name pos:start="141:27" pos:end="141:30">data</name> <operator pos:start="141:32" pos:end="141:32">+</operator> <literal type="number" pos:start="141:34" pos:end="141:34">1</literal></expr></argument>)</argument_list></call> <operator pos:start="141:37" pos:end="141:37">&amp;</operator> <literal type="number" pos:start="141:39" pos:end="141:44">0x1fff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="165:13"><if pos:start="143:13" pos:end="161:13">if <condition pos:start="143:16" pos:end="145:53">(<expr pos:start="143:17" pos:end="145:52"><operator pos:start="143:17" pos:end="143:17">(</operator><name pos:start="143:18" pos:end="143:24">pcr_pid</name> <operator pos:start="143:26" pos:end="143:27">==</operator> <operator pos:start="143:29" pos:end="143:29">-</operator><literal type="number" pos:start="143:30" pos:end="143:30">1</literal> <operator pos:start="143:32" pos:end="143:33">||</operator> <name pos:start="143:35" pos:end="143:41">pcr_pid</name> <operator pos:start="143:43" pos:end="143:44">==</operator> <name pos:start="143:46" pos:end="143:48">pid</name><operator pos:start="143:49" pos:end="143:49">)</operator> <operator pos:start="143:51" pos:end="143:52">&amp;&amp;</operator>

                <call pos:start="145:17" pos:end="145:47"><name pos:start="145:17" pos:end="145:25">parse_pcr</name><argument_list pos:start="145:26" pos:end="145:47">(<argument pos:start="145:27" pos:end="145:32"><expr pos:start="145:27" pos:end="145:32"><operator pos:start="145:27" pos:end="145:27">&amp;</operator><name pos:start="145:28" pos:end="145:32">pcr_h</name></expr></argument>, <argument pos:start="145:35" pos:end="145:40"><expr pos:start="145:35" pos:end="145:40"><operator pos:start="145:35" pos:end="145:35">&amp;</operator><name pos:start="145:36" pos:end="145:40">pcr_l</name></expr></argument>, <argument pos:start="145:43" pos:end="145:46"><expr pos:start="145:43" pos:end="145:46"><name pos:start="145:43" pos:end="145:46">data</name></expr></argument>)</argument_list></call> <operator pos:start="145:49" pos:end="145:50">==</operator> <literal type="number" pos:start="145:52" pos:end="145:52">0</literal></expr>)</condition> <block pos:start="145:55" pos:end="161:13">{<block_content pos:start="147:17" pos:end="159:26">

                <expr_stmt pos:start="147:17" pos:end="147:64"><expr pos:start="147:17" pos:end="147:63"><call pos:start="147:17" pos:end="147:63"><name pos:start="147:17" pos:end="147:39">finished_reading_packet</name><argument_list pos:start="147:40" pos:end="147:63">(<argument pos:start="147:41" pos:end="147:41"><expr pos:start="147:41" pos:end="147:41"><name pos:start="147:41" pos:end="147:41">s</name></expr></argument>, <argument pos:start="147:44" pos:end="147:62"><expr pos:start="147:44" pos:end="147:62"><name pos:start="147:44" pos:end="147:62"><name pos:start="147:44" pos:end="147:45">ts</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:62">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:30"><expr pos:start="149:17" pos:end="149:29"><name pos:start="149:17" pos:end="149:23">pcr_pid</name> <operator pos:start="149:25" pos:end="149:25">=</operator> <name pos:start="149:27" pos:end="149:29">pid</name></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:51"><expr pos:start="151:17" pos:end="151:50"><name pos:start="151:17" pos:end="151:37"><name pos:start="151:17" pos:end="151:28">packet_count</name><index pos:start="151:29" pos:end="151:37">[<expr pos:start="151:30" pos:end="151:36"><name pos:start="151:30" pos:end="151:36">nb_pcrs</name></expr>]</index></name> <operator pos:start="151:39" pos:end="151:39">=</operator> <name pos:start="151:41" pos:end="151:50">nb_packets</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:52"><expr pos:start="153:17" pos:end="153:51"><name pos:start="153:17" pos:end="153:29"><name pos:start="153:17" pos:end="153:20">pcrs</name><index pos:start="153:21" pos:end="153:29">[<expr pos:start="153:22" pos:end="153:28"><name pos:start="153:22" pos:end="153:28">nb_pcrs</name></expr>]</index></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <name pos:start="153:33" pos:end="153:37">pcr_h</name> <operator pos:start="153:39" pos:end="153:39">*</operator> <literal type="number" pos:start="153:41" pos:end="153:45">300</literal> <operator pos:start="153:45" pos:end="153:45">+</operator> <name pos:start="153:47" pos:end="153:51">pcr_l</name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:26"><expr pos:start="155:17" pos:end="155:25"><name pos:start="155:17" pos:end="155:23">nb_pcrs</name><operator pos:start="155:24" pos:end="155:25">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="157:17" pos:end="159:26"><if pos:start="157:17" pos:end="159:26">if <condition pos:start="157:20" pos:end="157:33">(<expr pos:start="157:21" pos:end="157:32"><name pos:start="157:21" pos:end="157:27">nb_pcrs</name> <operator pos:start="157:29" pos:end="157:30">&gt;=</operator> <literal type="number" pos:start="157:32" pos:end="157:32">2</literal></expr>)</condition><block type="pseudo" pos:start="159:21" pos:end="159:26"><block_content pos:start="159:21" pos:end="159:26">

                    <break pos:start="159:21" pos:end="159:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="161:15" pos:end="165:13">else <block pos:start="161:20" pos:end="165:13">{<block_content pos:start="163:17" pos:end="163:64">

                <expr_stmt pos:start="163:17" pos:end="163:64"><expr pos:start="163:17" pos:end="163:63"><call pos:start="163:17" pos:end="163:63"><name pos:start="163:17" pos:end="163:39">finished_reading_packet</name><argument_list pos:start="163:40" pos:end="163:63">(<argument pos:start="163:41" pos:end="163:41"><expr pos:start="163:41" pos:end="163:41"><name pos:start="163:41" pos:end="163:41">s</name></expr></argument>, <argument pos:start="163:44" pos:end="163:62"><expr pos:start="163:44" pos:end="163:62"><name pos:start="163:44" pos:end="163:62"><name pos:start="163:44" pos:end="163:45">ts</name><operator pos:start="163:46" pos:end="163:47">-&gt;</operator><name pos:start="163:48" pos:end="163:62">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:25"><expr pos:start="167:13" pos:end="167:24"><name pos:start="167:13" pos:end="167:22">nb_packets</name><operator pos:start="167:23" pos:end="167:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="173:9" pos:end="173:60">/* NOTE1: the bitrate is computed without the FEC */</comment>

        <comment type="block" pos:start="175:9" pos:end="175:70">/* NOTE2: it is only the bitrate of the start of the stream */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:81"><expr pos:start="177:9" pos:end="177:80"><name pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:10">ts</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:20">pcr_incr</name></name> <operator pos:start="177:22" pos:end="177:22">=</operator> <operator pos:start="177:24" pos:end="177:24">(</operator><name pos:start="177:25" pos:end="177:31"><name pos:start="177:25" pos:end="177:28">pcrs</name><index pos:start="177:29" pos:end="177:31">[<expr pos:start="177:30" pos:end="177:30"><literal type="number" pos:start="177:30" pos:end="177:30">1</literal></expr>]</index></name> <operator pos:start="177:33" pos:end="177:33">-</operator> <name pos:start="177:35" pos:end="177:41"><name pos:start="177:35" pos:end="177:38">pcrs</name><index pos:start="177:39" pos:end="177:41">[<expr pos:start="177:40" pos:end="177:40"><literal type="number" pos:start="177:40" pos:end="177:40">0</literal></expr>]</index></name><operator pos:start="177:42" pos:end="177:42">)</operator> <operator pos:start="177:44" pos:end="177:44">/</operator> <operator pos:start="177:46" pos:end="177:46">(</operator><name pos:start="177:47" pos:end="177:61"><name pos:start="177:47" pos:end="177:58">packet_count</name><index pos:start="177:59" pos:end="177:61">[<expr pos:start="177:60" pos:end="177:60"><literal type="number" pos:start="177:60" pos:end="177:60">1</literal></expr>]</index></name> <operator pos:start="177:63" pos:end="177:63">-</operator> <name pos:start="177:65" pos:end="177:79"><name pos:start="177:65" pos:end="177:76">packet_count</name><index pos:start="177:77" pos:end="177:79">[<expr pos:start="177:78" pos:end="177:78"><literal type="number" pos:start="177:78" pos:end="177:78">0</literal></expr>]</index></name><operator pos:start="177:80" pos:end="177:80">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:64"><expr pos:start="179:9" pos:end="179:63"><name pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:10">ts</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:19">cur_pcr</name></name>  <operator pos:start="179:22" pos:end="179:22">=</operator> <name pos:start="179:24" pos:end="179:30"><name pos:start="179:24" pos:end="179:27">pcrs</name><index pos:start="179:28" pos:end="179:30">[<expr pos:start="179:29" pos:end="179:29"><literal type="number" pos:start="179:29" pos:end="179:29">0</literal></expr>]</index></name> <operator pos:start="179:32" pos:end="179:32">-</operator> <name pos:start="179:34" pos:end="179:45"><name pos:start="179:34" pos:end="179:35">ts</name><operator pos:start="179:36" pos:end="179:37">-&gt;</operator><name pos:start="179:38" pos:end="179:45">pcr_incr</name></name> <operator pos:start="179:47" pos:end="179:47">*</operator> <name pos:start="179:49" pos:end="179:63"><name pos:start="179:49" pos:end="179:60">packet_count</name><index pos:start="179:61" pos:end="179:63">[<expr pos:start="179:62" pos:end="179:62"><literal type="number" pos:start="179:62" pos:end="179:62">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:70"><expr pos:start="181:9" pos:end="181:69"><name pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:19">bit_rate</name></name>  <operator pos:start="181:22" pos:end="181:22">=</operator> <name pos:start="181:24" pos:end="181:37">TS_PACKET_SIZE</name> <operator pos:start="181:39" pos:end="181:39">*</operator> <literal type="number" pos:start="181:41" pos:end="181:41">8</literal> <operator pos:start="181:43" pos:end="181:43">*</operator> <literal type="number" pos:start="181:45" pos:end="181:54">27000000LL</literal> <operator pos:start="181:56" pos:end="181:56">/</operator> <name pos:start="181:58" pos:end="181:69"><name pos:start="181:58" pos:end="181:59">ts</name><operator pos:start="181:60" pos:end="181:61">-&gt;</operator><name pos:start="181:62" pos:end="181:69">pcr_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:42"><expr pos:start="183:9" pos:end="183:41"><name pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:10">st</name><operator pos:start="183:11" pos:end="183:12">-&gt;</operator><name pos:start="183:13" pos:end="183:17">codec</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:27">bit_rate</name></name> <operator pos:start="183:29" pos:end="183:29">=</operator> <name pos:start="183:31" pos:end="183:41"><name pos:start="183:31" pos:end="183:31">s</name><operator pos:start="183:32" pos:end="183:33">-&gt;</operator><name pos:start="183:34" pos:end="183:41">bit_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:42"><expr pos:start="185:9" pos:end="185:41"><name pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:10">st</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:22">start_time</name></name>      <operator pos:start="185:29" pos:end="185:29">=</operator> <name pos:start="185:31" pos:end="185:41"><name pos:start="185:31" pos:end="185:32">ts</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:41">cur_pcr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="189:74"><expr pos:start="187:9" pos:end="189:73"><call pos:start="187:9" pos:end="189:73"><name pos:start="187:9" pos:end="187:14">av_log</name><argument_list pos:start="187:15" pos:end="189:73">(<argument pos:start="187:16" pos:end="187:25"><expr pos:start="187:16" pos:end="187:25"><name pos:start="187:16" pos:end="187:25"><name pos:start="187:16" pos:end="187:17">ts</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:25">stream</name></name></expr></argument>, <argument pos:start="187:28" pos:end="187:39"><expr pos:start="187:28" pos:end="187:39"><name pos:start="187:28" pos:end="187:39">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="187:42" pos:end="187:74"><expr pos:start="187:42" pos:end="187:74"><literal type="string" pos:start="187:42" pos:end="187:74">"start=%0.3f pcr=%0.3f incr=%d\n"</literal></expr></argument>,

                <argument pos:start="189:17" pos:end="189:42"><expr pos:start="189:17" pos:end="189:42"><name pos:start="189:17" pos:end="189:30"><name pos:start="189:17" pos:end="189:18">st</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:30">start_time</name></name> <operator pos:start="189:32" pos:end="189:32">/</operator> <literal type="number" pos:start="189:34" pos:end="189:42">1000000.0</literal></expr></argument>, <argument pos:start="189:45" pos:end="189:58"><expr pos:start="189:45" pos:end="189:58"><name pos:start="189:45" pos:end="189:51"><name pos:start="189:45" pos:end="189:48">pcrs</name><index pos:start="189:49" pos:end="189:51">[<expr pos:start="189:50" pos:end="189:50"><literal type="number" pos:start="189:50" pos:end="189:50">0</literal></expr>]</index></name> <operator pos:start="189:53" pos:end="189:53">/</operator> <literal type="number" pos:start="189:55" pos:end="189:58">27e6</literal></expr></argument>, <argument pos:start="189:61" pos:end="189:72"><expr pos:start="189:61" pos:end="189:72"><name pos:start="189:61" pos:end="189:72"><name pos:start="189:61" pos:end="189:62">ts</name><operator pos:start="189:63" pos:end="189:64">-&gt;</operator><name pos:start="189:65" pos:end="189:72">pcr_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:26"><expr pos:start="195:5" pos:end="195:25"><call pos:start="195:5" pos:end="195:25"><name pos:start="195:5" pos:end="195:13">seek_back</name><argument_list pos:start="195:14" pos:end="195:25">(<argument pos:start="195:15" pos:end="195:15"><expr pos:start="195:15" pos:end="195:15"><name pos:start="195:15" pos:end="195:15">s</name></expr></argument>, <argument pos:start="195:18" pos:end="195:19"><expr pos:start="195:18" pos:end="195:19"><name pos:start="195:18" pos:end="195:19">pb</name></expr></argument>, <argument pos:start="195:22" pos:end="195:24"><expr pos:start="195:22" pos:end="195:24"><name pos:start="195:22" pos:end="195:24">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="197:5" pos:end="197:13">return <expr pos:start="197:12" pos:end="197:12"><literal type="number" pos:start="197:12" pos:end="197:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
