<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10300.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:35">blockdev_backup_prepare</name><parameter_list pos:start="1:36" pos:end="1:78">(<parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:55">BlkTransactionState</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:63">common</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:32">

    <decl_stmt pos:start="5:5" pos:end="5:80"><decl pos:start="5:5" pos:end="5:79"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">BlockdevBackupState</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:30">state</name> <init pos:start="5:32" pos:end="5:79">= <expr pos:start="5:34" pos:end="5:79"><call pos:start="5:34" pos:end="5:79"><name pos:start="5:34" pos:end="5:42">DO_UPCAST</name><argument_list pos:start="5:43" pos:end="5:79">(<argument pos:start="5:44" pos:end="5:62"><expr pos:start="5:44" pos:end="5:62"><name pos:start="5:44" pos:end="5:62">BlockdevBackupState</name></expr></argument>, <argument pos:start="5:65" pos:end="5:70"><expr pos:start="5:65" pos:end="5:70"><name pos:start="5:65" pos:end="5:70">common</name></expr></argument>, <argument pos:start="5:73" pos:end="5:78"><expr pos:start="5:73" pos:end="5:78"><name pos:start="5:73" pos:end="5:78">common</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">BlockdevBackup</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:26">backup</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BlockBackend</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">blk</name></decl>, <decl pos:start="9:24" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:18"><modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:30">target</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:76"><expr pos:start="15:5" pos:end="15:75"><call pos:start="15:5" pos:end="15:75"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:75">(<argument pos:start="15:12" pos:end="15:74"><expr pos:start="15:12" pos:end="15:74"><name pos:start="15:12" pos:end="15:31"><name pos:start="15:12" pos:end="15:17">common</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:25">action</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:31">kind</name></name> <operator pos:start="15:33" pos:end="15:34">==</operator> <name pos:start="15:36" pos:end="15:74">TRANSACTION_ACTION_KIND_BLOCKDEV_BACKUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:10">backup</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:44"><name pos:start="17:14" pos:end="17:19">common</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:27">action</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:44">blockdev_backup</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:7">blk</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:37"><name pos:start="21:11" pos:end="21:21">blk_by_name</name><argument_list pos:start="21:22" pos:end="21:37">(<argument pos:start="21:23" pos:end="21:36"><expr pos:start="21:23" pos:end="21:36"><name pos:start="21:23" pos:end="21:36"><name pos:start="21:23" pos:end="21:28">backup</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">blk</name></expr>)</condition> <block pos:start="23:15" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:15">

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="25:65">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:48"><expr pos:start="25:26" pos:end="25:48"><literal type="string" pos:start="25:26" pos:end="25:48">"Device '%s' not found"</literal></expr></argument>, <argument pos:start="25:51" pos:end="25:64"><expr pos:start="25:51" pos:end="25:64"><name pos:start="25:51" pos:end="25:64"><name pos:start="25:51" pos:end="25:56">backup</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:64">device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:31">(<expr pos:start="33:9" pos:end="33:30"><operator pos:start="33:9" pos:end="33:9">!</operator><call pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:25">blk_is_available</name><argument_list pos:start="33:26" pos:end="33:30">(<argument pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:29">blk</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:33" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:15">

        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><call pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:67">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:50"><expr pos:start="35:26" pos:end="35:50"><name pos:start="35:26" pos:end="35:50">QERR_DEVICE_HAS_NO_MEDIUM</name></expr></argument>, <argument pos:start="35:53" pos:end="35:66"><expr pos:start="35:53" pos:end="35:66"><name pos:start="35:53" pos:end="35:66"><name pos:start="35:53" pos:end="35:58">backup</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:66">device</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:10">target</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:40"><name pos:start="43:14" pos:end="43:24">blk_by_name</name><argument_list pos:start="43:25" pos:end="43:40">(<argument pos:start="43:26" pos:end="43:39"><expr pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:39"><name pos:start="43:26" pos:end="43:31">backup</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:39">target</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:15">target</name></expr>)</condition> <block pos:start="45:18" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:15">

        <expr_stmt pos:start="47:9" pos:end="47:66"><expr pos:start="47:9" pos:end="47:65"><call pos:start="47:9" pos:end="47:65"><name pos:start="47:9" pos:end="47:18">error_setg</name><argument_list pos:start="47:19" pos:end="47:65">(<argument pos:start="47:20" pos:end="47:23"><expr pos:start="47:20" pos:end="47:23"><name pos:start="47:20" pos:end="47:23">errp</name></expr></argument>, <argument pos:start="47:26" pos:end="47:48"><expr pos:start="47:26" pos:end="47:48"><literal type="string" pos:start="47:26" pos:end="47:48">"Device '%s' not found"</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:64"><expr pos:start="47:51" pos:end="47:64"><name pos:start="47:51" pos:end="47:64"><name pos:start="47:51" pos:end="47:56">backup</name><operator pos:start="47:57" pos:end="47:58">-&gt;</operator><name pos:start="47:59" pos:end="47:64">target</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:44">/* AioContext is released in .clean() */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:50"><expr pos:start="57:5" pos:end="57:49"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:9">state</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:22">aio_context</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:49"><name pos:start="57:26" pos:end="57:44">blk_get_aio_context</name><argument_list pos:start="57:45" pos:end="57:49">(<argument pos:start="57:46" pos:end="57:48"><expr pos:start="57:46" pos:end="57:48"><name pos:start="57:46" pos:end="57:48">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:58">(<expr pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:13">state</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:26">aio_context</name></name> <operator pos:start="59:28" pos:end="59:29">!=</operator> <call pos:start="59:31" pos:end="59:57"><name pos:start="59:31" pos:end="59:49">blk_get_aio_context</name><argument_list pos:start="59:50" pos:end="59:57">(<argument pos:start="59:51" pos:end="59:56"><expr pos:start="59:51" pos:end="59:56"><name pos:start="59:51" pos:end="59:56">target</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:60" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:15">

        <expr_stmt pos:start="61:9" pos:end="61:34"><expr pos:start="61:9" pos:end="61:33"><name pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:13">state</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:26">aio_context</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:33">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:77"><expr pos:start="63:9" pos:end="63:76"><call pos:start="63:9" pos:end="63:76"><name pos:start="63:9" pos:end="63:18">error_setg</name><argument_list pos:start="63:19" pos:end="63:76">(<argument pos:start="63:20" pos:end="63:23"><expr pos:start="63:20" pos:end="63:23"><name pos:start="63:20" pos:end="63:23">errp</name></expr></argument>, <argument pos:start="63:26" pos:end="63:75"><expr pos:start="63:26" pos:end="63:75"><literal type="string" pos:start="63:26" pos:end="63:75">"Backup between two IO threads is not implemented"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:44"><expr pos:start="69:5" pos:end="69:43"><call pos:start="69:5" pos:end="69:43"><name pos:start="69:5" pos:end="69:23">aio_context_acquire</name><argument_list pos:start="69:24" pos:end="69:43">(<argument pos:start="69:25" pos:end="69:42"><expr pos:start="69:25" pos:end="69:42"><name pos:start="69:25" pos:end="69:42"><name pos:start="69:25" pos:end="69:29">state</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:42">aio_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:9">state</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:13">bs</name></name> <operator pos:start="71:15" pos:end="71:15">=</operator> <call pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:22">blk_bs</name><argument_list pos:start="71:23" pos:end="71:27">(<argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:34"><expr pos:start="73:5" pos:end="73:33"><call pos:start="73:5" pos:end="73:33"><name pos:start="73:5" pos:end="73:22">bdrv_drained_begin</name><argument_list pos:start="73:23" pos:end="73:33">(<argument pos:start="73:24" pos:end="73:32"><expr pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:28">state</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:32">bs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="87:36"><expr pos:start="77:5" pos:end="87:35"><call pos:start="77:5" pos:end="87:35"><name pos:start="77:5" pos:end="77:23">qmp_blockdev_backup</name><argument_list pos:start="77:24" pos:end="87:35">(<argument pos:start="77:25" pos:end="77:38"><expr pos:start="77:25" pos:end="77:38"><name pos:start="77:25" pos:end="77:38"><name pos:start="77:25" pos:end="77:30">backup</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:38">device</name></name></expr></argument>, <argument pos:start="77:41" pos:end="77:54"><expr pos:start="77:41" pos:end="77:54"><name pos:start="77:41" pos:end="77:54"><name pos:start="77:41" pos:end="77:46">backup</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:54">target</name></name></expr></argument>,

                        <argument pos:start="79:25" pos:end="79:36"><expr pos:start="79:25" pos:end="79:36"><name pos:start="79:25" pos:end="79:36"><name pos:start="79:25" pos:end="79:30">backup</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:36">sync</name></name></expr></argument>,

                        <argument pos:start="81:25" pos:end="81:41"><expr pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:30">backup</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:41">has_speed</name></name></expr></argument>, <argument pos:start="81:44" pos:end="81:56"><expr pos:start="81:44" pos:end="81:56"><name pos:start="81:44" pos:end="81:56"><name pos:start="81:44" pos:end="81:49">backup</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:56">speed</name></name></expr></argument>,

                        <argument pos:start="83:25" pos:end="83:51"><expr pos:start="83:25" pos:end="83:51"><name pos:start="83:25" pos:end="83:51"><name pos:start="83:25" pos:end="83:30">backup</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:51">has_on_source_error</name></name></expr></argument>, <argument pos:start="83:54" pos:end="83:76"><expr pos:start="83:54" pos:end="83:76"><name pos:start="83:54" pos:end="83:76"><name pos:start="83:54" pos:end="83:59">backup</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:76">on_source_error</name></name></expr></argument>,

                        <argument pos:start="85:25" pos:end="85:51"><expr pos:start="85:25" pos:end="85:51"><name pos:start="85:25" pos:end="85:51"><name pos:start="85:25" pos:end="85:30">backup</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:51">has_on_target_error</name></name></expr></argument>, <argument pos:start="85:54" pos:end="85:76"><expr pos:start="85:54" pos:end="85:76"><name pos:start="85:54" pos:end="85:76"><name pos:start="85:54" pos:end="85:59">backup</name><operator pos:start="85:60" pos:end="85:61">-&gt;</operator><name pos:start="85:62" pos:end="85:76">on_target_error</name></name></expr></argument>,

                        <argument pos:start="87:25" pos:end="87:34"><expr pos:start="87:25" pos:end="87:34"><operator pos:start="87:25" pos:end="87:25">&amp;</operator><name pos:start="87:26" pos:end="87:34">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:17">local_err</name></expr>)</condition> <block pos:start="89:20" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:15">

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><call pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:23">error_propagate</name><argument_list pos:start="91:24" pos:end="91:40">(<argument pos:start="91:25" pos:end="91:28"><expr pos:start="91:25" pos:end="91:28"><name pos:start="91:25" pos:end="91:28">errp</name></expr></argument>, <argument pos:start="91:31" pos:end="91:39"><expr pos:start="91:31" pos:end="91:39"><name pos:start="91:31" pos:end="91:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:14"><name pos:start="99:5" pos:end="99:9">state</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:14">job</name></name> <operator pos:start="99:16" pos:end="99:16">=</operator> <name pos:start="99:18" pos:end="99:31"><name pos:start="99:18" pos:end="99:22">state</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:26">bs</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:31">job</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
