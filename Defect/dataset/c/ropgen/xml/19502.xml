<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19502.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">usb_host_auto_check</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">unused</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:68">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">USBHostDevice</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:27">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">unconnected</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><call pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:17">usb_host_scan</name><argument_list pos:start="11:18" pos:end="11:43">(<argument pos:start="11:19" pos:end="11:22"><expr pos:start="11:19" pos:end="11:22"><name pos:start="11:19" pos:end="11:22">NULL</name></expr></argument>, <argument pos:start="11:25" pos:end="11:42"><expr pos:start="11:25" pos:end="11:42"><name pos:start="11:25" pos:end="11:42">usb_host_auto_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:18">QTAILQ_FOREACH</name><argument_list pos:start="15:19" pos:end="15:38">(<argument pos:start="15:20" pos:end="15:20">s</argument>, <argument pos:start="15:23" pos:end="15:31">&amp;hostdevs</argument>, <argument pos:start="15:34" pos:end="15:37">next</argument>)</argument_list></macro> <block pos:start="15:40" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:9">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:24">(<expr pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:17">fd</name></name> <operator pos:start="17:19" pos:end="17:20">==</operator> <operator pos:start="17:22" pos:end="17:22">-</operator><literal type="number" pos:start="17:23" pos:end="17:23">1</literal></expr>)</condition> <block pos:start="17:26" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:26">

            <expr_stmt pos:start="19:13" pos:end="19:26"><expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:23">unconnected</name><operator pos:start="19:24" pos:end="19:25">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:25">(<expr pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:19">unconnected</name> <operator pos:start="27:21" pos:end="27:22">==</operator> <literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>)</condition> <block pos:start="27:27" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:15">

        <comment type="block" pos:start="29:9" pos:end="29:30">/* nothing to watch */</comment>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:26">usb_auto_timer</name></expr>)</condition> <block pos:start="31:29" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:43">

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><call pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:26">qemu_del_timer</name><argument_list pos:start="33:27" pos:end="33:42">(<argument pos:start="33:28" pos:end="33:41"><expr pos:start="33:28" pos:end="33:41"><name pos:start="33:28" pos:end="33:41">usb_auto_timer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:23">usb_auto_timer</name></expr>)</condition> <block pos:start="43:26" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:9">

        <expr_stmt pos:start="45:9" pos:end="45:77"><expr pos:start="45:9" pos:end="45:76"><name pos:start="45:9" pos:end="45:22">usb_auto_timer</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <call pos:start="45:26" pos:end="45:76"><name pos:start="45:26" pos:end="45:39">qemu_new_timer</name><argument_list pos:start="45:40" pos:end="45:76">(<argument pos:start="45:41" pos:end="45:48"><expr pos:start="45:41" pos:end="45:48"><name pos:start="45:41" pos:end="45:48">rt_clock</name></expr></argument>, <argument pos:start="45:51" pos:end="45:69"><expr pos:start="45:51" pos:end="45:69"><name pos:start="45:51" pos:end="45:69">usb_host_auto_check</name></expr></argument>, <argument pos:start="45:72" pos:end="45:75"><expr pos:start="45:72" pos:end="45:75"><name pos:start="45:72" pos:end="45:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:28">(<expr pos:start="47:13" pos:end="47:27"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:27">usb_auto_timer</name></expr>)</condition> <block pos:start="47:30" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:19">

            <return pos:start="49:13" pos:end="49:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:68"><expr pos:start="55:5" pos:end="55:67"><call pos:start="55:5" pos:end="55:67"><name pos:start="55:5" pos:end="55:18">qemu_mod_timer</name><argument_list pos:start="55:19" pos:end="55:67">(<argument pos:start="55:20" pos:end="55:33"><expr pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:33">usb_auto_timer</name></expr></argument>, <argument pos:start="55:36" pos:end="55:66"><expr pos:start="55:36" pos:end="55:66"><call pos:start="55:36" pos:end="55:59"><name pos:start="55:36" pos:end="55:49">qemu_get_clock</name><argument_list pos:start="55:50" pos:end="55:59">(<argument pos:start="55:51" pos:end="55:58"><expr pos:start="55:51" pos:end="55:58"><name pos:start="55:51" pos:end="55:58">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="55:61" pos:end="55:61">+</operator> <literal type="number" pos:start="55:63" pos:end="55:66">2000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
