<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11621.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:18">RENAME</name></type>(<name pos:start="1:20" pos:end="1:34">interleaveBytes</name>)<parameter_list pos:start="1:36" pos:end="5:61">(<parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">src1</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:76"><decl pos:start="1:58" pos:end="1:76"><type pos:start="1:58" pos:end="1:76"><specifier pos:start="1:58" pos:end="1:62">const</specifier> <name pos:start="1:64" pos:end="1:70">uint8_t</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:76">src2</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:91"><decl pos:start="1:79" pos:end="1:91"><type pos:start="1:79" pos:end="1:91"><name pos:start="1:79" pos:end="1:85">uint8_t</name> <modifier pos:start="1:87" pos:end="1:87">*</modifier></type><name pos:start="1:88" pos:end="1:91">dest</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:39"><decl pos:start="3:30" pos:end="3:39"><type pos:start="3:30" pos:end="3:39"><name pos:start="3:30" pos:end="3:33">long</name></type> <name pos:start="3:35" pos:end="3:39">width</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:52"><decl pos:start="3:42" pos:end="3:52"><type pos:start="3:42" pos:end="3:52"><name pos:start="3:42" pos:end="3:45">long</name></type> <name pos:start="3:47" pos:end="3:52">height</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:69"><decl pos:start="3:55" pos:end="3:69"><type pos:start="3:55" pos:end="3:69"><name pos:start="3:55" pos:end="3:58">long</name></type> <name pos:start="3:60" pos:end="3:69">src1Stride</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:44"><decl pos:start="5:30" pos:end="5:44"><type pos:start="5:30" pos:end="5:44"><name pos:start="5:30" pos:end="5:33">long</name></type> <name pos:start="5:35" pos:end="5:44">src2Stride</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:60"><decl pos:start="5:47" pos:end="5:60"><type pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:50">long</name></type> <name pos:start="5:52" pos:end="5:60">dstStride</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="155:1">{<block_content pos:start="9:5" pos:end="154:0">

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">long</name></type> <name pos:start="9:10" pos:end="9:10">h</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="142:0">for <control pos:start="13:9" pos:end="13:30">(<init pos:start="13:10" pos:end="13:13"><expr pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:10">h</name><operator pos:start="13:11" pos:end="13:11">=</operator><literal type="number" pos:start="13:12" pos:end="13:12">0</literal></expr>;</init> <condition pos:start="13:15" pos:end="13:25"><expr pos:start="13:15" pos:end="13:24"><name pos:start="13:15" pos:end="13:15">h</name> <operator pos:start="13:17" pos:end="13:17">&lt;</operator> <name pos:start="13:19" pos:end="13:24">height</name></expr>;</condition> <incr pos:start="13:27" pos:end="13:29"><expr pos:start="13:27" pos:end="13:29"><name pos:start="13:27" pos:end="13:27">h</name><operator pos:start="13:28" pos:end="13:29">++</operator></expr></incr>)</control> <block pos:start="13:32" pos:end="142:0">{<block_content pos:start="15:9" pos:end="137:27">

        <decl_stmt pos:start="15:9" pos:end="22:0"><decl pos:start="15:9" pos:end="15:14"><type pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:12">long</name></type> <name pos:start="15:14" pos:end="15:14">w</name></decl>;</decl_stmt>



<cpp:if pos:start="19:1" pos:end="19:24">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

<cpp:if pos:start="21:1" pos:end="21:25">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:25">COMPILE_TEMPLATE_SSE2</name></expr></cpp:if>

        <asm pos:start="23:9" pos:end="60:0">__asm__(

            "xor              %%"REG_a", %%"REG_a"  \n\t"

            "1:                                     \n\t"

            PREFETCH" 64(%1, %%"REG_a")             \n\t"

            PREFETCH" 64(%2, %%"REG_a")             \n\t"

            "movdqa     (%1, %%"REG_a"), %%xmm0     \n\t"

            "movdqa     (%1, %%"REG_a"), %%xmm1     \n\t"

            "movdqa     (%2, %%"REG_a"), %%xmm2     \n\t"

            "punpcklbw           %%xmm2, %%xmm0     \n\t"

            "punpckhbw           %%xmm2, %%xmm1     \n\t"

            "movntdq             %%xmm0,   (%0, %%"REG_a", 2)   \n\t"

            "movntdq             %%xmm1, 16(%0, %%"REG_a", 2)   \n\t"

            "add                    $16, %%"REG_a"  \n\t"

            "cmp                     %3, %%"REG_a"  \n\t"

            " jb                     1b             \n\t"

            ::"r"(dest), "r"(src1), "r"(src2), "r" ((x86_reg)width-15)

            : "memory", "%"REG_a""

        );</asm>

<cpp:else pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:5">else</cpp:directive></cpp:else>

        <asm pos:start="61:9" pos:end="112:0">__asm__(

            "xor %%"REG_a", %%"REG_a"               \n\t"

            "1:                                     \n\t"

            PREFETCH" 64(%1, %%"REG_a")             \n\t"

            PREFETCH" 64(%2, %%"REG_a")             \n\t"

            "movq       (%1, %%"REG_a"), %%mm0      \n\t"

            "movq      8(%1, %%"REG_a"), %%mm2      \n\t"

            "movq                 %%mm0, %%mm1      \n\t"

            "movq                 %%mm2, %%mm3      \n\t"

            "movq       (%2, %%"REG_a"), %%mm4      \n\t"

            "movq      8(%2, %%"REG_a"), %%mm5      \n\t"

            "punpcklbw            %%mm4, %%mm0      \n\t"

            "punpckhbw            %%mm4, %%mm1      \n\t"

            "punpcklbw            %%mm5, %%mm2      \n\t"

            "punpckhbw            %%mm5, %%mm3      \n\t"

            MOVNTQ"               %%mm0,   (%0, %%"REG_a", 2)   \n\t"

            MOVNTQ"               %%mm1,  8(%0, %%"REG_a", 2)   \n\t"

            MOVNTQ"               %%mm2, 16(%0, %%"REG_a", 2)   \n\t"

            MOVNTQ"               %%mm3, 24(%0, %%"REG_a", 2)   \n\t"

            "add                    $16, %%"REG_a"  \n\t"

            "cmp                     %3, %%"REG_a"  \n\t"

            " jb                     1b             \n\t"

            ::"r"(dest), "r"(src1), "r"(src2), "r" ((x86_reg)width-15)

            : "memory", "%"REG_a

        );</asm>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>

        <for pos:start="113:9" pos:end="122:0">for <control pos:start="113:13" pos:end="113:46">(<init pos:start="113:14" pos:end="113:30"><expr pos:start="113:14" pos:end="113:29"><name pos:start="113:14" pos:end="113:14">w</name><operator pos:start="113:15" pos:end="113:15">=</operator> <operator pos:start="113:17" pos:end="113:17">(</operator><name pos:start="113:18" pos:end="113:22">width</name><operator pos:start="113:23" pos:end="113:23">&amp;</operator><operator pos:start="113:24" pos:end="113:24">(</operator><operator pos:start="113:25" pos:end="113:25">~</operator><literal type="number" pos:start="113:26" pos:end="113:27">15</literal><operator pos:start="113:28" pos:end="113:28">)</operator><operator pos:start="113:29" pos:end="113:29">)</operator></expr>;</init> <condition pos:start="113:32" pos:end="113:41"><expr pos:start="113:32" pos:end="113:40"><name pos:start="113:32" pos:end="113:32">w</name> <operator pos:start="113:34" pos:end="113:34">&lt;</operator> <name pos:start="113:36" pos:end="113:40">width</name></expr>;</condition> <incr pos:start="113:43" pos:end="113:45"><expr pos:start="113:43" pos:end="113:45"><name pos:start="113:43" pos:end="113:43">w</name><operator pos:start="113:44" pos:end="113:45">++</operator></expr></incr>)</control> <block pos:start="113:48" pos:end="122:0">{<block_content pos:start="115:13" pos:end="117:34">

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:16">dest</name><index pos:start="115:17" pos:end="115:23">[<expr pos:start="115:18" pos:end="115:22"><literal type="number" pos:start="115:18" pos:end="115:18">2</literal><operator pos:start="115:19" pos:end="115:19">*</operator><name pos:start="115:20" pos:end="115:20">w</name><operator pos:start="115:21" pos:end="115:21">+</operator><literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr>]</index></name> <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:33"><name pos:start="115:27" pos:end="115:30">src1</name><index pos:start="115:31" pos:end="115:33">[<expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">w</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:34"><expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:16">dest</name><index pos:start="117:17" pos:end="117:23">[<expr pos:start="117:18" pos:end="117:22"><literal type="number" pos:start="117:18" pos:end="117:18">2</literal><operator pos:start="117:19" pos:end="117:19">*</operator><name pos:start="117:20" pos:end="117:20">w</name><operator pos:start="117:21" pos:end="117:21">+</operator><literal type="number" pos:start="117:22" pos:end="117:22">1</literal></expr>]</index></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:33"><name pos:start="117:27" pos:end="117:30">src2</name><index pos:start="117:31" pos:end="117:33">[<expr pos:start="117:32" pos:end="117:32"><name pos:start="117:32" pos:end="117:32">w</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

<cpp:else pos:start="121:1" pos:end="121:5">#<cpp:directive pos:start="121:2" pos:end="121:5">else</cpp:directive></cpp:else>

        <for pos:start="123:9" pos:end="132:0">for <control pos:start="123:13" pos:end="123:33">(<init pos:start="123:14" pos:end="123:17"><expr pos:start="123:14" pos:end="123:16"><name pos:start="123:14" pos:end="123:14">w</name><operator pos:start="123:15" pos:end="123:15">=</operator><literal type="number" pos:start="123:16" pos:end="123:16">0</literal></expr>;</init> <condition pos:start="123:19" pos:end="123:28"><expr pos:start="123:19" pos:end="123:27"><name pos:start="123:19" pos:end="123:19">w</name> <operator pos:start="123:21" pos:end="123:21">&lt;</operator> <name pos:start="123:23" pos:end="123:27">width</name></expr>;</condition> <incr pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:30">w</name><operator pos:start="123:31" pos:end="123:32">++</operator></expr></incr>)</control> <block pos:start="123:35" pos:end="132:0">{<block_content pos:start="125:13" pos:end="127:34">

            <expr_stmt pos:start="125:13" pos:end="125:34"><expr pos:start="125:13" pos:end="125:33"><name pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:16">dest</name><index pos:start="125:17" pos:end="125:23">[<expr pos:start="125:18" pos:end="125:22"><literal type="number" pos:start="125:18" pos:end="125:18">2</literal><operator pos:start="125:19" pos:end="125:19">*</operator><name pos:start="125:20" pos:end="125:20">w</name><operator pos:start="125:21" pos:end="125:21">+</operator><literal type="number" pos:start="125:22" pos:end="125:22">0</literal></expr>]</index></name> <operator pos:start="125:25" pos:end="125:25">=</operator> <name pos:start="125:27" pos:end="125:33"><name pos:start="125:27" pos:end="125:30">src1</name><index pos:start="125:31" pos:end="125:33">[<expr pos:start="125:32" pos:end="125:32"><name pos:start="125:32" pos:end="125:32">w</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:23"><name pos:start="127:13" pos:end="127:16">dest</name><index pos:start="127:17" pos:end="127:23">[<expr pos:start="127:18" pos:end="127:22"><literal type="number" pos:start="127:18" pos:end="127:18">2</literal><operator pos:start="127:19" pos:end="127:19">*</operator><name pos:start="127:20" pos:end="127:20">w</name><operator pos:start="127:21" pos:end="127:21">+</operator><literal type="number" pos:start="127:22" pos:end="127:22">1</literal></expr>]</index></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:33"><name pos:start="127:27" pos:end="127:30">src2</name><index pos:start="127:31" pos:end="127:33">[<expr pos:start="127:32" pos:end="127:32"><name pos:start="127:32" pos:end="127:32">w</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="133:9" pos:end="133:26"><expr pos:start="133:9" pos:end="133:25"><name pos:start="133:9" pos:end="133:12">dest</name> <operator pos:start="133:14" pos:end="133:15">+=</operator> <name pos:start="133:17" pos:end="133:25">dstStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:27"><expr pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:12">src1</name> <operator pos:start="135:14" pos:end="135:15">+=</operator> <name pos:start="135:17" pos:end="135:26">src1Stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:27"><expr pos:start="137:9" pos:end="137:26"><name pos:start="137:9" pos:end="137:12">src2</name> <operator pos:start="137:14" pos:end="137:15">+=</operator> <name pos:start="137:17" pos:end="137:26">src2Stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:if pos:start="141:1" pos:end="141:24">#<cpp:directive pos:start="141:2" pos:end="141:3">if</cpp:directive> <expr pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="143:5" pos:end="154:0">__asm__(

            EMMS"       \n\t"

            SFENCE"     \n\t"

            ::: "memory"

            );</asm>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
