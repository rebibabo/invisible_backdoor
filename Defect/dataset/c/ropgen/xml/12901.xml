<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12901.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:30">do_sendrecvmsg</name><parameter_list pos:start="1:31" pos:end="3:51">(<parameter pos:start="1:32" pos:end="1:37"><decl pos:start="1:32" pos:end="1:37"><type pos:start="1:32" pos:end="1:37"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:37">fd</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:48">abi_ulong</name></type> <name pos:start="1:50" pos:end="1:59">target_msg</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:40">flags</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:50"><decl pos:start="3:43" pos:end="3:50"><type pos:start="3:43" pos:end="3:50"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:50">send</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">abi_long</name></type> <name pos:start="7:14" pos:end="7:16">ret</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:21">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">target_msghdr</name></name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:30">msgp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:17">msghdr</name></name></type> <name pos:start="11:19" pos:end="11:21">msg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:16">iovec</name></name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">vec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">abi_ulong</name></type> <name pos:start="17:15" pos:end="17:24">target_vec</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:15">/* FIXME */</comment>

    <if_stmt pos:start="23:5" pos:end="31:30"><if pos:start="23:5" pos:end="31:30">if <condition pos:start="23:8" pos:end="29:40">(<expr pos:start="23:9" pos:end="29:39"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="29:39"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="29:39">(<argument pos:start="23:27" pos:end="23:59"><expr pos:start="23:27" pos:end="23:59"><ternary pos:start="23:27" pos:end="23:59"><condition pos:start="23:27" pos:end="23:32"><expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">send</name></expr> ?</condition><then pos:start="23:34" pos:end="23:44"> <expr pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:44">VERIFY_READ</name></expr> </then><else pos:start="23:46" pos:end="23:59">: <expr pos:start="23:48" pos:end="23:59"><name pos:start="23:48" pos:end="23:59">VERIFY_WRITE</name></expr></else></ternary></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">msgp</name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:36"><expr pos:start="27:27" pos:end="27:36"><name pos:start="27:27" pos:end="27:36">target_msg</name></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><ternary pos:start="29:27" pos:end="29:38"><condition pos:start="29:27" pos:end="29:32"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">send</name></expr> ?</condition><then pos:start="29:34" pos:end="29:34"> <expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr> </then><else pos:start="29:36" pos:end="29:38">: <expr pos:start="29:38" pos:end="29:38"><literal type="number" pos:start="29:38" pos:end="29:38">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:30"><block_content pos:start="31:9" pos:end="31:30">

        <return pos:start="31:9" pos:end="31:30">return <expr pos:start="31:16" pos:end="31:29"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:29">TARGET_EFAULT</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="57:5"><if pos:start="33:5" pos:end="51:5">if <condition pos:start="33:8" pos:end="33:23">(<expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:12">msgp</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:22">msg_name</name></name></expr>)</condition> <block pos:start="33:25" pos:end="51:5">{<block_content pos:start="35:9" pos:end="49:9">

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:11">msg</name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:23">msg_namelen</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="35:52"><name pos:start="35:27" pos:end="35:33">tswap32</name><argument_list pos:start="35:34" pos:end="35:52">(<argument pos:start="35:35" pos:end="35:51"><expr pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:38">msgp</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">msg</name><operator pos:start="37:12" pos:end="37:12">.</operator><name pos:start="37:13" pos:end="37:20">msg_name</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:46"><name pos:start="37:24" pos:end="37:29">alloca</name><argument_list pos:start="37:30" pos:end="37:46">(<argument pos:start="37:31" pos:end="37:45"><expr pos:start="37:31" pos:end="37:45"><name pos:start="37:31" pos:end="37:45"><name pos:start="37:31" pos:end="37:33">msg</name><operator pos:start="37:34" pos:end="37:34">.</operator><name pos:start="37:35" pos:end="37:45">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:49"><expr pos:start="39:9" pos:end="41:48"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="41:48"><name pos:start="39:15" pos:end="39:37">target_to_host_sockaddr</name><argument_list pos:start="39:38" pos:end="41:48">(<argument pos:start="39:39" pos:end="39:50"><expr pos:start="39:39" pos:end="39:50"><name pos:start="39:39" pos:end="39:50"><name pos:start="39:39" pos:end="39:41">msg</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:50">msg_name</name></name></expr></argument>, <argument pos:start="39:53" pos:end="39:75"><expr pos:start="39:53" pos:end="39:75"><call pos:start="39:53" pos:end="39:75"><name pos:start="39:53" pos:end="39:59">tswapal</name><argument_list pos:start="39:60" pos:end="39:75">(<argument pos:start="39:61" pos:end="39:74"><expr pos:start="39:61" pos:end="39:74"><name pos:start="39:61" pos:end="39:74"><name pos:start="39:61" pos:end="39:64">msgp</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:74">msg_name</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="41:33" pos:end="41:47"><expr pos:start="41:33" pos:end="41:47"><name pos:start="41:33" pos:end="41:47"><name pos:start="41:33" pos:end="41:35">msg</name><operator pos:start="41:36" pos:end="41:36">.</operator><name pos:start="41:37" pos:end="41:47">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:16">(<expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">ret</name></expr>)</condition> <block pos:start="43:18" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:23">

            <expr_stmt pos:start="45:13" pos:end="45:63"><expr pos:start="45:13" pos:end="45:62"><call pos:start="45:13" pos:end="45:62"><name pos:start="45:13" pos:end="45:30">unlock_user_struct</name><argument_list pos:start="45:31" pos:end="45:62">(<argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">msgp</name></expr></argument>, <argument pos:start="45:38" pos:end="45:47"><expr pos:start="45:38" pos:end="45:47"><name pos:start="45:38" pos:end="45:47">target_msg</name></expr></argument>, <argument pos:start="45:50" pos:end="45:61"><expr pos:start="45:50" pos:end="45:61"><ternary pos:start="45:50" pos:end="45:61"><condition pos:start="45:50" pos:end="45:55"><expr pos:start="45:50" pos:end="45:53"><name pos:start="45:50" pos:end="45:53">send</name></expr> ?</condition><then pos:start="45:57" pos:end="45:57"> <expr pos:start="45:57" pos:end="45:57"><literal type="number" pos:start="45:57" pos:end="45:57">0</literal></expr> </then><else pos:start="45:59" pos:end="45:61">: <expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="57:5">else <block pos:start="51:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:28">

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:11">msg</name><operator pos:start="53:12" pos:end="53:12">.</operator><name pos:start="53:13" pos:end="53:20">msg_name</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:11">msg</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:23">msg_namelen</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:59"><expr pos:start="59:5" pos:end="59:58"><name pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:7">msg</name><operator pos:start="59:8" pos:end="59:8">.</operator><name pos:start="59:9" pos:end="59:22">msg_controllen</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <literal type="number" pos:start="59:26" pos:end="59:26">2</literal> <operator pos:start="59:28" pos:end="59:28">*</operator> <call pos:start="59:30" pos:end="59:58"><name pos:start="59:30" pos:end="59:36">tswapal</name><argument_list pos:start="59:37" pos:end="59:58">(<argument pos:start="59:38" pos:end="59:57"><expr pos:start="59:38" pos:end="59:57"><name pos:start="59:38" pos:end="59:57"><name pos:start="59:38" pos:end="59:41">msgp</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:57">msg_controllen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:49"><expr pos:start="61:5" pos:end="61:48"><name pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:7">msg</name><operator pos:start="61:8" pos:end="61:8">.</operator><name pos:start="61:9" pos:end="61:19">msg_control</name></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <call pos:start="61:23" pos:end="61:48"><name pos:start="61:23" pos:end="61:28">alloca</name><argument_list pos:start="61:29" pos:end="61:48">(<argument pos:start="61:30" pos:end="61:47"><expr pos:start="61:30" pos:end="61:47"><name pos:start="61:30" pos:end="61:47"><name pos:start="61:30" pos:end="61:32">msg</name><operator pos:start="61:33" pos:end="61:33">.</operator><name pos:start="61:34" pos:end="61:47">msg_controllen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:7">msg</name><operator pos:start="63:8" pos:end="63:8">.</operator><name pos:start="63:9" pos:end="63:17">msg_flags</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:44"><name pos:start="63:21" pos:end="63:27">tswap32</name><argument_list pos:start="63:28" pos:end="63:44">(<argument pos:start="63:29" pos:end="63:43"><expr pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:32">msgp</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:43">msg_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:38"><expr pos:start="67:5" pos:end="67:37"><name pos:start="67:5" pos:end="67:9">count</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:37"><name pos:start="67:13" pos:end="67:19">tswapal</name><argument_list pos:start="67:20" pos:end="67:37">(<argument pos:start="67:21" pos:end="67:36"><expr pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:24">msgp</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:36">msg_iovlen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:47"><expr pos:start="69:5" pos:end="69:46"><name pos:start="69:5" pos:end="69:7">vec</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:46"><name pos:start="69:11" pos:end="69:16">alloca</name><argument_list pos:start="69:17" pos:end="69:46">(<argument pos:start="69:18" pos:end="69:45"><expr pos:start="69:18" pos:end="69:45"><name pos:start="69:18" pos:end="69:22">count</name> <operator pos:start="69:24" pos:end="69:24">*</operator> <sizeof pos:start="69:26" pos:end="69:45">sizeof<argument_list pos:start="69:32" pos:end="69:45">(<argument pos:start="69:33" pos:end="69:44"><expr pos:start="69:33" pos:end="69:44">struct <name pos:start="69:40" pos:end="69:44">iovec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:40"><expr pos:start="71:5" pos:end="71:39"><name pos:start="71:5" pos:end="71:14">target_vec</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:39"><name pos:start="71:18" pos:end="71:24">tswapal</name><argument_list pos:start="71:25" pos:end="71:39">(<argument pos:start="71:26" pos:end="71:38"><expr pos:start="71:26" pos:end="71:38"><name pos:start="71:26" pos:end="71:38"><name pos:start="71:26" pos:end="71:29">msgp</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:38">msg_iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:80"><expr pos:start="73:5" pos:end="73:79"><call pos:start="73:5" pos:end="73:79"><name pos:start="73:5" pos:end="73:14">lock_iovec</name><argument_list pos:start="73:15" pos:end="73:79">(<argument pos:start="73:16" pos:end="73:48"><expr pos:start="73:16" pos:end="73:48"><ternary pos:start="73:16" pos:end="73:48"><condition pos:start="73:16" pos:end="73:21"><expr pos:start="73:16" pos:end="73:19"><name pos:start="73:16" pos:end="73:19">send</name></expr> ?</condition><then pos:start="73:23" pos:end="73:33"> <expr pos:start="73:23" pos:end="73:33"><name pos:start="73:23" pos:end="73:33">VERIFY_READ</name></expr> </then><else pos:start="73:35" pos:end="73:48">: <expr pos:start="73:37" pos:end="73:48"><name pos:start="73:37" pos:end="73:48">VERIFY_WRITE</name></expr></else></ternary></expr></argument>, <argument pos:start="73:51" pos:end="73:53"><expr pos:start="73:51" pos:end="73:53"><name pos:start="73:51" pos:end="73:53">vec</name></expr></argument>, <argument pos:start="73:56" pos:end="73:65"><expr pos:start="73:56" pos:end="73:65"><name pos:start="73:56" pos:end="73:65">target_vec</name></expr></argument>, <argument pos:start="73:68" pos:end="73:72"><expr pos:start="73:68" pos:end="73:72"><name pos:start="73:68" pos:end="73:72">count</name></expr></argument>, <argument pos:start="73:75" pos:end="73:78"><expr pos:start="73:75" pos:end="73:78"><name pos:start="73:75" pos:end="73:78">send</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:18"><name pos:start="75:5" pos:end="75:7">msg</name><operator pos:start="75:8" pos:end="75:8">.</operator><name pos:start="75:9" pos:end="75:18">msg_iovlen</name></name> <operator pos:start="75:20" pos:end="75:20">=</operator> <name pos:start="75:22" pos:end="75:26">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:22"><expr pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:7">msg</name><operator pos:start="77:8" pos:end="77:8">.</operator><name pos:start="77:9" pos:end="77:15">msg_iov</name></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <name pos:start="77:19" pos:end="77:21">vec</name></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="125:5"><if pos:start="81:5" pos:end="89:5">if <condition pos:start="81:8" pos:end="81:13">(<expr pos:start="81:9" pos:end="81:12"><name pos:start="81:9" pos:end="81:12">send</name></expr>)</condition> <block pos:start="81:15" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:54">

        <expr_stmt pos:start="83:9" pos:end="83:46"><expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:45"><name pos:start="83:15" pos:end="83:33">target_to_host_cmsg</name><argument_list pos:start="83:34" pos:end="83:45">(<argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><operator pos:start="83:35" pos:end="83:35">&amp;</operator><name pos:start="83:36" pos:end="83:38">msg</name></expr></argument>, <argument pos:start="83:41" pos:end="83:44"><expr pos:start="83:41" pos:end="83:44"><name pos:start="83:41" pos:end="83:44">msgp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:54"><if pos:start="85:9" pos:end="87:54">if <condition pos:start="85:12" pos:end="85:21">(<expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:18">==</operator> <literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:54"><block_content pos:start="87:13" pos:end="87:54">

            <expr_stmt pos:start="87:13" pos:end="87:54"><expr pos:start="87:13" pos:end="87:53"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:53"><name pos:start="87:19" pos:end="87:27">get_errno</name><argument_list pos:start="87:28" pos:end="87:53">(<argument pos:start="87:29" pos:end="87:52"><expr pos:start="87:29" pos:end="87:52"><call pos:start="87:29" pos:end="87:52"><name pos:start="87:29" pos:end="87:35">sendmsg</name><argument_list pos:start="87:36" pos:end="87:52">(<argument pos:start="87:37" pos:end="87:38"><expr pos:start="87:37" pos:end="87:38"><name pos:start="87:37" pos:end="87:38">fd</name></expr></argument>, <argument pos:start="87:41" pos:end="87:44"><expr pos:start="87:41" pos:end="87:44"><operator pos:start="87:41" pos:end="87:41">&amp;</operator><name pos:start="87:42" pos:end="87:44">msg</name></expr></argument>, <argument pos:start="87:47" pos:end="87:51"><expr pos:start="87:47" pos:end="87:51"><name pos:start="87:47" pos:end="87:51">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="125:5">else <block pos:start="89:12" pos:end="125:5">{<block_content pos:start="91:9" pos:end="123:9">

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:11">ret</name> <operator pos:start="91:13" pos:end="91:13">=</operator> <call pos:start="91:15" pos:end="91:49"><name pos:start="91:15" pos:end="91:23">get_errno</name><argument_list pos:start="91:24" pos:end="91:49">(<argument pos:start="91:25" pos:end="91:48"><expr pos:start="91:25" pos:end="91:48"><call pos:start="91:25" pos:end="91:48"><name pos:start="91:25" pos:end="91:31">recvmsg</name><argument_list pos:start="91:32" pos:end="91:48">(<argument pos:start="91:33" pos:end="91:34"><expr pos:start="91:33" pos:end="91:34"><name pos:start="91:33" pos:end="91:34">fd</name></expr></argument>, <argument pos:start="91:37" pos:end="91:40"><expr pos:start="91:37" pos:end="91:40"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:40">msg</name></expr></argument>, <argument pos:start="91:43" pos:end="91:47"><expr pos:start="91:43" pos:end="91:47"><name pos:start="91:43" pos:end="91:47">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="123:9"><if pos:start="93:9" pos:end="123:9">if <condition pos:start="93:12" pos:end="93:27">(<expr pos:start="93:13" pos:end="93:26"><operator pos:start="93:13" pos:end="93:13">!</operator><call pos:start="93:14" pos:end="93:26"><name pos:start="93:14" pos:end="93:21">is_error</name><argument_list pos:start="93:22" pos:end="93:26">(<argument pos:start="93:23" pos:end="93:25"><expr pos:start="93:23" pos:end="93:25"><name pos:start="93:23" pos:end="93:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:29" pos:end="123:9">{<block_content pos:start="95:13" pos:end="121:13">

            <expr_stmt pos:start="95:13" pos:end="95:22"><expr pos:start="95:13" pos:end="95:21"><name pos:start="95:13" pos:end="95:15">len</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <name pos:start="95:19" pos:end="95:21">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:50"><expr pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:15">ret</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <call pos:start="97:19" pos:end="97:49"><name pos:start="97:19" pos:end="97:37">host_to_target_cmsg</name><argument_list pos:start="97:38" pos:end="97:49">(<argument pos:start="97:39" pos:end="97:42"><expr pos:start="97:39" pos:end="97:42"><name pos:start="97:39" pos:end="97:42">msgp</name></expr></argument>, <argument pos:start="97:45" pos:end="97:48"><expr pos:start="97:45" pos:end="97:48"><operator pos:start="97:45" pos:end="97:45">&amp;</operator><name pos:start="97:46" pos:end="97:48">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="121:13"><if pos:start="99:13" pos:end="121:13">if <condition pos:start="99:16" pos:end="99:31">(<expr pos:start="99:17" pos:end="99:30"><operator pos:start="99:17" pos:end="99:17">!</operator><call pos:start="99:18" pos:end="99:30"><name pos:start="99:18" pos:end="99:25">is_error</name><argument_list pos:start="99:26" pos:end="99:30">(<argument pos:start="99:27" pos:end="99:29"><expr pos:start="99:27" pos:end="99:29"><name pos:start="99:27" pos:end="99:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:33" pos:end="121:13">{<block_content pos:start="101:17" pos:end="119:26">

                <expr_stmt pos:start="101:17" pos:end="101:61"><expr pos:start="101:17" pos:end="101:60"><name pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:20">msgp</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:33">msg_namelen</name></name> <operator pos:start="101:35" pos:end="101:35">=</operator> <call pos:start="101:37" pos:end="101:60"><name pos:start="101:37" pos:end="101:43">tswap32</name><argument_list pos:start="101:44" pos:end="101:60">(<argument pos:start="101:45" pos:end="101:59"><expr pos:start="101:45" pos:end="101:59"><name pos:start="101:45" pos:end="101:59"><name pos:start="101:45" pos:end="101:47">msg</name><operator pos:start="101:48" pos:end="101:48">.</operator><name pos:start="101:49" pos:end="101:59">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="115:17"><if pos:start="103:17" pos:end="115:17">if <condition pos:start="103:20" pos:end="103:41">(<expr pos:start="103:21" pos:end="103:40"><name pos:start="103:21" pos:end="103:32"><name pos:start="103:21" pos:end="103:23">msg</name><operator pos:start="103:24" pos:end="103:24">.</operator><name pos:start="103:25" pos:end="103:32">msg_name</name></name> <operator pos:start="103:34" pos:end="103:35">!=</operator> <name pos:start="103:37" pos:end="103:40">NULL</name></expr>)</condition> <block pos:start="103:43" pos:end="115:17">{<block_content pos:start="105:21" pos:end="113:21">

                    <expr_stmt pos:start="105:21" pos:end="107:67"><expr pos:start="105:21" pos:end="107:66"><name pos:start="105:21" pos:end="105:23">ret</name> <operator pos:start="105:25" pos:end="105:25">=</operator> <call pos:start="105:27" pos:end="107:66"><name pos:start="105:27" pos:end="105:49">host_to_target_sockaddr</name><argument_list pos:start="105:50" pos:end="107:66">(<argument pos:start="105:51" pos:end="105:73"><expr pos:start="105:51" pos:end="105:73"><call pos:start="105:51" pos:end="105:73"><name pos:start="105:51" pos:end="105:57">tswapal</name><argument_list pos:start="105:58" pos:end="105:73">(<argument pos:start="105:59" pos:end="105:72"><expr pos:start="105:59" pos:end="105:72"><name pos:start="105:59" pos:end="105:72"><name pos:start="105:59" pos:end="105:62">msgp</name><operator pos:start="105:63" pos:end="105:64">-&gt;</operator><name pos:start="105:65" pos:end="105:72">msg_name</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="107:37" pos:end="107:48"><expr pos:start="107:37" pos:end="107:48"><name pos:start="107:37" pos:end="107:48"><name pos:start="107:37" pos:end="107:39">msg</name><operator pos:start="107:40" pos:end="107:40">.</operator><name pos:start="107:41" pos:end="107:48">msg_name</name></name></expr></argument>, <argument pos:start="107:51" pos:end="107:65"><expr pos:start="107:51" pos:end="107:65"><name pos:start="107:51" pos:end="107:65"><name pos:start="107:51" pos:end="107:53">msg</name><operator pos:start="107:54" pos:end="107:54">.</operator><name pos:start="107:55" pos:end="107:65">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="109:21" pos:end="113:21"><if pos:start="109:21" pos:end="113:21">if <condition pos:start="109:24" pos:end="109:28">(<expr pos:start="109:25" pos:end="109:27"><name pos:start="109:25" pos:end="109:27">ret</name></expr>)</condition> <block pos:start="109:30" pos:end="113:21">{<block_content pos:start="111:25" pos:end="111:33">

                        <goto pos:start="111:25" pos:end="111:33">goto <name pos:start="111:30" pos:end="111:32">out</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="119:17" pos:end="119:26"><expr pos:start="119:17" pos:end="119:25"><name pos:start="119:17" pos:end="119:19">ret</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:25">len</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="129:1" pos:end="129:4"><name pos:start="129:1" pos:end="129:3">out</name>:</label>

    <expr_stmt pos:start="131:5" pos:end="131:48"><expr pos:start="131:5" pos:end="131:47"><call pos:start="131:5" pos:end="131:47"><name pos:start="131:5" pos:end="131:16">unlock_iovec</name><argument_list pos:start="131:17" pos:end="131:47">(<argument pos:start="131:18" pos:end="131:20"><expr pos:start="131:18" pos:end="131:20"><name pos:start="131:18" pos:end="131:20">vec</name></expr></argument>, <argument pos:start="131:23" pos:end="131:32"><expr pos:start="131:23" pos:end="131:32"><name pos:start="131:23" pos:end="131:32">target_vec</name></expr></argument>, <argument pos:start="131:35" pos:end="131:39"><expr pos:start="131:35" pos:end="131:39"><name pos:start="131:35" pos:end="131:39">count</name></expr></argument>, <argument pos:start="131:42" pos:end="131:46"><expr pos:start="131:42" pos:end="131:46"><operator pos:start="131:42" pos:end="131:42">!</operator><name pos:start="131:43" pos:end="131:46">send</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:55"><expr pos:start="133:5" pos:end="133:54"><call pos:start="133:5" pos:end="133:54"><name pos:start="133:5" pos:end="133:22">unlock_user_struct</name><argument_list pos:start="133:23" pos:end="133:54">(<argument pos:start="133:24" pos:end="133:27"><expr pos:start="133:24" pos:end="133:27"><name pos:start="133:24" pos:end="133:27">msgp</name></expr></argument>, <argument pos:start="133:30" pos:end="133:39"><expr pos:start="133:30" pos:end="133:39"><name pos:start="133:30" pos:end="133:39">target_msg</name></expr></argument>, <argument pos:start="133:42" pos:end="133:53"><expr pos:start="133:42" pos:end="133:53"><ternary pos:start="133:42" pos:end="133:53"><condition pos:start="133:42" pos:end="133:47"><expr pos:start="133:42" pos:end="133:45"><name pos:start="133:42" pos:end="133:45">send</name></expr> ?</condition><then pos:start="133:49" pos:end="133:49"> <expr pos:start="133:49" pos:end="133:49"><literal type="number" pos:start="133:49" pos:end="133:49">0</literal></expr> </then><else pos:start="133:51" pos:end="133:53">: <expr pos:start="133:53" pos:end="133:53"><literal type="number" pos:start="133:53" pos:end="133:53">1</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:15">return <expr pos:start="135:12" pos:end="135:14"><name pos:start="135:12" pos:end="135:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
