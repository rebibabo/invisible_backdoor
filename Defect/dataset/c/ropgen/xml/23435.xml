<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23435.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">print_formats</name><parameter_list pos:start="1:26" pos:end="1:54">(<parameter pos:start="1:27" pos:end="1:53"><decl pos:start="1:27" pos:end="1:53"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFilterContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:53">filter_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:30">

    <decl_stmt pos:start="5:5" pos:end="72:0"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



<cpp:define pos:start="9:1" pos:end="71:29">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:39"><name pos:start="9:9" pos:end="9:18">PRINT_FMTS</name><parameter_list pos:start="9:19" pos:end="9:39">(<parameter pos:start="9:20" pos:end="9:24"><type pos:start="9:20" pos:end="9:24"><name pos:start="9:20" pos:end="9:24">inout</name></type></parameter>, <parameter pos:start="9:27" pos:end="9:31"><type pos:start="9:27" pos:end="9:31"><name pos:start="9:27" pos:end="9:31">outin</name></type></parameter>, <parameter pos:start="9:34" pos:end="9:38"><type pos:start="9:34" pos:end="9:38"><name pos:start="9:34" pos:end="9:38">INOUT</name></type></parameter>)</parameter_list></cpp:macro>                                 \

    <cpp:value pos:start="11:5" pos:end="71:29">for (i = 0; i &lt; filter_ctx-&gt;nb_##inout##puts; i++) {                     \

        if (filter_ctx-&gt;inout##puts[i]-&gt;type == AVMEDIA_TYPE_VIDEO) {   \

            AVFilterFormats *fmts =                                     \

                filter_ctx-&gt;inout##puts[i]-&gt;outin##_formats;            \

            for (j = 0; j &lt; fmts-&gt;nb_formats; j++)                    \

                if(av_get_pix_fmt_name(fmts-&gt;formats[j]))               \

                printf(#INOUT "PUT[%d] %s: fmt:%s\n",                   \

                       i, filter_ctx-&gt;filter-&gt;inout##puts[i].name,      \

                       av_get_pix_fmt_name(fmts-&gt;formats[j]));          \

        } else if (filter_ctx-&gt;inout##puts[i]-&gt;type == AVMEDIA_TYPE_AUDIO) { \

            AVFilterFormats *fmts;                                      \

            AVFilterChannelLayouts *layouts;                            \

                                                                        \

            fmts = filter_ctx-&gt;inout##puts[i]-&gt;outin##_formats;         \

            for (j = 0; j &lt; fmts-&gt;nb_formats; j++)                    \

                printf(#INOUT "PUT[%d] %s: fmt:%s\n",                   \

                       i, filter_ctx-&gt;filter-&gt;inout##puts[i].name,      \

                       av_get_sample_fmt_name(fmts-&gt;formats[j]));       \

                                                                        \

            layouts = filter_ctx-&gt;inout##puts[i]-&gt;outin##_channel_layouts; \

            for (j = 0; j &lt; layouts-&gt;nb_channel_layouts; j++) {                  \

                char buf[256];                                          \

                av_get_channel_layout_string(buf, sizeof(buf), -1,      \

                                             layouts-&gt;channel_layouts[j]);         \

                printf(#INOUT "PUT[%d] %s: chlayout:%s\n",              \

                       i, filter_ctx-&gt;filter-&gt;inout##puts[i].name, buf); \

            }                                                           \

        }                                                               \

    }                                                                   \



    PRINT_FMTS(in,  out, IN);</cpp:value></cpp:define>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><call pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:14">PRINT_FMTS</name><argument_list pos:start="73:15" pos:end="73:29">(<argument pos:start="73:16" pos:end="73:18"><expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">out</name></expr></argument>, <argument pos:start="73:21" pos:end="73:22"><expr pos:start="73:21" pos:end="73:22"><name pos:start="73:21" pos:end="73:22">in</name></expr></argument>,  <argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><name pos:start="73:26" pos:end="73:28">OUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
