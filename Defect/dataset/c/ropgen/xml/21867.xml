<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21867.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">nabm_writew</name> <parameter_list pos:start="1:25" pos:end="1:67">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:66">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PCIAC97LinkState</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">d</name> <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">AC97LinkState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:31">= <expr pos:start="7:24" pos:end="7:31"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">d</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">ac97</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AC97BusMasterRegs</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">r</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">index</name> <init pos:start="11:20" pos:end="11:38">= <expr pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:25">addr</name> <operator pos:start="11:27" pos:end="11:27">-</operator> <name pos:start="11:29" pos:end="11:38"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:35">base</name><index pos:start="11:36" pos:end="11:38">[<expr pos:start="11:37" pos:end="11:37"><literal type="number" pos:start="11:37" pos:end="11:37">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <switch pos:start="13:5" pos:end="37:5">switch <condition pos:start="13:12" pos:end="13:18">(<expr pos:start="13:13" pos:end="13:17"><name pos:start="13:13" pos:end="13:17">index</name></expr>)</condition> <block pos:start="13:20" pos:end="37:5">{<block_content pos:start="15:5" pos:end="35:14">

    <case pos:start="15:5" pos:end="15:15">case <expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:14">PI_SR</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:14">PO_SR</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:15">case <expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:14">MC_SR</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:9">r</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <operator pos:start="21:13" pos:end="21:13">&amp;</operator><name pos:start="21:14" pos:end="21:39"><name pos:start="21:14" pos:end="21:14">s</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:23">bm_regs</name><index pos:start="21:24" pos:end="21:39">[<expr pos:start="21:25" pos:end="21:38"><call pos:start="21:25" pos:end="21:38"><name pos:start="21:25" pos:end="21:30">GET_BM</name> <argument_list pos:start="21:32" pos:end="21:38">(<argument pos:start="21:33" pos:end="21:37"><expr pos:start="21:33" pos:end="21:37"><name pos:start="21:33" pos:end="21:37">index</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:54"><expr pos:start="23:9" pos:end="23:53"><name pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">r</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">sr</name></name> <operator pos:start="23:15" pos:end="23:16">|=</operator> <name pos:start="23:18" pos:end="23:20">val</name> <operator pos:start="23:22" pos:end="23:22">&amp;</operator> <operator pos:start="23:24" pos:end="23:24">~</operator><operator pos:start="23:25" pos:end="23:25">(</operator><name pos:start="23:26" pos:end="23:35">SR_RO_MASK</name> <operator pos:start="23:37" pos:end="23:37">|</operator> <name pos:start="23:39" pos:end="23:52">SR_WCLEAR_MASK</name><operator pos:start="23:53" pos:end="23:53">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:58"><expr pos:start="25:9" pos:end="25:57"><call pos:start="25:9" pos:end="25:57"><name pos:start="25:9" pos:end="25:17">update_sr</name> <argument_list pos:start="25:19" pos:end="25:57">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:23"><expr pos:start="25:23" pos:end="25:23"><name pos:start="25:23" pos:end="25:23">r</name></expr></argument>, <argument pos:start="25:26" pos:end="25:56"><expr pos:start="25:26" pos:end="25:56"><name pos:start="25:26" pos:end="25:30"><name pos:start="25:26" pos:end="25:26">r</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:30">sr</name></name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <operator pos:start="25:34" pos:end="25:34">~</operator><operator pos:start="25:35" pos:end="25:35">(</operator><name pos:start="25:36" pos:end="25:38">val</name> <operator pos:start="25:40" pos:end="25:40">&amp;</operator> <name pos:start="25:42" pos:end="25:55">SR_WCLEAR_MASK</name><operator pos:start="25:56" pos:end="25:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:71"><expr pos:start="27:9" pos:end="27:70"><call pos:start="27:9" pos:end="27:70"><name pos:start="27:9" pos:end="27:13">dolog</name> <argument_list pos:start="27:15" pos:end="27:70">(<argument pos:start="27:16" pos:end="27:41"><expr pos:start="27:16" pos:end="27:41"><literal type="string" pos:start="27:16" pos:end="27:41">"SR[%d] &lt;- %#x (sr %#x)\n"</literal></expr></argument>, <argument pos:start="27:44" pos:end="27:57"><expr pos:start="27:44" pos:end="27:57"><call pos:start="27:44" pos:end="27:57"><name pos:start="27:44" pos:end="27:49">GET_BM</name> <argument_list pos:start="27:51" pos:end="27:57">(<argument pos:start="27:52" pos:end="27:56"><expr pos:start="27:52" pos:end="27:56"><name pos:start="27:52" pos:end="27:56">index</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:60" pos:end="27:62"><expr pos:start="27:60" pos:end="27:62"><name pos:start="27:60" pos:end="27:62">val</name></expr></argument>, <argument pos:start="27:65" pos:end="27:69"><expr pos:start="27:65" pos:end="27:69"><name pos:start="27:65" pos:end="27:69"><name pos:start="27:65" pos:end="27:65">r</name><operator pos:start="27:66" pos:end="27:67">-&gt;</operator><name pos:start="27:68" pos:end="27:69">sr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <default pos:start="31:5" pos:end="31:12">default:</default>

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><call pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:13">dolog</name> <argument_list pos:start="33:15" pos:end="33:55">(<argument pos:start="33:16" pos:end="33:43"><expr pos:start="33:16" pos:end="33:43"><literal type="string" pos:start="33:16" pos:end="33:43">"U nabm writew %#x &lt;- %#x\n"</literal></expr></argument>, <argument pos:start="33:46" pos:end="33:49"><expr pos:start="33:46" pos:end="33:49"><name pos:start="33:46" pos:end="33:49">addr</name></expr></argument>, <argument pos:start="33:52" pos:end="33:54"><expr pos:start="33:52" pos:end="33:54"><name pos:start="33:52" pos:end="33:54">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
