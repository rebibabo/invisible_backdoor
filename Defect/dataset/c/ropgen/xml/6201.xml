<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6201.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:18">target_phys_addr_t</name></type> <name pos:start="1:20" pos:end="1:50">memory_region_section_get_iotlb</name><parameter_list pos:start="1:51" pos:end="11:73">(<parameter pos:start="1:52" pos:end="1:68"><decl pos:start="1:52" pos:end="1:68"><type pos:start="1:52" pos:end="1:68"><name pos:start="1:52" pos:end="1:63">CPUArchState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">env</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:79"><decl pos:start="3:52" pos:end="3:79"><type pos:start="3:52" pos:end="3:79"><name pos:start="3:52" pos:end="3:70">MemoryRegionSection</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:79">section</name></decl></parameter>,

                                                   <parameter pos:start="5:52" pos:end="5:69"><decl pos:start="5:52" pos:end="5:69"><type pos:start="5:52" pos:end="5:69"><name pos:start="5:52" pos:end="5:63">target_ulong</name></type> <name pos:start="5:65" pos:end="5:69">vaddr</name></decl></parameter>,

                                                   <parameter pos:start="7:52" pos:end="7:75"><decl pos:start="7:52" pos:end="7:75"><type pos:start="7:52" pos:end="7:75"><name pos:start="7:52" pos:end="7:69">target_phys_addr_t</name></type> <name pos:start="7:71" pos:end="7:75">paddr</name></decl></parameter>,

                                                   <parameter pos:start="9:52" pos:end="9:59"><decl pos:start="9:52" pos:end="9:59"><type pos:start="9:52" pos:end="9:59"><name pos:start="9:52" pos:end="9:54">int</name></type> <name pos:start="9:56" pos:end="9:59">prot</name></decl></parameter>,

                                                   <parameter pos:start="11:52" pos:end="11:72"><decl pos:start="11:52" pos:end="11:72"><type pos:start="11:52" pos:end="11:72"><name pos:start="11:52" pos:end="11:63">target_ulong</name> <modifier pos:start="11:65" pos:end="11:65">*</modifier></type><name pos:start="11:66" pos:end="11:72">address</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="89:1">{<block_content pos:start="15:5" pos:end="87:17">

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22">target_phys_addr_t</name></type> <name pos:start="15:24" pos:end="15:28">iotlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">CPUWatchpoint</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:21">wp</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="57:5"><if pos:start="21:5" pos:end="39:5">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><call pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:28">memory_region_is_ram</name><argument_list pos:start="21:29" pos:end="21:41">(<argument pos:start="21:30" pos:end="21:40"><expr pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:40"><name pos:start="21:30" pos:end="21:36">section</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:40">mr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:44" pos:end="39:5">{<block_content pos:start="25:9" pos:end="37:9">

        <comment type="block" pos:start="23:9" pos:end="23:26">/* Normal RAM.  */</comment>

        <expr_stmt pos:start="25:9" pos:end="27:57"><expr pos:start="25:9" pos:end="27:56"><name pos:start="25:9" pos:end="25:13">iotlb</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <operator pos:start="25:17" pos:end="25:17">(</operator><call pos:start="25:18" pos:end="25:56"><name pos:start="25:18" pos:end="25:43">memory_region_get_ram_addr</name><argument_list pos:start="25:44" pos:end="25:56">(<argument pos:start="25:45" pos:end="25:55"><expr pos:start="25:45" pos:end="25:55"><name pos:start="25:45" pos:end="25:55"><name pos:start="25:45" pos:end="25:51">section</name><operator pos:start="25:52" pos:end="25:53">-&gt;</operator><name pos:start="25:54" pos:end="25:55">mr</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:58" pos:end="25:58">&amp;</operator> <name pos:start="25:60" pos:end="25:75">TARGET_PAGE_MASK</name><operator pos:start="25:76" pos:end="25:76">)</operator>

            <operator pos:start="27:13" pos:end="27:13">+</operator> <call pos:start="27:15" pos:end="27:56"><name pos:start="27:15" pos:end="27:40">memory_region_section_addr</name><argument_list pos:start="27:41" pos:end="27:56">(<argument pos:start="27:42" pos:end="27:48"><expr pos:start="27:42" pos:end="27:48"><name pos:start="27:42" pos:end="27:48">section</name></expr></argument>, <argument pos:start="27:51" pos:end="27:55"><expr pos:start="27:51" pos:end="27:55"><name pos:start="27:51" pos:end="27:55">paddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:31">(<expr pos:start="29:13" pos:end="29:30"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:30"><name pos:start="29:14" pos:end="29:20">section</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:30">readonly</name></name></expr>)</condition> <block pos:start="29:33" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:43">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:17">iotlb</name> <operator pos:start="31:19" pos:end="31:20">|=</operator> <name pos:start="31:22" pos:end="31:42">phys_section_notdirty</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:9">else <block pos:start="33:16" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:38">

            <expr_stmt pos:start="35:13" pos:end="35:38"><expr pos:start="35:13" pos:end="35:37"><name pos:start="35:13" pos:end="35:17">iotlb</name> <operator pos:start="35:19" pos:end="35:20">|=</operator> <name pos:start="35:22" pos:end="35:37">phys_section_rom</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="57:5">else <block pos:start="39:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:60">

        <comment type="block" pos:start="41:9" pos:end="51:55">/* IO handlers are currently passed a physical address.

           It would be nice to pass an offset from the base address

           of that region.  This would avoid having to special case RAM,

           and avoid full address decoding in every device.

           We can't use the high bits of pd for this because

           IO_MEM_ROMD uses these as a ram address.  */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:13">iotlb</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:23">section</name> <operator pos:start="53:25" pos:end="53:25">-</operator> <name pos:start="53:27" pos:end="53:39">phys_sections</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:60"><expr pos:start="55:9" pos:end="55:59"><name pos:start="55:9" pos:end="55:13">iotlb</name> <operator pos:start="55:15" pos:end="55:16">+=</operator> <call pos:start="55:18" pos:end="55:59"><name pos:start="55:18" pos:end="55:43">memory_region_section_addr</name><argument_list pos:start="55:44" pos:end="55:59">(<argument pos:start="55:45" pos:end="55:51"><expr pos:start="55:45" pos:end="55:51"><name pos:start="55:45" pos:end="55:51">section</name></expr></argument>, <argument pos:start="55:54" pos:end="55:58"><expr pos:start="55:54" pos:end="55:58"><name pos:start="55:54" pos:end="55:58">paddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="63:36">/* Make accesses to pages with watchpoints go via the

       watchpoint trap routines.  */</comment>

    <macro pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:18">QTAILQ_FOREACH</name><argument_list pos:start="65:19" pos:end="65:48">(<argument pos:start="65:20" pos:end="65:21">wp</argument>, <argument pos:start="65:24" pos:end="65:40">&amp;env-&gt;watchpoints</argument>, <argument pos:start="65:43" pos:end="65:47">entry</argument>)</argument_list></macro> <block pos:start="65:50" pos:end="83:5">{<block_content pos:start="67:9" pos:end="81:9">

        <if_stmt pos:start="67:9" pos:end="81:9"><if pos:start="67:9" pos:end="81:9">if <condition pos:start="67:12" pos:end="67:52">(<expr pos:start="67:13" pos:end="67:51"><name pos:start="67:13" pos:end="67:17">vaddr</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:31"><name pos:start="67:23" pos:end="67:24">wp</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:31">vaddr</name></name> <operator pos:start="67:33" pos:end="67:33">&amp;</operator> <name pos:start="67:35" pos:end="67:50">TARGET_PAGE_MASK</name><operator pos:start="67:51" pos:end="67:51">)</operator></expr>)</condition> <block pos:start="67:54" pos:end="81:9">{<block_content pos:start="71:13" pos:end="79:13">

            <comment type="block" pos:start="69:13" pos:end="69:72">/* Avoid trapping reads of pages with a write breakpoint. */</comment>

            <if_stmt pos:start="71:13" pos:end="79:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:65">(<expr pos:start="71:17" pos:end="71:64"><operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:21">prot</name> <operator pos:start="71:23" pos:end="71:23">&amp;</operator> <name pos:start="71:25" pos:end="71:34">PAGE_WRITE</name><operator pos:start="71:35" pos:end="71:35">)</operator> <operator pos:start="71:37" pos:end="71:38">||</operator> <operator pos:start="71:40" pos:end="71:40">(</operator><name pos:start="71:41" pos:end="71:49"><name pos:start="71:41" pos:end="71:42">wp</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:49">flags</name></name> <operator pos:start="71:51" pos:end="71:51">&amp;</operator> <name pos:start="71:53" pos:end="71:63">BP_MEM_READ</name><operator pos:start="71:64" pos:end="71:64">)</operator></expr>)</condition> <block pos:start="71:67" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:22">

                <expr_stmt pos:start="73:17" pos:end="73:51"><expr pos:start="73:17" pos:end="73:50"><name pos:start="73:17" pos:end="73:21">iotlb</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:42">phys_section_watch</name> <operator pos:start="73:44" pos:end="73:44">+</operator> <name pos:start="73:46" pos:end="73:50">paddr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:37"><expr pos:start="75:17" pos:end="75:36"><operator pos:start="75:17" pos:end="75:17">*</operator><name pos:start="75:18" pos:end="75:24">address</name> <operator pos:start="75:26" pos:end="75:27">|=</operator> <name pos:start="75:29" pos:end="75:36">TLB_MMIO</name></expr>;</expr_stmt>

                <break pos:start="77:17" pos:end="77:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <return pos:start="87:5" pos:end="87:17">return <expr pos:start="87:12" pos:end="87:16"><name pos:start="87:12" pos:end="87:16">iotlb</name></expr>;</return>

</block_content>}</block></function>
</unit>
