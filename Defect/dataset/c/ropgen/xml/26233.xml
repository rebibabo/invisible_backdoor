<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26233.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">sdl_callback</name> <parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:45">Uint8</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">buf</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:59"><decl pos:start="1:53" pos:end="1:59"><type pos:start="1:53" pos:end="1:59"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:59">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="111:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SDLVoiceOut</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">sdl</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SDLAudioState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32">glob_sdl</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">HWVoiceOut</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:18">hw</name> <init pos:start="9:20" pos:end="9:29">= <expr pos:start="9:22" pos:end="9:29"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:29"><name pos:start="9:23" pos:end="9:25">sdl</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">hw</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">samples</name> <init pos:start="11:17" pos:end="11:39">= <expr pos:start="11:19" pos:end="11:39"><name pos:start="11:19" pos:end="11:21">len</name> <operator pos:start="11:23" pos:end="11:24">&gt;&gt;</operator> <name pos:start="11:26" pos:end="11:39"><name pos:start="11:26" pos:end="11:27">hw</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:33">info</name><operator pos:start="11:34" pos:end="11:34">.</operator><name pos:start="11:35" pos:end="11:39">shift</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">exit</name></name></expr>)</condition> <block pos:start="15:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="23:5" pos:end="111:5">while <condition pos:start="23:11" pos:end="23:19">(<expr pos:start="23:12" pos:end="23:18"><name pos:start="23:12" pos:end="23:18">samples</name></expr>)</condition> <block pos:start="23:21" pos:end="111:5">{<block_content pos:start="25:9" pos:end="109:9">

        <decl_stmt pos:start="25:9" pos:end="25:25"><decl pos:start="25:9" pos:end="25:18"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:18">to_mix</name></decl>, <decl pos:start="25:21" pos:end="25:24"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:21" pos:end="25:24">decr</name></decl>;</decl_stmt>



        <comment type="block" pos:start="29:9" pos:end="29:58">/* dolog ("in callback samples=%d\n", samples); */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><call pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:16">sdl_wait</name> <argument_list pos:start="31:18" pos:end="31:36">(<argument pos:start="31:19" pos:end="31:19"><expr pos:start="31:19" pos:end="31:19"><name pos:start="31:19" pos:end="31:19">s</name></expr></argument>, <argument pos:start="31:22" pos:end="31:35"><expr pos:start="31:22" pos:end="31:35"><literal type="string" pos:start="31:22" pos:end="31:35">"sdl_callback"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">exit</name></name></expr>)</condition> <block pos:start="33:22" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:19">

            <return pos:start="35:13" pos:end="35:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:41">(<expr pos:start="41:13" pos:end="41:40"><call pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:20">sdl_lock</name> <argument_list pos:start="41:22" pos:end="41:40">(<argument pos:start="41:23" pos:end="41:23"><expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">s</name></expr></argument>, <argument pos:start="41:26" pos:end="41:39"><expr pos:start="41:26" pos:end="41:39"><literal type="string" pos:start="41:26" pos:end="41:39">"sdl_callback"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:43" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:19">

            <return pos:start="43:13" pos:end="43:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:77">(<expr pos:start="49:13" pos:end="49:76"><call pos:start="49:13" pos:end="49:76"><name pos:start="49:13" pos:end="49:21">audio_bug</name> <argument_list pos:start="49:23" pos:end="49:76">(<argument pos:start="49:24" pos:end="49:33"><expr pos:start="49:24" pos:end="49:33"><name pos:start="49:24" pos:end="49:33">AUDIO_FUNC</name></expr></argument>, <argument pos:start="49:36" pos:end="49:75"><expr pos:start="49:36" pos:end="49:75"><name pos:start="49:36" pos:end="49:44"><name pos:start="49:36" pos:end="49:38">sdl</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:44">live</name></name> <operator pos:start="49:46" pos:end="49:46">&lt;</operator> <literal type="number" pos:start="49:48" pos:end="49:48">0</literal> <operator pos:start="49:50" pos:end="49:51">||</operator> <name pos:start="49:53" pos:end="49:61"><name pos:start="49:53" pos:end="49:55">sdl</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:61">live</name></name> <operator pos:start="49:63" pos:end="49:63">&gt;</operator> <name pos:start="49:65" pos:end="49:75"><name pos:start="49:65" pos:end="49:66">hw</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:75">samples</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:79" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:19">

            <expr_stmt pos:start="51:13" pos:end="53:43"><expr pos:start="51:13" pos:end="53:42"><call pos:start="51:13" pos:end="53:42"><name pos:start="51:13" pos:end="51:17">dolog</name> <argument_list pos:start="51:19" pos:end="53:42">(<argument pos:start="51:20" pos:end="51:50"><expr pos:start="51:20" pos:end="51:50"><literal type="string" pos:start="51:20" pos:end="51:50">"sdl-&gt;live=%d hw-&gt;samples=%d\n"</literal></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:28"><expr pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:22">sdl</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:28">live</name></name></expr></argument>, <argument pos:start="53:31" pos:end="53:41"><expr pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:32">hw</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:41">samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:23">(<expr pos:start="61:13" pos:end="61:22"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:22"><name pos:start="61:14" pos:end="61:16">sdl</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:22">live</name></name></expr>)</condition> <block pos:start="61:25" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:23">

            <goto pos:start="63:13" pos:end="63:23">goto <name pos:start="63:18" pos:end="63:22">again</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:52">/* dolog ("in callback live=%d\n", live); */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:14">to_mix</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:47"><name pos:start="71:18" pos:end="71:26">audio_MIN</name> <argument_list pos:start="71:28" pos:end="71:47">(<argument pos:start="71:29" pos:end="71:35"><expr pos:start="71:29" pos:end="71:35"><name pos:start="71:29" pos:end="71:35">samples</name></expr></argument>, <argument pos:start="71:38" pos:end="71:46"><expr pos:start="71:38" pos:end="71:46"><name pos:start="71:38" pos:end="71:46"><name pos:start="71:38" pos:end="71:40">sdl</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:46">live</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:12">decr</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:21">to_mix</name></expr>;</expr_stmt>

        <while pos:start="75:9" pos:end="93:9">while <condition pos:start="75:15" pos:end="75:22">(<expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21">to_mix</name></expr>)</condition> <block pos:start="75:24" pos:end="93:9">{<block_content pos:start="77:13" pos:end="91:43">

            <decl_stmt pos:start="77:13" pos:end="77:67"><decl pos:start="77:13" pos:end="77:66"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:21">chunk</name> <init pos:start="77:23" pos:end="77:66">= <expr pos:start="77:25" pos:end="77:66"><call pos:start="77:25" pos:end="77:66"><name pos:start="77:25" pos:end="77:33">audio_MIN</name> <argument_list pos:start="77:35" pos:end="77:66">(<argument pos:start="77:36" pos:end="77:41"><expr pos:start="77:36" pos:end="77:41"><name pos:start="77:36" pos:end="77:41">to_mix</name></expr></argument>, <argument pos:start="77:44" pos:end="77:65"><expr pos:start="77:44" pos:end="77:65"><name pos:start="77:44" pos:end="77:54"><name pos:start="77:44" pos:end="77:45">hw</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:54">samples</name></name> <operator pos:start="77:56" pos:end="77:56">-</operator> <name pos:start="77:58" pos:end="77:65"><name pos:start="77:58" pos:end="77:59">hw</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:65">rpos</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:54"><decl pos:start="79:13" pos:end="79:53"><type pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:23">st_sample_t</name> <modifier pos:start="79:25" pos:end="79:25">*</modifier></type><name pos:start="79:26" pos:end="79:28">src</name> <init pos:start="79:30" pos:end="79:53">= <expr pos:start="79:32" pos:end="79:53"><name pos:start="79:32" pos:end="79:42"><name pos:start="79:32" pos:end="79:33">hw</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">mix_buf</name></name> <operator pos:start="79:44" pos:end="79:44">+</operator> <name pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:47">hw</name><operator pos:start="79:48" pos:end="79:49">-&gt;</operator><name pos:start="79:50" pos:end="79:53">rpos</name></name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="83:13" pos:end="83:77">/* dolog ("in callback to_mix %d, chunk %d\n", to_mix, chunk); */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><call pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:14">hw</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:20">clip</name></name> <argument_list pos:start="85:22" pos:end="85:38">(<argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">buf</name></expr></argument>, <argument pos:start="85:28" pos:end="85:30"><expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">src</name></expr></argument>, <argument pos:start="85:33" pos:end="85:37"><expr pos:start="85:33" pos:end="85:37"><name pos:start="85:33" pos:end="85:37">chunk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:58"><expr pos:start="87:13" pos:end="87:57"><name pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:15">sdl</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:21">rpos</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <operator pos:start="87:25" pos:end="87:25">(</operator><name pos:start="87:26" pos:end="87:34"><name pos:start="87:26" pos:end="87:28">sdl</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:34">rpos</name></name> <operator pos:start="87:36" pos:end="87:36">+</operator> <name pos:start="87:38" pos:end="87:42">chunk</name><operator pos:start="87:43" pos:end="87:43">)</operator> <operator pos:start="87:45" pos:end="87:45">%</operator> <name pos:start="87:47" pos:end="87:57"><name pos:start="87:47" pos:end="87:48">hw</name><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:57">samples</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:28"><expr pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:18">to_mix</name> <operator pos:start="89:20" pos:end="89:21">-=</operator> <name pos:start="89:23" pos:end="89:27">chunk</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:43"><expr pos:start="91:13" pos:end="91:42"><name pos:start="91:13" pos:end="91:15">buf</name> <operator pos:start="91:17" pos:end="91:18">+=</operator> <name pos:start="91:20" pos:end="91:24">chunk</name> <operator pos:start="91:26" pos:end="91:27">&lt;&lt;</operator> <name pos:start="91:29" pos:end="91:42"><name pos:start="91:29" pos:end="91:30">hw</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:36">info</name><operator pos:start="91:37" pos:end="91:37">.</operator><name pos:start="91:38" pos:end="91:42">shift</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:15">samples</name> <operator pos:start="95:17" pos:end="95:18">-=</operator> <name pos:start="95:20" pos:end="95:23">decr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:26"><expr pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:17"><name pos:start="97:9" pos:end="97:11">sdl</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:17">live</name></name> <operator pos:start="97:19" pos:end="97:20">-=</operator> <name pos:start="97:22" pos:end="97:25">decr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:26"><expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:11">sdl</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:17">decr</name></name> <operator pos:start="99:19" pos:end="99:20">+=</operator> <name pos:start="99:22" pos:end="99:25">decr</name></expr>;</expr_stmt>



    <label pos:start="103:5" pos:end="103:10"><name pos:start="103:5" pos:end="103:9">again</name>:</label>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:43">(<expr pos:start="105:13" pos:end="105:42"><call pos:start="105:13" pos:end="105:42"><name pos:start="105:13" pos:end="105:22">sdl_unlock</name> <argument_list pos:start="105:24" pos:end="105:42">(<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">s</name></expr></argument>, <argument pos:start="105:28" pos:end="105:41"><expr pos:start="105:28" pos:end="105:41"><literal type="string" pos:start="105:28" pos:end="105:41">"sdl_callback"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:45" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:19">

            <return pos:start="107:13" pos:end="107:19">return;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <comment type="block" pos:start="113:5" pos:end="113:39">/* dolog ("done len=%d\n", len); */</comment>

</block_content>}</block></function>
</unit>
