<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22198.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">qemu_savevm_state_cancel</name><parameter_list pos:start="1:30" pos:end="1:56">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:37">Monitor</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">mon</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">QEMUFile</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>;</decl_stmt>



    <macro pos:start="9:5" pos:end="9:47"><name pos:start="9:5" pos:end="9:18">QTAILQ_FOREACH</name><argument_list pos:start="9:19" pos:end="9:47">(<argument pos:start="9:20" pos:end="9:21">se</argument>, <argument pos:start="9:24" pos:end="9:39">&amp;savevm_handlers</argument>, <argument pos:start="9:42" pos:end="9:46">entry</argument>)</argument_list></macro> <block pos:start="9:49" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:9">

        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:32">(<expr pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:14">se</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:31">save_live_state</name></name></expr>)</condition> <block pos:start="11:34" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:56">

            <expr_stmt pos:start="13:13" pos:end="13:56"><expr pos:start="13:13" pos:end="13:55"><call pos:start="13:13" pos:end="13:55"><name pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:14">se</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:31">save_live_state</name></name><argument_list pos:start="13:32" pos:end="13:55">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">mon</name></expr></argument>, <argument pos:start="13:38" pos:end="13:38"><expr pos:start="13:38" pos:end="13:38"><name pos:start="13:38" pos:end="13:38">f</name></expr></argument>, <argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><operator pos:start="13:41" pos:end="13:41">-</operator><literal type="number" pos:start="13:42" pos:end="13:42">1</literal></expr></argument>, <argument pos:start="13:45" pos:end="13:54"><expr pos:start="13:45" pos:end="13:54"><name pos:start="13:45" pos:end="13:54"><name pos:start="13:45" pos:end="13:46">se</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:54">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
