<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2749.c" pos:tabs="8"><macro pos:start="1:1" pos:end="3:46"><name pos:start="1:1" pos:end="1:11">timer_write</name><argument_list pos:start="1:12" pos:end="3:46">(<argument pos:start="1:13" pos:end="1:24">void *opaque</argument>, <argument pos:start="1:27" pos:end="1:49">target_phys_addr_t addr</argument>,

            <argument pos:start="3:13" pos:end="3:26">uint64_t val64</argument>, <argument pos:start="3:29" pos:end="3:45">unsigned int size</argument>)</argument_list></macro>

<block pos:start="5:1" pos:end="85:1">{<block_content pos:start="7:5" pos:end="83:5">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">etrax_timer</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">t</name> <init pos:start="7:27" pos:end="7:34">= <expr pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:34">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">value</name> <init pos:start="9:20" pos:end="9:26">= <expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">val64</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="83:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition>

    <block pos:start="15:5" pos:end="83:5">{<block_content pos:start="17:9" pos:end="81:18">

        <case pos:start="17:9" pos:end="17:25">case <expr pos:start="17:14" pos:end="17:24"><name pos:start="17:14" pos:end="17:24">RW_TMR0_DIV</name></expr>:</case>

            <expr_stmt pos:start="19:13" pos:end="19:35"><expr pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:13">t</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:26">rw_tmr0_div</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:34">value</name></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        <case pos:start="23:9" pos:end="23:26">case <expr pos:start="23:14" pos:end="23:25"><name pos:start="23:14" pos:end="23:25">RW_TMR0_CTRL</name></expr>:</case>

            <expr_stmt pos:start="25:13" pos:end="25:51"><expr pos:start="25:13" pos:end="25:50"><call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:13">D</name><argument_list pos:start="25:14" pos:end="25:50">(<argument pos:start="25:15" pos:end="25:49"><expr pos:start="25:15" pos:end="25:49"><call pos:start="25:15" pos:end="25:49"><name pos:start="25:15" pos:end="25:20">printf</name> <argument_list pos:start="25:22" pos:end="25:49">(<argument pos:start="25:23" pos:end="25:41"><expr pos:start="25:23" pos:end="25:41"><literal type="string" pos:start="25:23" pos:end="25:41">"RW_TMR0_CTRL=%x\n"</literal></expr></argument>, <argument pos:start="25:44" pos:end="25:48"><expr pos:start="25:44" pos:end="25:48"><name pos:start="25:44" pos:end="25:48">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:36"><expr pos:start="27:13" pos:end="27:35"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:13">t</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:27">rw_tmr0_ctrl</name></name> <operator pos:start="27:29" pos:end="27:29">=</operator> <name pos:start="27:31" pos:end="27:35">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><call pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:23">update_ctrl</name><argument_list pos:start="29:24" pos:end="29:29">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">t</name></expr></argument>, <argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:25">case <expr pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:24">RW_TMR1_DIV</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:35"><expr pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:13">t</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:26">rw_tmr1_div</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:34">value</name></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:26">case <expr pos:start="39:14" pos:end="39:25"><name pos:start="39:14" pos:end="39:25">RW_TMR1_CTRL</name></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:51"><expr pos:start="41:13" pos:end="41:50"><call pos:start="41:13" pos:end="41:50"><name pos:start="41:13" pos:end="41:13">D</name><argument_list pos:start="41:14" pos:end="41:50">(<argument pos:start="41:15" pos:end="41:49"><expr pos:start="41:15" pos:end="41:49"><call pos:start="41:15" pos:end="41:49"><name pos:start="41:15" pos:end="41:20">printf</name> <argument_list pos:start="41:22" pos:end="41:49">(<argument pos:start="41:23" pos:end="41:41"><expr pos:start="41:23" pos:end="41:41"><literal type="string" pos:start="41:23" pos:end="41:41">"RW_TMR1_CTRL=%x\n"</literal></expr></argument>, <argument pos:start="41:44" pos:end="41:48"><expr pos:start="41:44" pos:end="41:48"><name pos:start="41:44" pos:end="41:48">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:36"><expr pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:13">t</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:27">rw_tmr1_ctrl</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:35">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><call pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:23">update_ctrl</name><argument_list pos:start="45:24" pos:end="45:29">(<argument pos:start="45:25" pos:end="45:25"><expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">t</name></expr></argument>, <argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:26">case <expr pos:start="49:14" pos:end="49:25"><name pos:start="49:14" pos:end="49:25">RW_INTR_MASK</name></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:51"><expr pos:start="51:13" pos:end="51:50"><call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:13">D</name><argument_list pos:start="51:14" pos:end="51:50">(<argument pos:start="51:15" pos:end="51:49"><expr pos:start="51:15" pos:end="51:49"><call pos:start="51:15" pos:end="51:49"><name pos:start="51:15" pos:end="51:20">printf</name> <argument_list pos:start="51:22" pos:end="51:49">(<argument pos:start="51:23" pos:end="51:41"><expr pos:start="51:23" pos:end="51:41"><literal type="string" pos:start="51:23" pos:end="51:41">"RW_INTR_MASK=%x\n"</literal></expr></argument>, <argument pos:start="51:44" pos:end="51:48"><expr pos:start="51:44" pos:end="51:48"><name pos:start="51:44" pos:end="51:48">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:36"><expr pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:13">t</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:27">rw_intr_mask</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <name pos:start="53:31" pos:end="53:35">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><call pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:28">timer_update_irq</name><argument_list pos:start="55:29" pos:end="55:31">(<argument pos:start="55:30" pos:end="55:30"><expr pos:start="55:30" pos:end="55:30"><name pos:start="55:30" pos:end="55:30">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:24">case <expr pos:start="59:14" pos:end="59:23"><name pos:start="59:14" pos:end="59:23">RW_WD_CTRL</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><call pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:33">timer_watchdog_update</name><argument_list pos:start="61:34" pos:end="61:43">(<argument pos:start="61:35" pos:end="61:35"><expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">t</name></expr></argument>, <argument pos:start="61:38" pos:end="61:42"><expr pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:42">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:25">case <expr pos:start="65:14" pos:end="65:24"><name pos:start="65:14" pos:end="65:24">RW_ACK_INTR</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:13">t</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:26">rw_ack_intr</name></name> <operator pos:start="67:28" pos:end="67:28">=</operator> <name pos:start="67:30" pos:end="67:34">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><call pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:28">timer_update_irq</name><argument_list pos:start="69:29" pos:end="69:31">(<argument pos:start="69:30" pos:end="69:30"><expr pos:start="69:30" pos:end="69:30"><name pos:start="69:30" pos:end="69:30">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:31"><expr pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:13">t</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:26">rw_ack_intr</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <literal type="number" pos:start="71:30" pos:end="71:30">0</literal></expr>;</expr_stmt>

            <break pos:start="73:13" pos:end="73:18">break;</break>

        <default pos:start="75:9" pos:end="75:16">default:</default>

            <expr_stmt pos:start="77:13" pos:end="79:39"><expr pos:start="77:13" pos:end="79:38"><call pos:start="77:13" pos:end="79:38"><name pos:start="77:13" pos:end="77:18">printf</name> <argument_list pos:start="77:20" pos:end="79:38">(<argument pos:start="77:21" pos:end="77:48"><expr pos:start="77:21" pos:end="77:48"><literal type="string" pos:start="77:21" pos:end="77:25">"%s "</literal> <name pos:start="77:27" pos:end="77:40">TARGET_FMT_plx</name> <literal type="string" pos:start="77:42" pos:end="77:48">" %x\n"</literal></expr></argument>,

                <argument pos:start="79:17" pos:end="79:24"><expr pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:24">__func__</name></expr></argument>, <argument pos:start="79:27" pos:end="79:30"><expr pos:start="79:27" pos:end="79:30"><name pos:start="79:27" pos:end="79:30">addr</name></expr></argument>, <argument pos:start="79:33" pos:end="79:37"><expr pos:start="79:33" pos:end="79:37"><name pos:start="79:33" pos:end="79:37">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block>
</unit>
