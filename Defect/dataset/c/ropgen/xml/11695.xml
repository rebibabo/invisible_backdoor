<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11695.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">setup_rt_frame</name><parameter_list pos:start="1:27" pos:end="5:66">(<parameter pos:start="1:28" pos:end="1:34"><decl pos:start="1:28" pos:end="1:34"><type pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:34">sig</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:63"><decl pos:start="1:37" pos:end="1:63"><type pos:start="1:37" pos:end="1:63"><name pos:start="1:37" pos:end="1:59"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:59">target_sigaction</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">ka</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">target_siginfo_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">info</name></decl></parameter>,

			   <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:42">target_sigset_t</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">set</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:65"><decl pos:start="5:50" pos:end="5:65"><type pos:start="5:50" pos:end="5:65"><name pos:start="5:50" pos:end="5:60">CPUX86State</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:65">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="147:1">{<block_content pos:start="9:9" pos:end="145:50">

        <decl_stmt pos:start="9:9" pos:end="9:35"><decl pos:start="9:9" pos:end="9:28"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:17">abi_ulong</name></type> <name pos:start="9:19" pos:end="9:28">frame_addr</name></decl>, <decl pos:start="9:31" pos:end="9:34"><type ref="prev" pos:start="9:9" pos:end="9:17"/><name pos:start="9:31" pos:end="9:34">addr</name></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:34"><decl pos:start="11:9" pos:end="11:33"><type pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:14">struct</name> <name pos:start="11:16" pos:end="11:26">rt_sigframe</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:33">frame</name></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:23"><decl pos:start="13:9" pos:end="13:13"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">i</name></decl>, <decl pos:start="13:16" pos:end="13:22"><type ref="prev" pos:start="13:9" pos:end="13:11"/><name pos:start="13:16" pos:end="13:18">err</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>



	<expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:18">frame_addr</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:58"><name pos:start="17:22" pos:end="17:33">get_sigframe</name><argument_list pos:start="17:34" pos:end="17:58">(<argument pos:start="17:35" pos:end="17:36"><expr pos:start="17:35" pos:end="17:36"><name pos:start="17:35" pos:end="17:36">ka</name></expr></argument>, <argument pos:start="17:39" pos:end="17:41"><expr pos:start="17:39" pos:end="17:41"><name pos:start="17:39" pos:end="17:41">env</name></expr></argument>, <argument pos:start="17:44" pos:end="17:57"><expr pos:start="17:44" pos:end="17:57"><sizeof pos:start="17:44" pos:end="17:57">sizeof<argument_list pos:start="17:50" pos:end="17:57">(<argument pos:start="17:51" pos:end="17:56"><expr pos:start="17:51" pos:end="17:56"><operator pos:start="17:51" pos:end="17:51">*</operator><name pos:start="17:52" pos:end="17:56">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<if_stmt pos:start="21:9" pos:end="23:34"><if pos:start="21:9" pos:end="23:34">if <condition pos:start="21:12" pos:end="21:66">(<expr pos:start="21:13" pos:end="21:65"><operator pos:start="21:13" pos:end="21:13">!</operator><call pos:start="21:14" pos:end="21:65"><name pos:start="21:14" pos:end="21:29">lock_user_struct</name><argument_list pos:start="21:30" pos:end="21:65">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:42">VERIFY_WRITE</name></expr></argument>, <argument pos:start="21:45" pos:end="21:49"><expr pos:start="21:45" pos:end="21:49"><name pos:start="21:45" pos:end="21:49">frame</name></expr></argument>, <argument pos:start="21:52" pos:end="21:61"><expr pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:61">frame_addr</name></expr></argument>, <argument pos:start="21:64" pos:end="21:64"><expr pos:start="21:64" pos:end="21:64"><literal type="number" pos:start="21:64" pos:end="21:64">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:34"><block_content pos:start="23:17" pos:end="23:34">

		<goto pos:start="23:17" pos:end="23:34">goto <name pos:start="23:22" pos:end="23:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:58"><expr pos:start="27:5" pos:end="27:57"><call pos:start="27:5" pos:end="27:57"><name pos:start="27:5" pos:end="27:14">__put_user</name><argument_list pos:start="27:15" pos:end="27:57">(<argument pos:start="27:16" pos:end="27:43"><expr pos:start="27:16" pos:end="27:43"><call pos:start="27:16" pos:end="27:43"><name pos:start="27:16" pos:end="27:38">current_exec_domain_sig</name><argument_list pos:start="27:39" pos:end="27:43">(<argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">sig</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:46" pos:end="27:56"><expr pos:start="27:46" pos:end="27:56"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:56"><name pos:start="27:47" pos:end="27:51">frame</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:56">sig</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:63"><expr pos:start="29:9" pos:end="29:62"><name pos:start="29:9" pos:end="29:12">addr</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:25">frame_addr</name> <operator pos:start="29:27" pos:end="29:27">+</operator> <call pos:start="29:29" pos:end="29:62"><name pos:start="29:29" pos:end="29:36">offsetof</name><argument_list pos:start="29:37" pos:end="29:62">(<argument pos:start="29:38" pos:end="29:55"><expr pos:start="29:38" pos:end="29:55">struct <name pos:start="29:45" pos:end="29:55">rt_sigframe</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><name pos:start="29:58" pos:end="29:61">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:14">__put_user</name><argument_list pos:start="31:15" pos:end="31:35">(<argument pos:start="31:16" pos:end="31:19"><expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">addr</name></expr></argument>, <argument pos:start="31:22" pos:end="31:34"><expr pos:start="31:22" pos:end="31:34"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:27">frame</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:34">pinfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:12">addr</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:25">frame_addr</name> <operator pos:start="33:27" pos:end="33:27">+</operator> <call pos:start="33:29" pos:end="33:60"><name pos:start="33:29" pos:end="33:36">offsetof</name><argument_list pos:start="33:37" pos:end="33:60">(<argument pos:start="33:38" pos:end="33:55"><expr pos:start="33:38" pos:end="33:55">struct <name pos:start="33:45" pos:end="33:55">rt_sigframe</name></expr></argument>, <argument pos:start="33:58" pos:end="33:59"><expr pos:start="33:58" pos:end="33:59"><name pos:start="33:58" pos:end="33:59">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><call pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:14">__put_user</name><argument_list pos:start="35:15" pos:end="35:33">(<argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">addr</name></expr></argument>, <argument pos:start="35:22" pos:end="35:32"><expr pos:start="35:22" pos:end="35:32"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:32"><name pos:start="35:23" pos:end="35:27">frame</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:32">puc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><call pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:28">copy_siginfo_to_user</name><argument_list pos:start="37:29" pos:end="37:48">(<argument pos:start="37:30" pos:end="37:41"><expr pos:start="37:30" pos:end="37:41"><operator pos:start="37:30" pos:end="37:30">&amp;</operator><name pos:start="37:31" pos:end="37:41"><name pos:start="37:31" pos:end="37:35">frame</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">info</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><name pos:start="37:44" pos:end="37:47">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="41:9" pos:end="41:35">/* Create the ucontext.  */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><call pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:14">__put_user</name><argument_list pos:start="43:15" pos:end="43:39">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr></argument>, <argument pos:start="43:19" pos:end="43:38"><expr pos:start="43:19" pos:end="43:38"><operator pos:start="43:19" pos:end="43:19">&amp;</operator><name pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:24">frame</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">uc</name><operator pos:start="43:29" pos:end="43:29">.</operator><name pos:start="43:30" pos:end="43:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><call pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:14">__put_user</name><argument_list pos:start="45:15" pos:end="45:38">(<argument pos:start="45:16" pos:end="45:16"><expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr></argument>, <argument pos:start="45:19" pos:end="45:37"><expr pos:start="45:19" pos:end="45:37"><operator pos:start="45:19" pos:end="45:19">&amp;</operator><name pos:start="45:20" pos:end="45:37"><name pos:start="45:20" pos:end="45:24">frame</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:28">uc</name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:37">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:74"><expr pos:start="47:5" pos:end="47:73"><call pos:start="47:5" pos:end="47:73"><name pos:start="47:5" pos:end="47:14">__put_user</name><argument_list pos:start="47:15" pos:end="47:73">(<argument pos:start="47:16" pos:end="47:44"><expr pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:38">target_sigaltstack_used</name><operator pos:start="47:39" pos:end="47:39">.</operator><name pos:start="47:40" pos:end="47:44">ss_sp</name></name></expr></argument>, <argument pos:start="47:47" pos:end="47:72"><expr pos:start="47:47" pos:end="47:72"><operator pos:start="47:47" pos:end="47:47">&amp;</operator><name pos:start="47:48" pos:end="47:72"><name pos:start="47:48" pos:end="47:52">frame</name><operator pos:start="47:53" pos:end="47:54">-&gt;</operator><name pos:start="47:55" pos:end="47:56">uc</name><operator pos:start="47:57" pos:end="47:57">.</operator><name pos:start="47:58" pos:end="47:66">tuc_stack</name><operator pos:start="47:67" pos:end="47:67">.</operator><name pos:start="47:68" pos:end="47:72">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="51:46"><expr pos:start="49:5" pos:end="51:45"><call pos:start="49:5" pos:end="51:45"><name pos:start="49:5" pos:end="49:14">__put_user</name><argument_list pos:start="49:15" pos:end="51:45">(<argument pos:start="49:16" pos:end="49:54"><expr pos:start="49:16" pos:end="49:54"><call pos:start="49:16" pos:end="49:54"><name pos:start="49:16" pos:end="49:27">sas_ss_flags</name><argument_list pos:start="49:28" pos:end="49:54">(<argument pos:start="49:29" pos:end="49:53"><expr pos:start="49:29" pos:end="49:53"><call pos:start="49:29" pos:end="49:53"><name pos:start="49:29" pos:end="49:48">get_sp_from_cpustate</name><argument_list pos:start="49:49" pos:end="49:53">(<argument pos:start="49:50" pos:end="49:52"><expr pos:start="49:50" pos:end="49:52"><name pos:start="49:50" pos:end="49:52">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="51:16" pos:end="51:44"><expr pos:start="51:16" pos:end="51:44"><operator pos:start="51:16" pos:end="51:16">&amp;</operator><name pos:start="51:17" pos:end="51:44"><name pos:start="51:17" pos:end="51:21">frame</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:25">uc</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:35">tuc_stack</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:44">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:45"><expr pos:start="53:5" pos:end="55:44"><call pos:start="53:5" pos:end="55:44"><name pos:start="53:5" pos:end="53:14">__put_user</name><argument_list pos:start="53:15" pos:end="55:44">(<argument pos:start="53:16" pos:end="53:46"><expr pos:start="53:16" pos:end="53:46"><name pos:start="53:16" pos:end="53:46"><name pos:start="53:16" pos:end="53:38">target_sigaltstack_used</name><operator pos:start="53:39" pos:end="53:39">.</operator><name pos:start="53:40" pos:end="53:46">ss_size</name></name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:43"><expr pos:start="55:16" pos:end="55:43"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:21">frame</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:25">uc</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:35">tuc_stack</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:43">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:77"><expr pos:start="57:5" pos:end="59:76"><call pos:start="57:5" pos:end="59:76"><name pos:start="57:5" pos:end="57:20">setup_sigcontext</name><argument_list pos:start="57:21" pos:end="59:76">(<argument pos:start="57:22" pos:end="57:44"><expr pos:start="57:22" pos:end="57:44"><operator pos:start="57:22" pos:end="57:22">&amp;</operator><name pos:start="57:23" pos:end="57:44"><name pos:start="57:23" pos:end="57:27">frame</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:31">uc</name><operator pos:start="57:32" pos:end="57:32">.</operator><name pos:start="57:33" pos:end="57:44">tuc_mcontext</name></name></expr></argument>, <argument pos:start="57:47" pos:end="57:61"><expr pos:start="57:47" pos:end="57:61"><operator pos:start="57:47" pos:end="57:47">&amp;</operator><name pos:start="57:48" pos:end="57:61"><name pos:start="57:48" pos:end="57:52">frame</name><operator pos:start="57:53" pos:end="57:54">-&gt;</operator><name pos:start="57:55" pos:end="57:61">fpstate</name></name></expr></argument>, <argument pos:start="57:64" pos:end="57:66"><expr pos:start="57:64" pos:end="57:66"><name pos:start="57:64" pos:end="57:66">env</name></expr></argument>,

            <argument pos:start="59:13" pos:end="59:23"><expr pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:15">set</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:20">sig</name><index pos:start="59:21" pos:end="59:23">[<expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:26" pos:end="59:75"><expr pos:start="59:26" pos:end="59:75"><name pos:start="59:26" pos:end="59:35">frame_addr</name> <operator pos:start="59:37" pos:end="59:37">+</operator> <call pos:start="59:39" pos:end="59:75"><name pos:start="59:39" pos:end="59:46">offsetof</name><argument_list pos:start="59:47" pos:end="59:75">(<argument pos:start="59:48" pos:end="59:65"><expr pos:start="59:48" pos:end="59:65">struct <name pos:start="59:55" pos:end="59:65">rt_sigframe</name></expr></argument>, <argument pos:start="59:68" pos:end="59:74"><expr pos:start="59:68" pos:end="59:74"><name pos:start="59:68" pos:end="59:74">fpstate</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="63:9" pos:end="69:9">for<control pos:start="63:12" pos:end="63:46">(<init pos:start="63:13" pos:end="63:18"><expr pos:start="63:13" pos:end="63:17"><name pos:start="63:13" pos:end="63:13">i</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <literal type="number" pos:start="63:17" pos:end="63:17">0</literal></expr>;</init> <condition pos:start="63:20" pos:end="63:41"><expr pos:start="63:20" pos:end="63:40"><name pos:start="63:20" pos:end="63:20">i</name> <operator pos:start="63:22" pos:end="63:22">&lt;</operator> <name pos:start="63:24" pos:end="63:40">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="63:43" pos:end="63:45"><expr pos:start="63:43" pos:end="63:45"><name pos:start="63:43" pos:end="63:43">i</name><operator pos:start="63:44" pos:end="63:45">++</operator></expr></incr>)</control> <block pos:start="63:48" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:34">

            <if_stmt pos:start="65:13" pos:end="67:34"><if pos:start="65:13" pos:end="67:34">if <condition pos:start="65:16" pos:end="65:71">(<expr pos:start="65:17" pos:end="65:70"><call pos:start="65:17" pos:end="65:70"><name pos:start="65:17" pos:end="65:26">__put_user</name><argument_list pos:start="65:27" pos:end="65:70">(<argument pos:start="65:28" pos:end="65:38"><expr pos:start="65:28" pos:end="65:38"><name pos:start="65:28" pos:end="65:38"><name pos:start="65:28" pos:end="65:30">set</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:35">sig</name><index pos:start="65:36" pos:end="65:38">[<expr pos:start="65:37" pos:end="65:37"><name pos:start="65:37" pos:end="65:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="65:41" pos:end="65:69"><expr pos:start="65:41" pos:end="65:69"><operator pos:start="65:41" pos:end="65:41">&amp;</operator><name pos:start="65:42" pos:end="65:69"><name pos:start="65:42" pos:end="65:46">frame</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:50">uc</name><operator pos:start="65:51" pos:end="65:51">.</operator><name pos:start="65:52" pos:end="65:62">tuc_sigmask</name><operator pos:start="65:63" pos:end="65:63">.</operator><name pos:start="65:64" pos:end="65:66">sig</name><index pos:start="65:67" pos:end="65:69">[<expr pos:start="65:68" pos:end="65:68"><name pos:start="65:68" pos:end="65:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:34"><block_content pos:start="67:17" pos:end="67:34">

                <goto pos:start="67:17" pos:end="67:34">goto <name pos:start="67:22" pos:end="67:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>



	<comment type="block" pos:start="73:9" pos:end="75:36">/* Set up to return from userspace.  If provided, use a stub

	   already in userspace.  */</comment>

	<if_stmt pos:start="77:9" pos:end="99:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:46">(<expr pos:start="77:13" pos:end="77:45"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:14">ka</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:24">sa_flags</name></name> <operator pos:start="77:26" pos:end="77:26">&amp;</operator> <name pos:start="77:28" pos:end="77:45">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="77:48" pos:end="81:9">{<block_content pos:start="79:9" pos:end="79:54">

        <expr_stmt pos:start="79:9" pos:end="79:54"><expr pos:start="79:9" pos:end="79:53"><call pos:start="79:9" pos:end="79:53"><name pos:start="79:9" pos:end="79:18">__put_user</name><argument_list pos:start="79:19" pos:end="79:53">(<argument pos:start="79:20" pos:end="79:34"><expr pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:21">ka</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:34">sa_restorer</name></name></expr></argument>, <argument pos:start="79:37" pos:end="79:52"><expr pos:start="79:37" pos:end="79:52"><operator pos:start="79:37" pos:end="79:37">&amp;</operator><name pos:start="79:38" pos:end="79:52"><name pos:start="79:38" pos:end="79:42">frame</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:52">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="81:11" pos:end="99:9">else <block pos:start="81:16" pos:end="99:9">{<block_content pos:start="83:17" pos:end="97:58">

                <decl_stmt pos:start="83:17" pos:end="83:31"><decl pos:start="83:17" pos:end="83:30"><type pos:start="83:17" pos:end="83:24"><name pos:start="83:17" pos:end="83:24">uint16_t</name></type> <name pos:start="83:26" pos:end="83:30">val16</name></decl>;</decl_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:74"><expr pos:start="85:17" pos:end="85:73"><name pos:start="85:17" pos:end="85:20">addr</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:33">frame_addr</name> <operator pos:start="85:35" pos:end="85:35">+</operator> <call pos:start="85:37" pos:end="85:73"><name pos:start="85:37" pos:end="85:44">offsetof</name><argument_list pos:start="85:45" pos:end="85:73">(<argument pos:start="85:46" pos:end="85:63"><expr pos:start="85:46" pos:end="85:63">struct <name pos:start="85:53" pos:end="85:63">rt_sigframe</name></expr></argument>, <argument pos:start="85:66" pos:end="85:72"><expr pos:start="85:66" pos:end="85:72"><name pos:start="85:66" pos:end="85:72">retcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:43"><expr pos:start="87:9" pos:end="87:42"><call pos:start="87:9" pos:end="87:42"><name pos:start="87:9" pos:end="87:18">__put_user</name><argument_list pos:start="87:19" pos:end="87:42">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">addr</name></expr></argument>, <argument pos:start="87:26" pos:end="87:41"><expr pos:start="87:26" pos:end="87:41"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:41"><name pos:start="87:27" pos:end="87:31">frame</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:41">pretcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="block" pos:start="89:17" pos:end="89:53">/* This is movl $,%eax ; int $0x80 */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:53"><expr pos:start="91:9" pos:end="91:52"><call pos:start="91:9" pos:end="91:52"><name pos:start="91:9" pos:end="91:18">__put_user</name><argument_list pos:start="91:19" pos:end="91:52">(<argument pos:start="91:20" pos:end="91:23"><expr pos:start="91:20" pos:end="91:23"><literal type="number" pos:start="91:20" pos:end="91:23">0xb8</literal></expr></argument>, <argument pos:start="91:26" pos:end="91:51"><expr pos:start="91:26" pos:end="91:51"><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:30">char</name> <operator pos:start="91:32" pos:end="91:32">*</operator><operator pos:start="91:33" pos:end="91:33">)</operator><operator pos:start="91:34" pos:end="91:34">(</operator><name pos:start="91:35" pos:end="91:48"><name pos:start="91:35" pos:end="91:39">frame</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:48">retcode</name></name><operator pos:start="91:49" pos:end="91:49">+</operator><literal type="number" pos:start="91:50" pos:end="91:50">0</literal><operator pos:start="91:51" pos:end="91:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:70"><expr pos:start="93:9" pos:end="93:69"><call pos:start="93:9" pos:end="93:69"><name pos:start="93:9" pos:end="93:18">__put_user</name><argument_list pos:start="93:19" pos:end="93:69">(<argument pos:start="93:20" pos:end="93:41"><expr pos:start="93:20" pos:end="93:41"><name pos:start="93:20" pos:end="93:41">TARGET_NR_rt_sigreturn</name></expr></argument>, <argument pos:start="93:44" pos:end="93:68"><expr pos:start="93:44" pos:end="93:68"><operator pos:start="93:44" pos:end="93:44">(</operator><name pos:start="93:45" pos:end="93:47">int</name> <operator pos:start="93:49" pos:end="93:49">*</operator><operator pos:start="93:50" pos:end="93:50">)</operator><operator pos:start="93:51" pos:end="93:51">(</operator><name pos:start="93:52" pos:end="93:65"><name pos:start="93:52" pos:end="93:56">frame</name><operator pos:start="93:57" pos:end="93:58">-&gt;</operator><name pos:start="93:59" pos:end="93:65">retcode</name></name><operator pos:start="93:66" pos:end="93:66">+</operator><literal type="number" pos:start="93:67" pos:end="93:67">1</literal><operator pos:start="93:68" pos:end="93:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:31"><expr pos:start="95:17" pos:end="95:30"><name pos:start="95:17" pos:end="95:21">val16</name> <operator pos:start="95:23" pos:end="95:23">=</operator> <literal type="number" pos:start="95:25" pos:end="95:30">0x80cd</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:58"><expr pos:start="97:9" pos:end="97:57"><call pos:start="97:9" pos:end="97:57"><name pos:start="97:9" pos:end="97:18">__put_user</name><argument_list pos:start="97:19" pos:end="97:57">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24">val16</name></expr></argument>, <argument pos:start="97:27" pos:end="97:56"><expr pos:start="97:27" pos:end="97:56"><operator pos:start="97:27" pos:end="97:27">(</operator><name pos:start="97:28" pos:end="97:35">uint16_t</name> <operator pos:start="97:37" pos:end="97:37">*</operator><operator pos:start="97:38" pos:end="97:38">)</operator><operator pos:start="97:39" pos:end="97:39">(</operator><name pos:start="97:40" pos:end="97:53"><name pos:start="97:40" pos:end="97:44">frame</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:53">retcode</name></name><operator pos:start="97:54" pos:end="97:54">+</operator><literal type="number" pos:start="97:55" pos:end="97:55">5</literal><operator pos:start="97:56" pos:end="97:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>



	<if_stmt pos:start="103:9" pos:end="105:34"><if pos:start="103:9" pos:end="105:34">if <condition pos:start="103:12" pos:end="103:16">(<expr pos:start="103:13" pos:end="103:15"><name pos:start="103:13" pos:end="103:15">err</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:34"><block_content pos:start="105:17" pos:end="105:34">

		<goto pos:start="105:17" pos:end="105:34">goto <name pos:start="105:22" pos:end="105:33">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>



	<comment type="block" pos:start="109:9" pos:end="109:49">/* Set up registers for signal handler */</comment>

	<expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:11">env</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:17">regs</name><index pos:start="111:18" pos:end="111:24">[<expr pos:start="111:19" pos:end="111:23"><name pos:start="111:19" pos:end="111:23">R_ESP</name></expr>]</index></name> <operator pos:start="111:26" pos:end="111:26">=</operator> <name pos:start="111:28" pos:end="111:37">frame_addr</name></expr>;</expr_stmt>

	<expr_stmt pos:start="113:9" pos:end="113:35"><expr pos:start="113:9" pos:end="113:34"><name pos:start="113:9" pos:end="113:16"><name pos:start="113:9" pos:end="113:11">env</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:16">eip</name></name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:34"><name pos:start="113:20" pos:end="113:21">ka</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:34">_sa_handler</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:47"><expr pos:start="117:9" pos:end="117:46"><call pos:start="117:9" pos:end="117:46"><name pos:start="117:9" pos:end="117:24">cpu_x86_load_seg</name><argument_list pos:start="117:25" pos:end="117:46">(<argument pos:start="117:26" pos:end="117:28"><expr pos:start="117:26" pos:end="117:28"><name pos:start="117:26" pos:end="117:28">env</name></expr></argument>, <argument pos:start="117:31" pos:end="117:34"><expr pos:start="117:31" pos:end="117:34"><name pos:start="117:31" pos:end="117:34">R_DS</name></expr></argument>, <argument pos:start="117:37" pos:end="117:45"><expr pos:start="117:37" pos:end="117:45"><name pos:start="117:37" pos:end="117:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:47"><expr pos:start="119:9" pos:end="119:46"><call pos:start="119:9" pos:end="119:46"><name pos:start="119:9" pos:end="119:24">cpu_x86_load_seg</name><argument_list pos:start="119:25" pos:end="119:46">(<argument pos:start="119:26" pos:end="119:28"><expr pos:start="119:26" pos:end="119:28"><name pos:start="119:26" pos:end="119:28">env</name></expr></argument>, <argument pos:start="119:31" pos:end="119:34"><expr pos:start="119:31" pos:end="119:34"><name pos:start="119:31" pos:end="119:34">R_ES</name></expr></argument>, <argument pos:start="119:37" pos:end="119:45"><expr pos:start="119:37" pos:end="119:45"><name pos:start="119:37" pos:end="119:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:24">cpu_x86_load_seg</name><argument_list pos:start="121:25" pos:end="121:46">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">env</name></expr></argument>, <argument pos:start="121:31" pos:end="121:34"><expr pos:start="121:31" pos:end="121:34"><name pos:start="121:31" pos:end="121:34">R_SS</name></expr></argument>, <argument pos:start="121:37" pos:end="121:45"><expr pos:start="121:37" pos:end="121:45"><name pos:start="121:37" pos:end="121:45">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:47"><expr pos:start="123:9" pos:end="123:46"><call pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:24">cpu_x86_load_seg</name><argument_list pos:start="123:25" pos:end="123:46">(<argument pos:start="123:26" pos:end="123:28"><expr pos:start="123:26" pos:end="123:28"><name pos:start="123:26" pos:end="123:28">env</name></expr></argument>, <argument pos:start="123:31" pos:end="123:34"><expr pos:start="123:31" pos:end="123:34"><name pos:start="123:31" pos:end="123:34">R_CS</name></expr></argument>, <argument pos:start="123:37" pos:end="123:45"><expr pos:start="123:37" pos:end="123:45"><name pos:start="123:37" pos:end="123:45">__USER_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="125:9" pos:end="125:32"><expr pos:start="125:9" pos:end="125:31"><name pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:11">env</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:19">eflags</name></name> <operator pos:start="125:21" pos:end="125:22">&amp;=</operator> <operator pos:start="125:24" pos:end="125:24">~</operator><name pos:start="125:25" pos:end="125:31">TF_MASK</name></expr>;</expr_stmt>



	<expr_stmt pos:start="129:9" pos:end="129:49"><expr pos:start="129:9" pos:end="129:48"><call pos:start="129:9" pos:end="129:48"><name pos:start="129:9" pos:end="129:26">unlock_user_struct</name><argument_list pos:start="129:27" pos:end="129:48">(<argument pos:start="129:28" pos:end="129:32"><expr pos:start="129:28" pos:end="129:32"><name pos:start="129:28" pos:end="129:32">frame</name></expr></argument>, <argument pos:start="129:35" pos:end="129:44"><expr pos:start="129:35" pos:end="129:44"><name pos:start="129:35" pos:end="129:44">frame_addr</name></expr></argument>, <argument pos:start="129:47" pos:end="129:47"><expr pos:start="129:47" pos:end="129:47"><literal type="number" pos:start="129:47" pos:end="129:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<return pos:start="133:9" pos:end="133:15">return;</return>



<label pos:start="137:1" pos:end="137:13"><name pos:start="137:1" pos:end="137:12">give_sigsegv</name>:</label>

	<expr_stmt pos:start="139:9" pos:end="139:49"><expr pos:start="139:9" pos:end="139:48"><call pos:start="139:9" pos:end="139:48"><name pos:start="139:9" pos:end="139:26">unlock_user_struct</name><argument_list pos:start="139:27" pos:end="139:48">(<argument pos:start="139:28" pos:end="139:32"><expr pos:start="139:28" pos:end="139:32"><name pos:start="139:28" pos:end="139:32">frame</name></expr></argument>, <argument pos:start="139:35" pos:end="139:44"><expr pos:start="139:35" pos:end="139:44"><name pos:start="139:35" pos:end="139:44">frame_addr</name></expr></argument>, <argument pos:start="139:47" pos:end="139:47"><expr pos:start="139:47" pos:end="139:47"><literal type="number" pos:start="139:47" pos:end="139:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="141:9" pos:end="143:49"><if pos:start="141:9" pos:end="143:49">if <condition pos:start="141:12" pos:end="141:34">(<expr pos:start="141:13" pos:end="141:33"><name pos:start="141:13" pos:end="141:15">sig</name> <operator pos:start="141:17" pos:end="141:18">==</operator> <name pos:start="141:20" pos:end="141:33">TARGET_SIGSEGV</name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:49"><block_content pos:start="143:17" pos:end="143:49">

		<expr_stmt pos:start="143:17" pos:end="143:49"><expr pos:start="143:17" pos:end="143:48"><name pos:start="143:17" pos:end="143:31"><name pos:start="143:17" pos:end="143:18">ka</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:31">_sa_handler</name></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <name pos:start="143:35" pos:end="143:48">TARGET_SIG_DFL</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<expr_stmt pos:start="145:9" pos:end="145:50"><expr pos:start="145:9" pos:end="145:49"><call pos:start="145:9" pos:end="145:49"><name pos:start="145:9" pos:end="145:17">force_sig</name><argument_list pos:start="145:18" pos:end="145:49">(<argument pos:start="145:19" pos:end="145:32"><expr pos:start="145:19" pos:end="145:32"><name pos:start="145:19" pos:end="145:32">TARGET_SIGSEGV</name></expr></argument> <comment type="block" pos:start="145:34" pos:end="145:48">/* , current */</comment>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
