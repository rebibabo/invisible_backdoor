<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15293.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">dnxhd_10bit_dct_quantize</name><parameter_list pos:start="1:36" pos:end="3:69">(<parameter pos:start="1:37" pos:end="1:55"><decl pos:start="1:37" pos:end="1:55"><type pos:start="1:37" pos:end="1:55"><name pos:start="1:37" pos:end="1:50">MpegEncContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">ctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:64">DCTELEM</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">block</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:41"><decl pos:start="3:37" pos:end="3:41"><type pos:start="3:37" pos:end="3:41"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:41">n</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:53"><decl pos:start="3:44" pos:end="3:53"><type pos:start="3:44" pos:end="3:53"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:53">qscale</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:68"><decl pos:start="3:56" pos:end="3:68"><type pos:start="3:56" pos:end="3:68"><name pos:start="3:56" pos:end="3:58">int</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:68">overflow</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:25">

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">scantable</name><init pos:start="7:29" pos:end="7:60">= <expr pos:start="7:31" pos:end="7:60"><name pos:start="7:31" pos:end="7:60"><name pos:start="7:31" pos:end="7:33">ctx</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:50">intra_scantable</name><operator pos:start="7:51" pos:end="7:51">.</operator><name pos:start="7:52" pos:end="7:60">scantable</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:19">qmat</name> <init pos:start="9:21" pos:end="9:49">= <expr pos:start="9:23" pos:end="9:49"><name pos:start="9:23" pos:end="9:49"><name pos:start="9:23" pos:end="9:25">ctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:41">q_intra_matrix</name><index pos:start="9:42" pos:end="9:49">[<expr pos:start="9:43" pos:end="9:48"><name pos:start="9:43" pos:end="9:48">qscale</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:21">last_non_zero</name> <init pos:start="11:23" pos:end="11:25">= <expr pos:start="11:25" pos:end="11:25"><literal type="number" pos:start="11:25" pos:end="11:25">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">dsp</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:17">fdct</name></name><argument_list pos:start="15:18" pos:end="15:24">(<argument pos:start="15:19" pos:end="15:23"><expr pos:start="15:19" pos:end="15:23"><name pos:start="15:19" pos:end="15:23">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:75">// Divide by 4 with rounding, to compensate scaling of DCT coefficients</comment>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:9">block</name><index pos:start="21:10" pos:end="21:12">[<expr pos:start="21:11" pos:end="21:11"><literal type="number" pos:start="21:11" pos:end="21:11">0</literal></expr>]</index></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:21">block</name><index pos:start="21:22" pos:end="21:24">[<expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>]</index></name> <operator pos:start="21:26" pos:end="21:26">+</operator> <literal type="number" pos:start="21:28" pos:end="21:28">2</literal><operator pos:start="21:29" pos:end="21:29">)</operator> <operator pos:start="21:31" pos:end="21:32">&gt;&gt;</operator> <literal type="number" pos:start="21:34" pos:end="21:34">2</literal></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="41:5">for <control pos:start="25:9" pos:end="25:32">(<init pos:start="25:10" pos:end="25:19"><decl pos:start="25:10" pos:end="25:18"><type pos:start="25:10" pos:end="25:12"><name pos:start="25:10" pos:end="25:12">int</name></type> <name pos:start="25:14" pos:end="25:14">i</name> <init pos:start="25:16" pos:end="25:18">= <expr pos:start="25:18" pos:end="25:18"><literal type="number" pos:start="25:18" pos:end="25:18">1</literal></expr></init></decl>;</init> <condition pos:start="25:21" pos:end="25:27"><expr pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <literal type="number" pos:start="25:25" pos:end="25:26">64</literal></expr>;</condition> <incr pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><operator pos:start="25:29" pos:end="25:30">++</operator><name pos:start="25:31" pos:end="25:31">i</name></expr></incr>)</control> <block pos:start="25:34" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:30">

        <decl_stmt pos:start="27:9" pos:end="27:29"><decl pos:start="27:9" pos:end="27:28"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">j</name> <init pos:start="27:15" pos:end="27:28">= <expr pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:25">scantable</name><index pos:start="27:26" pos:end="27:28">[<expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:34"><decl pos:start="29:9" pos:end="29:33"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:16">sign</name> <init pos:start="29:18" pos:end="29:33">= <expr pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:27"><name pos:start="29:20" pos:end="29:24">block</name><index pos:start="29:25" pos:end="29:27">[<expr pos:start="29:26" pos:end="29:26"><name pos:start="29:26" pos:end="29:26">j</name></expr>]</index></name> <operator pos:start="29:29" pos:end="29:30">&gt;&gt;</operator> <literal type="number" pos:start="29:32" pos:end="29:33">31</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:45"><decl pos:start="31:9" pos:end="31:44"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:17">level</name> <init pos:start="31:19" pos:end="31:44">= <expr pos:start="31:21" pos:end="31:44"><operator pos:start="31:21" pos:end="31:21">(</operator><name pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:26">block</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">j</name></expr>]</index></name> <operator pos:start="31:31" pos:end="31:31">^</operator> <name pos:start="31:33" pos:end="31:36">sign</name><operator pos:start="31:37" pos:end="31:37">)</operator> <operator pos:start="31:39" pos:end="31:39">-</operator> <name pos:start="31:41" pos:end="31:44">sign</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:13">level</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:21">level</name> <operator pos:start="33:23" pos:end="33:23">*</operator> <name pos:start="33:25" pos:end="33:31"><name pos:start="33:25" pos:end="33:28">qmat</name><index pos:start="33:29" pos:end="33:31">[<expr pos:start="33:30" pos:end="33:30"><name pos:start="33:30" pos:end="33:30">j</name></expr>]</index></name> <operator pos:start="33:33" pos:end="33:34">&gt;&gt;</operator> <name pos:start="33:36" pos:end="33:54">DNX10BIT_QMAT_SHIFT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:13">block</name><index pos:start="35:14" pos:end="35:16">[<expr pos:start="35:15" pos:end="35:15"><name pos:start="35:15" pos:end="35:15">j</name></expr>]</index></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <operator pos:start="35:20" pos:end="35:20">(</operator><name pos:start="35:21" pos:end="35:25">level</name> <operator pos:start="35:27" pos:end="35:27">^</operator> <name pos:start="35:29" pos:end="35:32">sign</name><operator pos:start="35:33" pos:end="35:33">)</operator> <operator pos:start="35:35" pos:end="35:35">-</operator> <name pos:start="35:37" pos:end="35:40">sign</name></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:30"><if pos:start="37:9" pos:end="39:30">if <condition pos:start="37:12" pos:end="37:18">(<expr pos:start="37:13" pos:end="37:17"><name pos:start="37:13" pos:end="37:17">level</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:30"><block_content pos:start="39:13" pos:end="39:30">

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:25">last_non_zero</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <name pos:start="39:29" pos:end="39:29">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="45:5" pos:end="45:25">return <expr pos:start="45:12" pos:end="45:24"><name pos:start="45:12" pos:end="45:24">last_non_zero</name></expr>;</return>

</block_content>}</block></function>
</unit>
