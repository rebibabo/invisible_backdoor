<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15181.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:32">handle_aiocb_ioctl</name><parameter_list pos:start="1:33" pos:end="1:59">(<parameter pos:start="1:34" pos:end="1:58"><decl pos:start="1:34" pos:end="1:58"><type pos:start="1:34" pos:end="1:58"><name pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:51">qemu_paiocb</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">aiocb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:9" pos:end="33:33">

	<decl_stmt pos:start="5:9" pos:end="5:16"><decl pos:start="5:9" pos:end="5:15"><type pos:start="5:9" pos:end="5:11"><name pos:start="5:9" pos:end="5:11">int</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>



	<expr_stmt pos:start="9:9" pos:end="9:83"><expr pos:start="9:9" pos:end="9:82"><name pos:start="9:9" pos:end="9:11">ret</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <call pos:start="9:15" pos:end="9:82"><name pos:start="9:15" pos:end="9:19">ioctl</name><argument_list pos:start="9:20" pos:end="9:82">(<argument pos:start="9:21" pos:end="9:37"><expr pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:37"><name pos:start="9:21" pos:end="9:25">aiocb</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:37">aio_fildes</name></name></expr></argument>, <argument pos:start="9:40" pos:end="9:59"><expr pos:start="9:40" pos:end="9:59"><name pos:start="9:40" pos:end="9:59"><name pos:start="9:40" pos:end="9:44">aiocb</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:59">aio_ioctl_cmd</name></name></expr></argument>, <argument pos:start="9:62" pos:end="9:81"><expr pos:start="9:62" pos:end="9:81"><name pos:start="9:62" pos:end="9:81"><name pos:start="9:62" pos:end="9:66">aiocb</name><operator pos:start="9:67" pos:end="9:68">-&gt;</operator><name pos:start="9:69" pos:end="9:81">aio_ioctl_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if_stmt pos:start="11:9" pos:end="13:30"><if pos:start="11:9" pos:end="13:30">if <condition pos:start="11:12" pos:end="11:22">(<expr pos:start="11:13" pos:end="11:21"><name pos:start="11:13" pos:end="11:15">ret</name> <operator pos:start="11:17" pos:end="11:18">==</operator> <operator pos:start="11:20" pos:end="11:20">-</operator><literal type="number" pos:start="11:21" pos:end="11:21">1</literal></expr>)</condition><block type="pseudo" pos:start="13:17" pos:end="13:30"><block_content pos:start="13:17" pos:end="13:30">

		<return pos:start="13:17" pos:end="13:30">return <expr pos:start="13:24" pos:end="13:29"><operator pos:start="13:24" pos:end="13:24">-</operator><name pos:start="13:25" pos:end="13:29">errno</name></expr>;</return></block_content></block></if></if_stmt>



	<comment type="block" pos:start="17:9" pos:end="31:11">/*

	 * This looks weird, but the aio code only consideres a request

	 * successfull if it has written the number full number of bytes.

	 *

	 * Now we overload aio_nbytes as aio_ioctl_cmd for the ioctl command,

	 * so in fact we return the ioctl command here to make posix_aio_read()

	 * happy..

	 */</comment>

	<return pos:start="33:9" pos:end="33:33">return <expr pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:20">aiocb</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:32">aio_nbytes</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
