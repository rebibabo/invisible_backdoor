<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9305.c" pos:tabs="8"><macro pos:start="1:1" pos:end="5:42"><name pos:start="1:1" pos:end="1:30">cpu_mips_check_sign_extensions</name> <argument_list pos:start="1:32" pos:end="5:42">(<argument pos:start="1:33" pos:end="1:45">CPUState *env</argument>, <argument pos:start="1:48" pos:end="1:54">FILE *f</argument>,

                                <argument pos:start="3:33" pos:end="3:81">int (*cpu_fprintf)(FILE *f, const char *fmt, ...)</argument>,

                                <argument pos:start="5:33" pos:end="5:41">int flags</argument>)</argument_list></macro>

<block pos:start="7:1" pos:end="49:1">{<block_content pos:start="9:5" pos:end="47:76">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:78"><if pos:start="13:5" pos:end="15:78">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:38"><name pos:start="13:10" pos:end="13:19">SIGN_EXT_P</name><argument_list pos:start="13:20" pos:end="13:38">(<argument pos:start="13:21" pos:end="13:37"><expr pos:start="13:21" pos:end="13:37"><name pos:start="13:21" pos:end="13:37"><name pos:start="13:21" pos:end="13:23">env</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:34">active_tc</name><operator pos:start="13:35" pos:end="13:35">.</operator><name pos:start="13:36" pos:end="13:37">PC</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:78"><block_content pos:start="15:9" pos:end="15:78">

        <expr_stmt pos:start="15:9" pos:end="15:78"><expr pos:start="15:9" pos:end="15:77"><call pos:start="15:9" pos:end="15:77"><name pos:start="15:9" pos:end="15:19">cpu_fprintf</name><argument_list pos:start="15:20" pos:end="15:77">(<argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">f</name></expr></argument>, <argument pos:start="15:24" pos:end="15:57"><expr pos:start="15:24" pos:end="15:57"><literal type="string" pos:start="15:24" pos:end="15:38">"BROKEN: pc=0x"</literal> <name pos:start="15:40" pos:end="15:52">TARGET_FMT_lx</name> <literal type="string" pos:start="15:54" pos:end="15:57">"\n"</literal></expr></argument>, <argument pos:start="15:60" pos:end="15:76"><expr pos:start="15:60" pos:end="15:76"><name pos:start="15:60" pos:end="15:76"><name pos:start="15:60" pos:end="15:62">env</name><operator pos:start="15:63" pos:end="15:64">-&gt;</operator><name pos:start="15:65" pos:end="15:73">active_tc</name><operator pos:start="15:74" pos:end="15:74">.</operator><name pos:start="15:75" pos:end="15:76">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:81"><if pos:start="17:5" pos:end="19:81">if <condition pos:start="17:8" pos:end="17:42">(<expr pos:start="17:9" pos:end="17:41"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:41"><name pos:start="17:10" pos:end="17:19">SIGN_EXT_P</name><argument_list pos:start="17:20" pos:end="17:41">(<argument pos:start="17:21" pos:end="17:40"><expr pos:start="17:21" pos:end="17:40"><name pos:start="17:21" pos:end="17:40"><name pos:start="17:21" pos:end="17:23">env</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:34">active_tc</name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:37">HI</name><index pos:start="17:38" pos:end="17:40">[<expr pos:start="17:39" pos:end="17:39"><literal type="number" pos:start="17:39" pos:end="17:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:81"><block_content pos:start="19:9" pos:end="19:81">

        <expr_stmt pos:start="19:9" pos:end="19:81"><expr pos:start="19:9" pos:end="19:80"><call pos:start="19:9" pos:end="19:80"><name pos:start="19:9" pos:end="19:19">cpu_fprintf</name><argument_list pos:start="19:20" pos:end="19:80">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">f</name></expr></argument>, <argument pos:start="19:24" pos:end="19:57"><expr pos:start="19:24" pos:end="19:57"><literal type="string" pos:start="19:24" pos:end="19:38">"BROKEN: HI=0x"</literal> <name pos:start="19:40" pos:end="19:52">TARGET_FMT_lx</name> <literal type="string" pos:start="19:54" pos:end="19:57">"\n"</literal></expr></argument>, <argument pos:start="19:60" pos:end="19:79"><expr pos:start="19:60" pos:end="19:79"><name pos:start="19:60" pos:end="19:79"><name pos:start="19:60" pos:end="19:62">env</name><operator pos:start="19:63" pos:end="19:64">-&gt;</operator><name pos:start="19:65" pos:end="19:73">active_tc</name><operator pos:start="19:74" pos:end="19:74">.</operator><name pos:start="19:75" pos:end="19:76">HI</name><index pos:start="19:77" pos:end="19:79">[<expr pos:start="19:78" pos:end="19:78"><literal type="number" pos:start="19:78" pos:end="19:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:81"><if pos:start="21:5" pos:end="23:81">if <condition pos:start="21:8" pos:end="21:42">(<expr pos:start="21:9" pos:end="21:41"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:41"><name pos:start="21:10" pos:end="21:19">SIGN_EXT_P</name><argument_list pos:start="21:20" pos:end="21:41">(<argument pos:start="21:21" pos:end="21:40"><expr pos:start="21:21" pos:end="21:40"><name pos:start="21:21" pos:end="21:40"><name pos:start="21:21" pos:end="21:23">env</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:34">active_tc</name><operator pos:start="21:35" pos:end="21:35">.</operator><name pos:start="21:36" pos:end="21:37">LO</name><index pos:start="21:38" pos:end="21:40">[<expr pos:start="21:39" pos:end="21:39"><literal type="number" pos:start="21:39" pos:end="21:39">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:81"><block_content pos:start="23:9" pos:end="23:81">

        <expr_stmt pos:start="23:9" pos:end="23:81"><expr pos:start="23:9" pos:end="23:80"><call pos:start="23:9" pos:end="23:80"><name pos:start="23:9" pos:end="23:19">cpu_fprintf</name><argument_list pos:start="23:20" pos:end="23:80">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><name pos:start="23:21" pos:end="23:21">f</name></expr></argument>, <argument pos:start="23:24" pos:end="23:57"><expr pos:start="23:24" pos:end="23:57"><literal type="string" pos:start="23:24" pos:end="23:38">"BROKEN: LO=0x"</literal> <name pos:start="23:40" pos:end="23:52">TARGET_FMT_lx</name> <literal type="string" pos:start="23:54" pos:end="23:57">"\n"</literal></expr></argument>, <argument pos:start="23:60" pos:end="23:79"><expr pos:start="23:60" pos:end="23:79"><name pos:start="23:60" pos:end="23:79"><name pos:start="23:60" pos:end="23:62">env</name><operator pos:start="23:63" pos:end="23:64">-&gt;</operator><name pos:start="23:65" pos:end="23:73">active_tc</name><operator pos:start="23:74" pos:end="23:74">.</operator><name pos:start="23:75" pos:end="23:76">LO</name><index pos:start="23:77" pos:end="23:79">[<expr pos:start="23:78" pos:end="23:78"><literal type="number" pos:start="23:78" pos:end="23:78">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:78"><if pos:start="25:5" pos:end="27:78">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:33"><name pos:start="25:10" pos:end="25:19">SIGN_EXT_P</name><argument_list pos:start="25:20" pos:end="25:33">(<argument pos:start="25:21" pos:end="25:32"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:23">env</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:32">btarget</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:78"><block_content pos:start="27:9" pos:end="27:78">

        <expr_stmt pos:start="27:9" pos:end="27:78"><expr pos:start="27:9" pos:end="27:77"><call pos:start="27:9" pos:end="27:77"><name pos:start="27:9" pos:end="27:19">cpu_fprintf</name><argument_list pos:start="27:20" pos:end="27:77">(<argument pos:start="27:21" pos:end="27:21"><expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">f</name></expr></argument>, <argument pos:start="27:24" pos:end="27:62"><expr pos:start="27:24" pos:end="27:62"><literal type="string" pos:start="27:24" pos:end="27:43">"BROKEN: btarget=0x"</literal> <name pos:start="27:45" pos:end="27:57">TARGET_FMT_lx</name> <literal type="string" pos:start="27:59" pos:end="27:62">"\n"</literal></expr></argument>, <argument pos:start="27:65" pos:end="27:76"><expr pos:start="27:65" pos:end="27:76"><name pos:start="27:65" pos:end="27:76"><name pos:start="27:65" pos:end="27:67">env</name><operator pos:start="27:68" pos:end="27:69">-&gt;</operator><name pos:start="27:70" pos:end="27:76">btarget</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:28">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:22">32</literal></expr>;</condition> <incr pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr></incr>)</control> <block pos:start="31:30" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:99">

        <if_stmt pos:start="33:9" pos:end="35:99"><if pos:start="33:9" pos:end="35:99">if <condition pos:start="33:12" pos:end="33:47">(<expr pos:start="33:13" pos:end="33:46"><operator pos:start="33:13" pos:end="33:13">!</operator><call pos:start="33:14" pos:end="33:46"><name pos:start="33:14" pos:end="33:23">SIGN_EXT_P</name><argument_list pos:start="33:24" pos:end="33:46">(<argument pos:start="33:25" pos:end="33:45"><expr pos:start="33:25" pos:end="33:45"><name pos:start="33:25" pos:end="33:45"><name pos:start="33:25" pos:end="33:27">env</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:38">active_tc</name><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:42">gpr</name><index pos:start="33:43" pos:end="33:45">[<expr pos:start="33:44" pos:end="33:44"><name pos:start="33:44" pos:end="33:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:99"><block_content pos:start="35:13" pos:end="35:99">

            <expr_stmt pos:start="35:13" pos:end="35:99"><expr pos:start="35:13" pos:end="35:98"><call pos:start="35:13" pos:end="35:98"><name pos:start="35:13" pos:end="35:23">cpu_fprintf</name><argument_list pos:start="35:24" pos:end="35:98">(<argument pos:start="35:25" pos:end="35:25"><expr pos:start="35:25" pos:end="35:25"><name pos:start="35:25" pos:end="35:25">f</name></expr></argument>, <argument pos:start="35:28" pos:end="35:61"><expr pos:start="35:28" pos:end="35:61"><literal type="string" pos:start="35:28" pos:end="35:42">"BROKEN: %s=0x"</literal> <name pos:start="35:44" pos:end="35:56">TARGET_FMT_lx</name> <literal type="string" pos:start="35:58" pos:end="35:61">"\n"</literal></expr></argument>, <argument pos:start="35:64" pos:end="35:74"><expr pos:start="35:64" pos:end="35:74"><name pos:start="35:64" pos:end="35:74"><name pos:start="35:64" pos:end="35:71">regnames</name><index pos:start="35:72" pos:end="35:74">[<expr pos:start="35:73" pos:end="35:73"><name pos:start="35:73" pos:end="35:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:77" pos:end="35:97"><expr pos:start="35:77" pos:end="35:97"><name pos:start="35:77" pos:end="35:97"><name pos:start="35:77" pos:end="35:79">env</name><operator pos:start="35:80" pos:end="35:81">-&gt;</operator><name pos:start="35:82" pos:end="35:90">active_tc</name><operator pos:start="35:91" pos:end="35:91">.</operator><name pos:start="35:92" pos:end="35:94">gpr</name><index pos:start="35:95" pos:end="35:97">[<expr pos:start="35:96" pos:end="35:96"><name pos:start="35:96" pos:end="35:96">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="41:5" pos:end="43:74"><if pos:start="41:5" pos:end="43:74">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:33"><name pos:start="41:10" pos:end="41:19">SIGN_EXT_P</name><argument_list pos:start="41:20" pos:end="41:33">(<argument pos:start="41:21" pos:end="41:32"><expr pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:23">env</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:32">CP0_EPC</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:74"><block_content pos:start="43:9" pos:end="43:74">

        <expr_stmt pos:start="43:9" pos:end="43:74"><expr pos:start="43:9" pos:end="43:73"><call pos:start="43:9" pos:end="43:73"><name pos:start="43:9" pos:end="43:19">cpu_fprintf</name><argument_list pos:start="43:20" pos:end="43:73">(<argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">f</name></expr></argument>, <argument pos:start="43:24" pos:end="43:58"><expr pos:start="43:24" pos:end="43:58"><literal type="string" pos:start="43:24" pos:end="43:39">"BROKEN: EPC=0x"</literal> <name pos:start="43:41" pos:end="43:53">TARGET_FMT_lx</name> <literal type="string" pos:start="43:55" pos:end="43:58">"\n"</literal></expr></argument>, <argument pos:start="43:61" pos:end="43:72"><expr pos:start="43:61" pos:end="43:72"><name pos:start="43:61" pos:end="43:72"><name pos:start="43:61" pos:end="43:63">env</name><operator pos:start="43:64" pos:end="43:65">-&gt;</operator><name pos:start="43:66" pos:end="43:72">CP0_EPC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:76"><if pos:start="45:5" pos:end="47:76">if <condition pos:start="45:8" pos:end="45:33">(<expr pos:start="45:9" pos:end="45:32"><operator pos:start="45:9" pos:end="45:9">!</operator><call pos:start="45:10" pos:end="45:32"><name pos:start="45:10" pos:end="45:19">SIGN_EXT_P</name><argument_list pos:start="45:20" pos:end="45:32">(<argument pos:start="45:21" pos:end="45:31"><expr pos:start="45:21" pos:end="45:31"><name pos:start="45:21" pos:end="45:31"><name pos:start="45:21" pos:end="45:23">env</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:31">lladdr</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:76"><block_content pos:start="47:9" pos:end="47:76">

        <expr_stmt pos:start="47:9" pos:end="47:76"><expr pos:start="47:9" pos:end="47:75"><call pos:start="47:9" pos:end="47:75"><name pos:start="47:9" pos:end="47:19">cpu_fprintf</name><argument_list pos:start="47:20" pos:end="47:75">(<argument pos:start="47:21" pos:end="47:21"><expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">f</name></expr></argument>, <argument pos:start="47:24" pos:end="47:61"><expr pos:start="47:24" pos:end="47:61"><literal type="string" pos:start="47:24" pos:end="47:42">"BROKEN: LLAddr=0x"</literal> <name pos:start="47:44" pos:end="47:56">TARGET_FMT_lx</name> <literal type="string" pos:start="47:58" pos:end="47:61">"\n"</literal></expr></argument>, <argument pos:start="47:64" pos:end="47:74"><expr pos:start="47:64" pos:end="47:74"><name pos:start="47:64" pos:end="47:74"><name pos:start="47:64" pos:end="47:66">env</name><operator pos:start="47:67" pos:end="47:68">-&gt;</operator><name pos:start="47:69" pos:end="47:74">lladdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block>
</unit>
