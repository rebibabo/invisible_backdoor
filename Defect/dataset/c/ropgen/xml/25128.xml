<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25128.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">shpc_interrupt_update</name><parameter_list pos:start="1:34" pos:end="1:47">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:43">PCIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:32">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SHPCDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">shpc</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:24">d</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:30">shpc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">slot</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">level</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">serr_int</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:24">int_locator</name> <init pos:start="13:26" pos:end="13:28">= <expr pos:start="13:28" pos:end="13:28"><literal type="number" pos:start="13:28" pos:end="13:28">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:43">/* Update interrupt locator register */</comment>

    <for pos:start="19:5" pos:end="33:5">for <control pos:start="19:9" pos:end="19:47">(<init pos:start="19:10" pos:end="19:18"><expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:13">slot</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</init> <condition pos:start="19:20" pos:end="19:39"><expr pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:23">slot</name> <operator pos:start="19:25" pos:end="19:25">&lt;</operator> <name pos:start="19:27" pos:end="19:38"><name pos:start="19:27" pos:end="19:30">shpc</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:38">nslots</name></name></expr>;</condition> <incr pos:start="19:41" pos:end="19:46"><expr pos:start="19:41" pos:end="19:46"><operator pos:start="19:41" pos:end="19:42">++</operator><name pos:start="19:43" pos:end="19:46">slot</name></expr></incr>)</control> <block pos:start="19:49" pos:end="33:5">{<block_content pos:start="21:9" pos:end="31:9">

        <decl_stmt pos:start="21:9" pos:end="21:66"><decl pos:start="21:9" pos:end="21:65"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">uint8_t</name></type> <name pos:start="21:17" pos:end="21:21">event</name> <init pos:start="21:23" pos:end="21:65">= <expr pos:start="21:25" pos:end="21:65"><name pos:start="21:25" pos:end="21:65"><name pos:start="21:25" pos:end="21:28">shpc</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">config</name><index pos:start="21:37" pos:end="21:65">[<expr pos:start="21:38" pos:end="21:64"><call pos:start="21:38" pos:end="21:64"><name pos:start="21:38" pos:end="21:58">SHPC_SLOT_EVENT_LATCH</name><argument_list pos:start="21:59" pos:end="21:64">(<argument pos:start="21:60" pos:end="21:63"><expr pos:start="21:60" pos:end="21:63"><name pos:start="21:60" pos:end="21:63">slot</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:78"><decl pos:start="23:9" pos:end="23:77"><type pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:15">uint8_t</name></type> <name pos:start="23:17" pos:end="23:23">disable</name> <init pos:start="23:25" pos:end="23:77">= <expr pos:start="23:27" pos:end="23:77"><name pos:start="23:27" pos:end="23:77"><name pos:start="23:27" pos:end="23:30">shpc</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:38">config</name><index pos:start="23:39" pos:end="23:77">[<expr pos:start="23:40" pos:end="23:76"><call pos:start="23:40" pos:end="23:76"><name pos:start="23:40" pos:end="23:67">SHPC_SLOT_EVENT_SERR_INT_DIS</name><argument_list pos:start="23:68" pos:end="23:76">(<argument pos:start="23:69" pos:end="23:69"><expr pos:start="23:69" pos:end="23:69"><name pos:start="23:69" pos:end="23:69">d</name></expr></argument>, <argument pos:start="23:72" pos:end="23:75"><expr pos:start="23:72" pos:end="23:75"><name pos:start="23:72" pos:end="23:75">slot</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:55"><decl pos:start="25:9" pos:end="25:54"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">uint32_t</name></type> <name pos:start="25:18" pos:end="25:21">mask</name> <init pos:start="25:23" pos:end="25:54">= <expr pos:start="25:25" pos:end="25:54"><literal type="number" pos:start="25:25" pos:end="25:25">1</literal> <operator pos:start="25:27" pos:end="25:28">&lt;&lt;</operator> <call pos:start="25:30" pos:end="25:54"><name pos:start="25:30" pos:end="25:48">SHPC_IDX_TO_LOGICAL</name><argument_list pos:start="25:49" pos:end="25:54">(<argument pos:start="25:50" pos:end="25:53"><expr pos:start="25:50" pos:end="25:53"><name pos:start="25:50" pos:end="25:53">slot</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:29">(<expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:17">event</name> <operator pos:start="27:19" pos:end="27:19">&amp;</operator> <operator pos:start="27:21" pos:end="27:21">~</operator><name pos:start="27:22" pos:end="27:28">disable</name></expr>)</condition> <block pos:start="27:31" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:32">

            <expr_stmt pos:start="29:13" pos:end="29:32"><expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:23">int_locator</name> <operator pos:start="29:25" pos:end="29:26">|=</operator> <name pos:start="29:28" pos:end="29:31">mask</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:12">serr_int</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:57"><name pos:start="35:16" pos:end="35:27">pci_get_long</name><argument_list pos:start="35:28" pos:end="35:57">(<argument pos:start="35:29" pos:end="35:56"><expr pos:start="35:29" pos:end="35:56"><name pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:32">shpc</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:40">config</name></name> <operator pos:start="35:42" pos:end="35:42">+</operator> <name pos:start="35:44" pos:end="35:56">SHPC_SERR_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:73">(<expr pos:start="37:9" pos:end="37:72"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:17">serr_int</name> <operator pos:start="37:19" pos:end="37:19">&amp;</operator> <name pos:start="37:21" pos:end="37:37">SHPC_CMD_DETECTED</name><operator pos:start="37:38" pos:end="37:38">)</operator> <operator pos:start="37:40" pos:end="37:41">&amp;&amp;</operator> <operator pos:start="37:43" pos:end="37:43">!</operator><operator pos:start="37:44" pos:end="37:44">(</operator><name pos:start="37:45" pos:end="37:52">serr_int</name> <operator pos:start="37:54" pos:end="37:54">&amp;</operator> <name pos:start="37:56" pos:end="37:71">SHPC_CMD_INT_DIS</name><operator pos:start="37:72" pos:end="37:72">)</operator></expr>)</condition> <block pos:start="37:75" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:40">

        <expr_stmt pos:start="39:9" pos:end="39:40"><expr pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:19">int_locator</name> <operator pos:start="39:21" pos:end="39:22">|=</operator> <name pos:start="39:24" pos:end="39:39">SHPC_INT_COMMAND</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><call pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:16">pci_set_long</name><argument_list pos:start="43:17" pos:end="43:62">(<argument pos:start="43:18" pos:end="43:48"><expr pos:start="43:18" pos:end="43:48"><name pos:start="43:18" pos:end="43:29"><name pos:start="43:18" pos:end="43:21">shpc</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:29">config</name></name> <operator pos:start="43:31" pos:end="43:31">+</operator> <name pos:start="43:33" pos:end="43:48">SHPC_INT_LOCATOR</name></expr></argument>, <argument pos:start="43:51" pos:end="43:61"><expr pos:start="43:51" pos:end="43:61"><name pos:start="43:51" pos:end="43:61">int_locator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:64"><expr pos:start="45:5" pos:end="45:63"><name pos:start="45:5" pos:end="45:9">level</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <ternary pos:start="45:13" pos:end="45:63"><condition pos:start="45:13" pos:end="45:57"><expr pos:start="45:13" pos:end="45:55"><operator pos:start="45:13" pos:end="45:13">(</operator><operator pos:start="45:14" pos:end="45:14">!</operator><operator pos:start="45:15" pos:end="45:15">(</operator><name pos:start="45:16" pos:end="45:23">serr_int</name> <operator pos:start="45:25" pos:end="45:25">&amp;</operator> <name pos:start="45:27" pos:end="45:38">SHPC_INT_DIS</name><operator pos:start="45:39" pos:end="45:39">)</operator> <operator pos:start="45:41" pos:end="45:42">&amp;&amp;</operator> <name pos:start="45:44" pos:end="45:54">int_locator</name><operator pos:start="45:55" pos:end="45:55">)</operator></expr> ?</condition><then pos:start="45:59" pos:end="45:59"> <expr pos:start="45:59" pos:end="45:59"><literal type="number" pos:start="45:59" pos:end="45:59">1</literal></expr> </then><else pos:start="45:61" pos:end="45:63">: <expr pos:start="45:63" pos:end="45:63"><literal type="number" pos:start="45:63" pos:end="45:63">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:30"><if pos:start="47:5" pos:end="49:25">if <condition pos:start="47:8" pos:end="47:55">(<expr pos:start="47:9" pos:end="47:54"><call pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:19">msi_enabled</name><argument_list pos:start="47:20" pos:end="47:22">(<argument pos:start="47:21" pos:end="47:21"><expr pos:start="47:21" pos:end="47:21"><name pos:start="47:21" pos:end="47:21">d</name></expr></argument>)</argument_list></call> <operator pos:start="47:24" pos:end="47:25">&amp;&amp;</operator> <name pos:start="47:27" pos:end="47:45"><name pos:start="47:27" pos:end="47:30">shpc</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:45">msi_requested</name></name> <operator pos:start="47:47" pos:end="47:48">!=</operator> <name pos:start="47:50" pos:end="47:54">level</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:25"><block_content pos:start="49:9" pos:end="49:25">

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:18">msi_notify</name><argument_list pos:start="49:19" pos:end="49:24">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">d</name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="51:5" pos:end="53:30">else<block type="pseudo" pos:start="53:9" pos:end="53:30"><block_content pos:start="53:9" pos:end="53:30">

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:19">pci_set_irq</name><argument_list pos:start="53:20" pos:end="53:29">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">d</name></expr></argument>, <argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:28">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:8">shpc</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:23">msi_requested</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:31">level</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
