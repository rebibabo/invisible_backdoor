<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10313.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">get_slice_data</name><parameter_list pos:start="1:27" pos:end="7:79">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:40">ProresContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:66"><decl pos:start="1:48" pos:end="1:66"><type pos:start="1:48" pos:end="1:66"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:61">uint16_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">src</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:39">linesize</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:46"><decl pos:start="3:42" pos:end="3:46"><type pos:start="3:42" pos:end="3:46"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:46">x</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:53"><decl pos:start="3:49" pos:end="3:53"><type pos:start="3:49" pos:end="3:53"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:53">y</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:60"><decl pos:start="3:56" pos:end="3:60"><type pos:start="3:56" pos:end="3:60"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:60">w</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:67"><decl pos:start="3:63" pos:end="3:67"><type pos:start="3:63" pos:end="3:67"><name pos:start="3:63" pos:end="3:65">int</name></type> <name pos:start="3:67" pos:end="3:67">h</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:42"><decl pos:start="5:28" pos:end="5:42"><type pos:start="5:28" pos:end="5:42"><name pos:start="5:28" pos:end="5:34">DCTELEM</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:42">blocks</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:61"><decl pos:start="5:45" pos:end="5:61"><type pos:start="5:45" pos:end="5:61"><name pos:start="5:45" pos:end="5:52">uint16_t</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:61">emu_buf</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:44"><decl pos:start="7:28" pos:end="7:44"><type pos:start="7:28" pos:end="7:44"><name pos:start="7:28" pos:end="7:30">int</name></type> <name pos:start="7:32" pos:end="7:44">mbs_per_slice</name></decl></parameter>, <parameter pos:start="7:47" pos:end="7:63"><decl pos:start="7:47" pos:end="7:63"><type pos:start="7:47" pos:end="7:63"><name pos:start="7:47" pos:end="7:49">int</name></type> <name pos:start="7:51" pos:end="7:63">blocks_per_mb</name></decl></parameter>, <parameter pos:start="7:66" pos:end="7:78"><decl pos:start="7:66" pos:end="7:78"><type pos:start="7:66" pos:end="7:78"><name pos:start="7:66" pos:end="7:68">int</name></type> <name pos:start="7:70" pos:end="7:78">is_chroma</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="139:1">{<block_content pos:start="11:5" pos:end="137:5">

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">esrc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:42"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:22">mb_width</name> <init pos:start="13:24" pos:end="13:42">= <expr pos:start="13:26" pos:end="13:42"><literal type="number" pos:start="13:26" pos:end="13:26">4</literal> <operator pos:start="13:28" pos:end="13:28">*</operator> <name pos:start="13:30" pos:end="13:42">blocks_per_mb</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">elinesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>, <decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:15">k</name></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="137:5">for <control pos:start="21:9" pos:end="21:56">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:33">mbs_per_slice</name></expr>;</condition> <incr pos:start="21:36" pos:end="21:55"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">i</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr><operator pos:start="21:39" pos:end="21:39">,</operator> <expr pos:start="21:41" pos:end="21:55"><name pos:start="21:41" pos:end="21:43">src</name> <operator pos:start="21:45" pos:end="21:46">+=</operator> <name pos:start="21:48" pos:end="21:55">mb_width</name></expr></incr>)</control> <block pos:start="21:58" pos:end="137:5">{<block_content pos:start="23:9" pos:end="135:22">

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:13">x</name> <operator pos:start="23:15" pos:end="23:16">&gt;=</operator> <name pos:start="23:18" pos:end="23:18">w</name></expr>)</condition> <block pos:start="23:21" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:19">

            <expr_stmt pos:start="25:13" pos:end="27:49"><expr pos:start="25:13" pos:end="27:48"><call pos:start="25:13" pos:end="27:48"><name pos:start="25:13" pos:end="25:18">memset</name><argument_list pos:start="25:19" pos:end="27:48">(<argument pos:start="25:20" pos:end="25:25"><expr pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:25">blocks</name></expr></argument>, <argument pos:start="25:28" pos:end="25:28"><expr pos:start="25:28" pos:end="25:28"><literal type="number" pos:start="25:28" pos:end="25:28">0</literal></expr></argument>, <argument pos:start="25:31" pos:end="27:47"><expr pos:start="25:31" pos:end="27:47"><literal type="number" pos:start="25:31" pos:end="25:32">64</literal> <operator pos:start="25:34" pos:end="25:34">*</operator> <operator pos:start="25:36" pos:end="25:36">(</operator><name pos:start="25:37" pos:end="25:49">mbs_per_slice</name> <operator pos:start="25:51" pos:end="25:51">-</operator> <name pos:start="25:53" pos:end="25:53">i</name><operator pos:start="25:54" pos:end="25:54">)</operator> <operator pos:start="25:56" pos:end="25:56">*</operator> <name pos:start="25:58" pos:end="25:70">blocks_per_mb</name>

                              <operator pos:start="27:31" pos:end="27:31">*</operator> <sizeof pos:start="27:33" pos:end="27:47">sizeof<argument_list pos:start="27:39" pos:end="27:47">(<argument pos:start="27:40" pos:end="27:46"><expr pos:start="27:40" pos:end="27:46"><operator pos:start="27:40" pos:end="27:40">*</operator><name pos:start="27:41" pos:end="27:46">blocks</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="81:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:45">(<expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:13">x</name> <operator pos:start="33:15" pos:end="33:15">+</operator> <name pos:start="33:17" pos:end="33:24">mb_width</name> <operator pos:start="33:26" pos:end="33:27">&lt;=</operator> <name pos:start="33:29" pos:end="33:29">w</name> <operator pos:start="33:31" pos:end="33:32">&amp;&amp;</operator> <name pos:start="33:34" pos:end="33:34">y</name> <operator pos:start="33:36" pos:end="33:36">+</operator> <literal type="number" pos:start="33:38" pos:end="33:39">16</literal> <operator pos:start="33:41" pos:end="33:42">&lt;=</operator> <name pos:start="33:44" pos:end="33:44">h</name></expr>)</condition> <block pos:start="33:47" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:33">

            <expr_stmt pos:start="35:13" pos:end="35:28"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:16">esrc</name>      <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:27">src</name></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:21">elinesize</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:32">linesize</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="81:9">else <block pos:start="39:16" pos:end="81:9">{<block_content pos:start="41:13" pos:end="79:52">

            <decl_stmt pos:start="41:13" pos:end="41:28"><decl pos:start="41:13" pos:end="41:18"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:18">bw</name></decl>, <decl pos:start="41:21" pos:end="41:22"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:21" pos:end="41:22">bh</name></decl>, <decl pos:start="41:25" pos:end="41:27"><type ref="prev" pos:start="41:13" pos:end="41:15"/><name pos:start="41:25" pos:end="41:27">pix</name></decl>;</decl_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:16">esrc</name>      <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:31">emu_buf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:46"><expr pos:start="47:13" pos:end="47:45"><name pos:start="47:13" pos:end="47:21">elinesize</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <literal type="number" pos:start="47:25" pos:end="47:26">16</literal> <operator pos:start="47:28" pos:end="47:28">*</operator> <sizeof pos:start="47:30" pos:end="47:45">sizeof<argument_list pos:start="47:36" pos:end="47:45">(<argument pos:start="47:37" pos:end="47:44"><expr pos:start="47:37" pos:end="47:44"><operator pos:start="47:37" pos:end="47:37">*</operator><name pos:start="47:38" pos:end="47:44">emu_buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:14">bw</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:39"><name pos:start="51:18" pos:end="51:22">FFMIN</name><argument_list pos:start="51:23" pos:end="51:39">(<argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:24">w</name> <operator pos:start="51:26" pos:end="51:26">-</operator> <name pos:start="51:28" pos:end="51:28">x</name></expr></argument>, <argument pos:start="51:31" pos:end="51:38"><expr pos:start="51:31" pos:end="51:38"><name pos:start="51:31" pos:end="51:38">mb_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:14">bh</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="53:33"><name pos:start="53:18" pos:end="53:22">FFMIN</name><argument_list pos:start="53:23" pos:end="53:33">(<argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><name pos:start="53:24" pos:end="53:24">h</name> <operator pos:start="53:26" pos:end="53:26">-</operator> <name pos:start="53:28" pos:end="53:28">y</name></expr></argument>, <argument pos:start="53:31" pos:end="53:32"><expr pos:start="53:31" pos:end="53:32"><literal type="number" pos:start="53:31" pos:end="53:32">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="57:13" pos:end="71:13">for <control pos:start="57:17" pos:end="57:36">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">j</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:31"><expr pos:start="57:25" pos:end="57:30"><name pos:start="57:25" pos:end="57:25">j</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:30">bh</name></expr>;</condition> <incr pos:start="57:33" pos:end="57:35"><expr pos:start="57:33" pos:end="57:35"><name pos:start="57:33" pos:end="57:33">j</name><operator pos:start="57:34" pos:end="57:35">++</operator></expr></incr>)</control> <block pos:start="57:38" pos:end="71:13">{<block_content pos:start="59:17" pos:end="69:46">

                <expr_stmt pos:start="59:17" pos:end="63:42"><expr pos:start="59:17" pos:end="63:41"><call pos:start="59:17" pos:end="63:41"><name pos:start="59:17" pos:end="59:22">memcpy</name><argument_list pos:start="59:23" pos:end="63:41">(<argument pos:start="59:24" pos:end="59:39"><expr pos:start="59:24" pos:end="59:39"><name pos:start="59:24" pos:end="59:30">emu_buf</name> <operator pos:start="59:32" pos:end="59:32">+</operator> <name pos:start="59:34" pos:end="59:34">j</name> <operator pos:start="59:36" pos:end="59:36">*</operator> <literal type="number" pos:start="59:38" pos:end="59:39">16</literal></expr></argument>,

                       <argument pos:start="61:24" pos:end="61:57"><expr pos:start="61:24" pos:end="61:57"><operator pos:start="61:24" pos:end="61:24">(</operator><specifier pos:start="61:25" pos:end="61:29">const</specifier> <name pos:start="61:31" pos:end="61:37">uint8_t</name><operator pos:start="61:38" pos:end="61:38">*</operator><operator pos:start="61:39" pos:end="61:39">)</operator><name pos:start="61:40" pos:end="61:42">src</name> <operator pos:start="61:44" pos:end="61:44">+</operator> <name pos:start="61:46" pos:end="61:46">j</name> <operator pos:start="61:48" pos:end="61:48">*</operator> <name pos:start="61:50" pos:end="61:57">linesize</name></expr></argument>,

                       <argument pos:start="63:24" pos:end="63:40"><expr pos:start="63:24" pos:end="63:40"><name pos:start="63:24" pos:end="63:25">bw</name> <operator pos:start="63:27" pos:end="63:27">*</operator> <sizeof pos:start="63:29" pos:end="63:40">sizeof<argument_list pos:start="63:35" pos:end="63:40">(<argument pos:start="63:36" pos:end="63:39"><expr pos:start="63:36" pos:end="63:39"><operator pos:start="63:36" pos:end="63:36">*</operator><name pos:start="63:37" pos:end="63:39">src</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:47"><expr pos:start="65:17" pos:end="65:46"><name pos:start="65:17" pos:end="65:19">pix</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:46"><name pos:start="65:23" pos:end="65:29">emu_buf</name><index pos:start="65:30" pos:end="65:46">[<expr pos:start="65:31" pos:end="65:45"><name pos:start="65:31" pos:end="65:31">j</name> <operator pos:start="65:33" pos:end="65:33">*</operator> <literal type="number" pos:start="65:35" pos:end="65:38">16</literal> <operator pos:start="65:38" pos:end="65:38">+</operator> <name pos:start="65:40" pos:end="65:41">bw</name> <operator pos:start="65:43" pos:end="65:43">-</operator> <literal type="number" pos:start="65:45" pos:end="65:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <for pos:start="67:17" pos:end="69:46">for <control pos:start="67:21" pos:end="67:47">(<init pos:start="67:22" pos:end="67:28"><expr pos:start="67:22" pos:end="67:27"><name pos:start="67:22" pos:end="67:22">k</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:27">bw</name></expr>;</init> <condition pos:start="67:30" pos:end="67:42"><expr pos:start="67:30" pos:end="67:41"><name pos:start="67:30" pos:end="67:30">k</name> <operator pos:start="67:32" pos:end="67:32">&lt;</operator> <name pos:start="67:34" pos:end="67:41">mb_width</name></expr>;</condition> <incr pos:start="67:44" pos:end="67:46"><expr pos:start="67:44" pos:end="67:46"><name pos:start="67:44" pos:end="67:44">k</name><operator pos:start="67:45" pos:end="67:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:21" pos:end="69:46"><block_content pos:start="69:21" pos:end="69:46">

                    <expr_stmt pos:start="69:21" pos:end="69:46"><expr pos:start="69:21" pos:end="69:45"><name pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:27">emu_buf</name><index pos:start="69:28" pos:end="69:39">[<expr pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:29">j</name> <operator pos:start="69:31" pos:end="69:31">*</operator> <literal type="number" pos:start="69:33" pos:end="69:34">16</literal> <operator pos:start="69:36" pos:end="69:36">+</operator> <name pos:start="69:38" pos:end="69:38">k</name></expr>]</index></name> <operator pos:start="69:41" pos:end="69:41">=</operator> <name pos:start="69:43" pos:end="69:45">pix</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></for>

            <for pos:start="73:13" pos:end="79:52">for <control pos:start="73:17" pos:end="73:31">(<init pos:start="73:18" pos:end="73:18">;</init> <condition pos:start="73:20" pos:end="73:26"><expr pos:start="73:20" pos:end="73:25"><name pos:start="73:20" pos:end="73:20">j</name> <operator pos:start="73:22" pos:end="73:22">&lt;</operator> <literal type="number" pos:start="73:24" pos:end="73:25">16</literal></expr>;</condition> <incr pos:start="73:28" pos:end="73:30"><expr pos:start="73:28" pos:end="73:30"><name pos:start="73:28" pos:end="73:28">j</name><operator pos:start="73:29" pos:end="73:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:17" pos:end="79:52"><block_content pos:start="75:17" pos:end="79:52">

                <expr_stmt pos:start="75:17" pos:end="79:52"><expr pos:start="75:17" pos:end="79:51"><call pos:start="75:17" pos:end="79:51"><name pos:start="75:17" pos:end="75:22">memcpy</name><argument_list pos:start="75:23" pos:end="79:51">(<argument pos:start="75:24" pos:end="75:39"><expr pos:start="75:24" pos:end="75:39"><name pos:start="75:24" pos:end="75:30">emu_buf</name> <operator pos:start="75:32" pos:end="75:32">+</operator> <name pos:start="75:34" pos:end="75:34">j</name> <operator pos:start="75:36" pos:end="75:36">*</operator> <literal type="number" pos:start="75:38" pos:end="75:39">16</literal></expr></argument>,

                       <argument pos:start="77:24" pos:end="77:46"><expr pos:start="77:24" pos:end="77:46"><name pos:start="77:24" pos:end="77:30">emu_buf</name> <operator pos:start="77:32" pos:end="77:32">+</operator> <operator pos:start="77:34" pos:end="77:34">(</operator><name pos:start="77:35" pos:end="77:36">bh</name> <operator pos:start="77:38" pos:end="77:38">-</operator> <literal type="number" pos:start="77:40" pos:end="77:40">1</literal><operator pos:start="77:41" pos:end="77:41">)</operator> <operator pos:start="77:43" pos:end="77:43">*</operator> <literal type="number" pos:start="77:45" pos:end="77:46">16</literal></expr></argument>,

                       <argument pos:start="79:24" pos:end="79:50"><expr pos:start="79:24" pos:end="79:50"><name pos:start="79:24" pos:end="79:31">mb_width</name> <operator pos:start="79:33" pos:end="79:33">*</operator> <sizeof pos:start="79:35" pos:end="79:50">sizeof<argument_list pos:start="79:41" pos:end="79:50">(<argument pos:start="79:42" pos:end="79:49"><expr pos:start="79:42" pos:end="79:49"><operator pos:start="79:42" pos:end="79:42">*</operator><name pos:start="79:43" pos:end="79:49">emu_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="83:9" pos:end="131:9"><if pos:start="83:9" pos:end="109:9">if <condition pos:start="83:12" pos:end="83:23">(<expr pos:start="83:13" pos:end="83:22"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:22">is_chroma</name></expr>)</condition> <block pos:start="83:25" pos:end="109:9">{<block_content pos:start="85:13" pos:end="107:13">

            <expr_stmt pos:start="85:13" pos:end="85:51"><expr pos:start="85:13" pos:end="85:50"><call pos:start="85:13" pos:end="85:50"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:15">ctx</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:20">dsp</name><operator pos:start="85:21" pos:end="85:21">.</operator><name pos:start="85:22" pos:end="85:25">fdct</name></name><argument_list pos:start="85:26" pos:end="85:50">(<argument pos:start="85:27" pos:end="85:30"><expr pos:start="85:27" pos:end="85:30"><name pos:start="85:27" pos:end="85:30">esrc</name></expr></argument>, <argument pos:start="85:33" pos:end="85:41"><expr pos:start="85:33" pos:end="85:41"><name pos:start="85:33" pos:end="85:41">elinesize</name></expr></argument>, <argument pos:start="85:44" pos:end="85:49"><expr pos:start="85:44" pos:end="85:49"><name pos:start="85:44" pos:end="85:49">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:25"><expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:18">blocks</name> <operator pos:start="87:20" pos:end="87:21">+=</operator> <literal type="number" pos:start="87:23" pos:end="87:24">64</literal></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:34">(<expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:29">blocks_per_mb</name> <operator pos:start="89:31" pos:end="89:31">&gt;</operator> <literal type="number" pos:start="89:33" pos:end="89:33">2</literal></expr>)</condition> <block pos:start="89:36" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:29">

                <expr_stmt pos:start="91:17" pos:end="91:57"><expr pos:start="91:17" pos:end="91:56"><call pos:start="91:17" pos:end="91:56"><name pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:19">ctx</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:24">dsp</name><operator pos:start="91:25" pos:end="91:25">.</operator><name pos:start="91:26" pos:end="91:29">fdct</name></name><argument_list pos:start="91:30" pos:end="91:56">(<argument pos:start="91:31" pos:end="91:37"><expr pos:start="91:31" pos:end="91:37"><name pos:start="91:31" pos:end="91:33">src</name> <operator pos:start="91:35" pos:end="91:35">+</operator> <literal type="number" pos:start="91:37" pos:end="91:37">8</literal></expr></argument>, <argument pos:start="91:40" pos:end="91:47"><expr pos:start="91:40" pos:end="91:47"><name pos:start="91:40" pos:end="91:47">linesize</name></expr></argument>, <argument pos:start="91:50" pos:end="91:55"><expr pos:start="91:50" pos:end="91:55"><name pos:start="91:50" pos:end="91:55">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:29"><expr pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:22">blocks</name> <operator pos:start="93:24" pos:end="93:25">+=</operator> <literal type="number" pos:start="93:27" pos:end="93:28">64</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:64"><expr pos:start="97:13" pos:end="97:63"><call pos:start="97:13" pos:end="97:63"><name pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:15">ctx</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:20">dsp</name><operator pos:start="97:21" pos:end="97:21">.</operator><name pos:start="97:22" pos:end="97:25">fdct</name></name><argument_list pos:start="97:26" pos:end="97:63">(<argument pos:start="97:27" pos:end="97:44"><expr pos:start="97:27" pos:end="97:44"><name pos:start="97:27" pos:end="97:29">src</name> <operator pos:start="97:31" pos:end="97:31">+</operator> <name pos:start="97:33" pos:end="97:40">linesize</name> <operator pos:start="97:42" pos:end="97:42">*</operator> <literal type="number" pos:start="97:44" pos:end="97:44">4</literal></expr></argument>, <argument pos:start="97:47" pos:end="97:54"><expr pos:start="97:47" pos:end="97:54"><name pos:start="97:47" pos:end="97:54">linesize</name></expr></argument>, <argument pos:start="97:57" pos:end="97:62"><expr pos:start="97:57" pos:end="97:62"><name pos:start="97:57" pos:end="97:62">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:25"><expr pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:18">blocks</name> <operator pos:start="99:20" pos:end="99:21">+=</operator> <literal type="number" pos:start="99:23" pos:end="99:24">64</literal></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:34">(<expr pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:29">blocks_per_mb</name> <operator pos:start="101:31" pos:end="101:31">&gt;</operator> <literal type="number" pos:start="101:33" pos:end="101:33">2</literal></expr>)</condition> <block pos:start="101:36" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:29">

                <expr_stmt pos:start="103:17" pos:end="103:72"><expr pos:start="103:17" pos:end="103:71"><call pos:start="103:17" pos:end="103:71"><name pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:19">ctx</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:24">dsp</name><operator pos:start="103:25" pos:end="103:25">.</operator><name pos:start="103:26" pos:end="103:29">fdct</name></name><argument_list pos:start="103:30" pos:end="103:71">(<argument pos:start="103:31" pos:end="103:52"><expr pos:start="103:31" pos:end="103:52"><name pos:start="103:31" pos:end="103:33">src</name> <operator pos:start="103:35" pos:end="103:35">+</operator> <name pos:start="103:37" pos:end="103:44">linesize</name> <operator pos:start="103:46" pos:end="103:46">*</operator> <literal type="number" pos:start="103:48" pos:end="103:50">4</literal> <operator pos:start="103:50" pos:end="103:50">+</operator> <literal type="number" pos:start="103:52" pos:end="103:52">8</literal></expr></argument>, <argument pos:start="103:55" pos:end="103:62"><expr pos:start="103:55" pos:end="103:62"><name pos:start="103:55" pos:end="103:62">linesize</name></expr></argument>, <argument pos:start="103:65" pos:end="103:70"><expr pos:start="103:65" pos:end="103:70"><name pos:start="103:65" pos:end="103:70">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:29"><expr pos:start="105:17" pos:end="105:28"><name pos:start="105:17" pos:end="105:22">blocks</name> <operator pos:start="105:24" pos:end="105:25">+=</operator> <literal type="number" pos:start="105:27" pos:end="105:28">64</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="109:11" pos:end="131:9">else <block pos:start="109:16" pos:end="131:9">{<block_content pos:start="111:13" pos:end="129:13">

            <expr_stmt pos:start="111:13" pos:end="111:51"><expr pos:start="111:13" pos:end="111:50"><call pos:start="111:13" pos:end="111:50"><name pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:15">ctx</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:20">dsp</name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:25">fdct</name></name><argument_list pos:start="111:26" pos:end="111:50">(<argument pos:start="111:27" pos:end="111:30"><expr pos:start="111:27" pos:end="111:30"><name pos:start="111:27" pos:end="111:30">esrc</name></expr></argument>, <argument pos:start="111:33" pos:end="111:41"><expr pos:start="111:33" pos:end="111:41"><name pos:start="111:33" pos:end="111:41">elinesize</name></expr></argument>, <argument pos:start="111:44" pos:end="111:49"><expr pos:start="111:44" pos:end="111:49"><name pos:start="111:44" pos:end="111:49">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:25"><expr pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:18">blocks</name> <operator pos:start="113:20" pos:end="113:21">+=</operator> <literal type="number" pos:start="113:23" pos:end="113:24">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:64"><expr pos:start="115:13" pos:end="115:63"><call pos:start="115:13" pos:end="115:63"><name pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:15">ctx</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:20">dsp</name><operator pos:start="115:21" pos:end="115:21">.</operator><name pos:start="115:22" pos:end="115:25">fdct</name></name><argument_list pos:start="115:26" pos:end="115:63">(<argument pos:start="115:27" pos:end="115:44"><expr pos:start="115:27" pos:end="115:44"><name pos:start="115:27" pos:end="115:29">src</name> <operator pos:start="115:31" pos:end="115:31">+</operator> <name pos:start="115:33" pos:end="115:40">linesize</name> <operator pos:start="115:42" pos:end="115:42">*</operator> <literal type="number" pos:start="115:44" pos:end="115:44">4</literal></expr></argument>, <argument pos:start="115:47" pos:end="115:54"><expr pos:start="115:47" pos:end="115:54"><name pos:start="115:47" pos:end="115:54">linesize</name></expr></argument>, <argument pos:start="115:57" pos:end="115:62"><expr pos:start="115:57" pos:end="115:62"><name pos:start="115:57" pos:end="115:62">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:25"><expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:18">blocks</name> <operator pos:start="117:20" pos:end="117:21">+=</operator> <literal type="number" pos:start="117:23" pos:end="117:24">64</literal></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="129:13"><if pos:start="119:13" pos:end="129:13">if <condition pos:start="119:16" pos:end="119:34">(<expr pos:start="119:17" pos:end="119:33"><name pos:start="119:17" pos:end="119:29">blocks_per_mb</name> <operator pos:start="119:31" pos:end="119:31">&gt;</operator> <literal type="number" pos:start="119:33" pos:end="119:33">2</literal></expr>)</condition> <block pos:start="119:36" pos:end="129:13">{<block_content pos:start="121:17" pos:end="127:29">

                <expr_stmt pos:start="121:17" pos:end="121:57"><expr pos:start="121:17" pos:end="121:56"><call pos:start="121:17" pos:end="121:56"><name pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:19">ctx</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:24">dsp</name><operator pos:start="121:25" pos:end="121:25">.</operator><name pos:start="121:26" pos:end="121:29">fdct</name></name><argument_list pos:start="121:30" pos:end="121:56">(<argument pos:start="121:31" pos:end="121:37"><expr pos:start="121:31" pos:end="121:37"><name pos:start="121:31" pos:end="121:33">src</name> <operator pos:start="121:35" pos:end="121:35">+</operator> <literal type="number" pos:start="121:37" pos:end="121:37">8</literal></expr></argument>, <argument pos:start="121:40" pos:end="121:47"><expr pos:start="121:40" pos:end="121:47"><name pos:start="121:40" pos:end="121:47">linesize</name></expr></argument>, <argument pos:start="121:50" pos:end="121:55"><expr pos:start="121:50" pos:end="121:55"><name pos:start="121:50" pos:end="121:55">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:29"><expr pos:start="123:17" pos:end="123:28"><name pos:start="123:17" pos:end="123:22">blocks</name> <operator pos:start="123:24" pos:end="123:25">+=</operator> <literal type="number" pos:start="123:27" pos:end="123:28">64</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:72"><expr pos:start="125:17" pos:end="125:71"><call pos:start="125:17" pos:end="125:71"><name pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:19">ctx</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:24">dsp</name><operator pos:start="125:25" pos:end="125:25">.</operator><name pos:start="125:26" pos:end="125:29">fdct</name></name><argument_list pos:start="125:30" pos:end="125:71">(<argument pos:start="125:31" pos:end="125:52"><expr pos:start="125:31" pos:end="125:52"><name pos:start="125:31" pos:end="125:33">src</name> <operator pos:start="125:35" pos:end="125:35">+</operator> <name pos:start="125:37" pos:end="125:44">linesize</name> <operator pos:start="125:46" pos:end="125:46">*</operator> <literal type="number" pos:start="125:48" pos:end="125:50">4</literal> <operator pos:start="125:50" pos:end="125:50">+</operator> <literal type="number" pos:start="125:52" pos:end="125:52">8</literal></expr></argument>, <argument pos:start="125:55" pos:end="125:62"><expr pos:start="125:55" pos:end="125:62"><name pos:start="125:55" pos:end="125:62">linesize</name></expr></argument>, <argument pos:start="125:65" pos:end="125:70"><expr pos:start="125:65" pos:end="125:70"><name pos:start="125:65" pos:end="125:70">blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:29"><expr pos:start="127:17" pos:end="127:28"><name pos:start="127:17" pos:end="127:22">blocks</name> <operator pos:start="127:24" pos:end="127:25">+=</operator> <literal type="number" pos:start="127:27" pos:end="127:28">64</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:22"><expr pos:start="135:9" pos:end="135:21"><name pos:start="135:9" pos:end="135:9">x</name> <operator pos:start="135:11" pos:end="135:12">+=</operator> <name pos:start="135:14" pos:end="135:21">mb_width</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
