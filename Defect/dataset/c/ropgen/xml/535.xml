<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/535.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:35"><name pos:start="1:1" pos:end="1:19">e1000e_cleanup_msix</name><argument_list pos:start="1:20" pos:end="1:35">(<argument pos:start="1:21" pos:end="1:34">E1000EState *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:5">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:36">(<expr pos:start="5:9" pos:end="5:35"><call pos:start="5:9" pos:end="5:35"><name pos:start="5:9" pos:end="5:20">msix_enabled</name><argument_list pos:start="5:21" pos:end="5:35">(<argument pos:start="5:22" pos:end="5:34"><expr pos:start="5:22" pos:end="5:34"><call pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:31">PCI_DEVICE</name><argument_list pos:start="5:32" pos:end="5:34">(<argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><name pos:start="5:33" pos:end="5:33">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:38" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:55">

        <expr_stmt pos:start="7:9" pos:end="7:58"><expr pos:start="7:9" pos:end="7:57"><call pos:start="7:9" pos:end="7:57"><name pos:start="7:9" pos:end="7:33">e1000e_unuse_msix_vectors</name><argument_list pos:start="7:34" pos:end="7:57">(<argument pos:start="7:35" pos:end="7:35"><expr pos:start="7:35" pos:end="7:35"><name pos:start="7:35" pos:end="7:35">s</name></expr></argument>, <argument pos:start="7:38" pos:end="7:56"><expr pos:start="7:38" pos:end="7:56"><name pos:start="7:38" pos:end="7:56">E1000E_MSIX_VEC_NUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="9:9" pos:end="9:55"><expr pos:start="9:9" pos:end="9:54"><call pos:start="9:9" pos:end="9:54"><name pos:start="9:9" pos:end="9:19">msix_uninit</name><argument_list pos:start="9:20" pos:end="9:54">(<argument pos:start="9:21" pos:end="9:33"><expr pos:start="9:21" pos:end="9:33"><call pos:start="9:21" pos:end="9:33"><name pos:start="9:21" pos:end="9:30">PCI_DEVICE</name><argument_list pos:start="9:31" pos:end="9:33">(<argument pos:start="9:32" pos:end="9:32"><expr pos:start="9:32" pos:end="9:32"><name pos:start="9:32" pos:end="9:32">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:36" pos:end="9:43"><expr pos:start="9:36" pos:end="9:43"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:43"><name pos:start="9:37" pos:end="9:37">s</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:43">msix</name></name></expr></argument>, <argument pos:start="9:46" pos:end="9:53"><expr pos:start="9:46" pos:end="9:53"><operator pos:start="9:46" pos:end="9:46">&amp;</operator><name pos:start="9:47" pos:end="9:53"><name pos:start="9:47" pos:end="9:47">s</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:53">msix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
