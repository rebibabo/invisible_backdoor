<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3694.c" pos:tabs="8"><function pos:start="1:1" pos:end="584:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">mov_fix_index</name><parameter_list pos:start="1:26" pos:end="1:56">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:36">MOVContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">mov</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:51">AVStream</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="584:1">{<block_content pos:start="5:5" pos:end="582:52">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">MOVStreamContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">msc</name> <init pos:start="5:27" pos:end="5:41">= <expr pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:30">st</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVIndexEntry</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:23">e_old</name> <init pos:start="7:25" pos:end="7:43">= <expr pos:start="7:27" pos:end="7:43"><name pos:start="7:27" pos:end="7:43"><name pos:start="7:27" pos:end="7:28">st</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:43">index_entries</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">nb_old</name> <init pos:start="9:16" pos:end="9:37">= <expr pos:start="9:18" pos:end="9:37"><name pos:start="9:18" pos:end="9:37"><name pos:start="9:18" pos:end="9:19">st</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:37">nb_index_entries</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:24"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:22">AVIndexEntry</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:33">e_old_end</name> <init pos:start="11:35" pos:end="11:50">= <expr pos:start="11:37" pos:end="11:50"><name pos:start="11:37" pos:end="11:41">e_old</name> <operator pos:start="11:43" pos:end="11:43">+</operator> <name pos:start="11:45" pos:end="11:50">nb_old</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:24"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:22">AVIndexEntry</name> <modifier pos:start="13:24" pos:end="13:24">*</modifier></type><name pos:start="13:25" pos:end="13:31">current</name> <init pos:start="13:33" pos:end="13:38">= <expr pos:start="13:35" pos:end="13:38"><name pos:start="13:35" pos:end="13:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:43"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">MOVStts</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:26">ctts_data_old</name> <init pos:start="15:28" pos:end="15:43">= <expr pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:43"><name pos:start="15:30" pos:end="15:32">msc</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:43">ctts_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:26">ctts_index_old</name> <init pos:start="17:28" pos:end="17:30">= <expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:27">ctts_sample_old</name> <init pos:start="19:29" pos:end="19:31">= <expr pos:start="19:31" pos:end="19:31"><literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:44"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:26">ctts_count_old</name> <init pos:start="21:28" pos:end="21:44">= <expr pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:32">msc</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:44">ctts_count</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:36"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:32">edit_list_media_time</name> <init pos:start="23:34" pos:end="23:36">= <expr pos:start="23:36" pos:end="23:36"><literal type="number" pos:start="23:36" pos:end="23:36">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:35"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:30">edit_list_duration</name> <init pos:start="25:32" pos:end="25:34">= <expr pos:start="25:34" pos:end="25:34"><literal type="number" pos:start="25:34" pos:end="25:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:31"><decl pos:start="27:5" pos:end="27:30"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:26">frame_duration</name> <init pos:start="27:28" pos:end="27:30">= <expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:38"><decl pos:start="29:5" pos:end="29:37"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:33">edit_list_dts_counter</name> <init pos:start="29:35" pos:end="29:37">= <expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:40"><decl pos:start="31:5" pos:end="31:39"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:11">int64_t</name></type> <name pos:start="31:13" pos:end="31:35">edit_list_dts_entry_end</name> <init pos:start="31:37" pos:end="31:39">= <expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:44"><decl pos:start="33:5" pos:end="33:43"><type pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:11">int64_t</name></type> <name pos:start="33:13" pos:end="33:39">edit_list_start_ctts_sample</name> <init pos:start="33:41" pos:end="33:43">= <expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:21"><decl pos:start="35:5" pos:end="35:20"><type pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:11">int64_t</name></type> <name pos:start="35:13" pos:end="35:20">curr_cts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:26"><decl pos:start="37:5" pos:end="37:25"><type pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:11">int64_t</name></type> <name pos:start="37:13" pos:end="37:21">curr_ctts</name> <init pos:start="37:23" pos:end="37:25">= <expr pos:start="37:25" pos:end="37:25"><literal type="number" pos:start="37:25" pos:end="37:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:35"><decl pos:start="39:5" pos:end="39:34"><type pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:11">int64_t</name></type> <name pos:start="39:13" pos:end="39:29">min_corrected_pts</name> <init pos:start="39:31" pos:end="39:34">= <expr pos:start="39:33" pos:end="39:34"><operator pos:start="39:33" pos:end="39:33">-</operator><literal type="number" pos:start="39:34" pos:end="39:34">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:41"><decl pos:start="41:5" pos:end="41:40"><type pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:11">int64_t</name></type> <name pos:start="41:13" pos:end="41:36">empty_edits_sum_duration</name> <init pos:start="41:38" pos:end="41:40">= <expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:32"><decl pos:start="43:5" pos:end="43:31"><type pos:start="43:5" pos:end="43:11"><name pos:start="43:5" pos:end="43:11">int64_t</name></type> <name pos:start="43:13" pos:end="43:27">edit_list_index</name> <init pos:start="43:29" pos:end="43:31">= <expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:18"><decl pos:start="45:5" pos:end="45:17"><type pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:11">int64_t</name></type> <name pos:start="45:13" pos:end="45:17">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:14"><decl pos:start="47:5" pos:end="47:13"><type pos:start="47:5" pos:end="47:7"><name pos:start="47:5" pos:end="47:7">int</name></type> <name pos:start="47:9" pos:end="47:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:26"><decl pos:start="49:5" pos:end="49:25"><type pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:11">int64_t</name></type> <name pos:start="49:13" pos:end="49:21">start_dts</name> <init pos:start="49:23" pos:end="49:25">= <expr pos:start="49:25" pos:end="49:25"><literal type="number" pos:start="49:25" pos:end="49:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:44"><decl pos:start="51:5" pos:end="51:43"><type pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:11">int64_t</name></type> <name pos:start="51:13" pos:end="51:39">edit_list_start_encountered</name> <init pos:start="51:41" pos:end="51:43">= <expr pos:start="51:43" pos:end="51:43"><literal type="number" pos:start="51:43" pos:end="51:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="53:33"><decl pos:start="53:5" pos:end="53:32"><type pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:11">int64_t</name></type> <name pos:start="53:13" pos:end="53:28">search_timestamp</name> <init pos:start="53:30" pos:end="53:32">= <expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:42"><decl pos:start="55:5" pos:end="55:41"><type pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:11">int64_t</name><modifier pos:start="55:12" pos:end="55:12">*</modifier></type> <name pos:start="55:14" pos:end="55:34">frame_duration_buffer</name> <init pos:start="55:36" pos:end="55:41">= <expr pos:start="55:38" pos:end="55:41"><name pos:start="55:38" pos:end="55:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:32"><decl pos:start="57:5" pos:end="57:31"><type pos:start="57:5" pos:end="57:7"><name pos:start="57:5" pos:end="57:7">int</name></type> <name pos:start="57:9" pos:end="57:27">num_discarded_begin</name> <init pos:start="57:29" pos:end="57:31">= <expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:39"><decl pos:start="59:5" pos:end="59:38"><type pos:start="59:5" pos:end="59:7"><name pos:start="59:5" pos:end="59:7">int</name></type> <name pos:start="59:9" pos:end="59:33">first_non_zero_audio_edit</name> <init pos:start="59:35" pos:end="59:38">= <expr pos:start="59:37" pos:end="59:38"><operator pos:start="59:37" pos:end="59:37">-</operator><literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="61:32"><decl pos:start="61:5" pos:end="61:31"><type pos:start="61:5" pos:end="61:7"><name pos:start="61:5" pos:end="61:7">int</name></type> <name pos:start="61:9" pos:end="61:27">packet_skip_samples</name> <init pos:start="61:29" pos:end="61:31">= <expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="63:5" pos:end="63:39"><decl pos:start="63:5" pos:end="63:38"><type pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:17">MOVIndexRange</name> <modifier pos:start="63:19" pos:end="63:19">*</modifier></type><name pos:start="63:20" pos:end="63:38">current_index_range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="65:5" pos:end="65:10"><decl pos:start="65:5" pos:end="65:9"><type pos:start="65:5" pos:end="65:7"><name pos:start="65:5" pos:end="65:7">int</name></type> <name pos:start="65:9" pos:end="65:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="67:5" pos:end="67:38"><decl pos:start="67:5" pos:end="67:37"><type pos:start="67:5" pos:end="67:7"><name pos:start="67:5" pos:end="67:7">int</name></type> <name pos:start="67:9" pos:end="67:33">found_keyframe_after_edit</name> <init pos:start="67:35" pos:end="67:37">= <expr pos:start="67:37" pos:end="67:37"><literal type="number" pos:start="67:37" pos:end="67:37">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="71:5" pos:end="75:5"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:63">(<expr pos:start="71:9" pos:end="71:62"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:12">msc</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:23">elst_data</name></name> <operator pos:start="71:25" pos:end="71:26">||</operator> <name pos:start="71:28" pos:end="71:42"><name pos:start="71:28" pos:end="71:30">msc</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:42">elst_count</name></name> <operator pos:start="71:44" pos:end="71:45">&lt;=</operator> <literal type="number" pos:start="71:47" pos:end="71:47">0</literal> <operator pos:start="71:49" pos:end="71:50">||</operator> <name pos:start="71:52" pos:end="71:57">nb_old</name> <operator pos:start="71:59" pos:end="71:60">&lt;=</operator> <literal type="number" pos:start="71:62" pos:end="71:62">0</literal></expr>)</condition> <block pos:start="71:65" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:15">

        <return pos:start="73:9" pos:end="73:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="79:5" pos:end="79:38">// allocate the index ranges array</comment>

    <expr_stmt pos:start="81:5" pos:end="81:88"><expr pos:start="81:5" pos:end="81:87"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:7">msc</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:21">index_ranges</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <call pos:start="81:25" pos:end="81:87"><name pos:start="81:25" pos:end="81:33">av_malloc</name><argument_list pos:start="81:34" pos:end="81:87">(<argument pos:start="81:35" pos:end="81:86"><expr pos:start="81:35" pos:end="81:86"><operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:50"><name pos:start="81:36" pos:end="81:38">msc</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:50">elst_count</name></name> <operator pos:start="81:52" pos:end="81:52">+</operator> <literal type="number" pos:start="81:54" pos:end="81:54">1</literal><operator pos:start="81:55" pos:end="81:55">)</operator> <operator pos:start="81:57" pos:end="81:57">*</operator> <sizeof pos:start="81:59" pos:end="81:86">sizeof<argument_list pos:start="81:65" pos:end="81:86">(<argument pos:start="81:66" pos:end="81:85"><expr pos:start="81:66" pos:end="81:85"><name pos:start="81:66" pos:end="81:85"><name pos:start="81:66" pos:end="81:68">msc</name><operator pos:start="81:69" pos:end="81:70">-&gt;</operator><name pos:start="81:71" pos:end="81:82">index_ranges</name><index pos:start="81:83" pos:end="81:85">[<expr pos:start="81:84" pos:end="81:84"><literal type="number" pos:start="81:84" pos:end="81:84">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:27">(<expr pos:start="83:9" pos:end="83:26"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:26"><name pos:start="83:10" pos:end="83:12">msc</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:26">index_ranges</name></name></expr>)</condition> <block pos:start="83:29" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:15">

        <expr_stmt pos:start="85:9" pos:end="85:79"><expr pos:start="85:9" pos:end="85:78"><call pos:start="85:9" pos:end="85:78"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:78">(<argument pos:start="85:16" pos:end="85:22"><expr pos:start="85:16" pos:end="85:22"><name pos:start="85:16" pos:end="85:22"><name pos:start="85:16" pos:end="85:18">mov</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:22">fc</name></name></expr></argument>, <argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:39" pos:end="85:77"><expr pos:start="85:39" pos:end="85:77"><literal type="string" pos:start="85:39" pos:end="85:77">"Cannot allocate index ranges buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:49"><expr pos:start="91:5" pos:end="91:48"><name pos:start="91:5" pos:end="91:28"><name pos:start="91:5" pos:end="91:7">msc</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:28">current_index_range</name></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <name pos:start="91:32" pos:end="91:48"><name pos:start="91:32" pos:end="91:34">msc</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:48">index_ranges</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:48"><expr pos:start="93:5" pos:end="93:47"><name pos:start="93:5" pos:end="93:23">current_index_range</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:43"><name pos:start="93:27" pos:end="93:29">msc</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:43">index_ranges</name></name> <operator pos:start="93:45" pos:end="93:45">-</operator> <literal type="number" pos:start="93:47" pos:end="93:47">1</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="97:5" pos:end="97:46">// Clean AVStream from traces of old index</comment>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:21"><name pos:start="99:5" pos:end="99:6">st</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:21">index_entries</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:41"><expr pos:start="101:5" pos:end="101:40"><name pos:start="101:5" pos:end="101:36"><name pos:start="101:5" pos:end="101:6">st</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:36">index_entries_allocated_size</name></name> <operator pos:start="101:38" pos:end="101:38">=</operator> <literal type="number" pos:start="101:40" pos:end="101:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:29"><expr pos:start="103:5" pos:end="103:28"><name pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:6">st</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:24">nb_index_entries</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="107:5" pos:end="107:44">// Clean ctts fields of MOVStreamContext</comment>

    <expr_stmt pos:start="109:5" pos:end="109:26"><expr pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">msc</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:18">ctts_data</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:25">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:24"><expr pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:19"><name pos:start="111:5" pos:end="111:7">msc</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:19">ctts_count</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:24"><expr pos:start="113:5" pos:end="113:23"><name pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:7">msc</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:19">ctts_index</name></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <literal type="number" pos:start="113:23" pos:end="113:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:25"><expr pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:20"><name pos:start="115:5" pos:end="115:7">msc</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:20">ctts_sample</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <literal type="number" pos:start="115:24" pos:end="115:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:33"><expr pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:7">msc</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:28">ctts_allocated_size</name></name> <operator pos:start="117:30" pos:end="117:30">=</operator> <literal type="number" pos:start="117:32" pos:end="117:32">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="121:5" pos:end="121:77">// If the dts_shift is positive (in case of negative ctts values in mov),</comment>

    <comment type="line" pos:start="123:5" pos:end="123:39">// then negate the DTS by dts_shift</comment>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:27">(<expr pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:11">msc</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:22">dts_shift</name></name> <operator pos:start="125:24" pos:end="125:24">&gt;</operator> <literal type="number" pos:start="125:26" pos:end="125:26">0</literal></expr>)</condition> <block pos:start="125:29" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:104">

        <expr_stmt pos:start="127:9" pos:end="127:50"><expr pos:start="127:9" pos:end="127:49"><name pos:start="127:9" pos:end="127:31">edit_list_dts_entry_end</name> <operator pos:start="127:33" pos:end="127:34">-=</operator> <name pos:start="127:36" pos:end="127:49"><name pos:start="127:36" pos:end="127:38">msc</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:49">dts_shift</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:104"><expr pos:start="129:9" pos:end="129:103"><call pos:start="129:9" pos:end="129:103"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:103">(<argument pos:start="129:16" pos:end="129:22"><expr pos:start="129:16" pos:end="129:22"><name pos:start="129:16" pos:end="129:22"><name pos:start="129:16" pos:end="129:18">mov</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:22">fc</name></name></expr></argument>, <argument pos:start="129:25" pos:end="129:36"><expr pos:start="129:25" pos:end="129:36"><name pos:start="129:25" pos:end="129:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="129:39" pos:end="129:86"><expr pos:start="129:39" pos:end="129:86"><literal type="string" pos:start="129:39" pos:end="129:86">"Shifting DTS by %d because of negative CTTS.\n"</literal></expr></argument>, <argument pos:start="129:89" pos:end="129:102"><expr pos:start="129:89" pos:end="129:102"><name pos:start="129:89" pos:end="129:102"><name pos:start="129:89" pos:end="129:91">msc</name><operator pos:start="129:92" pos:end="129:93">-&gt;</operator><name pos:start="129:94" pos:end="129:102">dts_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:40"><expr pos:start="135:5" pos:end="135:39"><name pos:start="135:5" pos:end="135:13">start_dts</name> <operator pos:start="135:15" pos:end="135:15">=</operator> <name pos:start="135:17" pos:end="135:39">edit_list_dts_entry_end</name></expr>;</expr_stmt>



    <while pos:start="139:5" pos:end="529:5">while <condition pos:start="139:11" pos:end="141:69">(<expr pos:start="139:12" pos:end="141:68"><call pos:start="139:12" pos:end="141:68"><name pos:start="139:12" pos:end="139:30">get_edit_list_entry</name><argument_list pos:start="139:31" pos:end="141:68">(<argument pos:start="139:32" pos:end="139:34"><expr pos:start="139:32" pos:end="139:34"><name pos:start="139:32" pos:end="139:34">mov</name></expr></argument>, <argument pos:start="139:37" pos:end="139:39"><expr pos:start="139:37" pos:end="139:39"><name pos:start="139:37" pos:end="139:39">msc</name></expr></argument>, <argument pos:start="139:42" pos:end="139:56"><expr pos:start="139:42" pos:end="139:56"><name pos:start="139:42" pos:end="139:56">edit_list_index</name></expr></argument>, <argument pos:start="139:59" pos:end="139:79"><expr pos:start="139:59" pos:end="139:79"><operator pos:start="139:59" pos:end="139:59">&amp;</operator><name pos:start="139:60" pos:end="139:79">edit_list_media_time</name></expr></argument>,

                               <argument pos:start="141:32" pos:end="141:50"><expr pos:start="141:32" pos:end="141:50"><operator pos:start="141:32" pos:end="141:32">&amp;</operator><name pos:start="141:33" pos:end="141:50">edit_list_duration</name></expr></argument>, <argument pos:start="141:53" pos:end="141:67"><expr pos:start="141:53" pos:end="141:67"><name pos:start="141:53" pos:end="141:67"><name pos:start="141:53" pos:end="141:55">mov</name><operator pos:start="141:56" pos:end="141:57">-&gt;</operator><name pos:start="141:58" pos:end="141:67">time_scale</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:71" pos:end="529:5">{<block_content pos:start="143:9" pos:end="527:9">

        <expr_stmt pos:start="143:9" pos:end="145:85"><expr pos:start="143:9" pos:end="145:84"><call pos:start="143:9" pos:end="145:84"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="145:84">(<argument pos:start="143:16" pos:end="143:22"><expr pos:start="143:16" pos:end="143:22"><name pos:start="143:16" pos:end="143:22"><name pos:start="143:16" pos:end="143:18">mov</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:22">fc</name></name></expr></argument>, <argument pos:start="143:25" pos:end="143:36"><expr pos:start="143:25" pos:end="143:36"><name pos:start="143:25" pos:end="143:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="143:39" pos:end="143:125"><expr pos:start="143:39" pos:end="143:125"><literal type="string" pos:start="143:39" pos:end="143:70">"Processing st: %d, edit list %"</literal><name pos:start="143:71" pos:end="143:76">PRId64</name><literal type="string" pos:start="143:77" pos:end="143:94">" - media time: %"</literal><name pos:start="143:95" pos:end="143:100">PRId64</name><literal type="string" pos:start="143:101" pos:end="143:115">", duration: %"</literal><name pos:start="143:116" pos:end="143:121">PRId64</name><literal type="string" pos:start="143:122" pos:end="143:125">"\n"</literal></expr></argument>,

               <argument pos:start="145:16" pos:end="145:24"><expr pos:start="145:16" pos:end="145:24"><name pos:start="145:16" pos:end="145:24"><name pos:start="145:16" pos:end="145:17">st</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:24">index</name></name></expr></argument>, <argument pos:start="145:27" pos:end="145:41"><expr pos:start="145:27" pos:end="145:41"><name pos:start="145:27" pos:end="145:41">edit_list_index</name></expr></argument>, <argument pos:start="145:44" pos:end="145:63"><expr pos:start="145:44" pos:end="145:63"><name pos:start="145:44" pos:end="145:63">edit_list_media_time</name></expr></argument>, <argument pos:start="145:66" pos:end="145:83"><expr pos:start="145:66" pos:end="145:83"><name pos:start="145:66" pos:end="145:83">edit_list_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:26"><expr pos:start="147:9" pos:end="147:25"><name pos:start="147:9" pos:end="147:23">edit_list_index</name><operator pos:start="147:24" pos:end="147:25">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:56"><expr pos:start="149:9" pos:end="149:55"><name pos:start="149:9" pos:end="149:29">edit_list_dts_counter</name> <operator pos:start="149:31" pos:end="149:31">=</operator> <name pos:start="149:33" pos:end="149:55">edit_list_dts_entry_end</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:54"><expr pos:start="151:9" pos:end="151:53"><name pos:start="151:9" pos:end="151:31">edit_list_dts_entry_end</name> <operator pos:start="151:33" pos:end="151:34">+=</operator> <name pos:start="151:36" pos:end="151:53">edit_list_duration</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:32"><expr pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:27">num_discarded_begin</name> <operator pos:start="153:29" pos:end="153:29">=</operator> <literal type="number" pos:start="153:31" pos:end="153:31">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="161:9"><if pos:start="155:9" pos:end="161:9">if <condition pos:start="155:12" pos:end="155:39">(<expr pos:start="155:13" pos:end="155:38"><name pos:start="155:13" pos:end="155:32">edit_list_media_time</name> <operator pos:start="155:34" pos:end="155:35">==</operator> <operator pos:start="155:37" pos:end="155:37">-</operator><literal type="number" pos:start="155:38" pos:end="155:38">1</literal></expr>)</condition> <block pos:start="155:41" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:21">

            <expr_stmt pos:start="157:13" pos:end="157:59"><expr pos:start="157:13" pos:end="157:58"><name pos:start="157:13" pos:end="157:36">empty_edits_sum_duration</name> <operator pos:start="157:38" pos:end="157:39">+=</operator> <name pos:start="157:41" pos:end="157:58">edit_list_duration</name></expr>;</expr_stmt>

            <continue pos:start="159:13" pos:end="159:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="165:9" pos:end="165:104">// If we encounter a non-negative edit list reset the skip_samples/start_pad fields and set them</comment>

        <comment type="line" pos:start="167:9" pos:end="167:44">// according to the edit list below.</comment>

        <if_stmt pos:start="169:9" pos:end="187:9"><if pos:start="169:9" pos:end="187:9">if <condition pos:start="169:12" pos:end="169:59">(<expr pos:start="169:13" pos:end="169:58"><name pos:start="169:13" pos:end="169:36"><name pos:start="169:13" pos:end="169:14">st</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:24">codecpar</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:36">codec_type</name></name> <operator pos:start="169:38" pos:end="169:39">==</operator> <name pos:start="169:41" pos:end="169:58">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="169:61" pos:end="187:9">{<block_content pos:start="171:13" pos:end="185:54">

            <if_stmt pos:start="171:13" pos:end="179:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:46">(<expr pos:start="171:17" pos:end="171:45"><name pos:start="171:17" pos:end="171:41">first_non_zero_audio_edit</name> <operator pos:start="171:43" pos:end="171:43">&lt;</operator> <literal type="number" pos:start="171:45" pos:end="171:45">0</literal></expr>)</condition> <block pos:start="171:48" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:46">

                <expr_stmt pos:start="173:17" pos:end="173:46"><expr pos:start="173:17" pos:end="173:45"><name pos:start="173:17" pos:end="173:41">first_non_zero_audio_edit</name> <operator pos:start="173:43" pos:end="173:43">=</operator> <literal type="number" pos:start="173:45" pos:end="173:45">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="175:15" pos:end="179:13">else <block pos:start="175:20" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:46">

                <expr_stmt pos:start="177:17" pos:end="177:46"><expr pos:start="177:17" pos:end="177:45"><name pos:start="177:17" pos:end="177:41">first_non_zero_audio_edit</name> <operator pos:start="177:43" pos:end="177:43">=</operator> <literal type="number" pos:start="177:45" pos:end="177:45">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="183:13" pos:end="185:54"><if pos:start="183:13" pos:end="185:54">if <condition pos:start="183:16" pos:end="183:46">(<expr pos:start="183:17" pos:end="183:45"><name pos:start="183:17" pos:end="183:41">first_non_zero_audio_edit</name> <operator pos:start="183:43" pos:end="183:43">&gt;</operator> <literal type="number" pos:start="183:45" pos:end="183:45">0</literal></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:54"><block_content pos:start="185:17" pos:end="185:54">

                <expr_stmt pos:start="185:17" pos:end="185:54"><expr pos:start="185:17" pos:end="185:53"><name pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:18">st</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:32">skip_samples</name></name> <operator pos:start="185:34" pos:end="185:34">=</operator> <name pos:start="185:36" pos:end="185:49"><name pos:start="185:36" pos:end="185:38">msc</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:49">start_pad</name></name> <operator pos:start="185:51" pos:end="185:51">=</operator> <literal type="number" pos:start="185:53" pos:end="185:53">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="line" pos:start="191:9" pos:end="191:86">// While reordering frame index according to edit list we must handle properly</comment>

        <comment type="line" pos:start="193:9" pos:end="193:72">// the scenario when edit list entry starts from none key frame.</comment>

        <comment type="line" pos:start="195:9" pos:end="195:93">// We find closest previous key frame and preserve it and consequent frames in index.</comment>

        <comment type="line" pos:start="197:9" pos:end="197:103">// All frames which are outside edit list entry time boundaries will be dropped after decoding.</comment>

        <expr_stmt pos:start="199:9" pos:end="199:48"><expr pos:start="199:9" pos:end="199:47"><name pos:start="199:9" pos:end="199:24">search_timestamp</name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:47">edit_list_media_time</name></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="211:9"><if pos:start="201:9" pos:end="211:9">if <condition pos:start="201:12" pos:end="201:59">(<expr pos:start="201:13" pos:end="201:58"><name pos:start="201:13" pos:end="201:36"><name pos:start="201:13" pos:end="201:14">st</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:24">codecpar</name><operator pos:start="201:25" pos:end="201:26">-&gt;</operator><name pos:start="201:27" pos:end="201:36">codec_type</name></name> <operator pos:start="201:38" pos:end="201:39">==</operator> <name pos:start="201:41" pos:end="201:58">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="201:61" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:93">

            <comment type="line" pos:start="203:13" pos:end="203:104">// Audio decoders like AAC need need a decoder delay samples previous to the current sample,</comment>

            <comment type="line" pos:start="205:13" pos:end="205:99">// to correctly decode this frame. Hence for audio we seek to a frame 1 sec. before the</comment>

            <comment type="line" pos:start="207:13" pos:end="207:63">// edit_list_media_time to cover the decoder delay.</comment>

            <expr_stmt pos:start="209:13" pos:end="209:93"><expr pos:start="209:13" pos:end="209:92"><name pos:start="209:13" pos:end="209:28">search_timestamp</name> <operator pos:start="209:30" pos:end="209:30">=</operator> <call pos:start="209:32" pos:end="209:92"><name pos:start="209:32" pos:end="209:36">FFMAX</name><argument_list pos:start="209:37" pos:end="209:92">(<argument pos:start="209:38" pos:end="209:71"><expr pos:start="209:38" pos:end="209:71"><name pos:start="209:38" pos:end="209:53">search_timestamp</name> <operator pos:start="209:55" pos:end="209:55">-</operator> <name pos:start="209:57" pos:end="209:71"><name pos:start="209:57" pos:end="209:59">msc</name><operator pos:start="209:60" pos:end="209:61">-&gt;</operator><name pos:start="209:62" pos:end="209:71">time_scale</name></name></expr></argument>, <argument pos:start="209:74" pos:end="209:91"><expr pos:start="209:74" pos:end="209:91"><name pos:start="209:74" pos:end="209:81"><name pos:start="209:74" pos:end="209:78">e_old</name><index pos:start="209:79" pos:end="209:81">[<expr pos:start="209:80" pos:end="209:80"><literal type="number" pos:start="209:80" pos:end="209:80">0</literal></expr>]</index></name><operator pos:start="209:82" pos:end="209:82">.</operator><name pos:start="209:83" pos:end="209:91">timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="215:9" pos:end="243:9"><if pos:start="215:9" pos:end="243:9">if <condition pos:start="215:12" pos:end="217:83">(<expr pos:start="215:13" pos:end="217:82"><call pos:start="215:13" pos:end="217:78"><name pos:start="215:13" pos:end="215:35">find_prev_closest_index</name><argument_list pos:start="215:36" pos:end="217:78">(<argument pos:start="215:37" pos:end="215:38"><expr pos:start="215:37" pos:end="215:38"><name pos:start="215:37" pos:end="215:38">st</name></expr></argument>, <argument pos:start="215:41" pos:end="215:45"><expr pos:start="215:41" pos:end="215:45"><name pos:start="215:41" pos:end="215:45">e_old</name></expr></argument>, <argument pos:start="215:48" pos:end="215:53"><expr pos:start="215:48" pos:end="215:53"><name pos:start="215:48" pos:end="215:53">nb_old</name></expr></argument>, <argument pos:start="215:56" pos:end="215:68"><expr pos:start="215:56" pos:end="215:68"><name pos:start="215:56" pos:end="215:68">ctts_data_old</name></expr></argument>, <argument pos:start="215:71" pos:end="215:84"><expr pos:start="215:71" pos:end="215:84"><name pos:start="215:71" pos:end="215:84">ctts_count_old</name></expr></argument>, <argument pos:start="215:87" pos:end="215:102"><expr pos:start="215:87" pos:end="215:102"><name pos:start="215:87" pos:end="215:102">search_timestamp</name></expr></argument>, <argument pos:start="215:105" pos:end="215:105"><expr pos:start="215:105" pos:end="215:105"><literal type="number" pos:start="215:105" pos:end="215:105">0</literal></expr></argument>,

                                    <argument pos:start="217:37" pos:end="217:42"><expr pos:start="217:37" pos:end="217:42"><operator pos:start="217:37" pos:end="217:37">&amp;</operator><name pos:start="217:38" pos:end="217:42">index</name></expr></argument>, <argument pos:start="217:45" pos:end="217:59"><expr pos:start="217:45" pos:end="217:59"><operator pos:start="217:45" pos:end="217:45">&amp;</operator><name pos:start="217:46" pos:end="217:59">ctts_index_old</name></expr></argument>, <argument pos:start="217:62" pos:end="217:77"><expr pos:start="217:62" pos:end="217:77"><operator pos:start="217:62" pos:end="217:62">&amp;</operator><name pos:start="217:63" pos:end="217:77">ctts_sample_old</name></expr></argument>)</argument_list></call> <operator pos:start="217:80" pos:end="217:80">&lt;</operator> <literal type="number" pos:start="217:82" pos:end="217:82">0</literal></expr>)</condition> <block pos:start="217:85" pos:end="243:9">{<block_content pos:start="219:13" pos:end="241:13">

            <expr_stmt pos:start="219:13" pos:end="223:65"><expr pos:start="219:13" pos:end="223:64"><call pos:start="219:13" pos:end="223:64"><name pos:start="219:13" pos:end="219:18">av_log</name><argument_list pos:start="219:19" pos:end="223:64">(<argument pos:start="219:20" pos:end="219:26"><expr pos:start="219:20" pos:end="219:26"><name pos:start="219:20" pos:end="219:26"><name pos:start="219:20" pos:end="219:22">mov</name><operator pos:start="219:23" pos:end="219:24">-&gt;</operator><name pos:start="219:25" pos:end="219:26">fc</name></name></expr></argument>, <argument pos:start="219:29" pos:end="219:42"><expr pos:start="219:29" pos:end="219:42"><name pos:start="219:29" pos:end="219:42">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="221:20" pos:end="221:109"><expr pos:start="221:20" pos:end="221:109"><literal type="string" pos:start="221:20" pos:end="221:40">"st: %d edit list: %"</literal><name pos:start="221:41" pos:end="221:46">PRId64</name><literal type="string" pos:start="221:47" pos:end="221:99">" Missing key frame while searching for timestamp: %"</literal><name pos:start="221:100" pos:end="221:105">PRId64</name><literal type="string" pos:start="221:106" pos:end="221:109">"\n"</literal></expr></argument>,

                   <argument pos:start="223:20" pos:end="223:28"><expr pos:start="223:20" pos:end="223:28"><name pos:start="223:20" pos:end="223:28"><name pos:start="223:20" pos:end="223:21">st</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:28">index</name></name></expr></argument>, <argument pos:start="223:31" pos:end="223:45"><expr pos:start="223:31" pos:end="223:45"><name pos:start="223:31" pos:end="223:45">edit_list_index</name></expr></argument>, <argument pos:start="223:48" pos:end="223:63"><expr pos:start="223:48" pos:end="223:63"><name pos:start="223:48" pos:end="223:63">search_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="241:13"><if pos:start="225:13" pos:end="241:13">if <condition pos:start="225:16" pos:end="227:87">(<expr pos:start="225:17" pos:end="227:86"><call pos:start="225:17" pos:end="227:82"><name pos:start="225:17" pos:end="225:39">find_prev_closest_index</name><argument_list pos:start="225:40" pos:end="227:82">(<argument pos:start="225:41" pos:end="225:42"><expr pos:start="225:41" pos:end="225:42"><name pos:start="225:41" pos:end="225:42">st</name></expr></argument>, <argument pos:start="225:45" pos:end="225:49"><expr pos:start="225:45" pos:end="225:49"><name pos:start="225:45" pos:end="225:49">e_old</name></expr></argument>, <argument pos:start="225:52" pos:end="225:57"><expr pos:start="225:52" pos:end="225:57"><name pos:start="225:52" pos:end="225:57">nb_old</name></expr></argument>, <argument pos:start="225:60" pos:end="225:72"><expr pos:start="225:60" pos:end="225:72"><name pos:start="225:60" pos:end="225:72">ctts_data_old</name></expr></argument>, <argument pos:start="225:75" pos:end="225:88"><expr pos:start="225:75" pos:end="225:88"><name pos:start="225:75" pos:end="225:88">ctts_count_old</name></expr></argument>, <argument pos:start="225:91" pos:end="225:106"><expr pos:start="225:91" pos:end="225:106"><name pos:start="225:91" pos:end="225:106">search_timestamp</name></expr></argument>, <argument pos:start="225:109" pos:end="225:123"><expr pos:start="225:109" pos:end="225:123"><name pos:start="225:109" pos:end="225:123">AVSEEK_FLAG_ANY</name></expr></argument>,

                                        <argument pos:start="227:41" pos:end="227:46"><expr pos:start="227:41" pos:end="227:46"><operator pos:start="227:41" pos:end="227:41">&amp;</operator><name pos:start="227:42" pos:end="227:46">index</name></expr></argument>, <argument pos:start="227:49" pos:end="227:63"><expr pos:start="227:49" pos:end="227:63"><operator pos:start="227:49" pos:end="227:49">&amp;</operator><name pos:start="227:50" pos:end="227:63">ctts_index_old</name></expr></argument>, <argument pos:start="227:66" pos:end="227:81"><expr pos:start="227:66" pos:end="227:81"><operator pos:start="227:66" pos:end="227:66">&amp;</operator><name pos:start="227:67" pos:end="227:81">ctts_sample_old</name></expr></argument>)</argument_list></call> <operator pos:start="227:84" pos:end="227:84">&lt;</operator> <literal type="number" pos:start="227:86" pos:end="227:86">0</literal></expr>)</condition> <block pos:start="227:89" pos:end="241:13">{<block_content pos:start="229:17" pos:end="239:36">

                <expr_stmt pos:start="229:17" pos:end="233:69"><expr pos:start="229:17" pos:end="233:68"><call pos:start="229:17" pos:end="233:68"><name pos:start="229:17" pos:end="229:22">av_log</name><argument_list pos:start="229:23" pos:end="233:68">(<argument pos:start="229:24" pos:end="229:30"><expr pos:start="229:24" pos:end="229:30"><name pos:start="229:24" pos:end="229:30"><name pos:start="229:24" pos:end="229:26">mov</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:30">fc</name></name></expr></argument>, <argument pos:start="229:33" pos:end="229:46"><expr pos:start="229:33" pos:end="229:46"><name pos:start="229:33" pos:end="229:46">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="231:24" pos:end="231:109"><expr pos:start="231:24" pos:end="231:109"><literal type="string" pos:start="231:24" pos:end="231:43">"st: %d edit list %"</literal><name pos:start="231:44" pos:end="231:49">PRId64</name><literal type="string" pos:start="231:50" pos:end="231:98">" Cannot find an index entry before timestamp: %"</literal><name pos:start="231:99" pos:end="231:104">PRId64</name><literal type="string" pos:start="231:105" pos:end="231:109">".\n"</literal></expr></argument>,

                       <argument pos:start="233:24" pos:end="233:32"><expr pos:start="233:24" pos:end="233:32"><name pos:start="233:24" pos:end="233:32"><name pos:start="233:24" pos:end="233:25">st</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:32">index</name></name></expr></argument>, <argument pos:start="233:35" pos:end="233:49"><expr pos:start="233:35" pos:end="233:49"><name pos:start="233:35" pos:end="233:49">edit_list_index</name></expr></argument>, <argument pos:start="233:52" pos:end="233:67"><expr pos:start="233:52" pos:end="233:67"><name pos:start="233:52" pos:end="233:67">search_timestamp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:26"><expr pos:start="235:17" pos:end="235:25"><name pos:start="235:17" pos:end="235:21">index</name> <operator pos:start="235:23" pos:end="235:23">=</operator> <literal type="number" pos:start="235:25" pos:end="235:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:35"><expr pos:start="237:17" pos:end="237:34"><name pos:start="237:17" pos:end="237:30">ctts_index_old</name> <operator pos:start="237:32" pos:end="237:32">=</operator> <literal type="number" pos:start="237:34" pos:end="237:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:36"><expr pos:start="239:17" pos:end="239:35"><name pos:start="239:17" pos:end="239:31">ctts_sample_old</name> <operator pos:start="239:33" pos:end="239:33">=</operator> <literal type="number" pos:start="239:35" pos:end="239:35">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:32"><expr pos:start="245:9" pos:end="245:31"><name pos:start="245:9" pos:end="245:15">current</name> <operator pos:start="245:17" pos:end="245:17">=</operator> <name pos:start="245:19" pos:end="245:23">e_old</name> <operator pos:start="245:25" pos:end="245:25">+</operator> <name pos:start="245:27" pos:end="245:31">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:54"><expr pos:start="247:9" pos:end="247:53"><name pos:start="247:9" pos:end="247:35">edit_list_start_ctts_sample</name> <operator pos:start="247:37" pos:end="247:37">=</operator> <name pos:start="247:39" pos:end="247:53">ctts_sample_old</name></expr>;</expr_stmt>



        <comment type="line" pos:start="251:9" pos:end="251:67">// Iterate over index and arrange it according to edit list</comment>

        <expr_stmt pos:start="253:9" pos:end="253:40"><expr pos:start="253:9" pos:end="253:39"><name pos:start="253:9" pos:end="253:35">edit_list_start_encountered</name> <operator pos:start="253:37" pos:end="253:37">=</operator> <literal type="number" pos:start="253:39" pos:end="253:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:38"><expr pos:start="255:9" pos:end="255:37"><name pos:start="255:9" pos:end="255:33">found_keyframe_after_edit</name> <operator pos:start="255:35" pos:end="255:35">=</operator> <literal type="number" pos:start="255:37" pos:end="255:37">0</literal></expr>;</expr_stmt>

        <for pos:start="257:9" pos:end="527:9">for <control pos:start="257:13" pos:end="257:55">(<init pos:start="257:14" pos:end="257:14">;</init> <condition pos:start="257:16" pos:end="257:35"><expr pos:start="257:16" pos:end="257:34"><name pos:start="257:16" pos:end="257:22">current</name> <operator pos:start="257:24" pos:end="257:24">&lt;</operator> <name pos:start="257:26" pos:end="257:34">e_old_end</name></expr>;</condition> <incr pos:start="257:37" pos:end="257:54"><expr pos:start="257:37" pos:end="257:45"><name pos:start="257:37" pos:end="257:43">current</name><operator pos:start="257:44" pos:end="257:45">++</operator></expr><operator pos:start="257:46" pos:end="257:46">,</operator> <expr pos:start="257:48" pos:end="257:54"><name pos:start="257:48" pos:end="257:52">index</name><operator pos:start="257:53" pos:end="257:54">++</operator></expr></incr>)</control> <block pos:start="257:57" pos:end="527:9">{<block_content pos:start="261:13" pos:end="525:13">

            <comment type="line" pos:start="259:13" pos:end="259:68">// check  if frame outside edit list mark it for discard</comment>

            <expr_stmt pos:start="261:13" pos:end="263:98"><expr pos:start="261:13" pos:end="263:97"><name pos:start="261:13" pos:end="261:26">frame_duration</name> <operator pos:start="261:28" pos:end="261:28">=</operator> <ternary pos:start="261:30" pos:end="263:97"><condition pos:start="261:30" pos:end="261:57"><expr pos:start="261:30" pos:end="261:55"><operator pos:start="261:30" pos:end="261:30">(</operator><name pos:start="261:31" pos:end="261:37">current</name> <operator pos:start="261:39" pos:end="261:39">+</operator> <literal type="number" pos:start="261:41" pos:end="261:41">1</literal> <operator pos:start="261:43" pos:end="261:43">&lt;</operator>  <name pos:start="261:46" pos:end="261:54">e_old_end</name><operator pos:start="261:55" pos:end="261:55">)</operator></expr> ?</condition><then pos:start="263:30" pos:end="263:76">

                             <expr pos:start="263:30" pos:end="263:76"><operator pos:start="263:30" pos:end="263:30">(</operator><operator pos:start="263:31" pos:end="263:31">(</operator><name pos:start="263:32" pos:end="263:38">current</name> <operator pos:start="263:40" pos:end="263:40">+</operator> <literal type="number" pos:start="263:42" pos:end="263:42">1</literal><operator pos:start="263:43" pos:end="263:43">)</operator><operator pos:start="263:44" pos:end="263:45">-&gt;</operator><name pos:start="263:46" pos:end="263:54">timestamp</name> <operator pos:start="263:56" pos:end="263:56">-</operator> <name pos:start="263:58" pos:end="263:75"><name pos:start="263:58" pos:end="263:64">current</name><operator pos:start="263:65" pos:end="263:66">-&gt;</operator><name pos:start="263:67" pos:end="263:75">timestamp</name></name><operator pos:start="263:76" pos:end="263:76">)</operator></expr> </then><else pos:start="263:78" pos:end="263:97">: <expr pos:start="263:80" pos:end="263:97"><name pos:start="263:80" pos:end="263:97">edit_list_duration</name></expr></else></ternary></expr>;</expr_stmt>



            <expr_stmt pos:start="267:13" pos:end="267:35"><expr pos:start="267:13" pos:end="267:34"><name pos:start="267:13" pos:end="267:17">flags</name> <operator pos:start="267:19" pos:end="267:19">=</operator> <name pos:start="267:21" pos:end="267:34"><name pos:start="267:21" pos:end="267:27">current</name><operator pos:start="267:28" pos:end="267:29">-&gt;</operator><name pos:start="267:30" pos:end="267:34">flags</name></name></expr>;</expr_stmt>



            <comment type="line" pos:start="271:13" pos:end="271:53">// frames (pts) before or after edit list</comment>

            <expr_stmt pos:start="273:13" pos:end="273:59"><expr pos:start="273:13" pos:end="273:58"><name pos:start="273:13" pos:end="273:20">curr_cts</name> <operator pos:start="273:22" pos:end="273:22">=</operator> <name pos:start="273:24" pos:end="273:41"><name pos:start="273:24" pos:end="273:30">current</name><operator pos:start="273:31" pos:end="273:32">-&gt;</operator><name pos:start="273:33" pos:end="273:41">timestamp</name></name> <operator pos:start="273:43" pos:end="273:43">+</operator> <name pos:start="273:45" pos:end="273:58"><name pos:start="273:45" pos:end="273:47">msc</name><operator pos:start="273:48" pos:end="273:49">-&gt;</operator><name pos:start="273:50" pos:end="273:58">dts_shift</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:26"><expr pos:start="275:13" pos:end="275:25"><name pos:start="275:13" pos:end="275:21">curr_ctts</name> <operator pos:start="275:23" pos:end="275:23">=</operator> <literal type="number" pos:start="275:25" pos:end="275:25">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="279:13" pos:end="321:13"><if pos:start="279:13" pos:end="321:13">if <condition pos:start="279:16" pos:end="279:65">(<expr pos:start="279:17" pos:end="279:64"><name pos:start="279:17" pos:end="279:29">ctts_data_old</name> <operator pos:start="279:31" pos:end="279:32">&amp;&amp;</operator> <name pos:start="279:34" pos:end="279:47">ctts_index_old</name> <operator pos:start="279:49" pos:end="279:49">&lt;</operator> <name pos:start="279:51" pos:end="279:64">ctts_count_old</name></expr>)</condition> <block pos:start="279:67" pos:end="321:13">{<block_content pos:start="281:17" pos:end="319:17">

                <expr_stmt pos:start="281:17" pos:end="281:67"><expr pos:start="281:17" pos:end="281:66"><name pos:start="281:17" pos:end="281:25">curr_ctts</name> <operator pos:start="281:27" pos:end="281:27">=</operator> <name pos:start="281:29" pos:end="281:57"><name pos:start="281:29" pos:end="281:41">ctts_data_old</name><index pos:start="281:42" pos:end="281:57">[<expr pos:start="281:43" pos:end="281:56"><name pos:start="281:43" pos:end="281:56">ctts_index_old</name></expr>]</index></name><operator pos:start="281:58" pos:end="281:58">.</operator><name pos:start="281:59" pos:end="281:66">duration</name></expr>;</expr_stmt>

                <expr_stmt pos:start="283:17" pos:end="285:76"><expr pos:start="283:17" pos:end="285:75"><call pos:start="283:17" pos:end="285:75"><name pos:start="283:17" pos:end="283:22">av_log</name><argument_list pos:start="283:23" pos:end="285:75">(<argument pos:start="283:24" pos:end="283:30"><expr pos:start="283:24" pos:end="283:30"><name pos:start="283:24" pos:end="283:30"><name pos:start="283:24" pos:end="283:26">mov</name><operator pos:start="283:27" pos:end="283:28">-&gt;</operator><name pos:start="283:29" pos:end="283:30">fc</name></name></expr></argument>, <argument pos:start="283:33" pos:end="283:44"><expr pos:start="283:33" pos:end="283:44"><name pos:start="283:33" pos:end="283:44">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="283:47" pos:end="283:127"><expr pos:start="283:47" pos:end="283:127"><literal type="string" pos:start="283:47" pos:end="283:55">"stts: %"</literal><name pos:start="283:56" pos:end="283:61">PRId64</name><literal type="string" pos:start="283:62" pos:end="283:71">" ctts: %"</literal><name pos:start="283:72" pos:end="283:77">PRId64</name><literal type="string" pos:start="283:78" pos:end="283:94">", ctts_index: %"</literal><name pos:start="283:95" pos:end="283:100">PRId64</name><literal type="string" pos:start="283:101" pos:end="283:117">", ctts_count: %"</literal><name pos:start="283:118" pos:end="283:123">PRId64</name><literal type="string" pos:start="283:124" pos:end="283:127">"\n"</literal></expr></argument>,

                       <argument pos:start="285:24" pos:end="285:31"><expr pos:start="285:24" pos:end="285:31"><name pos:start="285:24" pos:end="285:31">curr_cts</name></expr></argument>, <argument pos:start="285:34" pos:end="285:42"><expr pos:start="285:34" pos:end="285:42"><name pos:start="285:34" pos:end="285:42">curr_ctts</name></expr></argument>, <argument pos:start="285:45" pos:end="285:58"><expr pos:start="285:45" pos:end="285:58"><name pos:start="285:45" pos:end="285:58">ctts_index_old</name></expr></argument>, <argument pos:start="285:61" pos:end="285:74"><expr pos:start="285:61" pos:end="285:74"><name pos:start="285:61" pos:end="285:74">ctts_count_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:38"><expr pos:start="287:17" pos:end="287:37"><name pos:start="287:17" pos:end="287:24">curr_cts</name> <operator pos:start="287:26" pos:end="287:27">+=</operator> <name pos:start="287:29" pos:end="287:37">curr_ctts</name></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:34"><expr pos:start="289:17" pos:end="289:33"><name pos:start="289:17" pos:end="289:31">ctts_sample_old</name><operator pos:start="289:32" pos:end="289:33">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="291:17" pos:end="319:17"><if pos:start="291:17" pos:end="319:17">if <condition pos:start="291:20" pos:end="291:75">(<expr pos:start="291:21" pos:end="291:74"><name pos:start="291:21" pos:end="291:35">ctts_sample_old</name> <operator pos:start="291:37" pos:end="291:38">==</operator> <name pos:start="291:40" pos:end="291:68"><name pos:start="291:40" pos:end="291:52">ctts_data_old</name><index pos:start="291:53" pos:end="291:68">[<expr pos:start="291:54" pos:end="291:67"><name pos:start="291:54" pos:end="291:67">ctts_index_old</name></expr>]</index></name><operator pos:start="291:69" pos:end="291:69">.</operator><name pos:start="291:70" pos:end="291:74">count</name></expr>)</condition> <block pos:start="291:77" pos:end="319:17">{<block_content pos:start="293:21" pos:end="317:52">

                    <if_stmt pos:start="293:21" pos:end="311:21"><if pos:start="293:21" pos:end="311:21">if <condition pos:start="293:24" pos:end="299:85">(<expr pos:start="293:25" pos:end="299:84"><call pos:start="293:25" pos:end="299:78"><name pos:start="293:25" pos:end="293:38">add_ctts_entry</name><argument_list pos:start="293:39" pos:end="299:78">(<argument pos:start="293:40" pos:end="293:54"><expr pos:start="293:40" pos:end="293:54"><operator pos:start="293:40" pos:end="293:40">&amp;</operator><name pos:start="293:41" pos:end="293:54"><name pos:start="293:41" pos:end="293:43">msc</name><operator pos:start="293:44" pos:end="293:45">-&gt;</operator><name pos:start="293:46" pos:end="293:54">ctts_data</name></name></expr></argument>, <argument pos:start="293:57" pos:end="293:72"><expr pos:start="293:57" pos:end="293:72"><operator pos:start="293:57" pos:end="293:57">&amp;</operator><name pos:start="293:58" pos:end="293:72"><name pos:start="293:58" pos:end="293:60">msc</name><operator pos:start="293:61" pos:end="293:62">-&gt;</operator><name pos:start="293:63" pos:end="293:72">ctts_count</name></name></expr></argument>,

                                       <argument pos:start="295:40" pos:end="295:64"><expr pos:start="295:40" pos:end="295:64"><operator pos:start="295:40" pos:end="295:40">&amp;</operator><name pos:start="295:41" pos:end="295:64"><name pos:start="295:41" pos:end="295:43">msc</name><operator pos:start="295:44" pos:end="295:45">-&gt;</operator><name pos:start="295:46" pos:end="295:64">ctts_allocated_size</name></name></expr></argument>,

                                       <argument pos:start="297:40" pos:end="297:104"><expr pos:start="297:40" pos:end="297:104"><name pos:start="297:40" pos:end="297:68"><name pos:start="297:40" pos:end="297:52">ctts_data_old</name><index pos:start="297:53" pos:end="297:68">[<expr pos:start="297:54" pos:end="297:67"><name pos:start="297:54" pos:end="297:67">ctts_index_old</name></expr>]</index></name><operator pos:start="297:69" pos:end="297:69">.</operator><name pos:start="297:70" pos:end="297:74">count</name> <operator pos:start="297:76" pos:end="297:76">-</operator> <name pos:start="297:78" pos:end="297:104">edit_list_start_ctts_sample</name></expr></argument>,

                                       <argument pos:start="299:40" pos:end="299:77"><expr pos:start="299:40" pos:end="299:77"><name pos:start="299:40" pos:end="299:68"><name pos:start="299:40" pos:end="299:52">ctts_data_old</name><index pos:start="299:53" pos:end="299:68">[<expr pos:start="299:54" pos:end="299:67"><name pos:start="299:54" pos:end="299:67">ctts_index_old</name></expr>]</index></name><operator pos:start="299:69" pos:end="299:69">.</operator><name pos:start="299:70" pos:end="299:77">duration</name></expr></argument>)</argument_list></call> <operator pos:start="299:80" pos:end="299:81">==</operator> <operator pos:start="299:83" pos:end="299:83">-</operator><literal type="number" pos:start="299:84" pos:end="299:84">1</literal></expr>)</condition> <block pos:start="299:87" pos:end="311:21">{<block_content pos:start="301:25" pos:end="309:30">

                        <expr_stmt pos:start="301:25" pos:end="307:71"><expr pos:start="301:25" pos:end="307:70"><call pos:start="301:25" pos:end="307:70"><name pos:start="301:25" pos:end="301:30">av_log</name><argument_list pos:start="301:31" pos:end="307:70">(<argument pos:start="301:32" pos:end="301:38"><expr pos:start="301:32" pos:end="301:38"><name pos:start="301:32" pos:end="301:38"><name pos:start="301:32" pos:end="301:34">mov</name><operator pos:start="301:35" pos:end="301:36">-&gt;</operator><name pos:start="301:37" pos:end="301:38">fc</name></name></expr></argument>, <argument pos:start="301:41" pos:end="301:52"><expr pos:start="301:41" pos:end="301:52"><name pos:start="301:41" pos:end="301:52">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="301:55" pos:end="301:107"><expr pos:start="301:55" pos:end="301:107"><literal type="string" pos:start="301:55" pos:end="301:79">"Cannot add CTTS entry %"</literal><name pos:start="301:80" pos:end="301:85">PRId64</name><literal type="string" pos:start="301:86" pos:end="301:92">" - {%"</literal><name pos:start="301:93" pos:end="301:98">PRId64</name><literal type="string" pos:start="301:99" pos:end="301:107">", %d}\n"</literal></expr></argument>,

                               <argument pos:start="303:32" pos:end="303:45"><expr pos:start="303:32" pos:end="303:45"><name pos:start="303:32" pos:end="303:45">ctts_index_old</name></expr></argument>,

                               <argument pos:start="305:32" pos:end="305:96"><expr pos:start="305:32" pos:end="305:96"><name pos:start="305:32" pos:end="305:60"><name pos:start="305:32" pos:end="305:44">ctts_data_old</name><index pos:start="305:45" pos:end="305:60">[<expr pos:start="305:46" pos:end="305:59"><name pos:start="305:46" pos:end="305:59">ctts_index_old</name></expr>]</index></name><operator pos:start="305:61" pos:end="305:61">.</operator><name pos:start="305:62" pos:end="305:66">count</name> <operator pos:start="305:68" pos:end="305:68">-</operator> <name pos:start="305:70" pos:end="305:96">edit_list_start_ctts_sample</name></expr></argument>,

                               <argument pos:start="307:32" pos:end="307:69"><expr pos:start="307:32" pos:end="307:69"><name pos:start="307:32" pos:end="307:60"><name pos:start="307:32" pos:end="307:44">ctts_data_old</name><index pos:start="307:45" pos:end="307:60">[<expr pos:start="307:46" pos:end="307:59"><name pos:start="307:46" pos:end="307:59">ctts_index_old</name></expr>]</index></name><operator pos:start="307:61" pos:end="307:61">.</operator><name pos:start="307:62" pos:end="307:69">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="309:25" pos:end="309:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="313:21" pos:end="313:37"><expr pos:start="313:21" pos:end="313:36"><name pos:start="313:21" pos:end="313:34">ctts_index_old</name><operator pos:start="313:35" pos:end="313:36">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="315:21" pos:end="315:40"><expr pos:start="315:21" pos:end="315:39"><name pos:start="315:21" pos:end="315:35">ctts_sample_old</name> <operator pos:start="315:37" pos:end="315:37">=</operator> <literal type="number" pos:start="315:39" pos:end="315:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:52"><expr pos:start="317:21" pos:end="317:51"><name pos:start="317:21" pos:end="317:47">edit_list_start_ctts_sample</name> <operator pos:start="317:49" pos:end="317:49">=</operator> <literal type="number" pos:start="317:51" pos:end="317:51">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="325:13" pos:end="437:13"><if pos:start="325:13" pos:end="406:13">if <condition pos:start="325:16" pos:end="325:107">(<expr pos:start="325:17" pos:end="325:106"><name pos:start="325:17" pos:end="325:24">curr_cts</name> <operator pos:start="325:26" pos:end="325:26">&lt;</operator> <name pos:start="325:28" pos:end="325:47">edit_list_media_time</name> <operator pos:start="325:49" pos:end="325:50">||</operator> <name pos:start="325:52" pos:end="325:59">curr_cts</name> <operator pos:start="325:61" pos:end="325:62">&gt;=</operator> <operator pos:start="325:64" pos:end="325:64">(</operator><name pos:start="325:65" pos:end="325:82">edit_list_duration</name> <operator pos:start="325:84" pos:end="325:84">+</operator> <name pos:start="325:86" pos:end="325:105">edit_list_media_time</name><operator pos:start="325:106" pos:end="325:106">)</operator></expr>)</condition> <block pos:start="325:109" pos:end="406:13">{<block_content pos:start="327:17" pos:end="404:17">

                <if_stmt pos:start="327:17" pos:end="404:17"><if pos:start="327:17" pos:end="366:17">if <condition pos:start="327:20" pos:end="331:50">(<expr pos:start="327:21" pos:end="331:49"><name pos:start="327:21" pos:end="327:44"><name pos:start="327:21" pos:end="327:22">st</name><operator pos:start="327:23" pos:end="327:24">-&gt;</operator><name pos:start="327:25" pos:end="327:32">codecpar</name><operator pos:start="327:33" pos:end="327:34">-&gt;</operator><name pos:start="327:35" pos:end="327:44">codec_type</name></name> <operator pos:start="327:46" pos:end="327:47">==</operator> <name pos:start="327:49" pos:end="327:66">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="327:68" pos:end="327:69">&amp;&amp;</operator> <name pos:start="327:71" pos:end="327:92"><name pos:start="327:71" pos:end="327:72">st</name><operator pos:start="327:73" pos:end="327:74">-&gt;</operator><name pos:start="327:75" pos:end="327:82">codecpar</name><operator pos:start="327:83" pos:end="327:84">-&gt;</operator><name pos:start="327:85" pos:end="327:92">codec_id</name></name> <operator pos:start="327:94" pos:end="327:95">!=</operator> <name pos:start="327:97" pos:end="327:114">AV_CODEC_ID_VORBIS</name> <operator pos:start="327:116" pos:end="327:117">&amp;&amp;</operator>

                    <name pos:start="329:21" pos:end="329:82"><name pos:start="329:21" pos:end="329:28">curr_cts</name> <argument_list type="generic" pos:start="329:30" pos:end="329:82">&lt; <argument pos:start="329:32" pos:end="329:80"><expr pos:start="329:32" pos:end="329:80"><name pos:start="329:32" pos:end="329:51">edit_list_media_time</name> <operator pos:start="329:53" pos:end="329:54">&amp;&amp;</operator> <name pos:start="329:56" pos:end="329:63">curr_cts</name> <operator pos:start="329:65" pos:end="329:65">+</operator> <name pos:start="329:67" pos:end="329:80">frame_duration</name></expr></argument> &gt;</argument_list></name> <name pos:start="329:84" pos:end="329:103">edit_list_media_time</name> <operator pos:start="329:105" pos:end="329:106">&amp;&amp;</operator>

                    <name pos:start="331:21" pos:end="331:45">first_non_zero_audio_edit</name> <operator pos:start="331:47" pos:end="331:47">&gt;</operator> <literal type="number" pos:start="331:49" pos:end="331:49">0</literal></expr>)</condition> <block pos:start="331:52" pos:end="366:17">{<block_content pos:start="333:21" pos:end="364:133">

                    <expr_stmt pos:start="333:21" pos:end="333:74"><expr pos:start="333:21" pos:end="333:73"><name pos:start="333:21" pos:end="333:39">packet_skip_samples</name> <operator pos:start="333:41" pos:end="333:41">=</operator> <name pos:start="333:43" pos:end="333:62">edit_list_media_time</name> <operator pos:start="333:64" pos:end="333:64">-</operator> <name pos:start="333:66" pos:end="333:73">curr_cts</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="335:21" pos:end="335:60"><expr pos:start="335:21" pos:end="335:59"><name pos:start="335:21" pos:end="335:36"><name pos:start="335:21" pos:end="335:22">st</name><operator pos:start="335:23" pos:end="335:24">-&gt;</operator><name pos:start="335:25" pos:end="335:36">skip_samples</name></name> <operator pos:start="335:38" pos:end="335:39">+=</operator> <name pos:start="335:41" pos:end="335:59">packet_skip_samples</name></expr>;</expr_stmt>



                    <comment type="line" pos:start="339:21" pos:end="339:92">// Shift the index entry timestamp by packet_skip_samples to be correct.</comment>

                    <expr_stmt pos:start="341:21" pos:end="341:65"><expr pos:start="341:21" pos:end="341:64"><name pos:start="341:21" pos:end="341:41">edit_list_dts_counter</name> <operator pos:start="341:43" pos:end="341:44">-=</operator> <name pos:start="341:46" pos:end="341:64">packet_skip_samples</name></expr>;</expr_stmt>

                    <if_stmt pos:start="343:21" pos:end="360:21"><if pos:start="343:21" pos:end="360:21">if <condition pos:start="343:24" pos:end="343:57">(<expr pos:start="343:25" pos:end="343:56"><name pos:start="343:25" pos:end="343:51">edit_list_start_encountered</name> <operator pos:start="343:53" pos:end="343:54">==</operator> <literal type="number" pos:start="343:56" pos:end="343:56">0</literal></expr>)</condition>  <block pos:start="343:60" pos:end="360:21">{<block_content pos:start="345:25" pos:end="358:25">

                        <expr_stmt pos:start="345:25" pos:end="345:56"><expr pos:start="345:25" pos:end="345:55"><name pos:start="345:25" pos:end="345:51">edit_list_start_encountered</name> <operator pos:start="345:53" pos:end="345:53">=</operator> <literal type="number" pos:start="345:55" pos:end="345:55">1</literal></expr>;</expr_stmt>

                        <comment type="line" pos:start="347:25" pos:end="347:115">// Make timestamps strictly monotonically increasing for audio, by rewriting timestamps for</comment>

                        <comment type="line" pos:start="349:25" pos:end="349:45">// discarded packets.</comment>

                        <if_stmt pos:start="351:25" pos:end="358:25"><if pos:start="351:25" pos:end="358:25">if <condition pos:start="351:28" pos:end="351:50">(<expr pos:start="351:29" pos:end="351:49"><name pos:start="351:29" pos:end="351:49">frame_duration_buffer</name></expr>)</condition> <block pos:start="351:52" pos:end="358:25">{<block_content pos:start="353:29" pos:end="355:99">

                            <expr_stmt pos:start="353:29" pos:end="355:99"><expr pos:start="353:29" pos:end="355:98"><call pos:start="353:29" pos:end="355:98"><name pos:start="353:29" pos:end="353:54">fix_index_entry_timestamps</name><argument_list pos:start="353:55" pos:end="355:98">(<argument pos:start="353:56" pos:end="353:57"><expr pos:start="353:56" pos:end="353:57"><name pos:start="353:56" pos:end="353:57">st</name></expr></argument>, <argument pos:start="353:60" pos:end="353:79"><expr pos:start="353:60" pos:end="353:79"><name pos:start="353:60" pos:end="353:79"><name pos:start="353:60" pos:end="353:61">st</name><operator pos:start="353:62" pos:end="353:63">-&gt;</operator><name pos:start="353:64" pos:end="353:79">nb_index_entries</name></name></expr></argument>, <argument pos:start="353:82" pos:end="353:102"><expr pos:start="353:82" pos:end="353:102"><name pos:start="353:82" pos:end="353:102">edit_list_dts_counter</name></expr></argument>,

                                                       <argument pos:start="355:56" pos:end="355:76"><expr pos:start="355:56" pos:end="355:76"><name pos:start="355:56" pos:end="355:76">frame_duration_buffer</name></expr></argument>, <argument pos:start="355:79" pos:end="355:97"><expr pos:start="355:79" pos:end="355:97"><name pos:start="355:79" pos:end="355:97">num_discarded_begin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="364:21" pos:end="364:133"><expr pos:start="364:21" pos:end="364:132"><call pos:start="364:21" pos:end="364:132"><name pos:start="364:21" pos:end="364:26">av_log</name><argument_list pos:start="364:27" pos:end="364:132">(<argument pos:start="364:28" pos:end="364:34"><expr pos:start="364:28" pos:end="364:34"><name pos:start="364:28" pos:end="364:34"><name pos:start="364:28" pos:end="364:30">mov</name><operator pos:start="364:31" pos:end="364:32">-&gt;</operator><name pos:start="364:33" pos:end="364:34">fc</name></name></expr></argument>, <argument pos:start="364:37" pos:end="364:48"><expr pos:start="364:37" pos:end="364:48"><name pos:start="364:37" pos:end="364:48">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="364:51" pos:end="364:100"><expr pos:start="364:51" pos:end="364:100"><literal type="string" pos:start="364:51" pos:end="364:90">"skip %d audio samples from curr_cts: %"</literal><name pos:start="364:91" pos:end="364:96">PRId64</name><literal type="string" pos:start="364:97" pos:end="364:100">"\n"</literal></expr></argument>, <argument pos:start="364:103" pos:end="364:121"><expr pos:start="364:103" pos:end="364:121"><name pos:start="364:103" pos:end="364:121">packet_skip_samples</name></expr></argument>, <argument pos:start="364:124" pos:end="364:131"><expr pos:start="364:124" pos:end="364:131"><name pos:start="364:124" pos:end="364:131">curr_cts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="366:19" pos:end="404:17">else <block pos:start="366:24" pos:end="404:17">{<block_content pos:start="368:21" pos:end="402:21">

                    <expr_stmt pos:start="368:21" pos:end="368:51"><expr pos:start="368:21" pos:end="368:50"><name pos:start="368:21" pos:end="368:25">flags</name> <operator pos:start="368:27" pos:end="368:28">|=</operator> <name pos:start="368:30" pos:end="368:50">AVINDEX_DISCARD_FRAME</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="370:21" pos:end="370:120"><expr pos:start="370:21" pos:end="370:119"><call pos:start="370:21" pos:end="370:119"><name pos:start="370:21" pos:end="370:26">av_log</name><argument_list pos:start="370:27" pos:end="370:119">(<argument pos:start="370:28" pos:end="370:34"><expr pos:start="370:28" pos:end="370:34"><name pos:start="370:28" pos:end="370:34"><name pos:start="370:28" pos:end="370:30">mov</name><operator pos:start="370:31" pos:end="370:32">-&gt;</operator><name pos:start="370:33" pos:end="370:34">fc</name></name></expr></argument>, <argument pos:start="370:37" pos:end="370:48"><expr pos:start="370:37" pos:end="370:48"><name pos:start="370:37" pos:end="370:48">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="370:51" pos:end="370:101"><expr pos:start="370:51" pos:end="370:101"><literal type="string" pos:start="370:51" pos:end="370:79">"drop a frame at curr_cts: %"</literal><name pos:start="370:80" pos:end="370:85">PRId64</name><literal type="string" pos:start="370:86" pos:end="370:91">" @ %"</literal><name pos:start="370:92" pos:end="370:97">PRId64</name><literal type="string" pos:start="370:98" pos:end="370:101">"\n"</literal></expr></argument>, <argument pos:start="370:104" pos:end="370:111"><expr pos:start="370:104" pos:end="370:111"><name pos:start="370:104" pos:end="370:111">curr_cts</name></expr></argument>, <argument pos:start="370:114" pos:end="370:118"><expr pos:start="370:114" pos:end="370:118"><name pos:start="370:114" pos:end="370:118">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="374:21" pos:end="402:21"><if pos:start="374:21" pos:end="402:21">if <condition pos:start="374:24" pos:end="374:107">(<expr pos:start="374:25" pos:end="374:106"><name pos:start="374:25" pos:end="374:48"><name pos:start="374:25" pos:end="374:26">st</name><operator pos:start="374:27" pos:end="374:28">-&gt;</operator><name pos:start="374:29" pos:end="374:36">codecpar</name><operator pos:start="374:37" pos:end="374:38">-&gt;</operator><name pos:start="374:39" pos:end="374:48">codec_type</name></name> <operator pos:start="374:50" pos:end="374:51">==</operator> <name pos:start="374:53" pos:end="374:70">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="374:72" pos:end="374:73">&amp;&amp;</operator> <name pos:start="374:75" pos:end="374:101">edit_list_start_encountered</name> <operator pos:start="374:103" pos:end="374:104">==</operator> <literal type="number" pos:start="374:106" pos:end="374:106">0</literal></expr>)</condition> <block pos:start="374:109" pos:end="402:21">{<block_content pos:start="376:25" pos:end="400:25">

                        <expr_stmt pos:start="376:25" pos:end="376:46"><expr pos:start="376:25" pos:end="376:45"><name pos:start="376:25" pos:end="376:43">num_discarded_begin</name><operator pos:start="376:44" pos:end="376:45">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="378:25" pos:end="380:98"><expr pos:start="378:25" pos:end="380:97"><name pos:start="378:25" pos:end="378:45">frame_duration_buffer</name> <operator pos:start="378:47" pos:end="378:47">=</operator> <call pos:start="378:49" pos:end="380:97"><name pos:start="378:49" pos:end="378:58">av_realloc</name><argument_list pos:start="378:59" pos:end="380:97">(<argument pos:start="378:60" pos:end="378:80"><expr pos:start="378:60" pos:end="378:80"><name pos:start="378:60" pos:end="378:80">frame_duration_buffer</name></expr></argument>,

                                                           <argument pos:start="380:60" pos:end="380:96"><expr pos:start="380:60" pos:end="380:96"><name pos:start="380:60" pos:end="380:78">num_discarded_begin</name> <operator pos:start="380:80" pos:end="380:80">*</operator> <sizeof pos:start="380:82" pos:end="380:96">sizeof<argument_list pos:start="380:88" pos:end="380:96">(<argument pos:start="380:89" pos:end="380:95"><expr pos:start="380:89" pos:end="380:95"><name pos:start="380:89" pos:end="380:95">int64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="382:25" pos:end="388:25"><if pos:start="382:25" pos:end="388:25">if <condition pos:start="382:28" pos:end="382:51">(<expr pos:start="382:29" pos:end="382:50"><operator pos:start="382:29" pos:end="382:29">!</operator><name pos:start="382:30" pos:end="382:50">frame_duration_buffer</name></expr>)</condition> <block pos:start="382:53" pos:end="388:25">{<block_content pos:start="384:29" pos:end="386:34">

                            <expr_stmt pos:start="384:29" pos:end="384:103"><expr pos:start="384:29" pos:end="384:102"><call pos:start="384:29" pos:end="384:102"><name pos:start="384:29" pos:end="384:34">av_log</name><argument_list pos:start="384:35" pos:end="384:102">(<argument pos:start="384:36" pos:end="384:42"><expr pos:start="384:36" pos:end="384:42"><name pos:start="384:36" pos:end="384:42"><name pos:start="384:36" pos:end="384:38">mov</name><operator pos:start="384:39" pos:end="384:40">-&gt;</operator><name pos:start="384:41" pos:end="384:42">fc</name></name></expr></argument>, <argument pos:start="384:45" pos:end="384:56"><expr pos:start="384:45" pos:end="384:56"><name pos:start="384:45" pos:end="384:56">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="384:59" pos:end="384:101"><expr pos:start="384:59" pos:end="384:101"><literal type="string" pos:start="384:59" pos:end="384:101">"Cannot reallocate frame duration buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="386:29" pos:end="386:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="390:25" pos:end="390:88"><expr pos:start="390:25" pos:end="390:87"><name pos:start="390:25" pos:end="390:70"><name pos:start="390:25" pos:end="390:45">frame_duration_buffer</name><index pos:start="390:46" pos:end="390:70">[<expr pos:start="390:47" pos:end="390:69"><name pos:start="390:47" pos:end="390:65">num_discarded_begin</name> <operator pos:start="390:67" pos:end="390:67">-</operator> <literal type="number" pos:start="390:69" pos:end="390:69">1</literal></expr>]</index></name> <operator pos:start="390:72" pos:end="390:72">=</operator> <name pos:start="390:74" pos:end="390:87">frame_duration</name></expr>;</expr_stmt>



                        <comment type="line" pos:start="394:25" pos:end="394:88">// Increment skip_samples for the first non-zero audio edit list</comment>

                        <if_stmt pos:start="396:25" pos:end="400:25"><if pos:start="396:25" pos:end="400:25">if <condition pos:start="396:28" pos:end="396:106">(<expr pos:start="396:29" pos:end="396:105"><name pos:start="396:29" pos:end="396:53">first_non_zero_audio_edit</name> <operator pos:start="396:55" pos:end="396:55">&gt;</operator> <literal type="number" pos:start="396:57" pos:end="396:57">0</literal> <operator pos:start="396:59" pos:end="396:60">&amp;&amp;</operator> <name pos:start="396:62" pos:end="396:83"><name pos:start="396:62" pos:end="396:63">st</name><operator pos:start="396:64" pos:end="396:65">-&gt;</operator><name pos:start="396:66" pos:end="396:73">codecpar</name><operator pos:start="396:74" pos:end="396:75">-&gt;</operator><name pos:start="396:76" pos:end="396:83">codec_id</name></name> <operator pos:start="396:85" pos:end="396:86">!=</operator> <name pos:start="396:88" pos:end="396:105">AV_CODEC_ID_VORBIS</name></expr>)</condition> <block pos:start="396:108" pos:end="400:25">{<block_content pos:start="398:29" pos:end="398:63">

                            <expr_stmt pos:start="398:29" pos:end="398:63"><expr pos:start="398:29" pos:end="398:62"><name pos:start="398:29" pos:end="398:44"><name pos:start="398:29" pos:end="398:30">st</name><operator pos:start="398:31" pos:end="398:32">-&gt;</operator><name pos:start="398:33" pos:end="398:44">skip_samples</name></name> <operator pos:start="398:46" pos:end="398:47">+=</operator> <name pos:start="398:49" pos:end="398:62">frame_duration</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="406:15" pos:end="437:13">else <block pos:start="406:20" pos:end="437:13">{<block_content pos:start="408:17" pos:end="435:17">

                <if_stmt pos:start="408:17" pos:end="416:17"><if pos:start="408:17" pos:end="412:17">if <condition pos:start="408:20" pos:end="408:42">(<expr pos:start="408:21" pos:end="408:41"><name pos:start="408:21" pos:end="408:37">min_corrected_pts</name> <operator pos:start="408:39" pos:end="408:39">&lt;</operator> <literal type="number" pos:start="408:41" pos:end="408:41">0</literal></expr>)</condition> <block pos:start="408:44" pos:end="412:17">{<block_content pos:start="410:21" pos:end="410:91">

                    <expr_stmt pos:start="410:21" pos:end="410:91"><expr pos:start="410:21" pos:end="410:90"><name pos:start="410:21" pos:end="410:37">min_corrected_pts</name> <operator pos:start="410:39" pos:end="410:39">=</operator> <name pos:start="410:41" pos:end="410:61">edit_list_dts_counter</name> <operator pos:start="410:63" pos:end="410:63">+</operator> <name pos:start="410:65" pos:end="410:73">curr_ctts</name> <operator pos:start="410:75" pos:end="410:75">+</operator> <name pos:start="410:77" pos:end="410:90"><name pos:start="410:77" pos:end="410:79">msc</name><operator pos:start="410:80" pos:end="410:81">-&gt;</operator><name pos:start="410:82" pos:end="410:90">dts_shift</name></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="412:19" pos:end="416:17">else <block pos:start="412:24" pos:end="416:17">{<block_content pos:start="414:21" pos:end="414:117">

                    <expr_stmt pos:start="414:21" pos:end="414:117"><expr pos:start="414:21" pos:end="414:116"><name pos:start="414:21" pos:end="414:37">min_corrected_pts</name> <operator pos:start="414:39" pos:end="414:39">=</operator> <call pos:start="414:41" pos:end="414:116"><name pos:start="414:41" pos:end="414:45">FFMIN</name><argument_list pos:start="414:46" pos:end="414:116">(<argument pos:start="414:47" pos:end="414:63"><expr pos:start="414:47" pos:end="414:63"><name pos:start="414:47" pos:end="414:63">min_corrected_pts</name></expr></argument>, <argument pos:start="414:66" pos:end="414:115"><expr pos:start="414:66" pos:end="414:115"><name pos:start="414:66" pos:end="414:86">edit_list_dts_counter</name> <operator pos:start="414:88" pos:end="414:88">+</operator> <name pos:start="414:90" pos:end="414:98">curr_ctts</name> <operator pos:start="414:100" pos:end="414:100">+</operator> <name pos:start="414:102" pos:end="414:115"><name pos:start="414:102" pos:end="414:104">msc</name><operator pos:start="414:105" pos:end="414:106">-&gt;</operator><name pos:start="414:107" pos:end="414:115">dts_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="418:17" pos:end="435:17"><if pos:start="418:17" pos:end="435:17">if <condition pos:start="418:20" pos:end="418:53">(<expr pos:start="418:21" pos:end="418:52"><name pos:start="418:21" pos:end="418:47">edit_list_start_encountered</name> <operator pos:start="418:49" pos:end="418:50">==</operator> <literal type="number" pos:start="418:52" pos:end="418:52">0</literal></expr>)</condition> <block pos:start="418:55" pos:end="435:17">{<block_content pos:start="420:21" pos:end="433:21">

                    <expr_stmt pos:start="420:21" pos:end="420:52"><expr pos:start="420:21" pos:end="420:51"><name pos:start="420:21" pos:end="420:47">edit_list_start_encountered</name> <operator pos:start="420:49" pos:end="420:49">=</operator> <literal type="number" pos:start="420:51" pos:end="420:51">1</literal></expr>;</expr_stmt>

                    <comment type="line" pos:start="422:21" pos:end="422:111">// Make timestamps strictly monotonically increasing for audio, by rewriting timestamps for</comment>

                    <comment type="line" pos:start="424:21" pos:end="424:41">// discarded packets.</comment>

                    <if_stmt pos:start="426:21" pos:end="433:21"><if pos:start="426:21" pos:end="433:21">if <condition pos:start="426:24" pos:end="426:96">(<expr pos:start="426:25" pos:end="426:95"><name pos:start="426:25" pos:end="426:48"><name pos:start="426:25" pos:end="426:26">st</name><operator pos:start="426:27" pos:end="426:28">-&gt;</operator><name pos:start="426:29" pos:end="426:36">codecpar</name><operator pos:start="426:37" pos:end="426:38">-&gt;</operator><name pos:start="426:39" pos:end="426:48">codec_type</name></name> <operator pos:start="426:50" pos:end="426:51">==</operator> <name pos:start="426:53" pos:end="426:70">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="426:72" pos:end="426:73">&amp;&amp;</operator> <name pos:start="426:75" pos:end="426:95">frame_duration_buffer</name></expr>)</condition> <block pos:start="426:98" pos:end="433:21">{<block_content pos:start="428:25" pos:end="430:95">

                        <expr_stmt pos:start="428:25" pos:end="430:95"><expr pos:start="428:25" pos:end="430:94"><call pos:start="428:25" pos:end="430:94"><name pos:start="428:25" pos:end="428:50">fix_index_entry_timestamps</name><argument_list pos:start="428:51" pos:end="430:94">(<argument pos:start="428:52" pos:end="428:53"><expr pos:start="428:52" pos:end="428:53"><name pos:start="428:52" pos:end="428:53">st</name></expr></argument>, <argument pos:start="428:56" pos:end="428:75"><expr pos:start="428:56" pos:end="428:75"><name pos:start="428:56" pos:end="428:75"><name pos:start="428:56" pos:end="428:57">st</name><operator pos:start="428:58" pos:end="428:59">-&gt;</operator><name pos:start="428:60" pos:end="428:75">nb_index_entries</name></name></expr></argument>, <argument pos:start="428:78" pos:end="428:98"><expr pos:start="428:78" pos:end="428:98"><name pos:start="428:78" pos:end="428:98">edit_list_dts_counter</name></expr></argument>,

                                                   <argument pos:start="430:52" pos:end="430:72"><expr pos:start="430:52" pos:end="430:72"><name pos:start="430:52" pos:end="430:72">frame_duration_buffer</name></expr></argument>, <argument pos:start="430:75" pos:end="430:93"><expr pos:start="430:75" pos:end="430:93"><name pos:start="430:75" pos:end="430:93">num_discarded_begin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="441:13" pos:end="449:13"><if pos:start="441:13" pos:end="449:13">if <condition pos:start="441:16" pos:end="443:68">(<expr pos:start="441:17" pos:end="443:67"><call pos:start="441:17" pos:end="443:61"><name pos:start="441:17" pos:end="441:31">add_index_entry</name><argument_list pos:start="441:32" pos:end="443:61">(<argument pos:start="441:33" pos:end="441:34"><expr pos:start="441:33" pos:end="441:34"><name pos:start="441:33" pos:end="441:34">st</name></expr></argument>, <argument pos:start="441:37" pos:end="441:48"><expr pos:start="441:37" pos:end="441:48"><name pos:start="441:37" pos:end="441:48"><name pos:start="441:37" pos:end="441:43">current</name><operator pos:start="441:44" pos:end="441:45">-&gt;</operator><name pos:start="441:46" pos:end="441:48">pos</name></name></expr></argument>, <argument pos:start="441:51" pos:end="441:71"><expr pos:start="441:51" pos:end="441:71"><name pos:start="441:51" pos:end="441:71">edit_list_dts_counter</name></expr></argument>, <argument pos:start="441:74" pos:end="441:86"><expr pos:start="441:74" pos:end="441:86"><name pos:start="441:74" pos:end="441:86"><name pos:start="441:74" pos:end="441:80">current</name><operator pos:start="441:81" pos:end="441:82">-&gt;</operator><name pos:start="441:83" pos:end="441:86">size</name></name></expr></argument>,

                                <argument pos:start="443:33" pos:end="443:53"><expr pos:start="443:33" pos:end="443:53"><name pos:start="443:33" pos:end="443:53"><name pos:start="443:33" pos:end="443:39">current</name><operator pos:start="443:40" pos:end="443:41">-&gt;</operator><name pos:start="443:42" pos:end="443:53">min_distance</name></name></expr></argument>, <argument pos:start="443:56" pos:end="443:60"><expr pos:start="443:56" pos:end="443:60"><name pos:start="443:56" pos:end="443:60">flags</name></expr></argument>)</argument_list></call> <operator pos:start="443:63" pos:end="443:64">==</operator> <operator pos:start="443:66" pos:end="443:66">-</operator><literal type="number" pos:start="443:67" pos:end="443:67">1</literal></expr>)</condition> <block pos:start="443:70" pos:end="449:13">{<block_content pos:start="445:17" pos:end="447:22">

                <expr_stmt pos:start="445:17" pos:end="445:74"><expr pos:start="445:17" pos:end="445:73"><call pos:start="445:17" pos:end="445:73"><name pos:start="445:17" pos:end="445:22">av_log</name><argument_list pos:start="445:23" pos:end="445:73">(<argument pos:start="445:24" pos:end="445:30"><expr pos:start="445:24" pos:end="445:30"><name pos:start="445:24" pos:end="445:30"><name pos:start="445:24" pos:end="445:26">mov</name><operator pos:start="445:27" pos:end="445:28">-&gt;</operator><name pos:start="445:29" pos:end="445:30">fc</name></name></expr></argument>, <argument pos:start="445:33" pos:end="445:44"><expr pos:start="445:33" pos:end="445:44"><name pos:start="445:33" pos:end="445:44">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="445:47" pos:end="445:72"><expr pos:start="445:47" pos:end="445:72"><literal type="string" pos:start="445:47" pos:end="445:72">"Cannot add index entry\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="447:17" pos:end="447:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="453:13" pos:end="453:44">// Update the index ranges array</comment>

            <if_stmt pos:start="455:13" pos:end="461:13"><if pos:start="455:13" pos:end="461:13">if <condition pos:start="455:16" pos:end="455:93">(<expr pos:start="455:17" pos:end="455:92"><name pos:start="455:17" pos:end="455:35">current_index_range</name> <operator pos:start="455:37" pos:end="455:37">&lt;</operator> <name pos:start="455:39" pos:end="455:55"><name pos:start="455:39" pos:end="455:41">msc</name><operator pos:start="455:42" pos:end="455:43">-&gt;</operator><name pos:start="455:44" pos:end="455:55">index_ranges</name></name> <operator pos:start="455:57" pos:end="455:58">||</operator> <name pos:start="455:60" pos:end="455:64">index</name> <operator pos:start="455:66" pos:end="455:67">!=</operator> <name pos:start="455:69" pos:end="455:92"><name pos:start="455:69" pos:end="455:87">current_index_range</name><operator pos:start="455:88" pos:end="455:89">-&gt;</operator><name pos:start="455:90" pos:end="455:92">end</name></name></expr>)</condition> <block pos:start="455:95" pos:end="461:13">{<block_content pos:start="457:17" pos:end="459:51">

                <expr_stmt pos:start="457:17" pos:end="457:38"><expr pos:start="457:17" pos:end="457:37"><name pos:start="457:17" pos:end="457:35">current_index_range</name><operator pos:start="457:36" pos:end="457:37">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="459:17" pos:end="459:51"><expr pos:start="459:17" pos:end="459:50"><name pos:start="459:17" pos:end="459:42"><name pos:start="459:17" pos:end="459:35">current_index_range</name><operator pos:start="459:36" pos:end="459:37">-&gt;</operator><name pos:start="459:38" pos:end="459:42">start</name></name> <operator pos:start="459:44" pos:end="459:44">=</operator> <name pos:start="459:46" pos:end="459:50">index</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:49"><expr pos:start="463:13" pos:end="463:48"><name pos:start="463:13" pos:end="463:36"><name pos:start="463:13" pos:end="463:31">current_index_range</name><operator pos:start="463:32" pos:end="463:33">-&gt;</operator><name pos:start="463:34" pos:end="463:36">end</name></name> <operator pos:start="463:38" pos:end="463:38">=</operator> <name pos:start="463:40" pos:end="463:44">index</name> <operator pos:start="463:46" pos:end="463:46">+</operator> <literal type="number" pos:start="463:48" pos:end="463:48">1</literal></expr>;</expr_stmt>



            <comment type="line" pos:start="467:13" pos:end="467:109">// Only start incrementing DTS in frame_duration amounts, when we encounter a frame in edit list.</comment>

            <if_stmt pos:start="469:13" pos:end="473:13"><if pos:start="469:13" pos:end="473:13">if <condition pos:start="469:16" pos:end="469:48">(<expr pos:start="469:17" pos:end="469:47"><name pos:start="469:17" pos:end="469:43">edit_list_start_encountered</name> <operator pos:start="469:45" pos:end="469:45">&gt;</operator> <literal type="number" pos:start="469:47" pos:end="469:47">0</literal></expr>)</condition> <block pos:start="469:50" pos:end="473:13">{<block_content pos:start="471:17" pos:end="471:79">

                <expr_stmt pos:start="471:17" pos:end="471:79"><expr pos:start="471:17" pos:end="471:78"><name pos:start="471:17" pos:end="471:37">edit_list_dts_counter</name> <operator pos:start="471:39" pos:end="471:39">=</operator> <name pos:start="471:41" pos:end="471:61">edit_list_dts_counter</name> <operator pos:start="471:63" pos:end="471:63">+</operator> <name pos:start="471:65" pos:end="471:78">frame_duration</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="line" pos:start="477:13" pos:end="477:75">// Break when found first key frame after edit entry completion</comment>

            <if_stmt pos:start="479:13" pos:end="525:13"><if pos:start="479:13" pos:end="525:13">if <condition pos:start="479:16" pos:end="481:99">(<expr pos:start="479:17" pos:end="481:98"><operator pos:start="479:17" pos:end="479:17">(</operator><name pos:start="479:18" pos:end="479:25">curr_cts</name> <operator pos:start="479:27" pos:end="479:27">+</operator> <name pos:start="479:29" pos:end="479:42">frame_duration</name> <operator pos:start="479:44" pos:end="479:45">&gt;=</operator> <operator pos:start="479:47" pos:end="479:47">(</operator><name pos:start="479:48" pos:end="479:65">edit_list_duration</name> <operator pos:start="479:67" pos:end="479:67">+</operator> <name pos:start="479:69" pos:end="479:88">edit_list_media_time</name><operator pos:start="479:89" pos:end="479:89">)</operator><operator pos:start="479:90" pos:end="479:90">)</operator> <operator pos:start="479:92" pos:end="479:93">&amp;&amp;</operator>

                <operator pos:start="481:17" pos:end="481:17">(</operator><operator pos:start="481:18" pos:end="481:18">(</operator><name pos:start="481:19" pos:end="481:23">flags</name> <operator pos:start="481:25" pos:end="481:25">&amp;</operator> <name pos:start="481:27" pos:end="481:42">AVINDEX_KEYFRAME</name><operator pos:start="481:43" pos:end="481:43">)</operator> <operator pos:start="481:45" pos:end="481:46">||</operator> <operator pos:start="481:48" pos:end="481:48">(</operator><operator pos:start="481:49" pos:end="481:49">(</operator><name pos:start="481:50" pos:end="481:73"><name pos:start="481:50" pos:end="481:51">st</name><operator pos:start="481:52" pos:end="481:53">-&gt;</operator><name pos:start="481:54" pos:end="481:61">codecpar</name><operator pos:start="481:62" pos:end="481:63">-&gt;</operator><name pos:start="481:64" pos:end="481:73">codec_type</name></name> <operator pos:start="481:75" pos:end="481:76">==</operator> <name pos:start="481:78" pos:end="481:95">AVMEDIA_TYPE_AUDIO</name><operator pos:start="481:96" pos:end="481:96">)</operator><operator pos:start="481:97" pos:end="481:97">)</operator><operator pos:start="481:98" pos:end="481:98">)</operator></expr>)</condition> <block pos:start="481:101" pos:end="525:13">{<block_content pos:start="483:17" pos:end="523:22">

                <if_stmt pos:start="483:17" pos:end="521:17"><if pos:start="483:17" pos:end="521:17">if <condition pos:start="483:20" pos:end="483:34">(<expr pos:start="483:21" pos:end="483:33"><name pos:start="483:21" pos:end="483:33">ctts_data_old</name></expr>)</condition> <block pos:start="483:36" pos:end="521:17">{<block_content pos:start="491:21" pos:end="519:21">

                    <comment type="line" pos:start="485:21" pos:end="485:91">// If we have CTTS and this is the the first keyframe after edit elist,</comment>

                    <comment type="line" pos:start="487:21" pos:end="487:101">// wait for one more, because there might be trailing B-frames after this I-frame</comment>

                    <comment type="line" pos:start="489:21" pos:end="489:50">// that do belong to the edit.</comment>

                    <if_stmt pos:start="491:21" pos:end="497:21"><if pos:start="491:21" pos:end="497:21">if <condition pos:start="491:24" pos:end="491:105">(<expr pos:start="491:25" pos:end="491:104"><name pos:start="491:25" pos:end="491:48"><name pos:start="491:25" pos:end="491:26">st</name><operator pos:start="491:27" pos:end="491:28">-&gt;</operator><name pos:start="491:29" pos:end="491:36">codecpar</name><operator pos:start="491:37" pos:end="491:38">-&gt;</operator><name pos:start="491:39" pos:end="491:48">codec_type</name></name> <operator pos:start="491:50" pos:end="491:51">!=</operator> <name pos:start="491:53" pos:end="491:70">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="491:72" pos:end="491:73">&amp;&amp;</operator> <name pos:start="491:75" pos:end="491:99">found_keyframe_after_edit</name> <operator pos:start="491:101" pos:end="491:102">==</operator> <literal type="number" pos:start="491:104" pos:end="491:104">0</literal></expr>)</condition> <block pos:start="491:107" pos:end="497:21">{<block_content pos:start="493:25" pos:end="495:33">

                        <expr_stmt pos:start="493:25" pos:end="493:54"><expr pos:start="493:25" pos:end="493:53"><name pos:start="493:25" pos:end="493:49">found_keyframe_after_edit</name> <operator pos:start="493:51" pos:end="493:51">=</operator> <literal type="number" pos:start="493:53" pos:end="493:53">1</literal></expr>;</expr_stmt>

                        <continue pos:start="495:25" pos:end="495:33">continue;</continue>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="499:21" pos:end="519:21"><if pos:start="499:21" pos:end="519:21">if <condition pos:start="499:24" pos:end="499:45">(<expr pos:start="499:25" pos:end="499:44"><name pos:start="499:25" pos:end="499:39">ctts_sample_old</name> <operator pos:start="499:41" pos:end="499:42">!=</operator> <literal type="number" pos:start="499:44" pos:end="499:44">0</literal></expr>)</condition> <block pos:start="499:47" pos:end="519:21">{<block_content pos:start="501:25" pos:end="517:25">

                        <if_stmt pos:start="501:25" pos:end="517:25"><if pos:start="501:25" pos:end="517:25">if <condition pos:start="501:28" pos:end="507:89">(<expr pos:start="501:29" pos:end="507:88"><call pos:start="501:29" pos:end="507:82"><name pos:start="501:29" pos:end="501:42">add_ctts_entry</name><argument_list pos:start="501:43" pos:end="507:82">(<argument pos:start="501:44" pos:end="501:58"><expr pos:start="501:44" pos:end="501:58"><operator pos:start="501:44" pos:end="501:44">&amp;</operator><name pos:start="501:45" pos:end="501:58"><name pos:start="501:45" pos:end="501:47">msc</name><operator pos:start="501:48" pos:end="501:49">-&gt;</operator><name pos:start="501:50" pos:end="501:58">ctts_data</name></name></expr></argument>, <argument pos:start="501:61" pos:end="501:76"><expr pos:start="501:61" pos:end="501:76"><operator pos:start="501:61" pos:end="501:61">&amp;</operator><name pos:start="501:62" pos:end="501:76"><name pos:start="501:62" pos:end="501:64">msc</name><operator pos:start="501:65" pos:end="501:66">-&gt;</operator><name pos:start="501:67" pos:end="501:76">ctts_count</name></name></expr></argument>,

                                           <argument pos:start="503:44" pos:end="503:68"><expr pos:start="503:44" pos:end="503:68"><operator pos:start="503:44" pos:end="503:44">&amp;</operator><name pos:start="503:45" pos:end="503:68"><name pos:start="503:45" pos:end="503:47">msc</name><operator pos:start="503:48" pos:end="503:49">-&gt;</operator><name pos:start="503:50" pos:end="503:68">ctts_allocated_size</name></name></expr></argument>,

                                           <argument pos:start="505:44" pos:end="505:88"><expr pos:start="505:44" pos:end="505:88"><name pos:start="505:44" pos:end="505:58">ctts_sample_old</name> <operator pos:start="505:60" pos:end="505:60">-</operator> <name pos:start="505:62" pos:end="505:88">edit_list_start_ctts_sample</name></expr></argument>,

                                           <argument pos:start="507:44" pos:end="507:81"><expr pos:start="507:44" pos:end="507:81"><name pos:start="507:44" pos:end="507:72"><name pos:start="507:44" pos:end="507:56">ctts_data_old</name><index pos:start="507:57" pos:end="507:72">[<expr pos:start="507:58" pos:end="507:71"><name pos:start="507:58" pos:end="507:71">ctts_index_old</name></expr>]</index></name><operator pos:start="507:73" pos:end="507:73">.</operator><name pos:start="507:74" pos:end="507:81">duration</name></expr></argument>)</argument_list></call> <operator pos:start="507:84" pos:end="507:85">==</operator> <operator pos:start="507:87" pos:end="507:87">-</operator><literal type="number" pos:start="507:88" pos:end="507:88">1</literal></expr>)</condition> <block pos:start="507:91" pos:end="517:25">{<block_content pos:start="509:29" pos:end="515:34">

                            <expr_stmt pos:start="509:29" pos:end="513:75"><expr pos:start="509:29" pos:end="513:74"><call pos:start="509:29" pos:end="513:74"><name pos:start="509:29" pos:end="509:34">av_log</name><argument_list pos:start="509:35" pos:end="513:74">(<argument pos:start="509:36" pos:end="509:42"><expr pos:start="509:36" pos:end="509:42"><name pos:start="509:36" pos:end="509:42"><name pos:start="509:36" pos:end="509:38">mov</name><operator pos:start="509:39" pos:end="509:40">-&gt;</operator><name pos:start="509:41" pos:end="509:42">fc</name></name></expr></argument>, <argument pos:start="509:45" pos:end="509:56"><expr pos:start="509:45" pos:end="509:56"><name pos:start="509:45" pos:end="509:56">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="509:59" pos:end="509:111"><expr pos:start="509:59" pos:end="509:111"><literal type="string" pos:start="509:59" pos:end="509:83">"Cannot add CTTS entry %"</literal><name pos:start="509:84" pos:end="509:89">PRId64</name><literal type="string" pos:start="509:90" pos:end="509:96">" - {%"</literal><name pos:start="509:97" pos:end="509:102">PRId64</name><literal type="string" pos:start="509:103" pos:end="509:111">", %d}\n"</literal></expr></argument>,

                                   <argument pos:start="511:36" pos:end="511:49"><expr pos:start="511:36" pos:end="511:49"><name pos:start="511:36" pos:end="511:49">ctts_index_old</name></expr></argument>, <argument pos:start="511:52" pos:end="511:96"><expr pos:start="511:52" pos:end="511:96"><name pos:start="511:52" pos:end="511:66">ctts_sample_old</name> <operator pos:start="511:68" pos:end="511:68">-</operator> <name pos:start="511:70" pos:end="511:96">edit_list_start_ctts_sample</name></expr></argument>,

                                   <argument pos:start="513:36" pos:end="513:73"><expr pos:start="513:36" pos:end="513:73"><name pos:start="513:36" pos:end="513:64"><name pos:start="513:36" pos:end="513:48">ctts_data_old</name><index pos:start="513:49" pos:end="513:64">[<expr pos:start="513:50" pos:end="513:63"><name pos:start="513:50" pos:end="513:63">ctts_index_old</name></expr>]</index></name><operator pos:start="513:65" pos:end="513:65">.</operator><name pos:start="513:66" pos:end="513:73">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="515:29" pos:end="515:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="523:17" pos:end="523:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></while>

    <comment type="line" pos:start="531:5" pos:end="531:107">// If there are empty edits, then min_corrected_pts might be positive intentionally. So we subtract the</comment>

    <comment type="line" pos:start="533:5" pos:end="533:40">// sum duration of emtpy edits here.</comment>

    <expr_stmt pos:start="535:5" pos:end="535:50"><expr pos:start="535:5" pos:end="535:49"><name pos:start="535:5" pos:end="535:21">min_corrected_pts</name> <operator pos:start="535:23" pos:end="535:24">-=</operator> <name pos:start="535:26" pos:end="535:49">empty_edits_sum_duration</name></expr>;</expr_stmt>



    <comment type="line" pos:start="539:5" pos:end="539:104">// If the minimum pts turns out to be greater than zero after fixing the index, then we subtract the</comment>

    <comment type="line" pos:start="541:5" pos:end="541:53">// dts by that amount to make the first pts zero.</comment>

    <if_stmt pos:start="543:5" pos:end="553:5"><if pos:start="543:5" pos:end="553:5">if <condition pos:start="543:8" pos:end="543:80">(<expr pos:start="543:9" pos:end="543:79"><name pos:start="543:9" pos:end="543:32"><name pos:start="543:9" pos:end="543:10">st</name><operator pos:start="543:11" pos:end="543:12">-&gt;</operator><name pos:start="543:13" pos:end="543:20">codecpar</name><operator pos:start="543:21" pos:end="543:22">-&gt;</operator><name pos:start="543:23" pos:end="543:32">codec_type</name></name> <operator pos:start="543:34" pos:end="543:35">==</operator> <name pos:start="543:37" pos:end="543:54">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="543:56" pos:end="543:57">&amp;&amp;</operator> <name pos:start="543:59" pos:end="543:75">min_corrected_pts</name> <operator pos:start="543:77" pos:end="543:77">&gt;</operator> <literal type="number" pos:start="543:79" pos:end="543:79">0</literal></expr>)</condition> <block pos:start="543:82" pos:end="553:5">{<block_content pos:start="545:9" pos:end="551:9">

        <expr_stmt pos:start="545:9" pos:end="545:110"><expr pos:start="545:9" pos:end="545:109"><call pos:start="545:9" pos:end="545:109"><name pos:start="545:9" pos:end="545:14">av_log</name><argument_list pos:start="545:15" pos:end="545:109">(<argument pos:start="545:16" pos:end="545:22"><expr pos:start="545:16" pos:end="545:22"><name pos:start="545:16" pos:end="545:22"><name pos:start="545:16" pos:end="545:18">mov</name><operator pos:start="545:19" pos:end="545:20">-&gt;</operator><name pos:start="545:21" pos:end="545:22">fc</name></name></expr></argument>, <argument pos:start="545:25" pos:end="545:36"><expr pos:start="545:25" pos:end="545:36"><name pos:start="545:25" pos:end="545:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="545:39" pos:end="545:89"><expr pos:start="545:39" pos:end="545:89"><literal type="string" pos:start="545:39" pos:end="545:55">"Offset DTS by %"</literal><name pos:start="545:56" pos:end="545:61">PRId64</name><literal type="string" pos:start="545:62" pos:end="545:89">" to make first pts zero.\n"</literal></expr></argument>, <argument pos:start="545:92" pos:end="545:108"><expr pos:start="545:92" pos:end="545:108"><name pos:start="545:92" pos:end="545:108">min_corrected_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="547:9" pos:end="551:9">for <control pos:start="547:13" pos:end="547:50">(<init pos:start="547:14" pos:end="547:19"><expr pos:start="547:14" pos:end="547:18"><name pos:start="547:14" pos:end="547:14">i</name> <operator pos:start="547:16" pos:end="547:16">=</operator> <literal type="number" pos:start="547:18" pos:end="547:18">0</literal></expr>;</init> <condition pos:start="547:21" pos:end="547:45"><expr pos:start="547:21" pos:end="547:44"><name pos:start="547:21" pos:end="547:21">i</name> <operator pos:start="547:23" pos:end="547:23">&lt;</operator> <name pos:start="547:25" pos:end="547:44"><name pos:start="547:25" pos:end="547:26">st</name><operator pos:start="547:27" pos:end="547:28">-&gt;</operator><name pos:start="547:29" pos:end="547:44">nb_index_entries</name></name></expr>;</condition> <incr pos:start="547:47" pos:end="547:49"><expr pos:start="547:47" pos:end="547:49"><operator pos:start="547:47" pos:end="547:48">++</operator><name pos:start="547:49" pos:end="547:49">i</name></expr></incr>)</control> <block pos:start="547:52" pos:end="551:9">{<block_content pos:start="549:13" pos:end="549:64">

            <expr_stmt pos:start="549:13" pos:end="549:64"><expr pos:start="549:13" pos:end="549:63"><name pos:start="549:13" pos:end="549:32"><name pos:start="549:13" pos:end="549:14">st</name><operator pos:start="549:15" pos:end="549:16">-&gt;</operator><name pos:start="549:17" pos:end="549:29">index_entries</name><index pos:start="549:30" pos:end="549:32">[<expr pos:start="549:31" pos:end="549:31"><name pos:start="549:31" pos:end="549:31">i</name></expr>]</index></name><operator pos:start="549:33" pos:end="549:33">.</operator><name pos:start="549:34" pos:end="549:42">timestamp</name> <operator pos:start="549:44" pos:end="549:45">-=</operator> <name pos:start="549:47" pos:end="549:63">min_corrected_pts</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="557:5" pos:end="557:30">// Update av stream length</comment>

    <expr_stmt pos:start="559:5" pos:end="559:55"><expr pos:start="559:5" pos:end="559:54"><name pos:start="559:5" pos:end="559:16"><name pos:start="559:5" pos:end="559:6">st</name><operator pos:start="559:7" pos:end="559:8">-&gt;</operator><name pos:start="559:9" pos:end="559:16">duration</name></name> <operator pos:start="559:18" pos:end="559:18">=</operator> <name pos:start="559:20" pos:end="559:42">edit_list_dts_entry_end</name> <operator pos:start="559:44" pos:end="559:44">-</operator> <name pos:start="559:46" pos:end="559:54">start_dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="561:5" pos:end="561:38"><expr pos:start="561:5" pos:end="561:37"><name pos:start="561:5" pos:end="561:18"><name pos:start="561:5" pos:end="561:7">msc</name><operator pos:start="561:8" pos:end="561:9">-&gt;</operator><name pos:start="561:10" pos:end="561:18">start_pad</name></name> <operator pos:start="561:20" pos:end="561:20">=</operator> <name pos:start="561:22" pos:end="561:37"><name pos:start="561:22" pos:end="561:23">st</name><operator pos:start="561:24" pos:end="561:25">-&gt;</operator><name pos:start="561:26" pos:end="561:37">skip_samples</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="565:5" pos:end="565:53">// Free the old index and the old CTTS structures</comment>

    <expr_stmt pos:start="567:5" pos:end="567:19"><expr pos:start="567:5" pos:end="567:18"><call pos:start="567:5" pos:end="567:18"><name pos:start="567:5" pos:end="567:11">av_free</name><argument_list pos:start="567:12" pos:end="567:18">(<argument pos:start="567:13" pos:end="567:17"><expr pos:start="567:13" pos:end="567:17"><name pos:start="567:13" pos:end="567:17">e_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="569:5" pos:end="569:27"><expr pos:start="569:5" pos:end="569:26"><call pos:start="569:5" pos:end="569:26"><name pos:start="569:5" pos:end="569:11">av_free</name><argument_list pos:start="569:12" pos:end="569:26">(<argument pos:start="569:13" pos:end="569:25"><expr pos:start="569:13" pos:end="569:25"><name pos:start="569:13" pos:end="569:25">ctts_data_old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <comment type="line" pos:start="574:5" pos:end="574:44">// Null terminate the index ranges array</comment>

    <expr_stmt pos:start="576:5" pos:end="576:26"><expr pos:start="576:5" pos:end="576:25"><name pos:start="576:5" pos:end="576:23">current_index_range</name><operator pos:start="576:24" pos:end="576:25">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="578:5" pos:end="578:35"><expr pos:start="578:5" pos:end="578:34"><name pos:start="578:5" pos:end="578:30"><name pos:start="578:5" pos:end="578:23">current_index_range</name><operator pos:start="578:24" pos:end="578:25">-&gt;</operator><name pos:start="578:26" pos:end="578:30">start</name></name> <operator pos:start="578:32" pos:end="578:32">=</operator> <literal type="number" pos:start="578:34" pos:end="578:34">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="580:5" pos:end="580:33"><expr pos:start="580:5" pos:end="580:32"><name pos:start="580:5" pos:end="580:28"><name pos:start="580:5" pos:end="580:23">current_index_range</name><operator pos:start="580:24" pos:end="580:25">-&gt;</operator><name pos:start="580:26" pos:end="580:28">end</name></name> <operator pos:start="580:30" pos:end="580:30">=</operator> <literal type="number" pos:start="580:32" pos:end="580:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="582:5" pos:end="582:52"><expr pos:start="582:5" pos:end="582:51"><name pos:start="582:5" pos:end="582:22"><name pos:start="582:5" pos:end="582:7">msc</name><operator pos:start="582:8" pos:end="582:9">-&gt;</operator><name pos:start="582:10" pos:end="582:22">current_index</name></name> <operator pos:start="582:24" pos:end="582:24">=</operator> <name pos:start="582:26" pos:end="582:45"><name pos:start="582:26" pos:end="582:28">msc</name><operator pos:start="582:29" pos:end="582:30">-&gt;</operator><name pos:start="582:31" pos:end="582:42">index_ranges</name><index pos:start="582:43" pos:end="582:45">[<expr pos:start="582:44" pos:end="582:44"><literal type="number" pos:start="582:44" pos:end="582:44">0</literal></expr>]</index></name><operator pos:start="582:46" pos:end="582:46">.</operator><name pos:start="582:47" pos:end="582:51">start</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
