<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/776.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">gen_ori</name><parameter_list pos:start="1:20" pos:end="1:38">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:32">DisasContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:77">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">target_ulong</name></type> <name pos:start="5:18" pos:end="5:21">uimm</name> <init pos:start="5:23" pos:end="5:41">= <expr pos:start="5:25" pos:end="5:41"><call pos:start="5:25" pos:end="5:41"><name pos:start="5:25" pos:end="5:28">UIMM</name><argument_list pos:start="5:29" pos:end="5:41">(<argument pos:start="5:30" pos:end="5:40"><expr pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:40"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:40">opcode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:56">(<expr pos:start="9:9" pos:end="9:55"><call pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:10">rS</name><argument_list pos:start="9:11" pos:end="9:23">(<argument pos:start="9:12" pos:end="9:22"><expr pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:14">ctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:22">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:25" pos:end="9:26">==</operator> <call pos:start="9:28" pos:end="9:42"><name pos:start="9:28" pos:end="9:29">rA</name><argument_list pos:start="9:30" pos:end="9:42">(<argument pos:start="9:31" pos:end="9:41"><expr pos:start="9:31" pos:end="9:41"><name pos:start="9:31" pos:end="9:41"><name pos:start="9:31" pos:end="9:33">ctx</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:41">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="9:44" pos:end="9:45">&amp;&amp;</operator> <name pos:start="9:47" pos:end="9:50">uimm</name> <operator pos:start="9:52" pos:end="9:53">==</operator> <literal type="number" pos:start="9:55" pos:end="9:55">0</literal></expr>)</condition> <block pos:start="9:58" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <comment type="block" pos:start="11:9" pos:end="11:17">/* NOP */</comment>

        <comment type="block" pos:start="13:9" pos:end="13:62">/* XXX: should handle special NOPs for POWER series */</comment>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:77"><expr pos:start="19:5" pos:end="19:76"><call pos:start="19:5" pos:end="19:76"><name pos:start="19:5" pos:end="19:18">tcg_gen_ori_tl</name><argument_list pos:start="19:19" pos:end="19:76">(<argument pos:start="19:20" pos:end="19:43"><expr pos:start="19:20" pos:end="19:43"><name pos:start="19:20" pos:end="19:43"><name pos:start="19:20" pos:end="19:26">cpu_gpr</name><index pos:start="19:27" pos:end="19:43">[<expr pos:start="19:28" pos:end="19:42"><call pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:29">rA</name><argument_list pos:start="19:30" pos:end="19:42">(<argument pos:start="19:31" pos:end="19:41"><expr pos:start="19:31" pos:end="19:41"><name pos:start="19:31" pos:end="19:41"><name pos:start="19:31" pos:end="19:33">ctx</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:41">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:46" pos:end="19:69"><expr pos:start="19:46" pos:end="19:69"><name pos:start="19:46" pos:end="19:69"><name pos:start="19:46" pos:end="19:52">cpu_gpr</name><index pos:start="19:53" pos:end="19:69">[<expr pos:start="19:54" pos:end="19:68"><call pos:start="19:54" pos:end="19:68"><name pos:start="19:54" pos:end="19:55">rS</name><argument_list pos:start="19:56" pos:end="19:68">(<argument pos:start="19:57" pos:end="19:67"><expr pos:start="19:57" pos:end="19:67"><name pos:start="19:57" pos:end="19:67"><name pos:start="19:57" pos:end="19:59">ctx</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:67">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="19:72" pos:end="19:75"><expr pos:start="19:72" pos:end="19:75"><name pos:start="19:72" pos:end="19:75">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
