<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4852.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">parse_header</name><parameter_list pos:start="1:24" pos:end="1:75">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:36">OutputStream</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">os</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">buf</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:74">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <if_stmt pos:start="5:5" pos:end="7:35"><if pos:start="5:5" pos:end="7:35">if <condition pos:start="5:8" pos:end="5:22">(<expr pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:16">buf_size</name> <operator pos:start="5:18" pos:end="5:18">&lt;</operator> <literal type="number" pos:start="5:20" pos:end="5:21">13</literal></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:35"><block_content pos:start="7:9" pos:end="7:35">

        <return pos:start="7:9" pos:end="7:35">return <expr pos:start="7:16" pos:end="7:34"><name pos:start="7:16" pos:end="7:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="9:5" pos:end="11:35"><if pos:start="9:5" pos:end="11:35">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:14">memcmp</name><argument_list pos:start="9:15" pos:end="9:29">(<argument pos:start="9:16" pos:end="9:18"><expr pos:start="9:16" pos:end="9:18"><name pos:start="9:16" pos:end="9:18">buf</name></expr></argument>, <argument pos:start="9:21" pos:end="9:25"><expr pos:start="9:21" pos:end="9:25"><literal type="string" pos:start="9:21" pos:end="9:25">"FLV"</literal></expr></argument>, <argument pos:start="9:28" pos:end="9:28"><expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">3</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:35"><block_content pos:start="11:9" pos:end="11:35">

        <return pos:start="11:9" pos:end="11:35">return <expr pos:start="11:16" pos:end="11:34"><name pos:start="11:16" pos:end="11:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:19"><expr pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:7">buf</name>      <operator pos:start="13:14" pos:end="13:15">+=</operator> <literal type="number" pos:start="13:17" pos:end="13:18">13</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12">buf_size</name> <operator pos:start="15:14" pos:end="15:15">-=</operator> <literal type="number" pos:start="15:17" pos:end="15:18">13</literal></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="67:5">while <condition pos:start="17:11" pos:end="17:30">(<expr pos:start="17:12" pos:end="17:29"><name pos:start="17:12" pos:end="17:19">buf_size</name> <operator pos:start="17:21" pos:end="17:22">&gt;=</operator> <literal type="number" pos:start="17:24" pos:end="17:27">11</literal> <operator pos:start="17:27" pos:end="17:27">+</operator> <literal type="number" pos:start="17:29" pos:end="17:29">4</literal></expr>)</condition> <block pos:start="17:32" pos:end="67:5">{<block_content pos:start="19:9" pos:end="65:25">

        <decl_stmt pos:start="19:9" pos:end="19:26"><decl pos:start="19:9" pos:end="19:25"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:16">type</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:22">buf</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:45"><decl pos:start="21:9" pos:end="21:44"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:16">size</name> <init pos:start="21:18" pos:end="21:44">= <expr pos:start="21:20" pos:end="21:44"><call pos:start="21:20" pos:end="21:35"><name pos:start="21:20" pos:end="21:26">AV_RB24</name><argument_list pos:start="21:27" pos:end="21:35">(<argument pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:34"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:34"><name pos:start="21:29" pos:end="21:31">buf</name><index pos:start="21:32" pos:end="21:34">[<expr pos:start="21:33" pos:end="21:33"><literal type="number" pos:start="21:33" pos:end="21:33">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="21:37" pos:end="21:37">+</operator> <literal type="number" pos:start="21:39" pos:end="21:42">11</literal> <operator pos:start="21:42" pos:end="21:42">+</operator> <literal type="number" pos:start="21:44" pos:end="21:44">4</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="25:39"><if pos:start="23:9" pos:end="25:39">if <condition pos:start="23:12" pos:end="23:28">(<expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">&gt;</operator> <name pos:start="23:20" pos:end="23:27">buf_size</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:39"><block_content pos:start="25:13" pos:end="25:39">

            <return pos:start="25:13" pos:end="25:39">return <expr pos:start="25:20" pos:end="25:38"><name pos:start="25:20" pos:end="25:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="61:9"><if pos:start="27:9" pos:end="45:9">if <condition pos:start="27:12" pos:end="27:35">(<expr pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:16">type</name> <operator pos:start="27:18" pos:end="27:19">==</operator> <literal type="number" pos:start="27:21" pos:end="27:21">8</literal> <operator pos:start="27:23" pos:end="27:24">||</operator> <name pos:start="27:26" pos:end="27:29">type</name> <operator pos:start="27:31" pos:end="27:32">==</operator> <literal type="number" pos:start="27:34" pos:end="27:34">9</literal></expr>)</condition> <block pos:start="27:37" pos:end="45:9">{<block_content pos:start="29:13" pos:end="43:35">

            <if_stmt pos:start="29:13" pos:end="31:43"><if pos:start="29:13" pos:end="31:43">if <condition pos:start="29:16" pos:end="29:73">(<expr pos:start="29:17" pos:end="29:72"><name pos:start="29:17" pos:end="29:36"><name pos:start="29:17" pos:end="29:18">os</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:36">nb_extra_packets</name></name> <operator pos:start="29:38" pos:end="29:38">&gt;</operator> <call pos:start="29:40" pos:end="29:72"><name pos:start="29:40" pos:end="29:53">FF_ARRAY_ELEMS</name><argument_list pos:start="29:54" pos:end="29:72">(<argument pos:start="29:55" pos:end="29:71"><expr pos:start="29:55" pos:end="29:71"><name pos:start="29:55" pos:end="29:71"><name pos:start="29:55" pos:end="29:56">os</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:71">extra_packets</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:43"><block_content pos:start="31:17" pos:end="31:43">

                <return pos:start="31:17" pos:end="31:43">return <expr pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:64"><expr pos:start="33:13" pos:end="33:63"><name pos:start="33:13" pos:end="33:56"><name pos:start="33:13" pos:end="33:14">os</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:34">extra_packet_sizes</name><index pos:start="33:35" pos:end="33:56">[<expr pos:start="33:36" pos:end="33:55"><name pos:start="33:36" pos:end="33:55"><name pos:start="33:36" pos:end="33:37">os</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:55">nb_extra_packets</name></name></expr>]</index></name> <operator pos:start="33:58" pos:end="33:58">=</operator> <name pos:start="33:60" pos:end="33:63">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:70"><expr pos:start="35:13" pos:end="35:69"><name pos:start="35:13" pos:end="35:51"><name pos:start="35:13" pos:end="35:14">os</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:29">extra_packets</name><index pos:start="35:30" pos:end="35:51">[<expr pos:start="35:31" pos:end="35:50"><name pos:start="35:31" pos:end="35:50"><name pos:start="35:31" pos:end="35:32">os</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:50">nb_extra_packets</name></name></expr>]</index></name> <operator pos:start="35:53" pos:end="35:53">=</operator> <call pos:start="35:55" pos:end="35:69"><name pos:start="35:55" pos:end="35:63">av_malloc</name><argument_list pos:start="35:64" pos:end="35:69">(<argument pos:start="35:65" pos:end="35:68"><expr pos:start="35:65" pos:end="35:68"><name pos:start="35:65" pos:end="35:68">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="39:39"><if pos:start="37:13" pos:end="39:39">if <condition pos:start="37:16" pos:end="37:57">(<expr pos:start="37:17" pos:end="37:56"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:56"><name pos:start="37:18" pos:end="37:19">os</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:34">extra_packets</name><index pos:start="37:35" pos:end="37:56">[<expr pos:start="37:36" pos:end="37:55"><name pos:start="37:36" pos:end="37:55"><name pos:start="37:36" pos:end="37:37">os</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:55">nb_extra_packets</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:39"><block_content pos:start="39:17" pos:end="39:39">

                <return pos:start="39:17" pos:end="39:39">return <expr pos:start="39:24" pos:end="39:38"><call pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:30">AVERROR</name><argument_list pos:start="39:31" pos:end="39:38">(<argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:71"><expr pos:start="41:13" pos:end="41:70"><call pos:start="41:13" pos:end="41:70"><name pos:start="41:13" pos:end="41:18">memcpy</name><argument_list pos:start="41:19" pos:end="41:70">(<argument pos:start="41:20" pos:end="41:58"><expr pos:start="41:20" pos:end="41:58"><name pos:start="41:20" pos:end="41:58"><name pos:start="41:20" pos:end="41:21">os</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:36">extra_packets</name><index pos:start="41:37" pos:end="41:58">[<expr pos:start="41:38" pos:end="41:57"><name pos:start="41:38" pos:end="41:57"><name pos:start="41:38" pos:end="41:39">os</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:57">nb_extra_packets</name></name></expr>]</index></name></expr></argument>, <argument pos:start="41:61" pos:end="41:63"><expr pos:start="41:61" pos:end="41:63"><name pos:start="41:61" pos:end="41:63">buf</name></expr></argument>, <argument pos:start="41:66" pos:end="41:69"><expr pos:start="41:66" pos:end="41:69"><name pos:start="41:66" pos:end="41:69">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:14">os</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:32">nb_extra_packets</name></name><operator pos:start="43:33" pos:end="43:34">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="45:11" pos:end="61:9">else if <condition pos:start="45:19" pos:end="45:32">(<expr pos:start="45:20" pos:end="45:31"><name pos:start="45:20" pos:end="45:23">type</name> <operator pos:start="45:25" pos:end="45:26">==</operator> <literal type="number" pos:start="45:28" pos:end="45:31">0x12</literal></expr>)</condition> <block pos:start="45:34" pos:end="61:9">{<block_content pos:start="47:13" pos:end="59:62">

            <if_stmt pos:start="47:13" pos:end="49:43"><if pos:start="47:13" pos:end="49:43">if <condition pos:start="47:16" pos:end="47:29">(<expr pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:28"><name pos:start="47:17" pos:end="47:18">os</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:28">metadata</name></name></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:43"><block_content pos:start="49:17" pos:end="49:43">

                <return pos:start="49:17" pos:end="49:43">return <expr pos:start="49:24" pos:end="49:42"><name pos:start="49:24" pos:end="49:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:46"><expr pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:14">os</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:29">metadata_size</name></name> <operator pos:start="51:31" pos:end="51:31">=</operator> <name pos:start="51:33" pos:end="51:36">size</name> <operator pos:start="51:38" pos:end="51:38">-</operator> <literal type="number" pos:start="51:40" pos:end="51:43">11</literal> <operator pos:start="51:43" pos:end="51:43">-</operator> <literal type="number" pos:start="51:45" pos:end="51:45">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:61"><expr pos:start="53:13" pos:end="53:60"><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:14">os</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:24">metadata</name></name>      <operator pos:start="53:31" pos:end="53:31">=</operator> <call pos:start="53:33" pos:end="53:60"><name pos:start="53:33" pos:end="53:41">av_malloc</name><argument_list pos:start="53:42" pos:end="53:60">(<argument pos:start="53:43" pos:end="53:59"><expr pos:start="53:43" pos:end="53:59"><name pos:start="53:43" pos:end="53:59"><name pos:start="53:43" pos:end="53:44">os</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:59">metadata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:39"><if pos:start="55:13" pos:end="57:39">if <condition pos:start="55:16" pos:end="55:30">(<expr pos:start="55:17" pos:end="55:29"><operator pos:start="55:17" pos:end="55:17">!</operator><name pos:start="55:18" pos:end="55:29"><name pos:start="55:18" pos:end="55:19">os</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:29">metadata</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:39"><block_content pos:start="57:17" pos:end="57:39">

                <return pos:start="57:17" pos:end="57:39">return <expr pos:start="57:24" pos:end="57:38"><call pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:30">AVERROR</name><argument_list pos:start="57:31" pos:end="57:38">(<argument pos:start="57:32" pos:end="57:37"><expr pos:start="57:32" pos:end="57:37"><name pos:start="57:32" pos:end="57:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:62"><expr pos:start="59:13" pos:end="59:61"><call pos:start="59:13" pos:end="59:61"><name pos:start="59:13" pos:end="59:18">memcpy</name><argument_list pos:start="59:19" pos:end="59:61">(<argument pos:start="59:20" pos:end="59:31"><expr pos:start="59:20" pos:end="59:31"><name pos:start="59:20" pos:end="59:31"><name pos:start="59:20" pos:end="59:21">os</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">metadata</name></name></expr></argument>, <argument pos:start="59:34" pos:end="59:41"><expr pos:start="59:34" pos:end="59:41"><name pos:start="59:34" pos:end="59:36">buf</name> <operator pos:start="59:38" pos:end="59:38">+</operator> <literal type="number" pos:start="59:40" pos:end="59:41">11</literal></expr></argument>, <argument pos:start="59:44" pos:end="59:60"><expr pos:start="59:44" pos:end="59:60"><name pos:start="59:44" pos:end="59:60"><name pos:start="59:44" pos:end="59:45">os</name><operator pos:start="59:46" pos:end="59:47">-&gt;</operator><name pos:start="59:48" pos:end="59:60">metadata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:11">buf</name>      <operator pos:start="63:18" pos:end="63:19">+=</operator> <name pos:start="63:21" pos:end="63:24">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:16">buf_size</name> <operator pos:start="65:18" pos:end="65:19">-=</operator> <name pos:start="65:21" pos:end="65:24">size</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="69:5" pos:end="71:35"><if pos:start="69:5" pos:end="71:35">if <condition pos:start="69:8" pos:end="69:22">(<expr pos:start="69:9" pos:end="69:21"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:21"><name pos:start="69:10" pos:end="69:11">os</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:21">metadata</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:35"><block_content pos:start="71:9" pos:end="71:35">

        <return pos:start="71:9" pos:end="71:35">return <expr pos:start="71:16" pos:end="71:34"><name pos:start="71:16" pos:end="71:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
