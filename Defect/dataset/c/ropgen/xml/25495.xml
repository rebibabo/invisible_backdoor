<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25495.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vnc_update_stats</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:38">VncDisplay</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">vd</name></decl></parameter>,  <parameter pos:start="1:46" pos:end="1:64"><decl pos:start="1:46" pos:end="1:64"><type pos:start="1:46" pos:end="1:64"><name pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:51">struct</name> <name pos:start="1:53" pos:end="1:59">timeval</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type> <name pos:start="1:63" pos:end="1:64">tv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:21">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">width</name> <init pos:start="5:15" pos:end="5:52">= <expr pos:start="5:17" pos:end="5:52"><call pos:start="5:17" pos:end="5:52"><name pos:start="5:17" pos:end="5:38">pixman_image_get_width</name><argument_list pos:start="5:39" pos:end="5:52">(<argument pos:start="5:40" pos:end="5:51"><expr pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:51"><name pos:start="5:40" pos:end="5:41">vd</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:48">guest</name><operator pos:start="5:49" pos:end="5:49">.</operator><name pos:start="5:50" pos:end="5:51">fb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">height</name> <init pos:start="7:16" pos:end="7:54">= <expr pos:start="7:18" pos:end="7:54"><call pos:start="7:18" pos:end="7:54"><name pos:start="7:18" pos:end="7:40">pixman_image_get_height</name><argument_list pos:start="7:41" pos:end="7:54">(<argument pos:start="7:42" pos:end="7:53"><expr pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:43">vd</name><operator pos:start="7:44" pos:end="7:45">-&gt;</operator><name pos:start="7:46" pos:end="7:50">guest</name><operator pos:start="7:51" pos:end="7:51">.</operator><name pos:start="7:52" pos:end="7:53">fb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">x</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">timeval</name></name></type> <name pos:start="11:20" pos:end="11:22">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">has_dirty</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="29:5">for <control pos:start="17:9" pos:end="17:47">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">y</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:17">y</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:26">height</name></expr>;</condition> <incr pos:start="17:29" pos:end="17:46"><expr pos:start="17:29" pos:end="17:46"><name pos:start="17:29" pos:end="17:29">y</name> <operator pos:start="17:31" pos:end="17:32">+=</operator> <name pos:start="17:34" pos:end="17:46">VNC_STAT_RECT</name></expr></incr>)</control> <block pos:start="17:49" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <for pos:start="19:9" pos:end="27:9">for <control pos:start="19:13" pos:end="19:50">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">x</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:30"><expr pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:21">x</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:29">width</name></expr>;</condition> <incr pos:start="19:32" pos:end="19:49"><expr pos:start="19:32" pos:end="19:49"><name pos:start="19:32" pos:end="19:32">x</name> <operator pos:start="19:34" pos:end="19:35">+=</operator> <name pos:start="19:37" pos:end="19:49">VNC_STAT_RECT</name></expr></incr>)</control> <block pos:start="19:52" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:34">

            <decl_stmt pos:start="21:13" pos:end="21:56"><decl pos:start="21:13" pos:end="21:55"><type pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:23">VncRectStat</name> <modifier pos:start="21:25" pos:end="21:25">*</modifier></type><name pos:start="21:26" pos:end="21:29">rect</name> <init pos:start="21:31" pos:end="21:55">= <expr pos:start="21:33" pos:end="21:55"><call pos:start="21:33" pos:end="21:55"><name pos:start="21:33" pos:end="21:45">vnc_stat_rect</name><argument_list pos:start="21:46" pos:end="21:55">(<argument pos:start="21:47" pos:end="21:48"><expr pos:start="21:47" pos:end="21:48"><name pos:start="21:47" pos:end="21:48">vd</name></expr></argument>, <argument pos:start="21:51" pos:end="21:51"><expr pos:start="21:51" pos:end="21:51"><name pos:start="21:51" pos:end="21:51">x</name></expr></argument>, <argument pos:start="21:54" pos:end="21:54"><expr pos:start="21:54" pos:end="21:54"><name pos:start="21:54" pos:end="21:54">y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:16">rect</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">updated</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:33">false</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><call pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:17">qemu_timersub</name><argument_list pos:start="33:18" pos:end="33:47">(<argument pos:start="33:19" pos:end="33:20"><expr pos:start="33:19" pos:end="33:20"><name pos:start="33:19" pos:end="33:20">tv</name></expr></argument>, <argument pos:start="33:23" pos:end="33:40"><expr pos:start="33:23" pos:end="33:40"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:40">VNC_REFRESH_STATS</name></expr></argument>, <argument pos:start="33:43" pos:end="33:46"><expr pos:start="33:43" pos:end="33:46"><operator pos:start="33:43" pos:end="33:43">&amp;</operator><name pos:start="33:44" pos:end="33:46">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:54">(<expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:16">timercmp</name><argument_list pos:start="37:17" pos:end="37:53">(<argument pos:start="37:18" pos:end="37:43"><expr pos:start="37:18" pos:end="37:43"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:43"><name pos:start="37:19" pos:end="37:20">vd</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">guest</name><operator pos:start="37:28" pos:end="37:28">.</operator><name pos:start="37:29" pos:end="37:43">last_freq_check</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:49"><expr pos:start="37:46" pos:end="37:49"><operator pos:start="37:46" pos:end="37:46">&amp;</operator><name pos:start="37:47" pos:end="37:49">res</name></expr></argument>, <argument pos:start="37:52" pos:end="37:52"><expr pos:start="37:52" pos:end="37:52"><operator pos:start="37:52" pos:end="37:52">&gt;</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:56" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:25">

        <return pos:start="39:9" pos:end="39:25">return <expr pos:start="39:16" pos:end="39:24"><name pos:start="39:16" pos:end="39:24">has_dirty</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:6">vd</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:13">guest</name><operator pos:start="43:14" pos:end="43:14">.</operator><name pos:start="43:15" pos:end="43:29">last_freq_check</name></name> <operator pos:start="43:31" pos:end="43:31">=</operator> <operator pos:start="43:33" pos:end="43:33">*</operator><name pos:start="43:34" pos:end="43:35">tv</name></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="103:5">for <control pos:start="47:9" pos:end="47:47">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">y</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:17">y</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <name pos:start="47:21" pos:end="47:26">height</name></expr>;</condition> <incr pos:start="47:29" pos:end="47:46"><expr pos:start="47:29" pos:end="47:46"><name pos:start="47:29" pos:end="47:29">y</name> <operator pos:start="47:31" pos:end="47:32">+=</operator> <name pos:start="47:34" pos:end="47:46">VNC_STAT_RECT</name></expr></incr>)</control> <block pos:start="47:49" pos:end="103:5">{<block_content pos:start="49:9" pos:end="101:9">

        <for pos:start="49:9" pos:end="101:9">for <control pos:start="49:13" pos:end="49:50">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">x</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:30"><expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:21">x</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:29">width</name></expr>;</condition> <incr pos:start="49:32" pos:end="49:49"><expr pos:start="49:32" pos:end="49:49"><name pos:start="49:32" pos:end="49:32">x</name> <operator pos:start="49:34" pos:end="49:35">+=</operator> <name pos:start="49:37" pos:end="49:49">VNC_STAT_RECT</name></expr></incr>)</control> <block pos:start="49:52" pos:end="101:9">{<block_content pos:start="51:13" pos:end="99:41">

            <decl_stmt pos:start="51:13" pos:end="51:55"><decl pos:start="51:13" pos:end="51:54"><type pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:23">VncRectStat</name> <modifier pos:start="51:25" pos:end="51:25">*</modifier></type><name pos:start="51:26" pos:end="51:29">rect</name><init pos:start="51:30" pos:end="51:54">= <expr pos:start="51:32" pos:end="51:54"><call pos:start="51:32" pos:end="51:54"><name pos:start="51:32" pos:end="51:44">vnc_stat_rect</name><argument_list pos:start="51:45" pos:end="51:54">(<argument pos:start="51:46" pos:end="51:47"><expr pos:start="51:46" pos:end="51:47"><name pos:start="51:46" pos:end="51:47">vd</name></expr></argument>, <argument pos:start="51:50" pos:end="51:50"><expr pos:start="51:50" pos:end="51:50"><name pos:start="51:50" pos:end="51:50">x</name></expr></argument>, <argument pos:start="51:53" pos:end="51:53"><expr pos:start="51:53" pos:end="51:53"><name pos:start="51:53" pos:end="51:53">y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:48"><decl pos:start="53:13" pos:end="53:47"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:21">count</name> <init pos:start="53:23" pos:end="53:47">= <expr pos:start="53:25" pos:end="53:47"><call pos:start="53:25" pos:end="53:47"><name pos:start="53:25" pos:end="53:34">ARRAY_SIZE</name><argument_list pos:start="53:35" pos:end="53:47">(<argument pos:start="53:36" pos:end="53:46"><expr pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:46"><name pos:start="53:36" pos:end="53:39">rect</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:46">times</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:36"><decl pos:start="55:13" pos:end="55:30"><type pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:18">struct</name> <name pos:start="55:20" pos:end="55:26">timeval</name></name></type> <name pos:start="55:28" pos:end="55:30">min</name></decl>, <decl pos:start="55:33" pos:end="55:35"><type ref="prev" pos:start="55:13" pos:end="55:26"/><name pos:start="55:33" pos:end="55:35">max</name></decl>;</decl_stmt>



            <if_stmt pos:start="59:13" pos:end="63:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:53">(<expr pos:start="59:17" pos:end="59:52"><operator pos:start="59:17" pos:end="59:17">!</operator><call pos:start="59:18" pos:end="59:52"><name pos:start="59:18" pos:end="59:27">timerisset</name><argument_list pos:start="59:28" pos:end="59:52">(<argument pos:start="59:29" pos:end="59:51"><expr pos:start="59:29" pos:end="59:51"><operator pos:start="59:29" pos:end="59:29">&amp;</operator><name pos:start="59:30" pos:end="59:51"><name pos:start="59:30" pos:end="59:33">rect</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:40">times</name><index pos:start="59:41" pos:end="59:51">[<expr pos:start="59:42" pos:end="59:50"><name pos:start="59:42" pos:end="59:46">count</name> <operator pos:start="59:48" pos:end="59:48">-</operator> <literal type="number" pos:start="59:50" pos:end="59:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:55" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:26">

                <continue pos:start="61:17" pos:end="61:26">continue ;</continue>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:63"><expr pos:start="67:13" pos:end="67:62"><name pos:start="67:13" pos:end="67:15">max</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:62"><name pos:start="67:19" pos:end="67:22">rect</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:29">times</name><index pos:start="67:30" pos:end="67:62">[<expr pos:start="67:31" pos:end="67:61"><operator pos:start="67:31" pos:end="67:31">(</operator><name pos:start="67:32" pos:end="67:40"><name pos:start="67:32" pos:end="67:35">rect</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:40">idx</name></name> <operator pos:start="67:42" pos:end="67:42">+</operator> <name pos:start="67:44" pos:end="67:48">count</name> <operator pos:start="67:50" pos:end="67:50">-</operator> <literal type="number" pos:start="67:52" pos:end="67:52">1</literal><operator pos:start="67:53" pos:end="67:53">)</operator> <operator pos:start="67:55" pos:end="67:55">%</operator> <name pos:start="67:57" pos:end="67:61">count</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><call pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:25">qemu_timersub</name><argument_list pos:start="69:26" pos:end="69:41">(<argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">tv</name></expr></argument>, <argument pos:start="69:31" pos:end="69:34"><expr pos:start="69:31" pos:end="69:34"><operator pos:start="69:31" pos:end="69:31">&amp;</operator><name pos:start="69:32" pos:end="69:34">max</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><operator pos:start="69:37" pos:end="69:37">&amp;</operator><name pos:start="69:38" pos:end="69:40">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="73:13" pos:end="83:13"><if pos:start="73:13" pos:end="83:13">if <condition pos:start="73:16" pos:end="73:54">(<expr pos:start="73:17" pos:end="73:53"><call pos:start="73:17" pos:end="73:53"><name pos:start="73:17" pos:end="73:24">timercmp</name><argument_list pos:start="73:25" pos:end="73:53">(<argument pos:start="73:26" pos:end="73:29"><expr pos:start="73:26" pos:end="73:29"><operator pos:start="73:26" pos:end="73:26">&amp;</operator><name pos:start="73:27" pos:end="73:29">res</name></expr></argument>, <argument pos:start="73:32" pos:end="73:49"><expr pos:start="73:32" pos:end="73:49"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:49">VNC_REFRESH_LOSSY</name></expr></argument>, <argument pos:start="73:52" pos:end="73:52"><expr pos:start="73:52" pos:end="73:52"><operator pos:start="73:52" pos:end="73:52">&gt;</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:56" pos:end="83:13">{<block_content pos:start="75:17" pos:end="81:26">

                <expr_stmt pos:start="75:17" pos:end="75:31"><expr pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:20">rect</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:26">freq</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:62"><expr pos:start="77:17" pos:end="77:61"><name pos:start="77:17" pos:end="77:25">has_dirty</name> <operator pos:start="77:27" pos:end="77:28">+=</operator> <call pos:start="77:30" pos:end="77:61"><name pos:start="77:30" pos:end="77:51">vnc_refresh_lossy_rect</name><argument_list pos:start="77:52" pos:end="77:61">(<argument pos:start="77:53" pos:end="77:54"><expr pos:start="77:53" pos:end="77:54"><name pos:start="77:53" pos:end="77:54">vd</name></expr></argument>, <argument pos:start="77:57" pos:end="77:57"><expr pos:start="77:57" pos:end="77:57"><name pos:start="77:57" pos:end="77:57">x</name></expr></argument>, <argument pos:start="77:60" pos:end="77:60"><expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:61"><expr pos:start="79:17" pos:end="79:60"><call pos:start="79:17" pos:end="79:60"><name pos:start="79:17" pos:end="79:22">memset</name><argument_list pos:start="79:23" pos:end="79:60">(<argument pos:start="79:24" pos:end="79:34"><expr pos:start="79:24" pos:end="79:34"><name pos:start="79:24" pos:end="79:34"><name pos:start="79:24" pos:end="79:27">rect</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:34">times</name></name></expr></argument>, <argument pos:start="79:37" pos:end="79:37"><expr pos:start="79:37" pos:end="79:37"><literal type="number" pos:start="79:37" pos:end="79:37">0</literal></expr></argument>, <argument pos:start="79:40" pos:end="79:59"><expr pos:start="79:40" pos:end="79:59"><sizeof pos:start="79:40" pos:end="79:59">sizeof <argument_list pos:start="79:47" pos:end="79:59">(<argument pos:start="79:48" pos:end="79:58"><expr pos:start="79:48" pos:end="79:58"><name pos:start="79:48" pos:end="79:58"><name pos:start="79:48" pos:end="79:51">rect</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:58">times</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="81:17" pos:end="81:26">continue ;</continue>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="87:13" pos:end="87:41"><expr pos:start="87:13" pos:end="87:40"><name pos:start="87:13" pos:end="87:15">min</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:40"><name pos:start="87:19" pos:end="87:22">rect</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:29">times</name><index pos:start="87:30" pos:end="87:40">[<expr pos:start="87:31" pos:end="87:39"><name pos:start="87:31" pos:end="87:39"><name pos:start="87:31" pos:end="87:34">rect</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:39">idx</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:63"><expr pos:start="89:13" pos:end="89:62"><name pos:start="89:13" pos:end="89:15">max</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:62"><name pos:start="89:19" pos:end="89:22">rect</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:29">times</name><index pos:start="89:30" pos:end="89:62">[<expr pos:start="89:31" pos:end="89:61"><operator pos:start="89:31" pos:end="89:31">(</operator><name pos:start="89:32" pos:end="89:40"><name pos:start="89:32" pos:end="89:35">rect</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:40">idx</name></name> <operator pos:start="89:42" pos:end="89:42">+</operator> <name pos:start="89:44" pos:end="89:48">count</name> <operator pos:start="89:50" pos:end="89:50">-</operator> <literal type="number" pos:start="89:52" pos:end="89:52">1</literal><operator pos:start="89:53" pos:end="89:53">)</operator> <operator pos:start="89:55" pos:end="89:55">%</operator> <name pos:start="89:57" pos:end="89:61">count</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:44"><expr pos:start="91:13" pos:end="91:43"><call pos:start="91:13" pos:end="91:43"><name pos:start="91:13" pos:end="91:25">qemu_timersub</name><argument_list pos:start="91:26" pos:end="91:43">(<argument pos:start="91:27" pos:end="91:30"><expr pos:start="91:27" pos:end="91:30"><operator pos:start="91:27" pos:end="91:27">&amp;</operator><name pos:start="91:28" pos:end="91:30">max</name></expr></argument>, <argument pos:start="91:33" pos:end="91:36"><expr pos:start="91:33" pos:end="91:36"><operator pos:start="91:33" pos:end="91:33">&amp;</operator><name pos:start="91:34" pos:end="91:36">min</name></expr></argument>, <argument pos:start="91:39" pos:end="91:42"><expr pos:start="91:39" pos:end="91:42"><operator pos:start="91:39" pos:end="91:39">&amp;</operator><name pos:start="91:40" pos:end="91:42">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="95:13" pos:end="95:61"><expr pos:start="95:13" pos:end="95:60"><name pos:start="95:13" pos:end="95:22"><name pos:start="95:13" pos:end="95:16">rect</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:22">freq</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:35"><name pos:start="95:26" pos:end="95:28">res</name><operator pos:start="95:29" pos:end="95:29">.</operator><name pos:start="95:30" pos:end="95:35">tv_sec</name></name> <operator pos:start="95:37" pos:end="95:37">+</operator> <name pos:start="95:39" pos:end="95:49"><name pos:start="95:39" pos:end="95:41">res</name><operator pos:start="95:42" pos:end="95:42">.</operator><name pos:start="95:43" pos:end="95:49">tv_usec</name></name> <operator pos:start="95:51" pos:end="95:51">/</operator> <literal type="number" pos:start="95:53" pos:end="95:60">1000000.</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:32"><expr pos:start="97:13" pos:end="97:31"><name pos:start="97:13" pos:end="97:22"><name pos:start="97:13" pos:end="97:16">rect</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:22">freq</name></name> <operator pos:start="97:24" pos:end="97:25">/=</operator> <name pos:start="97:27" pos:end="97:31">count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:41"><expr pos:start="99:13" pos:end="99:40"><name pos:start="99:13" pos:end="99:22"><name pos:start="99:13" pos:end="99:16">rect</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">freq</name></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <literal type="number" pos:start="99:26" pos:end="99:27">1.</literal> <operator pos:start="99:29" pos:end="99:29">/</operator> <name pos:start="99:31" pos:end="99:40"><name pos:start="99:31" pos:end="99:34">rect</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:40">freq</name></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="105:5" pos:end="105:21">return <expr pos:start="105:12" pos:end="105:20"><name pos:start="105:12" pos:end="105:20">has_dirty</name></expr>;</return>

</block_content>}</block></function>
</unit>
