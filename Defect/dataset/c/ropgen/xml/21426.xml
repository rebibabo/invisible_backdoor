<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21426.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:29">usbnet_receive</name><parameter_list pos:start="1:30" pos:end="1:83">(<parameter pos:start="1:31" pos:end="1:49"><decl pos:start="1:31" pos:end="1:49"><type pos:start="1:31" pos:end="1:49"><name pos:start="1:31" pos:end="1:45">VLANClientState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">nc</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">buf</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:82"><decl pos:start="1:72" pos:end="1:82"><type pos:start="1:72" pos:end="1:82"><name pos:start="1:72" pos:end="1:77">size_t</name></type> <name pos:start="1:79" pos:end="1:82">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:16">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">USBNetState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:56">= <expr pos:start="5:22" pos:end="5:56"><call pos:start="5:22" pos:end="5:48"><name pos:start="5:22" pos:end="5:30">DO_UPCAST</name><argument_list pos:start="5:31" pos:end="5:48">(<argument pos:start="5:32" pos:end="5:39"><expr pos:start="5:32" pos:end="5:39"><name pos:start="5:32" pos:end="5:39">NICState</name></expr></argument>, <argument pos:start="5:42" pos:end="5:43"><expr pos:start="5:42" pos:end="5:43"><name pos:start="5:42" pos:end="5:43">nc</name></expr></argument>, <argument pos:start="5:46" pos:end="5:47"><expr pos:start="5:46" pos:end="5:47"><name pos:start="5:46" pos:end="5:47">nc</name></expr></argument>)</argument_list></call><operator pos:start="5:49" pos:end="5:50">-&gt;</operator><name pos:start="5:51" pos:end="5:56">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:34"><name pos:start="7:5" pos:end="7:32"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:32">rndis_packet_msg_type</name></name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:37">msg</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="65:5"><if pos:start="11:5" pos:end="55:5">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">rndis</name></name></expr>)</condition> <block pos:start="11:19" pos:end="55:5">{<block_content pos:start="13:9" pos:end="53:64">

        <expr_stmt pos:start="13:9" pos:end="13:57"><expr pos:start="13:9" pos:end="13:56"><name pos:start="13:9" pos:end="13:11">msg</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">(</operator>struct <name pos:start="13:23" pos:end="13:43">rndis_packet_msg_type</name> <operator pos:start="13:45" pos:end="13:45">*</operator><operator pos:start="13:46" pos:end="13:46">)</operator> <name pos:start="13:48" pos:end="13:56"><name pos:start="13:48" pos:end="13:48">s</name><operator pos:start="13:49" pos:end="13:50">-&gt;</operator><name pos:start="13:51" pos:end="13:56">in_buf</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:54">(<expr pos:start="15:13" pos:end="15:53"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:27"><name pos:start="15:14" pos:end="15:14">s</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:27">rndis_state</name></name> <operator pos:start="15:29" pos:end="15:30">==</operator> <name pos:start="15:32" pos:end="15:53">RNDIS_DATA_INITIALIZED</name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22">

            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="21:22"><if pos:start="19:9" pos:end="21:22">if <condition pos:start="19:12" pos:end="19:76">(<expr pos:start="19:13" pos:end="19:75"><name pos:start="19:13" pos:end="19:16">size</name> <operator pos:start="19:18" pos:end="19:18">+</operator> <sizeof pos:start="19:20" pos:end="19:55">sizeof<argument_list pos:start="19:26" pos:end="19:55">(<argument pos:start="19:27" pos:end="19:54"><expr pos:start="19:27" pos:end="19:54">struct <name pos:start="19:34" pos:end="19:54">rndis_packet_msg_type</name></expr></argument>)</argument_list></sizeof> <operator pos:start="19:57" pos:end="19:57">&gt;</operator> <sizeof pos:start="19:59" pos:end="19:75">sizeof<argument_list pos:start="19:65" pos:end="19:75">(<argument pos:start="19:66" pos:end="19:74"><expr pos:start="19:66" pos:end="19:74"><name pos:start="19:66" pos:end="19:74"><name pos:start="19:66" pos:end="19:66">s</name><operator pos:start="19:67" pos:end="19:68">-&gt;</operator><name pos:start="19:69" pos:end="19:74">in_buf</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:22"><block_content pos:start="21:13" pos:end="21:22">

            <return pos:start="21:13" pos:end="21:22">return <expr pos:start="21:20" pos:end="21:21"><operator pos:start="21:20" pos:end="21:20">-</operator><literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:61"><expr pos:start="25:9" pos:end="25:60"><call pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:14">memset</name><argument_list pos:start="25:15" pos:end="25:60">(<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">msg</name></expr></argument>, <argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr></argument>, <argument pos:start="25:24" pos:end="25:59"><expr pos:start="25:24" pos:end="25:59"><sizeof pos:start="25:24" pos:end="25:59">sizeof<argument_list pos:start="25:30" pos:end="25:59">(<argument pos:start="25:31" pos:end="25:58"><expr pos:start="25:31" pos:end="25:58">struct <name pos:start="25:38" pos:end="25:58">rndis_packet_msg_type</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:11">msg</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:24">MessageType</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <call pos:start="27:28" pos:end="27:56"><name pos:start="27:28" pos:end="27:38">cpu_to_le32</name><argument_list pos:start="27:39" pos:end="27:56">(<argument pos:start="27:40" pos:end="27:55"><expr pos:start="27:40" pos:end="27:55"><name pos:start="27:40" pos:end="27:55">RNDIS_PACKET_MSG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:86"><expr pos:start="29:9" pos:end="29:85"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:11">msg</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:26">MessageLength</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <call pos:start="29:30" pos:end="29:85"><name pos:start="29:30" pos:end="29:40">cpu_to_le32</name><argument_list pos:start="29:41" pos:end="29:85">(<argument pos:start="29:42" pos:end="29:84"><expr pos:start="29:42" pos:end="29:84"><name pos:start="29:42" pos:end="29:45">size</name> <operator pos:start="29:47" pos:end="29:47">+</operator> <sizeof pos:start="29:49" pos:end="29:84">sizeof<argument_list pos:start="29:55" pos:end="29:84">(<argument pos:start="29:56" pos:end="29:83"><expr pos:start="29:56" pos:end="29:83">struct <name pos:start="29:63" pos:end="29:83">rndis_packet_msg_type</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:80"><expr pos:start="31:9" pos:end="31:79"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:11">msg</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:23">DataOffset</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:79"><name pos:start="31:27" pos:end="31:37">cpu_to_le32</name><argument_list pos:start="31:38" pos:end="31:79">(<argument pos:start="31:39" pos:end="31:78"><expr pos:start="31:39" pos:end="31:78"><sizeof pos:start="31:39" pos:end="31:74">sizeof<argument_list pos:start="31:45" pos:end="31:74">(<argument pos:start="31:46" pos:end="31:73"><expr pos:start="31:46" pos:end="31:73">struct <name pos:start="31:53" pos:end="31:73">rndis_packet_msg_type</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:76" pos:end="31:76">-</operator> <literal type="number" pos:start="31:78" pos:end="31:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:11">msg</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:23">DataLength</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:43"><name pos:start="33:27" pos:end="33:37">cpu_to_le32</name><argument_list pos:start="33:38" pos:end="33:43">(<argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><name pos:start="33:39" pos:end="33:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="35:9" pos:end="49:11">/* msg-&gt;OOBDataOffset;

         * msg-&gt;OOBDataLength;

         * msg-&gt;NumOOBDataElements;

         * msg-&gt;PerPacketInfoOffset;

         * msg-&gt;PerPacketInfoLength;

         * msg-&gt;VcHandle;

         * msg-&gt;Reserved;

         */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><call pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:14">memcpy</name><argument_list pos:start="51:15" pos:end="51:34">(<argument pos:start="51:16" pos:end="51:22"><expr pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:18">msg</name> <operator pos:start="51:20" pos:end="51:20">+</operator> <literal type="number" pos:start="51:22" pos:end="51:22">1</literal></expr></argument>, <argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">buf</name></expr></argument>, <argument pos:start="51:30" pos:end="51:33"><expr pos:start="51:30" pos:end="51:33"><name pos:start="51:30" pos:end="51:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:64"><expr pos:start="53:9" pos:end="53:63"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">in_len</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:24">size</name> <operator pos:start="53:26" pos:end="53:26">+</operator> <sizeof pos:start="53:28" pos:end="53:63">sizeof<argument_list pos:start="53:34" pos:end="53:63">(<argument pos:start="53:35" pos:end="53:62"><expr pos:start="53:35" pos:end="53:62">struct <name pos:start="53:42" pos:end="53:62">rndis_packet_msg_type</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="65:5">else <block pos:start="55:12" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:25">

        <if_stmt pos:start="57:9" pos:end="59:22"><if pos:start="57:9" pos:end="59:22">if <condition pos:start="57:12" pos:end="57:37">(<expr pos:start="57:13" pos:end="57:36"><name pos:start="57:13" pos:end="57:16">size</name> <operator pos:start="57:18" pos:end="57:18">&gt;</operator> <sizeof pos:start="57:20" pos:end="57:36">sizeof<argument_list pos:start="57:26" pos:end="57:36">(<argument pos:start="57:27" pos:end="57:35"><expr pos:start="57:27" pos:end="57:35"><name pos:start="57:27" pos:end="57:35"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:35">in_buf</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:22"><block_content pos:start="59:13" pos:end="59:22">

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:14">memcpy</name><argument_list pos:start="61:15" pos:end="61:36">(<argument pos:start="61:16" pos:end="61:24"><expr pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:24"><name pos:start="61:16" pos:end="61:16">s</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:24">in_buf</name></name></expr></argument>, <argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">buf</name></expr></argument>, <argument pos:start="61:32" pos:end="61:35"><expr pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:17">in_len</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:24">size</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:13">in_ptr</name></name> <operator pos:start="67:15" pos:end="67:15">=</operator> <literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>;</expr_stmt>

    <return pos:start="69:5" pos:end="69:16">return <expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
