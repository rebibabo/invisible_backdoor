<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15378.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_tak_decode_frame_header</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><name pos:start="1:55" pos:end="1:67">GetBitContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">gb</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:48"><decl pos:start="3:32" pos:end="3:48"><type pos:start="3:32" pos:end="3:48"><name pos:start="3:32" pos:end="3:44">TAKStreamInfo</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:48">ti</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:70"><decl pos:start="3:51" pos:end="3:70"><type pos:start="3:51" pos:end="3:70"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:70">log_level_offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:13">

    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="7:80">(<expr pos:start="7:9" pos:end="7:79"><call pos:start="7:9" pos:end="7:51"><name pos:start="7:9" pos:end="7:16">get_bits</name><argument_list pos:start="7:17" pos:end="7:51">(<argument pos:start="7:18" pos:end="7:19"><expr pos:start="7:18" pos:end="7:19"><name pos:start="7:18" pos:end="7:19">gb</name></expr></argument>, <argument pos:start="7:22" pos:end="7:50"><expr pos:start="7:22" pos:end="7:50"><name pos:start="7:22" pos:end="7:50">TAK_FRAME_HEADER_SYNC_ID_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="7:53" pos:end="7:54">!=</operator> <name pos:start="7:56" pos:end="7:79">TAK_FRAME_HEADER_SYNC_ID</name></expr>)</condition> <block pos:start="7:82" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:35">

        <expr_stmt pos:start="9:9" pos:end="9:76"><expr pos:start="9:9" pos:end="9:75"><call pos:start="9:9" pos:end="9:75"><name pos:start="9:9" pos:end="9:14">av_log</name><argument_list pos:start="9:15" pos:end="9:75">(<argument pos:start="9:16" pos:end="9:20"><expr pos:start="9:16" pos:end="9:20"><name pos:start="9:16" pos:end="9:20">avctx</name></expr></argument>, <argument pos:start="9:23" pos:end="9:53"><expr pos:start="9:23" pos:end="9:53"><name pos:start="9:23" pos:end="9:34">AV_LOG_ERROR</name> <operator pos:start="9:36" pos:end="9:36">+</operator> <name pos:start="9:38" pos:end="9:53">log_level_offset</name></expr></argument>, <argument pos:start="9:56" pos:end="9:74"><expr pos:start="9:56" pos:end="9:74"><literal type="string" pos:start="9:56" pos:end="9:74">"missing sync id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:35">return <expr pos:start="11:16" pos:end="11:34"><name pos:start="11:16" pos:end="11:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:6">ti</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:13">flags</name></name>     <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:61"><name pos:start="17:21" pos:end="17:28">get_bits</name><argument_list pos:start="17:29" pos:end="17:61">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">gb</name></expr></argument>, <argument pos:start="17:34" pos:end="17:60"><expr pos:start="17:34" pos:end="17:60"><name pos:start="17:34" pos:end="17:60">TAK_FRAME_HEADER_FLAGS_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:59"><expr pos:start="19:5" pos:end="19:58"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:6">ti</name><operator pos:start="19:7" pos:end="19:8">-&gt;</operator><name pos:start="19:9" pos:end="19:17">frame_num</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:58"><name pos:start="19:21" pos:end="19:28">get_bits</name><argument_list pos:start="19:29" pos:end="19:58">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">gb</name></expr></argument>, <argument pos:start="19:34" pos:end="19:57"><expr pos:start="19:34" pos:end="19:57"><name pos:start="19:34" pos:end="19:57">TAK_FRAME_HEADER_NO_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:43">(<expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:10">ti</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">flags</name></name> <operator pos:start="23:19" pos:end="23:19">&amp;</operator> <name pos:start="23:21" pos:end="23:42">TAK_FRAME_FLAG_IS_LAST</name></expr>)</condition> <block pos:start="23:45" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:25">

        <expr_stmt pos:start="25:9" pos:end="25:86"><expr pos:start="25:9" pos:end="25:85"><name pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:10">ti</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:30">last_frame_samples</name></name> <operator pos:start="25:32" pos:end="25:32">=</operator> <call pos:start="25:34" pos:end="25:81"><name pos:start="25:34" pos:end="25:41">get_bits</name><argument_list pos:start="25:42" pos:end="25:81">(<argument pos:start="25:43" pos:end="25:44"><expr pos:start="25:43" pos:end="25:44"><name pos:start="25:43" pos:end="25:44">gb</name></expr></argument>, <argument pos:start="25:47" pos:end="25:80"><expr pos:start="25:47" pos:end="25:80"><name pos:start="25:47" pos:end="25:80">TAK_FRAME_HEADER_SAMPLE_COUNT_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="25:83" pos:end="25:83">+</operator> <literal type="number" pos:start="25:85" pos:end="25:85">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">skip_bits</name><argument_list pos:start="27:18" pos:end="27:24">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">gb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:35">

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:30"><name pos:start="31:9" pos:end="31:10">ti</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:30">last_frame_samples</name></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:44">(<expr pos:start="37:9" pos:end="37:43"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:10">ti</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:17">flags</name></name> <operator pos:start="37:19" pos:end="37:19">&amp;</operator> <name pos:start="37:21" pos:end="37:43">TAK_FRAME_FLAG_HAS_INFO</name></expr>)</condition> <block pos:start="37:46" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:27">

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:35">avpriv_tak_parse_streaminfo</name><argument_list pos:start="39:36" pos:end="39:43">(<argument pos:start="39:37" pos:end="39:38"><expr pos:start="39:37" pos:end="39:38"><name pos:start="39:37" pos:end="39:38">gb</name></expr></argument>, <argument pos:start="39:41" pos:end="39:42"><expr pos:start="39:41" pos:end="39:42"><name pos:start="39:41" pos:end="39:42">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="45:30"><if pos:start="43:9" pos:end="45:30">if <condition pos:start="43:12" pos:end="43:28">(<expr pos:start="43:13" pos:end="43:27"><call pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:20">get_bits</name><argument_list pos:start="43:21" pos:end="43:27">(<argument pos:start="43:22" pos:end="43:23"><expr pos:start="43:22" pos:end="43:23"><name pos:start="43:22" pos:end="43:23">gb</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">6</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:30"><block_content pos:start="45:13" pos:end="45:30">

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><call pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:21">skip_bits</name><argument_list pos:start="45:22" pos:end="45:29">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">gb</name></expr></argument>, <argument pos:start="45:27" pos:end="45:28"><expr pos:start="45:27" pos:end="45:28"><literal type="number" pos:start="45:27" pos:end="45:28">25</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><call pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:22">align_get_bits</name><argument_list pos:start="47:23" pos:end="47:26">(<argument pos:start="47:24" pos:end="47:25"><expr pos:start="47:24" pos:end="47:25"><name pos:start="47:24" pos:end="47:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="55:35"><if pos:start="53:5" pos:end="55:35">if <condition pos:start="53:8" pos:end="53:48">(<expr pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:10">ti</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:17">flags</name></name> <operator pos:start="53:19" pos:end="53:19">&amp;</operator> <name pos:start="53:21" pos:end="53:47">TAK_FRAME_FLAG_HAS_METADATA</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:35"><block_content pos:start="55:9" pos:end="55:35">

        <return pos:start="55:9" pos:end="55:35">return <expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><call pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:13">skip_bits</name><argument_list pos:start="59:14" pos:end="59:21">(<argument pos:start="59:15" pos:end="59:16"><expr pos:start="59:15" pos:end="59:16"><name pos:start="59:15" pos:end="59:16">gb</name></expr></argument>, <argument pos:start="59:19" pos:end="59:20"><expr pos:start="59:19" pos:end="59:20"><literal type="number" pos:start="59:19" pos:end="59:20">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
