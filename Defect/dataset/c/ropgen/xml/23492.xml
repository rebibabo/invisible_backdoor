<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23492.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">parse_option_size</name><parameter_list pos:start="1:23" pos:end="3:51">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">name</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">value</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:31">uint64_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:36">ret</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:50"><decl pos:start="3:39" pos:end="3:50"><type pos:start="3:39" pos:end="3:50"><name pos:start="3:39" pos:end="3:43">Error</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier><modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:16">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:43"><expr pos:start="13:5" pos:end="13:42"><name pos:start="13:5" pos:end="13:7">err</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:42"><name pos:start="13:11" pos:end="13:22">qemu_strtosz</name><argument_list pos:start="13:23" pos:end="13:42">(<argument pos:start="13:24" pos:end="13:28"><expr pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:28">value</name></expr></argument>, <argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">NULL</name></expr></argument>, <argument pos:start="13:37" pos:end="13:41"><expr pos:start="13:37" pos:end="13:41"><operator pos:start="13:37" pos:end="13:37">&amp;</operator><name pos:start="13:38" pos:end="13:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <operator pos:start="15:16" pos:end="15:16">-</operator><name pos:start="15:17" pos:end="15:22">ERANGE</name></expr>)</condition> <block pos:start="15:25" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="19:32"><expr pos:start="17:9" pos:end="19:31"><call pos:start="17:9" pos:end="19:31"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="19:31">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:69"><expr pos:start="17:26" pos:end="17:69"><literal type="string" pos:start="17:26" pos:end="17:69">"Value '%s' is too large for parameter '%s'"</literal></expr></argument>,

                   <argument pos:start="19:20" pos:end="19:24"><expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:24">value</name></expr></argument>, <argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="39:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">err</name></expr>)</condition> <block pos:start="25:14" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:15">

        <expr_stmt pos:start="27:9" pos:end="29:55"><expr pos:start="27:9" pos:end="29:54"><call pos:start="27:9" pos:end="29:54"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="29:54">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:53"><expr pos:start="27:26" pos:end="27:53"><name pos:start="27:26" pos:end="27:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="27:56" pos:end="27:59"><expr pos:start="27:56" pos:end="27:59"><name pos:start="27:56" pos:end="27:59">name</name></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:53"><expr pos:start="29:20" pos:end="29:53"><literal type="string" pos:start="29:20" pos:end="29:53">"a non-negative number below 2^64"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="35:59"><expr pos:start="31:9" pos:end="35:58"><call pos:start="31:9" pos:end="35:58"><name pos:start="31:9" pos:end="31:25">error_append_hint</name><argument_list pos:start="31:26" pos:end="35:58">(<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">errp</name></expr></argument>, <argument pos:start="31:33" pos:end="35:57"><expr pos:start="31:33" pos:end="35:57"><literal type="string" pos:start="31:33" pos:end="31:74">"Optional suffix k, M, G, T, P or E means"</literal>

                          <literal type="string" pos:start="33:27" pos:end="33:64">" kilo-, mega-, giga-, tera-, peta-\n"</literal>

                          <literal type="string" pos:start="35:27" pos:end="35:57">"and exabytes, respectively.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:8">ret</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <name pos:start="41:12" pos:end="41:15">size</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
