<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6355.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_user_data</name><parameter_list pos:start="1:28" pos:end="1:65">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">MpegEncContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:64"><decl pos:start="1:48" pos:end="1:64"><type pos:start="1:48" pos:end="1:64"><name pos:start="1:48" pos:end="1:60">GetBitContext</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:64">gb</name></decl></parameter>)</parameter_list><block pos:start="1:66" pos:end="97:1">{<block_content pos:start="3:5" pos:end="95:13">

    <decl_stmt pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:8"><name pos:start="3:5" pos:end="3:8">char</name></type> <name pos:start="3:10" pos:end="3:17"><name pos:start="3:10" pos:end="3:12">buf</name><index pos:start="3:13" pos:end="3:17">[<expr pos:start="3:14" pos:end="3:16"><literal type="number" pos:start="3:14" pos:end="3:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">e</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ver</name></decl>, <decl pos:start="9:14" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:18">build</name></decl>, <decl pos:start="9:21" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:24">ver2</name></decl>, <decl pos:start="9:27" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:30">ver3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:13">last</name></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="21:5">for<control pos:start="15:8" pos:end="15:24">(<init pos:start="15:9" pos:end="15:12"><expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:9">i</name><operator pos:start="15:10" pos:end="15:10">=</operator><literal type="number" pos:start="15:11" pos:end="15:11">0</literal></expr>;</init> <condition pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name><operator pos:start="15:15" pos:end="15:15">&lt;</operator><literal type="number" pos:start="15:16" pos:end="15:18">255</literal></expr>;</condition> <incr pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:21">i</name><operator pos:start="15:22" pos:end="15:23">++</operator></expr></incr>)</control><block pos:start="15:25" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:32">

        <if_stmt pos:start="17:9" pos:end="17:41"><if pos:start="17:9" pos:end="17:41">if<condition pos:start="17:11" pos:end="17:34">(<expr pos:start="17:12" pos:end="17:33"><call pos:start="17:12" pos:end="17:28"><name pos:start="17:12" pos:end="17:20">show_bits</name><argument_list pos:start="17:21" pos:end="17:28">(<argument pos:start="17:22" pos:end="17:23"><expr pos:start="17:22" pos:end="17:23"><name pos:start="17:22" pos:end="17:23">gb</name></expr></argument>, <argument pos:start="17:26" pos:end="17:27"><expr pos:start="17:26" pos:end="17:27"><literal type="number" pos:start="17:26" pos:end="17:27">23</literal></expr></argument>)</argument_list></call> <operator pos:start="17:30" pos:end="17:31">==</operator> <literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr>)</condition><block type="pseudo" pos:start="17:36" pos:end="17:41"><block_content pos:start="17:36" pos:end="17:41"> <break pos:start="17:36" pos:end="17:41">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:32"><expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:11">buf</name><index pos:start="19:12" pos:end="19:14">[<expr pos:start="19:13" pos:end="19:13"><name pos:start="19:13" pos:end="19:13">i</name></expr>]</index></name><operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:24">get_bits</name><argument_list pos:start="19:25" pos:end="19:31">(<argument pos:start="19:26" pos:end="19:27"><expr pos:start="19:26" pos:end="19:27"><name pos:start="19:26" pos:end="19:27">gb</name></expr></argument>, <argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><literal type="number" pos:start="19:30" pos:end="19:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="23:5" pos:end="23:13"><expr pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:7">buf</name><index pos:start="23:8" pos:end="23:10">[<expr pos:start="23:9" pos:end="23:9"><name pos:start="23:9" pos:end="23:9">i</name></expr>]</index></name><operator pos:start="23:11" pos:end="23:11">=</operator><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:24">/* divx detection */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:5">e</name><operator pos:start="29:6" pos:end="29:6">=</operator><call pos:start="29:7" pos:end="29:57"><name pos:start="29:7" pos:end="29:12">sscanf</name><argument_list pos:start="29:13" pos:end="29:57">(<argument pos:start="29:14" pos:end="29:16"><expr pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">buf</name></expr></argument>, <argument pos:start="29:19" pos:end="29:35"><expr pos:start="29:19" pos:end="29:35"><literal type="string" pos:start="29:19" pos:end="29:35">"DivX%dBuild%d%c"</literal></expr></argument>, <argument pos:start="29:38" pos:end="29:41"><expr pos:start="29:38" pos:end="29:41"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:41">ver</name></expr></argument>, <argument pos:start="29:44" pos:end="29:49"><expr pos:start="29:44" pos:end="29:49"><operator pos:start="29:44" pos:end="29:44">&amp;</operator><name pos:start="29:45" pos:end="29:49">build</name></expr></argument>, <argument pos:start="29:52" pos:end="29:56"><expr pos:start="29:52" pos:end="29:56"><operator pos:start="29:52" pos:end="29:52">&amp;</operator><name pos:start="29:53" pos:end="29:56">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="33:58"><if pos:start="31:5" pos:end="33:58">if<condition pos:start="31:7" pos:end="31:11">(<expr pos:start="31:8" pos:end="31:10"><name pos:start="31:8" pos:end="31:8">e</name><operator pos:start="31:9" pos:end="31:9">&lt;</operator><literal type="number" pos:start="31:10" pos:end="31:10">2</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:58"><block_content pos:start="33:9" pos:end="33:58">

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:9">e</name><operator pos:start="33:10" pos:end="33:10">=</operator><call pos:start="33:11" pos:end="33:57"><name pos:start="33:11" pos:end="33:16">sscanf</name><argument_list pos:start="33:17" pos:end="33:57">(<argument pos:start="33:18" pos:end="33:20"><expr pos:start="33:18" pos:end="33:20"><name pos:start="33:18" pos:end="33:20">buf</name></expr></argument>, <argument pos:start="33:23" pos:end="33:35"><expr pos:start="33:23" pos:end="33:35"><literal type="string" pos:start="33:23" pos:end="33:35">"DivX%db%d%c"</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><operator pos:start="33:38" pos:end="33:38">&amp;</operator><name pos:start="33:39" pos:end="33:41">ver</name></expr></argument>, <argument pos:start="33:44" pos:end="33:49"><expr pos:start="33:44" pos:end="33:49"><operator pos:start="33:44" pos:end="33:44">&amp;</operator><name pos:start="33:45" pos:end="33:49">build</name></expr></argument>, <argument pos:start="33:52" pos:end="33:56"><expr pos:start="33:52" pos:end="33:56"><operator pos:start="33:52" pos:end="33:52">&amp;</operator><name pos:start="33:53" pos:end="33:56">last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if<condition pos:start="35:7" pos:end="35:12">(<expr pos:start="35:8" pos:end="35:11"><name pos:start="35:8" pos:end="35:8">e</name><operator pos:start="35:9" pos:end="35:10">&gt;=</operator><literal type="number" pos:start="35:11" pos:end="35:11">2</literal></expr>)</condition><block pos:start="35:13" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:42">

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:23">divx_version</name></name><operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:28">ver</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:21">divx_build</name></name><operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:28">build</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:22">divx_packed</name></name><operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:25">e</name><operator pos:start="41:26" pos:end="41:27">==</operator><literal type="number" pos:start="41:28" pos:end="41:28">3</literal> <operator pos:start="41:30" pos:end="41:31">&amp;&amp;</operator> <name pos:start="41:33" pos:end="41:36">last</name><operator pos:start="41:37" pos:end="41:38">==</operator><literal type="char" pos:start="41:39" pos:end="41:41">'p'</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="47:5" pos:end="47:26">/* ffmpeg detection */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:46"><expr pos:start="49:5" pos:end="49:45"><name pos:start="49:5" pos:end="49:5">e</name><operator pos:start="49:6" pos:end="49:6">=</operator><call pos:start="49:7" pos:end="49:43"><name pos:start="49:7" pos:end="49:12">sscanf</name><argument_list pos:start="49:13" pos:end="49:43">(<argument pos:start="49:14" pos:end="49:16"><expr pos:start="49:14" pos:end="49:16"><name pos:start="49:14" pos:end="49:16">buf</name></expr></argument>, <argument pos:start="49:19" pos:end="49:34"><expr pos:start="49:19" pos:end="49:34"><literal type="string" pos:start="49:19" pos:end="49:34">"FFmpe%*[^b]b%d"</literal></expr></argument>, <argument pos:start="49:37" pos:end="49:42"><expr pos:start="49:37" pos:end="49:42"><operator pos:start="49:37" pos:end="49:37">&amp;</operator><name pos:start="49:38" pos:end="49:42">build</name></expr></argument>)</argument_list></call><operator pos:start="49:44" pos:end="49:44">+</operator><literal type="number" pos:start="49:45" pos:end="49:45">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:93"><if pos:start="51:5" pos:end="53:93">if<condition pos:start="51:7" pos:end="51:12">(<expr pos:start="51:8" pos:end="51:11"><name pos:start="51:8" pos:end="51:8">e</name><operator pos:start="51:9" pos:end="51:10">!=</operator><literal type="number" pos:start="51:11" pos:end="51:11">4</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:93"><block_content pos:start="53:9" pos:end="53:93">

        <expr_stmt pos:start="53:9" pos:end="53:93"><expr pos:start="53:9" pos:end="53:92"><name pos:start="53:9" pos:end="53:9">e</name><operator pos:start="53:10" pos:end="53:10">=</operator><call pos:start="53:11" pos:end="53:92"><name pos:start="53:11" pos:end="53:16">sscanf</name><argument_list pos:start="53:17" pos:end="53:92">(<argument pos:start="53:18" pos:end="53:20"><expr pos:start="53:18" pos:end="53:20"><name pos:start="53:18" pos:end="53:20">buf</name></expr></argument>, <argument pos:start="53:23" pos:end="53:63"><expr pos:start="53:23" pos:end="53:63"><literal type="string" pos:start="53:23" pos:end="53:63">"FFmpeg v%d.%d.%d / libavcodec build: %d"</literal></expr></argument>, <argument pos:start="53:66" pos:end="53:69"><expr pos:start="53:66" pos:end="53:69"><operator pos:start="53:66" pos:end="53:66">&amp;</operator><name pos:start="53:67" pos:end="53:69">ver</name></expr></argument>, <argument pos:start="53:72" pos:end="53:76"><expr pos:start="53:72" pos:end="53:76"><operator pos:start="53:72" pos:end="53:72">&amp;</operator><name pos:start="53:73" pos:end="53:76">ver2</name></expr></argument>, <argument pos:start="53:79" pos:end="53:83"><expr pos:start="53:79" pos:end="53:83"><operator pos:start="53:79" pos:end="53:79">&amp;</operator><name pos:start="53:80" pos:end="53:83">ver3</name></expr></argument>, <argument pos:start="53:86" pos:end="53:91"><expr pos:start="53:86" pos:end="53:91"><operator pos:start="53:86" pos:end="53:86">&amp;</operator><name pos:start="53:87" pos:end="53:91">build</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> 

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if<condition pos:start="55:7" pos:end="55:12">(<expr pos:start="55:8" pos:end="55:11"><name pos:start="55:8" pos:end="55:8">e</name><operator pos:start="55:9" pos:end="55:10">!=</operator><literal type="number" pos:start="55:11" pos:end="55:11">4</literal></expr>)</condition><block pos:start="55:13" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:44">

        <expr_stmt pos:start="57:9" pos:end="57:60"><expr pos:start="57:9" pos:end="57:59"><name pos:start="57:9" pos:end="57:9">e</name><operator pos:start="57:10" pos:end="57:10">=</operator><call pos:start="57:11" pos:end="57:57"><name pos:start="57:11" pos:end="57:16">sscanf</name><argument_list pos:start="57:17" pos:end="57:57">(<argument pos:start="57:18" pos:end="57:20"><expr pos:start="57:18" pos:end="57:20"><name pos:start="57:18" pos:end="57:20">buf</name></expr></argument>, <argument pos:start="57:23" pos:end="57:36"><expr pos:start="57:23" pos:end="57:36"><literal type="string" pos:start="57:23" pos:end="57:36">"Lavc%d.%d.%d"</literal></expr></argument>, <argument pos:start="57:39" pos:end="57:42"><expr pos:start="57:39" pos:end="57:42"><operator pos:start="57:39" pos:end="57:39">&amp;</operator><name pos:start="57:40" pos:end="57:42">ver</name></expr></argument>, <argument pos:start="57:45" pos:end="57:49"><expr pos:start="57:45" pos:end="57:49"><operator pos:start="57:45" pos:end="57:45">&amp;</operator><name pos:start="57:46" pos:end="57:49">ver2</name></expr></argument>, <argument pos:start="57:52" pos:end="57:56"><expr pos:start="57:52" pos:end="57:56"><operator pos:start="57:52" pos:end="57:52">&amp;</operator><name pos:start="57:53" pos:end="57:56">ver3</name></expr></argument>)</argument_list></call><operator pos:start="57:58" pos:end="57:58">+</operator><literal type="number" pos:start="57:59" pos:end="57:59">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:44"><expr pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:13">build</name><operator pos:start="59:14" pos:end="59:14">=</operator> <operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:19">ver</name><operator pos:start="59:20" pos:end="59:21">&lt;&lt;</operator><literal type="number" pos:start="59:22" pos:end="59:23">16</literal><operator pos:start="59:24" pos:end="59:24">)</operator> <operator pos:start="59:26" pos:end="59:26">+</operator> <operator pos:start="59:28" pos:end="59:28">(</operator><name pos:start="59:29" pos:end="59:32">ver2</name><operator pos:start="59:33" pos:end="59:34">&lt;&lt;</operator><literal type="number" pos:start="59:35" pos:end="59:35">8</literal><operator pos:start="59:36" pos:end="59:36">)</operator> <operator pos:start="59:38" pos:end="59:38">+</operator> <name pos:start="59:40" pos:end="59:43">ver3</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if<condition pos:start="63:7" pos:end="63:12">(<expr pos:start="63:8" pos:end="63:11"><name pos:start="63:8" pos:end="63:8">e</name><operator pos:start="63:9" pos:end="63:10">!=</operator><literal type="number" pos:start="63:11" pos:end="63:11">4</literal></expr>)</condition><block pos:start="63:13" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:9">

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if<condition pos:start="65:11" pos:end="65:36">(<expr pos:start="65:12" pos:end="65:35"><call pos:start="65:12" pos:end="65:32"><name pos:start="65:12" pos:end="65:17">strcmp</name><argument_list pos:start="65:18" pos:end="65:32">(<argument pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:21">buf</name></expr></argument>, <argument pos:start="65:24" pos:end="65:31"><expr pos:start="65:24" pos:end="65:31"><literal type="string" pos:start="65:24" pos:end="65:31">"ffmpeg"</literal></expr></argument>)</argument_list></call><operator pos:start="65:33" pos:end="65:34">==</operator><literal type="number" pos:start="65:35" pos:end="65:35">0</literal></expr>)</condition><block pos:start="65:37" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:32">

            <expr_stmt pos:start="67:13" pos:end="67:32"><expr pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">s</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">lavc_build</name></name><operator pos:start="67:26" pos:end="67:26">=</operator> <literal type="number" pos:start="67:28" pos:end="67:31">4600</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if<condition pos:start="73:7" pos:end="73:12">(<expr pos:start="73:8" pos:end="73:11"><name pos:start="73:8" pos:end="73:8">e</name><operator pos:start="73:9" pos:end="73:10">==</operator><literal type="number" pos:start="73:11" pos:end="73:11">4</literal></expr>)</condition><block pos:start="73:13" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:29">

        <expr_stmt pos:start="75:9" pos:end="75:29"><expr pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:21">lavc_build</name></name><operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:28">build</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="81:5" pos:end="81:24">/* xvid detection */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:36"><expr pos:start="83:5" pos:end="83:35"><name pos:start="83:5" pos:end="83:5">e</name><operator pos:start="83:6" pos:end="83:6">=</operator><call pos:start="83:7" pos:end="83:35"><name pos:start="83:7" pos:end="83:12">sscanf</name><argument_list pos:start="83:13" pos:end="83:35">(<argument pos:start="83:14" pos:end="83:16"><expr pos:start="83:14" pos:end="83:16"><name pos:start="83:14" pos:end="83:16">buf</name></expr></argument>, <argument pos:start="83:19" pos:end="83:26"><expr pos:start="83:19" pos:end="83:26"><literal type="string" pos:start="83:19" pos:end="83:26">"XviD%d"</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:34"><expr pos:start="83:29" pos:end="83:34"><operator pos:start="83:29" pos:end="83:29">&amp;</operator><name pos:start="83:30" pos:end="83:34">build</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if<condition pos:start="85:7" pos:end="85:12">(<expr pos:start="85:8" pos:end="85:11"><name pos:start="85:8" pos:end="85:8">e</name><operator pos:start="85:9" pos:end="85:10">==</operator><literal type="number" pos:start="85:11" pos:end="85:11">1</literal></expr>)</condition><block pos:start="85:13" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:29">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:21">xvid_build</name></name><operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:28">build</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="93:1" pos:end="93:33">//printf("User Data: %s\n", buf);</comment>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
