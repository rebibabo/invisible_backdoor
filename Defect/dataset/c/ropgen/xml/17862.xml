<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17862.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:8">unsigned</name> <name pos:start="1:10" pos:end="1:13">long</name></type> <name pos:start="1:15" pos:end="1:27">find_next_bit</name><parameter_list pos:start="1:28" pos:end="3:49">(<parameter pos:start="1:29" pos:end="1:53"><decl pos:start="1:29" pos:end="1:53"><type pos:start="1:29" pos:end="1:53"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:42">unsigned</name> <name pos:start="1:44" pos:end="1:47">long</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:63">unsigned</name> <name pos:start="1:65" pos:end="1:68">long</name></type> <name pos:start="1:70" pos:end="1:73">size</name></decl></parameter>,

			    <parameter pos:start="3:29" pos:end="3:48"><decl pos:start="3:29" pos:end="3:48"><type pos:start="3:29" pos:end="3:48"><name pos:start="3:29" pos:end="3:36">unsigned</name> <name pos:start="3:38" pos:end="3:41">long</name></type> <name pos:start="3:43" pos:end="3:48">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:37">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:25"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:18">unsigned</name> <name pos:start="7:20" pos:end="7:23">long</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">p</name> <init pos:start="7:28" pos:end="7:54">= <expr pos:start="7:30" pos:end="7:54"><name pos:start="7:30" pos:end="7:33">addr</name> <operator pos:start="7:35" pos:end="7:35">+</operator> <call pos:start="7:37" pos:end="7:54"><name pos:start="7:37" pos:end="7:46">BITOP_WORD</name><argument_list pos:start="7:47" pos:end="7:54">(<argument pos:start="7:48" pos:end="7:53"><expr pos:start="7:48" pos:end="7:53"><name pos:start="7:48" pos:end="7:53">offset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:24">result</name> <init pos:start="9:26" pos:end="9:54">= <expr pos:start="9:28" pos:end="9:54"><name pos:start="9:28" pos:end="9:33">offset</name> <operator pos:start="9:35" pos:end="9:35">&amp;</operator> <operator pos:start="9:37" pos:end="9:37">~</operator><operator pos:start="9:38" pos:end="9:38">(</operator><name pos:start="9:39" pos:end="9:51">BITS_PER_LONG</name><operator pos:start="9:52" pos:end="9:52">-</operator><literal type="number" pos:start="9:53" pos:end="9:53">1</literal><operator pos:start="9:54" pos:end="9:54">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:21">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:14">offset</name> <operator pos:start="15:16" pos:end="15:17">&gt;=</operator> <name pos:start="15:19" pos:end="15:22">size</name></expr>)</condition> <block pos:start="15:25" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:20">

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:8">size</name> <operator pos:start="21:10" pos:end="21:11">-=</operator> <name pos:start="21:13" pos:end="21:18">result</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:10">offset</name> <operator pos:start="23:12" pos:end="23:13">%=</operator> <name pos:start="23:15" pos:end="23:27">BITS_PER_LONG</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="47:5"><if pos:start="25:5" pos:end="47:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:14">offset</name></expr>)</condition> <block pos:start="25:17" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:32">

        <expr_stmt pos:start="27:9" pos:end="27:21"><expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:11">tmp</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">*</operator><operator pos:start="27:16" pos:end="27:16">(</operator><name pos:start="27:17" pos:end="27:17">p</name><operator pos:start="27:18" pos:end="27:19">++</operator><operator pos:start="27:20" pos:end="27:20">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:11">tmp</name> <operator pos:start="29:13" pos:end="29:14">&amp;=</operator> <operator pos:start="29:16" pos:end="29:16">(</operator><operator pos:start="29:17" pos:end="29:17">~</operator><literal type="number" pos:start="29:18" pos:end="29:20">0UL</literal> <operator pos:start="29:22" pos:end="29:23">&lt;&lt;</operator> <name pos:start="29:25" pos:end="29:30">offset</name><operator pos:start="29:31" pos:end="29:31">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:33">(<expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:16">size</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <name pos:start="31:20" pos:end="31:32">BITS_PER_LONG</name></expr>)</condition> <block pos:start="31:35" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:29">

            <goto pos:start="33:13" pos:end="33:29">goto <name pos:start="33:18" pos:end="33:28">found_first</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">tmp</name></expr>)</condition> <block pos:start="37:18" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:30">

            <goto pos:start="39:13" pos:end="39:30">goto <name pos:start="39:18" pos:end="39:29">found_middle</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:12">size</name> <operator pos:start="43:14" pos:end="43:15">-=</operator> <name pos:start="43:17" pos:end="43:29">BITS_PER_LONG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:32"><expr pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:14">result</name> <operator pos:start="45:16" pos:end="45:17">+=</operator> <name pos:start="45:19" pos:end="45:31">BITS_PER_LONG</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="49:5" pos:end="61:5">while <condition pos:start="49:11" pos:end="49:37">(<expr pos:start="49:12" pos:end="49:36"><name pos:start="49:12" pos:end="49:15">size</name> <operator pos:start="49:17" pos:end="49:17">&amp;</operator> <operator pos:start="49:19" pos:end="49:19">~</operator><operator pos:start="49:20" pos:end="49:20">(</operator><name pos:start="49:21" pos:end="49:33">BITS_PER_LONG</name><operator pos:start="49:34" pos:end="49:34">-</operator><literal type="number" pos:start="49:35" pos:end="49:35">1</literal><operator pos:start="49:36" pos:end="49:36">)</operator></expr>)</condition> <block pos:start="49:39" pos:end="61:5">{<block_content pos:start="51:9" pos:end="59:30">

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:16">tmp</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <operator pos:start="51:20" pos:end="51:20">*</operator><operator pos:start="51:21" pos:end="51:21">(</operator><name pos:start="51:22" pos:end="51:22">p</name><operator pos:start="51:23" pos:end="51:24">++</operator><operator pos:start="51:25" pos:end="51:25">)</operator><operator pos:start="51:26" pos:end="51:26">)</operator></expr>)</condition> <block pos:start="51:29" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:30">

            <goto pos:start="53:13" pos:end="53:30">goto <name pos:start="53:18" pos:end="53:29">found_middle</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:32"><expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:14">result</name> <operator pos:start="57:16" pos:end="57:17">+=</operator> <name pos:start="57:19" pos:end="57:31">BITS_PER_LONG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:12">size</name> <operator pos:start="59:14" pos:end="59:15">-=</operator> <name pos:start="59:17" pos:end="59:29">BITS_PER_LONG</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:14">(<expr pos:start="63:9" pos:end="63:13"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:13">size</name></expr>)</condition> <block pos:start="63:16" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:22">

        <return pos:start="65:9" pos:end="65:22">return <expr pos:start="65:16" pos:end="65:21"><name pos:start="65:16" pos:end="65:21">result</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:13"><expr pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:7">tmp</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <operator pos:start="69:11" pos:end="69:11">*</operator><name pos:start="69:12" pos:end="69:12">p</name></expr>;</expr_stmt>



<label pos:start="73:1" pos:end="73:12"><name pos:start="73:1" pos:end="73:11">found_first</name>:</label>

    <expr_stmt pos:start="75:5" pos:end="75:44"><expr pos:start="75:5" pos:end="75:43"><name pos:start="75:5" pos:end="75:7">tmp</name> <operator pos:start="75:9" pos:end="75:10">&amp;=</operator> <operator pos:start="75:12" pos:end="75:12">(</operator><operator pos:start="75:13" pos:end="75:13">~</operator><literal type="number" pos:start="75:14" pos:end="75:16">0UL</literal> <operator pos:start="75:18" pos:end="75:19">&gt;&gt;</operator> <operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:34">BITS_PER_LONG</name> <operator pos:start="75:36" pos:end="75:36">-</operator> <name pos:start="75:38" pos:end="75:41">size</name><operator pos:start="75:42" pos:end="75:42">)</operator><operator pos:start="75:43" pos:end="75:43">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="81:5"><if pos:start="77:5" pos:end="81:5">if <condition pos:start="77:8" pos:end="77:19">(<expr pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:11">tmp</name> <operator pos:start="77:13" pos:end="77:14">==</operator> <literal type="number" pos:start="77:16" pos:end="77:18">0UL</literal></expr>)</condition> <block pos:start="77:21" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:29">		<comment type="block" pos:start="77:33" pos:end="77:55">/* Are any bits set? */</comment>

        <return pos:start="79:9" pos:end="79:29">return <expr pos:start="79:16" pos:end="79:28"><name pos:start="79:16" pos:end="79:21">result</name> <operator pos:start="79:23" pos:end="79:23">+</operator> <name pos:start="79:25" pos:end="79:28">size</name></expr>;</return>	<comment type="block" pos:start="79:33" pos:end="79:43">/* Nope. */</comment>

    </block_content>}</block></if></if_stmt>

<label pos:start="83:1" pos:end="83:13"><name pos:start="83:1" pos:end="83:12">found_middle</name>:</label>

    <return pos:start="85:5" pos:end="85:37">return <expr pos:start="85:12" pos:end="85:36"><name pos:start="85:12" pos:end="85:17">result</name> <operator pos:start="85:19" pos:end="85:19">+</operator> <call pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:31">bitops_ffsl</name><argument_list pos:start="85:32" pos:end="85:36">(<argument pos:start="85:33" pos:end="85:35"><expr pos:start="85:33" pos:end="85:35"><name pos:start="85:33" pos:end="85:35">tmp</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
