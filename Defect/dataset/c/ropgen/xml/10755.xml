<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10755.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vsink_query_formats</name><parameter_list pos:start="1:31" pos:end="1:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFilterContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFilterFormats</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:28">formats</name> <init pos:start="7:30" pos:end="7:35">= <expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:56">(<expr pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">buf</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:28">pixel_fmts_size</name></name> <operator pos:start="15:30" pos:end="15:30">%</operator> <sizeof pos:start="15:32" pos:end="15:55">sizeof<argument_list pos:start="15:38" pos:end="15:55">(<argument pos:start="15:39" pos:end="15:54"><expr pos:start="15:39" pos:end="15:54"><operator pos:start="15:39" pos:end="15:39">*</operator><name pos:start="15:40" pos:end="15:54"><name pos:start="15:40" pos:end="15:42">buf</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:54">pixel_fmts</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="15:58" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:31">

        <expr_stmt pos:start="17:9" pos:end="17:68"><expr pos:start="17:9" pos:end="17:67"><call pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:67">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ctx</name></expr></argument>, <argument pos:start="17:21" pos:end="17:32"><expr pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:35" pos:end="17:66"><expr pos:start="17:35" pos:end="17:66"><literal type="string" pos:start="17:35" pos:end="17:66">"Invalid size for format list\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="25:29">(<expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:11">buf</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:28">pixel_fmts_size</name></name></expr>)</condition> <block pos:start="25:31" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:44">

        <for pos:start="27:9" pos:end="31:27">for <control pos:start="27:13" pos:end="27:55">(<init pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:18"><name pos:start="27:14" pos:end="27:14">i</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr>;</init> <condition pos:start="27:21" pos:end="27:50"><expr pos:start="27:21" pos:end="27:49"><name pos:start="27:21" pos:end="27:21">i</name> <operator pos:start="27:23" pos:end="27:23">&lt;</operator> <call pos:start="27:25" pos:end="27:49"><name pos:start="27:25" pos:end="27:32">NB_ITEMS</name><argument_list pos:start="27:33" pos:end="27:49">(<argument pos:start="27:34" pos:end="27:48"><expr pos:start="27:34" pos:end="27:48"><name pos:start="27:34" pos:end="27:48"><name pos:start="27:34" pos:end="27:36">buf</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:48">pixel_fmts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="27:52" pos:end="27:54"><expr pos:start="27:52" pos:end="27:54"><name pos:start="27:52" pos:end="27:52">i</name><operator pos:start="27:53" pos:end="27:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="31:27"><block_content pos:start="29:13" pos:end="31:27">

            <if_stmt pos:start="29:13" pos:end="31:27"><if pos:start="29:13" pos:end="31:27">if <condition pos:start="29:16" pos:end="29:72">(<expr pos:start="29:17" pos:end="29:71"><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:20">ret</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:66"><name pos:start="29:24" pos:end="29:36">ff_add_format</name><argument_list pos:start="29:37" pos:end="29:66">(<argument pos:start="29:38" pos:end="29:45"><expr pos:start="29:38" pos:end="29:45"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:45">formats</name></expr></argument>, <argument pos:start="29:48" pos:end="29:65"><expr pos:start="29:48" pos:end="29:65"><name pos:start="29:48" pos:end="29:65"><name pos:start="29:48" pos:end="29:50">buf</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:62">pixel_fmts</name><index pos:start="29:63" pos:end="29:65">[<expr pos:start="29:64" pos:end="29:64"><name pos:start="29:64" pos:end="29:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="29:67" pos:end="29:67">)</operator> <operator pos:start="29:69" pos:end="29:69">&lt;</operator> <literal type="number" pos:start="29:71" pos:end="29:71">0</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:27"><block_content pos:start="31:17" pos:end="31:27">

                <return pos:start="31:17" pos:end="31:27">return <expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><call pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:29">ff_set_common_formats</name><argument_list pos:start="33:30" pos:end="33:43">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">ctx</name></expr></argument>, <argument pos:start="33:36" pos:end="33:42"><expr pos:start="33:36" pos:end="33:42"><name pos:start="33:36" pos:end="33:42">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:38">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><call pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:32">ff_default_query_formats</name><argument_list pos:start="37:33" pos:end="37:37">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
