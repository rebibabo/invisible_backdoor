<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7864.c" pos:tabs="8"><function pos:start="1:1" pos:end="1201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_dmfc0</name><parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:45">TCGv</name></type> <name pos:start="1:47" pos:end="1:49">arg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">reg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:67"><decl pos:start="1:61" pos:end="1:67"><type pos:start="1:61" pos:end="1:67"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:67">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1201:1">{<block_content pos:start="5:5" pos:end="1199:37">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="15:5" pos:end="1185:5">switch <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">reg</name></expr>)</condition> <block pos:start="15:18" pos:end="1185:5">{<block_content pos:start="17:5" pos:end="1183:31">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

        <switch pos:start="19:9" pos:end="63:9">switch <condition pos:start="19:16" pos:end="19:20">(<expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">sel</name></expr>)</condition> <block pos:start="19:22" pos:end="63:9">{<block_content pos:start="21:9" pos:end="61:35">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:68"><expr pos:start="23:13" pos:end="23:67"><call pos:start="23:13" pos:end="23:67"><name pos:start="23:13" pos:end="23:27">gen_mfc0_load32</name><argument_list pos:start="23:28" pos:end="23:67">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">arg</name></expr></argument>, <argument pos:start="23:34" pos:end="23:66"><expr pos:start="23:34" pos:end="23:66"><call pos:start="23:34" pos:end="23:66"><name pos:start="23:34" pos:end="23:41">offsetof</name><argument_list pos:start="23:42" pos:end="23:66">(<argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:54">CPUMIPSState</name></expr></argument>, <argument pos:start="23:57" pos:end="23:65"><expr pos:start="23:57" pos:end="23:65"><name pos:start="23:57" pos:end="23:65">CP0_Index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:14">rn</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="string" pos:start="25:18" pos:end="25:24">"Index"</literal></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:48"><expr pos:start="31:13" pos:end="31:47"><call pos:start="31:13" pos:end="31:47"><name pos:start="31:13" pos:end="31:21">CP0_CHECK</name><argument_list pos:start="31:22" pos:end="31:47">(<argument pos:start="31:23" pos:end="31:46"><expr pos:start="31:23" pos:end="31:46"><name pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:25">ctx</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:37">insn_flags</name></name> <operator pos:start="31:39" pos:end="31:39">&amp;</operator> <name pos:start="31:41" pos:end="31:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><call pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:38">gen_helper_mfc0_mvpcontrol</name><argument_list pos:start="33:39" pos:end="33:52">(<argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:42">arg</name></expr></argument>, <argument pos:start="33:45" pos:end="33:51"><expr pos:start="33:45" pos:end="33:51"><name pos:start="33:45" pos:end="33:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:14">rn</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="string" pos:start="35:18" pos:end="35:29">"MVPControl"</literal></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:15">case <expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">2</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:48"><expr pos:start="41:13" pos:end="41:47"><call pos:start="41:13" pos:end="41:47"><name pos:start="41:13" pos:end="41:21">CP0_CHECK</name><argument_list pos:start="41:22" pos:end="41:47">(<argument pos:start="41:23" pos:end="41:46"><expr pos:start="41:23" pos:end="41:46"><name pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:25">ctx</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:37">insn_flags</name></name> <operator pos:start="41:39" pos:end="41:39">&amp;</operator> <name pos:start="41:41" pos:end="41:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:51"><expr pos:start="43:13" pos:end="43:50"><call pos:start="43:13" pos:end="43:50"><name pos:start="43:13" pos:end="43:36">gen_helper_mfc0_mvpconf0</name><argument_list pos:start="43:37" pos:end="43:50">(<argument pos:start="43:38" pos:end="43:40"><expr pos:start="43:38" pos:end="43:40"><name pos:start="43:38" pos:end="43:40">arg</name></expr></argument>, <argument pos:start="43:43" pos:end="43:49"><expr pos:start="43:43" pos:end="43:49"><name pos:start="43:43" pos:end="43:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:28"><expr pos:start="45:13" pos:end="45:27"><name pos:start="45:13" pos:end="45:14">rn</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="string" pos:start="45:18" pos:end="45:27">"MVPConf0"</literal></expr>;</expr_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">3</literal></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:21">CP0_CHECK</name><argument_list pos:start="51:22" pos:end="51:47">(<argument pos:start="51:23" pos:end="51:46"><expr pos:start="51:23" pos:end="51:46"><name pos:start="51:23" pos:end="51:37"><name pos:start="51:23" pos:end="51:25">ctx</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:37">insn_flags</name></name> <operator pos:start="51:39" pos:end="51:39">&amp;</operator> <name pos:start="51:41" pos:end="51:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:51"><expr pos:start="53:13" pos:end="53:50"><call pos:start="53:13" pos:end="53:50"><name pos:start="53:13" pos:end="53:36">gen_helper_mfc0_mvpconf1</name><argument_list pos:start="53:37" pos:end="53:50">(<argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">arg</name></expr></argument>, <argument pos:start="53:43" pos:end="53:49"><expr pos:start="53:43" pos:end="53:49"><name pos:start="53:43" pos:end="53:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:14">rn</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="string" pos:start="55:18" pos:end="55:27">"MVPConf1"</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <default pos:start="59:9" pos:end="59:16">default:</default>

            <goto pos:start="61:13" pos:end="61:35">goto <name pos:start="61:18" pos:end="61:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:11">case <expr pos:start="67:10" pos:end="67:10"><literal type="number" pos:start="67:10" pos:end="67:10">1</literal></expr>:</case>

        <switch pos:start="69:9" pos:end="155:9">switch <condition pos:start="69:16" pos:end="69:20">(<expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">sel</name></expr>)</condition> <block pos:start="69:22" pos:end="155:9">{<block_content pos:start="71:9" pos:end="153:35">

        <case pos:start="71:9" pos:end="71:15">case <expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:57"><expr pos:start="73:13" pos:end="73:56"><call pos:start="73:13" pos:end="73:56"><name pos:start="73:13" pos:end="73:21">CP0_CHECK</name><argument_list pos:start="73:22" pos:end="73:56">(<argument pos:start="73:23" pos:end="73:55"><expr pos:start="73:23" pos:end="73:55"><operator pos:start="73:23" pos:end="73:23">!</operator><operator pos:start="73:24" pos:end="73:24">(</operator><name pos:start="73:25" pos:end="73:39"><name pos:start="73:25" pos:end="73:27">ctx</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:39">insn_flags</name></name> <operator pos:start="73:41" pos:end="73:41">&amp;</operator> <name pos:start="73:43" pos:end="73:54">ISA_MIPS32R6</name><operator pos:start="73:55" pos:end="73:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:49"><expr pos:start="75:13" pos:end="75:48"><call pos:start="75:13" pos:end="75:48"><name pos:start="75:13" pos:end="75:34">gen_helper_mfc0_random</name><argument_list pos:start="75:35" pos:end="75:48">(<argument pos:start="75:36" pos:end="75:38"><expr pos:start="75:36" pos:end="75:38"><name pos:start="75:36" pos:end="75:38">arg</name></expr></argument>, <argument pos:start="75:41" pos:end="75:47"><expr pos:start="75:41" pos:end="75:47"><name pos:start="75:41" pos:end="75:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:26"><expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:14">rn</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="string" pos:start="77:18" pos:end="77:25">"Random"</literal></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">1</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><call pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:21">CP0_CHECK</name><argument_list pos:start="83:22" pos:end="83:47">(<argument pos:start="83:23" pos:end="83:46"><expr pos:start="83:23" pos:end="83:46"><name pos:start="83:23" pos:end="83:37"><name pos:start="83:23" pos:end="83:25">ctx</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:37">insn_flags</name></name> <operator pos:start="83:39" pos:end="83:39">&amp;</operator> <name pos:start="83:41" pos:end="83:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:73"><expr pos:start="85:13" pos:end="85:72"><call pos:start="85:13" pos:end="85:72"><name pos:start="85:13" pos:end="85:27">gen_mfc0_load32</name><argument_list pos:start="85:28" pos:end="85:72">(<argument pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><name pos:start="85:29" pos:end="85:31">arg</name></expr></argument>, <argument pos:start="85:34" pos:end="85:71"><expr pos:start="85:34" pos:end="85:71"><call pos:start="85:34" pos:end="85:71"><name pos:start="85:34" pos:end="85:41">offsetof</name><argument_list pos:start="85:42" pos:end="85:71">(<argument pos:start="85:43" pos:end="85:54"><expr pos:start="85:43" pos:end="85:54"><name pos:start="85:43" pos:end="85:54">CPUMIPSState</name></expr></argument>, <argument pos:start="85:57" pos:end="85:70"><expr pos:start="85:57" pos:end="85:70"><name pos:start="85:57" pos:end="85:70">CP0_VPEControl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:30"><expr pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:14">rn</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="string" pos:start="87:18" pos:end="87:29">"VPEControl"</literal></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:15">case <expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">2</literal></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:48"><expr pos:start="93:13" pos:end="93:47"><call pos:start="93:13" pos:end="93:47"><name pos:start="93:13" pos:end="93:21">CP0_CHECK</name><argument_list pos:start="93:22" pos:end="93:47">(<argument pos:start="93:23" pos:end="93:46"><expr pos:start="93:23" pos:end="93:46"><name pos:start="93:23" pos:end="93:37"><name pos:start="93:23" pos:end="93:25">ctx</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:37">insn_flags</name></name> <operator pos:start="93:39" pos:end="93:39">&amp;</operator> <name pos:start="93:41" pos:end="93:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:71"><expr pos:start="95:13" pos:end="95:70"><call pos:start="95:13" pos:end="95:70"><name pos:start="95:13" pos:end="95:27">gen_mfc0_load32</name><argument_list pos:start="95:28" pos:end="95:70">(<argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">arg</name></expr></argument>, <argument pos:start="95:34" pos:end="95:69"><expr pos:start="95:34" pos:end="95:69"><call pos:start="95:34" pos:end="95:69"><name pos:start="95:34" pos:end="95:41">offsetof</name><argument_list pos:start="95:42" pos:end="95:69">(<argument pos:start="95:43" pos:end="95:54"><expr pos:start="95:43" pos:end="95:54"><name pos:start="95:43" pos:end="95:54">CPUMIPSState</name></expr></argument>, <argument pos:start="95:57" pos:end="95:68"><expr pos:start="95:57" pos:end="95:68"><name pos:start="95:57" pos:end="95:68">CP0_VPEConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:28"><expr pos:start="97:13" pos:end="97:27"><name pos:start="97:13" pos:end="97:14">rn</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="string" pos:start="97:18" pos:end="97:27">"VPEConf0"</literal></expr>;</expr_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <case pos:start="101:9" pos:end="101:15">case <expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">3</literal></expr>:</case>

            <expr_stmt pos:start="103:13" pos:end="103:48"><expr pos:start="103:13" pos:end="103:47"><call pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:21">CP0_CHECK</name><argument_list pos:start="103:22" pos:end="103:47">(<argument pos:start="103:23" pos:end="103:46"><expr pos:start="103:23" pos:end="103:46"><name pos:start="103:23" pos:end="103:37"><name pos:start="103:23" pos:end="103:25">ctx</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:37">insn_flags</name></name> <operator pos:start="103:39" pos:end="103:39">&amp;</operator> <name pos:start="103:41" pos:end="103:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:71"><expr pos:start="105:13" pos:end="105:70"><call pos:start="105:13" pos:end="105:70"><name pos:start="105:13" pos:end="105:27">gen_mfc0_load32</name><argument_list pos:start="105:28" pos:end="105:70">(<argument pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:31">arg</name></expr></argument>, <argument pos:start="105:34" pos:end="105:69"><expr pos:start="105:34" pos:end="105:69"><call pos:start="105:34" pos:end="105:69"><name pos:start="105:34" pos:end="105:41">offsetof</name><argument_list pos:start="105:42" pos:end="105:69">(<argument pos:start="105:43" pos:end="105:54"><expr pos:start="105:43" pos:end="105:54"><name pos:start="105:43" pos:end="105:54">CPUMIPSState</name></expr></argument>, <argument pos:start="105:57" pos:end="105:68"><expr pos:start="105:57" pos:end="105:68"><name pos:start="105:57" pos:end="105:68">CP0_VPEConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:28"><expr pos:start="107:13" pos:end="107:27"><name pos:start="107:13" pos:end="107:14">rn</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <literal type="string" pos:start="107:18" pos:end="107:27">"VPEConf1"</literal></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:15">case <expr pos:start="111:14" pos:end="111:14"><literal type="number" pos:start="111:14" pos:end="111:14">4</literal></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:48"><expr pos:start="113:13" pos:end="113:47"><call pos:start="113:13" pos:end="113:47"><name pos:start="113:13" pos:end="113:21">CP0_CHECK</name><argument_list pos:start="113:22" pos:end="113:47">(<argument pos:start="113:23" pos:end="113:46"><expr pos:start="113:23" pos:end="113:46"><name pos:start="113:23" pos:end="113:37"><name pos:start="113:23" pos:end="113:25">ctx</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:37">insn_flags</name></name> <operator pos:start="113:39" pos:end="113:39">&amp;</operator> <name pos:start="113:41" pos:end="113:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:76"><expr pos:start="115:13" pos:end="115:75"><call pos:start="115:13" pos:end="115:75"><name pos:start="115:13" pos:end="115:25">tcg_gen_ld_tl</name><argument_list pos:start="115:26" pos:end="115:75">(<argument pos:start="115:27" pos:end="115:29"><expr pos:start="115:27" pos:end="115:29"><name pos:start="115:27" pos:end="115:29">arg</name></expr></argument>, <argument pos:start="115:32" pos:end="115:38"><expr pos:start="115:32" pos:end="115:38"><name pos:start="115:32" pos:end="115:38">cpu_env</name></expr></argument>, <argument pos:start="115:41" pos:end="115:74"><expr pos:start="115:41" pos:end="115:74"><call pos:start="115:41" pos:end="115:74"><name pos:start="115:41" pos:end="115:48">offsetof</name><argument_list pos:start="115:49" pos:end="115:74">(<argument pos:start="115:50" pos:end="115:61"><expr pos:start="115:50" pos:end="115:61"><name pos:start="115:50" pos:end="115:61">CPUMIPSState</name></expr></argument>, <argument pos:start="115:64" pos:end="115:73"><expr pos:start="115:64" pos:end="115:73"><name pos:start="115:64" pos:end="115:73">CP0_YQMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:26"><expr pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:14">rn</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <literal type="string" pos:start="117:18" pos:end="117:25">"YQMask"</literal></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:15">case <expr pos:start="121:14" pos:end="121:14"><literal type="number" pos:start="121:14" pos:end="121:14">5</literal></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="123:48"><expr pos:start="123:13" pos:end="123:47"><call pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:21">CP0_CHECK</name><argument_list pos:start="123:22" pos:end="123:47">(<argument pos:start="123:23" pos:end="123:46"><expr pos:start="123:23" pos:end="123:46"><name pos:start="123:23" pos:end="123:37"><name pos:start="123:23" pos:end="123:25">ctx</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:37">insn_flags</name></name> <operator pos:start="123:39" pos:end="123:39">&amp;</operator> <name pos:start="123:41" pos:end="123:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:81"><expr pos:start="125:13" pos:end="125:80"><call pos:start="125:13" pos:end="125:80"><name pos:start="125:13" pos:end="125:25">tcg_gen_ld_tl</name><argument_list pos:start="125:26" pos:end="125:80">(<argument pos:start="125:27" pos:end="125:29"><expr pos:start="125:27" pos:end="125:29"><name pos:start="125:27" pos:end="125:29">arg</name></expr></argument>, <argument pos:start="125:32" pos:end="125:38"><expr pos:start="125:32" pos:end="125:38"><name pos:start="125:32" pos:end="125:38">cpu_env</name></expr></argument>, <argument pos:start="125:41" pos:end="125:79"><expr pos:start="125:41" pos:end="125:79"><call pos:start="125:41" pos:end="125:79"><name pos:start="125:41" pos:end="125:48">offsetof</name><argument_list pos:start="125:49" pos:end="125:79">(<argument pos:start="125:50" pos:end="125:61"><expr pos:start="125:50" pos:end="125:61"><name pos:start="125:50" pos:end="125:61">CPUMIPSState</name></expr></argument>, <argument pos:start="125:64" pos:end="125:78"><expr pos:start="125:64" pos:end="125:78"><name pos:start="125:64" pos:end="125:78">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:31"><expr pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:14">rn</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="string" pos:start="127:18" pos:end="127:30">"VPESchedule"</literal></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:15">case <expr pos:start="131:14" pos:end="131:14"><literal type="number" pos:start="131:14" pos:end="131:14">6</literal></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><call pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:21">CP0_CHECK</name><argument_list pos:start="133:22" pos:end="133:47">(<argument pos:start="133:23" pos:end="133:46"><expr pos:start="133:23" pos:end="133:46"><name pos:start="133:23" pos:end="133:37"><name pos:start="133:23" pos:end="133:25">ctx</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:37">insn_flags</name></name> <operator pos:start="133:39" pos:end="133:39">&amp;</operator> <name pos:start="133:41" pos:end="133:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:82"><expr pos:start="135:13" pos:end="135:81"><call pos:start="135:13" pos:end="135:81"><name pos:start="135:13" pos:end="135:25">tcg_gen_ld_tl</name><argument_list pos:start="135:26" pos:end="135:81">(<argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">arg</name></expr></argument>, <argument pos:start="135:32" pos:end="135:38"><expr pos:start="135:32" pos:end="135:38"><name pos:start="135:32" pos:end="135:38">cpu_env</name></expr></argument>, <argument pos:start="135:41" pos:end="135:80"><expr pos:start="135:41" pos:end="135:80"><call pos:start="135:41" pos:end="135:80"><name pos:start="135:41" pos:end="135:48">offsetof</name><argument_list pos:start="135:49" pos:end="135:80">(<argument pos:start="135:50" pos:end="135:61"><expr pos:start="135:50" pos:end="135:61"><name pos:start="135:50" pos:end="135:61">CPUMIPSState</name></expr></argument>, <argument pos:start="135:64" pos:end="135:79"><expr pos:start="135:64" pos:end="135:79"><name pos:start="135:64" pos:end="135:79">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:32"><expr pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:14">rn</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <literal type="string" pos:start="137:18" pos:end="137:31">"VPEScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:15">case <expr pos:start="141:14" pos:end="141:14"><literal type="number" pos:start="141:14" pos:end="141:14">7</literal></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:48"><expr pos:start="143:13" pos:end="143:47"><call pos:start="143:13" pos:end="143:47"><name pos:start="143:13" pos:end="143:21">CP0_CHECK</name><argument_list pos:start="143:22" pos:end="143:47">(<argument pos:start="143:23" pos:end="143:46"><expr pos:start="143:23" pos:end="143:46"><name pos:start="143:23" pos:end="143:37"><name pos:start="143:23" pos:end="143:25">ctx</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:37">insn_flags</name></name> <operator pos:start="143:39" pos:end="143:39">&amp;</operator> <name pos:start="143:41" pos:end="143:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:69"><expr pos:start="145:13" pos:end="145:68"><call pos:start="145:13" pos:end="145:68"><name pos:start="145:13" pos:end="145:27">gen_mfc0_load32</name><argument_list pos:start="145:28" pos:end="145:68">(<argument pos:start="145:29" pos:end="145:31"><expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:31">arg</name></expr></argument>, <argument pos:start="145:34" pos:end="145:67"><expr pos:start="145:34" pos:end="145:67"><call pos:start="145:34" pos:end="145:67"><name pos:start="145:34" pos:end="145:41">offsetof</name><argument_list pos:start="145:42" pos:end="145:67">(<argument pos:start="145:43" pos:end="145:54"><expr pos:start="145:43" pos:end="145:54"><name pos:start="145:43" pos:end="145:54">CPUMIPSState</name></expr></argument>, <argument pos:start="145:57" pos:end="145:66"><expr pos:start="145:57" pos:end="145:66"><name pos:start="145:57" pos:end="145:66">CP0_VPEOpt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:26"><expr pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:14">rn</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <literal type="string" pos:start="147:18" pos:end="147:25">"VPEOpt"</literal></expr>;</expr_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <default pos:start="151:9" pos:end="151:16">default:</default>

            <goto pos:start="153:13" pos:end="153:35">goto <name pos:start="153:18" pos:end="153:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="157:9" pos:end="157:14">break;</break>

    <case pos:start="159:5" pos:end="159:11">case <expr pos:start="159:10" pos:end="159:10"><literal type="number" pos:start="159:10" pos:end="159:10">2</literal></expr>:</case>

        <switch pos:start="161:9" pos:end="245:9">switch <condition pos:start="161:16" pos:end="161:20">(<expr pos:start="161:17" pos:end="161:19"><name pos:start="161:17" pos:end="161:19">sel</name></expr>)</condition> <block pos:start="161:22" pos:end="245:9">{<block_content pos:start="163:9" pos:end="243:35">

        <case pos:start="163:9" pos:end="163:15">case <expr pos:start="163:14" pos:end="163:14"><literal type="number" pos:start="163:14" pos:end="163:14">0</literal></expr>:</case>

            <expr_stmt pos:start="165:13" pos:end="165:78"><expr pos:start="165:13" pos:end="165:77"><call pos:start="165:13" pos:end="165:77"><name pos:start="165:13" pos:end="165:25">tcg_gen_ld_tl</name><argument_list pos:start="165:26" pos:end="165:77">(<argument pos:start="165:27" pos:end="165:29"><expr pos:start="165:27" pos:end="165:29"><name pos:start="165:27" pos:end="165:29">arg</name></expr></argument>, <argument pos:start="165:32" pos:end="165:38"><expr pos:start="165:32" pos:end="165:38"><name pos:start="165:32" pos:end="165:38">cpu_env</name></expr></argument>, <argument pos:start="165:41" pos:end="165:76"><expr pos:start="165:41" pos:end="165:76"><call pos:start="165:41" pos:end="165:76"><name pos:start="165:41" pos:end="165:48">offsetof</name><argument_list pos:start="165:49" pos:end="165:76">(<argument pos:start="165:50" pos:end="165:61"><expr pos:start="165:50" pos:end="165:61"><name pos:start="165:50" pos:end="165:61">CPUMIPSState</name></expr></argument>, <argument pos:start="165:64" pos:end="165:75"><expr pos:start="165:64" pos:end="165:75"><name pos:start="165:64" pos:end="165:75">CP0_EntryLo0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:28"><expr pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:14">rn</name> <operator pos:start="167:16" pos:end="167:16">=</operator> <literal type="string" pos:start="167:18" pos:end="167:27">"EntryLo0"</literal></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:15">case <expr pos:start="171:14" pos:end="171:14"><literal type="number" pos:start="171:14" pos:end="171:14">1</literal></expr>:</case>

            <expr_stmt pos:start="173:13" pos:end="173:48"><expr pos:start="173:13" pos:end="173:47"><call pos:start="173:13" pos:end="173:47"><name pos:start="173:13" pos:end="173:21">CP0_CHECK</name><argument_list pos:start="173:22" pos:end="173:47">(<argument pos:start="173:23" pos:end="173:46"><expr pos:start="173:23" pos:end="173:46"><name pos:start="173:23" pos:end="173:37"><name pos:start="173:23" pos:end="173:25">ctx</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:37">insn_flags</name></name> <operator pos:start="173:39" pos:end="173:39">&amp;</operator> <name pos:start="173:41" pos:end="173:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:51"><expr pos:start="175:13" pos:end="175:50"><call pos:start="175:13" pos:end="175:50"><name pos:start="175:13" pos:end="175:36">gen_helper_mfc0_tcstatus</name><argument_list pos:start="175:37" pos:end="175:50">(<argument pos:start="175:38" pos:end="175:40"><expr pos:start="175:38" pos:end="175:40"><name pos:start="175:38" pos:end="175:40">arg</name></expr></argument>, <argument pos:start="175:43" pos:end="175:49"><expr pos:start="175:43" pos:end="175:49"><name pos:start="175:43" pos:end="175:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:28"><expr pos:start="177:13" pos:end="177:27"><name pos:start="177:13" pos:end="177:14">rn</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <literal type="string" pos:start="177:18" pos:end="177:27">"TCStatus"</literal></expr>;</expr_stmt>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        <case pos:start="181:9" pos:end="181:15">case <expr pos:start="181:14" pos:end="181:14"><literal type="number" pos:start="181:14" pos:end="181:14">2</literal></expr>:</case>

            <expr_stmt pos:start="183:13" pos:end="183:48"><expr pos:start="183:13" pos:end="183:47"><call pos:start="183:13" pos:end="183:47"><name pos:start="183:13" pos:end="183:21">CP0_CHECK</name><argument_list pos:start="183:22" pos:end="183:47">(<argument pos:start="183:23" pos:end="183:46"><expr pos:start="183:23" pos:end="183:46"><name pos:start="183:23" pos:end="183:37"><name pos:start="183:23" pos:end="183:25">ctx</name><operator pos:start="183:26" pos:end="183:27">-&gt;</operator><name pos:start="183:28" pos:end="183:37">insn_flags</name></name> <operator pos:start="183:39" pos:end="183:39">&amp;</operator> <name pos:start="183:41" pos:end="183:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:49"><expr pos:start="185:13" pos:end="185:48"><call pos:start="185:13" pos:end="185:48"><name pos:start="185:13" pos:end="185:34">gen_helper_mfc0_tcbind</name><argument_list pos:start="185:35" pos:end="185:48">(<argument pos:start="185:36" pos:end="185:38"><expr pos:start="185:36" pos:end="185:38"><name pos:start="185:36" pos:end="185:38">arg</name></expr></argument>, <argument pos:start="185:41" pos:end="185:47"><expr pos:start="185:41" pos:end="185:47"><name pos:start="185:41" pos:end="185:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:26"><expr pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:14">rn</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <literal type="string" pos:start="187:18" pos:end="187:25">"TCBind"</literal></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:15">case <expr pos:start="191:14" pos:end="191:14"><literal type="number" pos:start="191:14" pos:end="191:14">3</literal></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:48"><expr pos:start="193:13" pos:end="193:47"><call pos:start="193:13" pos:end="193:47"><name pos:start="193:13" pos:end="193:21">CP0_CHECK</name><argument_list pos:start="193:22" pos:end="193:47">(<argument pos:start="193:23" pos:end="193:46"><expr pos:start="193:23" pos:end="193:46"><name pos:start="193:23" pos:end="193:37"><name pos:start="193:23" pos:end="193:25">ctx</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:37">insn_flags</name></name> <operator pos:start="193:39" pos:end="193:39">&amp;</operator> <name pos:start="193:41" pos:end="193:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:53"><expr pos:start="195:13" pos:end="195:52"><call pos:start="195:13" pos:end="195:52"><name pos:start="195:13" pos:end="195:38">gen_helper_dmfc0_tcrestart</name><argument_list pos:start="195:39" pos:end="195:52">(<argument pos:start="195:40" pos:end="195:42"><expr pos:start="195:40" pos:end="195:42"><name pos:start="195:40" pos:end="195:42">arg</name></expr></argument>, <argument pos:start="195:45" pos:end="195:51"><expr pos:start="195:45" pos:end="195:51"><name pos:start="195:45" pos:end="195:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:29"><expr pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:14">rn</name> <operator pos:start="197:16" pos:end="197:16">=</operator> <literal type="string" pos:start="197:18" pos:end="197:28">"TCRestart"</literal></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:15">case <expr pos:start="201:14" pos:end="201:14"><literal type="number" pos:start="201:14" pos:end="201:14">4</literal></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:48"><expr pos:start="203:13" pos:end="203:47"><call pos:start="203:13" pos:end="203:47"><name pos:start="203:13" pos:end="203:21">CP0_CHECK</name><argument_list pos:start="203:22" pos:end="203:47">(<argument pos:start="203:23" pos:end="203:46"><expr pos:start="203:23" pos:end="203:46"><name pos:start="203:23" pos:end="203:37"><name pos:start="203:23" pos:end="203:25">ctx</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:37">insn_flags</name></name> <operator pos:start="203:39" pos:end="203:39">&amp;</operator> <name pos:start="203:41" pos:end="203:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:50"><expr pos:start="205:13" pos:end="205:49"><call pos:start="205:13" pos:end="205:49"><name pos:start="205:13" pos:end="205:35">gen_helper_dmfc0_tchalt</name><argument_list pos:start="205:36" pos:end="205:49">(<argument pos:start="205:37" pos:end="205:39"><expr pos:start="205:37" pos:end="205:39"><name pos:start="205:37" pos:end="205:39">arg</name></expr></argument>, <argument pos:start="205:42" pos:end="205:48"><expr pos:start="205:42" pos:end="205:48"><name pos:start="205:42" pos:end="205:48">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:26"><expr pos:start="207:13" pos:end="207:25"><name pos:start="207:13" pos:end="207:14">rn</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <literal type="string" pos:start="207:18" pos:end="207:25">"TCHalt"</literal></expr>;</expr_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        <case pos:start="211:9" pos:end="211:15">case <expr pos:start="211:14" pos:end="211:14"><literal type="number" pos:start="211:14" pos:end="211:14">5</literal></expr>:</case>

            <expr_stmt pos:start="213:13" pos:end="213:48"><expr pos:start="213:13" pos:end="213:47"><call pos:start="213:13" pos:end="213:47"><name pos:start="213:13" pos:end="213:21">CP0_CHECK</name><argument_list pos:start="213:22" pos:end="213:47">(<argument pos:start="213:23" pos:end="213:46"><expr pos:start="213:23" pos:end="213:46"><name pos:start="213:23" pos:end="213:37"><name pos:start="213:23" pos:end="213:25">ctx</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:37">insn_flags</name></name> <operator pos:start="213:39" pos:end="213:39">&amp;</operator> <name pos:start="213:41" pos:end="213:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:53"><expr pos:start="215:13" pos:end="215:52"><call pos:start="215:13" pos:end="215:52"><name pos:start="215:13" pos:end="215:38">gen_helper_dmfc0_tccontext</name><argument_list pos:start="215:39" pos:end="215:52">(<argument pos:start="215:40" pos:end="215:42"><expr pos:start="215:40" pos:end="215:42"><name pos:start="215:40" pos:end="215:42">arg</name></expr></argument>, <argument pos:start="215:45" pos:end="215:51"><expr pos:start="215:45" pos:end="215:51"><name pos:start="215:45" pos:end="215:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:29"><expr pos:start="217:13" pos:end="217:28"><name pos:start="217:13" pos:end="217:14">rn</name> <operator pos:start="217:16" pos:end="217:16">=</operator> <literal type="string" pos:start="217:18" pos:end="217:28">"TCContext"</literal></expr>;</expr_stmt>

            <break pos:start="219:13" pos:end="219:18">break;</break>

        <case pos:start="221:9" pos:end="221:15">case <expr pos:start="221:14" pos:end="221:14"><literal type="number" pos:start="221:14" pos:end="221:14">6</literal></expr>:</case>

            <expr_stmt pos:start="223:13" pos:end="223:48"><expr pos:start="223:13" pos:end="223:47"><call pos:start="223:13" pos:end="223:47"><name pos:start="223:13" pos:end="223:21">CP0_CHECK</name><argument_list pos:start="223:22" pos:end="223:47">(<argument pos:start="223:23" pos:end="223:46"><expr pos:start="223:23" pos:end="223:46"><name pos:start="223:23" pos:end="223:37"><name pos:start="223:23" pos:end="223:25">ctx</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:37">insn_flags</name></name> <operator pos:start="223:39" pos:end="223:39">&amp;</operator> <name pos:start="223:41" pos:end="223:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:54"><expr pos:start="225:13" pos:end="225:53"><call pos:start="225:13" pos:end="225:53"><name pos:start="225:13" pos:end="225:39">gen_helper_dmfc0_tcschedule</name><argument_list pos:start="225:40" pos:end="225:53">(<argument pos:start="225:41" pos:end="225:43"><expr pos:start="225:41" pos:end="225:43"><name pos:start="225:41" pos:end="225:43">arg</name></expr></argument>, <argument pos:start="225:46" pos:end="225:52"><expr pos:start="225:46" pos:end="225:52"><name pos:start="225:46" pos:end="225:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:30"><expr pos:start="227:13" pos:end="227:29"><name pos:start="227:13" pos:end="227:14">rn</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <literal type="string" pos:start="227:18" pos:end="227:29">"TCSchedule"</literal></expr>;</expr_stmt>

            <break pos:start="229:13" pos:end="229:18">break;</break>

        <case pos:start="231:9" pos:end="231:15">case <expr pos:start="231:14" pos:end="231:14"><literal type="number" pos:start="231:14" pos:end="231:14">7</literal></expr>:</case>

            <expr_stmt pos:start="233:13" pos:end="233:48"><expr pos:start="233:13" pos:end="233:47"><call pos:start="233:13" pos:end="233:47"><name pos:start="233:13" pos:end="233:21">CP0_CHECK</name><argument_list pos:start="233:22" pos:end="233:47">(<argument pos:start="233:23" pos:end="233:46"><expr pos:start="233:23" pos:end="233:46"><name pos:start="233:23" pos:end="233:37"><name pos:start="233:23" pos:end="233:25">ctx</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:37">insn_flags</name></name> <operator pos:start="233:39" pos:end="233:39">&amp;</operator> <name pos:start="233:41" pos:end="233:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:55"><expr pos:start="235:13" pos:end="235:54"><call pos:start="235:13" pos:end="235:54"><name pos:start="235:13" pos:end="235:40">gen_helper_dmfc0_tcschefback</name><argument_list pos:start="235:41" pos:end="235:54">(<argument pos:start="235:42" pos:end="235:44"><expr pos:start="235:42" pos:end="235:44"><name pos:start="235:42" pos:end="235:44">arg</name></expr></argument>, <argument pos:start="235:47" pos:end="235:53"><expr pos:start="235:47" pos:end="235:53"><name pos:start="235:47" pos:end="235:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:14">rn</name> <operator pos:start="237:16" pos:end="237:16">=</operator> <literal type="string" pos:start="237:18" pos:end="237:30">"TCScheFBack"</literal></expr>;</expr_stmt>

            <break pos:start="239:13" pos:end="239:18">break;</break>

        <default pos:start="241:9" pos:end="241:16">default:</default>

            <goto pos:start="243:13" pos:end="243:35">goto <name pos:start="243:18" pos:end="243:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="247:9" pos:end="247:14">break;</break>

    <case pos:start="249:5" pos:end="249:11">case <expr pos:start="249:10" pos:end="249:10"><literal type="number" pos:start="249:10" pos:end="249:10">3</literal></expr>:</case>

        <switch pos:start="251:9" pos:end="265:9">switch <condition pos:start="251:16" pos:end="251:20">(<expr pos:start="251:17" pos:end="251:19"><name pos:start="251:17" pos:end="251:19">sel</name></expr>)</condition> <block pos:start="251:22" pos:end="265:9">{<block_content pos:start="253:9" pos:end="263:35">

        <case pos:start="253:9" pos:end="253:15">case <expr pos:start="253:14" pos:end="253:14"><literal type="number" pos:start="253:14" pos:end="253:14">0</literal></expr>:</case>

            <expr_stmt pos:start="255:13" pos:end="255:78"><expr pos:start="255:13" pos:end="255:77"><call pos:start="255:13" pos:end="255:77"><name pos:start="255:13" pos:end="255:25">tcg_gen_ld_tl</name><argument_list pos:start="255:26" pos:end="255:77">(<argument pos:start="255:27" pos:end="255:29"><expr pos:start="255:27" pos:end="255:29"><name pos:start="255:27" pos:end="255:29">arg</name></expr></argument>, <argument pos:start="255:32" pos:end="255:38"><expr pos:start="255:32" pos:end="255:38"><name pos:start="255:32" pos:end="255:38">cpu_env</name></expr></argument>, <argument pos:start="255:41" pos:end="255:76"><expr pos:start="255:41" pos:end="255:76"><call pos:start="255:41" pos:end="255:76"><name pos:start="255:41" pos:end="255:48">offsetof</name><argument_list pos:start="255:49" pos:end="255:76">(<argument pos:start="255:50" pos:end="255:61"><expr pos:start="255:50" pos:end="255:61"><name pos:start="255:50" pos:end="255:61">CPUMIPSState</name></expr></argument>, <argument pos:start="255:64" pos:end="255:75"><expr pos:start="255:64" pos:end="255:75"><name pos:start="255:64" pos:end="255:75">CP0_EntryLo1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:28"><expr pos:start="257:13" pos:end="257:27"><name pos:start="257:13" pos:end="257:14">rn</name> <operator pos:start="257:16" pos:end="257:16">=</operator> <literal type="string" pos:start="257:18" pos:end="257:27">"EntryLo1"</literal></expr>;</expr_stmt>

            <break pos:start="259:13" pos:end="259:18">break;</break>

        <default pos:start="261:9" pos:end="261:16">default:</default>

            <goto pos:start="263:13" pos:end="263:35">goto <name pos:start="263:18" pos:end="263:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="267:9" pos:end="267:14">break;</break>

    <case pos:start="269:5" pos:end="269:11">case <expr pos:start="269:10" pos:end="269:10"><literal type="number" pos:start="269:10" pos:end="269:10">4</literal></expr>:</case>

        <switch pos:start="271:9" pos:end="307:9">switch <condition pos:start="271:16" pos:end="271:20">(<expr pos:start="271:17" pos:end="271:19"><name pos:start="271:17" pos:end="271:19">sel</name></expr>)</condition> <block pos:start="271:22" pos:end="307:9">{<block_content pos:start="273:9" pos:end="305:35">

        <case pos:start="273:9" pos:end="273:15">case <expr pos:start="273:14" pos:end="273:14"><literal type="number" pos:start="273:14" pos:end="273:14">0</literal></expr>:</case>

            <expr_stmt pos:start="275:13" pos:end="275:77"><expr pos:start="275:13" pos:end="275:76"><call pos:start="275:13" pos:end="275:76"><name pos:start="275:13" pos:end="275:25">tcg_gen_ld_tl</name><argument_list pos:start="275:26" pos:end="275:76">(<argument pos:start="275:27" pos:end="275:29"><expr pos:start="275:27" pos:end="275:29"><name pos:start="275:27" pos:end="275:29">arg</name></expr></argument>, <argument pos:start="275:32" pos:end="275:38"><expr pos:start="275:32" pos:end="275:38"><name pos:start="275:32" pos:end="275:38">cpu_env</name></expr></argument>, <argument pos:start="275:41" pos:end="275:75"><expr pos:start="275:41" pos:end="275:75"><call pos:start="275:41" pos:end="275:75"><name pos:start="275:41" pos:end="275:48">offsetof</name><argument_list pos:start="275:49" pos:end="275:75">(<argument pos:start="275:50" pos:end="275:61"><expr pos:start="275:50" pos:end="275:61"><name pos:start="275:50" pos:end="275:61">CPUMIPSState</name></expr></argument>, <argument pos:start="275:64" pos:end="275:74"><expr pos:start="275:64" pos:end="275:74"><name pos:start="275:64" pos:end="275:74">CP0_Context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:27"><expr pos:start="277:13" pos:end="277:26"><name pos:start="277:13" pos:end="277:14">rn</name> <operator pos:start="277:16" pos:end="277:16">=</operator> <literal type="string" pos:start="277:18" pos:end="277:26">"Context"</literal></expr>;</expr_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <case pos:start="281:9" pos:end="281:15">case <expr pos:start="281:14" pos:end="281:14"><literal type="number" pos:start="281:14" pos:end="281:14">1</literal></expr>:</case>

<comment type="line" pos:start="283:1" pos:end="283:70">//            gen_helper_dmfc0_contextconfig(arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="285:13" pos:end="285:33"><expr pos:start="285:13" pos:end="285:32"><name pos:start="285:13" pos:end="285:14">rn</name> <operator pos:start="285:16" pos:end="285:16">=</operator> <literal type="string" pos:start="285:18" pos:end="285:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="287:13" pos:end="287:35">goto <name pos:start="287:18" pos:end="287:34">cp0_unimplemented</name>;</goto>

<comment type="line" pos:start="289:1" pos:end="289:20">//            break;</comment>

        <case pos:start="291:9" pos:end="291:15">case <expr pos:start="291:14" pos:end="291:14"><literal type="number" pos:start="291:14" pos:end="291:14">2</literal></expr>:</case>

            <expr_stmt pos:start="293:13" pos:end="293:33"><expr pos:start="293:13" pos:end="293:32"><call pos:start="293:13" pos:end="293:32"><name pos:start="293:13" pos:end="293:21">CP0_CHECK</name><argument_list pos:start="293:22" pos:end="293:32">(<argument pos:start="293:23" pos:end="293:31"><expr pos:start="293:23" pos:end="293:31"><name pos:start="293:23" pos:end="293:31"><name pos:start="293:23" pos:end="293:25">ctx</name><operator pos:start="293:26" pos:end="293:27">-&gt;</operator><name pos:start="293:28" pos:end="293:31">ulri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="297:75"><expr pos:start="295:13" pos:end="297:74"><call pos:start="295:13" pos:end="297:74"><name pos:start="295:13" pos:end="295:25">tcg_gen_ld_tl</name><argument_list pos:start="295:26" pos:end="297:74">(<argument pos:start="295:27" pos:end="295:29"><expr pos:start="295:27" pos:end="295:29"><name pos:start="295:27" pos:end="295:29">arg</name></expr></argument>, <argument pos:start="295:32" pos:end="295:38"><expr pos:start="295:32" pos:end="295:38"><name pos:start="295:32" pos:end="295:38">cpu_env</name></expr></argument>,

                          <argument pos:start="297:27" pos:end="297:73"><expr pos:start="297:27" pos:end="297:73"><call pos:start="297:27" pos:end="297:73"><name pos:start="297:27" pos:end="297:34">offsetof</name><argument_list pos:start="297:35" pos:end="297:73">(<argument pos:start="297:36" pos:end="297:47"><expr pos:start="297:36" pos:end="297:47"><name pos:start="297:36" pos:end="297:47">CPUMIPSState</name></expr></argument>, <argument pos:start="297:50" pos:end="297:72"><expr pos:start="297:50" pos:end="297:72"><name pos:start="297:50" pos:end="297:72"><name pos:start="297:50" pos:end="297:58">active_tc</name><operator pos:start="297:59" pos:end="297:59">.</operator><name pos:start="297:60" pos:end="297:72">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:29"><expr pos:start="299:13" pos:end="299:28"><name pos:start="299:13" pos:end="299:14">rn</name> <operator pos:start="299:16" pos:end="299:16">=</operator> <literal type="string" pos:start="299:18" pos:end="299:28">"UserLocal"</literal></expr>;</expr_stmt>

            <break pos:start="301:13" pos:end="301:18">break;</break>

        <default pos:start="303:9" pos:end="303:16">default:</default>

            <goto pos:start="305:13" pos:end="305:35">goto <name pos:start="305:18" pos:end="305:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="309:9" pos:end="309:14">break;</break>

    <case pos:start="311:5" pos:end="311:11">case <expr pos:start="311:10" pos:end="311:10"><literal type="number" pos:start="311:10" pos:end="311:10">5</literal></expr>:</case>

        <switch pos:start="313:9" pos:end="337:9">switch <condition pos:start="313:16" pos:end="313:20">(<expr pos:start="313:17" pos:end="313:19"><name pos:start="313:17" pos:end="313:19">sel</name></expr>)</condition> <block pos:start="313:22" pos:end="337:9">{<block_content pos:start="315:9" pos:end="335:35">

        <case pos:start="315:9" pos:end="315:15">case <expr pos:start="315:14" pos:end="315:14"><literal type="number" pos:start="315:14" pos:end="315:14">0</literal></expr>:</case>

            <expr_stmt pos:start="317:13" pos:end="317:71"><expr pos:start="317:13" pos:end="317:70"><call pos:start="317:13" pos:end="317:70"><name pos:start="317:13" pos:end="317:27">gen_mfc0_load32</name><argument_list pos:start="317:28" pos:end="317:70">(<argument pos:start="317:29" pos:end="317:31"><expr pos:start="317:29" pos:end="317:31"><name pos:start="317:29" pos:end="317:31">arg</name></expr></argument>, <argument pos:start="317:34" pos:end="317:69"><expr pos:start="317:34" pos:end="317:69"><call pos:start="317:34" pos:end="317:69"><name pos:start="317:34" pos:end="317:41">offsetof</name><argument_list pos:start="317:42" pos:end="317:69">(<argument pos:start="317:43" pos:end="317:54"><expr pos:start="317:43" pos:end="317:54"><name pos:start="317:43" pos:end="317:54">CPUMIPSState</name></expr></argument>, <argument pos:start="317:57" pos:end="317:68"><expr pos:start="317:57" pos:end="317:68"><name pos:start="317:57" pos:end="317:68">CP0_PageMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:28"><expr pos:start="319:13" pos:end="319:27"><name pos:start="319:13" pos:end="319:14">rn</name> <operator pos:start="319:16" pos:end="319:16">=</operator> <literal type="string" pos:start="319:18" pos:end="319:27">"PageMask"</literal></expr>;</expr_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>

        <case pos:start="323:9" pos:end="323:15">case <expr pos:start="323:14" pos:end="323:14"><literal type="number" pos:start="323:14" pos:end="323:14">1</literal></expr>:</case>

            <expr_stmt pos:start="325:13" pos:end="325:42"><expr pos:start="325:13" pos:end="325:41"><call pos:start="325:13" pos:end="325:41"><name pos:start="325:13" pos:end="325:22">check_insn</name><argument_list pos:start="325:23" pos:end="325:41">(<argument pos:start="325:24" pos:end="325:26"><expr pos:start="325:24" pos:end="325:26"><name pos:start="325:24" pos:end="325:26">ctx</name></expr></argument>, <argument pos:start="325:29" pos:end="325:40"><expr pos:start="325:29" pos:end="325:40"><name pos:start="325:29" pos:end="325:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="327:13" pos:end="327:72"><expr pos:start="327:13" pos:end="327:71"><call pos:start="327:13" pos:end="327:71"><name pos:start="327:13" pos:end="327:27">gen_mfc0_load32</name><argument_list pos:start="327:28" pos:end="327:71">(<argument pos:start="327:29" pos:end="327:31"><expr pos:start="327:29" pos:end="327:31"><name pos:start="327:29" pos:end="327:31">arg</name></expr></argument>, <argument pos:start="327:34" pos:end="327:70"><expr pos:start="327:34" pos:end="327:70"><call pos:start="327:34" pos:end="327:70"><name pos:start="327:34" pos:end="327:41">offsetof</name><argument_list pos:start="327:42" pos:end="327:70">(<argument pos:start="327:43" pos:end="327:54"><expr pos:start="327:43" pos:end="327:54"><name pos:start="327:43" pos:end="327:54">CPUMIPSState</name></expr></argument>, <argument pos:start="327:57" pos:end="327:69"><expr pos:start="327:57" pos:end="327:69"><name pos:start="327:57" pos:end="327:69">CP0_PageGrain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:29"><expr pos:start="329:13" pos:end="329:28"><name pos:start="329:13" pos:end="329:14">rn</name> <operator pos:start="329:16" pos:end="329:16">=</operator> <literal type="string" pos:start="329:18" pos:end="329:28">"PageGrain"</literal></expr>;</expr_stmt>

            <break pos:start="331:13" pos:end="331:18">break;</break>

        <default pos:start="333:9" pos:end="333:16">default:</default>

            <goto pos:start="335:13" pos:end="335:35">goto <name pos:start="335:18" pos:end="335:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="339:9" pos:end="339:14">break;</break>

    <case pos:start="341:5" pos:end="341:11">case <expr pos:start="341:10" pos:end="341:10"><literal type="number" pos:start="341:10" pos:end="341:10">6</literal></expr>:</case>

        <switch pos:start="343:9" pos:end="407:9">switch <condition pos:start="343:16" pos:end="343:20">(<expr pos:start="343:17" pos:end="343:19"><name pos:start="343:17" pos:end="343:19">sel</name></expr>)</condition> <block pos:start="343:22" pos:end="407:9">{<block_content pos:start="345:9" pos:end="405:35">

        <case pos:start="345:9" pos:end="345:15">case <expr pos:start="345:14" pos:end="345:14"><literal type="number" pos:start="345:14" pos:end="345:14">0</literal></expr>:</case>

            <expr_stmt pos:start="347:13" pos:end="347:68"><expr pos:start="347:13" pos:end="347:67"><call pos:start="347:13" pos:end="347:67"><name pos:start="347:13" pos:end="347:27">gen_mfc0_load32</name><argument_list pos:start="347:28" pos:end="347:67">(<argument pos:start="347:29" pos:end="347:31"><expr pos:start="347:29" pos:end="347:31"><name pos:start="347:29" pos:end="347:31">arg</name></expr></argument>, <argument pos:start="347:34" pos:end="347:66"><expr pos:start="347:34" pos:end="347:66"><call pos:start="347:34" pos:end="347:66"><name pos:start="347:34" pos:end="347:41">offsetof</name><argument_list pos:start="347:42" pos:end="347:66">(<argument pos:start="347:43" pos:end="347:54"><expr pos:start="347:43" pos:end="347:54"><name pos:start="347:43" pos:end="347:54">CPUMIPSState</name></expr></argument>, <argument pos:start="347:57" pos:end="347:65"><expr pos:start="347:57" pos:end="347:65"><name pos:start="347:57" pos:end="347:65">CP0_Wired</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:25"><expr pos:start="349:13" pos:end="349:24"><name pos:start="349:13" pos:end="349:14">rn</name> <operator pos:start="349:16" pos:end="349:16">=</operator> <literal type="string" pos:start="349:18" pos:end="349:24">"Wired"</literal></expr>;</expr_stmt>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        <case pos:start="353:9" pos:end="353:15">case <expr pos:start="353:14" pos:end="353:14"><literal type="number" pos:start="353:14" pos:end="353:14">1</literal></expr>:</case>

            <expr_stmt pos:start="355:13" pos:end="355:42"><expr pos:start="355:13" pos:end="355:41"><call pos:start="355:13" pos:end="355:41"><name pos:start="355:13" pos:end="355:22">check_insn</name><argument_list pos:start="355:23" pos:end="355:41">(<argument pos:start="355:24" pos:end="355:26"><expr pos:start="355:24" pos:end="355:26"><name pos:start="355:24" pos:end="355:26">ctx</name></expr></argument>, <argument pos:start="355:29" pos:end="355:40"><expr pos:start="355:29" pos:end="355:40"><name pos:start="355:29" pos:end="355:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:71"><expr pos:start="357:13" pos:end="357:70"><call pos:start="357:13" pos:end="357:70"><name pos:start="357:13" pos:end="357:27">gen_mfc0_load32</name><argument_list pos:start="357:28" pos:end="357:70">(<argument pos:start="357:29" pos:end="357:31"><expr pos:start="357:29" pos:end="357:31"><name pos:start="357:29" pos:end="357:31">arg</name></expr></argument>, <argument pos:start="357:34" pos:end="357:69"><expr pos:start="357:34" pos:end="357:69"><call pos:start="357:34" pos:end="357:69"><name pos:start="357:34" pos:end="357:41">offsetof</name><argument_list pos:start="357:42" pos:end="357:69">(<argument pos:start="357:43" pos:end="357:54"><expr pos:start="357:43" pos:end="357:54"><name pos:start="357:43" pos:end="357:54">CPUMIPSState</name></expr></argument>, <argument pos:start="357:57" pos:end="357:68"><expr pos:start="357:57" pos:end="357:68"><name pos:start="357:57" pos:end="357:68">CP0_SRSConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:28"><expr pos:start="359:13" pos:end="359:27"><name pos:start="359:13" pos:end="359:14">rn</name> <operator pos:start="359:16" pos:end="359:16">=</operator> <literal type="string" pos:start="359:18" pos:end="359:27">"SRSConf0"</literal></expr>;</expr_stmt>

            <break pos:start="361:13" pos:end="361:18">break;</break>

        <case pos:start="363:9" pos:end="363:15">case <expr pos:start="363:14" pos:end="363:14"><literal type="number" pos:start="363:14" pos:end="363:14">2</literal></expr>:</case>

            <expr_stmt pos:start="365:13" pos:end="365:42"><expr pos:start="365:13" pos:end="365:41"><call pos:start="365:13" pos:end="365:41"><name pos:start="365:13" pos:end="365:22">check_insn</name><argument_list pos:start="365:23" pos:end="365:41">(<argument pos:start="365:24" pos:end="365:26"><expr pos:start="365:24" pos:end="365:26"><name pos:start="365:24" pos:end="365:26">ctx</name></expr></argument>, <argument pos:start="365:29" pos:end="365:40"><expr pos:start="365:29" pos:end="365:40"><name pos:start="365:29" pos:end="365:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:71"><expr pos:start="367:13" pos:end="367:70"><call pos:start="367:13" pos:end="367:70"><name pos:start="367:13" pos:end="367:27">gen_mfc0_load32</name><argument_list pos:start="367:28" pos:end="367:70">(<argument pos:start="367:29" pos:end="367:31"><expr pos:start="367:29" pos:end="367:31"><name pos:start="367:29" pos:end="367:31">arg</name></expr></argument>, <argument pos:start="367:34" pos:end="367:69"><expr pos:start="367:34" pos:end="367:69"><call pos:start="367:34" pos:end="367:69"><name pos:start="367:34" pos:end="367:41">offsetof</name><argument_list pos:start="367:42" pos:end="367:69">(<argument pos:start="367:43" pos:end="367:54"><expr pos:start="367:43" pos:end="367:54"><name pos:start="367:43" pos:end="367:54">CPUMIPSState</name></expr></argument>, <argument pos:start="367:57" pos:end="367:68"><expr pos:start="367:57" pos:end="367:68"><name pos:start="367:57" pos:end="367:68">CP0_SRSConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:28"><expr pos:start="369:13" pos:end="369:27"><name pos:start="369:13" pos:end="369:14">rn</name> <operator pos:start="369:16" pos:end="369:16">=</operator> <literal type="string" pos:start="369:18" pos:end="369:27">"SRSConf1"</literal></expr>;</expr_stmt>

            <break pos:start="371:13" pos:end="371:18">break;</break>

        <case pos:start="373:9" pos:end="373:15">case <expr pos:start="373:14" pos:end="373:14"><literal type="number" pos:start="373:14" pos:end="373:14">3</literal></expr>:</case>

            <expr_stmt pos:start="375:13" pos:end="375:42"><expr pos:start="375:13" pos:end="375:41"><call pos:start="375:13" pos:end="375:41"><name pos:start="375:13" pos:end="375:22">check_insn</name><argument_list pos:start="375:23" pos:end="375:41">(<argument pos:start="375:24" pos:end="375:26"><expr pos:start="375:24" pos:end="375:26"><name pos:start="375:24" pos:end="375:26">ctx</name></expr></argument>, <argument pos:start="375:29" pos:end="375:40"><expr pos:start="375:29" pos:end="375:40"><name pos:start="375:29" pos:end="375:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:71"><expr pos:start="377:13" pos:end="377:70"><call pos:start="377:13" pos:end="377:70"><name pos:start="377:13" pos:end="377:27">gen_mfc0_load32</name><argument_list pos:start="377:28" pos:end="377:70">(<argument pos:start="377:29" pos:end="377:31"><expr pos:start="377:29" pos:end="377:31"><name pos:start="377:29" pos:end="377:31">arg</name></expr></argument>, <argument pos:start="377:34" pos:end="377:69"><expr pos:start="377:34" pos:end="377:69"><call pos:start="377:34" pos:end="377:69"><name pos:start="377:34" pos:end="377:41">offsetof</name><argument_list pos:start="377:42" pos:end="377:69">(<argument pos:start="377:43" pos:end="377:54"><expr pos:start="377:43" pos:end="377:54"><name pos:start="377:43" pos:end="377:54">CPUMIPSState</name></expr></argument>, <argument pos:start="377:57" pos:end="377:68"><expr pos:start="377:57" pos:end="377:68"><name pos:start="377:57" pos:end="377:68">CP0_SRSConf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:28"><expr pos:start="379:13" pos:end="379:27"><name pos:start="379:13" pos:end="379:14">rn</name> <operator pos:start="379:16" pos:end="379:16">=</operator> <literal type="string" pos:start="379:18" pos:end="379:27">"SRSConf2"</literal></expr>;</expr_stmt>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        <case pos:start="383:9" pos:end="383:15">case <expr pos:start="383:14" pos:end="383:14"><literal type="number" pos:start="383:14" pos:end="383:14">4</literal></expr>:</case>

            <expr_stmt pos:start="385:13" pos:end="385:42"><expr pos:start="385:13" pos:end="385:41"><call pos:start="385:13" pos:end="385:41"><name pos:start="385:13" pos:end="385:22">check_insn</name><argument_list pos:start="385:23" pos:end="385:41">(<argument pos:start="385:24" pos:end="385:26"><expr pos:start="385:24" pos:end="385:26"><name pos:start="385:24" pos:end="385:26">ctx</name></expr></argument>, <argument pos:start="385:29" pos:end="385:40"><expr pos:start="385:29" pos:end="385:40"><name pos:start="385:29" pos:end="385:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:71"><expr pos:start="387:13" pos:end="387:70"><call pos:start="387:13" pos:end="387:70"><name pos:start="387:13" pos:end="387:27">gen_mfc0_load32</name><argument_list pos:start="387:28" pos:end="387:70">(<argument pos:start="387:29" pos:end="387:31"><expr pos:start="387:29" pos:end="387:31"><name pos:start="387:29" pos:end="387:31">arg</name></expr></argument>, <argument pos:start="387:34" pos:end="387:69"><expr pos:start="387:34" pos:end="387:69"><call pos:start="387:34" pos:end="387:69"><name pos:start="387:34" pos:end="387:41">offsetof</name><argument_list pos:start="387:42" pos:end="387:69">(<argument pos:start="387:43" pos:end="387:54"><expr pos:start="387:43" pos:end="387:54"><name pos:start="387:43" pos:end="387:54">CPUMIPSState</name></expr></argument>, <argument pos:start="387:57" pos:end="387:68"><expr pos:start="387:57" pos:end="387:68"><name pos:start="387:57" pos:end="387:68">CP0_SRSConf3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:28"><expr pos:start="389:13" pos:end="389:27"><name pos:start="389:13" pos:end="389:14">rn</name> <operator pos:start="389:16" pos:end="389:16">=</operator> <literal type="string" pos:start="389:18" pos:end="389:27">"SRSConf3"</literal></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:15">case <expr pos:start="393:14" pos:end="393:14"><literal type="number" pos:start="393:14" pos:end="393:14">5</literal></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:42"><expr pos:start="395:13" pos:end="395:41"><call pos:start="395:13" pos:end="395:41"><name pos:start="395:13" pos:end="395:22">check_insn</name><argument_list pos:start="395:23" pos:end="395:41">(<argument pos:start="395:24" pos:end="395:26"><expr pos:start="395:24" pos:end="395:26"><name pos:start="395:24" pos:end="395:26">ctx</name></expr></argument>, <argument pos:start="395:29" pos:end="395:40"><expr pos:start="395:29" pos:end="395:40"><name pos:start="395:29" pos:end="395:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:71"><expr pos:start="397:13" pos:end="397:70"><call pos:start="397:13" pos:end="397:70"><name pos:start="397:13" pos:end="397:27">gen_mfc0_load32</name><argument_list pos:start="397:28" pos:end="397:70">(<argument pos:start="397:29" pos:end="397:31"><expr pos:start="397:29" pos:end="397:31"><name pos:start="397:29" pos:end="397:31">arg</name></expr></argument>, <argument pos:start="397:34" pos:end="397:69"><expr pos:start="397:34" pos:end="397:69"><call pos:start="397:34" pos:end="397:69"><name pos:start="397:34" pos:end="397:41">offsetof</name><argument_list pos:start="397:42" pos:end="397:69">(<argument pos:start="397:43" pos:end="397:54"><expr pos:start="397:43" pos:end="397:54"><name pos:start="397:43" pos:end="397:54">CPUMIPSState</name></expr></argument>, <argument pos:start="397:57" pos:end="397:68"><expr pos:start="397:57" pos:end="397:68"><name pos:start="397:57" pos:end="397:68">CP0_SRSConf4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:28"><expr pos:start="399:13" pos:end="399:27"><name pos:start="399:13" pos:end="399:14">rn</name> <operator pos:start="399:16" pos:end="399:16">=</operator> <literal type="string" pos:start="399:18" pos:end="399:27">"SRSConf4"</literal></expr>;</expr_stmt>

            <break pos:start="401:13" pos:end="401:18">break;</break>

        <default pos:start="403:9" pos:end="403:16">default:</default>

            <goto pos:start="405:13" pos:end="405:35">goto <name pos:start="405:18" pos:end="405:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="409:9" pos:end="409:14">break;</break>

    <case pos:start="411:5" pos:end="411:11">case <expr pos:start="411:10" pos:end="411:10"><literal type="number" pos:start="411:10" pos:end="411:10">7</literal></expr>:</case>

        <switch pos:start="413:9" pos:end="429:9">switch <condition pos:start="413:16" pos:end="413:20">(<expr pos:start="413:17" pos:end="413:19"><name pos:start="413:17" pos:end="413:19">sel</name></expr>)</condition> <block pos:start="413:22" pos:end="429:9">{<block_content pos:start="415:9" pos:end="427:35">

        <case pos:start="415:9" pos:end="415:15">case <expr pos:start="415:14" pos:end="415:14"><literal type="number" pos:start="415:14" pos:end="415:14">0</literal></expr>:</case>

            <expr_stmt pos:start="417:13" pos:end="417:42"><expr pos:start="417:13" pos:end="417:41"><call pos:start="417:13" pos:end="417:41"><name pos:start="417:13" pos:end="417:22">check_insn</name><argument_list pos:start="417:23" pos:end="417:41">(<argument pos:start="417:24" pos:end="417:26"><expr pos:start="417:24" pos:end="417:26"><name pos:start="417:24" pos:end="417:26">ctx</name></expr></argument>, <argument pos:start="417:29" pos:end="417:40"><expr pos:start="417:29" pos:end="417:40"><name pos:start="417:29" pos:end="417:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="419:13" pos:end="419:69"><expr pos:start="419:13" pos:end="419:68"><call pos:start="419:13" pos:end="419:68"><name pos:start="419:13" pos:end="419:27">gen_mfc0_load32</name><argument_list pos:start="419:28" pos:end="419:68">(<argument pos:start="419:29" pos:end="419:31"><expr pos:start="419:29" pos:end="419:31"><name pos:start="419:29" pos:end="419:31">arg</name></expr></argument>, <argument pos:start="419:34" pos:end="419:67"><expr pos:start="419:34" pos:end="419:67"><call pos:start="419:34" pos:end="419:67"><name pos:start="419:34" pos:end="419:41">offsetof</name><argument_list pos:start="419:42" pos:end="419:67">(<argument pos:start="419:43" pos:end="419:54"><expr pos:start="419:43" pos:end="419:54"><name pos:start="419:43" pos:end="419:54">CPUMIPSState</name></expr></argument>, <argument pos:start="419:57" pos:end="419:66"><expr pos:start="419:57" pos:end="419:66"><name pos:start="419:57" pos:end="419:66">CP0_HWREna</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="421:26"><expr pos:start="421:13" pos:end="421:25"><name pos:start="421:13" pos:end="421:14">rn</name> <operator pos:start="421:16" pos:end="421:16">=</operator> <literal type="string" pos:start="421:18" pos:end="421:25">"HWREna"</literal></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <default pos:start="425:9" pos:end="425:16">default:</default>

            <goto pos:start="427:13" pos:end="427:35">goto <name pos:start="427:18" pos:end="427:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="431:9" pos:end="431:14">break;</break>

    <case pos:start="433:5" pos:end="433:11">case <expr pos:start="433:10" pos:end="433:10"><literal type="number" pos:start="433:10" pos:end="433:10">8</literal></expr>:</case>

        <switch pos:start="435:9" pos:end="469:9">switch <condition pos:start="435:16" pos:end="435:20">(<expr pos:start="435:17" pos:end="435:19"><name pos:start="435:17" pos:end="435:19">sel</name></expr>)</condition> <block pos:start="435:22" pos:end="469:9">{<block_content pos:start="437:9" pos:end="467:35">

        <case pos:start="437:9" pos:end="437:15">case <expr pos:start="437:14" pos:end="437:14"><literal type="number" pos:start="437:14" pos:end="437:14">0</literal></expr>:</case>

            <expr_stmt pos:start="439:13" pos:end="439:78"><expr pos:start="439:13" pos:end="439:77"><call pos:start="439:13" pos:end="439:77"><name pos:start="439:13" pos:end="439:25">tcg_gen_ld_tl</name><argument_list pos:start="439:26" pos:end="439:77">(<argument pos:start="439:27" pos:end="439:29"><expr pos:start="439:27" pos:end="439:29"><name pos:start="439:27" pos:end="439:29">arg</name></expr></argument>, <argument pos:start="439:32" pos:end="439:38"><expr pos:start="439:32" pos:end="439:38"><name pos:start="439:32" pos:end="439:38">cpu_env</name></expr></argument>, <argument pos:start="439:41" pos:end="439:76"><expr pos:start="439:41" pos:end="439:76"><call pos:start="439:41" pos:end="439:76"><name pos:start="439:41" pos:end="439:48">offsetof</name><argument_list pos:start="439:49" pos:end="439:76">(<argument pos:start="439:50" pos:end="439:61"><expr pos:start="439:50" pos:end="439:61"><name pos:start="439:50" pos:end="439:61">CPUMIPSState</name></expr></argument>, <argument pos:start="439:64" pos:end="439:75"><expr pos:start="439:64" pos:end="439:75"><name pos:start="439:64" pos:end="439:75">CP0_BadVAddr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:28"><expr pos:start="441:13" pos:end="441:27"><name pos:start="441:13" pos:end="441:14">rn</name> <operator pos:start="441:16" pos:end="441:16">=</operator> <literal type="string" pos:start="441:18" pos:end="441:27">"BadVAddr"</literal></expr>;</expr_stmt>

            <break pos:start="443:13" pos:end="443:18">break;</break>

        <case pos:start="445:9" pos:end="445:15">case <expr pos:start="445:14" pos:end="445:14"><literal type="number" pos:start="445:14" pos:end="445:14">1</literal></expr>:</case>

            <expr_stmt pos:start="447:13" pos:end="447:31"><expr pos:start="447:13" pos:end="447:30"><call pos:start="447:13" pos:end="447:30"><name pos:start="447:13" pos:end="447:21">CP0_CHECK</name><argument_list pos:start="447:22" pos:end="447:30">(<argument pos:start="447:23" pos:end="447:29"><expr pos:start="447:23" pos:end="447:29"><name pos:start="447:23" pos:end="447:29"><name pos:start="447:23" pos:end="447:25">ctx</name><operator pos:start="447:26" pos:end="447:27">-&gt;</operator><name pos:start="447:28" pos:end="447:29">bi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:71"><expr pos:start="449:13" pos:end="449:70"><call pos:start="449:13" pos:end="449:70"><name pos:start="449:13" pos:end="449:27">gen_mfc0_load32</name><argument_list pos:start="449:28" pos:end="449:70">(<argument pos:start="449:29" pos:end="449:31"><expr pos:start="449:29" pos:end="449:31"><name pos:start="449:29" pos:end="449:31">arg</name></expr></argument>, <argument pos:start="449:34" pos:end="449:69"><expr pos:start="449:34" pos:end="449:69"><call pos:start="449:34" pos:end="449:69"><name pos:start="449:34" pos:end="449:41">offsetof</name><argument_list pos:start="449:42" pos:end="449:69">(<argument pos:start="449:43" pos:end="449:54"><expr pos:start="449:43" pos:end="449:54"><name pos:start="449:43" pos:end="449:54">CPUMIPSState</name></expr></argument>, <argument pos:start="449:57" pos:end="449:68"><expr pos:start="449:57" pos:end="449:68"><name pos:start="449:57" pos:end="449:68">CP0_BadInstr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:28"><expr pos:start="451:13" pos:end="451:27"><name pos:start="451:13" pos:end="451:14">rn</name> <operator pos:start="451:16" pos:end="451:16">=</operator> <literal type="string" pos:start="451:18" pos:end="451:27">"BadInstr"</literal></expr>;</expr_stmt>

            <break pos:start="453:13" pos:end="453:18">break;</break>

        <case pos:start="455:9" pos:end="455:15">case <expr pos:start="455:14" pos:end="455:14"><literal type="number" pos:start="455:14" pos:end="455:14">2</literal></expr>:</case>

            <expr_stmt pos:start="457:13" pos:end="457:31"><expr pos:start="457:13" pos:end="457:30"><call pos:start="457:13" pos:end="457:30"><name pos:start="457:13" pos:end="457:21">CP0_CHECK</name><argument_list pos:start="457:22" pos:end="457:30">(<argument pos:start="457:23" pos:end="457:29"><expr pos:start="457:23" pos:end="457:29"><name pos:start="457:23" pos:end="457:29"><name pos:start="457:23" pos:end="457:25">ctx</name><operator pos:start="457:26" pos:end="457:27">-&gt;</operator><name pos:start="457:28" pos:end="457:29">bp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:72"><expr pos:start="459:13" pos:end="459:71"><call pos:start="459:13" pos:end="459:71"><name pos:start="459:13" pos:end="459:27">gen_mfc0_load32</name><argument_list pos:start="459:28" pos:end="459:71">(<argument pos:start="459:29" pos:end="459:31"><expr pos:start="459:29" pos:end="459:31"><name pos:start="459:29" pos:end="459:31">arg</name></expr></argument>, <argument pos:start="459:34" pos:end="459:70"><expr pos:start="459:34" pos:end="459:70"><call pos:start="459:34" pos:end="459:70"><name pos:start="459:34" pos:end="459:41">offsetof</name><argument_list pos:start="459:42" pos:end="459:70">(<argument pos:start="459:43" pos:end="459:54"><expr pos:start="459:43" pos:end="459:54"><name pos:start="459:43" pos:end="459:54">CPUMIPSState</name></expr></argument>, <argument pos:start="459:57" pos:end="459:69"><expr pos:start="459:57" pos:end="459:69"><name pos:start="459:57" pos:end="459:69">CP0_BadInstrP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:29"><expr pos:start="461:13" pos:end="461:28"><name pos:start="461:13" pos:end="461:14">rn</name> <operator pos:start="461:16" pos:end="461:16">=</operator> <literal type="string" pos:start="461:18" pos:end="461:28">"BadInstrP"</literal></expr>;</expr_stmt>

            <break pos:start="463:13" pos:end="463:18">break;</break>

        <default pos:start="465:9" pos:end="465:16">default:</default>

            <goto pos:start="467:13" pos:end="467:35">goto <name pos:start="467:18" pos:end="467:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="471:9" pos:end="471:14">break;</break>

    <case pos:start="473:5" pos:end="473:11">case <expr pos:start="473:10" pos:end="473:10"><literal type="number" pos:start="473:10" pos:end="473:10">9</literal></expr>:</case>

        <switch pos:start="475:9" pos:end="509:9">switch <condition pos:start="475:16" pos:end="475:20">(<expr pos:start="475:17" pos:end="475:19"><name pos:start="475:17" pos:end="475:19">sel</name></expr>)</condition> <block pos:start="475:22" pos:end="509:9">{<block_content pos:start="477:9" pos:end="507:35">

        <case pos:start="477:9" pos:end="477:15">case <expr pos:start="477:14" pos:end="477:14"><literal type="number" pos:start="477:14" pos:end="477:14">0</literal></expr>:</case>

            <comment type="block" pos:start="479:13" pos:end="479:68">/* Mark as an IO operation because we read the time.  */</comment>

            <if_stmt pos:start="481:13" pos:end="483:31"><if pos:start="481:13" pos:end="483:31">if <condition pos:start="481:16" pos:end="481:27">(<expr pos:start="481:17" pos:end="481:26"><name pos:start="481:17" pos:end="481:26">use_icount</name></expr>)</condition><block type="pseudo" pos:start="483:17" pos:end="483:31"><block_content pos:start="483:17" pos:end="483:31">

                <expr_stmt pos:start="483:17" pos:end="483:31"><expr pos:start="483:17" pos:end="483:30"><call pos:start="483:17" pos:end="483:30"><name pos:start="483:17" pos:end="483:28">gen_io_start</name><argument_list pos:start="483:29" pos:end="483:30">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="485:13" pos:end="485:48"><expr pos:start="485:13" pos:end="485:47"><call pos:start="485:13" pos:end="485:47"><name pos:start="485:13" pos:end="485:33">gen_helper_mfc0_count</name><argument_list pos:start="485:34" pos:end="485:47">(<argument pos:start="485:35" pos:end="485:37"><expr pos:start="485:35" pos:end="485:37"><name pos:start="485:35" pos:end="485:37">arg</name></expr></argument>, <argument pos:start="485:40" pos:end="485:46"><expr pos:start="485:40" pos:end="485:46"><name pos:start="485:40" pos:end="485:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="487:13" pos:end="491:13"><if pos:start="487:13" pos:end="491:13">if <condition pos:start="487:16" pos:end="487:27">(<expr pos:start="487:17" pos:end="487:26"><name pos:start="487:17" pos:end="487:26">use_icount</name></expr>)</condition> <block pos:start="487:29" pos:end="491:13">{<block_content pos:start="489:17" pos:end="489:29">

                <expr_stmt pos:start="489:17" pos:end="489:29"><expr pos:start="489:17" pos:end="489:28"><call pos:start="489:17" pos:end="489:28"><name pos:start="489:17" pos:end="489:26">gen_io_end</name><argument_list pos:start="489:27" pos:end="489:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="493:13" pos:end="495:39">/* Break the TB to be able to take timer interrupts immediately

               after reading count.  */</comment>

            <expr_stmt pos:start="497:13" pos:end="497:34"><expr pos:start="497:13" pos:end="497:33"><name pos:start="497:13" pos:end="497:23"><name pos:start="497:13" pos:end="497:15">ctx</name><operator pos:start="497:16" pos:end="497:17">-&gt;</operator><name pos:start="497:18" pos:end="497:23">bstate</name></name> <operator pos:start="497:25" pos:end="497:25">=</operator> <name pos:start="497:27" pos:end="497:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:25"><expr pos:start="499:13" pos:end="499:24"><name pos:start="499:13" pos:end="499:14">rn</name> <operator pos:start="499:16" pos:end="499:16">=</operator> <literal type="string" pos:start="499:18" pos:end="499:24">"Count"</literal></expr>;</expr_stmt>

            <break pos:start="501:13" pos:end="501:18">break;</break>

        <comment type="block" pos:start="503:9" pos:end="503:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="505:9" pos:end="505:16">default:</default>

            <goto pos:start="507:13" pos:end="507:35">goto <name pos:start="507:18" pos:end="507:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="511:9" pos:end="511:14">break;</break>

    <case pos:start="513:5" pos:end="513:12">case <expr pos:start="513:10" pos:end="513:11"><literal type="number" pos:start="513:10" pos:end="513:11">10</literal></expr>:</case>

        <switch pos:start="515:9" pos:end="529:9">switch <condition pos:start="515:16" pos:end="515:20">(<expr pos:start="515:17" pos:end="515:19"><name pos:start="515:17" pos:end="515:19">sel</name></expr>)</condition> <block pos:start="515:22" pos:end="529:9">{<block_content pos:start="517:9" pos:end="527:35">

        <case pos:start="517:9" pos:end="517:15">case <expr pos:start="517:14" pos:end="517:14"><literal type="number" pos:start="517:14" pos:end="517:14">0</literal></expr>:</case>

            <expr_stmt pos:start="519:13" pos:end="519:77"><expr pos:start="519:13" pos:end="519:76"><call pos:start="519:13" pos:end="519:76"><name pos:start="519:13" pos:end="519:25">tcg_gen_ld_tl</name><argument_list pos:start="519:26" pos:end="519:76">(<argument pos:start="519:27" pos:end="519:29"><expr pos:start="519:27" pos:end="519:29"><name pos:start="519:27" pos:end="519:29">arg</name></expr></argument>, <argument pos:start="519:32" pos:end="519:38"><expr pos:start="519:32" pos:end="519:38"><name pos:start="519:32" pos:end="519:38">cpu_env</name></expr></argument>, <argument pos:start="519:41" pos:end="519:75"><expr pos:start="519:41" pos:end="519:75"><call pos:start="519:41" pos:end="519:75"><name pos:start="519:41" pos:end="519:48">offsetof</name><argument_list pos:start="519:49" pos:end="519:75">(<argument pos:start="519:50" pos:end="519:61"><expr pos:start="519:50" pos:end="519:61"><name pos:start="519:50" pos:end="519:61">CPUMIPSState</name></expr></argument>, <argument pos:start="519:64" pos:end="519:74"><expr pos:start="519:64" pos:end="519:74"><name pos:start="519:64" pos:end="519:74">CP0_EntryHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:27"><expr pos:start="521:13" pos:end="521:26"><name pos:start="521:13" pos:end="521:14">rn</name> <operator pos:start="521:16" pos:end="521:16">=</operator> <literal type="string" pos:start="521:18" pos:end="521:26">"EntryHi"</literal></expr>;</expr_stmt>

            <break pos:start="523:13" pos:end="523:18">break;</break>

        <default pos:start="525:9" pos:end="525:16">default:</default>

            <goto pos:start="527:13" pos:end="527:35">goto <name pos:start="527:18" pos:end="527:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="531:9" pos:end="531:14">break;</break>

    <case pos:start="533:5" pos:end="533:12">case <expr pos:start="533:10" pos:end="533:11"><literal type="number" pos:start="533:10" pos:end="533:11">11</literal></expr>:</case>

        <switch pos:start="535:9" pos:end="551:9">switch <condition pos:start="535:16" pos:end="535:20">(<expr pos:start="535:17" pos:end="535:19"><name pos:start="535:17" pos:end="535:19">sel</name></expr>)</condition> <block pos:start="535:22" pos:end="551:9">{<block_content pos:start="537:9" pos:end="549:35">

        <case pos:start="537:9" pos:end="537:15">case <expr pos:start="537:14" pos:end="537:14"><literal type="number" pos:start="537:14" pos:end="537:14">0</literal></expr>:</case>

            <expr_stmt pos:start="539:13" pos:end="539:70"><expr pos:start="539:13" pos:end="539:69"><call pos:start="539:13" pos:end="539:69"><name pos:start="539:13" pos:end="539:27">gen_mfc0_load32</name><argument_list pos:start="539:28" pos:end="539:69">(<argument pos:start="539:29" pos:end="539:31"><expr pos:start="539:29" pos:end="539:31"><name pos:start="539:29" pos:end="539:31">arg</name></expr></argument>, <argument pos:start="539:34" pos:end="539:68"><expr pos:start="539:34" pos:end="539:68"><call pos:start="539:34" pos:end="539:68"><name pos:start="539:34" pos:end="539:41">offsetof</name><argument_list pos:start="539:42" pos:end="539:68">(<argument pos:start="539:43" pos:end="539:54"><expr pos:start="539:43" pos:end="539:54"><name pos:start="539:43" pos:end="539:54">CPUMIPSState</name></expr></argument>, <argument pos:start="539:57" pos:end="539:67"><expr pos:start="539:57" pos:end="539:67"><name pos:start="539:57" pos:end="539:67">CP0_Compare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="541:13" pos:end="541:27"><expr pos:start="541:13" pos:end="541:26"><name pos:start="541:13" pos:end="541:14">rn</name> <operator pos:start="541:16" pos:end="541:16">=</operator> <literal type="string" pos:start="541:18" pos:end="541:26">"Compare"</literal></expr>;</expr_stmt>

            <break pos:start="543:13" pos:end="543:18">break;</break>

        <comment type="block" pos:start="545:9" pos:end="545:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="547:9" pos:end="547:16">default:</default>

            <goto pos:start="549:13" pos:end="549:35">goto <name pos:start="549:18" pos:end="549:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="553:9" pos:end="553:14">break;</break>

    <case pos:start="555:5" pos:end="555:12">case <expr pos:start="555:10" pos:end="555:11"><literal type="number" pos:start="555:10" pos:end="555:11">12</literal></expr>:</case>

        <switch pos:start="557:9" pos:end="601:9">switch <condition pos:start="557:16" pos:end="557:20">(<expr pos:start="557:17" pos:end="557:19"><name pos:start="557:17" pos:end="557:19">sel</name></expr>)</condition> <block pos:start="557:22" pos:end="601:9">{<block_content pos:start="559:9" pos:end="599:35">

        <case pos:start="559:9" pos:end="559:15">case <expr pos:start="559:14" pos:end="559:14"><literal type="number" pos:start="559:14" pos:end="559:14">0</literal></expr>:</case>

            <expr_stmt pos:start="561:13" pos:end="561:69"><expr pos:start="561:13" pos:end="561:68"><call pos:start="561:13" pos:end="561:68"><name pos:start="561:13" pos:end="561:27">gen_mfc0_load32</name><argument_list pos:start="561:28" pos:end="561:68">(<argument pos:start="561:29" pos:end="561:31"><expr pos:start="561:29" pos:end="561:31"><name pos:start="561:29" pos:end="561:31">arg</name></expr></argument>, <argument pos:start="561:34" pos:end="561:67"><expr pos:start="561:34" pos:end="561:67"><call pos:start="561:34" pos:end="561:67"><name pos:start="561:34" pos:end="561:41">offsetof</name><argument_list pos:start="561:42" pos:end="561:67">(<argument pos:start="561:43" pos:end="561:54"><expr pos:start="561:43" pos:end="561:54"><name pos:start="561:43" pos:end="561:54">CPUMIPSState</name></expr></argument>, <argument pos:start="561:57" pos:end="561:66"><expr pos:start="561:57" pos:end="561:66"><name pos:start="561:57" pos:end="561:66">CP0_Status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:26"><expr pos:start="563:13" pos:end="563:25"><name pos:start="563:13" pos:end="563:14">rn</name> <operator pos:start="563:16" pos:end="563:16">=</operator> <literal type="string" pos:start="563:18" pos:end="563:25">"Status"</literal></expr>;</expr_stmt>

            <break pos:start="565:13" pos:end="565:18">break;</break>

        <case pos:start="567:9" pos:end="567:15">case <expr pos:start="567:14" pos:end="567:14"><literal type="number" pos:start="567:14" pos:end="567:14">1</literal></expr>:</case>

            <expr_stmt pos:start="569:13" pos:end="569:42"><expr pos:start="569:13" pos:end="569:41"><call pos:start="569:13" pos:end="569:41"><name pos:start="569:13" pos:end="569:22">check_insn</name><argument_list pos:start="569:23" pos:end="569:41">(<argument pos:start="569:24" pos:end="569:26"><expr pos:start="569:24" pos:end="569:26"><name pos:start="569:24" pos:end="569:26">ctx</name></expr></argument>, <argument pos:start="569:29" pos:end="569:40"><expr pos:start="569:29" pos:end="569:40"><name pos:start="569:29" pos:end="569:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="571:13" pos:end="571:69"><expr pos:start="571:13" pos:end="571:68"><call pos:start="571:13" pos:end="571:68"><name pos:start="571:13" pos:end="571:27">gen_mfc0_load32</name><argument_list pos:start="571:28" pos:end="571:68">(<argument pos:start="571:29" pos:end="571:31"><expr pos:start="571:29" pos:end="571:31"><name pos:start="571:29" pos:end="571:31">arg</name></expr></argument>, <argument pos:start="571:34" pos:end="571:67"><expr pos:start="571:34" pos:end="571:67"><call pos:start="571:34" pos:end="571:67"><name pos:start="571:34" pos:end="571:41">offsetof</name><argument_list pos:start="571:42" pos:end="571:67">(<argument pos:start="571:43" pos:end="571:54"><expr pos:start="571:43" pos:end="571:54"><name pos:start="571:43" pos:end="571:54">CPUMIPSState</name></expr></argument>, <argument pos:start="571:57" pos:end="571:66"><expr pos:start="571:57" pos:end="571:66"><name pos:start="571:57" pos:end="571:66">CP0_IntCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="573:13" pos:end="573:26"><expr pos:start="573:13" pos:end="573:25"><name pos:start="573:13" pos:end="573:14">rn</name> <operator pos:start="573:16" pos:end="573:16">=</operator> <literal type="string" pos:start="573:18" pos:end="573:25">"IntCtl"</literal></expr>;</expr_stmt>

            <break pos:start="575:13" pos:end="575:18">break;</break>

        <case pos:start="577:9" pos:end="577:15">case <expr pos:start="577:14" pos:end="577:14"><literal type="number" pos:start="577:14" pos:end="577:14">2</literal></expr>:</case>

            <expr_stmt pos:start="579:13" pos:end="579:42"><expr pos:start="579:13" pos:end="579:41"><call pos:start="579:13" pos:end="579:41"><name pos:start="579:13" pos:end="579:22">check_insn</name><argument_list pos:start="579:23" pos:end="579:41">(<argument pos:start="579:24" pos:end="579:26"><expr pos:start="579:24" pos:end="579:26"><name pos:start="579:24" pos:end="579:26">ctx</name></expr></argument>, <argument pos:start="579:29" pos:end="579:40"><expr pos:start="579:29" pos:end="579:40"><name pos:start="579:29" pos:end="579:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:69"><expr pos:start="581:13" pos:end="581:68"><call pos:start="581:13" pos:end="581:68"><name pos:start="581:13" pos:end="581:27">gen_mfc0_load32</name><argument_list pos:start="581:28" pos:end="581:68">(<argument pos:start="581:29" pos:end="581:31"><expr pos:start="581:29" pos:end="581:31"><name pos:start="581:29" pos:end="581:31">arg</name></expr></argument>, <argument pos:start="581:34" pos:end="581:67"><expr pos:start="581:34" pos:end="581:67"><call pos:start="581:34" pos:end="581:67"><name pos:start="581:34" pos:end="581:41">offsetof</name><argument_list pos:start="581:42" pos:end="581:67">(<argument pos:start="581:43" pos:end="581:54"><expr pos:start="581:43" pos:end="581:54"><name pos:start="581:43" pos:end="581:54">CPUMIPSState</name></expr></argument>, <argument pos:start="581:57" pos:end="581:66"><expr pos:start="581:57" pos:end="581:66"><name pos:start="581:57" pos:end="581:66">CP0_SRSCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="583:13" pos:end="583:26"><expr pos:start="583:13" pos:end="583:25"><name pos:start="583:13" pos:end="583:14">rn</name> <operator pos:start="583:16" pos:end="583:16">=</operator> <literal type="string" pos:start="583:18" pos:end="583:25">"SRSCtl"</literal></expr>;</expr_stmt>

            <break pos:start="585:13" pos:end="585:18">break;</break>

        <case pos:start="587:9" pos:end="587:15">case <expr pos:start="587:14" pos:end="587:14"><literal type="number" pos:start="587:14" pos:end="587:14">3</literal></expr>:</case>

            <expr_stmt pos:start="589:13" pos:end="589:42"><expr pos:start="589:13" pos:end="589:41"><call pos:start="589:13" pos:end="589:41"><name pos:start="589:13" pos:end="589:22">check_insn</name><argument_list pos:start="589:23" pos:end="589:41">(<argument pos:start="589:24" pos:end="589:26"><expr pos:start="589:24" pos:end="589:26"><name pos:start="589:24" pos:end="589:26">ctx</name></expr></argument>, <argument pos:start="589:29" pos:end="589:40"><expr pos:start="589:29" pos:end="589:40"><name pos:start="589:29" pos:end="589:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:69"><expr pos:start="591:13" pos:end="591:68"><call pos:start="591:13" pos:end="591:68"><name pos:start="591:13" pos:end="591:27">gen_mfc0_load32</name><argument_list pos:start="591:28" pos:end="591:68">(<argument pos:start="591:29" pos:end="591:31"><expr pos:start="591:29" pos:end="591:31"><name pos:start="591:29" pos:end="591:31">arg</name></expr></argument>, <argument pos:start="591:34" pos:end="591:67"><expr pos:start="591:34" pos:end="591:67"><call pos:start="591:34" pos:end="591:67"><name pos:start="591:34" pos:end="591:41">offsetof</name><argument_list pos:start="591:42" pos:end="591:67">(<argument pos:start="591:43" pos:end="591:54"><expr pos:start="591:43" pos:end="591:54"><name pos:start="591:43" pos:end="591:54">CPUMIPSState</name></expr></argument>, <argument pos:start="591:57" pos:end="591:66"><expr pos:start="591:57" pos:end="591:66"><name pos:start="591:57" pos:end="591:66">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:26"><expr pos:start="593:13" pos:end="593:25"><name pos:start="593:13" pos:end="593:14">rn</name> <operator pos:start="593:16" pos:end="593:16">=</operator> <literal type="string" pos:start="593:18" pos:end="593:25">"SRSMap"</literal></expr>;</expr_stmt>

            <break pos:start="595:13" pos:end="595:18">break;</break>

        <default pos:start="597:9" pos:end="597:16">default:</default>

            <goto pos:start="599:13" pos:end="599:35">goto <name pos:start="599:18" pos:end="599:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="603:9" pos:end="603:14">break;</break>

    <case pos:start="605:5" pos:end="605:12">case <expr pos:start="605:10" pos:end="605:11"><literal type="number" pos:start="605:10" pos:end="605:11">13</literal></expr>:</case>

        <switch pos:start="607:9" pos:end="621:9">switch <condition pos:start="607:16" pos:end="607:20">(<expr pos:start="607:17" pos:end="607:19"><name pos:start="607:17" pos:end="607:19">sel</name></expr>)</condition> <block pos:start="607:22" pos:end="621:9">{<block_content pos:start="609:9" pos:end="619:35">

        <case pos:start="609:9" pos:end="609:15">case <expr pos:start="609:14" pos:end="609:14"><literal type="number" pos:start="609:14" pos:end="609:14">0</literal></expr>:</case>

            <expr_stmt pos:start="611:13" pos:end="611:68"><expr pos:start="611:13" pos:end="611:67"><call pos:start="611:13" pos:end="611:67"><name pos:start="611:13" pos:end="611:27">gen_mfc0_load32</name><argument_list pos:start="611:28" pos:end="611:67">(<argument pos:start="611:29" pos:end="611:31"><expr pos:start="611:29" pos:end="611:31"><name pos:start="611:29" pos:end="611:31">arg</name></expr></argument>, <argument pos:start="611:34" pos:end="611:66"><expr pos:start="611:34" pos:end="611:66"><call pos:start="611:34" pos:end="611:66"><name pos:start="611:34" pos:end="611:41">offsetof</name><argument_list pos:start="611:42" pos:end="611:66">(<argument pos:start="611:43" pos:end="611:54"><expr pos:start="611:43" pos:end="611:54"><name pos:start="611:43" pos:end="611:54">CPUMIPSState</name></expr></argument>, <argument pos:start="611:57" pos:end="611:65"><expr pos:start="611:57" pos:end="611:65"><name pos:start="611:57" pos:end="611:65">CP0_Cause</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:25"><expr pos:start="613:13" pos:end="613:24"><name pos:start="613:13" pos:end="613:14">rn</name> <operator pos:start="613:16" pos:end="613:16">=</operator> <literal type="string" pos:start="613:18" pos:end="613:24">"Cause"</literal></expr>;</expr_stmt>

            <break pos:start="615:13" pos:end="615:18">break;</break>

        <default pos:start="617:9" pos:end="617:16">default:</default>

            <goto pos:start="619:13" pos:end="619:35">goto <name pos:start="619:18" pos:end="619:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="623:9" pos:end="623:14">break;</break>

    <case pos:start="625:5" pos:end="625:12">case <expr pos:start="625:10" pos:end="625:11"><literal type="number" pos:start="625:10" pos:end="625:11">14</literal></expr>:</case>

        <switch pos:start="627:9" pos:end="641:9">switch <condition pos:start="627:16" pos:end="627:20">(<expr pos:start="627:17" pos:end="627:19"><name pos:start="627:17" pos:end="627:19">sel</name></expr>)</condition> <block pos:start="627:22" pos:end="641:9">{<block_content pos:start="629:9" pos:end="639:35">

        <case pos:start="629:9" pos:end="629:15">case <expr pos:start="629:14" pos:end="629:14"><literal type="number" pos:start="629:14" pos:end="629:14">0</literal></expr>:</case>

            <expr_stmt pos:start="631:13" pos:end="631:73"><expr pos:start="631:13" pos:end="631:72"><call pos:start="631:13" pos:end="631:72"><name pos:start="631:13" pos:end="631:25">tcg_gen_ld_tl</name><argument_list pos:start="631:26" pos:end="631:72">(<argument pos:start="631:27" pos:end="631:29"><expr pos:start="631:27" pos:end="631:29"><name pos:start="631:27" pos:end="631:29">arg</name></expr></argument>, <argument pos:start="631:32" pos:end="631:38"><expr pos:start="631:32" pos:end="631:38"><name pos:start="631:32" pos:end="631:38">cpu_env</name></expr></argument>, <argument pos:start="631:41" pos:end="631:71"><expr pos:start="631:41" pos:end="631:71"><call pos:start="631:41" pos:end="631:71"><name pos:start="631:41" pos:end="631:48">offsetof</name><argument_list pos:start="631:49" pos:end="631:71">(<argument pos:start="631:50" pos:end="631:61"><expr pos:start="631:50" pos:end="631:61"><name pos:start="631:50" pos:end="631:61">CPUMIPSState</name></expr></argument>, <argument pos:start="631:64" pos:end="631:70"><expr pos:start="631:64" pos:end="631:70"><name pos:start="631:64" pos:end="631:70">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="633:13" pos:end="633:23"><expr pos:start="633:13" pos:end="633:22"><name pos:start="633:13" pos:end="633:14">rn</name> <operator pos:start="633:16" pos:end="633:16">=</operator> <literal type="string" pos:start="633:18" pos:end="633:22">"EPC"</literal></expr>;</expr_stmt>

            <break pos:start="635:13" pos:end="635:18">break;</break>

        <default pos:start="637:9" pos:end="637:16">default:</default>

            <goto pos:start="639:13" pos:end="639:35">goto <name pos:start="639:18" pos:end="639:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="643:9" pos:end="643:14">break;</break>

    <case pos:start="645:5" pos:end="645:12">case <expr pos:start="645:10" pos:end="645:11"><literal type="number" pos:start="645:10" pos:end="645:11">15</literal></expr>:</case>

        <switch pos:start="647:9" pos:end="671:9">switch <condition pos:start="647:16" pos:end="647:20">(<expr pos:start="647:17" pos:end="647:19"><name pos:start="647:17" pos:end="647:19">sel</name></expr>)</condition> <block pos:start="647:22" pos:end="671:9">{<block_content pos:start="649:9" pos:end="669:35">

        <case pos:start="649:9" pos:end="649:15">case <expr pos:start="649:14" pos:end="649:14"><literal type="number" pos:start="649:14" pos:end="649:14">0</literal></expr>:</case>

            <expr_stmt pos:start="651:13" pos:end="651:67"><expr pos:start="651:13" pos:end="651:66"><call pos:start="651:13" pos:end="651:66"><name pos:start="651:13" pos:end="651:27">gen_mfc0_load32</name><argument_list pos:start="651:28" pos:end="651:66">(<argument pos:start="651:29" pos:end="651:31"><expr pos:start="651:29" pos:end="651:31"><name pos:start="651:29" pos:end="651:31">arg</name></expr></argument>, <argument pos:start="651:34" pos:end="651:65"><expr pos:start="651:34" pos:end="651:65"><call pos:start="651:34" pos:end="651:65"><name pos:start="651:34" pos:end="651:41">offsetof</name><argument_list pos:start="651:42" pos:end="651:65">(<argument pos:start="651:43" pos:end="651:54"><expr pos:start="651:43" pos:end="651:54"><name pos:start="651:43" pos:end="651:54">CPUMIPSState</name></expr></argument>, <argument pos:start="651:57" pos:end="651:64"><expr pos:start="651:57" pos:end="651:64"><name pos:start="651:57" pos:end="651:64">CP0_PRid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="653:13" pos:end="653:24"><expr pos:start="653:13" pos:end="653:23"><name pos:start="653:13" pos:end="653:14">rn</name> <operator pos:start="653:16" pos:end="653:16">=</operator> <literal type="string" pos:start="653:18" pos:end="653:23">"PRid"</literal></expr>;</expr_stmt>

            <break pos:start="655:13" pos:end="655:18">break;</break>

        <case pos:start="657:9" pos:end="657:15">case <expr pos:start="657:14" pos:end="657:14"><literal type="number" pos:start="657:14" pos:end="657:14">1</literal></expr>:</case>

            <expr_stmt pos:start="659:13" pos:end="659:42"><expr pos:start="659:13" pos:end="659:41"><call pos:start="659:13" pos:end="659:41"><name pos:start="659:13" pos:end="659:22">check_insn</name><argument_list pos:start="659:23" pos:end="659:41">(<argument pos:start="659:24" pos:end="659:26"><expr pos:start="659:24" pos:end="659:26"><name pos:start="659:24" pos:end="659:26">ctx</name></expr></argument>, <argument pos:start="659:29" pos:end="659:40"><expr pos:start="659:29" pos:end="659:40"><name pos:start="659:29" pos:end="659:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="661:13" pos:end="661:68"><expr pos:start="661:13" pos:end="661:67"><call pos:start="661:13" pos:end="661:67"><name pos:start="661:13" pos:end="661:27">gen_mfc0_load32</name><argument_list pos:start="661:28" pos:end="661:67">(<argument pos:start="661:29" pos:end="661:31"><expr pos:start="661:29" pos:end="661:31"><name pos:start="661:29" pos:end="661:31">arg</name></expr></argument>, <argument pos:start="661:34" pos:end="661:66"><expr pos:start="661:34" pos:end="661:66"><call pos:start="661:34" pos:end="661:66"><name pos:start="661:34" pos:end="661:41">offsetof</name><argument_list pos:start="661:42" pos:end="661:66">(<argument pos:start="661:43" pos:end="661:54"><expr pos:start="661:43" pos:end="661:54"><name pos:start="661:43" pos:end="661:54">CPUMIPSState</name></expr></argument>, <argument pos:start="661:57" pos:end="661:65"><expr pos:start="661:57" pos:end="661:65"><name pos:start="661:57" pos:end="661:65">CP0_EBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="663:13" pos:end="663:25"><expr pos:start="663:13" pos:end="663:24"><name pos:start="663:13" pos:end="663:14">rn</name> <operator pos:start="663:16" pos:end="663:16">=</operator> <literal type="string" pos:start="663:18" pos:end="663:24">"EBase"</literal></expr>;</expr_stmt>

            <break pos:start="665:13" pos:end="665:18">break;</break>

        <default pos:start="667:9" pos:end="667:16">default:</default>

            <goto pos:start="669:13" pos:end="669:35">goto <name pos:start="669:18" pos:end="669:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="673:9" pos:end="673:14">break;</break>

    <case pos:start="675:5" pos:end="675:12">case <expr pos:start="675:10" pos:end="675:11"><literal type="number" pos:start="675:10" pos:end="675:11">16</literal></expr>:</case>

        <switch pos:start="677:9" pos:end="749:9">switch <condition pos:start="677:16" pos:end="677:20">(<expr pos:start="677:17" pos:end="677:19"><name pos:start="677:17" pos:end="677:19">sel</name></expr>)</condition> <block pos:start="677:22" pos:end="749:9">{<block_content pos:start="679:9" pos:end="747:35">

        <case pos:start="679:9" pos:end="679:15">case <expr pos:start="679:14" pos:end="679:14"><literal type="number" pos:start="679:14" pos:end="679:14">0</literal></expr>:</case>

            <expr_stmt pos:start="681:13" pos:end="681:70"><expr pos:start="681:13" pos:end="681:69"><call pos:start="681:13" pos:end="681:69"><name pos:start="681:13" pos:end="681:27">gen_mfc0_load32</name><argument_list pos:start="681:28" pos:end="681:69">(<argument pos:start="681:29" pos:end="681:31"><expr pos:start="681:29" pos:end="681:31"><name pos:start="681:29" pos:end="681:31">arg</name></expr></argument>, <argument pos:start="681:34" pos:end="681:68"><expr pos:start="681:34" pos:end="681:68"><call pos:start="681:34" pos:end="681:68"><name pos:start="681:34" pos:end="681:41">offsetof</name><argument_list pos:start="681:42" pos:end="681:68">(<argument pos:start="681:43" pos:end="681:54"><expr pos:start="681:43" pos:end="681:54"><name pos:start="681:43" pos:end="681:54">CPUMIPSState</name></expr></argument>, <argument pos:start="681:57" pos:end="681:67"><expr pos:start="681:57" pos:end="681:67"><name pos:start="681:57" pos:end="681:67">CP0_Config0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="683:13" pos:end="683:26"><expr pos:start="683:13" pos:end="683:25"><name pos:start="683:13" pos:end="683:14">rn</name> <operator pos:start="683:16" pos:end="683:16">=</operator> <literal type="string" pos:start="683:18" pos:end="683:25">"Config"</literal></expr>;</expr_stmt>

            <break pos:start="685:13" pos:end="685:18">break;</break>

        <case pos:start="687:9" pos:end="687:15">case <expr pos:start="687:14" pos:end="687:14"><literal type="number" pos:start="687:14" pos:end="687:14">1</literal></expr>:</case>

            <expr_stmt pos:start="689:13" pos:end="689:70"><expr pos:start="689:13" pos:end="689:69"><call pos:start="689:13" pos:end="689:69"><name pos:start="689:13" pos:end="689:27">gen_mfc0_load32</name><argument_list pos:start="689:28" pos:end="689:69">(<argument pos:start="689:29" pos:end="689:31"><expr pos:start="689:29" pos:end="689:31"><name pos:start="689:29" pos:end="689:31">arg</name></expr></argument>, <argument pos:start="689:34" pos:end="689:68"><expr pos:start="689:34" pos:end="689:68"><call pos:start="689:34" pos:end="689:68"><name pos:start="689:34" pos:end="689:41">offsetof</name><argument_list pos:start="689:42" pos:end="689:68">(<argument pos:start="689:43" pos:end="689:54"><expr pos:start="689:43" pos:end="689:54"><name pos:start="689:43" pos:end="689:54">CPUMIPSState</name></expr></argument>, <argument pos:start="689:57" pos:end="689:67"><expr pos:start="689:57" pos:end="689:67"><name pos:start="689:57" pos:end="689:67">CP0_Config1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:27"><expr pos:start="691:13" pos:end="691:26"><name pos:start="691:13" pos:end="691:14">rn</name> <operator pos:start="691:16" pos:end="691:16">=</operator> <literal type="string" pos:start="691:18" pos:end="691:26">"Config1"</literal></expr>;</expr_stmt>

            <break pos:start="693:13" pos:end="693:18">break;</break>

        <case pos:start="695:9" pos:end="695:15">case <expr pos:start="695:14" pos:end="695:14"><literal type="number" pos:start="695:14" pos:end="695:14">2</literal></expr>:</case>

            <expr_stmt pos:start="697:13" pos:end="697:70"><expr pos:start="697:13" pos:end="697:69"><call pos:start="697:13" pos:end="697:69"><name pos:start="697:13" pos:end="697:27">gen_mfc0_load32</name><argument_list pos:start="697:28" pos:end="697:69">(<argument pos:start="697:29" pos:end="697:31"><expr pos:start="697:29" pos:end="697:31"><name pos:start="697:29" pos:end="697:31">arg</name></expr></argument>, <argument pos:start="697:34" pos:end="697:68"><expr pos:start="697:34" pos:end="697:68"><call pos:start="697:34" pos:end="697:68"><name pos:start="697:34" pos:end="697:41">offsetof</name><argument_list pos:start="697:42" pos:end="697:68">(<argument pos:start="697:43" pos:end="697:54"><expr pos:start="697:43" pos:end="697:54"><name pos:start="697:43" pos:end="697:54">CPUMIPSState</name></expr></argument>, <argument pos:start="697:57" pos:end="697:67"><expr pos:start="697:57" pos:end="697:67"><name pos:start="697:57" pos:end="697:67">CP0_Config2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:27"><expr pos:start="699:13" pos:end="699:26"><name pos:start="699:13" pos:end="699:14">rn</name> <operator pos:start="699:16" pos:end="699:16">=</operator> <literal type="string" pos:start="699:18" pos:end="699:26">"Config2"</literal></expr>;</expr_stmt>

            <break pos:start="701:13" pos:end="701:18">break;</break>

        <case pos:start="703:9" pos:end="703:15">case <expr pos:start="703:14" pos:end="703:14"><literal type="number" pos:start="703:14" pos:end="703:14">3</literal></expr>:</case>

            <expr_stmt pos:start="705:13" pos:end="705:70"><expr pos:start="705:13" pos:end="705:69"><call pos:start="705:13" pos:end="705:69"><name pos:start="705:13" pos:end="705:27">gen_mfc0_load32</name><argument_list pos:start="705:28" pos:end="705:69">(<argument pos:start="705:29" pos:end="705:31"><expr pos:start="705:29" pos:end="705:31"><name pos:start="705:29" pos:end="705:31">arg</name></expr></argument>, <argument pos:start="705:34" pos:end="705:68"><expr pos:start="705:34" pos:end="705:68"><call pos:start="705:34" pos:end="705:68"><name pos:start="705:34" pos:end="705:41">offsetof</name><argument_list pos:start="705:42" pos:end="705:68">(<argument pos:start="705:43" pos:end="705:54"><expr pos:start="705:43" pos:end="705:54"><name pos:start="705:43" pos:end="705:54">CPUMIPSState</name></expr></argument>, <argument pos:start="705:57" pos:end="705:67"><expr pos:start="705:57" pos:end="705:67"><name pos:start="705:57" pos:end="705:67">CP0_Config3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:27"><expr pos:start="707:13" pos:end="707:26"><name pos:start="707:13" pos:end="707:14">rn</name> <operator pos:start="707:16" pos:end="707:16">=</operator> <literal type="string" pos:start="707:18" pos:end="707:26">"Config3"</literal></expr>;</expr_stmt>

            <break pos:start="709:13" pos:end="709:18">break;</break>

        <case pos:start="711:9" pos:end="711:15">case <expr pos:start="711:14" pos:end="711:14"><literal type="number" pos:start="711:14" pos:end="711:14">4</literal></expr>:</case>

            <expr_stmt pos:start="713:13" pos:end="713:70"><expr pos:start="713:13" pos:end="713:69"><call pos:start="713:13" pos:end="713:69"><name pos:start="713:13" pos:end="713:27">gen_mfc0_load32</name><argument_list pos:start="713:28" pos:end="713:69">(<argument pos:start="713:29" pos:end="713:31"><expr pos:start="713:29" pos:end="713:31"><name pos:start="713:29" pos:end="713:31">arg</name></expr></argument>, <argument pos:start="713:34" pos:end="713:68"><expr pos:start="713:34" pos:end="713:68"><call pos:start="713:34" pos:end="713:68"><name pos:start="713:34" pos:end="713:41">offsetof</name><argument_list pos:start="713:42" pos:end="713:68">(<argument pos:start="713:43" pos:end="713:54"><expr pos:start="713:43" pos:end="713:54"><name pos:start="713:43" pos:end="713:54">CPUMIPSState</name></expr></argument>, <argument pos:start="713:57" pos:end="713:67"><expr pos:start="713:57" pos:end="713:67"><name pos:start="713:57" pos:end="713:67">CP0_Config4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="715:13" pos:end="715:27"><expr pos:start="715:13" pos:end="715:26"><name pos:start="715:13" pos:end="715:14">rn</name> <operator pos:start="715:16" pos:end="715:16">=</operator> <literal type="string" pos:start="715:18" pos:end="715:26">"Config4"</literal></expr>;</expr_stmt>

            <break pos:start="717:13" pos:end="717:18">break;</break>

        <case pos:start="719:9" pos:end="719:15">case <expr pos:start="719:14" pos:end="719:14"><literal type="number" pos:start="719:14" pos:end="719:14">5</literal></expr>:</case>

            <expr_stmt pos:start="721:13" pos:end="721:70"><expr pos:start="721:13" pos:end="721:69"><call pos:start="721:13" pos:end="721:69"><name pos:start="721:13" pos:end="721:27">gen_mfc0_load32</name><argument_list pos:start="721:28" pos:end="721:69">(<argument pos:start="721:29" pos:end="721:31"><expr pos:start="721:29" pos:end="721:31"><name pos:start="721:29" pos:end="721:31">arg</name></expr></argument>, <argument pos:start="721:34" pos:end="721:68"><expr pos:start="721:34" pos:end="721:68"><call pos:start="721:34" pos:end="721:68"><name pos:start="721:34" pos:end="721:41">offsetof</name><argument_list pos:start="721:42" pos:end="721:68">(<argument pos:start="721:43" pos:end="721:54"><expr pos:start="721:43" pos:end="721:54"><name pos:start="721:43" pos:end="721:54">CPUMIPSState</name></expr></argument>, <argument pos:start="721:57" pos:end="721:67"><expr pos:start="721:57" pos:end="721:67"><name pos:start="721:57" pos:end="721:67">CP0_Config5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="723:13" pos:end="723:27"><expr pos:start="723:13" pos:end="723:26"><name pos:start="723:13" pos:end="723:14">rn</name> <operator pos:start="723:16" pos:end="723:16">=</operator> <literal type="string" pos:start="723:18" pos:end="723:26">"Config5"</literal></expr>;</expr_stmt>

            <break pos:start="725:13" pos:end="725:18">break;</break>

       <comment type="block" pos:start="727:8" pos:end="727:45">/* 6,7 are implementation dependent */</comment>

        <case pos:start="729:9" pos:end="729:15">case <expr pos:start="729:14" pos:end="729:14"><literal type="number" pos:start="729:14" pos:end="729:14">6</literal></expr>:</case>

            <expr_stmt pos:start="731:13" pos:end="731:70"><expr pos:start="731:13" pos:end="731:69"><call pos:start="731:13" pos:end="731:69"><name pos:start="731:13" pos:end="731:27">gen_mfc0_load32</name><argument_list pos:start="731:28" pos:end="731:69">(<argument pos:start="731:29" pos:end="731:31"><expr pos:start="731:29" pos:end="731:31"><name pos:start="731:29" pos:end="731:31">arg</name></expr></argument>, <argument pos:start="731:34" pos:end="731:68"><expr pos:start="731:34" pos:end="731:68"><call pos:start="731:34" pos:end="731:68"><name pos:start="731:34" pos:end="731:41">offsetof</name><argument_list pos:start="731:42" pos:end="731:68">(<argument pos:start="731:43" pos:end="731:54"><expr pos:start="731:43" pos:end="731:54"><name pos:start="731:43" pos:end="731:54">CPUMIPSState</name></expr></argument>, <argument pos:start="731:57" pos:end="731:67"><expr pos:start="731:57" pos:end="731:67"><name pos:start="731:57" pos:end="731:67">CP0_Config6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:27"><expr pos:start="733:13" pos:end="733:26"><name pos:start="733:13" pos:end="733:14">rn</name> <operator pos:start="733:16" pos:end="733:16">=</operator> <literal type="string" pos:start="733:18" pos:end="733:26">"Config6"</literal></expr>;</expr_stmt>

            <break pos:start="735:13" pos:end="735:18">break;</break>

        <case pos:start="737:9" pos:end="737:15">case <expr pos:start="737:14" pos:end="737:14"><literal type="number" pos:start="737:14" pos:end="737:14">7</literal></expr>:</case>

            <expr_stmt pos:start="739:13" pos:end="739:70"><expr pos:start="739:13" pos:end="739:69"><call pos:start="739:13" pos:end="739:69"><name pos:start="739:13" pos:end="739:27">gen_mfc0_load32</name><argument_list pos:start="739:28" pos:end="739:69">(<argument pos:start="739:29" pos:end="739:31"><expr pos:start="739:29" pos:end="739:31"><name pos:start="739:29" pos:end="739:31">arg</name></expr></argument>, <argument pos:start="739:34" pos:end="739:68"><expr pos:start="739:34" pos:end="739:68"><call pos:start="739:34" pos:end="739:68"><name pos:start="739:34" pos:end="739:41">offsetof</name><argument_list pos:start="739:42" pos:end="739:68">(<argument pos:start="739:43" pos:end="739:54"><expr pos:start="739:43" pos:end="739:54"><name pos:start="739:43" pos:end="739:54">CPUMIPSState</name></expr></argument>, <argument pos:start="739:57" pos:end="739:67"><expr pos:start="739:57" pos:end="739:67"><name pos:start="739:57" pos:end="739:67">CP0_Config7</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="741:13" pos:end="741:27"><expr pos:start="741:13" pos:end="741:26"><name pos:start="741:13" pos:end="741:14">rn</name> <operator pos:start="741:16" pos:end="741:16">=</operator> <literal type="string" pos:start="741:18" pos:end="741:26">"Config7"</literal></expr>;</expr_stmt>

            <break pos:start="743:13" pos:end="743:18">break;</break>

        <default pos:start="745:9" pos:end="745:16">default:</default>

            <goto pos:start="747:13" pos:end="747:35">goto <name pos:start="747:18" pos:end="747:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="751:9" pos:end="751:14">break;</break>

    <case pos:start="753:5" pos:end="753:12">case <expr pos:start="753:10" pos:end="753:11"><literal type="number" pos:start="753:10" pos:end="753:11">17</literal></expr>:</case>

        <switch pos:start="755:9" pos:end="769:9">switch <condition pos:start="755:16" pos:end="755:20">(<expr pos:start="755:17" pos:end="755:19"><name pos:start="755:17" pos:end="755:19">sel</name></expr>)</condition> <block pos:start="755:22" pos:end="769:9">{<block_content pos:start="757:9" pos:end="767:35">

        <case pos:start="757:9" pos:end="757:15">case <expr pos:start="757:14" pos:end="757:14"><literal type="number" pos:start="757:14" pos:end="757:14">0</literal></expr>:</case>

            <expr_stmt pos:start="759:13" pos:end="759:50"><expr pos:start="759:13" pos:end="759:49"><call pos:start="759:13" pos:end="759:49"><name pos:start="759:13" pos:end="759:35">gen_helper_dmfc0_lladdr</name><argument_list pos:start="759:36" pos:end="759:49">(<argument pos:start="759:37" pos:end="759:39"><expr pos:start="759:37" pos:end="759:39"><name pos:start="759:37" pos:end="759:39">arg</name></expr></argument>, <argument pos:start="759:42" pos:end="759:48"><expr pos:start="759:42" pos:end="759:48"><name pos:start="759:42" pos:end="759:48">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="761:13" pos:end="761:26"><expr pos:start="761:13" pos:end="761:25"><name pos:start="761:13" pos:end="761:14">rn</name> <operator pos:start="761:16" pos:end="761:16">=</operator> <literal type="string" pos:start="761:18" pos:end="761:25">"LLAddr"</literal></expr>;</expr_stmt>

            <break pos:start="763:13" pos:end="763:18">break;</break>

        <default pos:start="765:9" pos:end="765:16">default:</default>

            <goto pos:start="767:13" pos:end="767:35">goto <name pos:start="767:18" pos:end="767:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="771:9" pos:end="771:14">break;</break>

    <case pos:start="773:5" pos:end="773:12">case <expr pos:start="773:10" pos:end="773:11"><literal type="number" pos:start="773:10" pos:end="773:11">18</literal></expr>:</case>

        <switch pos:start="775:9" pos:end="789:9">switch <condition pos:start="775:16" pos:end="775:20">(<expr pos:start="775:17" pos:end="775:19"><name pos:start="775:17" pos:end="775:19">sel</name></expr>)</condition> <block pos:start="775:22" pos:end="789:9">{<block_content pos:start="777:9" pos:end="787:35">

        <case pos:start="777:9" pos:end="777:21">case <expr pos:start="777:14" pos:end="777:20"><literal type="number" pos:start="777:14" pos:end="777:14">0</literal> <operator pos:start="777:16" pos:end="777:18">...</operator> <literal type="number" pos:start="777:20" pos:end="777:20">7</literal></expr>:</case>

            <expr_stmt pos:start="779:13" pos:end="779:53"><expr pos:start="779:13" pos:end="779:52"><call pos:start="779:13" pos:end="779:52"><name pos:start="779:13" pos:end="779:27">gen_helper_1e0i</name><argument_list pos:start="779:28" pos:end="779:52">(<argument pos:start="779:29" pos:end="779:41"><expr pos:start="779:29" pos:end="779:41"><name pos:start="779:29" pos:end="779:41">dmfc0_watchlo</name></expr></argument>, <argument pos:start="779:44" pos:end="779:46"><expr pos:start="779:44" pos:end="779:46"><name pos:start="779:44" pos:end="779:46">arg</name></expr></argument>, <argument pos:start="779:49" pos:end="779:51"><expr pos:start="779:49" pos:end="779:51"><name pos:start="779:49" pos:end="779:51">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="781:13" pos:end="781:27"><expr pos:start="781:13" pos:end="781:26"><name pos:start="781:13" pos:end="781:14">rn</name> <operator pos:start="781:16" pos:end="781:16">=</operator> <literal type="string" pos:start="781:18" pos:end="781:26">"WatchLo"</literal></expr>;</expr_stmt>

            <break pos:start="783:13" pos:end="783:18">break;</break>

        <default pos:start="785:9" pos:end="785:16">default:</default>

            <goto pos:start="787:13" pos:end="787:35">goto <name pos:start="787:18" pos:end="787:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="791:9" pos:end="791:14">break;</break>

    <case pos:start="793:5" pos:end="793:12">case <expr pos:start="793:10" pos:end="793:11"><literal type="number" pos:start="793:10" pos:end="793:11">19</literal></expr>:</case>

        <switch pos:start="795:9" pos:end="809:9">switch <condition pos:start="795:16" pos:end="795:20">(<expr pos:start="795:17" pos:end="795:19"><name pos:start="795:17" pos:end="795:19">sel</name></expr>)</condition> <block pos:start="795:22" pos:end="809:9">{<block_content pos:start="797:9" pos:end="807:35">

        <case pos:start="797:9" pos:end="797:21">case <expr pos:start="797:14" pos:end="797:20"><literal type="number" pos:start="797:14" pos:end="797:14">0</literal> <operator pos:start="797:16" pos:end="797:18">...</operator> <literal type="number" pos:start="797:20" pos:end="797:20">7</literal></expr>:</case>

            <expr_stmt pos:start="799:13" pos:end="799:52"><expr pos:start="799:13" pos:end="799:51"><call pos:start="799:13" pos:end="799:51"><name pos:start="799:13" pos:end="799:27">gen_helper_1e0i</name><argument_list pos:start="799:28" pos:end="799:51">(<argument pos:start="799:29" pos:end="799:40"><expr pos:start="799:29" pos:end="799:40"><name pos:start="799:29" pos:end="799:40">mfc0_watchhi</name></expr></argument>, <argument pos:start="799:43" pos:end="799:45"><expr pos:start="799:43" pos:end="799:45"><name pos:start="799:43" pos:end="799:45">arg</name></expr></argument>, <argument pos:start="799:48" pos:end="799:50"><expr pos:start="799:48" pos:end="799:50"><name pos:start="799:48" pos:end="799:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="801:13" pos:end="801:27"><expr pos:start="801:13" pos:end="801:26"><name pos:start="801:13" pos:end="801:14">rn</name> <operator pos:start="801:16" pos:end="801:16">=</operator> <literal type="string" pos:start="801:18" pos:end="801:26">"WatchHi"</literal></expr>;</expr_stmt>

            <break pos:start="803:13" pos:end="803:18">break;</break>

        <default pos:start="805:9" pos:end="805:16">default:</default>

            <goto pos:start="807:13" pos:end="807:35">goto <name pos:start="807:18" pos:end="807:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="811:9" pos:end="811:14">break;</break>

    <case pos:start="813:5" pos:end="813:12">case <expr pos:start="813:10" pos:end="813:11"><literal type="number" pos:start="813:10" pos:end="813:11">20</literal></expr>:</case>

        <switch pos:start="815:9" pos:end="831:9">switch <condition pos:start="815:16" pos:end="815:20">(<expr pos:start="815:17" pos:end="815:19"><name pos:start="815:17" pos:end="815:19">sel</name></expr>)</condition> <block pos:start="815:22" pos:end="831:9">{<block_content pos:start="817:9" pos:end="829:35">

        <case pos:start="817:9" pos:end="817:15">case <expr pos:start="817:14" pos:end="817:14"><literal type="number" pos:start="817:14" pos:end="817:14">0</literal></expr>:</case>

            <expr_stmt pos:start="819:13" pos:end="819:39"><expr pos:start="819:13" pos:end="819:38"><call pos:start="819:13" pos:end="819:38"><name pos:start="819:13" pos:end="819:22">check_insn</name><argument_list pos:start="819:23" pos:end="819:38">(<argument pos:start="819:24" pos:end="819:26"><expr pos:start="819:24" pos:end="819:26"><name pos:start="819:24" pos:end="819:26">ctx</name></expr></argument>, <argument pos:start="819:29" pos:end="819:37"><expr pos:start="819:29" pos:end="819:37"><name pos:start="819:29" pos:end="819:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="821:13" pos:end="821:78"><expr pos:start="821:13" pos:end="821:77"><call pos:start="821:13" pos:end="821:77"><name pos:start="821:13" pos:end="821:25">tcg_gen_ld_tl</name><argument_list pos:start="821:26" pos:end="821:77">(<argument pos:start="821:27" pos:end="821:29"><expr pos:start="821:27" pos:end="821:29"><name pos:start="821:27" pos:end="821:29">arg</name></expr></argument>, <argument pos:start="821:32" pos:end="821:38"><expr pos:start="821:32" pos:end="821:38"><name pos:start="821:32" pos:end="821:38">cpu_env</name></expr></argument>, <argument pos:start="821:41" pos:end="821:76"><expr pos:start="821:41" pos:end="821:76"><call pos:start="821:41" pos:end="821:76"><name pos:start="821:41" pos:end="821:48">offsetof</name><argument_list pos:start="821:49" pos:end="821:76">(<argument pos:start="821:50" pos:end="821:61"><expr pos:start="821:50" pos:end="821:61"><name pos:start="821:50" pos:end="821:61">CPUMIPSState</name></expr></argument>, <argument pos:start="821:64" pos:end="821:75"><expr pos:start="821:64" pos:end="821:75"><name pos:start="821:64" pos:end="821:75">CP0_XContext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="823:13" pos:end="823:28"><expr pos:start="823:13" pos:end="823:27"><name pos:start="823:13" pos:end="823:14">rn</name> <operator pos:start="823:16" pos:end="823:16">=</operator> <literal type="string" pos:start="823:18" pos:end="823:27">"XContext"</literal></expr>;</expr_stmt>

            <break pos:start="825:13" pos:end="825:18">break;</break>

        <default pos:start="827:9" pos:end="827:16">default:</default>

            <goto pos:start="829:13" pos:end="829:35">goto <name pos:start="829:18" pos:end="829:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="833:9" pos:end="833:14">break;</break>

    <case pos:start="835:5" pos:end="835:12">case <expr pos:start="835:10" pos:end="835:11"><literal type="number" pos:start="835:10" pos:end="835:11">21</literal></expr>:</case>

       <comment type="block" pos:start="837:8" pos:end="837:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <expr_stmt pos:start="839:9" pos:end="839:53"><expr pos:start="839:9" pos:end="839:52"><call pos:start="839:9" pos:end="839:52"><name pos:start="839:9" pos:end="839:17">CP0_CHECK</name><argument_list pos:start="839:18" pos:end="839:52">(<argument pos:start="839:19" pos:end="839:51"><expr pos:start="839:19" pos:end="839:51"><operator pos:start="839:19" pos:end="839:19">!</operator><operator pos:start="839:20" pos:end="839:20">(</operator><name pos:start="839:21" pos:end="839:35"><name pos:start="839:21" pos:end="839:23">ctx</name><operator pos:start="839:24" pos:end="839:25">-&gt;</operator><name pos:start="839:26" pos:end="839:35">insn_flags</name></name> <operator pos:start="839:37" pos:end="839:37">&amp;</operator> <name pos:start="839:39" pos:end="839:50">ISA_MIPS32R6</name><operator pos:start="839:51" pos:end="839:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="841:9" pos:end="855:9">switch <condition pos:start="841:16" pos:end="841:20">(<expr pos:start="841:17" pos:end="841:19"><name pos:start="841:17" pos:end="841:19">sel</name></expr>)</condition> <block pos:start="841:22" pos:end="855:9">{<block_content pos:start="843:9" pos:end="853:35">

        <case pos:start="843:9" pos:end="843:15">case <expr pos:start="843:14" pos:end="843:14"><literal type="number" pos:start="843:14" pos:end="843:14">0</literal></expr>:</case>

            <expr_stmt pos:start="845:13" pos:end="845:72"><expr pos:start="845:13" pos:end="845:71"><call pos:start="845:13" pos:end="845:71"><name pos:start="845:13" pos:end="845:27">gen_mfc0_load32</name><argument_list pos:start="845:28" pos:end="845:71">(<argument pos:start="845:29" pos:end="845:31"><expr pos:start="845:29" pos:end="845:31"><name pos:start="845:29" pos:end="845:31">arg</name></expr></argument>, <argument pos:start="845:34" pos:end="845:70"><expr pos:start="845:34" pos:end="845:70"><call pos:start="845:34" pos:end="845:70"><name pos:start="845:34" pos:end="845:41">offsetof</name><argument_list pos:start="845:42" pos:end="845:70">(<argument pos:start="845:43" pos:end="845:54"><expr pos:start="845:43" pos:end="845:54"><name pos:start="845:43" pos:end="845:54">CPUMIPSState</name></expr></argument>, <argument pos:start="845:57" pos:end="845:69"><expr pos:start="845:57" pos:end="845:69"><name pos:start="845:57" pos:end="845:69">CP0_Framemask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="847:13" pos:end="847:29"><expr pos:start="847:13" pos:end="847:28"><name pos:start="847:13" pos:end="847:14">rn</name> <operator pos:start="847:16" pos:end="847:16">=</operator> <literal type="string" pos:start="847:18" pos:end="847:28">"Framemask"</literal></expr>;</expr_stmt>

            <break pos:start="849:13" pos:end="849:18">break;</break>

        <default pos:start="851:9" pos:end="851:16">default:</default>

            <goto pos:start="853:13" pos:end="853:35">goto <name pos:start="853:18" pos:end="853:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="857:9" pos:end="857:14">break;</break>

    <case pos:start="859:5" pos:end="859:12">case <expr pos:start="859:10" pos:end="859:11"><literal type="number" pos:start="859:10" pos:end="859:11">22</literal></expr>:</case>

        <expr_stmt pos:start="861:9" pos:end="861:32"><expr pos:start="861:9" pos:end="861:31"><call pos:start="861:9" pos:end="861:31"><name pos:start="861:9" pos:end="861:23">tcg_gen_movi_tl</name><argument_list pos:start="861:24" pos:end="861:31">(<argument pos:start="861:25" pos:end="861:27"><expr pos:start="861:25" pos:end="861:27"><name pos:start="861:25" pos:end="861:27">arg</name></expr></argument>, <argument pos:start="861:30" pos:end="861:30"><expr pos:start="861:30" pos:end="861:30"><literal type="number" pos:start="861:30" pos:end="861:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="861:34" pos:end="861:52">/* unimplemented */</comment>

        <expr_stmt pos:start="863:9" pos:end="863:27"><expr pos:start="863:9" pos:end="863:26"><name pos:start="863:9" pos:end="863:10">rn</name> <operator pos:start="863:12" pos:end="863:12">=</operator> <literal type="string" pos:start="863:14" pos:end="863:26">"'Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="863:29" pos:end="863:58">/* implementation dependent */</comment>

        <break pos:start="865:9" pos:end="865:14">break;</break>

    <case pos:start="867:5" pos:end="867:12">case <expr pos:start="867:10" pos:end="867:11"><literal type="number" pos:start="867:10" pos:end="867:11">23</literal></expr>:</case>

        <switch pos:start="869:9" pos:end="915:9">switch <condition pos:start="869:16" pos:end="869:20">(<expr pos:start="869:17" pos:end="869:19"><name pos:start="869:17" pos:end="869:19">sel</name></expr>)</condition> <block pos:start="869:22" pos:end="915:9">{<block_content pos:start="871:9" pos:end="913:35">

        <case pos:start="871:9" pos:end="871:15">case <expr pos:start="871:14" pos:end="871:14"><literal type="number" pos:start="871:14" pos:end="871:14">0</literal></expr>:</case>

            <expr_stmt pos:start="873:13" pos:end="873:48"><expr pos:start="873:13" pos:end="873:47"><call pos:start="873:13" pos:end="873:47"><name pos:start="873:13" pos:end="873:33">gen_helper_mfc0_debug</name><argument_list pos:start="873:34" pos:end="873:47">(<argument pos:start="873:35" pos:end="873:37"><expr pos:start="873:35" pos:end="873:37"><name pos:start="873:35" pos:end="873:37">arg</name></expr></argument>, <argument pos:start="873:40" pos:end="873:46"><expr pos:start="873:40" pos:end="873:46"><name pos:start="873:40" pos:end="873:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="873:50" pos:end="873:68">/* EJTAG support */</comment>

            <expr_stmt pos:start="875:13" pos:end="875:25"><expr pos:start="875:13" pos:end="875:24"><name pos:start="875:13" pos:end="875:14">rn</name> <operator pos:start="875:16" pos:end="875:16">=</operator> <literal type="string" pos:start="875:18" pos:end="875:24">"Debug"</literal></expr>;</expr_stmt>

            <break pos:start="877:13" pos:end="877:18">break;</break>

        <case pos:start="879:9" pos:end="879:15">case <expr pos:start="879:14" pos:end="879:14"><literal type="number" pos:start="879:14" pos:end="879:14">1</literal></expr>:</case>

<comment type="line" pos:start="881:1" pos:end="881:80">//            gen_helper_dmfc0_tracecontrol(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="883:13" pos:end="883:32"><expr pos:start="883:13" pos:end="883:31"><name pos:start="883:13" pos:end="883:14">rn</name> <operator pos:start="883:16" pos:end="883:16">=</operator> <literal type="string" pos:start="883:18" pos:end="883:31">"TraceControl"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="885:1" pos:end="885:20">//            break;</comment>

        <case pos:start="887:9" pos:end="887:15">case <expr pos:start="887:14" pos:end="887:14"><literal type="number" pos:start="887:14" pos:end="887:14">2</literal></expr>:</case>

<comment type="line" pos:start="889:1" pos:end="889:81">//            gen_helper_dmfc0_tracecontrol2(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="891:13" pos:end="891:33"><expr pos:start="891:13" pos:end="891:32"><name pos:start="891:13" pos:end="891:14">rn</name> <operator pos:start="891:16" pos:end="891:16">=</operator> <literal type="string" pos:start="891:18" pos:end="891:32">"TraceControl2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="893:1" pos:end="893:20">//            break;</comment>

        <case pos:start="895:9" pos:end="895:15">case <expr pos:start="895:14" pos:end="895:14"><literal type="number" pos:start="895:14" pos:end="895:14">3</literal></expr>:</case>

<comment type="line" pos:start="897:1" pos:end="897:81">//            gen_helper_dmfc0_usertracedata(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="899:13" pos:end="899:33"><expr pos:start="899:13" pos:end="899:32"><name pos:start="899:13" pos:end="899:14">rn</name> <operator pos:start="899:16" pos:end="899:16">=</operator> <literal type="string" pos:start="899:18" pos:end="899:32">"UserTraceData"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="901:1" pos:end="901:20">//            break;</comment>

        <case pos:start="903:9" pos:end="903:15">case <expr pos:start="903:14" pos:end="903:14"><literal type="number" pos:start="903:14" pos:end="903:14">4</literal></expr>:</case>

<comment type="line" pos:start="905:1" pos:end="905:76">//            gen_helper_dmfc0_tracebpc(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="907:13" pos:end="907:28"><expr pos:start="907:13" pos:end="907:27"><name pos:start="907:13" pos:end="907:14">rn</name> <operator pos:start="907:16" pos:end="907:16">=</operator> <literal type="string" pos:start="907:18" pos:end="907:27">"TraceBPC"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="909:1" pos:end="909:20">//            break;</comment>

        <default pos:start="911:9" pos:end="911:16">default:</default>

            <goto pos:start="913:13" pos:end="913:35">goto <name pos:start="913:18" pos:end="913:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="917:9" pos:end="917:14">break;</break>

    <case pos:start="919:5" pos:end="919:12">case <expr pos:start="919:10" pos:end="919:11"><literal type="number" pos:start="919:10" pos:end="919:11">24</literal></expr>:</case>

        <switch pos:start="921:9" pos:end="937:9">switch <condition pos:start="921:16" pos:end="921:20">(<expr pos:start="921:17" pos:end="921:19"><name pos:start="921:17" pos:end="921:19">sel</name></expr>)</condition> <block pos:start="921:22" pos:end="937:9">{<block_content pos:start="923:9" pos:end="935:35">

        <case pos:start="923:9" pos:end="923:15">case <expr pos:start="923:14" pos:end="923:14"><literal type="number" pos:start="923:14" pos:end="923:14">0</literal></expr>:</case>

            <comment type="block" pos:start="925:13" pos:end="925:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="927:13" pos:end="927:74"><expr pos:start="927:13" pos:end="927:73"><call pos:start="927:13" pos:end="927:73"><name pos:start="927:13" pos:end="927:25">tcg_gen_ld_tl</name><argument_list pos:start="927:26" pos:end="927:73">(<argument pos:start="927:27" pos:end="927:29"><expr pos:start="927:27" pos:end="927:29"><name pos:start="927:27" pos:end="927:29">arg</name></expr></argument>, <argument pos:start="927:32" pos:end="927:38"><expr pos:start="927:32" pos:end="927:38"><name pos:start="927:32" pos:end="927:38">cpu_env</name></expr></argument>, <argument pos:start="927:41" pos:end="927:72"><expr pos:start="927:41" pos:end="927:72"><call pos:start="927:41" pos:end="927:72"><name pos:start="927:41" pos:end="927:48">offsetof</name><argument_list pos:start="927:49" pos:end="927:72">(<argument pos:start="927:50" pos:end="927:61"><expr pos:start="927:50" pos:end="927:61"><name pos:start="927:50" pos:end="927:61">CPUMIPSState</name></expr></argument>, <argument pos:start="927:64" pos:end="927:71"><expr pos:start="927:64" pos:end="927:71"><name pos:start="927:64" pos:end="927:71">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="929:13" pos:end="929:24"><expr pos:start="929:13" pos:end="929:23"><name pos:start="929:13" pos:end="929:14">rn</name> <operator pos:start="929:16" pos:end="929:16">=</operator> <literal type="string" pos:start="929:18" pos:end="929:23">"DEPC"</literal></expr>;</expr_stmt>

            <break pos:start="931:13" pos:end="931:18">break;</break>

        <default pos:start="933:9" pos:end="933:16">default:</default>

            <goto pos:start="935:13" pos:end="935:35">goto <name pos:start="935:18" pos:end="935:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="939:9" pos:end="939:14">break;</break>

    <case pos:start="941:5" pos:end="941:12">case <expr pos:start="941:10" pos:end="941:11"><literal type="number" pos:start="941:10" pos:end="941:11">25</literal></expr>:</case>

        <switch pos:start="943:9" pos:end="1013:9">switch <condition pos:start="943:16" pos:end="943:20">(<expr pos:start="943:17" pos:end="943:19"><name pos:start="943:17" pos:end="943:19">sel</name></expr>)</condition> <block pos:start="943:22" pos:end="1013:9">{<block_content pos:start="945:9" pos:end="1011:35">

        <case pos:start="945:9" pos:end="945:15">case <expr pos:start="945:14" pos:end="945:14"><literal type="number" pos:start="945:14" pos:end="945:14">0</literal></expr>:</case>

            <expr_stmt pos:start="947:13" pos:end="947:75"><expr pos:start="947:13" pos:end="947:74"><call pos:start="947:13" pos:end="947:74"><name pos:start="947:13" pos:end="947:27">gen_mfc0_load32</name><argument_list pos:start="947:28" pos:end="947:74">(<argument pos:start="947:29" pos:end="947:31"><expr pos:start="947:29" pos:end="947:31"><name pos:start="947:29" pos:end="947:31">arg</name></expr></argument>, <argument pos:start="947:34" pos:end="947:73"><expr pos:start="947:34" pos:end="947:73"><call pos:start="947:34" pos:end="947:73"><name pos:start="947:34" pos:end="947:41">offsetof</name><argument_list pos:start="947:42" pos:end="947:73">(<argument pos:start="947:43" pos:end="947:54"><expr pos:start="947:43" pos:end="947:54"><name pos:start="947:43" pos:end="947:54">CPUMIPSState</name></expr></argument>, <argument pos:start="947:57" pos:end="947:72"><expr pos:start="947:57" pos:end="947:72"><name pos:start="947:57" pos:end="947:72">CP0_Performance0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="949:13" pos:end="949:32"><expr pos:start="949:13" pos:end="949:31"><name pos:start="949:13" pos:end="949:14">rn</name> <operator pos:start="949:16" pos:end="949:16">=</operator> <literal type="string" pos:start="949:18" pos:end="949:31">"Performance0"</literal></expr>;</expr_stmt>

            <break pos:start="951:13" pos:end="951:18">break;</break>

        <case pos:start="953:9" pos:end="953:15">case <expr pos:start="953:14" pos:end="953:14"><literal type="number" pos:start="953:14" pos:end="953:14">1</literal></expr>:</case>

<comment type="line" pos:start="955:1" pos:end="955:49">//            gen_helper_dmfc0_performance1(arg);</comment>

            <expr_stmt pos:start="957:13" pos:end="957:32"><expr pos:start="957:13" pos:end="957:31"><name pos:start="957:13" pos:end="957:14">rn</name> <operator pos:start="957:16" pos:end="957:16">=</operator> <literal type="string" pos:start="957:18" pos:end="957:31">"Performance1"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="959:1" pos:end="959:20">//            break;</comment>

        <case pos:start="961:9" pos:end="961:15">case <expr pos:start="961:14" pos:end="961:14"><literal type="number" pos:start="961:14" pos:end="961:14">2</literal></expr>:</case>

<comment type="line" pos:start="963:1" pos:end="963:49">//            gen_helper_dmfc0_performance2(arg);</comment>

            <expr_stmt pos:start="965:13" pos:end="965:32"><expr pos:start="965:13" pos:end="965:31"><name pos:start="965:13" pos:end="965:14">rn</name> <operator pos:start="965:16" pos:end="965:16">=</operator> <literal type="string" pos:start="965:18" pos:end="965:31">"Performance2"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="967:1" pos:end="967:20">//            break;</comment>

        <case pos:start="969:9" pos:end="969:15">case <expr pos:start="969:14" pos:end="969:14"><literal type="number" pos:start="969:14" pos:end="969:14">3</literal></expr>:</case>

<comment type="line" pos:start="971:1" pos:end="971:49">//            gen_helper_dmfc0_performance3(arg);</comment>

            <expr_stmt pos:start="973:13" pos:end="973:32"><expr pos:start="973:13" pos:end="973:31"><name pos:start="973:13" pos:end="973:14">rn</name> <operator pos:start="973:16" pos:end="973:16">=</operator> <literal type="string" pos:start="973:18" pos:end="973:31">"Performance3"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="975:1" pos:end="975:20">//            break;</comment>

        <case pos:start="977:9" pos:end="977:15">case <expr pos:start="977:14" pos:end="977:14"><literal type="number" pos:start="977:14" pos:end="977:14">4</literal></expr>:</case>

<comment type="line" pos:start="979:1" pos:end="979:49">//            gen_helper_dmfc0_performance4(arg);</comment>

            <expr_stmt pos:start="981:13" pos:end="981:32"><expr pos:start="981:13" pos:end="981:31"><name pos:start="981:13" pos:end="981:14">rn</name> <operator pos:start="981:16" pos:end="981:16">=</operator> <literal type="string" pos:start="981:18" pos:end="981:31">"Performance4"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="983:1" pos:end="983:20">//            break;</comment>

        <case pos:start="985:9" pos:end="985:15">case <expr pos:start="985:14" pos:end="985:14"><literal type="number" pos:start="985:14" pos:end="985:14">5</literal></expr>:</case>

<comment type="line" pos:start="987:1" pos:end="987:49">//            gen_helper_dmfc0_performance5(arg);</comment>

            <expr_stmt pos:start="989:13" pos:end="989:32"><expr pos:start="989:13" pos:end="989:31"><name pos:start="989:13" pos:end="989:14">rn</name> <operator pos:start="989:16" pos:end="989:16">=</operator> <literal type="string" pos:start="989:18" pos:end="989:31">"Performance5"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="991:1" pos:end="991:20">//            break;</comment>

        <case pos:start="993:9" pos:end="993:15">case <expr pos:start="993:14" pos:end="993:14"><literal type="number" pos:start="993:14" pos:end="993:14">6</literal></expr>:</case>

<comment type="line" pos:start="995:1" pos:end="995:49">//            gen_helper_dmfc0_performance6(arg);</comment>

            <expr_stmt pos:start="997:13" pos:end="997:32"><expr pos:start="997:13" pos:end="997:31"><name pos:start="997:13" pos:end="997:14">rn</name> <operator pos:start="997:16" pos:end="997:16">=</operator> <literal type="string" pos:start="997:18" pos:end="997:31">"Performance6"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="999:1" pos:end="999:20">//            break;</comment>

        <case pos:start="1001:9" pos:end="1001:15">case <expr pos:start="1001:14" pos:end="1001:14"><literal type="number" pos:start="1001:14" pos:end="1001:14">7</literal></expr>:</case>

<comment type="line" pos:start="1003:1" pos:end="1003:49">//            gen_helper_dmfc0_performance7(arg);</comment>

            <expr_stmt pos:start="1005:13" pos:end="1005:32"><expr pos:start="1005:13" pos:end="1005:31"><name pos:start="1005:13" pos:end="1005:14">rn</name> <operator pos:start="1005:16" pos:end="1005:16">=</operator> <literal type="string" pos:start="1005:18" pos:end="1005:31">"Performance7"</literal></expr>;</expr_stmt>

<comment type="line" pos:start="1007:1" pos:end="1007:20">//            break;</comment>

        <default pos:start="1009:9" pos:end="1009:16">default:</default>

            <goto pos:start="1011:13" pos:end="1011:35">goto <name pos:start="1011:18" pos:end="1011:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1015:9" pos:end="1015:14">break;</break>

    <case pos:start="1017:5" pos:end="1017:12">case <expr pos:start="1017:10" pos:end="1017:11"><literal type="number" pos:start="1017:10" pos:end="1017:11">26</literal></expr>:</case>

        <expr_stmt pos:start="1019:9" pos:end="1019:32"><expr pos:start="1019:9" pos:end="1019:31"><call pos:start="1019:9" pos:end="1019:31"><name pos:start="1019:9" pos:end="1019:23">tcg_gen_movi_tl</name><argument_list pos:start="1019:24" pos:end="1019:31">(<argument pos:start="1019:25" pos:end="1019:27"><expr pos:start="1019:25" pos:end="1019:27"><name pos:start="1019:25" pos:end="1019:27">arg</name></expr></argument>, <argument pos:start="1019:30" pos:end="1019:30"><expr pos:start="1019:30" pos:end="1019:30"><literal type="number" pos:start="1019:30" pos:end="1019:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1019:34" pos:end="1019:52">/* unimplemented */</comment>

        <expr_stmt pos:start="1021:9" pos:end="1021:19"><expr pos:start="1021:9" pos:end="1021:18"><name pos:start="1021:9" pos:end="1021:10">rn</name> <operator pos:start="1021:12" pos:end="1021:12">=</operator> <literal type="string" pos:start="1021:14" pos:end="1021:18">"ECC"</literal></expr>;</expr_stmt>

        <break pos:start="1023:9" pos:end="1023:14">break;</break>

    <case pos:start="1025:5" pos:end="1025:12">case <expr pos:start="1025:10" pos:end="1025:11"><literal type="number" pos:start="1025:10" pos:end="1025:11">27</literal></expr>:</case>

        <switch pos:start="1027:9" pos:end="1043:9">switch <condition pos:start="1027:16" pos:end="1027:20">(<expr pos:start="1027:17" pos:end="1027:19"><name pos:start="1027:17" pos:end="1027:19">sel</name></expr>)</condition> <block pos:start="1027:22" pos:end="1043:9">{<block_content pos:start="1031:9" pos:end="1041:35">

        <comment type="block" pos:start="1029:9" pos:end="1029:21">/* ignored */</comment>

        <case pos:start="1031:9" pos:end="1031:21">case <expr pos:start="1031:14" pos:end="1031:20"><literal type="number" pos:start="1031:14" pos:end="1031:14">0</literal> <operator pos:start="1031:16" pos:end="1031:18">...</operator> <literal type="number" pos:start="1031:20" pos:end="1031:20">3</literal></expr>:</case>

            <expr_stmt pos:start="1033:13" pos:end="1033:36"><expr pos:start="1033:13" pos:end="1033:35"><call pos:start="1033:13" pos:end="1033:35"><name pos:start="1033:13" pos:end="1033:27">tcg_gen_movi_tl</name><argument_list pos:start="1033:28" pos:end="1033:35">(<argument pos:start="1033:29" pos:end="1033:31"><expr pos:start="1033:29" pos:end="1033:31"><name pos:start="1033:29" pos:end="1033:31">arg</name></expr></argument>, <argument pos:start="1033:34" pos:end="1033:34"><expr pos:start="1033:34" pos:end="1033:34"><literal type="number" pos:start="1033:34" pos:end="1033:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="1033:38" pos:end="1033:56">/* unimplemented */</comment>

            <expr_stmt pos:start="1035:13" pos:end="1035:28"><expr pos:start="1035:13" pos:end="1035:27"><name pos:start="1035:13" pos:end="1035:14">rn</name> <operator pos:start="1035:16" pos:end="1035:16">=</operator> <literal type="string" pos:start="1035:18" pos:end="1035:27">"CacheErr"</literal></expr>;</expr_stmt>

            <break pos:start="1037:13" pos:end="1037:18">break;</break>

        <default pos:start="1039:9" pos:end="1039:16">default:</default>

            <goto pos:start="1041:13" pos:end="1041:35">goto <name pos:start="1041:18" pos:end="1041:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1045:9" pos:end="1045:14">break;</break>

    <case pos:start="1047:5" pos:end="1047:12">case <expr pos:start="1047:10" pos:end="1047:11"><literal type="number" pos:start="1047:10" pos:end="1047:11">28</literal></expr>:</case>

        <switch pos:start="1049:9" pos:end="1083:9">switch <condition pos:start="1049:16" pos:end="1049:20">(<expr pos:start="1049:17" pos:end="1049:19"><name pos:start="1049:17" pos:end="1049:19">sel</name></expr>)</condition> <block pos:start="1049:22" pos:end="1083:9">{<block_content pos:start="1051:9" pos:end="1081:35">

        <case pos:start="1051:9" pos:end="1051:15">case <expr pos:start="1051:14" pos:end="1051:14"><literal type="number" pos:start="1051:14" pos:end="1051:14">0</literal></expr>:</case>

        <case pos:start="1053:9" pos:end="1053:15">case <expr pos:start="1053:14" pos:end="1053:14"><literal type="number" pos:start="1053:14" pos:end="1053:14">2</literal></expr>:</case>

        <case pos:start="1055:9" pos:end="1055:15">case <expr pos:start="1055:14" pos:end="1055:14"><literal type="number" pos:start="1055:14" pos:end="1055:14">4</literal></expr>:</case>

        <case pos:start="1057:9" pos:end="1057:15">case <expr pos:start="1057:14" pos:end="1057:14"><literal type="number" pos:start="1057:14" pos:end="1057:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1059:13" pos:end="1059:68"><expr pos:start="1059:13" pos:end="1059:67"><call pos:start="1059:13" pos:end="1059:67"><name pos:start="1059:13" pos:end="1059:27">gen_mfc0_load32</name><argument_list pos:start="1059:28" pos:end="1059:67">(<argument pos:start="1059:29" pos:end="1059:31"><expr pos:start="1059:29" pos:end="1059:31"><name pos:start="1059:29" pos:end="1059:31">arg</name></expr></argument>, <argument pos:start="1059:34" pos:end="1059:66"><expr pos:start="1059:34" pos:end="1059:66"><call pos:start="1059:34" pos:end="1059:66"><name pos:start="1059:34" pos:end="1059:41">offsetof</name><argument_list pos:start="1059:42" pos:end="1059:66">(<argument pos:start="1059:43" pos:end="1059:54"><expr pos:start="1059:43" pos:end="1059:54"><name pos:start="1059:43" pos:end="1059:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1059:57" pos:end="1059:65"><expr pos:start="1059:57" pos:end="1059:65"><name pos:start="1059:57" pos:end="1059:65">CP0_TagLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1061:13" pos:end="1061:25"><expr pos:start="1061:13" pos:end="1061:24"><name pos:start="1061:13" pos:end="1061:14">rn</name> <operator pos:start="1061:16" pos:end="1061:16">=</operator> <literal type="string" pos:start="1061:18" pos:end="1061:24">"TagLo"</literal></expr>;</expr_stmt>

            <break pos:start="1063:13" pos:end="1063:18">break;</break>

        <case pos:start="1065:9" pos:end="1065:15">case <expr pos:start="1065:14" pos:end="1065:14"><literal type="number" pos:start="1065:14" pos:end="1065:14">1</literal></expr>:</case>

        <case pos:start="1067:9" pos:end="1067:15">case <expr pos:start="1067:14" pos:end="1067:14"><literal type="number" pos:start="1067:14" pos:end="1067:14">3</literal></expr>:</case>

        <case pos:start="1069:9" pos:end="1069:15">case <expr pos:start="1069:14" pos:end="1069:14"><literal type="number" pos:start="1069:14" pos:end="1069:14">5</literal></expr>:</case>

        <case pos:start="1071:9" pos:end="1071:15">case <expr pos:start="1071:14" pos:end="1071:14"><literal type="number" pos:start="1071:14" pos:end="1071:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1073:13" pos:end="1073:69"><expr pos:start="1073:13" pos:end="1073:68"><call pos:start="1073:13" pos:end="1073:68"><name pos:start="1073:13" pos:end="1073:27">gen_mfc0_load32</name><argument_list pos:start="1073:28" pos:end="1073:68">(<argument pos:start="1073:29" pos:end="1073:31"><expr pos:start="1073:29" pos:end="1073:31"><name pos:start="1073:29" pos:end="1073:31">arg</name></expr></argument>, <argument pos:start="1073:34" pos:end="1073:67"><expr pos:start="1073:34" pos:end="1073:67"><call pos:start="1073:34" pos:end="1073:67"><name pos:start="1073:34" pos:end="1073:41">offsetof</name><argument_list pos:start="1073:42" pos:end="1073:67">(<argument pos:start="1073:43" pos:end="1073:54"><expr pos:start="1073:43" pos:end="1073:54"><name pos:start="1073:43" pos:end="1073:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1073:57" pos:end="1073:66"><expr pos:start="1073:57" pos:end="1073:66"><name pos:start="1073:57" pos:end="1073:66">CP0_DataLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1075:13" pos:end="1075:26"><expr pos:start="1075:13" pos:end="1075:25"><name pos:start="1075:13" pos:end="1075:14">rn</name> <operator pos:start="1075:16" pos:end="1075:16">=</operator> <literal type="string" pos:start="1075:18" pos:end="1075:25">"DataLo"</literal></expr>;</expr_stmt>

            <break pos:start="1077:13" pos:end="1077:18">break;</break>

        <default pos:start="1079:9" pos:end="1079:16">default:</default>

            <goto pos:start="1081:13" pos:end="1081:35">goto <name pos:start="1081:18" pos:end="1081:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1085:9" pos:end="1085:14">break;</break>

    <case pos:start="1087:5" pos:end="1087:12">case <expr pos:start="1087:10" pos:end="1087:11"><literal type="number" pos:start="1087:10" pos:end="1087:11">29</literal></expr>:</case>

        <switch pos:start="1089:9" pos:end="1123:9">switch <condition pos:start="1089:16" pos:end="1089:20">(<expr pos:start="1089:17" pos:end="1089:19"><name pos:start="1089:17" pos:end="1089:19">sel</name></expr>)</condition> <block pos:start="1089:22" pos:end="1123:9">{<block_content pos:start="1091:9" pos:end="1121:35">

        <case pos:start="1091:9" pos:end="1091:15">case <expr pos:start="1091:14" pos:end="1091:14"><literal type="number" pos:start="1091:14" pos:end="1091:14">0</literal></expr>:</case>

        <case pos:start="1093:9" pos:end="1093:15">case <expr pos:start="1093:14" pos:end="1093:14"><literal type="number" pos:start="1093:14" pos:end="1093:14">2</literal></expr>:</case>

        <case pos:start="1095:9" pos:end="1095:15">case <expr pos:start="1095:14" pos:end="1095:14"><literal type="number" pos:start="1095:14" pos:end="1095:14">4</literal></expr>:</case>

        <case pos:start="1097:9" pos:end="1097:15">case <expr pos:start="1097:14" pos:end="1097:14"><literal type="number" pos:start="1097:14" pos:end="1097:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1099:13" pos:end="1099:68"><expr pos:start="1099:13" pos:end="1099:67"><call pos:start="1099:13" pos:end="1099:67"><name pos:start="1099:13" pos:end="1099:27">gen_mfc0_load32</name><argument_list pos:start="1099:28" pos:end="1099:67">(<argument pos:start="1099:29" pos:end="1099:31"><expr pos:start="1099:29" pos:end="1099:31"><name pos:start="1099:29" pos:end="1099:31">arg</name></expr></argument>, <argument pos:start="1099:34" pos:end="1099:66"><expr pos:start="1099:34" pos:end="1099:66"><call pos:start="1099:34" pos:end="1099:66"><name pos:start="1099:34" pos:end="1099:41">offsetof</name><argument_list pos:start="1099:42" pos:end="1099:66">(<argument pos:start="1099:43" pos:end="1099:54"><expr pos:start="1099:43" pos:end="1099:54"><name pos:start="1099:43" pos:end="1099:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1099:57" pos:end="1099:65"><expr pos:start="1099:57" pos:end="1099:65"><name pos:start="1099:57" pos:end="1099:65">CP0_TagHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1101:13" pos:end="1101:25"><expr pos:start="1101:13" pos:end="1101:24"><name pos:start="1101:13" pos:end="1101:14">rn</name> <operator pos:start="1101:16" pos:end="1101:16">=</operator> <literal type="string" pos:start="1101:18" pos:end="1101:24">"TagHi"</literal></expr>;</expr_stmt>

            <break pos:start="1103:13" pos:end="1103:18">break;</break>

        <case pos:start="1105:9" pos:end="1105:15">case <expr pos:start="1105:14" pos:end="1105:14"><literal type="number" pos:start="1105:14" pos:end="1105:14">1</literal></expr>:</case>

        <case pos:start="1107:9" pos:end="1107:15">case <expr pos:start="1107:14" pos:end="1107:14"><literal type="number" pos:start="1107:14" pos:end="1107:14">3</literal></expr>:</case>

        <case pos:start="1109:9" pos:end="1109:15">case <expr pos:start="1109:14" pos:end="1109:14"><literal type="number" pos:start="1109:14" pos:end="1109:14">5</literal></expr>:</case>

        <case pos:start="1111:9" pos:end="1111:15">case <expr pos:start="1111:14" pos:end="1111:14"><literal type="number" pos:start="1111:14" pos:end="1111:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1113:13" pos:end="1113:69"><expr pos:start="1113:13" pos:end="1113:68"><call pos:start="1113:13" pos:end="1113:68"><name pos:start="1113:13" pos:end="1113:27">gen_mfc0_load32</name><argument_list pos:start="1113:28" pos:end="1113:68">(<argument pos:start="1113:29" pos:end="1113:31"><expr pos:start="1113:29" pos:end="1113:31"><name pos:start="1113:29" pos:end="1113:31">arg</name></expr></argument>, <argument pos:start="1113:34" pos:end="1113:67"><expr pos:start="1113:34" pos:end="1113:67"><call pos:start="1113:34" pos:end="1113:67"><name pos:start="1113:34" pos:end="1113:41">offsetof</name><argument_list pos:start="1113:42" pos:end="1113:67">(<argument pos:start="1113:43" pos:end="1113:54"><expr pos:start="1113:43" pos:end="1113:54"><name pos:start="1113:43" pos:end="1113:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1113:57" pos:end="1113:66"><expr pos:start="1113:57" pos:end="1113:66"><name pos:start="1113:57" pos:end="1113:66">CP0_DataHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1115:13" pos:end="1115:26"><expr pos:start="1115:13" pos:end="1115:25"><name pos:start="1115:13" pos:end="1115:14">rn</name> <operator pos:start="1115:16" pos:end="1115:16">=</operator> <literal type="string" pos:start="1115:18" pos:end="1115:25">"DataHi"</literal></expr>;</expr_stmt>

            <break pos:start="1117:13" pos:end="1117:18">break;</break>

        <default pos:start="1119:9" pos:end="1119:16">default:</default>

            <goto pos:start="1121:13" pos:end="1121:35">goto <name pos:start="1121:18" pos:end="1121:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1125:9" pos:end="1125:14">break;</break>

    <case pos:start="1127:5" pos:end="1127:12">case <expr pos:start="1127:10" pos:end="1127:11"><literal type="number" pos:start="1127:10" pos:end="1127:11">30</literal></expr>:</case>

        <switch pos:start="1129:9" pos:end="1143:9">switch <condition pos:start="1129:16" pos:end="1129:20">(<expr pos:start="1129:17" pos:end="1129:19"><name pos:start="1129:17" pos:end="1129:19">sel</name></expr>)</condition> <block pos:start="1129:22" pos:end="1143:9">{<block_content pos:start="1131:9" pos:end="1141:35">

        <case pos:start="1131:9" pos:end="1131:15">case <expr pos:start="1131:14" pos:end="1131:14"><literal type="number" pos:start="1131:14" pos:end="1131:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1133:13" pos:end="1133:78"><expr pos:start="1133:13" pos:end="1133:77"><call pos:start="1133:13" pos:end="1133:77"><name pos:start="1133:13" pos:end="1133:25">tcg_gen_ld_tl</name><argument_list pos:start="1133:26" pos:end="1133:77">(<argument pos:start="1133:27" pos:end="1133:29"><expr pos:start="1133:27" pos:end="1133:29"><name pos:start="1133:27" pos:end="1133:29">arg</name></expr></argument>, <argument pos:start="1133:32" pos:end="1133:38"><expr pos:start="1133:32" pos:end="1133:38"><name pos:start="1133:32" pos:end="1133:38">cpu_env</name></expr></argument>, <argument pos:start="1133:41" pos:end="1133:76"><expr pos:start="1133:41" pos:end="1133:76"><call pos:start="1133:41" pos:end="1133:76"><name pos:start="1133:41" pos:end="1133:48">offsetof</name><argument_list pos:start="1133:49" pos:end="1133:76">(<argument pos:start="1133:50" pos:end="1133:61"><expr pos:start="1133:50" pos:end="1133:61"><name pos:start="1133:50" pos:end="1133:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1133:64" pos:end="1133:75"><expr pos:start="1133:64" pos:end="1133:75"><name pos:start="1133:64" pos:end="1133:75">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1135:13" pos:end="1135:28"><expr pos:start="1135:13" pos:end="1135:27"><name pos:start="1135:13" pos:end="1135:14">rn</name> <operator pos:start="1135:16" pos:end="1135:16">=</operator> <literal type="string" pos:start="1135:18" pos:end="1135:27">"ErrorEPC"</literal></expr>;</expr_stmt>

            <break pos:start="1137:13" pos:end="1137:18">break;</break>

        <default pos:start="1139:9" pos:end="1139:16">default:</default>

            <goto pos:start="1141:13" pos:end="1141:35">goto <name pos:start="1141:18" pos:end="1141:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1145:9" pos:end="1145:14">break;</break>

    <case pos:start="1147:5" pos:end="1147:12">case <expr pos:start="1147:10" pos:end="1147:11"><literal type="number" pos:start="1147:10" pos:end="1147:11">31</literal></expr>:</case>

        <switch pos:start="1149:9" pos:end="1177:9">switch <condition pos:start="1149:16" pos:end="1149:20">(<expr pos:start="1149:17" pos:end="1149:19"><name pos:start="1149:17" pos:end="1149:19">sel</name></expr>)</condition> <block pos:start="1149:22" pos:end="1177:9">{<block_content pos:start="1151:9" pos:end="1175:35">

        <case pos:start="1151:9" pos:end="1151:15">case <expr pos:start="1151:14" pos:end="1151:14"><literal type="number" pos:start="1151:14" pos:end="1151:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1153:13" pos:end="1153:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1155:13" pos:end="1155:69"><expr pos:start="1155:13" pos:end="1155:68"><call pos:start="1155:13" pos:end="1155:68"><name pos:start="1155:13" pos:end="1155:27">gen_mfc0_load32</name><argument_list pos:start="1155:28" pos:end="1155:68">(<argument pos:start="1155:29" pos:end="1155:31"><expr pos:start="1155:29" pos:end="1155:31"><name pos:start="1155:29" pos:end="1155:31">arg</name></expr></argument>, <argument pos:start="1155:34" pos:end="1155:67"><expr pos:start="1155:34" pos:end="1155:67"><call pos:start="1155:34" pos:end="1155:67"><name pos:start="1155:34" pos:end="1155:41">offsetof</name><argument_list pos:start="1155:42" pos:end="1155:67">(<argument pos:start="1155:43" pos:end="1155:54"><expr pos:start="1155:43" pos:end="1155:54"><name pos:start="1155:43" pos:end="1155:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1155:57" pos:end="1155:66"><expr pos:start="1155:57" pos:end="1155:66"><name pos:start="1155:57" pos:end="1155:66">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1157:13" pos:end="1157:26"><expr pos:start="1157:13" pos:end="1157:25"><name pos:start="1157:13" pos:end="1157:14">rn</name> <operator pos:start="1157:16" pos:end="1157:16">=</operator> <literal type="string" pos:start="1157:18" pos:end="1157:25">"DESAVE"</literal></expr>;</expr_stmt>

            <break pos:start="1159:13" pos:end="1159:18">break;</break>

        <case pos:start="1161:9" pos:end="1161:21">case <expr pos:start="1161:14" pos:end="1161:20"><literal type="number" pos:start="1161:14" pos:end="1161:14">2</literal> <operator pos:start="1161:16" pos:end="1161:18">...</operator> <literal type="number" pos:start="1161:20" pos:end="1161:20">7</literal></expr>:</case>

            <expr_stmt pos:start="1163:13" pos:end="1163:51"><expr pos:start="1163:13" pos:end="1163:50"><call pos:start="1163:13" pos:end="1163:50"><name pos:start="1163:13" pos:end="1163:21">CP0_CHECK</name><argument_list pos:start="1163:22" pos:end="1163:50">(<argument pos:start="1163:23" pos:end="1163:49"><expr pos:start="1163:23" pos:end="1163:49"><name pos:start="1163:23" pos:end="1163:36"><name pos:start="1163:23" pos:end="1163:25">ctx</name><operator pos:start="1163:26" pos:end="1163:27">-&gt;</operator><name pos:start="1163:28" pos:end="1163:36">kscrexist</name></name> <operator pos:start="1163:38" pos:end="1163:38">&amp;</operator> <operator pos:start="1163:40" pos:end="1163:40">(</operator><literal type="number" pos:start="1163:41" pos:end="1163:41">1</literal> <operator pos:start="1163:43" pos:end="1163:44">&lt;&lt;</operator> <name pos:start="1163:46" pos:end="1163:48">sel</name><operator pos:start="1163:49" pos:end="1163:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1165:13" pos:end="1167:71"><expr pos:start="1165:13" pos:end="1167:70"><call pos:start="1165:13" pos:end="1167:70"><name pos:start="1165:13" pos:end="1165:25">tcg_gen_ld_tl</name><argument_list pos:start="1165:26" pos:end="1167:70">(<argument pos:start="1165:27" pos:end="1165:29"><expr pos:start="1165:27" pos:end="1165:29"><name pos:start="1165:27" pos:end="1165:29">arg</name></expr></argument>, <argument pos:start="1165:32" pos:end="1165:38"><expr pos:start="1165:32" pos:end="1165:38"><name pos:start="1165:32" pos:end="1165:38">cpu_env</name></expr></argument>,

                          <argument pos:start="1167:27" pos:end="1167:69"><expr pos:start="1167:27" pos:end="1167:69"><call pos:start="1167:27" pos:end="1167:69"><name pos:start="1167:27" pos:end="1167:34">offsetof</name><argument_list pos:start="1167:35" pos:end="1167:69">(<argument pos:start="1167:36" pos:end="1167:47"><expr pos:start="1167:36" pos:end="1167:47"><name pos:start="1167:36" pos:end="1167:47">CPUMIPSState</name></expr></argument>, <argument pos:start="1167:50" pos:end="1167:68"><expr pos:start="1167:50" pos:end="1167:68"><name pos:start="1167:50" pos:end="1167:68"><name pos:start="1167:50" pos:end="1167:61">CP0_KScratch</name><index pos:start="1167:62" pos:end="1167:68">[<expr pos:start="1167:63" pos:end="1167:67"><name pos:start="1167:63" pos:end="1167:65">sel</name><operator pos:start="1167:66" pos:end="1167:66">-</operator><literal type="number" pos:start="1167:67" pos:end="1167:67">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1169:13" pos:end="1169:28"><expr pos:start="1169:13" pos:end="1169:27"><name pos:start="1169:13" pos:end="1169:14">rn</name> <operator pos:start="1169:16" pos:end="1169:16">=</operator> <literal type="string" pos:start="1169:18" pos:end="1169:27">"KScratch"</literal></expr>;</expr_stmt>

            <break pos:start="1171:13" pos:end="1171:18">break;</break>

        <default pos:start="1173:9" pos:end="1173:16">default:</default>

            <goto pos:start="1175:13" pos:end="1175:35">goto <name pos:start="1175:18" pos:end="1175:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1179:9" pos:end="1179:14">break;</break>

    <default pos:start="1181:5" pos:end="1181:12">default:</default>

        <goto pos:start="1183:9" pos:end="1183:31">goto <name pos:start="1183:14" pos:end="1183:30">cp0_unimplemented</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1187:5" pos:end="1187:13"><expr pos:start="1187:5" pos:end="1187:12"><operator pos:start="1187:5" pos:end="1187:5">(</operator><name pos:start="1187:6" pos:end="1187:9">void</name><operator pos:start="1187:10" pos:end="1187:10">)</operator><name pos:start="1187:11" pos:end="1187:12">rn</name></expr>;</expr_stmt> <comment type="block" pos:start="1187:15" pos:end="1187:44">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="1189:5" pos:end="1189:58"><expr pos:start="1189:5" pos:end="1189:57"><call pos:start="1189:5" pos:end="1189:57"><name pos:start="1189:5" pos:end="1189:13">LOG_DISAS</name><argument_list pos:start="1189:14" pos:end="1189:57">(<argument pos:start="1189:15" pos:end="1189:42"><expr pos:start="1189:15" pos:end="1189:42"><literal type="string" pos:start="1189:15" pos:end="1189:42">"dmfc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1189:45" pos:end="1189:46"><expr pos:start="1189:45" pos:end="1189:46"><name pos:start="1189:45" pos:end="1189:46">rn</name></expr></argument>, <argument pos:start="1189:49" pos:end="1189:51"><expr pos:start="1189:49" pos:end="1189:51"><name pos:start="1189:49" pos:end="1189:51">reg</name></expr></argument>, <argument pos:start="1189:54" pos:end="1189:56"><expr pos:start="1189:54" pos:end="1189:56"><name pos:start="1189:54" pos:end="1189:56">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1191:5" pos:end="1191:11">return;</return>



<label pos:start="1195:1" pos:end="1195:18"><name pos:start="1195:1" pos:end="1195:17">cp0_unimplemented</name>:</label>

    <expr_stmt pos:start="1197:5" pos:end="1197:58"><expr pos:start="1197:5" pos:end="1197:57"><call pos:start="1197:5" pos:end="1197:57"><name pos:start="1197:5" pos:end="1197:13">LOG_DISAS</name><argument_list pos:start="1197:14" pos:end="1197:57">(<argument pos:start="1197:15" pos:end="1197:42"><expr pos:start="1197:15" pos:end="1197:42"><literal type="string" pos:start="1197:15" pos:end="1197:42">"dmfc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1197:45" pos:end="1197:46"><expr pos:start="1197:45" pos:end="1197:46"><name pos:start="1197:45" pos:end="1197:46">rn</name></expr></argument>, <argument pos:start="1197:49" pos:end="1197:51"><expr pos:start="1197:49" pos:end="1197:51"><name pos:start="1197:49" pos:end="1197:51">reg</name></expr></argument>, <argument pos:start="1197:54" pos:end="1197:56"><expr pos:start="1197:54" pos:end="1197:56"><name pos:start="1197:54" pos:end="1197:56">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1199:5" pos:end="1199:37"><expr pos:start="1199:5" pos:end="1199:36"><call pos:start="1199:5" pos:end="1199:36"><name pos:start="1199:5" pos:end="1199:26">gen_mfc0_unimplemented</name><argument_list pos:start="1199:27" pos:end="1199:36">(<argument pos:start="1199:28" pos:end="1199:30"><expr pos:start="1199:28" pos:end="1199:30"><name pos:start="1199:28" pos:end="1199:30">ctx</name></expr></argument>, <argument pos:start="1199:33" pos:end="1199:35"><expr pos:start="1199:33" pos:end="1199:35"><name pos:start="1199:33" pos:end="1199:35">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
