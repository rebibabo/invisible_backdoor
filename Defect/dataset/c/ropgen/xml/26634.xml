<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26634.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">bmds_set_aio_inflight</name><parameter_list pos:start="1:34" pos:end="3:53">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:48">BlkMigDevState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">bmds</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><name pos:start="1:57" pos:end="1:63">int64_t</name></type> <name pos:start="1:65" pos:end="1:74">sector_num</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:43">nb_sectors</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:52"><decl pos:start="3:46" pos:end="3:52"><type pos:start="3:46" pos:end="3:52"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:52">set</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="41:1">{<block_content pos:start="7:5" pos:end="39:5">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:17">start</name></decl>, <decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:20" pos:end="7:22">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:21">val</name></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:24" pos:end="9:26">idx</name></decl>, <decl pos:start="9:29" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:17"/><name pos:start="9:29" pos:end="9:31">bit</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:9">start</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:22">sector_num</name> <operator pos:start="13:24" pos:end="13:24">/</operator> <name pos:start="13:26" pos:end="13:53">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:71"><expr pos:start="15:5" pos:end="15:70"><name pos:start="15:5" pos:end="15:7">end</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:21">sector_num</name> <operator pos:start="15:23" pos:end="15:23">+</operator> <name pos:start="15:25" pos:end="15:34">nb_sectors</name> <operator pos:start="15:36" pos:end="15:36">-</operator> <literal type="number" pos:start="15:38" pos:end="15:38">1</literal><operator pos:start="15:39" pos:end="15:39">)</operator> <operator pos:start="15:41" pos:end="15:41">/</operator> <name pos:start="15:43" pos:end="15:70">BDRV_SECTORS_PER_DIRTY_CHUNK</name></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="39:5">for <control pos:start="19:9" pos:end="19:33">(<init pos:start="19:10" pos:end="19:10">;</init> <condition pos:start="19:12" pos:end="19:24"><expr pos:start="19:12" pos:end="19:23"><name pos:start="19:12" pos:end="19:16">start</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <name pos:start="19:21" pos:end="19:23">end</name></expr>;</condition> <incr pos:start="19:26" pos:end="19:32"><expr pos:start="19:26" pos:end="19:32"><name pos:start="19:26" pos:end="19:30">start</name><operator pos:start="19:31" pos:end="19:32">++</operator></expr></incr>)</control> <block pos:start="19:35" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:36">

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:11">idx</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:19">start</name> <operator pos:start="21:21" pos:end="21:21">/</operator> <operator pos:start="21:23" pos:end="21:23">(</operator>sizeof<operator pos:start="21:30" pos:end="21:30">(</operator><name pos:start="21:31" pos:end="21:38">unsigned</name> <name pos:start="21:40" pos:end="21:43">long</name><operator pos:start="21:44" pos:end="21:44">)</operator> <operator pos:start="21:46" pos:end="21:46">*</operator> <literal type="number" pos:start="21:48" pos:end="21:48">8</literal><operator pos:start="21:49" pos:end="21:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:50"><expr pos:start="23:9" pos:end="23:49"><name pos:start="23:9" pos:end="23:11">bit</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:19">start</name> <operator pos:start="23:21" pos:end="23:21">%</operator> <operator pos:start="23:23" pos:end="23:23">(</operator>sizeof<operator pos:start="23:30" pos:end="23:30">(</operator><name pos:start="23:31" pos:end="23:38">unsigned</name> <name pos:start="23:40" pos:end="23:43">long</name><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:46">*</operator> <literal type="number" pos:start="23:48" pos:end="23:48">8</literal><operator pos:start="23:49" pos:end="23:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:11">val</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:35"><name pos:start="25:15" pos:end="25:18">bmds</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:30">aio_bitmap</name><index pos:start="25:31" pos:end="25:35">[<expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:34">idx</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:16">(<expr pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">set</name></expr>)</condition> <block pos:start="27:18" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:30">

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:15">val</name> <operator pos:start="29:17" pos:end="29:18">|=</operator> <literal type="number" pos:start="29:20" pos:end="29:22">1UL</literal> <operator pos:start="29:24" pos:end="29:25">&lt;&lt;</operator> <name pos:start="29:27" pos:end="29:29">bit</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:33">

            <expr_stmt pos:start="33:13" pos:end="33:33"><expr pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:15">val</name> <operator pos:start="33:17" pos:end="33:18">&amp;=</operator> <operator pos:start="33:20" pos:end="33:20">~</operator><operator pos:start="33:21" pos:end="33:21">(</operator><literal type="number" pos:start="33:22" pos:end="33:24">1UL</literal> <operator pos:start="33:26" pos:end="33:27">&lt;&lt;</operator> <name pos:start="33:29" pos:end="33:31">bit</name><operator pos:start="33:32" pos:end="33:32">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:12">bmds</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:24">aio_bitmap</name><index pos:start="37:25" pos:end="37:29">[<expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">idx</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">=</operator> <name pos:start="37:33" pos:end="37:35">val</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
