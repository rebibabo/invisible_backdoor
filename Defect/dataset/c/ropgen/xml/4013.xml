<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4013.c" pos:tabs="8"><function pos:start="1:1" pos:end="187:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">build_table</name><parameter_list pos:start="1:23" pos:end="9:58">(<parameter pos:start="1:24" pos:end="1:31"><decl pos:start="1:24" pos:end="1:31"><type pos:start="1:24" pos:end="1:31"><name pos:start="1:24" pos:end="1:26">VLC</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">vlc</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:50">table_nb_bits</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:35">nb_codes</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:39"><decl pos:start="5:24" pos:end="5:39"><type pos:start="5:24" pos:end="5:39"><specifier pos:start="5:24" pos:end="5:28">const</specifier> <name pos:start="5:30" pos:end="5:33">void</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:39">bits</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:54"><decl pos:start="5:42" pos:end="5:54"><type pos:start="5:42" pos:end="5:54"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:54">bits_wrap</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:69"><decl pos:start="5:57" pos:end="5:69"><type pos:start="5:57" pos:end="5:69"><name pos:start="5:57" pos:end="5:59">int</name></type> <name pos:start="5:61" pos:end="5:69">bits_size</name></decl></parameter>,

                       <parameter pos:start="7:24" pos:end="7:40"><decl pos:start="7:24" pos:end="7:40"><type pos:start="7:24" pos:end="7:40"><specifier pos:start="7:24" pos:end="7:28">const</specifier> <name pos:start="7:30" pos:end="7:33">void</name> <modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:40">codes</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:56"><decl pos:start="7:43" pos:end="7:56"><type pos:start="7:43" pos:end="7:56"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:56">codes_wrap</name></decl></parameter>, <parameter pos:start="7:59" pos:end="7:72"><decl pos:start="7:59" pos:end="7:72"><type pos:start="7:59" pos:end="7:72"><name pos:start="7:59" pos:end="7:61">int</name></type> <name pos:start="7:63" pos:end="7:72">codes_size</name></decl></parameter>,

                       <parameter pos:start="9:24" pos:end="9:43"><decl pos:start="9:24" pos:end="9:43"><type pos:start="9:24" pos:end="9:43"><name pos:start="9:24" pos:end="9:31">uint32_t</name></type> <name pos:start="9:33" pos:end="9:43">code_prefix</name></decl></parameter>, <parameter pos:start="9:46" pos:end="9:57"><decl pos:start="9:46" pos:end="9:57"><type pos:start="9:46" pos:end="9:57"><name pos:start="9:46" pos:end="9:48">int</name></type> <name pos:start="9:50" pos:end="9:57">n_prefix</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="187:1">{<block_content pos:start="13:5" pos:end="185:23">

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>, <decl pos:start="13:15" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:15">k</name></decl>, <decl pos:start="13:18" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:18">n</name></decl>, <decl pos:start="13:21" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:30">table_size</name></decl>, <decl pos:start="13:33" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:33" pos:end="13:43">table_index</name></decl>, <decl pos:start="13:46" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:46" pos:end="13:47">nb</name></decl>, <decl pos:start="13:50" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:50" pos:end="13:51">n1</name></decl>, <decl pos:start="13:54" pos:end="13:58"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:54" pos:end="13:58">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:17">code</name></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:12">VLC_TYPE</name> <argument_list pos:start="17:14" pos:end="17:21">(<argument pos:start="17:15" pos:end="17:20"><expr pos:start="17:15" pos:end="17:20"><operator pos:start="17:15" pos:end="17:15">*</operator><name pos:start="17:16" pos:end="17:20">table</name></expr></argument>)</argument_list></call><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">2</literal></expr>]</index></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:14">table_size</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">1</literal> <operator pos:start="21:20" pos:end="21:21">&lt;&lt;</operator> <name pos:start="21:23" pos:end="21:35">table_nb_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:46"><name pos:start="23:5" pos:end="23:15">table_index</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:46"><name pos:start="23:19" pos:end="23:29">alloc_table</name><argument_list pos:start="23:30" pos:end="23:46">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">vlc</name></expr></argument>, <argument pos:start="23:36" pos:end="23:45"><expr pos:start="23:36" pos:end="23:45"><name pos:start="23:36" pos:end="23:45">table_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="25:1" pos:end="25:16">#<cpp:directive pos:start="25:2" pos:end="25:6">ifdef</cpp:directive> <name pos:start="25:8" pos:end="25:16">DEBUG_VLC</name></cpp:ifdef>

    <expr_stmt pos:start="27:5" pos:end="32:0"><expr pos:start="27:5" pos:end="29:58"><call pos:start="27:5" pos:end="29:58"><name pos:start="27:5" pos:end="27:10">printf</name><argument_list pos:start="27:11" pos:end="29:58">(<argument pos:start="27:12" pos:end="27:61"><expr pos:start="27:12" pos:end="27:61"><literal type="string" pos:start="27:12" pos:end="27:61">"new table index=%d size=%d code_prefix=%x n=%d\n"</literal></expr></argument>,

           <argument pos:start="29:12" pos:end="29:22"><expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:22">table_index</name></expr></argument>, <argument pos:start="29:25" pos:end="29:34"><expr pos:start="29:25" pos:end="29:34"><name pos:start="29:25" pos:end="29:34">table_size</name></expr></argument>, <argument pos:start="29:37" pos:end="29:47"><expr pos:start="29:37" pos:end="29:47"><name pos:start="29:37" pos:end="29:47">code_prefix</name></expr></argument>, <argument pos:start="29:50" pos:end="29:57"><expr pos:start="29:50" pos:end="29:57"><name pos:start="29:50" pos:end="29:57">n_prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:24">(<expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">table_index</name> <operator pos:start="33:21" pos:end="33:21">&lt;</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:9">table</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <operator pos:start="37:13" pos:end="37:13">&amp;</operator><name pos:start="37:14" pos:end="37:36"><name pos:start="37:14" pos:end="37:16">vlc</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:23">table</name><index pos:start="37:24" pos:end="37:36">[<expr pos:start="37:25" pos:end="37:35"><name pos:start="37:25" pos:end="37:35">table_index</name></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="41:5" pos:end="47:5">for<control pos:start="41:8" pos:end="41:29">(<init pos:start="41:9" pos:end="41:12"><expr pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:9">i</name><operator pos:start="41:10" pos:end="41:10">=</operator><literal type="number" pos:start="41:11" pos:end="41:11">0</literal></expr>;</init><condition pos:start="41:13" pos:end="41:25"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">&lt;</operator><name pos:start="41:15" pos:end="41:24">table_size</name></expr>;</condition><incr pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:26">i</name><operator pos:start="41:27" pos:end="41:28">++</operator></expr></incr>)</control> <block pos:start="41:31" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:25">

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:13">table</name><index pos:start="43:14" pos:end="43:16">[<expr pos:start="43:15" pos:end="43:15"><name pos:start="43:15" pos:end="43:15">i</name></expr>]</index><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="43:26" pos:end="43:31">//bits</comment>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:13">table</name><index pos:start="45:14" pos:end="45:16">[<expr pos:start="45:15" pos:end="45:15"><name pos:start="45:15" pos:end="45:15">i</name></expr>]</index><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>]</index></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <operator pos:start="45:23" pos:end="45:23">-</operator><literal type="number" pos:start="45:24" pos:end="45:24">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="45:27" pos:end="45:33">//codes</comment>

    </block_content>}</block></for>



    <comment type="block" pos:start="51:5" pos:end="51:65">/* first pass: map codes and compute auxillary table sizes */</comment>

    <for pos:start="53:5" pos:end="139:5">for<control pos:start="53:8" pos:end="53:27">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init><condition pos:start="53:13" pos:end="53:23"><expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">&lt;</operator><name pos:start="53:15" pos:end="53:22">nb_codes</name></expr>;</condition><incr pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:24">i</name><operator pos:start="53:25" pos:end="53:26">++</operator></expr></incr>)</control> <block pos:start="53:29" pos:end="139:5">{<block_content pos:start="55:9" pos:end="137:9">

        <expr_stmt pos:start="55:9" pos:end="55:51"><expr pos:start="55:9" pos:end="55:50"><call pos:start="55:9" pos:end="55:50"><name pos:start="55:9" pos:end="55:16">GET_DATA</name><argument_list pos:start="55:17" pos:end="55:50">(<argument pos:start="55:18" pos:end="55:18"><expr pos:start="55:18" pos:end="55:18"><name pos:start="55:18" pos:end="55:18">n</name></expr></argument>, <argument pos:start="55:21" pos:end="55:24"><expr pos:start="55:21" pos:end="55:24"><name pos:start="55:21" pos:end="55:24">bits</name></expr></argument>, <argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">i</name></expr></argument>, <argument pos:start="55:30" pos:end="55:38"><expr pos:start="55:30" pos:end="55:38"><name pos:start="55:30" pos:end="55:38">bits_wrap</name></expr></argument>, <argument pos:start="55:41" pos:end="55:49"><expr pos:start="55:41" pos:end="55:49"><name pos:start="55:41" pos:end="55:49">bits_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:57"><expr pos:start="57:9" pos:end="57:56"><call pos:start="57:9" pos:end="57:56"><name pos:start="57:9" pos:end="57:16">GET_DATA</name><argument_list pos:start="57:17" pos:end="57:56">(<argument pos:start="57:18" pos:end="57:21"><expr pos:start="57:18" pos:end="57:21"><name pos:start="57:18" pos:end="57:21">code</name></expr></argument>, <argument pos:start="57:24" pos:end="57:28"><expr pos:start="57:24" pos:end="57:28"><name pos:start="57:24" pos:end="57:28">codes</name></expr></argument>, <argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">i</name></expr></argument>, <argument pos:start="57:34" pos:end="57:43"><expr pos:start="57:34" pos:end="57:43"><name pos:start="57:34" pos:end="57:43">codes_wrap</name></expr></argument>, <argument pos:start="57:46" pos:end="57:55"><expr pos:start="57:46" pos:end="57:55"><name pos:start="57:46" pos:end="57:55">codes_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="59:9" pos:end="59:41">/* we accept tables with holes */</comment>

        <if_stmt pos:start="61:9" pos:end="66:0"><if pos:start="61:9" pos:end="66:0">if <condition pos:start="61:12" pos:end="61:19">(<expr pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:13">n</name> <operator pos:start="61:15" pos:end="61:16">&lt;=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="66:0"><block_content pos:start="63:13" pos:end="66:0">

            <continue pos:start="63:13" pos:end="66:0">continue;</continue></block_content></block></if></if_stmt>

<cpp:if pos:start="65:1" pos:end="65:27">#<cpp:directive pos:start="65:2" pos:end="65:3">if</cpp:directive> <expr pos:start="65:5" pos:end="65:27"><call pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:11">defined</name><argument_list pos:start="65:12" pos:end="65:22">(<argument pos:start="65:13" pos:end="65:21"><expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:21">DEBUG_VLC</name></expr></argument>)</argument_list></call> <operator pos:start="65:24" pos:end="65:25">&amp;&amp;</operator> <literal type="number" pos:start="65:27" pos:end="65:27">0</literal></expr></cpp:if>

        <expr_stmt pos:start="67:9" pos:end="70:0"><expr pos:start="67:9" pos:end="67:51"><call pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:14">printf</name><argument_list pos:start="67:15" pos:end="67:51">(<argument pos:start="67:16" pos:end="67:38"><expr pos:start="67:16" pos:end="67:38"><literal type="string" pos:start="67:16" pos:end="67:38">"i=%d n=%d code=0x%x\n"</literal></expr></argument>, <argument pos:start="67:41" pos:end="67:41"><expr pos:start="67:41" pos:end="67:41"><name pos:start="67:41" pos:end="67:41">i</name></expr></argument>, <argument pos:start="67:44" pos:end="67:44"><expr pos:start="67:44" pos:end="67:44"><name pos:start="67:44" pos:end="67:44">n</name></expr></argument>, <argument pos:start="67:47" pos:end="67:50"><expr pos:start="67:47" pos:end="67:50"><name pos:start="67:47" pos:end="67:50">code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="71:9" pos:end="71:60">/* if code matches the prefix, it is in the table */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:9">n</name> <operator pos:start="73:11" pos:end="73:12">-=</operator> <name pos:start="73:14" pos:end="73:21">n_prefix</name></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="137:9"><if pos:start="75:9" pos:end="137:9">if <condition pos:start="75:12" pos:end="75:48">(<expr pos:start="75:13" pos:end="75:47"><name pos:start="75:13" pos:end="75:13">n</name> <operator pos:start="75:15" pos:end="75:15">&gt;</operator> <literal type="number" pos:start="75:17" pos:end="75:17">0</literal> <operator pos:start="75:19" pos:end="75:20">&amp;&amp;</operator> <operator pos:start="75:22" pos:end="75:22">(</operator><name pos:start="75:23" pos:end="75:26">code</name> <operator pos:start="75:28" pos:end="75:29">&gt;&gt;</operator> <name pos:start="75:31" pos:end="75:31">n</name><operator pos:start="75:32" pos:end="75:32">)</operator> <operator pos:start="75:34" pos:end="75:35">==</operator> <name pos:start="75:37" pos:end="75:47">code_prefix</name></expr>)</condition> <block pos:start="75:50" pos:end="137:9">{<block_content pos:start="77:13" pos:end="135:13">

            <if_stmt pos:start="77:13" pos:end="135:13"><if pos:start="77:13" pos:end="111:13">if <condition pos:start="77:16" pos:end="77:35">(<expr pos:start="77:17" pos:end="77:34"><name pos:start="77:17" pos:end="77:17">n</name> <operator pos:start="77:19" pos:end="77:20">&lt;=</operator> <name pos:start="77:22" pos:end="77:34">table_nb_bits</name></expr>)</condition> <block pos:start="77:37" pos:end="111:13">{<block_content pos:start="81:17" pos:end="109:17">

                <comment type="block" pos:start="79:17" pos:end="79:50">/* no need to add another table */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:69"><expr pos:start="81:17" pos:end="81:68"><name pos:start="81:17" pos:end="81:17">j</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <operator pos:start="81:21" pos:end="81:21">(</operator><name pos:start="81:22" pos:end="81:25">code</name> <operator pos:start="81:27" pos:end="81:28">&lt;&lt;</operator> <operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:43">table_nb_bits</name> <operator pos:start="81:45" pos:end="81:45">-</operator> <name pos:start="81:47" pos:end="81:47">n</name><operator pos:start="81:48" pos:end="81:48">)</operator><operator pos:start="81:49" pos:end="81:49">)</operator> <operator pos:start="81:51" pos:end="81:51">&amp;</operator> <operator pos:start="81:53" pos:end="81:53">(</operator><name pos:start="81:54" pos:end="81:63">table_size</name> <operator pos:start="81:65" pos:end="81:65">-</operator> <literal type="number" pos:start="81:67" pos:end="81:67">1</literal><operator pos:start="81:68" pos:end="81:68">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:46"><expr pos:start="83:17" pos:end="83:45"><name pos:start="83:17" pos:end="83:18">nb</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">1</literal> <operator pos:start="83:24" pos:end="83:25">&lt;&lt;</operator> <operator pos:start="83:27" pos:end="83:27">(</operator><name pos:start="83:28" pos:end="83:40">table_nb_bits</name> <operator pos:start="83:42" pos:end="83:42">-</operator> <name pos:start="83:44" pos:end="83:44">n</name><operator pos:start="83:45" pos:end="83:45">)</operator></expr>;</expr_stmt>

                <for pos:start="85:17" pos:end="109:17">for<control pos:start="85:20" pos:end="85:33">(<init pos:start="85:21" pos:end="85:24"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:21">k</name><operator pos:start="85:22" pos:end="85:22">=</operator><literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>;</init><condition pos:start="85:25" pos:end="85:29"><expr pos:start="85:25" pos:end="85:28"><name pos:start="85:25" pos:end="85:25">k</name><operator pos:start="85:26" pos:end="85:26">&lt;</operator><name pos:start="85:27" pos:end="85:28">nb</name></expr>;</condition><incr pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:30">k</name><operator pos:start="85:31" pos:end="85:32">++</operator></expr></incr>)</control> <block pos:start="85:35" pos:end="109:17">{<block_content pos:start="89:21" pos:end="107:24">

<cpp:ifdef pos:start="87:1" pos:end="87:16">#<cpp:directive pos:start="87:2" pos:end="87:6">ifdef</cpp:directive> <name pos:start="87:8" pos:end="87:16">DEBUG_VLC</name></cpp:ifdef>

                    <expr_stmt pos:start="89:21" pos:end="94:0"><expr pos:start="89:21" pos:end="91:35"><call pos:start="89:21" pos:end="91:35"><name pos:start="89:21" pos:end="89:26">av_log</name><argument_list pos:start="89:27" pos:end="91:35">(<argument pos:start="89:28" pos:end="89:31"><expr pos:start="89:28" pos:end="89:31"><name pos:start="89:28" pos:end="89:31">NULL</name></expr></argument>, <argument pos:start="89:34" pos:end="89:45"><expr pos:start="89:34" pos:end="89:45"><name pos:start="89:34" pos:end="89:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="89:48" pos:end="89:68"><expr pos:start="89:48" pos:end="89:68"><literal type="string" pos:start="89:48" pos:end="89:68">"%4x: code=%d n=%d\n"</literal></expr></argument>,

                           <argument pos:start="91:28" pos:end="91:28"><expr pos:start="91:28" pos:end="91:28"><name pos:start="91:28" pos:end="91:28">j</name></expr></argument>, <argument pos:start="91:31" pos:end="91:31"><expr pos:start="91:31" pos:end="91:31"><name pos:start="91:31" pos:end="91:31">i</name></expr></argument>, <argument pos:start="91:34" pos:end="91:34"><expr pos:start="91:34" pos:end="91:34"><name pos:start="91:34" pos:end="91:34">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>

                    <if_stmt pos:start="95:21" pos:end="101:21"><if pos:start="95:21" pos:end="101:21">if <condition pos:start="95:24" pos:end="95:50">(<expr pos:start="95:25" pos:end="95:49"><name pos:start="95:25" pos:end="95:35"><name pos:start="95:25" pos:end="95:29">table</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><name pos:start="95:31" pos:end="95:31">j</name></expr>]</index><index pos:start="95:33" pos:end="95:35">[<expr pos:start="95:34" pos:end="95:34"><literal type="number" pos:start="95:34" pos:end="95:34">1</literal></expr>]</index></name> <comment type="block" pos:start="95:37" pos:end="95:44">/*bits*/</comment> <operator pos:start="95:46" pos:end="95:47">!=</operator> <literal type="number" pos:start="95:49" pos:end="95:49">0</literal></expr>)</condition> <block pos:start="95:52" pos:end="101:21">{<block_content pos:start="97:25" pos:end="99:34">

                        <expr_stmt pos:start="97:25" pos:end="97:72"><expr pos:start="97:25" pos:end="97:71"><call pos:start="97:25" pos:end="97:71"><name pos:start="97:25" pos:end="97:30">av_log</name><argument_list pos:start="97:31" pos:end="97:71">(<argument pos:start="97:32" pos:end="97:35"><expr pos:start="97:32" pos:end="97:35"><name pos:start="97:32" pos:end="97:35">NULL</name></expr></argument>, <argument pos:start="97:38" pos:end="97:49"><expr pos:start="97:38" pos:end="97:49"><name pos:start="97:38" pos:end="97:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:52" pos:end="97:70"><expr pos:start="97:52" pos:end="97:70"><literal type="string" pos:start="97:52" pos:end="97:70">"incorrect codes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="99:25" pos:end="99:34">return <expr pos:start="99:32" pos:end="99:33"><operator pos:start="99:32" pos:end="99:32">-</operator><literal type="number" pos:start="99:33" pos:end="99:33">1</literal></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:36"><expr pos:start="103:21" pos:end="103:35"><name pos:start="103:21" pos:end="103:31"><name pos:start="103:21" pos:end="103:25">table</name><index pos:start="103:26" pos:end="103:28">[<expr pos:start="103:27" pos:end="103:27"><name pos:start="103:27" pos:end="103:27">j</name></expr>]</index><index pos:start="103:29" pos:end="103:31">[<expr pos:start="103:30" pos:end="103:30"><literal type="number" pos:start="103:30" pos:end="103:30">1</literal></expr>]</index></name> <operator pos:start="103:33" pos:end="103:33">=</operator> <name pos:start="103:35" pos:end="103:35">n</name></expr>;</expr_stmt> <comment type="line" pos:start="103:38" pos:end="103:43">//bits</comment>

                    <expr_stmt pos:start="105:21" pos:end="105:36"><expr pos:start="105:21" pos:end="105:35"><name pos:start="105:21" pos:end="105:31"><name pos:start="105:21" pos:end="105:25">table</name><index pos:start="105:26" pos:end="105:28">[<expr pos:start="105:27" pos:end="105:27"><name pos:start="105:27" pos:end="105:27">j</name></expr>]</index><index pos:start="105:29" pos:end="105:31">[<expr pos:start="105:30" pos:end="105:30"><literal type="number" pos:start="105:30" pos:end="105:30">0</literal></expr>]</index></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:35">i</name></expr>;</expr_stmt> <comment type="line" pos:start="105:38" pos:end="105:43">//code</comment>

                    <expr_stmt pos:start="107:21" pos:end="107:24"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:21">j</name><operator pos:start="107:22" pos:end="107:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="135:13">else <block pos:start="111:20" pos:end="135:13">{<block_content pos:start="113:17" pos:end="133:34">

                <expr_stmt pos:start="113:17" pos:end="113:35"><expr pos:start="113:17" pos:end="113:34"><name pos:start="113:17" pos:end="113:17">n</name> <operator pos:start="113:19" pos:end="113:20">-=</operator> <name pos:start="113:22" pos:end="113:34">table_nb_bits</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="118:0"><expr pos:start="115:17" pos:end="115:60"><name pos:start="115:17" pos:end="115:17">j</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <operator pos:start="115:21" pos:end="115:21">(</operator><name pos:start="115:22" pos:end="115:25">code</name> <operator pos:start="115:27" pos:end="115:28">&gt;&gt;</operator> <name pos:start="115:30" pos:end="115:30">n</name><operator pos:start="115:31" pos:end="115:31">)</operator> <operator pos:start="115:33" pos:end="115:33">&amp;</operator> <operator pos:start="115:35" pos:end="115:35">(</operator><operator pos:start="115:36" pos:end="115:36">(</operator><literal type="number" pos:start="115:37" pos:end="115:37">1</literal> <operator pos:start="115:39" pos:end="115:40">&lt;&lt;</operator> <name pos:start="115:42" pos:end="115:54">table_nb_bits</name><operator pos:start="115:55" pos:end="115:55">)</operator> <operator pos:start="115:57" pos:end="115:57">-</operator> <literal type="number" pos:start="115:59" pos:end="115:59">1</literal><operator pos:start="115:60" pos:end="115:60">)</operator></expr>;</expr_stmt>

<cpp:ifdef pos:start="117:1" pos:end="117:16">#<cpp:directive pos:start="117:2" pos:end="117:6">ifdef</cpp:directive> <name pos:start="117:8" pos:end="117:16">DEBUG_VLC</name></cpp:ifdef>

                <expr_stmt pos:start="119:17" pos:end="124:0"><expr pos:start="119:17" pos:end="121:28"><call pos:start="119:17" pos:end="121:28"><name pos:start="119:17" pos:end="119:22">printf</name><argument_list pos:start="119:23" pos:end="121:28">(<argument pos:start="119:24" pos:end="119:47"><expr pos:start="119:24" pos:end="119:47"><literal type="string" pos:start="119:24" pos:end="119:47">"%4x: n=%d (subtable)\n"</literal></expr></argument>,

                       <argument pos:start="121:24" pos:end="121:24"><expr pos:start="121:24" pos:end="121:24"><name pos:start="121:24" pos:end="121:24">j</name></expr></argument>, <argument pos:start="121:27" pos:end="121:27"><expr pos:start="121:27" pos:end="121:27"><name pos:start="121:27" pos:end="121:27">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>

                <comment type="block" pos:start="125:17" pos:end="125:40">/* compute table size */</comment>

                <expr_stmt pos:start="127:17" pos:end="127:34"><expr pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:18">n1</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <operator pos:start="127:22" pos:end="127:22">-</operator><name pos:start="127:23" pos:end="127:33"><name pos:start="127:23" pos:end="127:27">table</name><index pos:start="127:28" pos:end="127:30">[<expr pos:start="127:29" pos:end="127:29"><name pos:start="127:29" pos:end="127:29">j</name></expr>]</index><index pos:start="127:31" pos:end="127:33">[<expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="127:36" pos:end="127:41">//bits</comment>

                <if_stmt pos:start="129:17" pos:end="131:27"><if pos:start="129:17" pos:end="131:27">if <condition pos:start="129:20" pos:end="129:27">(<expr pos:start="129:21" pos:end="129:26"><name pos:start="129:21" pos:end="129:21">n</name> <operator pos:start="129:23" pos:end="129:23">&gt;</operator> <name pos:start="129:25" pos:end="129:26">n1</name></expr>)</condition><block type="pseudo" pos:start="131:21" pos:end="131:27"><block_content pos:start="131:21" pos:end="131:27">

                    <expr_stmt pos:start="131:21" pos:end="131:27"><expr pos:start="131:21" pos:end="131:26"><name pos:start="131:21" pos:end="131:22">n1</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:26">n</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:34"><expr pos:start="133:17" pos:end="133:33"><name pos:start="133:17" pos:end="133:27"><name pos:start="133:17" pos:end="133:21">table</name><index pos:start="133:22" pos:end="133:24">[<expr pos:start="133:23" pos:end="133:23"><name pos:start="133:23" pos:end="133:23">j</name></expr>]</index><index pos:start="133:25" pos:end="133:27">[<expr pos:start="133:26" pos:end="133:26"><literal type="number" pos:start="133:26" pos:end="133:26">1</literal></expr>]</index></name> <operator pos:start="133:29" pos:end="133:29">=</operator> <operator pos:start="133:31" pos:end="133:31">-</operator><name pos:start="133:32" pos:end="133:33">n1</name></expr>;</expr_stmt> <comment type="line" pos:start="133:36" pos:end="133:41">//bits</comment>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="143:5" pos:end="143:57">/* second pass : fill auxillary tables recursively */</comment>

    <for pos:start="145:5" pos:end="183:5">for<control pos:start="145:8" pos:end="145:29">(<init pos:start="145:9" pos:end="145:12"><expr pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:9">i</name><operator pos:start="145:10" pos:end="145:10">=</operator><literal type="number" pos:start="145:11" pos:end="145:11">0</literal></expr>;</init><condition pos:start="145:13" pos:end="145:25"><expr pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:13">i</name><operator pos:start="145:14" pos:end="145:14">&lt;</operator><name pos:start="145:15" pos:end="145:24">table_size</name></expr>;</condition><incr pos:start="145:26" pos:end="145:28"><expr pos:start="145:26" pos:end="145:28"><name pos:start="145:26" pos:end="145:26">i</name><operator pos:start="145:27" pos:end="145:28">++</operator></expr></incr>)</control> <block pos:start="145:31" pos:end="183:5">{<block_content pos:start="147:9" pos:end="181:9">

        <expr_stmt pos:start="147:9" pos:end="147:24"><expr pos:start="147:9" pos:end="147:23"><name pos:start="147:9" pos:end="147:9">n</name> <operator pos:start="147:11" pos:end="147:11">=</operator> <name pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:17">table</name><index pos:start="147:18" pos:end="147:20">[<expr pos:start="147:19" pos:end="147:19"><name pos:start="147:19" pos:end="147:19">i</name></expr>]</index><index pos:start="147:21" pos:end="147:23">[<expr pos:start="147:22" pos:end="147:22"><literal type="number" pos:start="147:22" pos:end="147:22">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="147:26" pos:end="147:31">//bits</comment>

        <if_stmt pos:start="149:9" pos:end="181:9"><if pos:start="149:9" pos:end="181:9">if <condition pos:start="149:12" pos:end="149:18">(<expr pos:start="149:13" pos:end="149:17"><name pos:start="149:13" pos:end="149:13">n</name> <operator pos:start="149:15" pos:end="149:15">&lt;</operator> <literal type="number" pos:start="149:17" pos:end="149:17">0</literal></expr>)</condition> <block pos:start="149:20" pos:end="181:9">{<block_content pos:start="151:13" pos:end="179:32">

            <expr_stmt pos:start="151:13" pos:end="151:19"><expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:13">n</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <operator pos:start="151:17" pos:end="151:17">-</operator><name pos:start="151:18" pos:end="151:18">n</name></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="159:13"><if pos:start="153:13" pos:end="159:13">if <condition pos:start="153:16" pos:end="153:34">(<expr pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:17">n</name> <operator pos:start="153:19" pos:end="153:19">&gt;</operator> <name pos:start="153:21" pos:end="153:33">table_nb_bits</name></expr>)</condition> <block pos:start="153:36" pos:end="159:13">{<block_content pos:start="155:17" pos:end="157:33">

                <expr_stmt pos:start="155:17" pos:end="155:34"><expr pos:start="155:17" pos:end="155:33"><name pos:start="155:17" pos:end="155:17">n</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:33">table_nb_bits</name></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:33"><expr pos:start="157:17" pos:end="157:32"><name pos:start="157:17" pos:end="157:27"><name pos:start="157:17" pos:end="157:21">table</name><index pos:start="157:22" pos:end="157:24">[<expr pos:start="157:23" pos:end="157:23"><name pos:start="157:23" pos:end="157:23">i</name></expr>]</index><index pos:start="157:25" pos:end="157:27">[<expr pos:start="157:26" pos:end="157:26"><literal type="number" pos:start="157:26" pos:end="157:26">1</literal></expr>]</index></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <operator pos:start="157:31" pos:end="157:31">-</operator><name pos:start="157:32" pos:end="157:32">n</name></expr>;</expr_stmt> <comment type="line" pos:start="157:35" pos:end="157:40">//bits</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="161:13" pos:end="169:58"><expr pos:start="161:13" pos:end="169:57"><name pos:start="161:13" pos:end="161:17">index</name> <operator pos:start="161:19" pos:end="161:19">=</operator> <call pos:start="161:21" pos:end="169:57"><name pos:start="161:21" pos:end="161:31">build_table</name><argument_list pos:start="161:32" pos:end="169:57">(<argument pos:start="161:33" pos:end="161:35"><expr pos:start="161:33" pos:end="161:35"><name pos:start="161:33" pos:end="161:35">vlc</name></expr></argument>, <argument pos:start="161:38" pos:end="161:38"><expr pos:start="161:38" pos:end="161:38"><name pos:start="161:38" pos:end="161:38">n</name></expr></argument>, <argument pos:start="161:41" pos:end="161:48"><expr pos:start="161:41" pos:end="161:48"><name pos:start="161:41" pos:end="161:48">nb_codes</name></expr></argument>,

                                <argument pos:start="163:33" pos:end="163:36"><expr pos:start="163:33" pos:end="163:36"><name pos:start="163:33" pos:end="163:36">bits</name></expr></argument>, <argument pos:start="163:39" pos:end="163:47"><expr pos:start="163:39" pos:end="163:47"><name pos:start="163:39" pos:end="163:47">bits_wrap</name></expr></argument>, <argument pos:start="163:50" pos:end="163:58"><expr pos:start="163:50" pos:end="163:58"><name pos:start="163:50" pos:end="163:58">bits_size</name></expr></argument>,

                                <argument pos:start="165:33" pos:end="165:37"><expr pos:start="165:33" pos:end="165:37"><name pos:start="165:33" pos:end="165:37">codes</name></expr></argument>, <argument pos:start="165:40" pos:end="165:49"><expr pos:start="165:40" pos:end="165:49"><name pos:start="165:40" pos:end="165:49">codes_wrap</name></expr></argument>, <argument pos:start="165:52" pos:end="165:61"><expr pos:start="165:52" pos:end="165:61"><name pos:start="165:52" pos:end="165:61">codes_size</name></expr></argument>,

                                <argument pos:start="167:33" pos:end="167:66"><expr pos:start="167:33" pos:end="167:66"><operator pos:start="167:33" pos:end="167:33">(</operator><name pos:start="167:34" pos:end="167:44">code_prefix</name> <operator pos:start="167:46" pos:end="167:47">&lt;&lt;</operator> <name pos:start="167:49" pos:end="167:61">table_nb_bits</name><operator pos:start="167:62" pos:end="167:62">)</operator> <operator pos:start="167:64" pos:end="167:64">|</operator> <name pos:start="167:66" pos:end="167:66">i</name></expr></argument>,

                                <argument pos:start="169:33" pos:end="169:56"><expr pos:start="169:33" pos:end="169:56"><name pos:start="169:33" pos:end="169:40">n_prefix</name> <operator pos:start="169:42" pos:end="169:42">+</operator> <name pos:start="169:44" pos:end="169:56">table_nb_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:26"><if pos:start="171:13" pos:end="173:26">if <condition pos:start="171:16" pos:end="171:26">(<expr pos:start="171:17" pos:end="171:25"><name pos:start="171:17" pos:end="171:21">index</name> <operator pos:start="171:23" pos:end="171:23">&lt;</operator> <literal type="number" pos:start="171:25" pos:end="171:25">0</literal></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:26"><block_content pos:start="173:17" pos:end="173:26">

                <return pos:start="173:17" pos:end="173:26">return <expr pos:start="173:24" pos:end="173:25"><operator pos:start="173:24" pos:end="173:24">-</operator><literal type="number" pos:start="173:25" pos:end="173:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="175:13" pos:end="175:63">/* note: realloc has been done, so reload tables */</comment>

            <expr_stmt pos:start="177:13" pos:end="177:45"><expr pos:start="177:13" pos:end="177:44"><name pos:start="177:13" pos:end="177:17">table</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <operator pos:start="177:21" pos:end="177:21">&amp;</operator><name pos:start="177:22" pos:end="177:44"><name pos:start="177:22" pos:end="177:24">vlc</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:31">table</name><index pos:start="177:32" pos:end="177:44">[<expr pos:start="177:33" pos:end="177:43"><name pos:start="177:33" pos:end="177:43">table_index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:32"><expr pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:23"><name pos:start="179:13" pos:end="179:17">table</name><index pos:start="179:18" pos:end="179:20">[<expr pos:start="179:19" pos:end="179:19"><name pos:start="179:19" pos:end="179:19">i</name></expr>]</index><index pos:start="179:21" pos:end="179:23">[<expr pos:start="179:22" pos:end="179:22"><literal type="number" pos:start="179:22" pos:end="179:22">0</literal></expr>]</index></name> <operator pos:start="179:25" pos:end="179:25">=</operator> <name pos:start="179:27" pos:end="179:31">index</name></expr>;</expr_stmt> <comment type="line" pos:start="179:34" pos:end="179:39">//code</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="185:5" pos:end="185:23">return <expr pos:start="185:12" pos:end="185:22"><name pos:start="185:12" pos:end="185:22">table_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
