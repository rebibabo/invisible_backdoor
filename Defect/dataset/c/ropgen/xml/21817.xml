<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21817.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">qemu_loadvm_state</name><parameter_list pos:start="1:29" pos:end="1:41">(<parameter pos:start="1:30" pos:end="1:40"><decl pos:start="1:30" pos:end="1:40"><type pos:start="1:30" pos:end="1:39"><name pos:start="1:30" pos:end="1:37">QEMUFile</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:15">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SaveStateEntry</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">se</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:54"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">ret</name></decl>, <decl pos:start="7:19" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:29">instance_id</name></decl>, <decl pos:start="7:32" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:32" pos:end="7:41">record_len</name></decl>, <decl pos:start="7:44" pos:end="7:53"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:44" pos:end="7:53">version_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">total_len</name></decl>, <decl pos:start="9:24" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:24" pos:end="9:30">end_pos</name></decl>, <decl pos:start="9:33" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:33" pos:end="9:39">cur_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:19"><name pos:start="13:10" pos:end="13:14">idstr</name><index pos:start="13:15" pos:end="13:19">[<expr pos:start="13:16" pos:end="13:18"><literal type="number" pos:start="13:16" pos:end="13:18">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:5">v</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <call pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:21">qemu_get_be32</name><argument_list pos:start="17:22" pos:end="17:24">(<argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:9">v</name> <operator pos:start="19:11" pos:end="19:12">!=</operator> <name pos:start="19:14" pos:end="19:31">QEMU_VM_FILE_MAGIC</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <goto pos:start="21:9" pos:end="21:18">goto <name pos:start="21:14" pos:end="21:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:5">v</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:21">qemu_get_be32</name><argument_list pos:start="23:22" pos:end="23:24">(<argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:34">(<expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:9">v</name> <operator pos:start="25:11" pos:end="25:12">!=</operator> <name pos:start="25:14" pos:end="25:33">QEMU_VM_FILE_VERSION</name></expr>)</condition> <block pos:start="25:36" pos:end="33:5">{<block_content pos:start="27:5" pos:end="31:21">

    <label pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:8">fail</name>:</label>

        <expr_stmt pos:start="29:9" pos:end="29:17"><expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:21">goto <name pos:start="31:14" pos:end="31:20">the_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:13">total_len</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:29">qemu_get_be64</name><argument_list pos:start="35:30" pos:end="35:32">(<argument pos:start="35:31" pos:end="35:31"><expr pos:start="35:31" pos:end="35:31"><name pos:start="35:31" pos:end="35:31">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:11">end_pos</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <name pos:start="37:15" pos:end="37:23">total_len</name> <operator pos:start="37:25" pos:end="37:25">+</operator> <call pos:start="37:27" pos:end="37:39"><name pos:start="37:27" pos:end="37:36">qemu_ftell</name><argument_list pos:start="37:37" pos:end="37:39">(<argument pos:start="37:38" pos:end="37:38"><expr pos:start="37:38" pos:end="37:38"><name pos:start="37:38" pos:end="37:38">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="93:5">for<control pos:start="39:8" pos:end="39:11">(<init pos:start="39:9" pos:end="39:9">;</init><condition pos:start="39:10" pos:end="39:10">;</condition><incr/>)</control> <block pos:start="39:13" pos:end="93:5">{<block_content pos:start="41:9" pos:end="91:54">

        <if_stmt pos:start="41:9" pos:end="43:18"><if pos:start="41:9" pos:end="43:18">if <condition pos:start="41:12" pos:end="41:37">(<expr pos:start="41:13" pos:end="41:36"><call pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:22">qemu_ftell</name><argument_list pos:start="41:23" pos:end="41:25">(<argument pos:start="41:24" pos:end="41:24"><expr pos:start="41:24" pos:end="41:24"><name pos:start="41:24" pos:end="41:24">f</name></expr></argument>)</argument_list></call> <operator pos:start="41:27" pos:end="41:28">&gt;=</operator> <name pos:start="41:30" pos:end="41:36">end_pos</name></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:18"><block_content pos:start="43:13" pos:end="43:18">

            <break pos:start="43:13" pos:end="43:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:11">len</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:30"><name pos:start="45:15" pos:end="45:27">qemu_get_byte</name><argument_list pos:start="45:28" pos:end="45:30">(<argument pos:start="45:29" pos:end="45:29"><expr pos:start="45:29" pos:end="45:29"><name pos:start="45:29" pos:end="45:29">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><call pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:23">qemu_get_buffer</name><argument_list pos:start="47:24" pos:end="47:49">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">f</name></expr></argument>, <argument pos:start="47:28" pos:end="47:43"><expr pos:start="47:28" pos:end="47:43"><operator pos:start="47:28" pos:end="47:28">(</operator><name pos:start="47:29" pos:end="47:35">uint8_t</name> <operator pos:start="47:37" pos:end="47:37">*</operator><operator pos:start="47:38" pos:end="47:38">)</operator><name pos:start="47:39" pos:end="47:43">idstr</name></expr></argument>, <argument pos:start="47:46" pos:end="47:48"><expr pos:start="47:46" pos:end="47:48"><name pos:start="47:46" pos:end="47:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:26"><expr pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:13">idstr</name><index pos:start="49:14" pos:end="49:18">[<expr pos:start="49:15" pos:end="49:17"><name pos:start="49:15" pos:end="49:17">len</name></expr>]</index></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="char" pos:start="49:22" pos:end="49:25">'\0'</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:19">instance_id</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <call pos:start="51:23" pos:end="51:38"><name pos:start="51:23" pos:end="51:35">qemu_get_be32</name><argument_list pos:start="51:36" pos:end="51:38">(<argument pos:start="51:37" pos:end="51:37"><expr pos:start="51:37" pos:end="51:37"><name pos:start="51:37" pos:end="51:37">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:38"><expr pos:start="53:9" pos:end="53:37"><name pos:start="53:9" pos:end="53:18">version_id</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:37"><name pos:start="53:22" pos:end="53:34">qemu_get_be32</name><argument_list pos:start="53:35" pos:end="53:37">(<argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="64:0"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:18">record_len</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:37"><name pos:start="55:22" pos:end="55:34">qemu_get_be32</name><argument_list pos:start="55:35" pos:end="55:37">(<argument pos:start="55:36" pos:end="55:36"><expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="57:1" pos:end="57:5">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:5"><literal type="number" pos:start="57:5" pos:end="57:5">0</literal></expr></cpp:if>

        printf("idstr=%s instance=0x%x version=%d len=%d\n",

               idstr, instance_id, version_id, record_len);

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="65:9" pos:end="65:32"><expr pos:start="65:9" pos:end="65:31"><name pos:start="65:9" pos:end="65:15">cur_pos</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:31"><name pos:start="65:19" pos:end="65:28">qemu_ftell</name><argument_list pos:start="65:29" pos:end="65:31">(<argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><name pos:start="65:30" pos:end="65:30">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:41"><expr pos:start="67:9" pos:end="67:40"><name pos:start="67:9" pos:end="67:10">se</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:40"><name pos:start="67:14" pos:end="67:20">find_se</name><argument_list pos:start="67:21" pos:end="67:40">(<argument pos:start="67:22" pos:end="67:26"><expr pos:start="67:22" pos:end="67:26"><name pos:start="67:22" pos:end="67:26">idstr</name></expr></argument>, <argument pos:start="67:29" pos:end="67:39"><expr pos:start="67:29" pos:end="67:39"><name pos:start="67:29" pos:end="67:39">instance_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="87:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:16">(<expr pos:start="69:13" pos:end="69:15"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:15">se</name></expr>)</condition> <block pos:start="69:18" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:40">

            <expr_stmt pos:start="71:13" pos:end="73:40"><expr pos:start="71:13" pos:end="73:39"><call pos:start="71:13" pos:end="73:39"><name pos:start="71:13" pos:end="71:19">fprintf</name><argument_list pos:start="71:20" pos:end="73:39">(<argument pos:start="71:21" pos:end="71:26"><expr pos:start="71:21" pos:end="71:26"><name pos:start="71:21" pos:end="71:26">stderr</name></expr></argument>, <argument pos:start="71:29" pos:end="71:101"><expr pos:start="71:29" pos:end="71:101"><literal type="string" pos:start="71:29" pos:end="71:101">"qemu: warning: instance 0x%x of device '%s' not present in current VM\n"</literal></expr></argument>,

                    <argument pos:start="73:21" pos:end="73:31"><expr pos:start="73:21" pos:end="73:31"><name pos:start="73:21" pos:end="73:31">instance_id</name></expr></argument>, <argument pos:start="73:34" pos:end="73:38"><expr pos:start="73:34" pos:end="73:38"><name pos:start="73:34" pos:end="73:38">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="87:9">else <block pos:start="75:16" pos:end="87:9">{<block_content pos:start="77:13" pos:end="85:13">

            <expr_stmt pos:start="77:13" pos:end="77:60"><expr pos:start="77:13" pos:end="77:59"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <call pos:start="77:19" pos:end="77:59"><name pos:start="77:19" pos:end="77:32"><name pos:start="77:19" pos:end="77:20">se</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:32">load_state</name></name><argument_list pos:start="77:33" pos:end="77:59">(<argument pos:start="77:34" pos:end="77:34"><expr pos:start="77:34" pos:end="77:34"><name pos:start="77:34" pos:end="77:34">f</name></expr></argument>, <argument pos:start="77:37" pos:end="77:46"><expr pos:start="77:37" pos:end="77:46"><name pos:start="77:37" pos:end="77:46"><name pos:start="77:37" pos:end="77:38">se</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:46">opaque</name></name></expr></argument>, <argument pos:start="77:49" pos:end="77:58"><expr pos:start="77:49" pos:end="77:58"><name pos:start="77:49" pos:end="77:58">version_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:24">(<expr pos:start="79:17" pos:end="79:23"><name pos:start="79:17" pos:end="79:19">ret</name> <operator pos:start="79:21" pos:end="79:21">&lt;</operator> <literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr>)</condition> <block pos:start="79:26" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:44">

                <expr_stmt pos:start="81:17" pos:end="83:44"><expr pos:start="81:17" pos:end="83:43"><call pos:start="81:17" pos:end="83:43"><name pos:start="81:17" pos:end="81:23">fprintf</name><argument_list pos:start="81:24" pos:end="83:43">(<argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:30">stderr</name></expr></argument>, <argument pos:start="81:33" pos:end="81:109"><expr pos:start="81:33" pos:end="81:109"><literal type="string" pos:start="81:33" pos:end="81:109">"qemu: warning: error while loading state for instance 0x%x of device '%s'\n"</literal></expr></argument>,

                        <argument pos:start="83:25" pos:end="83:35"><expr pos:start="83:25" pos:end="83:35"><name pos:start="83:25" pos:end="83:35">instance_id</name></expr></argument>, <argument pos:start="83:38" pos:end="83:42"><expr pos:start="83:38" pos:end="83:42"><name pos:start="83:38" pos:end="83:42">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <comment type="block" pos:start="89:9" pos:end="89:48">/* always seek to exact end of record */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:54"><expr pos:start="91:9" pos:end="91:53"><call pos:start="91:9" pos:end="91:53"><name pos:start="91:9" pos:end="91:18">qemu_fseek</name><argument_list pos:start="91:19" pos:end="91:53">(<argument pos:start="91:20" pos:end="91:20"><expr pos:start="91:20" pos:end="91:20"><name pos:start="91:20" pos:end="91:20">f</name></expr></argument>, <argument pos:start="91:23" pos:end="91:42"><expr pos:start="91:23" pos:end="91:42"><name pos:start="91:23" pos:end="91:29">cur_pos</name> <operator pos:start="91:31" pos:end="91:31">+</operator> <name pos:start="91:33" pos:end="91:42">record_len</name></expr></argument>, <argument pos:start="91:45" pos:end="91:52"><expr pos:start="91:45" pos:end="91:52"><name pos:start="91:45" pos:end="91:52">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="95:12"><expr pos:start="95:5" pos:end="95:11"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <literal type="number" pos:start="95:11" pos:end="95:11">0</literal></expr>;</expr_stmt>

 <label pos:start="97:2" pos:end="97:9"><name pos:start="97:2" pos:end="97:8">the_end</name>:</label>

    <return pos:start="99:5" pos:end="99:15">return <expr pos:start="99:12" pos:end="99:14"><name pos:start="99:12" pos:end="99:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
