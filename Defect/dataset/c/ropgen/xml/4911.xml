<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4911.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:23"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:23">coroutine_fn</name></type> <name pos:start="1:25" pos:end="1:37">nfs_co_writev</name><parameter_list pos:start="1:38" pos:end="5:58">(<parameter pos:start="1:39" pos:end="1:58"><decl pos:start="1:39" pos:end="1:58"><type pos:start="1:39" pos:end="1:58"><name pos:start="1:39" pos:end="1:54">BlockDriverState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">bs</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><name pos:start="3:41" pos:end="3:47">int64_t</name></type> <name pos:start="3:49" pos:end="3:58">sector_num</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:74"><decl pos:start="3:61" pos:end="3:74"><type pos:start="3:61" pos:end="3:74"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:74">nb_sectors</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:57"><decl pos:start="5:41" pos:end="5:57"><type pos:start="5:41" pos:end="5:57"><name pos:start="5:41" pos:end="5:52">QEMUIOVector</name> <modifier pos:start="5:54" pos:end="5:54">*</modifier></type><name pos:start="5:55" pos:end="5:57">iov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="73:13">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">NFSClient</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:21">client</name> <init pos:start="9:23" pos:end="9:34">= <expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:26">bs</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">NFSRPC</name></type> <name pos:start="11:12" pos:end="11:15">task</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:13">buf</name> <init pos:start="13:15" pos:end="13:20">= <expr pos:start="13:17" pos:end="13:20"><name pos:start="13:17" pos:end="13:20">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><call pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:20">nfs_co_init_task</name><argument_list pos:start="17:21" pos:end="17:35">(<argument pos:start="17:22" pos:end="17:27"><expr pos:start="17:22" pos:end="17:27"><name pos:start="17:22" pos:end="17:27">client</name></expr></argument>, <argument pos:start="17:30" pos:end="17:34"><expr pos:start="17:30" pos:end="17:34"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:34">task</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:7">buf</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:53"><name pos:start="21:11" pos:end="21:22">g_try_malloc</name><argument_list pos:start="21:23" pos:end="21:53">(<argument pos:start="21:24" pos:end="21:52"><expr pos:start="21:24" pos:end="21:52"><name pos:start="21:24" pos:end="21:33">nb_sectors</name> <operator pos:start="21:35" pos:end="21:35">*</operator> <name pos:start="21:37" pos:end="21:52">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:18">nb_sectors</name> <operator pos:start="23:20" pos:end="23:21">&amp;&amp;</operator> <name pos:start="23:23" pos:end="23:25">buf</name> <operator pos:start="23:27" pos:end="23:28">==</operator> <name pos:start="23:30" pos:end="23:33">NULL</name></expr>)</condition> <block pos:start="23:36" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:23">

        <return pos:start="25:9" pos:end="25:23">return <expr pos:start="25:16" pos:end="25:22"><operator pos:start="25:16" pos:end="25:16">-</operator><name pos:start="25:17" pos:end="25:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:66"><expr pos:start="31:5" pos:end="31:65"><call pos:start="31:5" pos:end="31:65"><name pos:start="31:5" pos:end="31:21">qemu_iovec_to_buf</name><argument_list pos:start="31:22" pos:end="31:65">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">iov</name></expr></argument>, <argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr></argument>, <argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">buf</name></expr></argument>, <argument pos:start="31:36" pos:end="31:64"><expr pos:start="31:36" pos:end="31:64"><name pos:start="31:36" pos:end="31:45">nb_sectors</name> <operator pos:start="31:47" pos:end="31:47">*</operator> <name pos:start="31:49" pos:end="31:64">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="41:61">(<expr pos:start="35:9" pos:end="41:60"><call pos:start="35:9" pos:end="41:55"><name pos:start="35:9" pos:end="35:24">nfs_pwrite_async</name><argument_list pos:start="35:25" pos:end="41:55">(<argument pos:start="35:26" pos:end="35:40"><expr pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:31">client</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:40">context</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:52"><expr pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:48">client</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:52">fh</name></name></expr></argument>,

                         <argument pos:start="37:26" pos:end="37:54"><expr pos:start="37:26" pos:end="37:54"><name pos:start="37:26" pos:end="37:35">sector_num</name> <operator pos:start="37:37" pos:end="37:37">*</operator> <name pos:start="37:39" pos:end="37:54">BDRV_SECTOR_SIZE</name></expr></argument>,

                         <argument pos:start="39:26" pos:end="39:54"><expr pos:start="39:26" pos:end="39:54"><name pos:start="39:26" pos:end="39:35">nb_sectors</name> <operator pos:start="39:37" pos:end="39:37">*</operator> <name pos:start="39:39" pos:end="39:54">BDRV_SECTOR_SIZE</name></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:28"><expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:28">buf</name></expr></argument>, <argument pos:start="41:31" pos:end="41:47"><expr pos:start="41:31" pos:end="41:47"><name pos:start="41:31" pos:end="41:47">nfs_co_generic_cb</name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:54">task</name></expr></argument>)</argument_list></call> <operator pos:start="41:57" pos:end="41:58">!=</operator> <literal type="number" pos:start="41:60" pos:end="41:60">0</literal></expr>)</condition> <block pos:start="41:63" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:23">

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><call pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:19">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:23">return <expr pos:start="45:16" pos:end="45:22"><operator pos:start="45:16" pos:end="45:16">-</operator><name pos:start="45:17" pos:end="45:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <while pos:start="51:5" pos:end="57:5">while <condition pos:start="51:11" pos:end="51:26">(<expr pos:start="51:12" pos:end="51:25"><operator pos:start="51:12" pos:end="51:12">!</operator><name pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:16">task</name><operator pos:start="51:17" pos:end="51:17">.</operator><name pos:start="51:18" pos:end="51:25">complete</name></name></expr>)</condition> <block pos:start="51:28" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:31">

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:22">nfs_set_events</name><argument_list pos:start="53:23" pos:end="53:30">(<argument pos:start="53:24" pos:end="53:29"><expr pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:29">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><call pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:28">qemu_coroutine_yield</name><argument_list pos:start="55:29" pos:end="55:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="61:5" pos:end="61:16"><expr pos:start="61:5" pos:end="61:15"><call pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:10">g_free</name><argument_list pos:start="61:11" pos:end="61:15">(<argument pos:start="61:12" pos:end="61:14"><expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:50">(<expr pos:start="65:9" pos:end="65:49"><name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:12">task</name><operator pos:start="65:13" pos:end="65:13">.</operator><name pos:start="65:14" pos:end="65:16">ret</name></name> <operator pos:start="65:18" pos:end="65:19">!=</operator> <name pos:start="65:21" pos:end="65:30">nb_sectors</name> <operator pos:start="65:32" pos:end="65:32">*</operator> <name pos:start="65:34" pos:end="65:49">BDRV_SECTOR_SIZE</name></expr>)</condition> <block pos:start="65:52" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:46">

        <return pos:start="67:9" pos:end="67:46">return <expr pos:start="67:16" pos:end="67:45"><ternary pos:start="67:16" pos:end="67:45"><condition pos:start="67:16" pos:end="67:29"><expr pos:start="67:16" pos:end="67:27"><name pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:19">task</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:23">ret</name></name> <operator pos:start="67:25" pos:end="67:25">&lt;</operator> <literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr> ?</condition><then pos:start="67:31" pos:end="67:38"> <expr pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:38"><name pos:start="67:31" pos:end="67:34">task</name><operator pos:start="67:35" pos:end="67:35">.</operator><name pos:start="67:36" pos:end="67:38">ret</name></name></expr> </then><else pos:start="67:40" pos:end="67:45">: <expr pos:start="67:42" pos:end="67:45"><operator pos:start="67:42" pos:end="67:42">-</operator><name pos:start="67:43" pos:end="67:45">EIO</name></expr></else></ternary></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
