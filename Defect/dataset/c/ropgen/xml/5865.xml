<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5865.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">gen_tlbsx_40x</name><parameter_list pos:start="1:26" pos:end="1:44">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:38">DisasContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="44:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:11">t0</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:25">(<argument pos:start="13:18" pos:end="13:24"><expr pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:20">ctx</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">pr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:28" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:27">gen_inval_exception</name><argument_list pos:start="15:28" pos:end="15:55">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">ctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:54"><expr pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:54">POWERPC_EXCP_PRIV_OPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:6">t0</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:23"><name pos:start="21:10" pos:end="21:21">tcg_temp_new</name><argument_list pos:start="21:22" pos:end="21:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><call pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:22">gen_addr_reg_index</name><argument_list pos:start="23:23" pos:end="23:31">(<argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">ctx</name></expr></argument>, <argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:64"><expr pos:start="25:5" pos:end="25:63"><call pos:start="25:5" pos:end="25:63"><name pos:start="25:5" pos:end="25:24">gen_helper_4xx_tlbsx</name><argument_list pos:start="25:25" pos:end="25:63">(<argument pos:start="25:26" pos:end="25:49"><expr pos:start="25:26" pos:end="25:49"><name pos:start="25:26" pos:end="25:49"><name pos:start="25:26" pos:end="25:32">cpu_gpr</name><index pos:start="25:33" pos:end="25:49">[<expr pos:start="25:34" pos:end="25:48"><call pos:start="25:34" pos:end="25:48"><name pos:start="25:34" pos:end="25:35">rD</name><argument_list pos:start="25:36" pos:end="25:48">(<argument pos:start="25:37" pos:end="25:47"><expr pos:start="25:37" pos:end="25:47"><name pos:start="25:37" pos:end="25:47"><name pos:start="25:37" pos:end="25:39">ctx</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:47">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="25:52" pos:end="25:58"><expr pos:start="25:52" pos:end="25:58"><name pos:start="25:52" pos:end="25:58">cpu_env</name></expr></argument>, <argument pos:start="25:61" pos:end="25:62"><expr pos:start="25:61" pos:end="25:62"><name pos:start="25:61" pos:end="25:62">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><call pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:17">tcg_temp_free</name><argument_list pos:start="27:18" pos:end="27:21">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="44:0"><if pos:start="29:5" pos:end="44:0">if <condition pos:start="29:8" pos:end="29:24">(<expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:10">Rc</name><argument_list pos:start="29:11" pos:end="29:23">(<argument pos:start="29:12" pos:end="29:22"><expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:14">ctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">opcode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:26" pos:end="44:0">{<block_content pos:start="31:9" pos:end="39:26">

        <decl_stmt pos:start="31:9" pos:end="31:39"><decl pos:start="31:9" pos:end="31:38"><type pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:16">TCGLabel</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:20">l1</name> <init pos:start="31:22" pos:end="31:38">= <expr pos:start="31:24" pos:end="31:38"><call pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:36">gen_new_label</name><argument_list pos:start="31:37" pos:end="31:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:28">tcg_gen_trunc_tl_i32</name><argument_list pos:start="33:29" pos:end="33:48">(<argument pos:start="33:30" pos:end="33:39"><expr pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:36">cpu_crf</name><index pos:start="33:37" pos:end="33:39">[<expr pos:start="33:38" pos:end="33:38"><literal type="number" pos:start="33:38" pos:end="33:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:42" pos:end="33:47"><expr pos:start="33:42" pos:end="33:47"><name pos:start="33:42" pos:end="33:47">cpu_so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:74"><expr pos:start="35:9" pos:end="35:73"><call pos:start="35:9" pos:end="35:73"><name pos:start="35:9" pos:end="35:26">tcg_gen_brcondi_tl</name><argument_list pos:start="35:27" pos:end="35:73">(<argument pos:start="35:28" pos:end="35:38"><expr pos:start="35:28" pos:end="35:38"><name pos:start="35:28" pos:end="35:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="35:41" pos:end="35:64"><expr pos:start="35:41" pos:end="35:64"><name pos:start="35:41" pos:end="35:64"><name pos:start="35:41" pos:end="35:47">cpu_gpr</name><index pos:start="35:48" pos:end="35:64">[<expr pos:start="35:49" pos:end="35:63"><call pos:start="35:49" pos:end="35:63"><name pos:start="35:49" pos:end="35:50">rD</name><argument_list pos:start="35:51" pos:end="35:63">(<argument pos:start="35:52" pos:end="35:62"><expr pos:start="35:52" pos:end="35:62"><name pos:start="35:52" pos:end="35:62"><name pos:start="35:52" pos:end="35:54">ctx</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:62">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="35:67" pos:end="35:68"><expr pos:start="35:67" pos:end="35:68"><operator pos:start="35:67" pos:end="35:67">-</operator><literal type="number" pos:start="35:68" pos:end="35:68">1</literal></expr></argument>, <argument pos:start="35:71" pos:end="35:72"><expr pos:start="35:71" pos:end="35:72"><name pos:start="35:71" pos:end="35:72">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:54"><expr pos:start="37:9" pos:end="37:53"><call pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:23">tcg_gen_ori_i32</name><argument_list pos:start="37:24" pos:end="37:53">(<argument pos:start="37:25" pos:end="37:34"><expr pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:31">cpu_crf</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:37" pos:end="37:46"><expr pos:start="37:37" pos:end="37:46"><name pos:start="37:37" pos:end="37:46"><name pos:start="37:37" pos:end="37:43">cpu_crf</name><index pos:start="37:44" pos:end="37:46">[<expr pos:start="37:45" pos:end="37:45"><literal type="number" pos:start="37:45" pos:end="37:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:49" pos:end="37:52"><expr pos:start="37:49" pos:end="37:52"><literal type="number" pos:start="37:49" pos:end="37:52">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><call pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:21">gen_set_label</name><argument_list pos:start="39:22" pos:end="39:25">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
