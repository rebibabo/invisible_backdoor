<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9622.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_frame_header</name> <parameter_list pos:start="1:32" pos:end="1:71">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:44">bit_buffer_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">bitbuf</name></decl></parameter>,<parameter pos:start="1:54" pos:end="1:70"><decl pos:start="1:54" pos:end="1:70"><type pos:start="1:54" pos:end="1:70"><name pos:start="1:54" pos:end="1:67">MpegEncContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:70">s</name></decl></parameter>)</parameter_list> <block pos:start="1:73" pos:end="131:1">{<block_content pos:start="3:3" pos:end="129:11">

  <decl_stmt pos:start="3:3" pos:end="3:22"><decl pos:start="3:3" pos:end="3:21"><type pos:start="3:3" pos:end="3:5"><name pos:start="3:3" pos:end="3:5">int</name></type> <name pos:start="3:7" pos:end="3:21">frame_size_code</name></decl>;</decl_stmt>



  <comment type="block" pos:start="7:3" pos:end="7:21">/* unknown field */</comment>

  <expr_stmt pos:start="9:3" pos:end="9:23"><expr pos:start="9:3" pos:end="9:22"><call pos:start="9:3" pos:end="9:22"><name pos:start="9:3" pos:end="9:10">get_bits</name> <argument_list pos:start="9:12" pos:end="9:22">(<argument pos:start="9:13" pos:end="9:18"><expr pos:start="9:13" pos:end="9:18"><name pos:start="9:13" pos:end="9:18">bitbuf</name></expr></argument>, <argument pos:start="9:21" pos:end="9:21"><expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <comment type="block" pos:start="13:3" pos:end="13:18">/* frame type */</comment>

  <expr_stmt pos:start="15:3" pos:end="15:38"><expr pos:start="15:3" pos:end="15:37"><name pos:start="15:3" pos:end="15:14"><name pos:start="15:3" pos:end="15:3">s</name><operator pos:start="15:4" pos:end="15:5">-&gt;</operator><name pos:start="15:6" pos:end="15:14">pict_type</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:37"><name pos:start="15:18" pos:end="15:25">get_bits</name> <argument_list pos:start="15:27" pos:end="15:37">(<argument pos:start="15:28" pos:end="15:33"><expr pos:start="15:28" pos:end="15:33"><name pos:start="15:28" pos:end="15:33">bitbuf</name></expr></argument>, <argument pos:start="15:36" pos:end="15:36"><expr pos:start="15:36" pos:end="15:36"><literal type="number" pos:start="15:36" pos:end="15:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="19:3" pos:end="21:14"><if pos:start="19:3" pos:end="21:14">if <condition pos:start="19:6" pos:end="19:24">(<expr pos:start="19:7" pos:end="19:23"><name pos:start="19:7" pos:end="19:18"><name pos:start="19:7" pos:end="19:7">s</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:18">pict_type</name></name> <operator pos:start="19:20" pos:end="19:21">==</operator> <literal type="number" pos:start="19:23" pos:end="19:23">3</literal></expr>)</condition><block type="pseudo" pos:start="21:5" pos:end="21:14"><block_content pos:start="21:5" pos:end="21:14">

    <return pos:start="21:5" pos:end="21:14">return <expr pos:start="21:12" pos:end="21:13"><operator pos:start="21:12" pos:end="21:12">-</operator><literal type="number" pos:start="21:13" pos:end="21:13">1</literal></expr>;</return></block_content></block></if></if_stmt>



  <if_stmt pos:start="25:3" pos:end="85:3"><if pos:start="25:3" pos:end="85:3">if <condition pos:start="25:6" pos:end="25:39">(<expr pos:start="25:7" pos:end="25:38"><name pos:start="25:7" pos:end="25:18"><name pos:start="25:7" pos:end="25:7">s</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:18">pict_type</name></name> <operator pos:start="25:20" pos:end="25:21">==</operator> <name pos:start="25:23" pos:end="25:38">SVQ1_FRAME_INTRA</name></expr>)</condition> <block pos:start="25:41" pos:end="85:3">{<block_content pos:start="31:5" pos:end="83:5">



    <comment type="block" pos:start="29:5" pos:end="29:24">/* unknown fields */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:47">(<expr pos:start="31:9" pos:end="31:46"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">f_code</name></name> <operator pos:start="31:19" pos:end="31:20">==</operator> <literal type="number" pos:start="31:22" pos:end="31:25">0x50</literal> <operator pos:start="31:27" pos:end="31:28">||</operator> <name pos:start="31:30" pos:end="31:38"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:38">f_code</name></name> <operator pos:start="31:40" pos:end="31:41">==</operator> <literal type="number" pos:start="31:43" pos:end="31:46">0x60</literal></expr>)</condition> <block pos:start="31:49" pos:end="35:5">{<block_content pos:start="33:7" pos:end="33:28">

      <expr_stmt pos:start="33:7" pos:end="33:28"><expr pos:start="33:7" pos:end="33:27"><call pos:start="33:7" pos:end="33:27"><name pos:start="33:7" pos:end="33:14">get_bits</name> <argument_list pos:start="33:16" pos:end="33:27">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">bitbuf</name></expr></argument>, <argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><literal type="number" pos:start="33:25" pos:end="33:26">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:35">(<expr pos:start="39:9" pos:end="39:34"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:18"><name pos:start="39:10" pos:end="39:10">s</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:18">f_code</name></name> <operator pos:start="39:20" pos:end="39:20">^</operator> <literal type="number" pos:start="39:22" pos:end="39:25">0x10</literal><operator pos:start="39:26" pos:end="39:26">)</operator> <operator pos:start="39:28" pos:end="39:29">&gt;=</operator> <literal type="number" pos:start="39:31" pos:end="39:34">0x50</literal></expr>)</condition> <block pos:start="39:37" pos:end="43:5">{<block_content pos:start="41:7" pos:end="41:47">

      <expr_stmt pos:start="41:7" pos:end="41:47"><expr pos:start="41:7" pos:end="41:46"><call pos:start="41:7" pos:end="41:46"><name pos:start="41:7" pos:end="41:15">skip_bits</name><argument_list pos:start="41:16" pos:end="41:46">(<argument pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">bitbuf</name></expr></argument>,<argument pos:start="41:24" pos:end="41:45"><expr pos:start="41:24" pos:end="41:45"><literal type="number" pos:start="41:24" pos:end="41:24">8</literal><operator pos:start="41:25" pos:end="41:25">*</operator><call pos:start="41:26" pos:end="41:45"><name pos:start="41:26" pos:end="41:33">get_bits</name> <argument_list pos:start="41:35" pos:end="41:45">(<argument pos:start="41:36" pos:end="41:41"><expr pos:start="41:36" pos:end="41:41"><name pos:start="41:36" pos:end="41:41">bitbuf</name></expr></argument>, <argument pos:start="41:44" pos:end="41:44"><expr pos:start="41:44" pos:end="41:44"><literal type="number" pos:start="41:44" pos:end="41:44">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><call pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:12">get_bits</name> <argument_list pos:start="47:14" pos:end="47:24">(<argument pos:start="47:15" pos:end="47:20"><expr pos:start="47:15" pos:end="47:20"><name pos:start="47:15" pos:end="47:20">bitbuf</name></expr></argument>, <argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><literal type="number" pos:start="47:23" pos:end="47:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><call pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:12">get_bits</name> <argument_list pos:start="49:14" pos:end="49:24">(<argument pos:start="49:15" pos:end="49:20"><expr pos:start="49:15" pos:end="49:20"><name pos:start="49:15" pos:end="49:20">bitbuf</name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><call pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:12">get_bits</name> <argument_list pos:start="51:14" pos:end="51:24">(<argument pos:start="51:15" pos:end="51:20"><expr pos:start="51:15" pos:end="51:20"><name pos:start="51:15" pos:end="51:20">bitbuf</name></expr></argument>, <argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:25">/* load frame size */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:43"><expr pos:start="57:5" pos:end="57:42"><name pos:start="57:5" pos:end="57:19">frame_size_code</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:42"><name pos:start="57:23" pos:end="57:30">get_bits</name> <argument_list pos:start="57:32" pos:end="57:42">(<argument pos:start="57:33" pos:end="57:38"><expr pos:start="57:33" pos:end="57:38"><name pos:start="57:33" pos:end="57:38">bitbuf</name></expr></argument>, <argument pos:start="57:41" pos:end="57:41"><expr pos:start="57:41" pos:end="57:41"><literal type="number" pos:start="57:41" pos:end="57:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="83:5"><if pos:start="61:5" pos:end="75:5">if <condition pos:start="61:8" pos:end="61:29">(<expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:23">frame_size_code</name> <operator pos:start="61:25" pos:end="61:26">==</operator> <literal type="number" pos:start="61:28" pos:end="61:28">7</literal></expr>)</condition> <block pos:start="61:31" pos:end="75:5">{<block_content pos:start="65:7" pos:end="73:18">

      <comment type="block" pos:start="63:7" pos:end="63:45">/* load width, height (12 bits each) */</comment>

      <expr_stmt pos:start="65:7" pos:end="65:39"><expr pos:start="65:7" pos:end="65:38"><name pos:start="65:7" pos:end="65:14"><name pos:start="65:7" pos:end="65:7">s</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:14">width</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:38"><name pos:start="65:18" pos:end="65:25">get_bits</name> <argument_list pos:start="65:27" pos:end="65:38">(<argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><name pos:start="65:28" pos:end="65:33">bitbuf</name></expr></argument>, <argument pos:start="65:36" pos:end="65:37"><expr pos:start="65:36" pos:end="65:37"><literal type="number" pos:start="65:36" pos:end="65:37">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="67:7" pos:end="67:40"><expr pos:start="67:7" pos:end="67:39"><name pos:start="67:7" pos:end="67:15"><name pos:start="67:7" pos:end="67:7">s</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:15">height</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:39"><name pos:start="67:19" pos:end="67:26">get_bits</name> <argument_list pos:start="67:28" pos:end="67:39">(<argument pos:start="67:29" pos:end="67:34"><expr pos:start="67:29" pos:end="67:34"><name pos:start="67:29" pos:end="67:34">bitbuf</name></expr></argument>, <argument pos:start="67:37" pos:end="67:38"><expr pos:start="67:37" pos:end="67:38"><literal type="number" pos:start="67:37" pos:end="67:38">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



      <if_stmt pos:start="71:7" pos:end="73:18"><if pos:start="71:7" pos:end="73:18">if <condition pos:start="71:10" pos:end="71:34">(<expr pos:start="71:11" pos:end="71:33"><operator pos:start="71:11" pos:end="71:11">!</operator><name pos:start="71:12" pos:end="71:19"><name pos:start="71:12" pos:end="71:12">s</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:19">width</name></name> <operator pos:start="71:21" pos:end="71:22">||</operator> <operator pos:start="71:24" pos:end="71:24">!</operator><name pos:start="71:25" pos:end="71:33"><name pos:start="71:25" pos:end="71:25">s</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:33">height</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:18"><block_content pos:start="73:9" pos:end="73:18">

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="83:5">else <block pos:start="75:12" pos:end="83:5">{<block_content pos:start="79:7" pos:end="81:59">

      <comment type="block" pos:start="77:7" pos:end="77:40">/* get width, height from table */</comment>

      <expr_stmt pos:start="79:7" pos:end="79:57"><expr pos:start="79:7" pos:end="79:56"><name pos:start="79:7" pos:end="79:14"><name pos:start="79:7" pos:end="79:7">s</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:14">width</name></name> <operator pos:start="79:16" pos:end="79:16">=</operator> <name pos:start="79:18" pos:end="79:50"><name pos:start="79:18" pos:end="79:33">frame_size_table</name><index pos:start="79:34" pos:end="79:50">[<expr pos:start="79:35" pos:end="79:49"><name pos:start="79:35" pos:end="79:49">frame_size_code</name></expr>]</index></name><operator pos:start="79:51" pos:end="79:51">.</operator><name pos:start="79:52" pos:end="79:56">width</name></expr>;</expr_stmt>

      <expr_stmt pos:start="81:7" pos:end="81:59"><expr pos:start="81:7" pos:end="81:58"><name pos:start="81:7" pos:end="81:15"><name pos:start="81:7" pos:end="81:7">s</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:15">height</name></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:51"><name pos:start="81:19" pos:end="81:34">frame_size_table</name><index pos:start="81:35" pos:end="81:51">[<expr pos:start="81:36" pos:end="81:50"><name pos:start="81:36" pos:end="81:50">frame_size_code</name></expr>]</index></name><operator pos:start="81:52" pos:end="81:52">.</operator><name pos:start="81:53" pos:end="81:58">height</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="89:3" pos:end="89:22">/* unknown fields */</comment>

  <if_stmt pos:start="91:3" pos:end="103:3"><if pos:start="91:3" pos:end="103:3">if <condition pos:start="91:6" pos:end="91:32">(<expr pos:start="91:7" pos:end="91:31"><call pos:start="91:7" pos:end="91:26"><name pos:start="91:7" pos:end="91:14">get_bits</name> <argument_list pos:start="91:16" pos:end="91:26">(<argument pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:22">bitbuf</name></expr></argument>, <argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr></argument>)</argument_list></call> <operator pos:start="91:28" pos:end="91:29">==</operator> <literal type="number" pos:start="91:31" pos:end="91:31">1</literal></expr>)</condition> <block pos:start="91:34" pos:end="103:3">{<block_content pos:start="93:5" pos:end="101:16">

    <expr_stmt pos:start="93:5" pos:end="93:25"><expr pos:start="93:5" pos:end="93:24"><call pos:start="93:5" pos:end="93:24"><name pos:start="93:5" pos:end="93:12">get_bits</name> <argument_list pos:start="93:14" pos:end="93:24">(<argument pos:start="93:15" pos:end="93:20"><expr pos:start="93:15" pos:end="93:20"><name pos:start="93:15" pos:end="93:20">bitbuf</name></expr></argument>, <argument pos:start="93:23" pos:end="93:23"><expr pos:start="93:23" pos:end="93:23"><literal type="number" pos:start="93:23" pos:end="93:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:25"><expr pos:start="95:5" pos:end="95:24"><call pos:start="95:5" pos:end="95:24"><name pos:start="95:5" pos:end="95:12">get_bits</name> <argument_list pos:start="95:14" pos:end="95:24">(<argument pos:start="95:15" pos:end="95:20"><expr pos:start="95:15" pos:end="95:20"><name pos:start="95:15" pos:end="95:20">bitbuf</name></expr></argument>, <argument pos:start="95:23" pos:end="95:23"><expr pos:start="95:23" pos:end="95:23"><literal type="number" pos:start="95:23" pos:end="95:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="101:16"><if pos:start="99:5" pos:end="101:16">if <condition pos:start="99:8" pos:end="99:34">(<expr pos:start="99:9" pos:end="99:33"><call pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:16">get_bits</name> <argument_list pos:start="99:18" pos:end="99:28">(<argument pos:start="99:19" pos:end="99:24"><expr pos:start="99:19" pos:end="99:24"><name pos:start="99:19" pos:end="99:24">bitbuf</name></expr></argument>, <argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">2</literal></expr></argument>)</argument_list></call> <operator pos:start="99:30" pos:end="99:31">!=</operator> <literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr>)</condition><block type="pseudo" pos:start="101:7" pos:end="101:16"><block_content pos:start="101:7" pos:end="101:16">

      <return pos:start="101:7" pos:end="101:16">return <expr pos:start="101:14" pos:end="101:15"><operator pos:start="101:14" pos:end="101:14">-</operator><literal type="number" pos:start="101:15" pos:end="101:15">1</literal></expr>;</return></block_content></block></if></if_stmt>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="107:3" pos:end="125:3"><if pos:start="107:3" pos:end="125:3">if <condition pos:start="107:6" pos:end="107:32">(<expr pos:start="107:7" pos:end="107:31"><call pos:start="107:7" pos:end="107:26"><name pos:start="107:7" pos:end="107:14">get_bits</name> <argument_list pos:start="107:16" pos:end="107:26">(<argument pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:22">bitbuf</name></expr></argument>, <argument pos:start="107:25" pos:end="107:25"><expr pos:start="107:25" pos:end="107:25"><literal type="number" pos:start="107:25" pos:end="107:25">1</literal></expr></argument>)</argument_list></call> <operator pos:start="107:28" pos:end="107:29">==</operator> <literal type="number" pos:start="107:31" pos:end="107:31">1</literal></expr>)</condition> <block pos:start="107:34" pos:end="125:3">{<block_content pos:start="109:5" pos:end="123:5">

    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><call pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:12">get_bits</name> <argument_list pos:start="109:14" pos:end="109:24">(<argument pos:start="109:15" pos:end="109:20"><expr pos:start="109:15" pos:end="109:20"><name pos:start="109:15" pos:end="109:20">bitbuf</name></expr></argument>, <argument pos:start="109:23" pos:end="109:23"><expr pos:start="109:23" pos:end="109:23"><literal type="number" pos:start="109:23" pos:end="109:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:25"><expr pos:start="111:5" pos:end="111:24"><call pos:start="111:5" pos:end="111:24"><name pos:start="111:5" pos:end="111:12">get_bits</name> <argument_list pos:start="111:14" pos:end="111:24">(<argument pos:start="111:15" pos:end="111:20"><expr pos:start="111:15" pos:end="111:20"><name pos:start="111:15" pos:end="111:20">bitbuf</name></expr></argument>, <argument pos:start="111:23" pos:end="111:23"><expr pos:start="111:23" pos:end="111:23"><literal type="number" pos:start="111:23" pos:end="111:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:25"><expr pos:start="113:5" pos:end="113:24"><call pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:12">get_bits</name> <argument_list pos:start="113:14" pos:end="113:24">(<argument pos:start="113:15" pos:end="113:20"><expr pos:start="113:15" pos:end="113:20"><name pos:start="113:15" pos:end="113:20">bitbuf</name></expr></argument>, <argument pos:start="113:23" pos:end="113:23"><expr pos:start="113:23" pos:end="113:23"><literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:25"><expr pos:start="115:5" pos:end="115:24"><call pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:12">get_bits</name> <argument_list pos:start="115:14" pos:end="115:24">(<argument pos:start="115:15" pos:end="115:20"><expr pos:start="115:15" pos:end="115:20"><name pos:start="115:15" pos:end="115:20">bitbuf</name></expr></argument>, <argument pos:start="115:23" pos:end="115:23"><expr pos:start="115:23" pos:end="115:23"><literal type="number" pos:start="115:23" pos:end="115:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="119:5" pos:end="123:5">while <condition pos:start="119:11" pos:end="119:37">(<expr pos:start="119:12" pos:end="119:36"><call pos:start="119:12" pos:end="119:31"><name pos:start="119:12" pos:end="119:19">get_bits</name> <argument_list pos:start="119:21" pos:end="119:31">(<argument pos:start="119:22" pos:end="119:27"><expr pos:start="119:22" pos:end="119:27"><name pos:start="119:22" pos:end="119:27">bitbuf</name></expr></argument>, <argument pos:start="119:30" pos:end="119:30"><expr pos:start="119:30" pos:end="119:30"><literal type="number" pos:start="119:30" pos:end="119:30">1</literal></expr></argument>)</argument_list></call> <operator pos:start="119:33" pos:end="119:34">==</operator> <literal type="number" pos:start="119:36" pos:end="119:36">1</literal></expr>)</condition> <block pos:start="119:39" pos:end="123:5">{<block_content pos:start="121:7" pos:end="121:27">

      <expr_stmt pos:start="121:7" pos:end="121:27"><expr pos:start="121:7" pos:end="121:26"><call pos:start="121:7" pos:end="121:26"><name pos:start="121:7" pos:end="121:14">get_bits</name> <argument_list pos:start="121:16" pos:end="121:26">(<argument pos:start="121:17" pos:end="121:22"><expr pos:start="121:17" pos:end="121:22"><name pos:start="121:17" pos:end="121:22">bitbuf</name></expr></argument>, <argument pos:start="121:25" pos:end="121:25"><expr pos:start="121:25" pos:end="121:25"><literal type="number" pos:start="121:25" pos:end="121:25">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

  </block_content>}</block></if></if_stmt>

  

  <return pos:start="129:3" pos:end="129:11">return <expr pos:start="129:10" pos:end="129:10"><literal type="number" pos:start="129:10" pos:end="129:10">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
