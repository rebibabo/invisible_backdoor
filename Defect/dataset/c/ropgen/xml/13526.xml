<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13526.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_mb_i</name><parameter_list pos:start="1:23" pos:end="1:51">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">AVSContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">h</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:50">cbp_code</name></decl></parameter>)</parameter_list> <block pos:start="1:53" pos:end="129:1">{<block_content pos:start="3:5" pos:end="127:13">

    <decl_stmt pos:start="3:5" pos:end="3:33"><decl pos:start="3:5" pos:end="3:32"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">GetBitContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:21">gb</name> <init pos:start="3:23" pos:end="3:32">= <expr pos:start="3:25" pos:end="3:32"><operator pos:start="3:25" pos:end="3:25">&amp;</operator><name pos:start="3:26" pos:end="3:32"><name pos:start="3:26" pos:end="3:26">h</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:29">s</name><operator pos:start="3:30" pos:end="3:30">.</operator><name pos:start="3:31" pos:end="3:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">block</name></decl>, <decl pos:start="5:16" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:27">pred_mode_uv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:19"><name pos:start="7:13" pos:end="7:15">top</name><index pos:start="7:16" pos:end="7:19">[<expr pos:start="7:17" pos:end="7:18"><literal type="number" pos:start="7:17" pos:end="7:18">18</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">left</name> <init pos:start="9:19" pos:end="9:24">= <expr pos:start="9:21" pos:end="9:24"><name pos:start="9:21" pos:end="9:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:19">ff_cavs_init_mb</name><argument_list pos:start="15:20" pos:end="15:22">(<argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:48">/* get intra prediction modes from stream */</comment>

    <for pos:start="21:5" pos:end="49:5">for<control pos:start="21:8" pos:end="21:32">(<init pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:13">block</name><operator pos:start="21:14" pos:end="21:14">=</operator><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>;</init><condition pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:21">block</name><operator pos:start="21:22" pos:end="21:22">&lt;</operator><literal type="number" pos:start="21:23" pos:end="21:23">4</literal></expr>;</condition><incr pos:start="21:25" pos:end="21:31"><expr pos:start="21:25" pos:end="21:31"><name pos:start="21:25" pos:end="21:29">block</name><operator pos:start="21:30" pos:end="21:31">++</operator></expr></incr>)</control> <block pos:start="21:34" pos:end="49:5">{<block_content pos:start="23:9" pos:end="47:39">

        <decl_stmt pos:start="23:9" pos:end="23:27"><decl pos:start="23:9" pos:end="23:14"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:14">nA</name></decl>,<decl pos:start="23:16" pos:end="23:17"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:16" pos:end="23:17">nB</name></decl>,<decl pos:start="23:19" pos:end="23:26"><type ref="prev" pos:start="23:9" pos:end="23:11"/><name pos:start="23:19" pos:end="23:26">predpred</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:41"><decl pos:start="25:9" pos:end="25:40"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">pos</name> <init pos:start="25:17" pos:end="25:40">= <expr pos:start="25:19" pos:end="25:40"><name pos:start="25:19" pos:end="25:40"><name pos:start="25:19" pos:end="25:33">ff_cavs_scan3x3</name><index pos:start="25:34" pos:end="25:40">[<expr pos:start="25:35" pos:end="25:39"><name pos:start="25:35" pos:end="25:39">block</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:10">nA</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:34"><name pos:start="29:14" pos:end="29:14">h</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:27">pred_mode_Y</name><index pos:start="29:28" pos:end="29:34">[<expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:31">pos</name><operator pos:start="29:32" pos:end="29:32">-</operator><literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:10">nB</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:34"><name pos:start="31:14" pos:end="31:14">h</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:27">pred_mode_Y</name><index pos:start="31:28" pos:end="31:34">[<expr pos:start="31:29" pos:end="31:33"><name pos:start="31:29" pos:end="31:31">pos</name><operator pos:start="31:32" pos:end="31:32">-</operator><literal type="number" pos:start="31:33" pos:end="31:33">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:16">predpred</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:31"><name pos:start="33:20" pos:end="33:24">FFMIN</name><argument_list pos:start="33:25" pos:end="33:31">(<argument pos:start="33:26" pos:end="33:27"><expr pos:start="33:26" pos:end="33:27"><name pos:start="33:26" pos:end="33:27">nA</name></expr></argument>,<argument pos:start="33:29" pos:end="33:30"><expr pos:start="33:29" pos:end="33:30"><name pos:start="33:29" pos:end="33:30">nB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:34"><if pos:start="35:9" pos:end="37:34">if<condition pos:start="35:11" pos:end="35:33">(<expr pos:start="35:12" pos:end="35:32"><name pos:start="35:12" pos:end="35:19">predpred</name> <operator pos:start="35:21" pos:end="35:22">==</operator> <name pos:start="35:24" pos:end="35:32">NOT_AVAIL</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:34"><block_content pos:start="37:13" pos:end="37:34"> <comment type="line" pos:start="35:35" pos:end="35:63">// if either is not available</comment>

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:20">predpred</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:33">INTRA_L_LP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="45:9"><if pos:start="39:9" pos:end="45:9">if<condition pos:start="39:11" pos:end="39:26">(<expr pos:start="39:12" pos:end="39:25"><operator pos:start="39:12" pos:end="39:12">!</operator><call pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:21">get_bits1</name><argument_list pos:start="39:22" pos:end="39:25">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="39:27" pos:end="45:9">{<block_content pos:start="41:13" pos:end="43:57">

            <decl_stmt pos:start="41:13" pos:end="41:42"><decl pos:start="41:13" pos:end="41:41"><type pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:15">int</name></type> <name pos:start="41:17" pos:end="41:24">rem_mode</name><init pos:start="41:25" pos:end="41:41">= <expr pos:start="41:27" pos:end="41:41"><call pos:start="41:27" pos:end="41:41"><name pos:start="41:27" pos:end="41:34">get_bits</name><argument_list pos:start="41:35" pos:end="41:41">(<argument pos:start="41:36" pos:end="41:37"><expr pos:start="41:36" pos:end="41:37"><name pos:start="41:36" pos:end="41:37">gb</name></expr></argument>, <argument pos:start="41:40" pos:end="41:40"><expr pos:start="41:40" pos:end="41:40"><literal type="number" pos:start="41:40" pos:end="41:40">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:57"><expr pos:start="43:13" pos:end="43:56"><name pos:start="43:13" pos:end="43:20">predpred</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:31">rem_mode</name> <operator pos:start="43:33" pos:end="43:33">+</operator> <operator pos:start="43:35" pos:end="43:35">(</operator><name pos:start="43:36" pos:end="43:43">rem_mode</name> <operator pos:start="43:45" pos:end="43:46">&gt;=</operator> <name pos:start="43:48" pos:end="43:55">predpred</name><operator pos:start="43:56" pos:end="43:56">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:39"><expr pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:9">h</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:22">pred_mode_Y</name><index pos:start="47:23" pos:end="47:27">[<expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">pos</name></expr>]</index></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:38">predpred</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:16">pred_mode_uv</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <call pos:start="51:20" pos:end="51:36"><name pos:start="51:20" pos:end="51:32">get_ue_golomb</name><argument_list pos:start="51:33" pos:end="51:36">(<argument pos:start="51:34" pos:end="51:35"><expr pos:start="51:34" pos:end="51:35"><name pos:start="51:34" pos:end="51:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if<condition pos:start="53:7" pos:end="53:24">(<expr pos:start="53:8" pos:end="53:23"><name pos:start="53:8" pos:end="53:19">pred_mode_uv</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <literal type="number" pos:start="53:23" pos:end="53:23">6</literal></expr>)</condition> <block pos:start="53:26" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:18">

        <expr_stmt pos:start="55:9" pos:end="55:77"><expr pos:start="55:9" pos:end="55:76"><call pos:start="55:9" pos:end="55:76"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:76">(<argument pos:start="55:16" pos:end="55:25"><expr pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:16">h</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:25">avctx</name></name></expr></argument>, <argument pos:start="55:28" pos:end="55:39"><expr pos:start="55:28" pos:end="55:39"><name pos:start="55:28" pos:end="55:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:42" pos:end="55:75"><expr pos:start="55:42" pos:end="55:75"><literal type="string" pos:start="55:42" pos:end="55:75">"illegal intra chroma pred mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:18">return <expr pos:start="57:16" pos:end="57:17"><operator pos:start="57:16" pos:end="57:16">-</operator><literal type="number" pos:start="57:17" pos:end="57:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><call pos:start="61:5" pos:end="61:41"><name pos:start="61:5" pos:end="61:23">ff_cavs_modify_mb_i</name><argument_list pos:start="61:24" pos:end="61:41">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">h</name></expr></argument>, <argument pos:start="61:28" pos:end="61:40"><expr pos:start="61:28" pos:end="61:40"><operator pos:start="61:28" pos:end="61:28">&amp;</operator><name pos:start="61:29" pos:end="61:40">pred_mode_uv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:33">/* get coded block pattern */</comment>

    <if_stmt pos:start="67:5" pos:end="69:37"><if pos:start="67:5" pos:end="69:37">if<condition pos:start="67:7" pos:end="67:40">(<expr pos:start="67:8" pos:end="67:39"><name pos:start="67:8" pos:end="67:18"><name pos:start="67:8" pos:end="67:8">h</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:18">pic_type</name></name> <operator pos:start="67:20" pos:end="67:21">==</operator> <name pos:start="67:23" pos:end="67:39">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:37"><block_content pos:start="69:9" pos:end="69:37">

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:16">cbp_code</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:36"><name pos:start="69:20" pos:end="69:32">get_ue_golomb</name><argument_list pos:start="69:33" pos:end="69:36">(<argument pos:start="69:34" pos:end="69:35"><expr pos:start="69:34" pos:end="69:35"><name pos:start="69:34" pos:end="69:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if<condition pos:start="71:7" pos:end="71:21">(<expr pos:start="71:8" pos:end="71:20"><name pos:start="71:8" pos:end="71:15">cbp_code</name> <operator pos:start="71:17" pos:end="71:17">&gt;</operator> <literal type="number" pos:start="71:19" pos:end="71:20">63</literal></expr>)</condition><block pos:start="71:22" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:64"><expr pos:start="73:9" pos:end="73:63"><call pos:start="73:9" pos:end="73:63"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:63">(<argument pos:start="73:16" pos:end="73:25"><expr pos:start="73:16" pos:end="73:25"><name pos:start="73:16" pos:end="73:25"><name pos:start="73:16" pos:end="73:16">h</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:25">avctx</name></name></expr></argument>, <argument pos:start="73:28" pos:end="73:39"><expr pos:start="73:28" pos:end="73:39"><name pos:start="73:28" pos:end="73:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:42" pos:end="73:62"><expr pos:start="73:42" pos:end="73:62"><literal type="string" pos:start="73:42" pos:end="73:62">"illegal intra cbp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:10"><name pos:start="79:5" pos:end="79:5">h</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:10">cbp</name></name> <operator pos:start="79:12" pos:end="79:12">=</operator> <name pos:start="79:14" pos:end="79:33"><name pos:start="79:14" pos:end="79:20">cbp_tab</name><index pos:start="79:21" pos:end="79:30">[<expr pos:start="79:22" pos:end="79:29"><name pos:start="79:22" pos:end="79:29">cbp_code</name></expr>]</index><index pos:start="79:31" pos:end="79:33">[<expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:49"><if pos:start="81:5" pos:end="83:49">if<condition pos:start="81:7" pos:end="81:30">(<expr pos:start="81:8" pos:end="81:29"><name pos:start="81:8" pos:end="81:13"><name pos:start="81:8" pos:end="81:8">h</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:13">cbp</name></name> <operator pos:start="81:15" pos:end="81:16">&amp;&amp;</operator> <operator pos:start="81:18" pos:end="81:18">!</operator><name pos:start="81:19" pos:end="81:29"><name pos:start="81:19" pos:end="81:19">h</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:29">qp_fixed</name></name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:49"><block_content pos:start="83:9" pos:end="83:49">

        <expr_stmt pos:start="83:9" pos:end="83:49"><expr pos:start="83:9" pos:end="83:48"><name pos:start="83:9" pos:end="83:13"><name pos:start="83:9" pos:end="83:9">h</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:13">qp</name></name> <operator pos:start="83:15" pos:end="83:15">=</operator> <operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">h</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:22">qp</name></name> <operator pos:start="83:24" pos:end="83:24">+</operator> <call pos:start="83:26" pos:end="83:42"><name pos:start="83:26" pos:end="83:38">get_se_golomb</name><argument_list pos:start="83:39" pos:end="83:42">(<argument pos:start="83:40" pos:end="83:41"><expr pos:start="83:40" pos:end="83:41"><name pos:start="83:40" pos:end="83:41">gb</name></expr></argument>)</argument_list></call><operator pos:start="83:43" pos:end="83:43">)</operator> <operator pos:start="83:45" pos:end="83:45">&amp;</operator> <literal type="number" pos:start="83:47" pos:end="83:48">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="83:51" pos:end="83:60">//qp_delta</comment>



    <comment type="block" pos:start="87:5" pos:end="87:78">/* luma intra prediction interleaved with residual decode/transform/add */</comment>

    <for pos:start="89:5" pos:end="103:5">for<control pos:start="89:8" pos:end="89:32">(<init pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:13">block</name><operator pos:start="89:14" pos:end="89:14">=</operator><literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>;</init><condition pos:start="89:17" pos:end="89:24"><expr pos:start="89:17" pos:end="89:23"><name pos:start="89:17" pos:end="89:21">block</name><operator pos:start="89:22" pos:end="89:22">&lt;</operator><literal type="number" pos:start="89:23" pos:end="89:23">4</literal></expr>;</condition><incr pos:start="89:25" pos:end="89:31"><expr pos:start="89:25" pos:end="89:31"><name pos:start="89:25" pos:end="89:29">block</name><operator pos:start="89:30" pos:end="89:31">++</operator></expr></incr>)</control> <block pos:start="89:34" pos:end="103:5">{<block_content pos:start="91:9" pos:end="101:80">

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:9">d</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <name pos:start="91:13" pos:end="91:17"><name pos:start="91:13" pos:end="91:13">h</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:17">cy</name></name> <operator pos:start="91:19" pos:end="91:19">+</operator> <name pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:21">h</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:32">luma_scan</name><index pos:start="91:33" pos:end="91:39">[<expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38">block</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:59"><expr pos:start="93:9" pos:end="93:58"><call pos:start="93:9" pos:end="93:58"><name pos:start="93:9" pos:end="93:36">ff_cavs_load_intra_pred_luma</name><argument_list pos:start="93:37" pos:end="93:58">(<argument pos:start="93:38" pos:end="93:38"><expr pos:start="93:38" pos:end="93:38"><name pos:start="93:38" pos:end="93:38">h</name></expr></argument>, <argument pos:start="93:41" pos:end="93:43"><expr pos:start="93:41" pos:end="93:43"><name pos:start="93:41" pos:end="93:43">top</name></expr></argument>, <argument pos:start="93:46" pos:end="93:50"><expr pos:start="93:46" pos:end="93:50"><operator pos:start="93:46" pos:end="93:46">&amp;</operator><name pos:start="93:47" pos:end="93:50">left</name></expr></argument>, <argument pos:start="93:53" pos:end="93:57"><expr pos:start="93:53" pos:end="93:57"><name pos:start="93:53" pos:end="93:57">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:40"><expr pos:start="95:9" pos:end="97:39"><name pos:start="95:9" pos:end="95:63"><name pos:start="95:9" pos:end="95:9">h</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:23">intra_pred_l</name><index pos:start="95:24" pos:end="95:63">[<expr pos:start="95:25" pos:end="95:62"><name pos:start="95:25" pos:end="95:62"><name pos:start="95:25" pos:end="95:25">h</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:38">pred_mode_Y</name><index pos:start="95:39" pos:end="95:62">[<expr pos:start="95:40" pos:end="95:61"><name pos:start="95:40" pos:end="95:61"><name pos:start="95:40" pos:end="95:54">ff_cavs_scan3x3</name><index pos:start="95:55" pos:end="95:61">[<expr pos:start="95:56" pos:end="95:60"><name pos:start="95:56" pos:end="95:60">block</name></expr>]</index></name></expr>]</index></name></expr>]</index></name>

            <operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:14">d</name><operator pos:start="97:15" pos:end="97:15">,</operator> <name pos:start="97:17" pos:end="97:19">top</name><operator pos:start="97:20" pos:end="97:20">,</operator> <name pos:start="97:22" pos:end="97:25">left</name><operator pos:start="97:26" pos:end="97:26">,</operator> <name pos:start="97:28" pos:end="97:38"><name pos:start="97:28" pos:end="97:28">h</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:38">l_stride</name></name><operator pos:start="97:39" pos:end="97:39">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:80"><if pos:start="99:9" pos:end="101:80">if<condition pos:start="99:11" pos:end="99:31">(<expr pos:start="99:12" pos:end="99:30"><name pos:start="99:12" pos:end="99:17"><name pos:start="99:12" pos:end="99:12">h</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:17">cbp</name></name> <operator pos:start="99:19" pos:end="99:19">&amp;</operator> <operator pos:start="99:21" pos:end="99:21">(</operator><literal type="number" pos:start="99:22" pos:end="99:22">1</literal><operator pos:start="99:23" pos:end="99:24">&lt;&lt;</operator><name pos:start="99:25" pos:end="99:29">block</name><operator pos:start="99:30" pos:end="99:30">)</operator></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:80"><block_content pos:start="101:13" pos:end="101:80">

            <expr_stmt pos:start="101:13" pos:end="101:80"><expr pos:start="101:13" pos:end="101:79"><call pos:start="101:13" pos:end="101:79"><name pos:start="101:13" pos:end="101:33">decode_residual_block</name><argument_list pos:start="101:34" pos:end="101:79">(<argument pos:start="101:35" pos:end="101:35"><expr pos:start="101:35" pos:end="101:35"><name pos:start="101:35" pos:end="101:35">h</name></expr></argument>,<argument pos:start="101:37" pos:end="101:38"><expr pos:start="101:37" pos:end="101:38"><name pos:start="101:37" pos:end="101:38">gb</name></expr></argument>,<argument pos:start="101:40" pos:end="101:56"><expr pos:start="101:40" pos:end="101:56"><name pos:start="101:40" pos:end="101:56">ff_cavs_intra_dec</name></expr></argument>,<argument pos:start="101:58" pos:end="101:58"><expr pos:start="101:58" pos:end="101:58"><literal type="number" pos:start="101:58" pos:end="101:58">1</literal></expr></argument>,<argument pos:start="101:60" pos:end="101:64"><expr pos:start="101:60" pos:end="101:64"><name pos:start="101:60" pos:end="101:64"><name pos:start="101:60" pos:end="101:60">h</name><operator pos:start="101:61" pos:end="101:62">-&gt;</operator><name pos:start="101:63" pos:end="101:64">qp</name></name></expr></argument>,<argument pos:start="101:66" pos:end="101:66"><expr pos:start="101:66" pos:end="101:66"><name pos:start="101:66" pos:end="101:66">d</name></expr></argument>,<argument pos:start="101:68" pos:end="101:78"><expr pos:start="101:68" pos:end="101:78"><name pos:start="101:68" pos:end="101:78"><name pos:start="101:68" pos:end="101:68">h</name><operator pos:start="101:69" pos:end="101:70">-&gt;</operator><name pos:start="101:71" pos:end="101:78">l_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="107:5" pos:end="107:33">/* chroma intra prediction */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><call pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:34">ff_cavs_load_intra_pred_chroma</name><argument_list pos:start="109:35" pos:end="109:37">(<argument pos:start="109:36" pos:end="109:36"><expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="113:65"><expr pos:start="111:5" pos:end="113:64"><name pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:5">h</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:19">intra_pred_c</name><index pos:start="111:20" pos:end="111:33">[<expr pos:start="111:21" pos:end="111:32"><name pos:start="111:21" pos:end="111:32">pred_mode_uv</name></expr>]</index></name><operator pos:start="111:34" pos:end="111:34">(</operator><name pos:start="111:35" pos:end="111:39"><name pos:start="111:35" pos:end="111:35">h</name><operator pos:start="111:36" pos:end="111:37">-&gt;</operator><name pos:start="111:38" pos:end="111:39">cu</name></name><operator pos:start="111:40" pos:end="111:40">,</operator> <operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:68"><name pos:start="111:43" pos:end="111:43">h</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:57">top_border_u</name><index pos:start="111:58" pos:end="111:68">[<expr pos:start="111:59" pos:end="111:67"><name pos:start="111:59" pos:end="111:64"><name pos:start="111:59" pos:end="111:59">h</name><operator pos:start="111:60" pos:end="111:61">-&gt;</operator><name pos:start="111:62" pos:end="111:64">mbx</name></name><operator pos:start="111:65" pos:end="111:65">*</operator><literal type="number" pos:start="111:66" pos:end="111:67">10</literal></expr>]</index></name><operator pos:start="111:69" pos:end="111:69">,</operator>

                                  <name pos:start="113:35" pos:end="113:50"><name pos:start="113:35" pos:end="113:35">h</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:50">left_border_u</name></name><operator pos:start="113:51" pos:end="113:51">,</operator> <name pos:start="113:53" pos:end="113:63"><name pos:start="113:53" pos:end="113:53">h</name><operator pos:start="113:54" pos:end="113:55">-&gt;</operator><name pos:start="113:56" pos:end="113:63">c_stride</name></name><operator pos:start="113:64" pos:end="113:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="117:65"><expr pos:start="115:5" pos:end="117:64"><name pos:start="115:5" pos:end="115:33"><name pos:start="115:5" pos:end="115:5">h</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:19">intra_pred_c</name><index pos:start="115:20" pos:end="115:33">[<expr pos:start="115:21" pos:end="115:32"><name pos:start="115:21" pos:end="115:32">pred_mode_uv</name></expr>]</index></name><operator pos:start="115:34" pos:end="115:34">(</operator><name pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:35">h</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:39">cv</name></name><operator pos:start="115:40" pos:end="115:40">,</operator> <operator pos:start="115:42" pos:end="115:42">&amp;</operator><name pos:start="115:43" pos:end="115:68"><name pos:start="115:43" pos:end="115:43">h</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:57">top_border_v</name><index pos:start="115:58" pos:end="115:68">[<expr pos:start="115:59" pos:end="115:67"><name pos:start="115:59" pos:end="115:64"><name pos:start="115:59" pos:end="115:59">h</name><operator pos:start="115:60" pos:end="115:61">-&gt;</operator><name pos:start="115:62" pos:end="115:64">mbx</name></name><operator pos:start="115:65" pos:end="115:65">*</operator><literal type="number" pos:start="115:66" pos:end="115:67">10</literal></expr>]</index></name><operator pos:start="115:69" pos:end="115:69">,</operator>

                                  <name pos:start="117:35" pos:end="117:50"><name pos:start="117:35" pos:end="117:35">h</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:50">left_border_v</name></name><operator pos:start="117:51" pos:end="117:51">,</operator> <name pos:start="117:53" pos:end="117:63"><name pos:start="117:53" pos:end="117:53">h</name><operator pos:start="117:54" pos:end="117:55">-&gt;</operator><name pos:start="117:56" pos:end="117:63">c_stride</name></name><operator pos:start="117:64" pos:end="117:64">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:30"><expr pos:start="121:5" pos:end="121:29"><call pos:start="121:5" pos:end="121:29"><name pos:start="121:5" pos:end="121:26">decode_residual_chroma</name><argument_list pos:start="121:27" pos:end="121:29">(<argument pos:start="121:28" pos:end="121:28"><expr pos:start="121:28" pos:end="121:28"><name pos:start="121:28" pos:end="121:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:28"><expr pos:start="123:5" pos:end="123:27"><call pos:start="123:5" pos:end="123:27"><name pos:start="123:5" pos:end="123:18">ff_cavs_filter</name><argument_list pos:start="123:19" pos:end="123:27">(<argument pos:start="123:20" pos:end="123:20"><expr pos:start="123:20" pos:end="123:20"><name pos:start="123:20" pos:end="123:20">h</name></expr></argument>,<argument pos:start="123:22" pos:end="123:26"><expr pos:start="123:22" pos:end="123:26"><name pos:start="123:22" pos:end="123:26">I_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:20"><expr pos:start="125:5" pos:end="125:19"><call pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:16">set_mv_intra</name><argument_list pos:start="125:17" pos:end="125:19">(<argument pos:start="125:18" pos:end="125:18"><expr pos:start="125:18" pos:end="125:18"><name pos:start="125:18" pos:end="125:18">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:13">return <expr pos:start="127:12" pos:end="127:12"><literal type="number" pos:start="127:12" pos:end="127:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
