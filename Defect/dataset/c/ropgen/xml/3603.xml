<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3603.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">dilate_init</name><parameter_list pos:start="1:31" pos:end="1:70">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:46">AVFilterContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">args</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OCVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:29">= <expr pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:29">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DilateContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:25">dilate</name> <init pos:start="7:27" pos:end="7:35">= <expr pos:start="7:29" pos:end="7:35"><name pos:start="7:29" pos:end="7:35"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:29"><name pos:start="9:10" pos:end="9:27">default_kernel_str</name><index pos:start="9:28" pos:end="9:29">[]</index></name> <init pos:start="9:31" pos:end="9:46">= <expr pos:start="9:33" pos:end="9:46"><literal type="string" pos:start="9:33" pos:end="9:46">"3x3+0x0/rect"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:20">kernel_str</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:19">buf</name> <init pos:start="13:21" pos:end="13:26">= <expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">args</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:10">dilate</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:25">nb_iterations</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <literal type="number" pos:start="19:29" pos:end="19:29">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:45"><if pos:start="23:5" pos:end="25:45">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><name pos:start="23:9" pos:end="23:12">args</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:45"><block_content pos:start="25:9" pos:end="25:45">

        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:18">kernel_str</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:44"><name pos:start="25:22" pos:end="25:33">av_get_token</name><argument_list pos:start="25:34" pos:end="25:44">(<argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><operator pos:start="25:35" pos:end="25:35">&amp;</operator><name pos:start="25:36" pos:end="25:38">buf</name></expr></argument>, <argument pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><literal type="string" pos:start="25:41" pos:end="25:43">"|"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:19"><if pos:start="27:5" pos:end="33:19">if <condition pos:start="27:8" pos:end="31:45">(<expr pos:start="27:9" pos:end="31:44"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="31:39"><name pos:start="27:16" pos:end="27:34">parse_iplconvkernel</name><argument_list pos:start="27:35" pos:end="31:39">(<argument pos:start="27:36" pos:end="27:50"><expr pos:start="27:36" pos:end="27:50"><operator pos:start="27:36" pos:end="27:36">&amp;</operator><name pos:start="27:37" pos:end="27:50"><name pos:start="27:37" pos:end="27:42">dilate</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:50">kernel</name></name></expr></argument>,

                                   <argument pos:start="29:36" pos:end="29:80"><expr pos:start="29:36" pos:end="29:80"><ternary pos:start="29:36" pos:end="29:80"><condition pos:start="29:36" pos:end="29:48"><expr pos:start="29:36" pos:end="29:46"><operator pos:start="29:36" pos:end="29:36">*</operator><name pos:start="29:37" pos:end="29:46">kernel_str</name></expr> ?</condition><then pos:start="29:50" pos:end="29:59"> <expr pos:start="29:50" pos:end="29:59"><name pos:start="29:50" pos:end="29:59">kernel_str</name></expr> </then><else pos:start="29:61" pos:end="29:80">: <expr pos:start="29:63" pos:end="29:80"><name pos:start="29:63" pos:end="29:80">default_kernel_str</name></expr></else></ternary></expr></argument>,

                                   <argument pos:start="31:36" pos:end="31:38"><expr pos:start="31:36" pos:end="31:38"><name pos:start="31:36" pos:end="31:38">ctx</name></expr></argument>)</argument_list></call><operator pos:start="31:40" pos:end="31:40">)</operator> <operator pos:start="31:42" pos:end="31:42">&lt;</operator> <literal type="number" pos:start="31:44" pos:end="31:44">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:19"><block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:11">av_free</name><argument_list pos:start="35:12" pos:end="35:23">(<argument pos:start="35:13" pos:end="35:22"><expr pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:22">kernel_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><call pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:10">sscanf</name><argument_list pos:start="39:11" pos:end="39:46">(<argument pos:start="39:12" pos:end="39:14"><expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">buf</name></expr></argument>, <argument pos:start="39:17" pos:end="39:21"><expr pos:start="39:17" pos:end="39:21"><literal type="string" pos:start="39:17" pos:end="39:21">"|%d"</literal></expr></argument>, <argument pos:start="39:24" pos:end="39:45"><expr pos:start="39:24" pos:end="39:45"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:45"><name pos:start="39:25" pos:end="39:30">dilate</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:45">nb_iterations</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:77"><expr pos:start="41:5" pos:end="41:76"><call pos:start="41:5" pos:end="41:76"><name pos:start="41:5" pos:end="41:10">av_log</name><argument_list pos:start="41:11" pos:end="41:76">(<argument pos:start="41:12" pos:end="41:14"><expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">ctx</name></expr></argument>, <argument pos:start="41:17" pos:end="41:30"><expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:30">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="41:33" pos:end="41:52"><expr pos:start="41:33" pos:end="41:52"><literal type="string" pos:start="41:33" pos:end="41:52">"iterations_nb:%d\n"</literal></expr></argument>, <argument pos:start="41:55" pos:end="41:75"><expr pos:start="41:55" pos:end="41:75"><name pos:start="41:55" pos:end="41:75"><name pos:start="41:55" pos:end="41:60">dilate</name><operator pos:start="41:61" pos:end="41:62">-&gt;</operator><name pos:start="41:63" pos:end="41:75">nb_iterations</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:35">(<expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:14">dilate</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:29">nb_iterations</name></name> <operator pos:start="43:31" pos:end="43:32">&lt;=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr>)</condition> <block pos:start="43:37" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:31">

        <expr_stmt pos:start="45:9" pos:end="47:38"><expr pos:start="45:9" pos:end="47:37"><call pos:start="45:9" pos:end="47:37"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="47:37">(<argument pos:start="45:16" pos:end="45:18"><expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">ctx</name></expr></argument>, <argument pos:start="45:21" pos:end="45:32"><expr pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:35" pos:end="45:87"><expr pos:start="45:35" pos:end="45:87"><literal type="string" pos:start="45:35" pos:end="45:87">"Invalid non-positive value '%d' for nb_iterations\n"</literal></expr></argument>,

               <argument pos:start="47:16" pos:end="47:36"><expr pos:start="47:16" pos:end="47:36"><name pos:start="47:16" pos:end="47:36"><name pos:start="47:16" pos:end="47:21">dilate</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:36">nb_iterations</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
