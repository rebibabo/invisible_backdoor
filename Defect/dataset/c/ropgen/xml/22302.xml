<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22302.c" pos:tabs="8"><function pos:start="1:1" pos:end="38:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">h264_set_parameter_from_sps</name><parameter_list pos:start="1:39" pos:end="1:54">(<parameter pos:start="1:40" pos:end="1:53"><decl pos:start="1:40" pos:end="1:53"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:50">H264Context</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">h</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="38:13">{<block_content pos:start="3:5" pos:end="38:13">
    <if_stmt pos:start="3:5" pos:end="38:13"><if pos:start="3:5" pos:end="38:13">if <condition pos:start="3:8" pos:end="5:37">(<expr pos:start="3:9" pos:end="5:36"><name pos:start="3:9" pos:end="3:16"><name pos:start="3:9" pos:end="3:9">h</name><operator pos:start="3:10" pos:end="3:11">-&gt;</operator><name pos:start="3:12" pos:end="3:16">flags</name></name> <operator pos:start="3:18" pos:end="3:18">&amp;</operator> <name pos:start="3:20" pos:end="3:39">CODEC_FLAG_LOW_DELAY</name> <operator pos:start="3:41" pos:end="3:42">||</operator>
        <operator pos:start="4:9" pos:end="4:9">(</operator><name pos:start="4:10" pos:end="4:42"><name pos:start="4:10" pos:end="4:10">h</name><operator pos:start="4:11" pos:end="4:12">-&gt;</operator><name pos:start="4:13" pos:end="4:15">sps</name><operator pos:start="4:16" pos:end="4:16">.</operator><name pos:start="4:17" pos:end="4:42">bitstream_restriction_flag</name></name> <operator pos:start="4:44" pos:end="4:45">&amp;&amp;</operator>
         <operator pos:start="5:10" pos:end="5:10">!</operator><name pos:start="5:11" pos:end="5:35"><name pos:start="5:11" pos:end="5:11">h</name><operator pos:start="5:12" pos:end="5:13">-&gt;</operator><name pos:start="5:14" pos:end="5:16">sps</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:35">num_reorder_frames</name></name><operator pos:start="5:36" pos:end="5:36">)</operator></expr>)</condition> <block pos:start="5:39" pos:end="38:13">{<block_content pos:start="6:9" pos:end="38:13">
        <if_stmt pos:start="6:9" pos:end="10:29"><if pos:start="6:9" pos:end="8:69">if <condition pos:start="6:12" pos:end="6:60">(<expr pos:start="6:13" pos:end="6:59"><name pos:start="6:13" pos:end="6:34"><name pos:start="6:13" pos:end="6:13">h</name><operator pos:start="6:14" pos:end="6:15">-&gt;</operator><name pos:start="6:16" pos:end="6:20">avctx</name><operator pos:start="6:21" pos:end="6:22">-&gt;</operator><name pos:start="6:23" pos:end="6:34">has_b_frames</name></name> <operator pos:start="6:36" pos:end="6:36">&gt;</operator> <literal type="number" pos:start="6:38" pos:end="6:38">1</literal> <operator pos:start="6:40" pos:end="6:41">||</operator> <name pos:start="6:43" pos:end="6:59"><name pos:start="6:43" pos:end="6:43">h</name><operator pos:start="6:44" pos:end="6:45">-&gt;</operator><name pos:start="6:46" pos:end="6:56">delayed_pic</name><index pos:start="6:57" pos:end="6:59">[<expr pos:start="6:58" pos:end="6:58"><literal type="number" pos:start="6:58" pos:end="6:58">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="7:13" pos:end="8:69"><block_content pos:start="7:13" pos:end="8:69">
            <expr_stmt pos:start="7:13" pos:end="8:69"><expr pos:start="7:13" pos:end="8:68"><call pos:start="7:13" pos:end="8:68"><name pos:start="7:13" pos:end="7:18">av_log</name><argument_list pos:start="7:19" pos:end="8:68">(<argument pos:start="7:20" pos:end="7:27"><expr pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:27"><name pos:start="7:20" pos:end="7:20">h</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:27">avctx</name></name></expr></argument>, <argument pos:start="7:30" pos:end="7:43"><expr pos:start="7:30" pos:end="7:43"><name pos:start="7:30" pos:end="7:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="7:46" pos:end="8:67"><expr pos:start="7:46" pos:end="8:67"><literal type="string" pos:start="7:46" pos:end="7:68">"Delayed frames seen. "</literal>
                   <literal type="string" pos:start="8:20" pos:end="8:67">"Reenabling low delay requires a codec flush.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="9:9" pos:end="10:29">else<block type="pseudo" pos:start="10:13" pos:end="10:29"><block_content pos:start="10:13" pos:end="10:29">
            <expr_stmt pos:start="10:13" pos:end="10:29"><expr pos:start="10:13" pos:end="10:28"><name pos:start="10:13" pos:end="10:24"><name pos:start="10:13" pos:end="10:13">h</name><operator pos:start="10:14" pos:end="10:15">-&gt;</operator><name pos:start="10:16" pos:end="10:24">low_delay</name></name> <operator pos:start="10:26" pos:end="10:26">=</operator> <literal type="number" pos:start="10:28" pos:end="10:28">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="11:5" pos:end="12:47"><if pos:start="11:5" pos:end="12:47">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:9">h</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">avctx</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:30">has_b_frames</name></name> <operator pos:start="11:32" pos:end="11:32">&lt;</operator> <literal type="number" pos:start="11:34" pos:end="11:34">2</literal></expr>)</condition><block type="pseudo" pos:start="12:9" pos:end="12:47"><block_content pos:start="12:9" pos:end="12:47">
        <expr_stmt pos:start="12:9" pos:end="12:47"><expr pos:start="12:9" pos:end="12:46"><name pos:start="12:9" pos:end="12:30"><name pos:start="12:9" pos:end="12:9">h</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:16">avctx</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:30">has_b_frames</name></name> <operator pos:start="12:32" pos:end="12:32">=</operator> <operator pos:start="12:34" pos:end="12:34">!</operator><name pos:start="12:35" pos:end="12:46"><name pos:start="12:35" pos:end="12:35">h</name><operator pos:start="12:36" pos:end="12:37">-&gt;</operator><name pos:start="12:38" pos:end="12:46">low_delay</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="13:5" pos:end="38:13"><if pos:start="13:5" pos:end="38:13">if <condition pos:start="13:8" pos:end="14:66">(<expr pos:start="13:9" pos:end="14:65"><name pos:start="13:9" pos:end="13:37"><name pos:start="13:9" pos:end="13:9">h</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:16">avctx</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:37">bits_per_raw_sample</name></name> <operator pos:start="13:39" pos:end="13:40">!=</operator> <name pos:start="13:42" pos:end="13:62"><name pos:start="13:42" pos:end="13:42">h</name><operator pos:start="13:43" pos:end="13:44">-&gt;</operator><name pos:start="13:45" pos:end="13:47">sps</name><operator pos:start="13:48" pos:end="13:48">.</operator><name pos:start="13:49" pos:end="13:62">bit_depth_luma</name></name> <operator pos:start="13:64" pos:end="13:65">||</operator>
        <name pos:start="14:9" pos:end="14:32"><name pos:start="14:9" pos:end="14:9">h</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:32">cur_chroma_format_idc</name></name>      <operator pos:start="14:39" pos:end="14:40">!=</operator> <name pos:start="14:42" pos:end="14:65"><name pos:start="14:42" pos:end="14:42">h</name><operator pos:start="14:43" pos:end="14:44">-&gt;</operator><name pos:start="14:45" pos:end="14:47">sps</name><operator pos:start="14:48" pos:end="14:48">.</operator><name pos:start="14:49" pos:end="14:65">chroma_format_idc</name></name></expr>)</condition> <block pos:start="14:68" pos:end="38:13">{<block_content pos:start="15:9" pos:end="38:13">
        <if_stmt pos:start="15:9" pos:end="38:13"><if pos:start="15:9" pos:end="38:13">if <condition pos:start="15:12" pos:end="17:73">(<expr pos:start="15:13" pos:end="17:72"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:13">h</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:20">avctx</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:27">codec</name></name> <operator pos:start="15:29" pos:end="15:30">&amp;&amp;</operator>
            <name pos:start="16:13" pos:end="16:41"><name pos:start="16:13" pos:end="16:13">h</name><operator pos:start="16:14" pos:end="16:15">-&gt;</operator><name pos:start="16:16" pos:end="16:20">avctx</name><operator pos:start="16:21" pos:end="16:22">-&gt;</operator><name pos:start="16:23" pos:end="16:27">codec</name><operator pos:start="16:28" pos:end="16:29">-&gt;</operator><name pos:start="16:30" pos:end="16:41">capabilities</name></name> <operator pos:start="16:43" pos:end="16:43">&amp;</operator> <name pos:start="16:45" pos:end="16:67">CODEC_CAP_HWACCEL_VDPAU</name> <operator pos:start="16:69" pos:end="16:70">&amp;&amp;</operator>
            <operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:34"><name pos:start="17:14" pos:end="17:14">h</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:19">sps</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:34">bit_depth_luma</name></name> <operator pos:start="17:36" pos:end="17:37">!=</operator> <literal type="number" pos:start="17:39" pos:end="17:39">8</literal> <operator pos:start="17:41" pos:end="17:42">||</operator> <name pos:start="17:44" pos:end="17:67"><name pos:start="17:44" pos:end="17:44">h</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:49">sps</name><operator pos:start="17:50" pos:end="17:50">.</operator><name pos:start="17:51" pos:end="17:67">chroma_format_idc</name></name> <operator pos:start="17:69" pos:end="17:69">&gt;</operator> <literal type="number" pos:start="17:71" pos:end="17:71">1</literal><operator pos:start="17:72" pos:end="17:72">)</operator></expr>)</condition> <block pos:start="17:75" pos:end="38:13">{<block_content pos:start="18:13" pos:end="38:13">
            <expr_stmt pos:start="18:13" pos:end="19:74"><expr pos:start="18:13" pos:end="19:73"><call pos:start="18:13" pos:end="19:73"><name pos:start="18:13" pos:end="18:18">av_log</name><argument_list pos:start="18:19" pos:end="19:73">(<argument pos:start="18:20" pos:end="18:27"><expr pos:start="18:20" pos:end="18:27"><name pos:start="18:20" pos:end="18:27"><name pos:start="18:20" pos:end="18:20">h</name><operator pos:start="18:21" pos:end="18:22">-&gt;</operator><name pos:start="18:23" pos:end="18:27">avctx</name></name></expr></argument>, <argument pos:start="18:30" pos:end="18:41"><expr pos:start="18:30" pos:end="18:41"><name pos:start="18:30" pos:end="18:41">AV_LOG_ERROR</name></expr></argument>,
                   <argument pos:start="19:20" pos:end="19:72"><expr pos:start="19:20" pos:end="19:72"><literal type="string" pos:start="19:20" pos:end="19:72">"VDPAU decoding does not support video colorspace.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="20:13" pos:end="20:39">return <expr pos:start="20:20" pos:end="20:38"><name pos:start="20:20" pos:end="20:38">AVERROR_INVALIDDATA</name></expr>;</return>
        <if_stmt pos:start="21:9" pos:end="38:13"><if pos:start="21:9" pos:end="34:9">if <condition pos:start="21:12" pos:end="21:70">(<expr pos:start="21:13" pos:end="21:69"><name pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:13">h</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">sps</name><operator pos:start="21:19" pos:end="21:19">.</operator><name pos:start="21:20" pos:end="21:33">bit_depth_luma</name></name> <operator pos:start="21:35" pos:end="21:36">&gt;=</operator> <literal type="number" pos:start="21:38" pos:end="21:38">8</literal> <operator pos:start="21:40" pos:end="21:41">&amp;&amp;</operator> <name pos:start="21:43" pos:end="21:63"><name pos:start="21:43" pos:end="21:43">h</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:48">sps</name><operator pos:start="21:49" pos:end="21:49">.</operator><name pos:start="21:50" pos:end="21:63">bit_depth_luma</name></name> <operator pos:start="21:65" pos:end="21:66">&lt;=</operator> <literal type="number" pos:start="21:68" pos:end="21:69">10</literal></expr>)</condition> <block pos:start="21:72" pos:end="34:9">{<block_content pos:start="22:13" pos:end="33:62">
            <expr_stmt pos:start="22:13" pos:end="22:66"><expr pos:start="22:13" pos:end="22:65"><name pos:start="22:13" pos:end="22:41"><name pos:start="22:13" pos:end="22:13">h</name><operator pos:start="22:14" pos:end="22:15">-&gt;</operator><name pos:start="22:16" pos:end="22:20">avctx</name><operator pos:start="22:21" pos:end="22:22">-&gt;</operator><name pos:start="22:23" pos:end="22:41">bits_per_raw_sample</name></name> <operator pos:start="22:43" pos:end="22:43">=</operator> <name pos:start="22:45" pos:end="22:65"><name pos:start="22:45" pos:end="22:45">h</name><operator pos:start="22:46" pos:end="22:47">-&gt;</operator><name pos:start="22:48" pos:end="22:50">sps</name><operator pos:start="22:51" pos:end="22:51">.</operator><name pos:start="22:52" pos:end="22:65">bit_depth_luma</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="23:13" pos:end="23:69"><expr pos:start="23:13" pos:end="23:68"><name pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:13">h</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:36">cur_chroma_format_idc</name></name>      <operator pos:start="23:43" pos:end="23:43">=</operator> <name pos:start="23:45" pos:end="23:68"><name pos:start="23:45" pos:end="23:45">h</name><operator pos:start="23:46" pos:end="23:47">-&gt;</operator><name pos:start="23:48" pos:end="23:50">sps</name><operator pos:start="23:51" pos:end="23:51">.</operator><name pos:start="23:52" pos:end="23:68">chroma_format_idc</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:70"><expr pos:start="24:13" pos:end="24:69"><name pos:start="24:13" pos:end="24:26"><name pos:start="24:13" pos:end="24:13">h</name><operator pos:start="24:14" pos:end="24:15">-&gt;</operator><name pos:start="24:16" pos:end="24:26">pixel_shift</name></name>                <operator pos:start="24:43" pos:end="24:43">=</operator> <name pos:start="24:45" pos:end="24:65"><name pos:start="24:45" pos:end="24:45">h</name><operator pos:start="24:46" pos:end="24:47">-&gt;</operator><name pos:start="24:48" pos:end="24:50">sps</name><operator pos:start="24:51" pos:end="24:51">.</operator><name pos:start="24:52" pos:end="24:65">bit_depth_luma</name></name> <operator pos:start="24:67" pos:end="24:67">&gt;</operator> <literal type="number" pos:start="24:69" pos:end="24:69">8</literal></expr>;</expr_stmt>
            <expr_stmt pos:start="25:13" pos:end="26:54"><expr pos:start="25:13" pos:end="26:53"><call pos:start="25:13" pos:end="26:53"><name pos:start="25:13" pos:end="25:27">ff_h264dsp_init</name><argument_list pos:start="25:28" pos:end="26:53">(<argument pos:start="25:29" pos:end="25:39"><expr pos:start="25:29" pos:end="25:39"><operator pos:start="25:29" pos:end="25:29">&amp;</operator><name pos:start="25:30" pos:end="25:39"><name pos:start="25:30" pos:end="25:30">h</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:39">h264dsp</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:62"><expr pos:start="25:42" pos:end="25:62"><name pos:start="25:42" pos:end="25:62"><name pos:start="25:42" pos:end="25:42">h</name><operator pos:start="25:43" pos:end="25:44">-&gt;</operator><name pos:start="25:45" pos:end="25:47">sps</name><operator pos:start="25:48" pos:end="25:48">.</operator><name pos:start="25:49" pos:end="25:62">bit_depth_luma</name></name></expr></argument>,
                            <argument pos:start="26:29" pos:end="26:52"><expr pos:start="26:29" pos:end="26:52"><name pos:start="26:29" pos:end="26:52"><name pos:start="26:29" pos:end="26:29">h</name><operator pos:start="26:30" pos:end="26:31">-&gt;</operator><name pos:start="26:32" pos:end="26:34">sps</name><operator pos:start="26:35" pos:end="26:35">.</operator><name pos:start="26:36" pos:end="26:52">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="27:13" pos:end="27:72"><expr pos:start="27:13" pos:end="27:71"><call pos:start="27:13" pos:end="27:71"><name pos:start="27:13" pos:end="27:30">ff_h264chroma_init</name><argument_list pos:start="27:31" pos:end="27:71">(<argument pos:start="27:32" pos:end="27:45"><expr pos:start="27:32" pos:end="27:45"><operator pos:start="27:32" pos:end="27:32">&amp;</operator><name pos:start="27:33" pos:end="27:45"><name pos:start="27:33" pos:end="27:33">h</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:45">h264chroma</name></name></expr></argument>, <argument pos:start="27:48" pos:end="27:70"><expr pos:start="27:48" pos:end="27:70"><name pos:start="27:48" pos:end="27:70"><name pos:start="27:48" pos:end="27:48">h</name><operator pos:start="27:49" pos:end="27:50">-&gt;</operator><name pos:start="27:51" pos:end="27:53">sps</name><operator pos:start="27:54" pos:end="27:54">.</operator><name pos:start="27:55" pos:end="27:70">bit_depth_chroma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="28:13" pos:end="28:66"><expr pos:start="28:13" pos:end="28:65"><call pos:start="28:13" pos:end="28:65"><name pos:start="28:13" pos:end="28:28">ff_h264qpel_init</name><argument_list pos:start="28:29" pos:end="28:65">(<argument pos:start="28:30" pos:end="28:41"><expr pos:start="28:30" pos:end="28:41"><operator pos:start="28:30" pos:end="28:30">&amp;</operator><name pos:start="28:31" pos:end="28:41"><name pos:start="28:31" pos:end="28:31">h</name><operator pos:start="28:32" pos:end="28:33">-&gt;</operator><name pos:start="28:34" pos:end="28:41">h264qpel</name></name></expr></argument>, <argument pos:start="28:44" pos:end="28:64"><expr pos:start="28:44" pos:end="28:64"><name pos:start="28:44" pos:end="28:64"><name pos:start="28:44" pos:end="28:44">h</name><operator pos:start="28:45" pos:end="28:46">-&gt;</operator><name pos:start="28:47" pos:end="28:49">sps</name><operator pos:start="28:50" pos:end="28:50">.</operator><name pos:start="28:51" pos:end="28:64">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="29:13" pos:end="30:56"><expr pos:start="29:13" pos:end="30:55"><call pos:start="29:13" pos:end="30:55"><name pos:start="29:13" pos:end="29:29">ff_h264_pred_init</name><argument_list pos:start="29:30" pos:end="30:55">(<argument pos:start="29:31" pos:end="29:37"><expr pos:start="29:31" pos:end="29:37"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:32">h</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:37">hpc</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:57"><expr pos:start="29:40" pos:end="29:57"><name pos:start="29:40" pos:end="29:57"><name pos:start="29:40" pos:end="29:40">h</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:47">avctx</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:57">codec_id</name></name></expr></argument>, <argument pos:start="29:60" pos:end="29:80"><expr pos:start="29:60" pos:end="29:80"><name pos:start="29:60" pos:end="29:80"><name pos:start="29:60" pos:end="29:60">h</name><operator pos:start="29:61" pos:end="29:62">-&gt;</operator><name pos:start="29:63" pos:end="29:65">sps</name><operator pos:start="29:66" pos:end="29:66">.</operator><name pos:start="29:67" pos:end="29:80">bit_depth_luma</name></name></expr></argument>,
                              <argument pos:start="30:31" pos:end="30:54"><expr pos:start="30:31" pos:end="30:54"><name pos:start="30:31" pos:end="30:54"><name pos:start="30:31" pos:end="30:31">h</name><operator pos:start="30:32" pos:end="30:33">-&gt;</operator><name pos:start="30:34" pos:end="30:36">sps</name><operator pos:start="30:37" pos:end="30:37">.</operator><name pos:start="30:38" pos:end="30:54">chroma_format_idc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:66"><expr pos:start="31:13" pos:end="31:65"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:13">h</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:18">dsp</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:27">dct_bits</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <ternary pos:start="31:31" pos:end="31:65"><condition pos:start="31:31" pos:end="31:57"><expr pos:start="31:31" pos:end="31:55"><name pos:start="31:31" pos:end="31:51"><name pos:start="31:31" pos:end="31:31">h</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:36">sps</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:51">bit_depth_luma</name></name> <operator pos:start="31:53" pos:end="31:53">&gt;</operator> <literal type="number" pos:start="31:55" pos:end="31:55">8</literal></expr> ?</condition><then pos:start="31:59" pos:end="31:60"> <expr pos:start="31:59" pos:end="31:60"><literal type="number" pos:start="31:59" pos:end="31:60">32</literal></expr> </then><else pos:start="31:62" pos:end="31:65">: <expr pos:start="31:64" pos:end="31:65"><literal type="number" pos:start="31:64" pos:end="31:65">16</literal></expr></else></ternary></expr>;</expr_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:47"><expr pos:start="32:13" pos:end="32:46"><call pos:start="32:13" pos:end="32:46"><name pos:start="32:13" pos:end="32:27">ff_dsputil_init</name><argument_list pos:start="32:28" pos:end="32:46">(<argument pos:start="32:29" pos:end="32:35"><expr pos:start="32:29" pos:end="32:35"><operator pos:start="32:29" pos:end="32:29">&amp;</operator><name pos:start="32:30" pos:end="32:35"><name pos:start="32:30" pos:end="32:30">h</name><operator pos:start="32:31" pos:end="32:32">-&gt;</operator><name pos:start="32:33" pos:end="32:35">dsp</name></name></expr></argument>, <argument pos:start="32:38" pos:end="32:45"><expr pos:start="32:38" pos:end="32:45"><name pos:start="32:38" pos:end="32:45"><name pos:start="32:38" pos:end="32:38">h</name><operator pos:start="32:39" pos:end="32:40">-&gt;</operator><name pos:start="32:41" pos:end="32:45">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:62"><expr pos:start="33:13" pos:end="33:61"><call pos:start="33:13" pos:end="33:61"><name pos:start="33:13" pos:end="33:28">ff_videodsp_init</name><argument_list pos:start="33:29" pos:end="33:61">(<argument pos:start="33:30" pos:end="33:37"><expr pos:start="33:30" pos:end="33:37"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:31">h</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:37">vdsp</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:60"><expr pos:start="33:40" pos:end="33:60"><name pos:start="33:40" pos:end="33:60"><name pos:start="33:40" pos:end="33:40">h</name><operator pos:start="33:41" pos:end="33:42">-&gt;</operator><name pos:start="33:43" pos:end="33:45">sps</name><operator pos:start="33:46" pos:end="33:46">.</operator><name pos:start="33:47" pos:end="33:60">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="34:11" pos:end="38:13">else <block pos:start="34:16" pos:end="38:13">{<block_content pos:start="35:13" pos:end="38:13">
            <expr_stmt pos:start="35:13" pos:end="36:42"><expr pos:start="35:13" pos:end="36:41"><call pos:start="35:13" pos:end="36:41"><name pos:start="35:13" pos:end="35:18">av_log</name><argument_list pos:start="35:19" pos:end="36:41">(<argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:20">h</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:27">avctx</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:44" pos:end="35:72"><expr pos:start="35:44" pos:end="35:72"><literal type="string" pos:start="35:44" pos:end="35:72">"Unsupported bit depth: %d\n"</literal></expr></argument>,
                   <argument pos:start="36:20" pos:end="36:40"><expr pos:start="36:20" pos:end="36:40"><name pos:start="36:20" pos:end="36:40"><name pos:start="36:20" pos:end="36:20">h</name><operator pos:start="36:21" pos:end="36:22">-&gt;</operator><name pos:start="36:23" pos:end="36:25">sps</name><operator pos:start="36:26" pos:end="36:26">.</operator><name pos:start="36:27" pos:end="36:40">bit_depth_luma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="37:13" pos:end="37:39">return <expr pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:38">AVERROR_INVALIDDATA</name></expr>;</return>
    <return pos:start="38:5" pos:end="38:13">return <expr pos:start="38:12" pos:end="38:12"><literal type="number" pos:start="38:12" pos:end="38:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
