<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15604.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">filter_samples</name><parameter_list pos:start="1:26" pos:end="1:77">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:38">AVFilterLink</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">inlink</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:76"><decl pos:start="1:49" pos:end="1:76"><type pos:start="1:49" pos:end="1:76"><name pos:start="1:49" pos:end="1:65">AVFilterBufferRef</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:76">insamples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:38">= <expr pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:33">inlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:25">outlink</name> <init pos:start="7:27" pos:end="7:43">= <expr pos:start="7:29" pos:end="7:43"><name pos:start="7:29" pos:end="7:43"><name pos:start="7:29" pos:end="7:31">ctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">outputs</name><index pos:start="7:41" pos:end="7:43">[<expr pos:start="7:42" pos:end="7:42"><literal type="number" pos:start="7:42" pos:end="7:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">ShowWavesContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:31">showwaves</name> <init pos:start="9:33" pos:end="9:43">= <expr pos:start="9:35" pos:end="9:43"><name pos:start="9:35" pos:end="9:43"><name pos:start="9:35" pos:end="9:37">ctx</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:43">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:24">nb_samples</name> <init pos:start="11:26" pos:end="11:55">= <expr pos:start="11:28" pos:end="11:55"><name pos:start="11:28" pos:end="11:55"><name pos:start="11:28" pos:end="11:36">insamples</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:43">audio</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:55">nb_samples</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">AVFilterBufferRef</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:32">outpicref</name> <init pos:start="13:34" pos:end="13:55">= <expr pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:55"><name pos:start="13:36" pos:end="13:44">showwaves</name><operator pos:start="13:45" pos:end="13:46">-&gt;</operator><name pos:start="13:47" pos:end="13:55">outpicref</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:57"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">linesize</name> <init pos:start="15:18" pos:end="15:57">= <expr pos:start="15:20" pos:end="15:57"><ternary pos:start="15:20" pos:end="15:57"><condition pos:start="15:20" pos:end="15:30"><expr pos:start="15:20" pos:end="15:28"><name pos:start="15:20" pos:end="15:28">outpicref</name></expr> ?</condition><then pos:start="15:32" pos:end="15:53"> <expr pos:start="15:32" pos:end="15:53"><name pos:start="15:32" pos:end="15:53"><name pos:start="15:32" pos:end="15:40">outpicref</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:50">linesize</name><index pos:start="15:51" pos:end="15:53">[<expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr>]</index></name></expr> </then><else pos:start="15:55" pos:end="15:57">: <expr pos:start="15:57" pos:end="15:57"><literal type="number" pos:start="15:57" pos:end="15:57">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:47"><decl pos:start="17:5" pos:end="17:46"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:14">p</name> <init pos:start="17:16" pos:end="17:46">= <expr pos:start="17:18" pos:end="17:46"><operator pos:start="17:18" pos:end="17:18">(</operator><name pos:start="17:19" pos:end="17:25">int16_t</name> <operator pos:start="17:27" pos:end="17:27">*</operator><operator pos:start="17:28" pos:end="17:28">)</operator><name pos:start="17:29" pos:end="17:46"><name pos:start="17:29" pos:end="17:37">insamples</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:43">data</name><index pos:start="17:44" pos:end="17:46">[<expr pos:start="17:45" pos:end="17:45"><literal type="number" pos:start="17:45" pos:end="17:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:90"><decl pos:start="19:5" pos:end="19:89"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:19">nb_channels</name> <init pos:start="19:21" pos:end="19:89">= <expr pos:start="19:23" pos:end="19:89"><call pos:start="19:23" pos:end="19:89"><name pos:start="19:23" pos:end="19:55">av_get_channel_layout_nb_channels</name><argument_list pos:start="19:56" pos:end="19:89">(<argument pos:start="19:57" pos:end="19:88"><expr pos:start="19:57" pos:end="19:88"><name pos:start="19:57" pos:end="19:88"><name pos:start="19:57" pos:end="19:65">insamples</name><operator pos:start="19:66" pos:end="19:67">-&gt;</operator><name pos:start="19:68" pos:end="19:72">audio</name><operator pos:start="19:73" pos:end="19:74">-&gt;</operator><name pos:start="19:75" pos:end="19:88">channel_layout</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:12"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:12">j</name></decl>, <decl pos:start="21:15" pos:end="21:15"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:15" pos:end="21:15">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:30"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:15">n</name> <init pos:start="23:17" pos:end="23:30">= <expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:27">showwaves</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:30">n</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:42"><decl pos:start="25:5" pos:end="25:41"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:15">x</name> <init pos:start="25:17" pos:end="25:41">= <expr pos:start="25:19" pos:end="25:41"><literal type="number" pos:start="25:19" pos:end="25:21">255</literal> <operator pos:start="25:23" pos:end="25:23">/</operator> <operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:36">nb_channels</name> <operator pos:start="25:38" pos:end="25:38">*</operator> <name pos:start="25:40" pos:end="25:40">n</name><operator pos:start="25:41" pos:end="25:41">)</operator></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="25:44" pos:end="25:111">/* multiplication factor, pre-computed to avoid in-loop divisions */</comment>



    <comment type="block" pos:start="29:5" pos:end="29:33">/* draw data in the buffer */</comment>

    <for pos:start="31:5" pos:end="83:5">for <control pos:start="31:9" pos:end="31:36">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:31"><expr pos:start="31:17" pos:end="31:30"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:30">nb_samples</name></expr>;</condition> <incr pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:33">i</name><operator pos:start="31:34" pos:end="31:35">++</operator></expr></incr>)</control> <block pos:start="31:38" pos:end="83:5">{<block_content pos:start="33:9" pos:end="81:32">

        <if_stmt pos:start="33:9" pos:end="57:9"><if pos:start="33:9" pos:end="57:9">if <condition pos:start="33:12" pos:end="33:72">(<expr pos:start="33:13" pos:end="33:71"><name pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:21">showwaves</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:30">buf_idx</name></name> <operator pos:start="33:32" pos:end="33:33">==</operator> <literal type="number" pos:start="33:35" pos:end="33:35">0</literal> <operator pos:start="33:37" pos:end="33:38">&amp;&amp;</operator> <name pos:start="33:40" pos:end="33:66"><name pos:start="33:40" pos:end="33:48">showwaves</name><operator pos:start="33:49" pos:end="33:50">-&gt;</operator><name pos:start="33:51" pos:end="33:66">sample_count_mod</name></name> <operator pos:start="33:68" pos:end="33:69">==</operator> <literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr>)</condition> <block pos:start="33:74" pos:end="57:9">{<block_content pos:start="35:13" pos:end="55:65">

            <expr_stmt pos:start="35:13" pos:end="39:60"><expr pos:start="35:13" pos:end="39:59"><name pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:21">showwaves</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:32">outpicref</name></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:44">outpicref</name> <operator pos:start="35:46" pos:end="35:46">=</operator>

                <call pos:start="37:17" pos:end="39:59"><name pos:start="37:17" pos:end="37:35">ff_get_video_buffer</name><argument_list pos:start="37:36" pos:end="39:59">(<argument pos:start="37:37" pos:end="37:43"><expr pos:start="37:37" pos:end="37:43"><name pos:start="37:37" pos:end="37:43">outlink</name></expr></argument>, <argument pos:start="37:46" pos:end="37:72"><expr pos:start="37:46" pos:end="37:72"><name pos:start="37:46" pos:end="37:58">AV_PERM_WRITE</name><operator pos:start="37:59" pos:end="37:59">|</operator><name pos:start="37:60" pos:end="37:72">AV_PERM_ALIGN</name></expr></argument>,

                                    <argument pos:start="39:37" pos:end="39:46"><expr pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:46"><name pos:start="39:37" pos:end="39:43">outlink</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:46">w</name></name></expr></argument>, <argument pos:start="39:49" pos:end="39:58"><expr pos:start="39:49" pos:end="39:58"><name pos:start="39:49" pos:end="39:58"><name pos:start="39:49" pos:end="39:55">outlink</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:58">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:45"><expr pos:start="41:13" pos:end="41:44"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:21">outpicref</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:28">video</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:31">w</name></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <name pos:start="41:35" pos:end="41:44"><name pos:start="41:35" pos:end="41:41">outlink</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:44">w</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:21">outpicref</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:28">video</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:31">h</name></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <name pos:start="43:35" pos:end="43:44"><name pos:start="43:35" pos:end="43:41">outlink</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:44">h</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="51:62"><expr pos:start="45:13" pos:end="51:61"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:21">outpicref</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:26">pts</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:43"><name pos:start="45:30" pos:end="45:38">insamples</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:43">pts</name></name> <operator pos:start="45:45" pos:end="45:45">+</operator>

                             <macro pos:start="47:30" pos:end="51:61"><name pos:start="47:30" pos:end="47:41">av_rescale_q</name><argument_list pos:start="47:42" pos:end="51:61">(<argument pos:start="47:43" pos:end="47:91">(p - (int16_t *)insamples-&gt;data[<literal type="number" pos:start="47:75" pos:end="47:75">0</literal>]) / nb_channels</argument>,

                                          <argument pos:start="49:43" pos:end="49:57">(AVRational){ <literal type="number" pos:start="49:57" pos:end="49:57">1</literal></argument>, <argument pos:start="49:60" pos:end="49:80">inlink-&gt;sample_rate }</argument>,

                                          <argument pos:start="51:43" pos:end="51:60">outlink-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:46"><expr pos:start="53:13" pos:end="53:45"><name pos:start="53:13" pos:end="53:20">linesize</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:45"><name pos:start="53:24" pos:end="53:32">outpicref</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:42">linesize</name><index pos:start="53:43" pos:end="53:45">[<expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:65"><expr pos:start="55:13" pos:end="55:64"><call pos:start="55:13" pos:end="55:64"><name pos:start="55:13" pos:end="55:18">memset</name><argument_list pos:start="55:19" pos:end="55:64">(<argument pos:start="55:20" pos:end="55:37"><expr pos:start="55:20" pos:end="55:37"><name pos:start="55:20" pos:end="55:37"><name pos:start="55:20" pos:end="55:28">outpicref</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:34">data</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:40" pos:end="55:40"><expr pos:start="55:40" pos:end="55:40"><literal type="number" pos:start="55:40" pos:end="55:40">0</literal></expr></argument>, <argument pos:start="55:43" pos:end="55:63"><expr pos:start="55:43" pos:end="55:63"><name pos:start="55:43" pos:end="55:54"><name pos:start="55:43" pos:end="55:51">showwaves</name><operator pos:start="55:52" pos:end="55:53">-&gt;</operator><name pos:start="55:54" pos:end="55:54">h</name></name><operator pos:start="55:55" pos:end="55:55">*</operator><name pos:start="55:56" pos:end="55:63">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="59:9" pos:end="67:9">for <control pos:start="59:13" pos:end="59:41">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">j</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:36"><expr pos:start="59:21" pos:end="59:35"><name pos:start="59:21" pos:end="59:21">j</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:35">nb_channels</name></expr>;</condition> <incr pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:38">j</name><operator pos:start="59:39" pos:end="59:40">++</operator></expr></incr>)</control> <block pos:start="59:43" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:79">

            <expr_stmt pos:start="61:13" pos:end="61:77"><expr pos:start="61:13" pos:end="61:76"><name pos:start="61:13" pos:end="61:13">h</name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:25">showwaves</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:28">h</name></name><operator pos:start="61:29" pos:end="61:29">/</operator><literal type="number" pos:start="61:30" pos:end="61:32">2</literal> <operator pos:start="61:32" pos:end="61:32">-</operator> <call pos:start="61:34" pos:end="61:76"><name pos:start="61:34" pos:end="61:43">av_rescale</name><argument_list pos:start="61:44" pos:end="61:76">(<argument pos:start="61:45" pos:end="61:48"><expr pos:start="61:45" pos:end="61:48"><operator pos:start="61:45" pos:end="61:45">*</operator><name pos:start="61:46" pos:end="61:46">p</name><operator pos:start="61:47" pos:end="61:48">++</operator></expr></argument>, <argument pos:start="61:51" pos:end="61:64"><expr pos:start="61:51" pos:end="61:64"><name pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:59">showwaves</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:62">h</name></name><operator pos:start="61:63" pos:end="61:63">/</operator><literal type="number" pos:start="61:64" pos:end="61:64">2</literal></expr></argument>, <argument pos:start="61:67" pos:end="61:75"><expr pos:start="61:67" pos:end="61:75"><name pos:start="61:67" pos:end="61:75">MAX_INT16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:79"><if pos:start="63:13" pos:end="65:79">if <condition pos:start="63:16" pos:end="63:41">(<expr pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:17">h</name> <operator pos:start="63:19" pos:end="63:20">&gt;=</operator> <literal type="number" pos:start="63:22" pos:end="63:22">0</literal> <operator pos:start="63:24" pos:end="63:25">&amp;&amp;</operator> <name pos:start="63:27" pos:end="63:27">h</name> <operator pos:start="63:29" pos:end="63:29">&lt;</operator> <name pos:start="63:31" pos:end="63:40"><name pos:start="63:31" pos:end="63:37">outlink</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:40">h</name></name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:79"><block_content pos:start="65:17" pos:end="65:79">

                <expr_stmt pos:start="65:17" pos:end="65:79"><expr pos:start="65:17" pos:end="65:78"><operator pos:start="65:17" pos:end="65:17">*</operator><operator pos:start="65:18" pos:end="65:18">(</operator><name pos:start="65:19" pos:end="65:36"><name pos:start="65:19" pos:end="65:27">outpicref</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:33">data</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><literal type="number" pos:start="65:35" pos:end="65:35">0</literal></expr>]</index></name> <operator pos:start="65:38" pos:end="65:38">+</operator> <name pos:start="65:40" pos:end="65:57"><name pos:start="65:40" pos:end="65:48">showwaves</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:57">buf_idx</name></name> <operator pos:start="65:59" pos:end="65:59">+</operator> <name pos:start="65:61" pos:end="65:61">h</name> <operator pos:start="65:63" pos:end="65:63">*</operator> <name pos:start="65:65" pos:end="65:72">linesize</name><operator pos:start="65:73" pos:end="65:73">)</operator> <operator pos:start="65:75" pos:end="65:76">+=</operator> <name pos:start="65:78" pos:end="65:78">x</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:17">showwaves</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:35">sample_count_mod</name></name><operator pos:start="69:36" pos:end="69:37">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:45">(<expr pos:start="71:13" pos:end="71:44"><name pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:21">showwaves</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:39">sample_count_mod</name></name> <operator pos:start="71:41" pos:end="71:42">==</operator> <name pos:start="71:44" pos:end="71:44">n</name></expr>)</condition> <block pos:start="71:47" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:33">

            <expr_stmt pos:start="73:13" pos:end="73:44"><expr pos:start="73:13" pos:end="73:43"><name pos:start="73:13" pos:end="73:39"><name pos:start="73:13" pos:end="73:21">showwaves</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:39">sample_count_mod</name></name> <operator pos:start="73:41" pos:end="73:41">=</operator> <literal type="number" pos:start="73:43" pos:end="73:43">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:33"><expr pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:30"><name pos:start="75:13" pos:end="75:21">showwaves</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:30">buf_idx</name></name><operator pos:start="75:31" pos:end="75:32">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="81:32"><if pos:start="79:9" pos:end="81:32">if <condition pos:start="79:12" pos:end="79:47">(<expr pos:start="79:13" pos:end="79:46"><name pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:21">showwaves</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:30">buf_idx</name></name> <operator pos:start="79:32" pos:end="79:33">==</operator> <name pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:43">showwaves</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:46">w</name></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:32"><block_content pos:start="81:13" pos:end="81:32">

            <expr_stmt pos:start="81:13" pos:end="81:32"><expr pos:start="81:13" pos:end="81:31"><call pos:start="81:13" pos:end="81:31"><name pos:start="81:13" pos:end="81:22">push_frame</name><argument_list pos:start="81:23" pos:end="81:31">(<argument pos:start="81:24" pos:end="81:30"><expr pos:start="81:24" pos:end="81:30"><name pos:start="81:24" pos:end="81:30">outlink</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="87:5" pos:end="87:37"><expr pos:start="87:5" pos:end="87:36"><call pos:start="87:5" pos:end="87:36"><name pos:start="87:5" pos:end="87:25">avfilter_unref_buffer</name><argument_list pos:start="87:26" pos:end="87:36">(<argument pos:start="87:27" pos:end="87:35"><expr pos:start="87:27" pos:end="87:35"><name pos:start="87:27" pos:end="87:35">insamples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
