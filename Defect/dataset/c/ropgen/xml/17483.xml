<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17483.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mov_read_replaygain</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">MOVContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:57">AVIOContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">pb</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">end</name> <init pos:start="5:17" pos:end="5:38">= <expr pos:start="5:19" pos:end="5:38"><call pos:start="5:19" pos:end="5:31"><name pos:start="5:19" pos:end="5:27">avio_tell</name><argument_list pos:start="5:28" pos:end="5:31">(<argument pos:start="5:29" pos:end="5:30"><expr pos:start="5:29" pos:end="5:30"><name pos:start="5:29" pos:end="5:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="5:33" pos:end="5:33">+</operator> <name pos:start="5:35" pos:end="5:38">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">key</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>, <decl pos:start="7:26" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:29">val</name> <init pos:start="7:31" pos:end="7:36">= <expr pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="71:5">for <control pos:start="13:9" pos:end="13:27">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:22"><expr pos:start="13:17" pos:end="13:21"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>;</condition> <incr pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:24">i</name><operator pos:start="13:25" pos:end="13:26">++</operator></expr></incr>)</control> <block pos:start="13:29" pos:end="71:5">{<block_content pos:start="15:9" pos:end="69:22">

        <decl_stmt pos:start="15:9" pos:end="15:20"><decl pos:start="15:9" pos:end="15:19"><type pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:15">uint8_t</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier><modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:19">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:26"><decl pos:start="17:9" pos:end="17:20"><type pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:16">uint32_t</name></type> <name pos:start="17:18" pos:end="17:20">len</name></decl>, <decl pos:start="17:23" pos:end="17:25"><type ref="prev" pos:start="17:9" pos:end="17:16"/><name pos:start="17:23" pos:end="17:25">tag</name></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="23:18"><if pos:start="21:9" pos:end="23:18">if <condition pos:start="21:12" pos:end="21:38">(<expr pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:15">end</name> <operator pos:start="21:17" pos:end="21:17">-</operator> <call pos:start="21:19" pos:end="21:31"><name pos:start="21:19" pos:end="21:27">avio_tell</name><argument_list pos:start="21:28" pos:end="21:31">(<argument pos:start="21:29" pos:end="21:30"><expr pos:start="21:29" pos:end="21:30"><name pos:start="21:29" pos:end="21:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="21:33" pos:end="21:34">&lt;=</operator> <literal type="number" pos:start="21:36" pos:end="21:37">12</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:18"><block_content pos:start="23:13" pos:end="23:18">

            <break pos:start="23:13" pos:end="23:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:23">avio_rb32</name><argument_list pos:start="27:24" pos:end="27:27">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:11">tag</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:27"><name pos:start="29:15" pos:end="29:23">avio_rl32</name><argument_list pos:start="29:24" pos:end="29:27">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><call pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17">avio_skip</name><argument_list pos:start="31:18" pos:end="31:24">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">pb</name></expr></argument>, <argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:27" pos:end="31:34">// flags</comment>



        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:55">(<expr pos:start="35:13" pos:end="35:54"><name pos:start="35:13" pos:end="35:34"><name pos:start="35:13" pos:end="35:15">len</name> <argument_list type="generic" pos:start="35:17" pos:end="35:34">&lt; <argument pos:start="35:19" pos:end="35:32"><expr pos:start="35:19" pos:end="35:32"><literal type="number" pos:start="35:19" pos:end="35:20">12</literal> <operator pos:start="35:22" pos:end="35:23">||</operator> <name pos:start="35:25" pos:end="35:27">len</name> <operator pos:start="35:29" pos:end="35:29">-</operator> <literal type="number" pos:start="35:31" pos:end="35:32">12</literal></expr></argument> &gt;</argument_list></name> <name pos:start="35:36" pos:end="35:38">end</name> <operator pos:start="35:40" pos:end="35:40">-</operator> <call pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:50">avio_tell</name><argument_list pos:start="35:51" pos:end="35:54">(<argument pos:start="35:52" pos:end="35:53"><expr pos:start="35:52" pos:end="35:53"><name pos:start="35:52" pos:end="35:53">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:18"><expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:11">len</name> <operator pos:start="39:13" pos:end="39:14">-=</operator> <literal type="number" pos:start="39:16" pos:end="39:17">12</literal></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="57:18"><if pos:start="43:9" pos:end="45:21">if <condition pos:start="43:12" pos:end="43:45">(<expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:15">tag</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <call pos:start="43:20" pos:end="43:44"><name pos:start="43:20" pos:end="43:24">MKTAG</name><argument_list pos:start="43:25" pos:end="43:44">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><literal type="char" pos:start="43:26" pos:end="43:28">'n'</literal></expr></argument>, <argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><literal type="char" pos:start="43:31" pos:end="43:33">'a'</literal></expr></argument>, <argument pos:start="43:36" pos:end="43:38"><expr pos:start="43:36" pos:end="43:38"><literal type="char" pos:start="43:36" pos:end="43:38">'m'</literal></expr></argument>, <argument pos:start="43:41" pos:end="43:43"><expr pos:start="43:41" pos:end="43:43"><literal type="char" pos:start="43:41" pos:end="43:43">'e'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:21"><block_content pos:start="45:13" pos:end="45:21">

            <expr_stmt pos:start="45:13" pos:end="45:21"><expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:13">p</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <operator pos:start="45:17" pos:end="45:17">&amp;</operator><name pos:start="45:18" pos:end="45:20">key</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="47:9" pos:end="55:9">else if <condition pos:start="47:17" pos:end="47:61">(<expr pos:start="47:18" pos:end="47:60"><name pos:start="47:18" pos:end="47:20">tag</name> <operator pos:start="47:22" pos:end="47:23">==</operator> <call pos:start="47:25" pos:end="47:49"><name pos:start="47:25" pos:end="47:29">MKTAG</name><argument_list pos:start="47:30" pos:end="47:49">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><literal type="char" pos:start="47:31" pos:end="47:33">'d'</literal></expr></argument>, <argument pos:start="47:36" pos:end="47:38"><expr pos:start="47:36" pos:end="47:38"><literal type="char" pos:start="47:36" pos:end="47:38">'a'</literal></expr></argument>, <argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><literal type="char" pos:start="47:41" pos:end="47:43">'t'</literal></expr></argument>, <argument pos:start="47:46" pos:end="47:48"><expr pos:start="47:46" pos:end="47:48"><literal type="char" pos:start="47:46" pos:end="47:48">'a'</literal></expr></argument>)</argument_list></call> <operator pos:start="47:51" pos:end="47:52">&amp;&amp;</operator> <name pos:start="47:54" pos:end="47:56">len</name> <operator pos:start="47:58" pos:end="47:58">&gt;</operator> <literal type="number" pos:start="47:60" pos:end="47:60">4</literal></expr>)</condition> <block pos:start="47:63" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:21">

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><call pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:21">avio_skip</name><argument_list pos:start="49:22" pos:end="49:28">(<argument pos:start="49:23" pos:end="49:24"><expr pos:start="49:23" pos:end="49:24"><name pos:start="49:23" pos:end="49:24">pb</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><literal type="number" pos:start="49:27" pos:end="49:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:21"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:15">len</name> <operator pos:start="51:17" pos:end="51:18">-=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:21"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:13">p</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <operator pos:start="53:17" pos:end="53:17">&amp;</operator><name pos:start="53:18" pos:end="53:20">val</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="57:18">else<block type="pseudo" pos:start="57:13" pos:end="57:18"><block_content pos:start="57:13" pos:end="57:18">

            <break pos:start="57:13" pos:end="57:18">break;</break></block_content></block></else></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:10">p</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:31"><name pos:start="61:14" pos:end="61:22">av_malloc</name><argument_list pos:start="61:23" pos:end="61:31">(<argument pos:start="61:24" pos:end="61:30"><expr pos:start="61:24" pos:end="61:30"><name pos:start="61:24" pos:end="61:26">len</name> <operator pos:start="61:28" pos:end="61:28">+</operator> <literal type="number" pos:start="61:30" pos:end="61:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:18"><if pos:start="63:9" pos:end="65:18">if <condition pos:start="63:12" pos:end="63:16">(<expr pos:start="63:13" pos:end="63:15"><operator pos:start="63:13" pos:end="63:13">!</operator><operator pos:start="63:14" pos:end="63:14">*</operator><name pos:start="63:15" pos:end="63:15">p</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:18"><block_content pos:start="65:13" pos:end="65:18">

            <break pos:start="65:13" pos:end="65:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><call pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:17">avio_read</name><argument_list pos:start="67:18" pos:end="67:30">(<argument pos:start="67:19" pos:end="67:20"><expr pos:start="67:19" pos:end="67:20"><name pos:start="67:19" pos:end="67:20">pb</name></expr></argument>, <argument pos:start="67:23" pos:end="67:24"><expr pos:start="67:23" pos:end="67:24"><operator pos:start="67:23" pos:end="67:23">*</operator><name pos:start="67:24" pos:end="67:24">p</name></expr></argument>, <argument pos:start="67:27" pos:end="67:29"><expr pos:start="67:27" pos:end="67:29"><name pos:start="67:27" pos:end="67:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:22"><expr pos:start="69:9" pos:end="69:21"><operator pos:start="69:9" pos:end="69:9">(</operator><operator pos:start="69:10" pos:end="69:10">*</operator><name pos:start="69:11" pos:end="69:11">p</name><operator pos:start="69:12" pos:end="69:12">)</operator><index pos:start="69:13" pos:end="69:17">[<expr pos:start="69:14" pos:end="69:16"><name pos:start="69:14" pos:end="69:16">len</name></expr>]</index> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="75:5" pos:end="83:5"><if pos:start="75:5" pos:end="83:5">if <condition pos:start="75:8" pos:end="75:19">(<expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:11">key</name> <operator pos:start="75:13" pos:end="75:14">&amp;&amp;</operator> <name pos:start="75:16" pos:end="75:18">val</name></expr>)</condition> <block pos:start="75:21" pos:end="83:5">{<block_content pos:start="77:9" pos:end="81:25">

        <expr_stmt pos:start="77:9" pos:end="79:71"><expr pos:start="77:9" pos:end="79:70"><call pos:start="77:9" pos:end="79:70"><name pos:start="77:9" pos:end="77:19">av_dict_set</name><argument_list pos:start="77:20" pos:end="79:70">(<argument pos:start="77:21" pos:end="77:36"><expr pos:start="77:21" pos:end="77:36"><operator pos:start="77:21" pos:end="77:21">&amp;</operator><name pos:start="77:22" pos:end="77:36"><name pos:start="77:22" pos:end="77:22">c</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:26">fc</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:36">metadata</name></name></expr></argument>, <argument pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:41">key</name></expr></argument>, <argument pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><name pos:start="77:44" pos:end="77:46">val</name></expr></argument>,

                    <argument pos:start="79:21" pos:end="79:69"><expr pos:start="79:21" pos:end="79:69"><name pos:start="79:21" pos:end="79:43">AV_DICT_DONT_STRDUP_KEY</name> <operator pos:start="79:45" pos:end="79:45">|</operator> <name pos:start="79:47" pos:end="79:69">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:25"><expr pos:start="81:9" pos:end="81:24"><name pos:start="81:9" pos:end="81:11">key</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:17">val</name> <operator pos:start="81:19" pos:end="81:19">=</operator> <name pos:start="81:21" pos:end="81:24">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><call pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:13">avio_seek</name><argument_list pos:start="87:14" pos:end="87:32">(<argument pos:start="87:15" pos:end="87:16"><expr pos:start="87:15" pos:end="87:16"><name pos:start="87:15" pos:end="87:16">pb</name></expr></argument>, <argument pos:start="87:19" pos:end="87:21"><expr pos:start="87:19" pos:end="87:21"><name pos:start="87:19" pos:end="87:21">end</name></expr></argument>, <argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:31">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:19"><expr pos:start="89:5" pos:end="89:18"><call pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:12">av_freep</name><argument_list pos:start="89:13" pos:end="89:18">(<argument pos:start="89:14" pos:end="89:17"><expr pos:start="89:14" pos:end="89:17"><operator pos:start="89:14" pos:end="89:14">&amp;</operator><name pos:start="89:15" pos:end="89:17">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:19"><expr pos:start="91:5" pos:end="91:18"><call pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:12">av_freep</name><argument_list pos:start="91:13" pos:end="91:18">(<argument pos:start="91:14" pos:end="91:17"><expr pos:start="91:14" pos:end="91:17"><operator pos:start="91:14" pos:end="91:14">&amp;</operator><name pos:start="91:15" pos:end="91:17">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
