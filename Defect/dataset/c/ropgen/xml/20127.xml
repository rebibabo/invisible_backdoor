<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20127.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">do_fctiwz</name> <parameter_list pos:start="1:16" pos:end="1:21">(<parameter pos:start="1:17" pos:end="1:20"><decl pos:start="1:17" pos:end="1:20"><type pos:start="1:17" pos:end="1:20"><name pos:start="1:17" pos:end="1:20">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:14">

    <union pos:start="5:5" pos:end="11:8">union <block pos:start="5:11" pos:end="11:5">{

        <decl_stmt pos:start="7:9" pos:end="7:17"><decl pos:start="7:9" pos:end="7:16"><type pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:14">double</name></type> <name pos:start="7:16" pos:end="7:16">d</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:19"><decl pos:start="9:9" pos:end="9:18"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">uint64_t</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    }</block> <decl pos:start="11:7" pos:end="11:7"><name pos:start="11:7" pos:end="11:7">p</name></decl>;</union>



    <comment type="block" pos:start="15:5" pos:end="19:7">/* XXX: higher bits are not supposed to be significant.

     *      to make tests easier, return the same as a real PowerPC 750 (aka G3)

     */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:5">p</name><operator pos:start="21:6" pos:end="21:6">.</operator><name pos:start="21:7" pos:end="21:7">i</name></name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:62"><name pos:start="21:11" pos:end="21:40">float64_to_int32_round_to_zero</name><argument_list pos:start="21:41" pos:end="21:62">(<argument pos:start="21:42" pos:end="21:44"><expr pos:start="21:42" pos:end="21:44"><name pos:start="21:42" pos:end="21:44">FT0</name></expr></argument>, <argument pos:start="21:47" pos:end="21:61"><expr pos:start="21:47" pos:end="21:61"><operator pos:start="21:47" pos:end="21:47">&amp;</operator><name pos:start="21:48" pos:end="21:61"><name pos:start="21:48" pos:end="21:50">env</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:61">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:5">p</name><operator pos:start="23:6" pos:end="23:6">.</operator><name pos:start="23:7" pos:end="23:7">i</name></name> <operator pos:start="23:9" pos:end="23:10">|=</operator> <literal type="number" pos:start="23:12" pos:end="23:24">0xFFF80000ULL</literal> <operator pos:start="23:26" pos:end="23:27">&lt;&lt;</operator> <literal type="number" pos:start="23:29" pos:end="23:30">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:7">FT0</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:13"><name pos:start="25:11" pos:end="25:11">p</name><operator pos:start="25:12" pos:end="25:12">.</operator><name pos:start="25:13" pos:end="25:13">d</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
