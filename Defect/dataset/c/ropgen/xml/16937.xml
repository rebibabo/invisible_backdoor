<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16937.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">ra144_encode_subblock</name><parameter_list pos:start="1:34" pos:end="7:52">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:46">RA144Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">ractx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:60"><decl pos:start="3:35" pos:end="3:60"><type pos:start="3:35" pos:end="3:60"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:47">int16_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:60">sblock_data</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:58"><decl pos:start="5:35" pos:end="5:58"><type pos:start="5:35" pos:end="5:58"><specifier pos:start="5:35" pos:end="5:39">const</specifier> <name pos:start="5:41" pos:end="5:47">int16_t</name> <modifier pos:start="5:49" pos:end="5:49">*</modifier></type><name pos:start="5:50" pos:end="5:58">lpc_coefs</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:76"><decl pos:start="5:61" pos:end="5:76"><type pos:start="5:61" pos:end="5:76"><name pos:start="5:61" pos:end="5:68">unsigned</name> <name pos:start="5:70" pos:end="5:72">int</name></type> <name pos:start="5:74" pos:end="5:76">rms</name></decl></parameter>,

                                  <parameter pos:start="7:35" pos:end="7:51"><decl pos:start="7:35" pos:end="7:51"><type pos:start="7:35" pos:end="7:51"><name pos:start="7:35" pos:end="7:47">PutBitContext</name> <modifier pos:start="7:49" pos:end="7:49">*</modifier></type><name pos:start="7:50" pos:end="7:51">pb</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="197:1">{<block_content pos:start="11:5" pos:end="195:32">

    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:25"><name pos:start="11:11" pos:end="11:14">data</name><index pos:start="11:15" pos:end="11:25">[<expr pos:start="11:16" pos:end="11:24"><name pos:start="11:16" pos:end="11:24">BLOCKSIZE</name></expr>]</index></name> <init pos:start="11:27" pos:end="11:33">= <expr pos:start="11:29" pos:end="11:33"><block pos:start="11:29" pos:end="11:33">{ <expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="11:36" pos:end="11:62"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:36" pos:end="11:62"><name pos:start="11:36" pos:end="11:39">work</name><index pos:start="11:40" pos:end="11:62">[<expr pos:start="11:41" pos:end="11:61"><name pos:start="11:41" pos:end="11:49">LPC_ORDER</name> <operator pos:start="11:51" pos:end="11:51">+</operator> <name pos:start="11:53" pos:end="11:61">BLOCKSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:26"><name pos:start="13:11" pos:end="13:15">coefs</name><index pos:start="13:16" pos:end="13:26">[<expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:25">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:74"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">float</name></type> <name pos:start="15:11" pos:end="15:25"><name pos:start="15:11" pos:end="15:14">zero</name><index pos:start="15:15" pos:end="15:25">[<expr pos:start="15:16" pos:end="15:24"><name pos:start="15:16" pos:end="15:24">BLOCKSIZE</name></expr>]</index></name></decl>, <decl pos:start="15:28" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:28" pos:end="15:41"><name pos:start="15:28" pos:end="15:30">cba</name><index pos:start="15:31" pos:end="15:41">[<expr pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:40">BLOCKSIZE</name></expr>]</index></name></decl>, <decl pos:start="15:44" pos:end="15:57"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:44" pos:end="15:57"><name pos:start="15:44" pos:end="15:46">cb1</name><index pos:start="15:47" pos:end="15:57">[<expr pos:start="15:48" pos:end="15:56"><name pos:start="15:48" pos:end="15:56">BLOCKSIZE</name></expr>]</index></name></decl>, <decl pos:start="15:60" pos:end="15:73"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:60" pos:end="15:73"><name pos:start="15:60" pos:end="15:62">cb2</name><index pos:start="15:63" pos:end="15:73">[<expr pos:start="15:64" pos:end="15:72"><name pos:start="15:64" pos:end="15:72">BLOCKSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int16_t</name></type> <name pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:20">cba_vect</name><index pos:start="17:21" pos:end="17:31">[<expr pos:start="17:22" pos:end="17:30"><name pos:start="17:22" pos:end="17:30">BLOCKSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">cba_idx</name></decl>, <decl pos:start="19:18" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:18" pos:end="19:24">cb1_idx</name></decl>, <decl pos:start="19:27" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:27" pos:end="19:33">cb2_idx</name></decl>, <decl pos:start="19:36" pos:end="19:39"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:36" pos:end="19:39">gain</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:12"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">unsigned</name></type> <name pos:start="23:14" pos:end="23:17"><name pos:start="23:14" pos:end="23:14">m</name><index pos:start="23:15" pos:end="23:17">[<expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:15"><decl pos:start="25:5" pos:end="25:14"><type pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:9">float</name></type> <name pos:start="25:11" pos:end="25:14"><name pos:start="25:11" pos:end="25:11">g</name><index pos:start="25:12" pos:end="25:14">[<expr pos:start="25:13" pos:end="25:13"><literal type="number" pos:start="25:13" pos:end="25:13">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:9">float</name></type> <name pos:start="27:11" pos:end="27:15">error</name></decl>, <decl pos:start="27:18" pos:end="27:27"><type ref="prev" pos:start="27:5" pos:end="27:9"/><name pos:start="27:18" pos:end="27:27">best_error</name></decl>;</decl_stmt>



    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:35">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:30"><expr pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:29">LPC_ORDER</name></expr>;</condition> <incr pos:start="31:32" pos:end="31:34"><expr pos:start="31:32" pos:end="31:34"><name pos:start="31:32" pos:end="31:32">i</name><operator pos:start="31:33" pos:end="31:34">++</operator></expr></incr>)</control> <block pos:start="31:37" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:45">

        <expr_stmt pos:start="33:9" pos:end="33:52"><expr pos:start="33:9" pos:end="33:51"><name pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">work</name><index pos:start="33:13" pos:end="33:15">[<expr pos:start="33:14" pos:end="33:14"><name pos:start="33:14" pos:end="33:14">i</name></expr>]</index></name> <operator pos:start="33:17" pos:end="33:17">=</operator> <name pos:start="33:19" pos:end="33:51"><name pos:start="33:19" pos:end="33:23">ractx</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:36">curr_sblock</name><index pos:start="33:37" pos:end="33:51">[<expr pos:start="33:38" pos:end="33:50"><name pos:start="33:38" pos:end="33:46">BLOCKSIZE</name> <operator pos:start="33:48" pos:end="33:48">+</operator> <name pos:start="33:50" pos:end="33:50">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:13">coefs</name><index pos:start="35:14" pos:end="35:16">[<expr pos:start="35:15" pos:end="35:15"><name pos:start="35:15" pos:end="35:15">i</name></expr>]</index></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:31"><name pos:start="35:20" pos:end="35:28">lpc_coefs</name><index pos:start="35:29" pos:end="35:31">[<expr pos:start="35:30" pos:end="35:30"><name pos:start="35:30" pos:end="35:30">i</name></expr>]</index></name> <operator pos:start="35:33" pos:end="35:33">*</operator> <operator pos:start="35:35" pos:end="35:35">(</operator><literal type="number" pos:start="35:36" pos:end="35:36">1</literal><operator pos:start="35:37" pos:end="35:37">/</operator><literal type="number" pos:start="35:38" pos:end="35:43">4096.0</literal><operator pos:start="35:44" pos:end="35:44">)</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" format="doxygen" pos:start="41:5" pos:end="47:7">/**

     * Calculate the zero-input response of the LPC filter and subtract it from

     * input data.

     */</comment>

    <expr_stmt pos:start="49:5" pos:end="51:44"><expr pos:start="49:5" pos:end="51:43"><call pos:start="49:5" pos:end="51:43"><name pos:start="49:5" pos:end="49:32">ff_celp_lp_synthesis_filterf</name><argument_list pos:start="49:33" pos:end="51:43">(<argument pos:start="49:34" pos:end="49:49"><expr pos:start="49:34" pos:end="49:49"><name pos:start="49:34" pos:end="49:37">work</name> <operator pos:start="49:39" pos:end="49:39">+</operator> <name pos:start="49:41" pos:end="49:49">LPC_ORDER</name></expr></argument>, <argument pos:start="49:52" pos:end="49:56"><expr pos:start="49:52" pos:end="49:56"><name pos:start="49:52" pos:end="49:56">coefs</name></expr></argument>, <argument pos:start="49:59" pos:end="49:62"><expr pos:start="49:59" pos:end="49:62"><name pos:start="49:59" pos:end="49:62">data</name></expr></argument>, <argument pos:start="49:65" pos:end="49:73"><expr pos:start="49:65" pos:end="49:73"><name pos:start="49:65" pos:end="49:73">BLOCKSIZE</name></expr></argument>,

                                 <argument pos:start="51:34" pos:end="51:42"><expr pos:start="51:34" pos:end="51:42"><name pos:start="51:34" pos:end="51:42">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="59:5">for <control pos:start="53:9" pos:end="53:35">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:30"><expr pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:29">BLOCKSIZE</name></expr>;</condition> <incr pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:32">i</name><operator pos:start="53:33" pos:end="53:34">++</operator></expr></incr>)</control> <block pos:start="53:37" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:43">

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:12">zero</name><index pos:start="55:13" pos:end="55:15">[<expr pos:start="55:14" pos:end="55:14"><name pos:start="55:14" pos:end="55:14">i</name></expr>]</index></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:37"><name pos:start="55:19" pos:end="55:22">work</name><index pos:start="55:23" pos:end="55:37">[<expr pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:32">LPC_ORDER</name> <operator pos:start="55:34" pos:end="55:34">+</operator> <name pos:start="55:36" pos:end="55:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:43"><expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">data</name><index pos:start="57:13" pos:end="57:15">[<expr pos:start="57:14" pos:end="57:14"><name pos:start="57:14" pos:end="57:14">i</name></expr>]</index></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:29">sblock_data</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">i</name></expr>]</index></name> <operator pos:start="57:34" pos:end="57:34">-</operator> <name pos:start="57:36" pos:end="57:42"><name pos:start="57:36" pos:end="57:39">zero</name><index pos:start="57:40" pos:end="57:42">[<expr pos:start="57:41" pos:end="57:41"><name pos:start="57:41" pos:end="57:41">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" format="doxygen" pos:start="63:5" pos:end="71:7">/**

     * Codebook search is performed without taking into account the contribution

     * of the previous subblock, since it has been just subtracted from input

     * data.

     */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:47"><expr pos:start="73:5" pos:end="73:46"><call pos:start="73:5" pos:end="73:46"><name pos:start="73:5" pos:end="73:10">memset</name><argument_list pos:start="73:11" pos:end="73:46">(<argument pos:start="73:12" pos:end="73:15"><expr pos:start="73:12" pos:end="73:15"><name pos:start="73:12" pos:end="73:15">work</name></expr></argument>, <argument pos:start="73:18" pos:end="73:18"><expr pos:start="73:18" pos:end="73:18"><literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr></argument>, <argument pos:start="73:21" pos:end="73:45"><expr pos:start="73:21" pos:end="73:45"><name pos:start="73:21" pos:end="73:29">LPC_ORDER</name> <operator pos:start="73:31" pos:end="73:31">*</operator> <sizeof pos:start="73:33" pos:end="73:45">sizeof<argument_list pos:start="73:39" pos:end="73:45">(<argument pos:start="73:40" pos:end="73:44"><expr pos:start="73:40" pos:end="73:44"><operator pos:start="73:40" pos:end="73:40">*</operator><name pos:start="73:41" pos:end="73:44">work</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="79:39"><expr pos:start="77:5" pos:end="79:38"><name pos:start="77:5" pos:end="77:11">cba_idx</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="79:38"><name pos:start="77:15" pos:end="77:32">adaptive_cb_search</name><argument_list pos:start="77:33" pos:end="79:38">(<argument pos:start="77:34" pos:end="77:48"><expr pos:start="77:34" pos:end="77:48"><name pos:start="77:34" pos:end="77:48"><name pos:start="77:34" pos:end="77:38">ractx</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:48">adapt_cb</name></name></expr></argument>, <argument pos:start="77:51" pos:end="77:66"><expr pos:start="77:51" pos:end="77:66"><name pos:start="77:51" pos:end="77:54">work</name> <operator pos:start="77:56" pos:end="77:56">+</operator> <name pos:start="77:58" pos:end="77:66">LPC_ORDER</name></expr></argument>, <argument pos:start="77:69" pos:end="77:73"><expr pos:start="77:69" pos:end="77:73"><name pos:start="77:69" pos:end="77:73">coefs</name></expr></argument>,

                                 <argument pos:start="79:34" pos:end="79:37"><expr pos:start="79:34" pos:end="79:37"><name pos:start="79:34" pos:end="79:37">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="99:5"><if pos:start="81:5" pos:end="99:5">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:15">cba_idx</name></expr>)</condition> <block pos:start="81:18" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:47">

        <comment type="block" format="doxygen" pos:start="83:9" pos:end="89:11">/**

         * The filtered vector from the adaptive codebook can be retrieved from

         * work, see implementation of adaptive_cb_search().

         */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><call pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:14">memcpy</name><argument_list pos:start="91:15" pos:end="91:50">(<argument pos:start="91:16" pos:end="91:18"><expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">cba</name></expr></argument>, <argument pos:start="91:21" pos:end="91:36"><expr pos:start="91:21" pos:end="91:36"><name pos:start="91:21" pos:end="91:24">work</name> <operator pos:start="91:26" pos:end="91:26">+</operator> <name pos:start="91:28" pos:end="91:36">LPC_ORDER</name></expr></argument>, <argument pos:start="91:39" pos:end="91:49"><expr pos:start="91:39" pos:end="91:49"><sizeof pos:start="91:39" pos:end="91:49">sizeof<argument_list pos:start="91:45" pos:end="91:49">(<argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">cba</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:80"><expr pos:start="95:9" pos:end="95:79"><call pos:start="95:9" pos:end="95:79"><name pos:start="95:9" pos:end="95:23">ff_copy_and_dup</name><argument_list pos:start="95:24" pos:end="95:79">(<argument pos:start="95:25" pos:end="95:32"><expr pos:start="95:25" pos:end="95:32"><name pos:start="95:25" pos:end="95:32">cba_vect</name></expr></argument>, <argument pos:start="95:35" pos:end="95:49"><expr pos:start="95:35" pos:end="95:49"><name pos:start="95:35" pos:end="95:49"><name pos:start="95:35" pos:end="95:39">ractx</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:49">adapt_cb</name></name></expr></argument>, <argument pos:start="95:52" pos:end="95:78"><expr pos:start="95:52" pos:end="95:78"><name pos:start="95:52" pos:end="95:58">cba_idx</name> <operator pos:start="95:60" pos:end="95:60">+</operator> <name pos:start="95:62" pos:end="95:70">BLOCKSIZE</name> <operator pos:start="95:72" pos:end="95:72">/</operator> <literal type="number" pos:start="95:74" pos:end="95:76">2</literal> <operator pos:start="95:76" pos:end="95:76">-</operator> <literal type="number" pos:start="95:78" pos:end="95:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:47"><expr pos:start="97:9" pos:end="97:46"><name pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:9">m</name><index pos:start="97:10" pos:end="97:12">[<expr pos:start="97:11" pos:end="97:11"><literal type="number" pos:start="97:11" pos:end="97:11">0</literal></expr>]</index></name> <operator pos:start="97:14" pos:end="97:14">=</operator> <operator pos:start="97:16" pos:end="97:16">(</operator><call pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:23">ff_irms</name><argument_list pos:start="97:24" pos:end="97:33">(<argument pos:start="97:25" pos:end="97:32"><expr pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:32">cba_vect</name></expr></argument>)</argument_list></call> <operator pos:start="97:35" pos:end="97:35">*</operator> <name pos:start="97:37" pos:end="97:39">rms</name><operator pos:start="97:40" pos:end="97:40">)</operator> <operator pos:start="97:42" pos:end="97:43">&gt;&gt;</operator> <literal type="number" pos:start="97:45" pos:end="97:46">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:80"><expr pos:start="101:5" pos:end="101:79"><call pos:start="101:5" pos:end="101:79"><name pos:start="101:5" pos:end="101:19">fixed_cb_search</name><argument_list pos:start="101:20" pos:end="101:79">(<argument pos:start="101:21" pos:end="101:36"><expr pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:24">work</name> <operator pos:start="101:26" pos:end="101:26">+</operator> <name pos:start="101:28" pos:end="101:36">LPC_ORDER</name></expr></argument>, <argument pos:start="101:39" pos:end="101:43"><expr pos:start="101:39" pos:end="101:43"><name pos:start="101:39" pos:end="101:43">coefs</name></expr></argument>, <argument pos:start="101:46" pos:end="101:49"><expr pos:start="101:46" pos:end="101:49"><name pos:start="101:46" pos:end="101:49">data</name></expr></argument>, <argument pos:start="101:52" pos:end="101:58"><expr pos:start="101:52" pos:end="101:58"><name pos:start="101:52" pos:end="101:58">cba_idx</name></expr></argument>, <argument pos:start="101:61" pos:end="101:68"><expr pos:start="101:61" pos:end="101:68"><operator pos:start="101:61" pos:end="101:61">&amp;</operator><name pos:start="101:62" pos:end="101:68">cb1_idx</name></expr></argument>, <argument pos:start="101:71" pos:end="101:78"><expr pos:start="101:71" pos:end="101:78"><operator pos:start="101:71" pos:end="101:71">&amp;</operator><name pos:start="101:72" pos:end="101:78">cb2_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="103:5" pos:end="109:5">for <control pos:start="103:9" pos:end="103:35">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:29">BLOCKSIZE</name></expr>;</condition> <incr pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:32">i</name><operator pos:start="103:33" pos:end="103:34">++</operator></expr></incr>)</control> <block pos:start="103:37" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:42">

        <expr_stmt pos:start="105:9" pos:end="105:42"><expr pos:start="105:9" pos:end="105:41"><name pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:11">cb1</name><index pos:start="105:12" pos:end="105:14">[<expr pos:start="105:13" pos:end="105:13"><name pos:start="105:13" pos:end="105:13">i</name></expr>]</index></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:41"><name pos:start="105:18" pos:end="105:29">ff_cb1_vects</name><index pos:start="105:30" pos:end="105:38">[<expr pos:start="105:31" pos:end="105:37"><name pos:start="105:31" pos:end="105:37">cb1_idx</name></expr>]</index><index pos:start="105:39" pos:end="105:41">[<expr pos:start="105:40" pos:end="105:40"><name pos:start="105:40" pos:end="105:40">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:14"><name pos:start="107:9" pos:end="107:11">cb2</name><index pos:start="107:12" pos:end="107:14">[<expr pos:start="107:13" pos:end="107:13"><name pos:start="107:13" pos:end="107:13">i</name></expr>]</index></name> <operator pos:start="107:16" pos:end="107:16">=</operator> <name pos:start="107:18" pos:end="107:41"><name pos:start="107:18" pos:end="107:29">ff_cb2_vects</name><index pos:start="107:30" pos:end="107:38">[<expr pos:start="107:31" pos:end="107:37"><name pos:start="107:31" pos:end="107:37">cb2_idx</name></expr>]</index><index pos:start="107:39" pos:end="107:41">[<expr pos:start="107:40" pos:end="107:40"><name pos:start="107:40" pos:end="107:40">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="111:5" pos:end="113:44"><expr pos:start="111:5" pos:end="113:43"><call pos:start="111:5" pos:end="113:43"><name pos:start="111:5" pos:end="111:32">ff_celp_lp_synthesis_filterf</name><argument_list pos:start="111:33" pos:end="113:43">(<argument pos:start="111:34" pos:end="111:49"><expr pos:start="111:34" pos:end="111:49"><name pos:start="111:34" pos:end="111:37">work</name> <operator pos:start="111:39" pos:end="111:39">+</operator> <name pos:start="111:41" pos:end="111:49">LPC_ORDER</name></expr></argument>, <argument pos:start="111:52" pos:end="111:56"><expr pos:start="111:52" pos:end="111:56"><name pos:start="111:52" pos:end="111:56">coefs</name></expr></argument>, <argument pos:start="111:59" pos:end="111:61"><expr pos:start="111:59" pos:end="111:61"><name pos:start="111:59" pos:end="111:61">cb1</name></expr></argument>, <argument pos:start="111:64" pos:end="111:72"><expr pos:start="111:64" pos:end="111:72"><name pos:start="111:64" pos:end="111:72">BLOCKSIZE</name></expr></argument>,

                                 <argument pos:start="113:34" pos:end="113:42"><expr pos:start="113:34" pos:end="113:42"><name pos:start="113:34" pos:end="113:42">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:47"><expr pos:start="115:5" pos:end="115:46"><call pos:start="115:5" pos:end="115:46"><name pos:start="115:5" pos:end="115:10">memcpy</name><argument_list pos:start="115:11" pos:end="115:46">(<argument pos:start="115:12" pos:end="115:14"><expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">cb1</name></expr></argument>, <argument pos:start="115:17" pos:end="115:32"><expr pos:start="115:17" pos:end="115:32"><name pos:start="115:17" pos:end="115:20">work</name> <operator pos:start="115:22" pos:end="115:22">+</operator> <name pos:start="115:24" pos:end="115:32">LPC_ORDER</name></expr></argument>, <argument pos:start="115:35" pos:end="115:45"><expr pos:start="115:35" pos:end="115:45"><sizeof pos:start="115:35" pos:end="115:45">sizeof<argument_list pos:start="115:41" pos:end="115:45">(<argument pos:start="115:42" pos:end="115:44"><expr pos:start="115:42" pos:end="115:44"><name pos:start="115:42" pos:end="115:44">cb1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:45"><expr pos:start="117:5" pos:end="117:44"><name pos:start="117:5" pos:end="117:8"><name pos:start="117:5" pos:end="117:5">m</name><index pos:start="117:6" pos:end="117:8">[<expr pos:start="117:7" pos:end="117:7"><literal type="number" pos:start="117:7" pos:end="117:7">1</literal></expr>]</index></name> <operator pos:start="117:10" pos:end="117:10">=</operator> <operator pos:start="117:12" pos:end="117:12">(</operator><name pos:start="117:13" pos:end="117:32"><name pos:start="117:13" pos:end="117:23">ff_cb1_base</name><index pos:start="117:24" pos:end="117:32">[<expr pos:start="117:25" pos:end="117:31"><name pos:start="117:25" pos:end="117:31">cb1_idx</name></expr>]</index></name> <operator pos:start="117:34" pos:end="117:34">*</operator> <name pos:start="117:36" pos:end="117:38">rms</name><operator pos:start="117:39" pos:end="117:39">)</operator> <operator pos:start="117:41" pos:end="117:42">&gt;&gt;</operator> <literal type="number" pos:start="117:44" pos:end="117:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="121:44"><expr pos:start="119:5" pos:end="121:43"><call pos:start="119:5" pos:end="121:43"><name pos:start="119:5" pos:end="119:32">ff_celp_lp_synthesis_filterf</name><argument_list pos:start="119:33" pos:end="121:43">(<argument pos:start="119:34" pos:end="119:49"><expr pos:start="119:34" pos:end="119:49"><name pos:start="119:34" pos:end="119:37">work</name> <operator pos:start="119:39" pos:end="119:39">+</operator> <name pos:start="119:41" pos:end="119:49">LPC_ORDER</name></expr></argument>, <argument pos:start="119:52" pos:end="119:56"><expr pos:start="119:52" pos:end="119:56"><name pos:start="119:52" pos:end="119:56">coefs</name></expr></argument>, <argument pos:start="119:59" pos:end="119:61"><expr pos:start="119:59" pos:end="119:61"><name pos:start="119:59" pos:end="119:61">cb2</name></expr></argument>, <argument pos:start="119:64" pos:end="119:72"><expr pos:start="119:64" pos:end="119:72"><name pos:start="119:64" pos:end="119:72">BLOCKSIZE</name></expr></argument>,

                                 <argument pos:start="121:34" pos:end="121:42"><expr pos:start="121:34" pos:end="121:42"><name pos:start="121:34" pos:end="121:42">LPC_ORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:47"><expr pos:start="123:5" pos:end="123:46"><call pos:start="123:5" pos:end="123:46"><name pos:start="123:5" pos:end="123:10">memcpy</name><argument_list pos:start="123:11" pos:end="123:46">(<argument pos:start="123:12" pos:end="123:14"><expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">cb2</name></expr></argument>, <argument pos:start="123:17" pos:end="123:32"><expr pos:start="123:17" pos:end="123:32"><name pos:start="123:17" pos:end="123:20">work</name> <operator pos:start="123:22" pos:end="123:22">+</operator> <name pos:start="123:24" pos:end="123:32">LPC_ORDER</name></expr></argument>, <argument pos:start="123:35" pos:end="123:45"><expr pos:start="123:35" pos:end="123:45"><sizeof pos:start="123:35" pos:end="123:45">sizeof<argument_list pos:start="123:41" pos:end="123:45">(<argument pos:start="123:42" pos:end="123:44"><expr pos:start="123:42" pos:end="123:44"><name pos:start="123:42" pos:end="123:44">cb2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:45"><expr pos:start="125:5" pos:end="125:44"><name pos:start="125:5" pos:end="125:8"><name pos:start="125:5" pos:end="125:5">m</name><index pos:start="125:6" pos:end="125:8">[<expr pos:start="125:7" pos:end="125:7"><literal type="number" pos:start="125:7" pos:end="125:7">2</literal></expr>]</index></name> <operator pos:start="125:10" pos:end="125:10">=</operator> <operator pos:start="125:12" pos:end="125:12">(</operator><name pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:23">ff_cb2_base</name><index pos:start="125:24" pos:end="125:32">[<expr pos:start="125:25" pos:end="125:31"><name pos:start="125:25" pos:end="125:31">cb2_idx</name></expr>]</index></name> <operator pos:start="125:34" pos:end="125:34">*</operator> <name pos:start="125:36" pos:end="125:38">rms</name><operator pos:start="125:39" pos:end="125:39">)</operator> <operator pos:start="125:41" pos:end="125:42">&gt;&gt;</operator> <literal type="number" pos:start="125:44" pos:end="125:44">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:25"><expr pos:start="127:5" pos:end="127:24"><name pos:start="127:5" pos:end="127:14">best_error</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <name pos:start="127:18" pos:end="127:24">FLT_MAX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:13"><expr pos:start="129:5" pos:end="129:12"><name pos:start="129:5" pos:end="129:8">gain</name> <operator pos:start="129:10" pos:end="129:10">=</operator> <literal type="number" pos:start="129:12" pos:end="129:12">0</literal></expr>;</expr_stmt>

    <for pos:start="131:5" pos:end="183:5">for <control pos:start="131:9" pos:end="131:29">(<init pos:start="131:10" pos:end="131:15"><expr pos:start="131:10" pos:end="131:14"><name pos:start="131:10" pos:end="131:10">n</name> <operator pos:start="131:12" pos:end="131:12">=</operator> <literal type="number" pos:start="131:14" pos:end="131:14">0</literal></expr>;</init> <condition pos:start="131:17" pos:end="131:24"><expr pos:start="131:17" pos:end="131:23"><name pos:start="131:17" pos:end="131:17">n</name> <operator pos:start="131:19" pos:end="131:19">&lt;</operator> <literal type="number" pos:start="131:21" pos:end="131:23">256</literal></expr>;</condition> <incr pos:start="131:26" pos:end="131:28"><expr pos:start="131:26" pos:end="131:28"><name pos:start="131:26" pos:end="131:26">n</name><operator pos:start="131:27" pos:end="131:28">++</operator></expr></incr>)</control> <block pos:start="131:31" pos:end="183:5">{<block_content pos:start="133:9" pos:end="181:9">

        <expr_stmt pos:start="133:9" pos:end="135:26"><expr pos:start="133:9" pos:end="135:25"><name pos:start="133:9" pos:end="133:12"><name pos:start="133:9" pos:end="133:9">g</name><index pos:start="133:10" pos:end="133:12">[<expr pos:start="133:11" pos:end="133:11"><literal type="number" pos:start="133:11" pos:end="133:11">1</literal></expr>]</index></name> <operator pos:start="133:14" pos:end="133:14">=</operator> <operator pos:start="133:16" pos:end="133:16">(</operator><operator pos:start="133:17" pos:end="133:17">(</operator><name pos:start="133:18" pos:end="133:38"><name pos:start="133:18" pos:end="133:32">ff_gain_val_tab</name><index pos:start="133:33" pos:end="133:35">[<expr pos:start="133:34" pos:end="133:34"><name pos:start="133:34" pos:end="133:34">n</name></expr>]</index><index pos:start="133:36" pos:end="133:38">[<expr pos:start="133:37" pos:end="133:37"><literal type="number" pos:start="133:37" pos:end="133:37">1</literal></expr>]</index></name> <operator pos:start="133:40" pos:end="133:40">*</operator> <name pos:start="133:42" pos:end="133:45"><name pos:start="133:42" pos:end="133:42">m</name><index pos:start="133:43" pos:end="133:45">[<expr pos:start="133:44" pos:end="133:44"><literal type="number" pos:start="133:44" pos:end="133:44">1</literal></expr>]</index></name><operator pos:start="133:46" pos:end="133:46">)</operator> <operator pos:start="133:48" pos:end="133:49">&gt;&gt;</operator> <name pos:start="133:51" pos:end="133:68"><name pos:start="133:51" pos:end="133:65">ff_gain_exp_tab</name><index pos:start="133:66" pos:end="133:68">[<expr pos:start="133:67" pos:end="133:67"><name pos:start="133:67" pos:end="133:67">n</name></expr>]</index></name><operator pos:start="133:69" pos:end="133:69">)</operator> <operator pos:start="133:71" pos:end="133:71">*</operator>

               <operator pos:start="135:16" pos:end="135:16">(</operator><literal type="number" pos:start="135:17" pos:end="135:17">1</literal><operator pos:start="135:18" pos:end="135:18">/</operator><literal type="number" pos:start="135:19" pos:end="135:24">4096.0</literal><operator pos:start="135:25" pos:end="135:25">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="139:26"><expr pos:start="137:9" pos:end="139:25"><name pos:start="137:9" pos:end="137:12"><name pos:start="137:9" pos:end="137:9">g</name><index pos:start="137:10" pos:end="137:12">[<expr pos:start="137:11" pos:end="137:11"><literal type="number" pos:start="137:11" pos:end="137:11">2</literal></expr>]</index></name> <operator pos:start="137:14" pos:end="137:14">=</operator> <operator pos:start="137:16" pos:end="137:16">(</operator><operator pos:start="137:17" pos:end="137:17">(</operator><name pos:start="137:18" pos:end="137:38"><name pos:start="137:18" pos:end="137:32">ff_gain_val_tab</name><index pos:start="137:33" pos:end="137:35">[<expr pos:start="137:34" pos:end="137:34"><name pos:start="137:34" pos:end="137:34">n</name></expr>]</index><index pos:start="137:36" pos:end="137:38">[<expr pos:start="137:37" pos:end="137:37"><literal type="number" pos:start="137:37" pos:end="137:37">2</literal></expr>]</index></name> <operator pos:start="137:40" pos:end="137:40">*</operator> <name pos:start="137:42" pos:end="137:45"><name pos:start="137:42" pos:end="137:42">m</name><index pos:start="137:43" pos:end="137:45">[<expr pos:start="137:44" pos:end="137:44"><literal type="number" pos:start="137:44" pos:end="137:44">2</literal></expr>]</index></name><operator pos:start="137:46" pos:end="137:46">)</operator> <operator pos:start="137:48" pos:end="137:49">&gt;&gt;</operator> <name pos:start="137:51" pos:end="137:68"><name pos:start="137:51" pos:end="137:65">ff_gain_exp_tab</name><index pos:start="137:66" pos:end="137:68">[<expr pos:start="137:67" pos:end="137:67"><name pos:start="137:67" pos:end="137:67">n</name></expr>]</index></name><operator pos:start="137:69" pos:end="137:69">)</operator> <operator pos:start="137:71" pos:end="137:71">*</operator>

               <operator pos:start="139:16" pos:end="139:16">(</operator><literal type="number" pos:start="139:17" pos:end="139:17">1</literal><operator pos:start="139:18" pos:end="139:18">/</operator><literal type="number" pos:start="139:19" pos:end="139:24">4096.0</literal><operator pos:start="139:25" pos:end="139:25">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:18"><expr pos:start="141:9" pos:end="141:17"><name pos:start="141:9" pos:end="141:13">error</name> <operator pos:start="141:15" pos:end="141:15">=</operator> <literal type="number" pos:start="141:17" pos:end="141:17">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="173:9"><if pos:start="143:9" pos:end="161:9">if <condition pos:start="143:12" pos:end="143:20">(<expr pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:19">cba_idx</name></expr>)</condition> <block pos:start="143:22" pos:end="161:9">{<block_content pos:start="145:13" pos:end="159:13">

            <expr_stmt pos:start="145:13" pos:end="147:30"><expr pos:start="145:13" pos:end="147:29"><name pos:start="145:13" pos:end="145:16"><name pos:start="145:13" pos:end="145:13">g</name><index pos:start="145:14" pos:end="145:16">[<expr pos:start="145:15" pos:end="145:15"><literal type="number" pos:start="145:15" pos:end="145:15">0</literal></expr>]</index></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <operator pos:start="145:20" pos:end="145:20">(</operator><operator pos:start="145:21" pos:end="145:21">(</operator><name pos:start="145:22" pos:end="145:42"><name pos:start="145:22" pos:end="145:36">ff_gain_val_tab</name><index pos:start="145:37" pos:end="145:39">[<expr pos:start="145:38" pos:end="145:38"><name pos:start="145:38" pos:end="145:38">n</name></expr>]</index><index pos:start="145:40" pos:end="145:42">[<expr pos:start="145:41" pos:end="145:41"><literal type="number" pos:start="145:41" pos:end="145:41">0</literal></expr>]</index></name> <operator pos:start="145:44" pos:end="145:44">*</operator> <name pos:start="145:46" pos:end="145:49"><name pos:start="145:46" pos:end="145:46">m</name><index pos:start="145:47" pos:end="145:49">[<expr pos:start="145:48" pos:end="145:48"><literal type="number" pos:start="145:48" pos:end="145:48">0</literal></expr>]</index></name><operator pos:start="145:50" pos:end="145:50">)</operator> <operator pos:start="145:52" pos:end="145:53">&gt;&gt;</operator> <name pos:start="145:55" pos:end="145:72"><name pos:start="145:55" pos:end="145:69">ff_gain_exp_tab</name><index pos:start="145:70" pos:end="145:72">[<expr pos:start="145:71" pos:end="145:71"><name pos:start="145:71" pos:end="145:71">n</name></expr>]</index></name><operator pos:start="145:73" pos:end="145:73">)</operator> <operator pos:start="145:75" pos:end="145:75">*</operator>

                   <operator pos:start="147:20" pos:end="147:20">(</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal><operator pos:start="147:22" pos:end="147:22">/</operator><literal type="number" pos:start="147:23" pos:end="147:28">4096.0</literal><operator pos:start="147:29" pos:end="147:29">)</operator></expr>;</expr_stmt>

            <for pos:start="149:13" pos:end="159:13">for <control pos:start="149:17" pos:end="149:43">(<init pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:22"><name pos:start="149:18" pos:end="149:18">i</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>;</init> <condition pos:start="149:25" pos:end="149:38"><expr pos:start="149:25" pos:end="149:37"><name pos:start="149:25" pos:end="149:25">i</name> <operator pos:start="149:27" pos:end="149:27">&lt;</operator> <name pos:start="149:29" pos:end="149:37">BLOCKSIZE</name></expr>;</condition> <incr pos:start="149:40" pos:end="149:42"><expr pos:start="149:40" pos:end="149:42"><name pos:start="149:40" pos:end="149:40">i</name><operator pos:start="149:41" pos:end="149:42">++</operator></expr></incr>)</control> <block pos:start="149:45" pos:end="159:13">{<block_content pos:start="151:17" pos:end="157:52">

                <expr_stmt pos:start="151:17" pos:end="153:40"><expr pos:start="151:17" pos:end="153:39"><name pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:20">data</name><index pos:start="151:21" pos:end="151:23">[<expr pos:start="151:22" pos:end="151:22"><name pos:start="151:22" pos:end="151:22">i</name></expr>]</index></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <name pos:start="151:27" pos:end="151:33"><name pos:start="151:27" pos:end="151:30">zero</name><index pos:start="151:31" pos:end="151:33">[<expr pos:start="151:32" pos:end="151:32"><name pos:start="151:32" pos:end="151:32">i</name></expr>]</index></name> <operator pos:start="151:35" pos:end="151:35">+</operator> <name pos:start="151:37" pos:end="151:40"><name pos:start="151:37" pos:end="151:37">g</name><index pos:start="151:38" pos:end="151:40">[<expr pos:start="151:39" pos:end="151:39"><literal type="number" pos:start="151:39" pos:end="151:39">0</literal></expr>]</index></name> <operator pos:start="151:42" pos:end="151:42">*</operator> <name pos:start="151:44" pos:end="151:49"><name pos:start="151:44" pos:end="151:46">cba</name><index pos:start="151:47" pos:end="151:49">[<expr pos:start="151:48" pos:end="151:48"><name pos:start="151:48" pos:end="151:48">i</name></expr>]</index></name> <operator pos:start="151:51" pos:end="151:51">+</operator> <name pos:start="151:53" pos:end="151:56"><name pos:start="151:53" pos:end="151:53">g</name><index pos:start="151:54" pos:end="151:56">[<expr pos:start="151:55" pos:end="151:55"><literal type="number" pos:start="151:55" pos:end="151:55">1</literal></expr>]</index></name> <operator pos:start="151:58" pos:end="151:58">*</operator> <name pos:start="151:60" pos:end="151:65"><name pos:start="151:60" pos:end="151:62">cb1</name><index pos:start="151:63" pos:end="151:65">[<expr pos:start="151:64" pos:end="151:64"><name pos:start="151:64" pos:end="151:64">i</name></expr>]</index></name> <operator pos:start="151:67" pos:end="151:67">+</operator>

                          <name pos:start="153:27" pos:end="153:30"><name pos:start="153:27" pos:end="153:27">g</name><index pos:start="153:28" pos:end="153:30">[<expr pos:start="153:29" pos:end="153:29"><literal type="number" pos:start="153:29" pos:end="153:29">2</literal></expr>]</index></name> <operator pos:start="153:32" pos:end="153:32">*</operator> <name pos:start="153:34" pos:end="153:39"><name pos:start="153:34" pos:end="153:36">cb2</name><index pos:start="153:37" pos:end="153:39">[<expr pos:start="153:38" pos:end="153:38"><name pos:start="153:38" pos:end="153:38">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="157:52"><expr pos:start="155:17" pos:end="157:51"><name pos:start="155:17" pos:end="155:21">error</name> <operator pos:start="155:23" pos:end="155:24">+=</operator> <operator pos:start="155:26" pos:end="155:26">(</operator><name pos:start="155:27" pos:end="155:33"><name pos:start="155:27" pos:end="155:30">data</name><index pos:start="155:31" pos:end="155:33">[<expr pos:start="155:32" pos:end="155:32"><name pos:start="155:32" pos:end="155:32">i</name></expr>]</index></name> <operator pos:start="155:35" pos:end="155:35">-</operator> <name pos:start="155:37" pos:end="155:50"><name pos:start="155:37" pos:end="155:47">sblock_data</name><index pos:start="155:48" pos:end="155:50">[<expr pos:start="155:49" pos:end="155:49"><name pos:start="155:49" pos:end="155:49">i</name></expr>]</index></name><operator pos:start="155:51" pos:end="155:51">)</operator> <operator pos:start="155:53" pos:end="155:53">*</operator>

                         <operator pos:start="157:26" pos:end="157:26">(</operator><name pos:start="157:27" pos:end="157:33"><name pos:start="157:27" pos:end="157:30">data</name><index pos:start="157:31" pos:end="157:33">[<expr pos:start="157:32" pos:end="157:32"><name pos:start="157:32" pos:end="157:32">i</name></expr>]</index></name> <operator pos:start="157:35" pos:end="157:35">-</operator> <name pos:start="157:37" pos:end="157:50"><name pos:start="157:37" pos:end="157:47">sblock_data</name><index pos:start="157:48" pos:end="157:50">[<expr pos:start="157:49" pos:end="157:49"><name pos:start="157:49" pos:end="157:49">i</name></expr>]</index></name><operator pos:start="157:51" pos:end="157:51">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="161:11" pos:end="173:9">else <block pos:start="161:16" pos:end="173:9">{<block_content pos:start="163:13" pos:end="171:13">

            <for pos:start="163:13" pos:end="171:13">for <control pos:start="163:17" pos:end="163:43">(<init pos:start="163:18" pos:end="163:23"><expr pos:start="163:18" pos:end="163:22"><name pos:start="163:18" pos:end="163:18">i</name> <operator pos:start="163:20" pos:end="163:20">=</operator> <literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>;</init> <condition pos:start="163:25" pos:end="163:38"><expr pos:start="163:25" pos:end="163:37"><name pos:start="163:25" pos:end="163:25">i</name> <operator pos:start="163:27" pos:end="163:27">&lt;</operator> <name pos:start="163:29" pos:end="163:37">BLOCKSIZE</name></expr>;</condition> <incr pos:start="163:40" pos:end="163:42"><expr pos:start="163:40" pos:end="163:42"><name pos:start="163:40" pos:end="163:40">i</name><operator pos:start="163:41" pos:end="163:42">++</operator></expr></incr>)</control> <block pos:start="163:45" pos:end="171:13">{<block_content pos:start="165:17" pos:end="169:52">

                <expr_stmt pos:start="165:17" pos:end="165:66"><expr pos:start="165:17" pos:end="165:65"><name pos:start="165:17" pos:end="165:23"><name pos:start="165:17" pos:end="165:20">data</name><index pos:start="165:21" pos:end="165:23">[<expr pos:start="165:22" pos:end="165:22"><name pos:start="165:22" pos:end="165:22">i</name></expr>]</index></name> <operator pos:start="165:25" pos:end="165:25">=</operator> <name pos:start="165:27" pos:end="165:33"><name pos:start="165:27" pos:end="165:30">zero</name><index pos:start="165:31" pos:end="165:33">[<expr pos:start="165:32" pos:end="165:32"><name pos:start="165:32" pos:end="165:32">i</name></expr>]</index></name> <operator pos:start="165:35" pos:end="165:35">+</operator> <name pos:start="165:37" pos:end="165:40"><name pos:start="165:37" pos:end="165:37">g</name><index pos:start="165:38" pos:end="165:40">[<expr pos:start="165:39" pos:end="165:39"><literal type="number" pos:start="165:39" pos:end="165:39">1</literal></expr>]</index></name> <operator pos:start="165:42" pos:end="165:42">*</operator> <name pos:start="165:44" pos:end="165:49"><name pos:start="165:44" pos:end="165:46">cb1</name><index pos:start="165:47" pos:end="165:49">[<expr pos:start="165:48" pos:end="165:48"><name pos:start="165:48" pos:end="165:48">i</name></expr>]</index></name> <operator pos:start="165:51" pos:end="165:51">+</operator> <name pos:start="165:53" pos:end="165:56"><name pos:start="165:53" pos:end="165:53">g</name><index pos:start="165:54" pos:end="165:56">[<expr pos:start="165:55" pos:end="165:55"><literal type="number" pos:start="165:55" pos:end="165:55">2</literal></expr>]</index></name> <operator pos:start="165:58" pos:end="165:58">*</operator> <name pos:start="165:60" pos:end="165:65"><name pos:start="165:60" pos:end="165:62">cb2</name><index pos:start="165:63" pos:end="165:65">[<expr pos:start="165:64" pos:end="165:64"><name pos:start="165:64" pos:end="165:64">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="169:52"><expr pos:start="167:17" pos:end="169:51"><name pos:start="167:17" pos:end="167:21">error</name> <operator pos:start="167:23" pos:end="167:24">+=</operator> <operator pos:start="167:26" pos:end="167:26">(</operator><name pos:start="167:27" pos:end="167:33"><name pos:start="167:27" pos:end="167:30">data</name><index pos:start="167:31" pos:end="167:33">[<expr pos:start="167:32" pos:end="167:32"><name pos:start="167:32" pos:end="167:32">i</name></expr>]</index></name> <operator pos:start="167:35" pos:end="167:35">-</operator> <name pos:start="167:37" pos:end="167:50"><name pos:start="167:37" pos:end="167:47">sblock_data</name><index pos:start="167:48" pos:end="167:50">[<expr pos:start="167:49" pos:end="167:49"><name pos:start="167:49" pos:end="167:49">i</name></expr>]</index></name><operator pos:start="167:51" pos:end="167:51">)</operator> <operator pos:start="167:53" pos:end="167:53">*</operator>

                         <operator pos:start="169:26" pos:end="169:26">(</operator><name pos:start="169:27" pos:end="169:33"><name pos:start="169:27" pos:end="169:30">data</name><index pos:start="169:31" pos:end="169:33">[<expr pos:start="169:32" pos:end="169:32"><name pos:start="169:32" pos:end="169:32">i</name></expr>]</index></name> <operator pos:start="169:35" pos:end="169:35">-</operator> <name pos:start="169:37" pos:end="169:50"><name pos:start="169:37" pos:end="169:47">sblock_data</name><index pos:start="169:48" pos:end="169:50">[<expr pos:start="169:49" pos:end="169:49"><name pos:start="169:49" pos:end="169:49">i</name></expr>]</index></name><operator pos:start="169:51" pos:end="169:51">)</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="175:9" pos:end="181:9"><if pos:start="175:9" pos:end="181:9">if <condition pos:start="175:12" pos:end="175:31">(<expr pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:17">error</name> <operator pos:start="175:19" pos:end="175:19">&lt;</operator> <name pos:start="175:21" pos:end="175:30">best_error</name></expr>)</condition> <block pos:start="175:33" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:21">

            <expr_stmt pos:start="177:13" pos:end="177:31"><expr pos:start="177:13" pos:end="177:30"><name pos:start="177:13" pos:end="177:22">best_error</name> <operator pos:start="177:24" pos:end="177:24">=</operator> <name pos:start="177:26" pos:end="177:30">error</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:21"><expr pos:start="179:13" pos:end="179:20"><name pos:start="179:13" pos:end="179:16">gain</name> <operator pos:start="179:18" pos:end="179:18">=</operator> <name pos:start="179:20" pos:end="179:20">n</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="185:5" pos:end="185:29"><expr pos:start="185:5" pos:end="185:28"><call pos:start="185:5" pos:end="185:28"><name pos:start="185:5" pos:end="185:12">put_bits</name><argument_list pos:start="185:13" pos:end="185:28">(<argument pos:start="185:14" pos:end="185:15"><expr pos:start="185:14" pos:end="185:15"><name pos:start="185:14" pos:end="185:15">pb</name></expr></argument>, <argument pos:start="185:18" pos:end="185:18"><expr pos:start="185:18" pos:end="185:18"><literal type="number" pos:start="185:18" pos:end="185:18">7</literal></expr></argument>, <argument pos:start="185:21" pos:end="185:27"><expr pos:start="185:21" pos:end="185:27"><name pos:start="185:21" pos:end="185:27">cba_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:26"><expr pos:start="187:5" pos:end="187:25"><call pos:start="187:5" pos:end="187:25"><name pos:start="187:5" pos:end="187:12">put_bits</name><argument_list pos:start="187:13" pos:end="187:25">(<argument pos:start="187:14" pos:end="187:15"><expr pos:start="187:14" pos:end="187:15"><name pos:start="187:14" pos:end="187:15">pb</name></expr></argument>, <argument pos:start="187:18" pos:end="187:18"><expr pos:start="187:18" pos:end="187:18"><literal type="number" pos:start="187:18" pos:end="187:18">8</literal></expr></argument>, <argument pos:start="187:21" pos:end="187:24"><expr pos:start="187:21" pos:end="187:24"><name pos:start="187:21" pos:end="187:24">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:29"><expr pos:start="189:5" pos:end="189:28"><call pos:start="189:5" pos:end="189:28"><name pos:start="189:5" pos:end="189:12">put_bits</name><argument_list pos:start="189:13" pos:end="189:28">(<argument pos:start="189:14" pos:end="189:15"><expr pos:start="189:14" pos:end="189:15"><name pos:start="189:14" pos:end="189:15">pb</name></expr></argument>, <argument pos:start="189:18" pos:end="189:18"><expr pos:start="189:18" pos:end="189:18"><literal type="number" pos:start="189:18" pos:end="189:18">7</literal></expr></argument>, <argument pos:start="189:21" pos:end="189:27"><expr pos:start="189:21" pos:end="189:27"><name pos:start="189:21" pos:end="189:27">cb1_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:29"><expr pos:start="191:5" pos:end="191:28"><call pos:start="191:5" pos:end="191:28"><name pos:start="191:5" pos:end="191:12">put_bits</name><argument_list pos:start="191:13" pos:end="191:28">(<argument pos:start="191:14" pos:end="191:15"><expr pos:start="191:14" pos:end="191:15"><name pos:start="191:14" pos:end="191:15">pb</name></expr></argument>, <argument pos:start="191:18" pos:end="191:18"><expr pos:start="191:18" pos:end="191:18"><literal type="number" pos:start="191:18" pos:end="191:18">7</literal></expr></argument>, <argument pos:start="191:21" pos:end="191:27"><expr pos:start="191:21" pos:end="191:27"><name pos:start="191:21" pos:end="191:27">cb2_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="195:32"><expr pos:start="193:5" pos:end="195:31"><call pos:start="193:5" pos:end="195:31"><name pos:start="193:5" pos:end="193:25">ff_subblock_synthesis</name><argument_list pos:start="193:26" pos:end="195:31">(<argument pos:start="193:27" pos:end="193:31"><expr pos:start="193:27" pos:end="193:31"><name pos:start="193:27" pos:end="193:31">ractx</name></expr></argument>, <argument pos:start="193:34" pos:end="193:42"><expr pos:start="193:34" pos:end="193:42"><name pos:start="193:34" pos:end="193:42">lpc_coefs</name></expr></argument>, <argument pos:start="193:45" pos:end="193:51"><expr pos:start="193:45" pos:end="193:51"><name pos:start="193:45" pos:end="193:51">cba_idx</name></expr></argument>, <argument pos:start="193:54" pos:end="193:60"><expr pos:start="193:54" pos:end="193:60"><name pos:start="193:54" pos:end="193:60">cb1_idx</name></expr></argument>, <argument pos:start="193:63" pos:end="193:69"><expr pos:start="193:63" pos:end="193:69"><name pos:start="193:63" pos:end="193:69">cb2_idx</name></expr></argument>, <argument pos:start="193:72" pos:end="193:74"><expr pos:start="193:72" pos:end="193:74"><name pos:start="193:72" pos:end="193:74">rms</name></expr></argument>,

                          <argument pos:start="195:27" pos:end="195:30"><expr pos:start="195:27" pos:end="195:30"><name pos:start="195:27" pos:end="195:30">gain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
