<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2997.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">ff_g729_postfilter</name><parameter_list pos:start="1:24" pos:end="7:82">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:34">DSPContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">dsp</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:62"><decl pos:start="1:42" pos:end="1:62"><type pos:start="1:42" pos:end="1:62"><name pos:start="1:42" pos:end="1:48">int16_t</name><modifier pos:start="1:49" pos:end="1:49">*</modifier></type> <name pos:start="1:51" pos:end="1:62">ht_prev_data</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:67">int</name><modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:76">voicing</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:52"><decl pos:start="3:22" pos:end="3:52"><type pos:start="3:22" pos:end="3:52"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:34">int16_t</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:52">lp_filter_coeffs</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:73"><decl pos:start="3:55" pos:end="3:73"><type pos:start="3:55" pos:end="3:73"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:73">pitch_delay_int</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:38"><decl pos:start="5:22" pos:end="5:38"><type pos:start="5:22" pos:end="5:38"><name pos:start="5:22" pos:end="5:28">int16_t</name><modifier pos:start="5:29" pos:end="5:29">*</modifier></type> <name pos:start="5:31" pos:end="5:38">residual</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:64"><decl pos:start="5:41" pos:end="5:64"><type pos:start="5:41" pos:end="5:64"><name pos:start="5:41" pos:end="5:47">int16_t</name><modifier pos:start="5:48" pos:end="5:48">*</modifier></type> <name pos:start="5:50" pos:end="5:64">res_filter_data</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:45"><decl pos:start="7:22" pos:end="7:45"><type pos:start="7:22" pos:end="7:45"><name pos:start="7:22" pos:end="7:28">int16_t</name><modifier pos:start="7:29" pos:end="7:29">*</modifier></type> <name pos:start="7:31" pos:end="7:45">pos_filter_data</name></decl></parameter>, <parameter pos:start="7:48" pos:end="7:62"><decl pos:start="7:48" pos:end="7:62"><type pos:start="7:48" pos:end="7:62"><name pos:start="7:48" pos:end="7:54">int16_t</name> <modifier pos:start="7:56" pos:end="7:56">*</modifier></type><name pos:start="7:57" pos:end="7:62">speech</name></decl></parameter>, <parameter pos:start="7:65" pos:end="7:81"><decl pos:start="7:65" pos:end="7:81"><type pos:start="7:65" pos:end="7:81"><name pos:start="7:65" pos:end="7:67">int</name></type> <name pos:start="7:69" pos:end="7:81">subframe_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="97:1">{<block_content pos:start="11:5" pos:end="95:66">

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:47"><name pos:start="11:13" pos:end="11:29">residual_filt_buf</name><index pos:start="11:30" pos:end="11:47">[<expr pos:start="11:31" pos:end="11:46"><name pos:start="11:31" pos:end="11:43">SUBFRAME_SIZE</name><operator pos:start="11:44" pos:end="11:44">+</operator><literal type="number" pos:start="11:45" pos:end="11:46">10</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int16_t</name></type> <name pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:17">lp_gn</name><index pos:start="13:18" pos:end="13:21">[<expr pos:start="13:19" pos:end="13:20"><literal type="number" pos:start="13:19" pos:end="13:20">33</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="13:24" pos:end="13:32">// (3.12)</comment>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int16_t</name></type> <name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:17">lp_gd</name><index pos:start="15:18" pos:end="15:21">[<expr pos:start="15:19" pos:end="15:20"><literal type="number" pos:start="15:19" pos:end="15:20">11</literal></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:start="15:24" pos:end="15:32">// (3.12)</comment>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:23">tilt_comp_coeff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:65">/* Zero-filling is necessary for tilt-compensation filter. */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><call pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:42">(<argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">lp_gn</name></expr></argument>, <argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr></argument>, <argument pos:start="25:22" pos:end="25:41"><expr pos:start="25:22" pos:end="25:41"><literal type="number" pos:start="25:22" pos:end="25:23">33</literal> <operator pos:start="25:25" pos:end="25:25">*</operator> <sizeof pos:start="25:27" pos:end="25:41">sizeof<argument_list pos:start="25:33" pos:end="25:41">(<argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:67">/* Calculate A(z/FORMANT_PP_FACTOR_NUM) filter coefficients. */</comment>

    <for pos:start="31:5" pos:end="33:96">for <control pos:start="31:9" pos:end="31:28">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:22">10</literal></expr>;</condition> <incr pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:25">i</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:9" pos:end="33:96"><block_content pos:start="33:9" pos:end="33:96">

        <expr_stmt pos:start="33:9" pos:end="33:96"><expr pos:start="33:9" pos:end="33:95"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:13">lp_gn</name><index pos:start="33:14" pos:end="33:21">[<expr pos:start="33:15" pos:end="33:20"><name pos:start="33:15" pos:end="33:15">i</name> <operator pos:start="33:17" pos:end="33:17">+</operator> <literal type="number" pos:start="33:19" pos:end="33:20">11</literal></expr>]</index></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <operator pos:start="33:25" pos:end="33:25">(</operator><name pos:start="33:26" pos:end="33:48"><name pos:start="33:26" pos:end="33:41">lp_filter_coeffs</name><index pos:start="33:42" pos:end="33:48">[<expr pos:start="33:43" pos:end="33:47"><name pos:start="33:43" pos:end="33:43">i</name> <operator pos:start="33:45" pos:end="33:45">+</operator> <literal type="number" pos:start="33:47" pos:end="33:47">1</literal></expr>]</index></name> <operator pos:start="33:50" pos:end="33:50">*</operator> <name pos:start="33:52" pos:end="33:79"><name pos:start="33:52" pos:end="33:76">formant_pp_factor_num_pow</name><index pos:start="33:77" pos:end="33:79">[<expr pos:start="33:78" pos:end="33:78"><name pos:start="33:78" pos:end="33:78">i</name></expr>]</index></name> <operator pos:start="33:81" pos:end="33:81">+</operator> <literal type="number" pos:start="33:83" pos:end="33:88">0x4000</literal><operator pos:start="33:89" pos:end="33:89">)</operator> <operator pos:start="33:91" pos:end="33:92">&gt;&gt;</operator> <literal type="number" pos:start="33:94" pos:end="33:95">15</literal></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="37:5" pos:end="37:67">/* Calculate A(z/FORMANT_PP_FACTOR_DEN) filter coefficients. */</comment>

    <for pos:start="39:5" pos:end="41:95">for <control pos:start="39:9" pos:end="39:28">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:23"><expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <literal type="number" pos:start="39:21" pos:end="39:22">10</literal></expr>;</condition> <incr pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:25">i</name><operator pos:start="39:26" pos:end="39:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="41:95"><block_content pos:start="41:9" pos:end="41:95">

        <expr_stmt pos:start="41:9" pos:end="41:95"><expr pos:start="41:9" pos:end="41:94"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:13">lp_gd</name><index pos:start="41:14" pos:end="41:20">[<expr pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">i</name> <operator pos:start="41:17" pos:end="41:17">+</operator> <literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr>]</index></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <operator pos:start="41:24" pos:end="41:24">(</operator><name pos:start="41:25" pos:end="41:47"><name pos:start="41:25" pos:end="41:40">lp_filter_coeffs</name><index pos:start="41:41" pos:end="41:47">[<expr pos:start="41:42" pos:end="41:46"><name pos:start="41:42" pos:end="41:42">i</name> <operator pos:start="41:44" pos:end="41:44">+</operator> <literal type="number" pos:start="41:46" pos:end="41:46">1</literal></expr>]</index></name> <operator pos:start="41:49" pos:end="41:49">*</operator> <name pos:start="41:51" pos:end="41:78"><name pos:start="41:51" pos:end="41:75">formant_pp_factor_den_pow</name><index pos:start="41:76" pos:end="41:78">[<expr pos:start="41:77" pos:end="41:77"><name pos:start="41:77" pos:end="41:77">i</name></expr>]</index></name> <operator pos:start="41:80" pos:end="41:80">+</operator> <literal type="number" pos:start="41:82" pos:end="41:87">0x4000</literal><operator pos:start="41:88" pos:end="41:88">)</operator> <operator pos:start="41:90" pos:end="41:91">&gt;&gt;</operator> <literal type="number" pos:start="41:93" pos:end="41:94">15</literal></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="45:5" pos:end="45:73">/* residual signal calculation (one-half of short-term postfilter) */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:63"><expr pos:start="47:5" pos:end="47:62"><call pos:start="47:5" pos:end="47:62"><name pos:start="47:5" pos:end="47:10">memcpy</name><argument_list pos:start="47:11" pos:end="47:62">(<argument pos:start="47:12" pos:end="47:22"><expr pos:start="47:12" pos:end="47:22"><name pos:start="47:12" pos:end="47:17">speech</name> <operator pos:start="47:19" pos:end="47:19">-</operator> <literal type="number" pos:start="47:21" pos:end="47:22">10</literal></expr></argument>, <argument pos:start="47:25" pos:end="47:39"><expr pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:39">res_filter_data</name></expr></argument>, <argument pos:start="47:42" pos:end="47:61"><expr pos:start="47:42" pos:end="47:61"><literal type="number" pos:start="47:42" pos:end="47:43">10</literal> <operator pos:start="47:45" pos:end="47:45">*</operator> <sizeof pos:start="47:47" pos:end="47:61">sizeof<argument_list pos:start="47:53" pos:end="47:61">(<argument pos:start="47:54" pos:end="47:60"><expr pos:start="47:54" pos:end="47:60"><name pos:start="47:54" pos:end="47:60">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:86"><expr pos:start="49:5" pos:end="49:85"><call pos:start="49:5" pos:end="49:85"><name pos:start="49:5" pos:end="49:19">residual_filter</name><argument_list pos:start="49:20" pos:end="49:85">(<argument pos:start="49:21" pos:end="49:49"><expr pos:start="49:21" pos:end="49:49"><name pos:start="49:21" pos:end="49:28">residual</name> <operator pos:start="49:30" pos:end="49:30">+</operator> <name pos:start="49:32" pos:end="49:49">RES_PREV_DATA_SIZE</name></expr></argument>, <argument pos:start="49:52" pos:end="49:61"><expr pos:start="49:52" pos:end="49:61"><name pos:start="49:52" pos:end="49:56">lp_gn</name> <operator pos:start="49:58" pos:end="49:58">+</operator> <literal type="number" pos:start="49:60" pos:end="49:61">11</literal></expr></argument>, <argument pos:start="49:64" pos:end="49:69"><expr pos:start="49:64" pos:end="49:69"><name pos:start="49:64" pos:end="49:69">speech</name></expr></argument>, <argument pos:start="49:72" pos:end="49:84"><expr pos:start="49:72" pos:end="49:84"><name pos:start="49:72" pos:end="49:84">subframe_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="51:5" pos:end="51:51">/* Save data to use it in the next subframe. */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:79"><expr pos:start="53:5" pos:end="53:78"><call pos:start="53:5" pos:end="53:78"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:78">(<argument pos:start="53:12" pos:end="53:26"><expr pos:start="53:12" pos:end="53:26"><name pos:start="53:12" pos:end="53:26">res_filter_data</name></expr></argument>, <argument pos:start="53:29" pos:end="53:55"><expr pos:start="53:29" pos:end="53:55"><name pos:start="53:29" pos:end="53:34">speech</name> <operator pos:start="53:36" pos:end="53:36">+</operator> <name pos:start="53:38" pos:end="53:50">subframe_size</name> <operator pos:start="53:52" pos:end="53:52">-</operator> <literal type="number" pos:start="53:54" pos:end="53:55">10</literal></expr></argument>, <argument pos:start="53:58" pos:end="53:77"><expr pos:start="53:58" pos:end="53:77"><literal type="number" pos:start="53:58" pos:end="53:59">10</literal> <operator pos:start="53:61" pos:end="53:61">*</operator> <sizeof pos:start="53:63" pos:end="53:77">sizeof<argument_list pos:start="53:69" pos:end="53:77">(<argument pos:start="53:70" pos:end="53:76"><expr pos:start="53:70" pos:end="53:76"><name pos:start="53:70" pos:end="53:76">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="59:61">/* long-term filter. If long-term prediction gain is larger than 3dB (returned value is

       nonzero) then declare current subframe as periodic. */</comment>

    <expr_stmt pos:start="61:5" pos:end="65:64"><expr pos:start="61:5" pos:end="65:63"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:12">voicing</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="65:63"><name pos:start="61:16" pos:end="61:20">FFMAX</name><argument_list pos:start="61:21" pos:end="65:63">(<argument pos:start="61:22" pos:end="61:29"><expr pos:start="61:22" pos:end="61:29"><operator pos:start="61:22" pos:end="61:22">*</operator><name pos:start="61:23" pos:end="61:29">voicing</name></expr></argument>, <argument pos:start="61:32" pos:end="65:62"><expr pos:start="61:32" pos:end="65:62"><call pos:start="61:32" pos:end="65:62"><name pos:start="61:32" pos:end="61:47">long_term_filter</name><argument_list pos:start="61:48" pos:end="65:62">(<argument pos:start="61:49" pos:end="61:51"><expr pos:start="61:49" pos:end="61:51"><name pos:start="61:49" pos:end="61:51">dsp</name></expr></argument>, <argument pos:start="61:54" pos:end="61:68"><expr pos:start="61:54" pos:end="61:68"><name pos:start="61:54" pos:end="61:68">pitch_delay_int</name></expr></argument>,

                                                <argument pos:start="63:49" pos:end="63:56"><expr pos:start="63:49" pos:end="63:56"><name pos:start="63:49" pos:end="63:56">residual</name></expr></argument>, <argument pos:start="63:59" pos:end="63:80"><expr pos:start="63:59" pos:end="63:80"><name pos:start="63:59" pos:end="63:75">residual_filt_buf</name> <operator pos:start="63:77" pos:end="63:77">+</operator> <literal type="number" pos:start="63:79" pos:end="63:80">10</literal></expr></argument>,

                                                <argument pos:start="65:49" pos:end="65:61"><expr pos:start="65:49" pos:end="65:61"><name pos:start="65:49" pos:end="65:61">subframe_size</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:51">/* shift residual for using in next subframe */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:86"><expr pos:start="71:5" pos:end="71:85"><call pos:start="71:5" pos:end="71:85"><name pos:start="71:5" pos:end="71:11">memmove</name><argument_list pos:start="71:12" pos:end="71:85">(<argument pos:start="71:13" pos:end="71:20"><expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:20">residual</name></expr></argument>, <argument pos:start="71:23" pos:end="71:46"><expr pos:start="71:23" pos:end="71:46"><name pos:start="71:23" pos:end="71:30">residual</name> <operator pos:start="71:32" pos:end="71:32">+</operator> <name pos:start="71:34" pos:end="71:46">subframe_size</name></expr></argument>, <argument pos:start="71:49" pos:end="71:84"><expr pos:start="71:49" pos:end="71:84"><name pos:start="71:49" pos:end="71:66">RES_PREV_DATA_SIZE</name> <operator pos:start="71:68" pos:end="71:68">*</operator> <sizeof pos:start="71:70" pos:end="71:84">sizeof<argument_list pos:start="71:76" pos:end="71:84">(<argument pos:start="71:77" pos:end="71:83"><expr pos:start="71:77" pos:end="71:83"><name pos:start="71:77" pos:end="71:83">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:45">/* short-term filter tilt compensation */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:94"><expr pos:start="77:5" pos:end="77:93"><name pos:start="77:5" pos:end="77:19">tilt_comp_coeff</name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:93"><name pos:start="77:23" pos:end="77:35">get_tilt_comp</name><argument_list pos:start="77:36" pos:end="77:93">(<argument pos:start="77:37" pos:end="77:39"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:39">dsp</name></expr></argument>, <argument pos:start="77:42" pos:end="77:46"><expr pos:start="77:42" pos:end="77:46"><name pos:start="77:42" pos:end="77:46">lp_gn</name></expr></argument>, <argument pos:start="77:49" pos:end="77:53"><expr pos:start="77:49" pos:end="77:53"><name pos:start="77:49" pos:end="77:53">lp_gd</name></expr></argument>, <argument pos:start="77:56" pos:end="77:77"><expr pos:start="77:56" pos:end="77:77"><name pos:start="77:56" pos:end="77:72">residual_filt_buf</name> <operator pos:start="77:74" pos:end="77:74">+</operator> <literal type="number" pos:start="77:76" pos:end="77:77">10</literal></expr></argument>, <argument pos:start="77:80" pos:end="77:92"><expr pos:start="77:80" pos:end="77:92"><name pos:start="77:80" pos:end="77:92">subframe_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:82">/* Apply second half of short-term postfilter: 1/A(z/FORMANT_PP_FACTOR_DEN) */</comment>

    <expr_stmt pos:start="83:5" pos:end="87:64"><expr pos:start="83:5" pos:end="87:63"><call pos:start="83:5" pos:end="87:63"><name pos:start="83:5" pos:end="83:31">ff_celp_lp_synthesis_filter</name><argument_list pos:start="83:32" pos:end="87:63">(<argument pos:start="83:33" pos:end="83:52"><expr pos:start="83:33" pos:end="83:52"><name pos:start="83:33" pos:end="83:47">pos_filter_data</name> <operator pos:start="83:49" pos:end="83:49">+</operator> <literal type="number" pos:start="83:51" pos:end="83:52">10</literal></expr></argument>, <argument pos:start="83:55" pos:end="83:63"><expr pos:start="83:55" pos:end="83:63"><name pos:start="83:55" pos:end="83:59">lp_gd</name> <operator pos:start="83:61" pos:end="83:61">+</operator> <literal type="number" pos:start="83:63" pos:end="83:63">1</literal></expr></argument>,

                                <argument pos:start="85:33" pos:end="85:54"><expr pos:start="85:33" pos:end="85:54"><name pos:start="85:33" pos:end="85:49">residual_filt_buf</name> <operator pos:start="85:51" pos:end="85:51">+</operator> <literal type="number" pos:start="85:53" pos:end="85:54">10</literal></expr></argument>,

                                <argument pos:start="87:33" pos:end="87:45"><expr pos:start="87:33" pos:end="87:45"><name pos:start="87:33" pos:end="87:45">subframe_size</name></expr></argument>, <argument pos:start="87:48" pos:end="87:49"><expr pos:start="87:48" pos:end="87:49"><literal type="number" pos:start="87:48" pos:end="87:49">10</literal></expr></argument>, <argument pos:start="87:52" pos:end="87:52"><expr pos:start="87:52" pos:end="87:52"><literal type="number" pos:start="87:52" pos:end="87:52">0</literal></expr></argument>, <argument pos:start="87:55" pos:end="87:55"><expr pos:start="87:55" pos:end="87:55"><literal type="number" pos:start="87:55" pos:end="87:55">0</literal></expr></argument>, <argument pos:start="87:58" pos:end="87:62"><expr pos:start="87:58" pos:end="87:62"><literal type="number" pos:start="87:58" pos:end="87:62">0x800</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:83"><expr pos:start="89:5" pos:end="89:82"><call pos:start="89:5" pos:end="89:82"><name pos:start="89:5" pos:end="89:10">memcpy</name><argument_list pos:start="89:11" pos:end="89:82">(<argument pos:start="89:12" pos:end="89:26"><expr pos:start="89:12" pos:end="89:26"><name pos:start="89:12" pos:end="89:26">pos_filter_data</name></expr></argument>, <argument pos:start="89:29" pos:end="89:59"><expr pos:start="89:29" pos:end="89:59"><name pos:start="89:29" pos:end="89:43">pos_filter_data</name> <operator pos:start="89:45" pos:end="89:45">+</operator> <name pos:start="89:47" pos:end="89:59">subframe_size</name></expr></argument>, <argument pos:start="89:62" pos:end="89:81"><expr pos:start="89:62" pos:end="89:81"><literal type="number" pos:start="89:62" pos:end="89:63">10</literal> <operator pos:start="89:65" pos:end="89:65">*</operator> <sizeof pos:start="89:67" pos:end="89:81">sizeof<argument_list pos:start="89:73" pos:end="89:81">(<argument pos:start="89:74" pos:end="89:80"><expr pos:start="89:74" pos:end="89:80"><name pos:start="89:74" pos:end="89:80">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="95:66"><expr pos:start="93:5" pos:end="95:65"><operator pos:start="93:5" pos:end="93:5">*</operator><name pos:start="93:6" pos:end="93:17">ht_prev_data</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <call pos:start="93:21" pos:end="95:65"><name pos:start="93:21" pos:end="93:35">apply_tilt_comp</name><argument_list pos:start="93:36" pos:end="95:65">(<argument pos:start="93:37" pos:end="93:42"><expr pos:start="93:37" pos:end="93:42"><name pos:start="93:37" pos:end="93:42">speech</name></expr></argument>, <argument pos:start="93:45" pos:end="93:64"><expr pos:start="93:45" pos:end="93:64"><name pos:start="93:45" pos:end="93:59">pos_filter_data</name> <operator pos:start="93:61" pos:end="93:61">+</operator> <literal type="number" pos:start="93:63" pos:end="93:64">10</literal></expr></argument>, <argument pos:start="93:67" pos:end="93:81"><expr pos:start="93:67" pos:end="93:81"><name pos:start="93:67" pos:end="93:81">tilt_comp_coeff</name></expr></argument>,

                                    <argument pos:start="95:37" pos:end="95:49"><expr pos:start="95:37" pos:end="95:49"><name pos:start="95:37" pos:end="95:49">subframe_size</name></expr></argument>, <argument pos:start="95:52" pos:end="95:64"><expr pos:start="95:52" pos:end="95:64"><operator pos:start="95:52" pos:end="95:52">*</operator><name pos:start="95:53" pos:end="95:64">ht_prev_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
