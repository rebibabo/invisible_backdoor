<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4742.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:30">init_thread</name><parameter_list pos:start="1:31" pos:end="1:86">(<parameter pos:start="1:32" pos:end="1:59"><decl pos:start="1:32" pos:end="1:59"><type pos:start="1:32" pos:end="1:59"><name pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:52">target_pt_regs</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">_regs</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:85"><decl pos:start="1:62" pos:end="1:85"><type pos:start="1:62" pos:end="1:85"><name pos:start="1:62" pos:end="1:78"><name pos:start="1:62" pos:end="1:67">struct</name> <name pos:start="1:69" pos:end="1:78">image_info</name></name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:85">infop</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:30">

    <expr_stmt pos:start="5:5" pos:end="8:0"><expr pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:9">_regs</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:14">gpr</name><index pos:start="5:15" pos:end="5:17">[<expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">1</literal></expr>]</index></name> <operator pos:start="5:19" pos:end="5:19">=</operator> <name pos:start="5:21" pos:end="5:38"><name pos:start="5:21" pos:end="5:25">infop</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:38">start_stack</name></name></expr>;</expr_stmt>

<cpp:if pos:start="7:1" pos:end="7:51">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:11">defined</name><argument_list pos:start="7:12" pos:end="7:25">(<argument pos:start="7:13" pos:end="7:24"><expr pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:24">TARGET_PPC64</name></expr></argument>)</argument_list></call> <operator pos:start="7:27" pos:end="7:28">&amp;&amp;</operator> <operator pos:start="7:30" pos:end="7:30">!</operator><call pos:start="7:31" pos:end="7:51"><name pos:start="7:31" pos:end="7:37">defined</name><argument_list pos:start="7:38" pos:end="7:51">(<argument pos:start="7:39" pos:end="7:50"><expr pos:start="7:39" pos:end="7:50"><name pos:start="7:39" pos:end="7:50">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="9:5" pos:end="22:0"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:33">(<expr pos:start="9:9" pos:end="9:32"><call pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:21">get_ppc64_abi</name><argument_list pos:start="9:22" pos:end="9:28">(<argument pos:start="9:23" pos:end="9:27"><expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27">infop</name></expr></argument>)</argument_list></call> <operator pos:start="9:30" pos:end="9:30">&lt;</operator> <literal type="number" pos:start="9:32" pos:end="9:32">2</literal></expr>)</condition> <block pos:start="9:35" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:64">

        <expr_stmt pos:start="11:9" pos:end="11:69"><expr pos:start="11:9" pos:end="11:68"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:13">_regs</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">gpr</name><index pos:start="11:19" pos:end="11:21">[<expr pos:start="11:20" pos:end="11:20"><literal type="number" pos:start="11:20" pos:end="11:20">2</literal></expr>]</index></name> <operator pos:start="11:23" pos:end="11:23">=</operator> <call pos:start="11:25" pos:end="11:49"><name pos:start="11:25" pos:end="11:31">ldq_raw</name><argument_list pos:start="11:32" pos:end="11:49">(<argument pos:start="11:33" pos:end="11:48"><expr pos:start="11:33" pos:end="11:48"><name pos:start="11:33" pos:end="11:44"><name pos:start="11:33" pos:end="11:37">infop</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:44">entry</name></name> <operator pos:start="11:46" pos:end="11:46">+</operator> <literal type="number" pos:start="11:48" pos:end="11:48">8</literal></expr></argument>)</argument_list></call> <operator pos:start="11:51" pos:end="11:51">+</operator> <name pos:start="11:53" pos:end="11:68"><name pos:start="11:53" pos:end="11:57">infop</name><operator pos:start="11:58" pos:end="11:59">-&gt;</operator><name pos:start="11:60" pos:end="11:68">load_bias</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:64"><expr pos:start="13:9" pos:end="13:63"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:13">infop</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:20">entry</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:44"><name pos:start="13:24" pos:end="13:30">ldq_raw</name><argument_list pos:start="13:31" pos:end="13:44">(<argument pos:start="13:32" pos:end="13:43"><expr pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:36">infop</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:43">entry</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:46" pos:end="13:46">+</operator> <name pos:start="13:48" pos:end="13:63"><name pos:start="13:48" pos:end="13:52">infop</name><operator pos:start="13:53" pos:end="13:54">-&gt;</operator><name pos:start="13:55" pos:end="13:63">load_bias</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="15:7" pos:end="22:0">else <block pos:start="15:12" pos:end="22:0">{<block_content pos:start="17:9" pos:end="17:38">

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:13">_regs</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">gpr</name><index pos:start="17:19" pos:end="17:22">[<expr pos:start="17:20" pos:end="17:21"><literal type="number" pos:start="17:20" pos:end="17:21">12</literal></expr>]</index></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:30">infop</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:37">entry</name></name></expr>;</expr_stmt>  <comment type="block" pos:start="17:41" pos:end="17:77">/* r12 set to global entry address */</comment>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:9">_regs</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:14">nip</name></name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:29"><name pos:start="23:18" pos:end="23:22">infop</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:29">entry</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
