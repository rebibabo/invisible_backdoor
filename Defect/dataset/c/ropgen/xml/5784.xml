<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5784.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:34">qemu_start_incoming_migration</name><parameter_list pos:start="1:35" pos:end="1:65">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">uri</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:57">Error</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">p</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="41:5"><if pos:start="9:5" pos:end="14:0">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><call pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:16">strstart</name><argument_list pos:start="9:17" pos:end="9:33">(<argument pos:start="9:18" pos:end="9:20"><expr pos:start="9:18" pos:end="9:20"><name pos:start="9:18" pos:end="9:20">uri</name></expr></argument>, <argument pos:start="9:23" pos:end="9:28"><expr pos:start="9:23" pos:end="9:28"><literal type="string" pos:start="9:23" pos:end="9:28">"tcp:"</literal></expr></argument>, <argument pos:start="9:31" pos:end="9:32"><expr pos:start="9:31" pos:end="9:32"><operator pos:start="9:31" pos:end="9:31">&amp;</operator><name pos:start="9:32" pos:end="9:32">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="14:0"><block_content pos:start="11:9" pos:end="14:0">

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:36">tcp_start_incoming_migration</name><argument_list pos:start="11:37" pos:end="11:45">(<argument pos:start="11:38" pos:end="11:38"><expr pos:start="11:38" pos:end="11:38"><name pos:start="11:38" pos:end="11:38">p</name></expr></argument>, <argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<cpp:ifdef pos:start="13:1" pos:end="13:18">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:18">CONFIG_RDMA</name></cpp:ifdef>

    <if type="elseif" pos:start="15:5" pos:end="22:0">else if <condition pos:start="15:13" pos:end="15:40">(<expr pos:start="15:14" pos:end="15:39"><call pos:start="15:14" pos:end="15:39"><name pos:start="15:14" pos:end="15:21">strstart</name><argument_list pos:start="15:22" pos:end="15:39">(<argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">uri</name></expr></argument>, <argument pos:start="15:28" pos:end="15:34"><expr pos:start="15:28" pos:end="15:34"><literal type="string" pos:start="15:28" pos:end="15:34">"rdma:"</literal></expr></argument>, <argument pos:start="15:37" pos:end="15:38"><expr pos:start="15:37" pos:end="15:38"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:38">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="22:0"><block_content pos:start="17:9" pos:end="22:0">

        <expr_stmt pos:start="17:9" pos:end="22:0"><expr pos:start="17:9" pos:end="17:46"><call pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:37">rdma_start_incoming_migration</name><argument_list pos:start="17:38" pos:end="17:46">(<argument pos:start="17:39" pos:end="17:39"><expr pos:start="17:39" pos:end="17:39"><name pos:start="17:39" pos:end="17:39">p</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="21:1" pos:end="21:19">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:19"><operator pos:start="21:5" pos:end="21:5">!</operator><call pos:start="21:6" pos:end="21:19"><name pos:start="21:6" pos:end="21:12">defined</name><argument_list pos:start="21:13" pos:end="21:19">(<argument pos:start="21:14" pos:end="21:18"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:18">WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if type="elseif" pos:start="23:5" pos:end="25:47">else if <condition pos:start="23:13" pos:end="23:40">(<expr pos:start="23:14" pos:end="23:39"><call pos:start="23:14" pos:end="23:39"><name pos:start="23:14" pos:end="23:21">strstart</name><argument_list pos:start="23:22" pos:end="23:39">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">uri</name></expr></argument>, <argument pos:start="23:28" pos:end="23:34"><expr pos:start="23:28" pos:end="23:34"><literal type="string" pos:start="23:28" pos:end="23:34">"exec:"</literal></expr></argument>, <argument pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:38"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:38">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:47"><block_content pos:start="25:9" pos:end="25:47">

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><call pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:37">exec_start_incoming_migration</name><argument_list pos:start="25:38" pos:end="25:46">(<argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><name pos:start="25:39" pos:end="25:39">p</name></expr></argument>, <argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="27:5" pos:end="29:47">else if <condition pos:start="27:13" pos:end="27:40">(<expr pos:start="27:14" pos:end="27:39"><call pos:start="27:14" pos:end="27:39"><name pos:start="27:14" pos:end="27:21">strstart</name><argument_list pos:start="27:22" pos:end="27:39">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">uri</name></expr></argument>, <argument pos:start="27:28" pos:end="27:34"><expr pos:start="27:28" pos:end="27:34"><literal type="string" pos:start="27:28" pos:end="27:34">"unix:"</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:38"><expr pos:start="27:37" pos:end="27:38"><operator pos:start="27:37" pos:end="27:37">&amp;</operator><name pos:start="27:38" pos:end="27:38">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:47"><block_content pos:start="29:9" pos:end="29:47">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><call pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:37">unix_start_incoming_migration</name><argument_list pos:start="29:38" pos:end="29:46">(<argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">p</name></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="31:5" pos:end="36:0">else if <condition pos:start="31:13" pos:end="31:38">(<expr pos:start="31:14" pos:end="31:37"><call pos:start="31:14" pos:end="31:37"><name pos:start="31:14" pos:end="31:21">strstart</name><argument_list pos:start="31:22" pos:end="31:37">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">uri</name></expr></argument>, <argument pos:start="31:28" pos:end="31:32"><expr pos:start="31:28" pos:end="31:32"><literal type="string" pos:start="31:28" pos:end="31:32">"fd:"</literal></expr></argument>, <argument pos:start="31:35" pos:end="31:36"><expr pos:start="31:35" pos:end="31:36"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:36">p</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="36:0"><block_content pos:start="33:9" pos:end="36:0">

        <expr_stmt pos:start="33:9" pos:end="36:0"><expr pos:start="33:9" pos:end="33:44"><call pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:35">fd_start_incoming_migration</name><argument_list pos:start="33:36" pos:end="33:44">(<argument pos:start="33:37" pos:end="33:37"><expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">p</name></expr></argument>, <argument pos:start="33:40" pos:end="33:43"><expr pos:start="33:40" pos:end="33:43"><name pos:start="33:40" pos:end="33:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <else pos:start="37:5" pos:end="41:5">else <block pos:start="37:10" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:64">

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><call pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="39:63">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:57"><expr pos:start="39:26" pos:end="39:57"><literal type="string" pos:start="39:26" pos:end="39:57">"unknown migration protocol: %s"</literal></expr></argument>, <argument pos:start="39:60" pos:end="39:62"><expr pos:start="39:60" pos:end="39:62"><name pos:start="39:60" pos:end="39:62">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
