<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12085.c" pos:tabs="8"><function pos:start="1:1" pos:end="288:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:35">ff_opus_parse_extradata</name><parameter_list pos:start="1:36" pos:end="3:51">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:47">OpusContext</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:50">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="288:1">{<block_content pos:start="7:5" pos:end="286:13">

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:47"><name pos:start="7:26" pos:end="7:44">default_channel_map</name><index pos:start="7:45" pos:end="7:47">[<expr pos:start="7:46" pos:end="7:46"><literal type="number" pos:start="7:46" pos:end="7:46">2</literal></expr>]</index></name> <init pos:start="7:49" pos:end="7:58">= <expr pos:start="7:51" pos:end="7:58"><block pos:start="7:51" pos:end="7:58">{ <expr pos:start="7:53" pos:end="7:53"><literal type="number" pos:start="7:53" pos:end="7:53">0</literal></expr>, <expr pos:start="7:56" pos:end="7:56"><literal type="number" pos:start="7:56" pos:end="7:56">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <function_decl pos:start="11:5" pos:end="11:63"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> (<modifier pos:start="11:10" pos:end="11:10">*</modifier><name pos:start="11:11" pos:end="11:25">channel_reorder</name>)<parameter_list pos:start="11:27" pos:end="11:36">(<parameter pos:start="11:28" pos:end="11:30"><decl pos:start="11:28" pos:end="11:30"><type pos:start="11:28" pos:end="11:30"><name pos:start="11:28" pos:end="11:30">int</name></type></decl></parameter>, <parameter pos:start="11:33" pos:end="11:35"><decl pos:start="11:33" pos:end="11:35"><type pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:35">int</name></type></decl></parameter>)</parameter_list> <init pos:start="11:38" pos:end="11:62">= <expr pos:start="11:40" pos:end="11:62"><name pos:start="11:40" pos:end="11:62">channel_reorder_unknown</name></expr></init>;</function_decl>



    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:28">extradata</name></decl>, <decl pos:start="15:31" pos:end="15:42"><type ref="prev" pos:start="15:5" pos:end="15:19"><modifier pos:start="15:31" pos:end="15:31">*</modifier></type><name pos:start="15:32" pos:end="15:42">channel_map</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">extradata_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:67"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">version</name></decl>, <decl pos:start="19:18" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:18" pos:end="19:25">channels</name></decl>, <decl pos:start="19:28" pos:end="19:35"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:28" pos:end="19:35">map_type</name></decl>, <decl pos:start="19:38" pos:end="19:44"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:38" pos:end="19:44">streams</name></decl>, <decl pos:start="19:47" pos:end="19:60"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:47" pos:end="19:60">stereo_streams</name></decl>, <decl pos:start="19:63" pos:end="19:63"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:63" pos:end="19:63">i</name></decl>, <decl pos:start="19:66" pos:end="19:66"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:66" pos:end="19:66">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:19">layout</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="47:5"><if pos:start="25:5" pos:end="41:5">if <condition pos:start="25:8" pos:end="25:26">(<expr pos:start="25:9" pos:end="25:25"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:25"><name pos:start="25:10" pos:end="25:14">avctx</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">extradata</name></name></expr>)</condition> <block pos:start="25:28" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:56">

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:32">(<expr pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">channels</name></name> <operator pos:start="27:29" pos:end="27:29">&gt;</operator> <literal type="number" pos:start="27:31" pos:end="27:31">2</literal></expr>)</condition> <block pos:start="27:34" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:35">

            <expr_stmt pos:start="29:13" pos:end="31:70"><expr pos:start="29:13" pos:end="31:69"><call pos:start="29:13" pos:end="31:69"><name pos:start="29:13" pos:end="29:18">av_log</name><argument_list pos:start="29:19" pos:end="31:69">(<argument pos:start="29:20" pos:end="29:24"><expr pos:start="29:20" pos:end="29:24"><name pos:start="29:20" pos:end="29:24">avctx</name></expr></argument>, <argument pos:start="29:27" pos:end="29:38"><expr pos:start="29:27" pos:end="29:38"><name pos:start="29:27" pos:end="29:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="31:20" pos:end="31:68"><expr pos:start="31:20" pos:end="31:68"><literal type="string" pos:start="31:20" pos:end="31:68">"Multichannel configuration without extradata.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:35">return <expr pos:start="33:20" pos:end="33:34"><call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:48"><expr pos:start="37:9" pos:end="37:47"><name pos:start="37:9" pos:end="37:17">extradata</name>      <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:47">opus_default_extradata</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:22">extradata_size</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <sizeof pos:start="39:26" pos:end="39:55">sizeof<argument_list pos:start="39:32" pos:end="39:55">(<argument pos:start="39:33" pos:end="39:54"><expr pos:start="39:33" pos:end="39:54"><name pos:start="39:33" pos:end="39:54">opus_default_extradata</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="47:5">else <block pos:start="41:12" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:47">

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:17">extradata</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:36"><name pos:start="43:21" pos:end="43:25">avctx</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:36">extradata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:22">extradata_size</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:46"><name pos:start="45:26" pos:end="45:30">avctx</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:46">extradata_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:28">(<expr pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:22">extradata_size</name> <operator pos:start="51:24" pos:end="51:24">&lt;</operator> <literal type="number" pos:start="51:26" pos:end="51:27">19</literal></expr>)</condition> <block pos:start="51:30" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:35">

        <expr_stmt pos:start="53:9" pos:end="55:31"><expr pos:start="53:9" pos:end="55:30"><call pos:start="53:9" pos:end="55:30"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:30">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="53:66"><expr pos:start="53:37" pos:end="53:66"><literal type="string" pos:start="53:37" pos:end="53:66">"Invalid extradata size: %d\n"</literal></expr></argument>,

               <argument pos:start="55:16" pos:end="55:29"><expr pos:start="55:16" pos:end="55:29"><name pos:start="55:16" pos:end="55:29">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:27"><expr pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:11">version</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:26"><name pos:start="63:15" pos:end="63:23">extradata</name><index pos:start="63:24" pos:end="63:26">[<expr pos:start="63:25" pos:end="63:25"><literal type="number" pos:start="63:25" pos:end="63:25">8</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:21">(<expr pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:15">version</name> <operator pos:start="65:17" pos:end="65:17">&gt;</operator> <literal type="number" pos:start="65:19" pos:end="65:20">15</literal></expr>)</condition> <block pos:start="65:23" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:36">

        <expr_stmt pos:start="67:9" pos:end="67:70"><expr pos:start="67:9" pos:end="67:69"><call pos:start="67:9" pos:end="67:69"><name pos:start="67:9" pos:end="67:29">avpriv_request_sample</name><argument_list pos:start="67:30" pos:end="67:69">(<argument pos:start="67:31" pos:end="67:35"><expr pos:start="67:31" pos:end="67:35"><name pos:start="67:31" pos:end="67:35">avctx</name></expr></argument>, <argument pos:start="67:38" pos:end="67:59"><expr pos:start="67:38" pos:end="67:59"><literal type="string" pos:start="67:38" pos:end="67:59">"Extradata version %d"</literal></expr></argument>, <argument pos:start="67:62" pos:end="67:68"><expr pos:start="67:62" pos:end="67:68"><name pos:start="67:62" pos:end="67:68">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:36">return <expr pos:start="69:16" pos:end="69:35"><name pos:start="69:16" pos:end="69:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:9">avctx</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">delay</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:42"><name pos:start="75:20" pos:end="75:26">AV_RL16</name><argument_list pos:start="75:27" pos:end="75:42">(<argument pos:start="75:28" pos:end="75:41"><expr pos:start="75:28" pos:end="75:41"><name pos:start="75:28" pos:end="75:36">extradata</name> <operator pos:start="75:38" pos:end="75:38">+</operator> <literal type="number" pos:start="75:40" pos:end="75:41">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:80"><expr pos:start="79:5" pos:end="79:79"><name pos:start="79:5" pos:end="79:12">channels</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <ternary pos:start="79:16" pos:end="79:79"><condition pos:start="79:16" pos:end="79:33"><expr pos:start="79:16" pos:end="79:31"><name pos:start="79:16" pos:end="79:31"><name pos:start="79:16" pos:end="79:20">avctx</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:31">extradata</name></name></expr> ?</condition><then pos:start="79:35" pos:end="79:46"> <expr pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:43">extradata</name><index pos:start="79:44" pos:end="79:46">[<expr pos:start="79:45" pos:end="79:45"><literal type="number" pos:start="79:45" pos:end="79:45">9</literal></expr>]</index></name></expr> </then><else pos:start="79:48" pos:end="79:79">: <expr pos:start="79:50" pos:end="79:79"><ternary pos:start="79:50" pos:end="79:79"><condition pos:start="79:50" pos:end="79:73"><expr pos:start="79:50" pos:end="79:71"><operator pos:start="79:50" pos:end="79:50">(</operator><name pos:start="79:51" pos:end="79:65"><name pos:start="79:51" pos:end="79:55">avctx</name><operator pos:start="79:56" pos:end="79:57">-&gt;</operator><name pos:start="79:58" pos:end="79:65">channels</name></name> <operator pos:start="79:67" pos:end="79:68">==</operator> <literal type="number" pos:start="79:70" pos:end="79:70">1</literal><operator pos:start="79:71" pos:end="79:71">)</operator></expr> ?</condition><then pos:start="79:75" pos:end="79:75"> <expr pos:start="79:75" pos:end="79:75"><literal type="number" pos:start="79:75" pos:end="79:75">1</literal></expr> </then><else pos:start="79:77" pos:end="79:79">: <expr pos:start="79:79" pos:end="79:79"><literal type="number" pos:start="79:79" pos:end="79:79">2</literal></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if <condition pos:start="81:8" pos:end="81:18">(<expr pos:start="81:9" pos:end="81:17"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:17">channels</name></expr>)</condition> <block pos:start="81:20" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:35">

        <expr_stmt pos:start="83:9" pos:end="83:87"><expr pos:start="83:9" pos:end="83:86"><call pos:start="83:9" pos:end="83:86"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:86">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:85"><expr pos:start="83:37" pos:end="83:85"><literal type="string" pos:start="83:37" pos:end="83:85">"Zero channel count specified in the extradata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:35">return <expr pos:start="85:16" pos:end="85:34"><name pos:start="85:16" pos:end="85:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:13"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:13">gain_i</name></name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:23">AV_RL16</name><argument_list pos:start="91:24" pos:end="91:39">(<argument pos:start="91:25" pos:end="91:38"><expr pos:start="91:25" pos:end="91:38"><name pos:start="91:25" pos:end="91:33">extradata</name> <operator pos:start="91:35" pos:end="91:35">+</operator> <literal type="number" pos:start="91:37" pos:end="91:38">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:53"><if pos:start="93:5" pos:end="95:53">if <condition pos:start="93:8" pos:end="93:18">(<expr pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:17"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:17">gain_i</name></name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:53"><block_content pos:start="95:9" pos:end="95:53">

        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:15">gain</name></name> <operator pos:start="95:17" pos:end="95:17">=</operator> <call pos:start="95:19" pos:end="95:52"><name pos:start="95:19" pos:end="95:26">ff_exp10</name><argument_list pos:start="95:27" pos:end="95:52">(<argument pos:start="95:28" pos:end="95:51"><expr pos:start="95:28" pos:end="95:51"><name pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:28">s</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:36">gain_i</name></name> <operator pos:start="95:38" pos:end="95:38">/</operator> <operator pos:start="95:40" pos:end="95:40">(</operator><literal type="number" pos:start="95:41" pos:end="95:44">20.0</literal> <operator pos:start="95:46" pos:end="95:46">*</operator> <literal type="number" pos:start="95:48" pos:end="95:50">256</literal><operator pos:start="95:51" pos:end="95:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:12">map_type</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:28"><name pos:start="99:16" pos:end="99:24">extradata</name><index pos:start="99:25" pos:end="99:28">[<expr pos:start="99:26" pos:end="99:27"><literal type="number" pos:start="99:26" pos:end="99:27">18</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="201:5"><if pos:start="101:5" pos:end="121:5">if <condition pos:start="101:8" pos:end="101:18">(<expr pos:start="101:9" pos:end="101:17"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:17">map_type</name></expr>)</condition> <block pos:start="101:20" pos:end="121:5">{<block_content pos:start="103:9" pos:end="119:45">

        <if_stmt pos:start="103:9" pos:end="111:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="103:25">(<expr pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:20">channels</name> <operator pos:start="103:22" pos:end="103:22">&gt;</operator> <literal type="number" pos:start="103:24" pos:end="103:24">2</literal></expr>)</condition> <block pos:start="103:27" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:39">

            <expr_stmt pos:start="105:13" pos:end="107:81"><expr pos:start="105:13" pos:end="107:80"><call pos:start="105:13" pos:end="107:80"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="107:80">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:79"><expr pos:start="107:20" pos:end="107:79"><literal type="string" pos:start="107:20" pos:end="107:79">"Channel mapping 0 is only specified for up to 2 channels\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:39">return <expr pos:start="109:20" pos:end="109:38"><name pos:start="109:20" pos:end="109:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:83"><expr pos:start="113:9" pos:end="113:82"><name pos:start="113:9" pos:end="113:14">layout</name>         <operator pos:start="113:24" pos:end="113:24">=</operator> <ternary pos:start="113:26" pos:end="113:82"><condition pos:start="113:26" pos:end="113:42"><expr pos:start="113:26" pos:end="113:40"><operator pos:start="113:26" pos:end="113:26">(</operator><name pos:start="113:27" pos:end="113:34">channels</name> <operator pos:start="113:36" pos:end="113:37">==</operator> <literal type="number" pos:start="113:39" pos:end="113:39">1</literal><operator pos:start="113:40" pos:end="113:40">)</operator></expr> ?</condition><then pos:start="113:44" pos:end="113:60"> <expr pos:start="113:44" pos:end="113:60"><name pos:start="113:44" pos:end="113:60">AV_CH_LAYOUT_MONO</name></expr> </then><else pos:start="113:62" pos:end="113:82">: <expr pos:start="113:64" pos:end="113:82"><name pos:start="113:64" pos:end="113:82">AV_CH_LAYOUT_STEREO</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:27"><expr pos:start="115:9" pos:end="115:26"><name pos:start="115:9" pos:end="115:15">streams</name>        <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="number" pos:start="115:26" pos:end="115:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:38"><expr pos:start="117:9" pos:end="117:37"><name pos:start="117:9" pos:end="117:22">stereo_streams</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <name pos:start="117:26" pos:end="117:33">channels</name> <operator pos:start="117:35" pos:end="117:35">-</operator> <literal type="number" pos:start="117:37" pos:end="117:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:45"><expr pos:start="119:9" pos:end="119:44"><name pos:start="119:9" pos:end="119:19">channel_map</name>    <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:44">default_channel_map</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="121:7" pos:end="195:5">else if <condition pos:start="121:15" pos:end="121:65">(<expr pos:start="121:16" pos:end="121:64"><name pos:start="121:16" pos:end="121:23">map_type</name> <operator pos:start="121:25" pos:end="121:26">==</operator> <literal type="number" pos:start="121:28" pos:end="121:28">1</literal> <operator pos:start="121:30" pos:end="121:31">||</operator> <name pos:start="121:33" pos:end="121:40">map_type</name> <operator pos:start="121:42" pos:end="121:43">==</operator> <literal type="number" pos:start="121:45" pos:end="121:45">2</literal> <operator pos:start="121:47" pos:end="121:48">||</operator> <name pos:start="121:50" pos:end="121:57">map_type</name> <operator pos:start="121:59" pos:end="121:60">==</operator> <literal type="number" pos:start="121:62" pos:end="121:64">255</literal></expr>)</condition> <block pos:start="121:67" pos:end="195:5">{<block_content pos:start="123:9" pos:end="193:37">

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="123:43">(<expr pos:start="123:13" pos:end="123:42"><name pos:start="123:13" pos:end="123:26">extradata_size</name> <operator pos:start="123:28" pos:end="123:28">&lt;</operator> <literal type="number" pos:start="123:30" pos:end="123:33">21</literal> <operator pos:start="123:33" pos:end="123:33">+</operator> <name pos:start="123:35" pos:end="123:42">channels</name></expr>)</condition> <block pos:start="123:45" pos:end="131:9">{<block_content pos:start="125:13" pos:end="129:39">

            <expr_stmt pos:start="125:13" pos:end="127:35"><expr pos:start="125:13" pos:end="127:34"><call pos:start="125:13" pos:end="127:34"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="127:34">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">avctx</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="125:41" pos:end="125:70"><expr pos:start="125:41" pos:end="125:70"><literal type="string" pos:start="125:41" pos:end="125:70">"Invalid extradata size: %d\n"</literal></expr></argument>,

                   <argument pos:start="127:20" pos:end="127:33"><expr pos:start="127:20" pos:end="127:33"><name pos:start="127:20" pos:end="127:33">extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:39">return <expr pos:start="129:20" pos:end="129:38"><name pos:start="129:20" pos:end="129:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:15">streams</name>        <operator pos:start="135:24" pos:end="135:24">=</operator> <name pos:start="135:26" pos:end="135:38"><name pos:start="135:26" pos:end="135:34">extradata</name><index pos:start="135:35" pos:end="135:38">[<expr pos:start="135:36" pos:end="135:37"><literal type="number" pos:start="135:36" pos:end="135:37">19</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:39"><expr pos:start="137:9" pos:end="137:38"><name pos:start="137:9" pos:end="137:22">stereo_streams</name> <operator pos:start="137:24" pos:end="137:24">=</operator> <name pos:start="137:26" pos:end="137:38"><name pos:start="137:26" pos:end="137:34">extradata</name><index pos:start="137:35" pos:end="137:38">[<expr pos:start="137:36" pos:end="137:37"><literal type="number" pos:start="137:36" pos:end="137:37">20</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="149:9"><if pos:start="139:9" pos:end="149:9">if <condition pos:start="139:12" pos:end="141:43">(<expr pos:start="139:13" pos:end="141:42"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:20">streams</name> <operator pos:start="139:22" pos:end="139:23">||</operator> <name pos:start="139:25" pos:end="139:38">stereo_streams</name> <operator pos:start="139:40" pos:end="139:40">&gt;</operator> <name pos:start="139:42" pos:end="139:48">streams</name> <operator pos:start="139:50" pos:end="139:51">||</operator>

            <name pos:start="141:13" pos:end="141:19">streams</name> <operator pos:start="141:21" pos:end="141:21">+</operator> <name pos:start="141:23" pos:end="141:36">stereo_streams</name> <operator pos:start="141:38" pos:end="141:38">&gt;</operator> <literal type="number" pos:start="141:40" pos:end="141:42">255</literal></expr>)</condition> <block pos:start="141:45" pos:end="149:9">{<block_content pos:start="143:13" pos:end="147:39">

            <expr_stmt pos:start="143:13" pos:end="145:91"><expr pos:start="143:13" pos:end="145:90"><call pos:start="143:13" pos:end="145:90"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="145:90">(<argument pos:start="143:20" pos:end="143:24"><expr pos:start="143:20" pos:end="143:24"><name pos:start="143:20" pos:end="143:24">avctx</name></expr></argument>, <argument pos:start="143:27" pos:end="143:38"><expr pos:start="143:27" pos:end="143:38"><name pos:start="143:27" pos:end="143:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="145:20" pos:end="145:64"><expr pos:start="145:20" pos:end="145:64"><literal type="string" pos:start="145:20" pos:end="145:64">"Invalid stream/stereo stream count: %d/%d\n"</literal></expr></argument>, <argument pos:start="145:67" pos:end="145:73"><expr pos:start="145:67" pos:end="145:73"><name pos:start="145:67" pos:end="145:73">streams</name></expr></argument>, <argument pos:start="145:76" pos:end="145:89"><expr pos:start="145:76" pos:end="145:89"><name pos:start="145:76" pos:end="145:89">stereo_streams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="147:13" pos:end="147:39">return <expr pos:start="147:20" pos:end="147:38"><name pos:start="147:20" pos:end="147:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="153:9" pos:end="189:23"><if pos:start="153:9" pos:end="169:9">if <condition pos:start="153:12" pos:end="153:26">(<expr pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:20">map_type</name> <operator pos:start="153:22" pos:end="153:23">==</operator> <literal type="number" pos:start="153:25" pos:end="153:25">1</literal></expr>)</condition> <block pos:start="153:28" pos:end="169:9">{<block_content pos:start="155:13" pos:end="167:53">

            <if_stmt pos:start="155:13" pos:end="163:13"><if pos:start="155:13" pos:end="163:13">if <condition pos:start="155:16" pos:end="155:29">(<expr pos:start="155:17" pos:end="155:28"><name pos:start="155:17" pos:end="155:24">channels</name> <operator pos:start="155:26" pos:end="155:26">&gt;</operator> <literal type="number" pos:start="155:28" pos:end="155:28">8</literal></expr>)</condition> <block pos:start="155:31" pos:end="163:13">{<block_content pos:start="157:17" pos:end="161:43">

                <expr_stmt pos:start="157:17" pos:end="159:85"><expr pos:start="157:17" pos:end="159:84"><call pos:start="157:17" pos:end="159:84"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="159:84">(<argument pos:start="157:24" pos:end="157:28"><expr pos:start="157:24" pos:end="157:28"><name pos:start="157:24" pos:end="157:28">avctx</name></expr></argument>, <argument pos:start="157:31" pos:end="157:42"><expr pos:start="157:31" pos:end="157:42"><name pos:start="157:31" pos:end="157:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="159:24" pos:end="159:83"><expr pos:start="159:24" pos:end="159:83"><literal type="string" pos:start="159:24" pos:end="159:83">"Channel mapping 1 is only specified for up to 8 channels\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="161:17" pos:end="161:43">return <expr pos:start="161:24" pos:end="161:42"><name pos:start="161:24" pos:end="161:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:61"><expr pos:start="165:13" pos:end="165:60"><name pos:start="165:13" pos:end="165:18">layout</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <name pos:start="165:22" pos:end="165:60"><name pos:start="165:22" pos:end="165:46">ff_vorbis_channel_layouts</name><index pos:start="165:47" pos:end="165:60">[<expr pos:start="165:48" pos:end="165:59"><name pos:start="165:48" pos:end="165:55">channels</name> <operator pos:start="165:57" pos:end="165:57">-</operator> <literal type="number" pos:start="165:59" pos:end="165:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:53"><expr pos:start="167:13" pos:end="167:52"><name pos:start="167:13" pos:end="167:27">channel_reorder</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:52">channel_reorder_vorbis</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="169:11" pos:end="187:9">else if <condition pos:start="169:19" pos:end="169:33">(<expr pos:start="169:20" pos:end="169:32"><name pos:start="169:20" pos:end="169:27">map_type</name> <operator pos:start="169:29" pos:end="169:30">==</operator> <literal type="number" pos:start="169:32" pos:end="169:32">2</literal></expr>)</condition> <block pos:start="169:35" pos:end="187:9">{<block_content pos:start="171:13" pos:end="185:23">

            <decl_stmt pos:start="171:13" pos:end="171:56"><decl pos:start="171:13" pos:end="171:55"><type pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">int</name></type> <name pos:start="171:17" pos:end="171:31">ambisonic_order</name> <init pos:start="171:33" pos:end="171:55">= <expr pos:start="171:35" pos:end="171:55"><call pos:start="171:35" pos:end="171:51"><name pos:start="171:35" pos:end="171:41">ff_sqrt</name><argument_list pos:start="171:42" pos:end="171:51">(<argument pos:start="171:43" pos:end="171:50"><expr pos:start="171:43" pos:end="171:50"><name pos:start="171:43" pos:end="171:50">channels</name></expr></argument>)</argument_list></call> <operator pos:start="171:53" pos:end="171:53">-</operator> <literal type="number" pos:start="171:55" pos:end="171:55">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="173:13" pos:end="183:13"><if pos:start="173:13" pos:end="183:13">if <condition pos:start="173:16" pos:end="173:74">(<expr pos:start="173:17" pos:end="173:73"><name pos:start="173:17" pos:end="173:24">channels</name> <operator pos:start="173:26" pos:end="173:27">!=</operator> <operator pos:start="173:29" pos:end="173:29">(</operator><name pos:start="173:30" pos:end="173:44">ambisonic_order</name> <operator pos:start="173:46" pos:end="173:46">+</operator> <literal type="number" pos:start="173:48" pos:end="173:48">1</literal><operator pos:start="173:49" pos:end="173:49">)</operator> <operator pos:start="173:51" pos:end="173:51">*</operator> <operator pos:start="173:53" pos:end="173:53">(</operator><name pos:start="173:54" pos:end="173:68">ambisonic_order</name> <operator pos:start="173:70" pos:end="173:70">+</operator> <literal type="number" pos:start="173:72" pos:end="173:72">1</literal><operator pos:start="173:73" pos:end="173:73">)</operator></expr>)</condition> <block pos:start="173:76" pos:end="183:13">{<block_content pos:start="175:17" pos:end="181:43">

                <expr_stmt pos:start="175:17" pos:end="179:89"><expr pos:start="175:17" pos:end="179:88"><call pos:start="175:17" pos:end="179:88"><name pos:start="175:17" pos:end="175:22">av_log</name><argument_list pos:start="175:23" pos:end="179:88">(<argument pos:start="175:24" pos:end="175:28"><expr pos:start="175:24" pos:end="175:28"><name pos:start="175:24" pos:end="175:28">avctx</name></expr></argument>, <argument pos:start="175:31" pos:end="175:42"><expr pos:start="175:31" pos:end="175:42"><name pos:start="175:31" pos:end="175:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="177:24" pos:end="179:87"><expr pos:start="177:24" pos:end="179:87"><literal type="string" pos:start="177:24" pos:end="177:79">"Channel mapping 2 is only specified for channel counts"</literal>

                       <literal type="string" pos:start="179:24" pos:end="179:87">" which can be written as (n + 1)^2 for nonnegative integer n\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="181:17" pos:end="181:43">return <expr pos:start="181:24" pos:end="181:42"><name pos:start="181:24" pos:end="181:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:23"><expr pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:18">layout</name> <operator pos:start="185:20" pos:end="185:20">=</operator> <literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="187:11" pos:end="189:23">else<block type="pseudo" pos:start="189:13" pos:end="189:23"><block_content pos:start="189:13" pos:end="189:23">

            <expr_stmt pos:start="189:13" pos:end="189:23"><expr pos:start="189:13" pos:end="189:22"><name pos:start="189:13" pos:end="189:18">layout</name> <operator pos:start="189:20" pos:end="189:20">=</operator> <literal type="number" pos:start="189:22" pos:end="189:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:37"><expr pos:start="193:9" pos:end="193:36"><name pos:start="193:9" pos:end="193:19">channel_map</name> <operator pos:start="193:21" pos:end="193:21">=</operator> <name pos:start="193:23" pos:end="193:31">extradata</name> <operator pos:start="193:33" pos:end="193:33">+</operator> <literal type="number" pos:start="193:35" pos:end="193:36">21</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="201:5">else <block pos:start="195:12" pos:end="201:5">{<block_content pos:start="197:9" pos:end="199:36">

        <expr_stmt pos:start="197:9" pos:end="197:66"><expr pos:start="197:9" pos:end="197:65"><call pos:start="197:9" pos:end="197:65"><name pos:start="197:9" pos:end="197:29">avpriv_request_sample</name><argument_list pos:start="197:30" pos:end="197:65">(<argument pos:start="197:31" pos:end="197:35"><expr pos:start="197:31" pos:end="197:35"><name pos:start="197:31" pos:end="197:35">avctx</name></expr></argument>, <argument pos:start="197:38" pos:end="197:54"><expr pos:start="197:38" pos:end="197:54"><literal type="string" pos:start="197:38" pos:end="197:54">"Mapping type %d"</literal></expr></argument>, <argument pos:start="197:57" pos:end="197:64"><expr pos:start="197:57" pos:end="197:64"><name pos:start="197:57" pos:end="197:64">map_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="199:9" pos:end="199:36">return <expr pos:start="199:16" pos:end="199:35"><name pos:start="199:16" pos:end="199:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:75"><expr pos:start="205:5" pos:end="205:74"><name pos:start="205:5" pos:end="205:19"><name pos:start="205:5" pos:end="205:5">s</name><operator pos:start="205:6" pos:end="205:7">-&gt;</operator><name pos:start="205:8" pos:end="205:19">channel_maps</name></name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:74"><name pos:start="205:23" pos:end="205:38">av_mallocz_array</name><argument_list pos:start="205:39" pos:end="205:74">(<argument pos:start="205:40" pos:end="205:47"><expr pos:start="205:40" pos:end="205:47"><name pos:start="205:40" pos:end="205:47">channels</name></expr></argument>, <argument pos:start="205:50" pos:end="205:73"><expr pos:start="205:50" pos:end="205:73"><sizeof pos:start="205:50" pos:end="205:73">sizeof<argument_list pos:start="205:56" pos:end="205:73">(<argument pos:start="205:57" pos:end="205:72"><expr pos:start="205:57" pos:end="205:72"><operator pos:start="205:57" pos:end="205:57">*</operator><name pos:start="205:58" pos:end="205:72"><name pos:start="205:58" pos:end="205:58">s</name><operator pos:start="205:59" pos:end="205:60">-&gt;</operator><name pos:start="205:61" pos:end="205:72">channel_maps</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="209:31"><if pos:start="207:5" pos:end="209:31">if <condition pos:start="207:8" pos:end="207:25">(<expr pos:start="207:9" pos:end="207:24"><operator pos:start="207:9" pos:end="207:9">!</operator><name pos:start="207:10" pos:end="207:24"><name pos:start="207:10" pos:end="207:10">s</name><operator pos:start="207:11" pos:end="207:12">-&gt;</operator><name pos:start="207:13" pos:end="207:24">channel_maps</name></name></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:31"><block_content pos:start="209:9" pos:end="209:31">

        <return pos:start="209:9" pos:end="209:31">return <expr pos:start="209:16" pos:end="209:30"><call pos:start="209:16" pos:end="209:30"><name pos:start="209:16" pos:end="209:22">AVERROR</name><argument_list pos:start="209:23" pos:end="209:30">(<argument pos:start="209:24" pos:end="209:29"><expr pos:start="209:24" pos:end="209:29"><name pos:start="209:24" pos:end="209:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="213:5" pos:end="272:5">for <control pos:start="213:9" pos:end="213:34">(<init pos:start="213:10" pos:end="213:15"><expr pos:start="213:10" pos:end="213:14"><name pos:start="213:10" pos:end="213:10">i</name> <operator pos:start="213:12" pos:end="213:12">=</operator> <literal type="number" pos:start="213:14" pos:end="213:14">0</literal></expr>;</init> <condition pos:start="213:17" pos:end="213:29"><expr pos:start="213:17" pos:end="213:28"><name pos:start="213:17" pos:end="213:17">i</name> <operator pos:start="213:19" pos:end="213:19">&lt;</operator> <name pos:start="213:21" pos:end="213:28">channels</name></expr>;</condition> <incr pos:start="213:31" pos:end="213:33"><expr pos:start="213:31" pos:end="213:33"><name pos:start="213:31" pos:end="213:31">i</name><operator pos:start="213:32" pos:end="213:33">++</operator></expr></incr>)</control> <block pos:start="213:36" pos:end="272:5">{<block_content pos:start="215:9" pos:end="270:9">

        <decl_stmt pos:start="215:9" pos:end="215:46"><decl pos:start="215:9" pos:end="215:45"><type pos:start="215:9" pos:end="215:20"><name pos:start="215:9" pos:end="215:18">ChannelMap</name> <modifier pos:start="215:20" pos:end="215:20">*</modifier></type><name pos:start="215:21" pos:end="215:23">map</name> <init pos:start="215:25" pos:end="215:45">= <expr pos:start="215:27" pos:end="215:45"><operator pos:start="215:27" pos:end="215:27">&amp;</operator><name pos:start="215:28" pos:end="215:45"><name pos:start="215:28" pos:end="215:28">s</name><operator pos:start="215:29" pos:end="215:30">-&gt;</operator><name pos:start="215:31" pos:end="215:42">channel_maps</name><index pos:start="215:43" pos:end="215:45">[<expr pos:start="215:44" pos:end="215:44"><name pos:start="215:44" pos:end="215:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="217:9" pos:end="217:68"><decl pos:start="217:9" pos:end="217:67"><type pos:start="217:9" pos:end="217:15"><name pos:start="217:9" pos:end="217:15">uint8_t</name></type>     <name pos:start="217:21" pos:end="217:23">idx</name> <init pos:start="217:25" pos:end="217:67">= <expr pos:start="217:27" pos:end="217:67"><name pos:start="217:27" pos:end="217:67"><name pos:start="217:27" pos:end="217:37">channel_map</name><index pos:start="217:38" pos:end="217:67">[<expr pos:start="217:39" pos:end="217:66"><call pos:start="217:39" pos:end="217:66"><name pos:start="217:39" pos:end="217:53">channel_reorder</name><argument_list pos:start="217:54" pos:end="217:66">(<argument pos:start="217:55" pos:end="217:62"><expr pos:start="217:55" pos:end="217:62"><name pos:start="217:55" pos:end="217:62">channels</name></expr></argument>, <argument pos:start="217:65" pos:end="217:65"><expr pos:start="217:65" pos:end="217:65"><name pos:start="217:65" pos:end="217:65">i</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="221:9" pos:end="236:9"><if pos:start="221:9" pos:end="227:9">if <condition pos:start="221:12" pos:end="221:23">(<expr pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:15">idx</name> <operator pos:start="221:17" pos:end="221:18">==</operator> <literal type="number" pos:start="221:20" pos:end="221:22">255</literal></expr>)</condition> <block pos:start="221:25" pos:end="227:9">{<block_content pos:start="223:13" pos:end="225:21">

            <expr_stmt pos:start="223:13" pos:end="223:29"><expr pos:start="223:13" pos:end="223:28"><name pos:start="223:13" pos:end="223:24"><name pos:start="223:13" pos:end="223:15">map</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:24">silence</name></name> <operator pos:start="223:26" pos:end="223:26">=</operator> <literal type="number" pos:start="223:28" pos:end="223:28">1</literal></expr>;</expr_stmt>

            <continue pos:start="225:13" pos:end="225:21">continue;</continue>

        </block_content>}</block></if> <if type="elseif" pos:start="227:11" pos:end="236:9">else if <condition pos:start="227:19" pos:end="227:51">(<expr pos:start="227:20" pos:end="227:50"><name pos:start="227:20" pos:end="227:22">idx</name> <operator pos:start="227:24" pos:end="227:25">&gt;=</operator> <name pos:start="227:27" pos:end="227:33">streams</name> <operator pos:start="227:35" pos:end="227:35">+</operator> <name pos:start="227:37" pos:end="227:50">stereo_streams</name></expr>)</condition> <block pos:start="227:53" pos:end="236:9">{<block_content pos:start="229:13" pos:end="234:39">

            <expr_stmt pos:start="229:13" pos:end="231:78"><expr pos:start="229:13" pos:end="231:77"><call pos:start="229:13" pos:end="231:77"><name pos:start="229:13" pos:end="229:18">av_log</name><argument_list pos:start="229:19" pos:end="231:77">(<argument pos:start="229:20" pos:end="229:24"><expr pos:start="229:20" pos:end="229:24"><name pos:start="229:20" pos:end="229:24">avctx</name></expr></argument>, <argument pos:start="229:27" pos:end="229:38"><expr pos:start="229:27" pos:end="229:38"><name pos:start="229:27" pos:end="229:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="231:20" pos:end="231:68"><expr pos:start="231:20" pos:end="231:68"><literal type="string" pos:start="231:20" pos:end="231:68">"Invalid channel map for output channel %d: %d\n"</literal></expr></argument>, <argument pos:start="231:71" pos:end="231:71"><expr pos:start="231:71" pos:end="231:71"><name pos:start="231:71" pos:end="231:71">i</name></expr></argument>, <argument pos:start="231:74" pos:end="231:76"><expr pos:start="231:74" pos:end="231:76"><name pos:start="231:74" pos:end="231:76">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


            <return pos:start="234:13" pos:end="234:39">return <expr pos:start="234:20" pos:end="234:38"><name pos:start="234:20" pos:end="234:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="240:9" pos:end="240:54">/* check that we did not see this index yet */</comment>

        <expr_stmt pos:start="242:9" pos:end="242:22"><expr pos:start="242:9" pos:end="242:21"><name pos:start="242:9" pos:end="242:17"><name pos:start="242:9" pos:end="242:11">map</name><operator pos:start="242:12" pos:end="242:13">-&gt;</operator><name pos:start="242:14" pos:end="242:17">copy</name></name> <operator pos:start="242:19" pos:end="242:19">=</operator> <literal type="number" pos:start="242:21" pos:end="242:21">0</literal></expr>;</expr_stmt>

        <for pos:start="244:9" pos:end="254:13">for <control pos:start="244:13" pos:end="244:31">(<init pos:start="244:14" pos:end="244:19"><expr pos:start="244:14" pos:end="244:18"><name pos:start="244:14" pos:end="244:14">j</name> <operator pos:start="244:16" pos:end="244:16">=</operator> <literal type="number" pos:start="244:18" pos:end="244:18">0</literal></expr>;</init> <condition pos:start="244:21" pos:end="244:26"><expr pos:start="244:21" pos:end="244:25"><name pos:start="244:21" pos:end="244:21">j</name> <operator pos:start="244:23" pos:end="244:23">&lt;</operator> <name pos:start="244:25" pos:end="244:25">i</name></expr>;</condition> <incr pos:start="244:28" pos:end="244:30"><expr pos:start="244:28" pos:end="244:30"><name pos:start="244:28" pos:end="244:28">j</name><operator pos:start="244:29" pos:end="244:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="246:13" pos:end="254:13"><block_content pos:start="246:13" pos:end="254:13">

            <if_stmt pos:start="246:13" pos:end="254:13"><if pos:start="246:13" pos:end="254:13">if <condition pos:start="246:16" pos:end="246:65">(<expr pos:start="246:17" pos:end="246:64"><name pos:start="246:17" pos:end="246:57"><name pos:start="246:17" pos:end="246:27">channel_map</name><index pos:start="246:28" pos:end="246:57">[<expr pos:start="246:29" pos:end="246:56"><call pos:start="246:29" pos:end="246:56"><name pos:start="246:29" pos:end="246:43">channel_reorder</name><argument_list pos:start="246:44" pos:end="246:56">(<argument pos:start="246:45" pos:end="246:52"><expr pos:start="246:45" pos:end="246:52"><name pos:start="246:45" pos:end="246:52">channels</name></expr></argument>, <argument pos:start="246:55" pos:end="246:55"><expr pos:start="246:55" pos:end="246:55"><name pos:start="246:55" pos:end="246:55">j</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="246:59" pos:end="246:60">==</operator> <name pos:start="246:62" pos:end="246:64">idx</name></expr>)</condition> <block pos:start="246:67" pos:end="254:13">{<block_content pos:start="248:17" pos:end="252:22">

                <expr_stmt pos:start="248:17" pos:end="248:34"><expr pos:start="248:17" pos:end="248:33"><name pos:start="248:17" pos:end="248:25"><name pos:start="248:17" pos:end="248:19">map</name><operator pos:start="248:20" pos:end="248:21">-&gt;</operator><name pos:start="248:22" pos:end="248:25">copy</name></name>     <operator pos:start="248:31" pos:end="248:31">=</operator> <literal type="number" pos:start="248:33" pos:end="248:33">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="250:17" pos:end="250:34"><expr pos:start="250:17" pos:end="250:33"><name pos:start="250:17" pos:end="250:29"><name pos:start="250:17" pos:end="250:19">map</name><operator pos:start="250:20" pos:end="250:21">-&gt;</operator><name pos:start="250:22" pos:end="250:29">copy_idx</name></name> <operator pos:start="250:31" pos:end="250:31">=</operator> <name pos:start="250:33" pos:end="250:33">j</name></expr>;</expr_stmt>

                <break pos:start="252:17" pos:end="252:22">break;</break>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="258:9" pos:end="270:9"><if pos:start="258:9" pos:end="264:9">if <condition pos:start="258:12" pos:end="258:37">(<expr pos:start="258:13" pos:end="258:36"><name pos:start="258:13" pos:end="258:15">idx</name> <operator pos:start="258:17" pos:end="258:17">&lt;</operator> <literal type="number" pos:start="258:19" pos:end="258:19">2</literal> <operator pos:start="258:21" pos:end="258:21">*</operator> <name pos:start="258:23" pos:end="258:36">stereo_streams</name></expr>)</condition> <block pos:start="258:39" pos:end="264:9">{<block_content pos:start="260:13" pos:end="262:39">

            <expr_stmt pos:start="260:13" pos:end="260:39"><expr pos:start="260:13" pos:end="260:38"><name pos:start="260:13" pos:end="260:27"><name pos:start="260:13" pos:end="260:15">map</name><operator pos:start="260:16" pos:end="260:17">-&gt;</operator><name pos:start="260:18" pos:end="260:27">stream_idx</name></name>  <operator pos:start="260:30" pos:end="260:30">=</operator> <name pos:start="260:32" pos:end="260:34">idx</name> <operator pos:start="260:36" pos:end="260:36">/</operator> <literal type="number" pos:start="260:38" pos:end="260:38">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="262:13" pos:end="262:39"><expr pos:start="262:13" pos:end="262:38"><name pos:start="262:13" pos:end="262:28"><name pos:start="262:13" pos:end="262:15">map</name><operator pos:start="262:16" pos:end="262:17">-&gt;</operator><name pos:start="262:18" pos:end="262:28">channel_idx</name></name> <operator pos:start="262:30" pos:end="262:30">=</operator> <name pos:start="262:32" pos:end="262:34">idx</name> <operator pos:start="262:36" pos:end="262:36">&amp;</operator> <literal type="number" pos:start="262:38" pos:end="262:38">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="264:11" pos:end="270:9">else <block pos:start="264:16" pos:end="270:9">{<block_content pos:start="266:13" pos:end="268:33">

            <expr_stmt pos:start="266:13" pos:end="266:52"><expr pos:start="266:13" pos:end="266:51"><name pos:start="266:13" pos:end="266:27"><name pos:start="266:13" pos:end="266:15">map</name><operator pos:start="266:16" pos:end="266:17">-&gt;</operator><name pos:start="266:18" pos:end="266:27">stream_idx</name></name>  <operator pos:start="266:30" pos:end="266:30">=</operator> <name pos:start="266:32" pos:end="266:34">idx</name> <operator pos:start="266:36" pos:end="266:36">-</operator> <name pos:start="266:38" pos:end="266:51">stereo_streams</name></expr>;</expr_stmt>

            <expr_stmt pos:start="268:13" pos:end="268:33"><expr pos:start="268:13" pos:end="268:32"><name pos:start="268:13" pos:end="268:28"><name pos:start="268:13" pos:end="268:15">map</name><operator pos:start="268:16" pos:end="268:17">-&gt;</operator><name pos:start="268:18" pos:end="268:28">channel_idx</name></name> <operator pos:start="268:30" pos:end="268:30">=</operator> <literal type="number" pos:start="268:32" pos:end="268:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="276:5" pos:end="276:37"><expr pos:start="276:5" pos:end="276:36"><name pos:start="276:5" pos:end="276:19"><name pos:start="276:5" pos:end="276:9">avctx</name><operator pos:start="276:10" pos:end="276:11">-&gt;</operator><name pos:start="276:12" pos:end="276:19">channels</name></name>       <operator pos:start="276:27" pos:end="276:27">=</operator> <name pos:start="276:29" pos:end="276:36">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="278:5" pos:end="278:35"><expr pos:start="278:5" pos:end="278:34"><name pos:start="278:5" pos:end="278:25"><name pos:start="278:5" pos:end="278:9">avctx</name><operator pos:start="278:10" pos:end="278:11">-&gt;</operator><name pos:start="278:12" pos:end="278:25">channel_layout</name></name> <operator pos:start="278:27" pos:end="278:27">=</operator> <name pos:start="278:29" pos:end="278:34">layout</name></expr>;</expr_stmt>

    <expr_stmt pos:start="280:5" pos:end="280:36"><expr pos:start="280:5" pos:end="280:35"><name pos:start="280:5" pos:end="280:17"><name pos:start="280:5" pos:end="280:5">s</name><operator pos:start="280:6" pos:end="280:7">-&gt;</operator><name pos:start="280:8" pos:end="280:17">nb_streams</name></name>         <operator pos:start="280:27" pos:end="280:27">=</operator> <name pos:start="280:29" pos:end="280:35">streams</name></expr>;</expr_stmt>

    <expr_stmt pos:start="282:5" pos:end="282:43"><expr pos:start="282:5" pos:end="282:42"><name pos:start="282:5" pos:end="282:24"><name pos:start="282:5" pos:end="282:5">s</name><operator pos:start="282:6" pos:end="282:7">-&gt;</operator><name pos:start="282:8" pos:end="282:24">nb_stereo_streams</name></name>  <operator pos:start="282:27" pos:end="282:27">=</operator> <name pos:start="282:29" pos:end="282:42">stereo_streams</name></expr>;</expr_stmt>



    <return pos:start="286:5" pos:end="286:13">return <expr pos:start="286:12" pos:end="286:12"><literal type="number" pos:start="286:12" pos:end="286:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
