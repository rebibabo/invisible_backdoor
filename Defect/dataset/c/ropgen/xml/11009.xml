<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11009.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:40">pci_config_get_pref_base</name><parameter_list pos:start="1:41" pos:end="3:71">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:50">PCIDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">d</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:49">uint32_t</name></type> <name pos:start="3:51" pos:end="3:54">base</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:70"><decl pos:start="3:57" pos:end="3:70"><type pos:start="3:57" pos:end="3:70"><name pos:start="3:57" pos:end="3:64">uint32_t</name></type> <name pos:start="3:66" pos:end="3:70">upper</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:15">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="11:38"><expr pos:start="9:5" pos:end="11:37"><name pos:start="9:5" pos:end="9:7">val</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <operator pos:start="9:11" pos:end="9:11">(</operator><operator pos:start="9:12" pos:end="9:12">(</operator><name pos:start="9:13" pos:end="9:20">uint64_t</name><operator pos:start="9:21" pos:end="9:21">)</operator><call pos:start="9:22" pos:end="9:51"><name pos:start="9:22" pos:end="9:33">pci_get_word</name><argument_list pos:start="9:34" pos:end="9:51">(<argument pos:start="9:35" pos:end="9:50"><expr pos:start="9:35" pos:end="9:50"><name pos:start="9:35" pos:end="9:43"><name pos:start="9:35" pos:end="9:35">d</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:43">config</name></name> <operator pos:start="9:45" pos:end="9:45">+</operator> <name pos:start="9:47" pos:end="9:50">base</name></expr></argument>)</argument_list></call> <operator pos:start="9:53" pos:end="9:53">&amp;</operator>

           <name pos:start="11:12" pos:end="11:30">PCI_PREF_RANGE_MASK</name><operator pos:start="11:31" pos:end="11:31">)</operator> <operator pos:start="11:33" pos:end="11:34">&lt;&lt;</operator> <literal type="number" pos:start="11:36" pos:end="11:37">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:7">val</name> <operator pos:start="13:9" pos:end="13:10">|=</operator> <operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:20">uint64_t</name><operator pos:start="13:21" pos:end="13:21">)</operator><call pos:start="13:22" pos:end="13:52"><name pos:start="13:22" pos:end="13:33">pci_get_long</name><argument_list pos:start="13:34" pos:end="13:52">(<argument pos:start="13:35" pos:end="13:51"><expr pos:start="13:35" pos:end="13:51"><name pos:start="13:35" pos:end="13:43"><name pos:start="13:35" pos:end="13:35">d</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:43">config</name></name> <operator pos:start="13:45" pos:end="13:45">+</operator> <name pos:start="13:47" pos:end="13:51">upper</name></expr></argument>)</argument_list></call> <operator pos:start="13:54" pos:end="13:55">&lt;&lt;</operator> <literal type="number" pos:start="13:57" pos:end="13:58">32</literal></expr>;</expr_stmt>

    <return pos:start="15:5" pos:end="15:15">return <expr pos:start="15:12" pos:end="15:14"><name pos:start="15:12" pos:end="15:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
