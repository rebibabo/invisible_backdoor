<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6493.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vorbis_encode_frame</name><parameter_list pos:start="1:31" pos:end="5:56">(<parameter pos:start="1:32" pos:end="1:57"><decl pos:start="1:32" pos:end="1:57"><type pos:start="1:32" pos:end="1:57"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:57">avccontext</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:53"><decl pos:start="3:32" pos:end="3:53"><type pos:start="3:32" pos:end="3:53"><name pos:start="3:32" pos:end="3:39">unsigned</name> <name pos:start="3:41" pos:end="3:44">char</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:53">packets</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:43"><decl pos:start="5:32" pos:end="5:43"><type pos:start="5:32" pos:end="5:43"><name pos:start="5:32" pos:end="5:34">int</name></type> <name pos:start="5:36" pos:end="5:43">buf_size</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:55"><decl pos:start="5:46" pos:end="5:55"><type pos:start="5:46" pos:end="5:55"><name pos:start="5:46" pos:end="5:49">void</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:55">data</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="121:1">{<block_content pos:start="9:5" pos:end="119:36">

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">vorbis_enc_context</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:28">venc</name> <init pos:start="9:30" pos:end="9:52">= <expr pos:start="9:32" pos:end="9:52"><name pos:start="9:32" pos:end="9:52"><name pos:start="9:32" pos:end="9:41">avccontext</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:52">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:24"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:16">signed</name> <name pos:start="11:18" pos:end="11:22">short</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:29">audio</name> <init pos:start="11:31" pos:end="11:36">= <expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:36">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">samples</name> <init pos:start="13:17" pos:end="13:51">= <expr pos:start="13:19" pos:end="13:51"><ternary pos:start="13:19" pos:end="13:51"><condition pos:start="13:19" pos:end="13:24"><expr pos:start="13:19" pos:end="13:22"><name pos:start="13:19" pos:end="13:22">data</name></expr> ?</condition><then pos:start="13:26" pos:end="13:47"> <expr pos:start="13:26" pos:end="13:47"><name pos:start="13:26" pos:end="13:47"><name pos:start="13:26" pos:end="13:35">avccontext</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:47">frame_size</name></name></expr> </then><else pos:start="13:49" pos:end="13:51">: <expr pos:start="13:51" pos:end="13:51"><literal type="number" pos:start="13:51" pos:end="13:51">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">vorbis_enc_mode</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:25">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:22">vorbis_enc_mapping</name> <modifier pos:start="17:24" pos:end="17:24">*</modifier></type><name pos:start="17:25" pos:end="17:31">mapping</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">PutBitContext</name></type> <name pos:start="19:19" pos:end="19:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:53">(<expr pos:start="25:9" pos:end="25:52"><operator pos:start="25:9" pos:end="25:9">!</operator><call pos:start="25:10" pos:end="25:52"><name pos:start="25:10" pos:end="25:30">apply_window_and_mdct</name><argument_list pos:start="25:31" pos:end="25:52">(<argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><name pos:start="25:32" pos:end="25:35">venc</name></expr></argument>, <argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><name pos:start="25:38" pos:end="25:42">audio</name></expr></argument>, <argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><name pos:start="25:45" pos:end="25:51">samples</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:11">samples</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <literal type="number" pos:start="29:15" pos:end="29:15">1</literal> <operator pos:start="29:17" pos:end="29:18">&lt;&lt;</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:43"><name pos:start="29:21" pos:end="29:24">venc</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:40">log2_blocksize</name><index pos:start="29:41" pos:end="29:43">[<expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr>]</index></name> <operator pos:start="29:45" pos:end="29:45">-</operator> <literal type="number" pos:start="29:47" pos:end="29:47">1</literal><operator pos:start="29:48" pos:end="29:48">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:42"><expr pos:start="33:5" pos:end="33:41"><call pos:start="33:5" pos:end="33:41"><name pos:start="33:5" pos:end="33:17">init_put_bits</name><argument_list pos:start="33:18" pos:end="33:41">(<argument pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><operator pos:start="33:19" pos:end="33:19">&amp;</operator><name pos:start="33:20" pos:end="33:21">pb</name></expr></argument>, <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><name pos:start="33:24" pos:end="33:30">packets</name></expr></argument>, <argument pos:start="33:33" pos:end="33:40"><expr pos:start="33:33" pos:end="33:40"><name pos:start="33:33" pos:end="33:40">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><call pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:12">put_bits</name><argument_list pos:start="37:13" pos:end="37:23">(<argument pos:start="37:14" pos:end="37:16"><expr pos:start="37:14" pos:end="37:16"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:16">pb</name></expr></argument>, <argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">1</literal></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="37:26" pos:end="37:37">// magic bit</comment>



    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:12">put_bits</name><argument_list pos:start="41:13" pos:end="41:44">(<argument pos:start="41:14" pos:end="41:16"><expr pos:start="41:14" pos:end="41:16"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:16">pb</name></expr></argument>, <argument pos:start="41:19" pos:end="41:40"><expr pos:start="41:19" pos:end="41:40"><call pos:start="41:19" pos:end="41:40"><name pos:start="41:19" pos:end="41:22">ilog</name><argument_list pos:start="41:23" pos:end="41:40">(<argument pos:start="41:24" pos:end="41:39"><expr pos:start="41:24" pos:end="41:39"><name pos:start="41:24" pos:end="41:35"><name pos:start="41:24" pos:end="41:27">venc</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:35">nmodes</name></name> <operator pos:start="41:37" pos:end="41:37">-</operator> <literal type="number" pos:start="41:39" pos:end="41:39">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:43" pos:end="41:43"><expr pos:start="41:43" pos:end="41:43"><literal type="number" pos:start="41:43" pos:end="41:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="41:47" pos:end="41:65">// 0 bits, the mode</comment>



    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:8">mode</name>    <operator pos:start="45:13" pos:end="45:13">=</operator> <operator pos:start="45:15" pos:end="45:15">&amp;</operator><name pos:start="45:16" pos:end="45:29"><name pos:start="45:16" pos:end="45:19">venc</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">modes</name><index pos:start="45:27" pos:end="45:29">[<expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:11">mapping</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:44"><name pos:start="47:16" pos:end="47:19">venc</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:29">mappings</name><index pos:start="47:30" pos:end="47:44">[<expr pos:start="47:31" pos:end="47:43"><name pos:start="47:31" pos:end="47:43"><name pos:start="47:31" pos:end="47:34">mode</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:43">mapping</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:24">(<expr pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:12">mode</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:23">blockflag</name></name></expr>)</condition> <block pos:start="49:26" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:28">

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:16">put_bits</name><argument_list pos:start="51:17" pos:end="51:27">(<argument pos:start="51:18" pos:end="51:20"><expr pos:start="51:18" pos:end="51:20"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>, <argument pos:start="51:23" pos:end="51:23"><expr pos:start="51:23" pos:end="51:23"><literal type="number" pos:start="51:23" pos:end="51:23">1</literal></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><call pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:16">put_bits</name><argument_list pos:start="53:17" pos:end="53:27">(<argument pos:start="53:18" pos:end="53:20"><expr pos:start="53:18" pos:end="53:20"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:20">pb</name></expr></argument>, <argument pos:start="53:23" pos:end="53:23"><expr pos:start="53:23" pos:end="53:23"><literal type="number" pos:start="53:23" pos:end="53:23">1</literal></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="59:5" pos:end="69:5">for <control pos:start="59:9" pos:end="59:40">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:35"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:24">venc</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:34">channels</name></name></expr>;</condition> <incr pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><name pos:start="59:37" pos:end="59:37">i</name><operator pos:start="59:38" pos:end="59:39">++</operator></expr></incr>)</control> <block pos:start="59:42" pos:end="69:5">{<block_content pos:start="61:9" pos:end="67:79">

        <decl_stmt pos:start="61:9" pos:end="61:78"><decl pos:start="61:9" pos:end="61:77"><type pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:24">vorbis_enc_floor</name> <modifier pos:start="61:26" pos:end="61:26">*</modifier></type><name pos:start="61:27" pos:end="61:28">fc</name> <init pos:start="61:30" pos:end="61:77">= <expr pos:start="61:32" pos:end="61:77"><operator pos:start="61:32" pos:end="61:32">&amp;</operator><name pos:start="61:33" pos:end="61:77"><name pos:start="61:33" pos:end="61:36">venc</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:44">floors</name><index pos:start="61:45" pos:end="61:77">[<expr pos:start="61:46" pos:end="61:76"><name pos:start="61:46" pos:end="61:76"><name pos:start="61:46" pos:end="61:52">mapping</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:59">floor</name><index pos:start="61:60" pos:end="61:76">[<expr pos:start="61:61" pos:end="61:75"><name pos:start="61:61" pos:end="61:75"><name pos:start="61:61" pos:end="61:67">mapping</name><operator pos:start="61:68" pos:end="61:69">-&gt;</operator><name pos:start="61:70" pos:end="61:72">mux</name><index pos:start="61:73" pos:end="61:75">[<expr pos:start="61:74" pos:end="61:74"><name pos:start="61:74" pos:end="61:74">i</name></expr>]</index></name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="63:9" pos:end="63:41"><decl pos:start="63:9" pos:end="63:40"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">uint16_t</name></type> <name pos:start="63:18" pos:end="63:40"><name pos:start="63:18" pos:end="63:22">posts</name><index pos:start="63:23" pos:end="63:40">[<expr pos:start="63:24" pos:end="63:39"><name pos:start="63:24" pos:end="63:39">MAX_FLOOR_VALUES</name></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:72"><expr pos:start="65:9" pos:end="65:71"><call pos:start="65:9" pos:end="65:71"><name pos:start="65:9" pos:end="65:17">floor_fit</name><argument_list pos:start="65:18" pos:end="65:71">(<argument pos:start="65:19" pos:end="65:22"><expr pos:start="65:19" pos:end="65:22"><name pos:start="65:19" pos:end="65:22">venc</name></expr></argument>, <argument pos:start="65:25" pos:end="65:26"><expr pos:start="65:25" pos:end="65:26"><name pos:start="65:25" pos:end="65:26">fc</name></expr></argument>, <argument pos:start="65:29" pos:end="65:54"><expr pos:start="65:29" pos:end="65:54"><operator pos:start="65:29" pos:end="65:29">&amp;</operator><name pos:start="65:30" pos:end="65:54"><name pos:start="65:30" pos:end="65:33">venc</name><operator pos:start="65:34" pos:end="65:35">-&gt;</operator><name pos:start="65:36" pos:end="65:41">coeffs</name><index pos:start="65:42" pos:end="65:54">[<expr pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:43">i</name> <operator pos:start="65:45" pos:end="65:45">*</operator> <name pos:start="65:47" pos:end="65:53">samples</name></expr>]</index></name></expr></argument>, <argument pos:start="65:57" pos:end="65:61"><expr pos:start="65:57" pos:end="65:61"><name pos:start="65:57" pos:end="65:61">posts</name></expr></argument>, <argument pos:start="65:64" pos:end="65:70"><expr pos:start="65:64" pos:end="65:70"><name pos:start="65:64" pos:end="65:70">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:79"><expr pos:start="67:9" pos:end="67:78"><call pos:start="67:9" pos:end="67:78"><name pos:start="67:9" pos:end="67:20">floor_encode</name><argument_list pos:start="67:21" pos:end="67:78">(<argument pos:start="67:22" pos:end="67:25"><expr pos:start="67:22" pos:end="67:25"><name pos:start="67:22" pos:end="67:25">venc</name></expr></argument>, <argument pos:start="67:28" pos:end="67:29"><expr pos:start="67:28" pos:end="67:29"><name pos:start="67:28" pos:end="67:29">fc</name></expr></argument>, <argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><operator pos:start="67:32" pos:end="67:32">&amp;</operator><name pos:start="67:33" pos:end="67:34">pb</name></expr></argument>, <argument pos:start="67:37" pos:end="67:41"><expr pos:start="67:37" pos:end="67:41"><name pos:start="67:37" pos:end="67:41">posts</name></expr></argument>, <argument pos:start="67:44" pos:end="67:68"><expr pos:start="67:44" pos:end="67:68"><operator pos:start="67:44" pos:end="67:44">&amp;</operator><name pos:start="67:45" pos:end="67:68"><name pos:start="67:45" pos:end="67:48">venc</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:55">floor</name><index pos:start="67:56" pos:end="67:68">[<expr pos:start="67:57" pos:end="67:67"><name pos:start="67:57" pos:end="67:57">i</name> <operator pos:start="67:59" pos:end="67:59">*</operator> <name pos:start="67:61" pos:end="67:67">samples</name></expr>]</index></name></expr></argument>, <argument pos:start="67:71" pos:end="67:77"><expr pos:start="67:71" pos:end="67:77"><name pos:start="67:71" pos:end="67:77">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="73:5" pos:end="75:42">for <control pos:start="73:9" pos:end="73:50">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:44"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:34"><name pos:start="73:21" pos:end="73:24">venc</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:34">channels</name></name> <operator pos:start="73:36" pos:end="73:36">*</operator> <name pos:start="73:38" pos:end="73:44">samples</name></expr>;</condition> <incr pos:start="73:47" pos:end="73:49"><expr pos:start="73:47" pos:end="73:49"><name pos:start="73:47" pos:end="73:47">i</name><operator pos:start="73:48" pos:end="73:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:9" pos:end="75:42"><block_content pos:start="75:9" pos:end="75:42">

        <expr_stmt pos:start="75:9" pos:end="75:42"><expr pos:start="75:9" pos:end="75:41"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:12">venc</name><operator pos:start="75:13" pos:end="75:14">-&gt;</operator><name pos:start="75:15" pos:end="75:20">coeffs</name><index pos:start="75:21" pos:end="75:23">[<expr pos:start="75:22" pos:end="75:22"><name pos:start="75:22" pos:end="75:22">i</name></expr>]</index></name> <operator pos:start="75:25" pos:end="75:26">/=</operator> <name pos:start="75:28" pos:end="75:41"><name pos:start="75:28" pos:end="75:31">venc</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:38">floor</name><index pos:start="75:39" pos:end="75:41">[<expr pos:start="75:40" pos:end="75:40"><name pos:start="75:40" pos:end="75:40">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="79:5" pos:end="103:5">for <control pos:start="79:9" pos:end="79:49">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">i</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:44"><expr pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:43"><name pos:start="79:21" pos:end="79:27">mapping</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:43">coupling_steps</name></name></expr>;</condition> <incr pos:start="79:46" pos:end="79:48"><expr pos:start="79:46" pos:end="79:48"><name pos:start="79:46" pos:end="79:46">i</name><operator pos:start="79:47" pos:end="79:48">++</operator></expr></incr>)</control> <block pos:start="79:51" pos:end="103:5">{<block_content pos:start="81:9" pos:end="101:9">

        <decl_stmt pos:start="81:9" pos:end="81:68"><decl pos:start="81:9" pos:end="81:67"><type pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:13">float</name> <modifier pos:start="81:15" pos:end="81:15">*</modifier></type><name pos:start="81:16" pos:end="81:18">mag</name> <init pos:start="81:20" pos:end="81:67">= <expr pos:start="81:22" pos:end="81:67"><name pos:start="81:22" pos:end="81:33"><name pos:start="81:22" pos:end="81:25">venc</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:33">coeffs</name></name> <operator pos:start="81:35" pos:end="81:35">+</operator> <name pos:start="81:37" pos:end="81:57"><name pos:start="81:37" pos:end="81:43">mapping</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:54">magnitude</name><index pos:start="81:55" pos:end="81:57">[<expr pos:start="81:56" pos:end="81:56"><name pos:start="81:56" pos:end="81:56">i</name></expr>]</index></name> <operator pos:start="81:59" pos:end="81:59">*</operator> <name pos:start="81:61" pos:end="81:67">samples</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="83:68"><decl pos:start="83:9" pos:end="83:67"><type pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:13">float</name> <modifier pos:start="83:15" pos:end="83:15">*</modifier></type><name pos:start="83:16" pos:end="83:18">ang</name> <init pos:start="83:20" pos:end="83:67">= <expr pos:start="83:22" pos:end="83:67"><name pos:start="83:22" pos:end="83:33"><name pos:start="83:22" pos:end="83:25">venc</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:33">coeffs</name></name> <operator pos:start="83:35" pos:end="83:35">+</operator> <name pos:start="83:37" pos:end="83:53"><name pos:start="83:37" pos:end="83:43">mapping</name><operator pos:start="83:44" pos:end="83:45">-&gt;</operator><name pos:start="83:46" pos:end="83:50">angle</name><index pos:start="83:51" pos:end="83:53">[<expr pos:start="83:52" pos:end="83:52"><name pos:start="83:52" pos:end="83:52">i</name></expr>]</index></name>     <operator pos:start="83:59" pos:end="83:59">*</operator> <name pos:start="83:61" pos:end="83:67">samples</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:14"><decl pos:start="85:9" pos:end="85:13"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:13">j</name></decl>;</decl_stmt>

        <for pos:start="87:9" pos:end="101:9">for <control pos:start="87:13" pos:end="87:37">(<init pos:start="87:14" pos:end="87:19"><expr pos:start="87:14" pos:end="87:18"><name pos:start="87:14" pos:end="87:14">j</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>;</init> <condition pos:start="87:21" pos:end="87:32"><expr pos:start="87:21" pos:end="87:31"><name pos:start="87:21" pos:end="87:21">j</name> <operator pos:start="87:23" pos:end="87:23">&lt;</operator> <name pos:start="87:25" pos:end="87:31">samples</name></expr>;</condition> <incr pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><name pos:start="87:34" pos:end="87:34">j</name><operator pos:start="87:35" pos:end="87:36">++</operator></expr></incr>)</control> <block pos:start="87:39" pos:end="101:9">{<block_content pos:start="89:13" pos:end="99:27">

            <decl_stmt pos:start="89:13" pos:end="89:29"><decl pos:start="89:13" pos:end="89:28"><type pos:start="89:13" pos:end="89:17"><name pos:start="89:13" pos:end="89:17">float</name></type> <name pos:start="89:19" pos:end="89:19">a</name> <init pos:start="89:21" pos:end="89:28">= <expr pos:start="89:23" pos:end="89:28"><name pos:start="89:23" pos:end="89:28"><name pos:start="89:23" pos:end="89:25">ang</name><index pos:start="89:26" pos:end="89:28">[<expr pos:start="89:27" pos:end="89:27"><name pos:start="89:27" pos:end="89:27">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:29"><expr pos:start="91:13" pos:end="91:28"><name pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:15">ang</name><index pos:start="91:16" pos:end="91:18">[<expr pos:start="91:17" pos:end="91:17"><name pos:start="91:17" pos:end="91:17">j</name></expr>]</index></name> <operator pos:start="91:20" pos:end="91:21">-=</operator> <name pos:start="91:23" pos:end="91:28"><name pos:start="91:23" pos:end="91:25">mag</name><index pos:start="91:26" pos:end="91:28">[<expr pos:start="91:27" pos:end="91:27"><name pos:start="91:27" pos:end="91:27">j</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:33"><if pos:start="93:13" pos:end="95:33">if <condition pos:start="93:16" pos:end="93:27">(<expr pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:22"><name pos:start="93:17" pos:end="93:19">mag</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">j</name></expr>]</index></name> <operator pos:start="93:24" pos:end="93:24">&gt;</operator> <literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:33"><block_content pos:start="95:17" pos:end="95:33">

                <expr_stmt pos:start="95:17" pos:end="95:33"><expr pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:19">ang</name><index pos:start="95:20" pos:end="95:22">[<expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">j</name></expr>]</index></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <operator pos:start="95:26" pos:end="95:26">-</operator><name pos:start="95:27" pos:end="95:32"><name pos:start="95:27" pos:end="95:29">ang</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><name pos:start="95:31" pos:end="95:31">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="97:13" pos:end="99:27"><if pos:start="97:13" pos:end="99:27">if <condition pos:start="97:16" pos:end="97:27">(<expr pos:start="97:17" pos:end="97:26"><name pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:19">ang</name><index pos:start="97:20" pos:end="97:22">[<expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">j</name></expr>]</index></name> <operator pos:start="97:24" pos:end="97:24">&lt;</operator> <literal type="number" pos:start="97:26" pos:end="97:26">0</literal></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:27"><block_content pos:start="99:17" pos:end="99:27">

                <expr_stmt pos:start="99:17" pos:end="99:27"><expr pos:start="99:17" pos:end="99:26"><name pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:19">mag</name><index pos:start="99:20" pos:end="99:22">[<expr pos:start="99:21" pos:end="99:21"><name pos:start="99:21" pos:end="99:21">j</name></expr>]</index></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <name pos:start="99:26" pos:end="99:26">a</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="107:5" pos:end="109:63"><expr pos:start="107:5" pos:end="109:62"><call pos:start="107:5" pos:end="109:62"><name pos:start="107:5" pos:end="107:18">residue_encode</name><argument_list pos:start="107:19" pos:end="109:62">(<argument pos:start="107:20" pos:end="107:23"><expr pos:start="107:20" pos:end="107:23"><name pos:start="107:20" pos:end="107:23">venc</name></expr></argument>, <argument pos:start="107:26" pos:end="107:75"><expr pos:start="107:26" pos:end="107:75"><operator pos:start="107:26" pos:end="107:26">&amp;</operator><name pos:start="107:27" pos:end="107:75"><name pos:start="107:27" pos:end="107:30">venc</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:40">residues</name><index pos:start="107:41" pos:end="107:75">[<expr pos:start="107:42" pos:end="107:74"><name pos:start="107:42" pos:end="107:74"><name pos:start="107:42" pos:end="107:48">mapping</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:57">residue</name><index pos:start="107:58" pos:end="107:74">[<expr pos:start="107:59" pos:end="107:73"><name pos:start="107:59" pos:end="107:73"><name pos:start="107:59" pos:end="107:65">mapping</name><operator pos:start="107:66" pos:end="107:67">-&gt;</operator><name pos:start="107:68" pos:end="107:70">mux</name><index pos:start="107:71" pos:end="107:73">[<expr pos:start="107:72" pos:end="107:72"><literal type="number" pos:start="107:72" pos:end="107:72">0</literal></expr>]</index></name></expr>]</index></name></expr>]</index></name></expr></argument>,

                   <argument pos:start="109:20" pos:end="109:22"><expr pos:start="109:20" pos:end="109:22"><operator pos:start="109:20" pos:end="109:20">&amp;</operator><name pos:start="109:21" pos:end="109:22">pb</name></expr></argument>, <argument pos:start="109:25" pos:end="109:36"><expr pos:start="109:25" pos:end="109:36"><name pos:start="109:25" pos:end="109:36"><name pos:start="109:25" pos:end="109:28">venc</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:36">coeffs</name></name></expr></argument>, <argument pos:start="109:39" pos:end="109:45"><expr pos:start="109:39" pos:end="109:45"><name pos:start="109:39" pos:end="109:45">samples</name></expr></argument>, <argument pos:start="109:48" pos:end="109:61"><expr pos:start="109:48" pos:end="109:61"><name pos:start="109:48" pos:end="109:61"><name pos:start="109:48" pos:end="109:51">venc</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:61">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:54"><expr pos:start="113:5" pos:end="113:53"><name pos:start="113:5" pos:end="113:32"><name pos:start="113:5" pos:end="113:14">avccontext</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:27">coded_frame</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:32">pts</name></name> <operator pos:start="113:34" pos:end="113:34">=</operator> <name pos:start="113:36" pos:end="113:53"><name pos:start="113:36" pos:end="113:39">venc</name><operator pos:start="113:40" pos:end="113:41">-&gt;</operator><name pos:start="113:42" pos:end="113:53">sample_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:49"><expr pos:start="115:5" pos:end="115:48"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:8">venc</name><operator pos:start="115:9" pos:end="115:10">-&gt;</operator><name pos:start="115:11" pos:end="115:22">sample_count</name></name> <operator pos:start="115:24" pos:end="115:25">+=</operator> <name pos:start="115:27" pos:end="115:48"><name pos:start="115:27" pos:end="115:36">avccontext</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:48">frame_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:24"><expr pos:start="117:5" pos:end="117:23"><call pos:start="117:5" pos:end="117:23"><name pos:start="117:5" pos:end="117:18">flush_put_bits</name><argument_list pos:start="117:19" pos:end="117:23">(<argument pos:start="117:20" pos:end="117:22"><expr pos:start="117:20" pos:end="117:22"><operator pos:start="117:20" pos:end="117:20">&amp;</operator><name pos:start="117:21" pos:end="117:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:36">return <expr pos:start="119:12" pos:end="119:35"><call pos:start="119:12" pos:end="119:30"><name pos:start="119:12" pos:end="119:25">put_bits_count</name><argument_list pos:start="119:26" pos:end="119:30">(<argument pos:start="119:27" pos:end="119:29"><expr pos:start="119:27" pos:end="119:29"><operator pos:start="119:27" pos:end="119:27">&amp;</operator><name pos:start="119:28" pos:end="119:29">pb</name></expr></argument>)</argument_list></call> <operator pos:start="119:32" pos:end="119:33">&gt;&gt;</operator> <literal type="number" pos:start="119:35" pos:end="119:35">3</literal></expr>;</return>

</block_content>}</block></function>
</unit>
