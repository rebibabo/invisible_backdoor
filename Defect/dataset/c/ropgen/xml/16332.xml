<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16332.c" pos:tabs="8"><function pos:start="1:1" pos:end="537:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">img_compare</name><parameter_list pos:start="1:23" pos:end="1:45">(<parameter pos:start="1:24" pos:end="1:31"><decl pos:start="1:24" pos:end="1:31"><type pos:start="1:24" pos:end="1:31"><name pos:start="1:24" pos:end="1:26">int</name></type> <name pos:start="1:28" pos:end="1:31">argc</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier><modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="537:1">{<block_content pos:start="5:5" pos:end="535:15">

    <decl_stmt pos:start="5:5" pos:end="5:74"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">fmt1</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>, <decl pos:start="5:30" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:34">fmt2</name> <init pos:start="5:36" pos:end="5:41">= <expr pos:start="5:38" pos:end="5:41"><name pos:start="5:38" pos:end="5:41">NULL</name></expr></init></decl>, <decl pos:start="5:44" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:49">cache</name></decl>, <decl pos:start="5:52" pos:end="5:61"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:61">filename1</name></decl>, <decl pos:start="5:64" pos:end="5:73"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:73">filename2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">BlockBackend</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">blk1</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:18"><modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">blk2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">bs1</name></decl>, <decl pos:start="9:28" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:22"><modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:31">bs2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:26">total_sectors1</name></decl>, <decl pos:start="11:29" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:29" pos:end="11:42">total_sectors2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">buf1</name> <init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">NULL</name></expr></init></decl>, <decl pos:start="13:27" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:27" pos:end="13:27">*</modifier></type><name pos:start="13:28" pos:end="13:31">buf2</name> <init pos:start="13:33" pos:end="13:38">= <expr pos:start="13:35" pos:end="13:38"><name pos:start="13:35" pos:end="13:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">pnum1</name></decl>, <decl pos:start="15:16" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:20">pnum2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">allocated1</name></decl>, <decl pos:start="17:21" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:21" pos:end="17:30">allocated2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name> <init pos:start="19:13" pos:end="19:15">= <expr pos:start="19:15" pos:end="19:15"><literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="19:18" pos:end="19:68">/* return value - 0 Ident, 1 Different, &gt;1 Error */</comment>

    <decl_stmt pos:start="21:5" pos:end="21:57"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:17">progress</name> <init pos:start="21:19" pos:end="21:25">= <expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">false</name></expr></init></decl>, <decl pos:start="21:28" pos:end="21:40"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:28" pos:end="21:32">quiet</name> <init pos:start="21:34" pos:end="21:40">= <expr pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:40">false</name></expr></init></decl>, <decl pos:start="21:43" pos:end="21:56"><type ref="prev" pos:start="21:5" pos:end="21:8"/><name pos:start="21:43" pos:end="21:48">strict</name> <init pos:start="21:50" pos:end="21:56">= <expr pos:start="21:52" pos:end="21:56"><name pos:start="21:52" pos:end="21:56">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:25"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int64_t</name></type> <name pos:start="25:13" pos:end="25:25">total_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:27"><decl pos:start="27:5" pos:end="27:26"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:22">sector_num</name> <init pos:start="27:24" pos:end="27:26">= <expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:22">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:16"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">c</name></decl>, <decl pos:start="31:12" pos:end="31:15"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:12" pos:end="31:15">pnum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:27"><decl pos:start="33:5" pos:end="33:26"><type pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:12">uint64_t</name></type> <name pos:start="33:14" pos:end="33:26">progress_base</name></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:9">cache</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:30">BDRV_DEFAULT_CACHE</name></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="97:5">for <control pos:start="39:9" pos:end="39:12">(<init pos:start="39:10" pos:end="39:10">;</init><condition pos:start="39:11" pos:end="39:11">;</condition><incr/>)</control> <block pos:start="39:14" pos:end="97:5">{<block_content pos:start="41:9" pos:end="95:9">

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:9">c</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:44"><name pos:start="41:13" pos:end="41:18">getopt</name><argument_list pos:start="41:19" pos:end="41:44">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">argc</name></expr></argument>, <argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">argv</name></expr></argument>, <argument pos:start="41:32" pos:end="41:43"><expr pos:start="41:32" pos:end="41:43"><literal type="string" pos:start="41:32" pos:end="41:43">"hf:F:T:pqs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:20">(<expr pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:13">c</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <operator pos:start="43:18" pos:end="43:18">-</operator><literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr>)</condition> <block pos:start="43:22" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:18">

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <switch pos:start="49:9" pos:end="95:9">switch <condition pos:start="49:16" pos:end="49:18">(<expr pos:start="49:17" pos:end="49:17"><name pos:start="49:17" pos:end="49:17">c</name></expr>)</condition> <block pos:start="49:20" pos:end="95:9">{<block_content pos:start="51:9" pos:end="93:18">

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="char" pos:start="51:14" pos:end="51:16">'?'</literal></expr>:</case>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="char" pos:start="53:14" pos:end="53:16">'h'</literal></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:19"><expr pos:start="55:13" pos:end="55:18"><call pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:16">help</name><argument_list pos:start="55:17" pos:end="55:18">()</argument_list></call></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'f'</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:16">fmt1</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:25">optarg</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:17">case <expr pos:start="65:14" pos:end="65:16"><literal type="char" pos:start="65:14" pos:end="65:16">'F'</literal></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:16">fmt2</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <name pos:start="67:20" pos:end="67:25">optarg</name></expr>;</expr_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        <case pos:start="71:9" pos:end="71:17">case <expr pos:start="71:14" pos:end="71:16"><literal type="char" pos:start="71:14" pos:end="71:16">'T'</literal></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:17">cache</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:26">optarg</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:17">case <expr pos:start="77:14" pos:end="77:16"><literal type="char" pos:start="77:14" pos:end="77:16">'p'</literal></expr>:</case>

            <expr_stmt pos:start="79:13" pos:end="79:28"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:20">progress</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:27">true</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        <case pos:start="83:9" pos:end="83:17">case <expr pos:start="83:14" pos:end="83:16"><literal type="char" pos:start="83:14" pos:end="83:16">'q'</literal></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:25"><expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:17">quiet</name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:24">true</name></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        <case pos:start="89:9" pos:end="89:17">case <expr pos:start="89:14" pos:end="89:16"><literal type="char" pos:start="89:14" pos:end="89:16">'s'</literal></expr>:</case>

            <expr_stmt pos:start="91:13" pos:end="91:26"><expr pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:18">strict</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:25">true</name></expr>;</expr_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <comment type="block" pos:start="101:5" pos:end="101:45">/* Progress is not shown in Quiet mode */</comment>

    <if_stmt pos:start="103:5" pos:end="107:5"><if pos:start="103:5" pos:end="107:5">if <condition pos:start="103:8" pos:end="103:14">(<expr pos:start="103:9" pos:end="103:13"><name pos:start="103:9" pos:end="103:13">quiet</name></expr>)</condition> <block pos:start="103:16" pos:end="107:5">{<block_content pos:start="105:9" pos:end="105:25">

        <expr_stmt pos:start="105:9" pos:end="105:25"><expr pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:16">progress</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <name pos:start="105:20" pos:end="105:24">false</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:27">(<expr pos:start="113:9" pos:end="113:26"><name pos:start="113:9" pos:end="113:14">optind</name> <operator pos:start="113:16" pos:end="113:17">!=</operator> <name pos:start="113:19" pos:end="113:22">argc</name> <operator pos:start="113:24" pos:end="113:24">-</operator> <literal type="number" pos:start="113:26" pos:end="113:26">2</literal></expr>)</condition> <block pos:start="113:29" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:53">

        <expr_stmt pos:start="115:9" pos:end="115:53"><expr pos:start="115:9" pos:end="115:52"><call pos:start="115:9" pos:end="115:52"><name pos:start="115:9" pos:end="115:18">error_exit</name><argument_list pos:start="115:19" pos:end="115:52">(<argument pos:start="115:20" pos:end="115:51"><expr pos:start="115:20" pos:end="115:51"><literal type="string" pos:start="115:20" pos:end="115:51">"Expecting two image file names"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:31"><expr pos:start="119:5" pos:end="119:30"><name pos:start="119:5" pos:end="119:13">filename1</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <name pos:start="119:17" pos:end="119:30"><name pos:start="119:17" pos:end="119:20">argv</name><index pos:start="119:21" pos:end="119:30">[<expr pos:start="119:22" pos:end="119:29"><name pos:start="119:22" pos:end="119:27">optind</name><operator pos:start="119:28" pos:end="119:29">++</operator></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:31"><expr pos:start="121:5" pos:end="121:30"><name pos:start="121:5" pos:end="121:13">filename2</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:20">argv</name><index pos:start="121:21" pos:end="121:30">[<expr pos:start="121:22" pos:end="121:29"><name pos:start="121:22" pos:end="121:27">optind</name><operator pos:start="121:28" pos:end="121:29">++</operator></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:36">/* Initialize before goto out */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:38"><expr pos:start="127:5" pos:end="127:37"><call pos:start="127:5" pos:end="127:37"><name pos:start="127:5" pos:end="127:22">qemu_progress_init</name><argument_list pos:start="127:23" pos:end="127:37">(<argument pos:start="127:24" pos:end="127:31"><expr pos:start="127:24" pos:end="127:31"><name pos:start="127:24" pos:end="127:31">progress</name></expr></argument>, <argument pos:start="127:34" pos:end="127:36"><expr pos:start="127:34" pos:end="127:36"><literal type="number" pos:start="127:34" pos:end="127:36">2.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:25"><expr pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:9">flags</name> <operator pos:start="131:11" pos:end="131:11">=</operator> <name pos:start="131:13" pos:end="131:24">BDRV_O_FLAGS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:48"><expr pos:start="133:5" pos:end="133:47"><name pos:start="133:5" pos:end="133:7">ret</name> <operator pos:start="133:9" pos:end="133:9">=</operator> <call pos:start="133:11" pos:end="133:47"><name pos:start="133:11" pos:end="133:32">bdrv_parse_cache_flags</name><argument_list pos:start="133:33" pos:end="133:47">(<argument pos:start="133:34" pos:end="133:38"><expr pos:start="133:34" pos:end="133:38"><name pos:start="133:34" pos:end="133:38">cache</name></expr></argument>, <argument pos:start="133:41" pos:end="133:46"><expr pos:start="133:41" pos:end="133:46"><operator pos:start="133:41" pos:end="133:41">&amp;</operator><name pos:start="133:42" pos:end="133:46">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="135:16">(<expr pos:start="135:9" pos:end="135:15"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">&lt;</operator> <literal type="number" pos:start="135:15" pos:end="135:15">0</literal></expr>)</condition> <block pos:start="135:18" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:18">

        <expr_stmt pos:start="137:9" pos:end="137:63"><expr pos:start="137:9" pos:end="137:62"><call pos:start="137:9" pos:end="137:62"><name pos:start="137:9" pos:end="137:20">error_report</name><argument_list pos:start="137:21" pos:end="137:62">(<argument pos:start="137:22" pos:end="137:54"><expr pos:start="137:22" pos:end="137:54"><literal type="string" pos:start="137:22" pos:end="137:54">"Invalid source cache option: %s"</literal></expr></argument>, <argument pos:start="137:57" pos:end="137:61"><expr pos:start="137:57" pos:end="137:61"><name pos:start="137:57" pos:end="137:61">cache</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:16"><expr pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:11">ret</name> <operator pos:start="139:13" pos:end="139:13">=</operator> <literal type="number" pos:start="139:15" pos:end="139:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="141:9" pos:end="141:18">goto <name pos:start="141:14" pos:end="141:17">out3</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:68"><expr pos:start="147:5" pos:end="147:67"><name pos:start="147:5" pos:end="147:8">blk1</name> <operator pos:start="147:10" pos:end="147:10">=</operator> <call pos:start="147:12" pos:end="147:67"><name pos:start="147:12" pos:end="147:19">img_open</name><argument_list pos:start="147:20" pos:end="147:67">(<argument pos:start="147:21" pos:end="147:29"><expr pos:start="147:21" pos:end="147:29"><literal type="string" pos:start="147:21" pos:end="147:29">"image_1"</literal></expr></argument>, <argument pos:start="147:32" pos:end="147:40"><expr pos:start="147:32" pos:end="147:40"><name pos:start="147:32" pos:end="147:40">filename1</name></expr></argument>, <argument pos:start="147:43" pos:end="147:46"><expr pos:start="147:43" pos:end="147:46"><name pos:start="147:43" pos:end="147:46">fmt1</name></expr></argument>, <argument pos:start="147:49" pos:end="147:53"><expr pos:start="147:49" pos:end="147:53"><name pos:start="147:49" pos:end="147:53">flags</name></expr></argument>, <argument pos:start="147:56" pos:end="147:59"><expr pos:start="147:56" pos:end="147:59"><name pos:start="147:56" pos:end="147:59">true</name></expr></argument>, <argument pos:start="147:62" pos:end="147:66"><expr pos:start="147:62" pos:end="147:66"><name pos:start="147:62" pos:end="147:66">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:14">(<expr pos:start="149:9" pos:end="149:13"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:13">blk1</name></expr>)</condition> <block pos:start="149:16" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:18">

        <expr_stmt pos:start="151:9" pos:end="151:16"><expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:11">ret</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <literal type="number" pos:start="151:15" pos:end="151:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:18">goto <name pos:start="153:14" pos:end="153:17">out3</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:23"><expr pos:start="157:5" pos:end="157:22"><name pos:start="157:5" pos:end="157:7">bs1</name> <operator pos:start="157:9" pos:end="157:9">=</operator> <call pos:start="157:11" pos:end="157:22"><name pos:start="157:11" pos:end="157:16">blk_bs</name><argument_list pos:start="157:17" pos:end="157:22">(<argument pos:start="157:18" pos:end="157:21"><expr pos:start="157:18" pos:end="157:21"><name pos:start="157:18" pos:end="157:21">blk1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:68"><expr pos:start="161:5" pos:end="161:67"><name pos:start="161:5" pos:end="161:8">blk2</name> <operator pos:start="161:10" pos:end="161:10">=</operator> <call pos:start="161:12" pos:end="161:67"><name pos:start="161:12" pos:end="161:19">img_open</name><argument_list pos:start="161:20" pos:end="161:67">(<argument pos:start="161:21" pos:end="161:29"><expr pos:start="161:21" pos:end="161:29"><literal type="string" pos:start="161:21" pos:end="161:29">"image_2"</literal></expr></argument>, <argument pos:start="161:32" pos:end="161:40"><expr pos:start="161:32" pos:end="161:40"><name pos:start="161:32" pos:end="161:40">filename2</name></expr></argument>, <argument pos:start="161:43" pos:end="161:46"><expr pos:start="161:43" pos:end="161:46"><name pos:start="161:43" pos:end="161:46">fmt2</name></expr></argument>, <argument pos:start="161:49" pos:end="161:53"><expr pos:start="161:49" pos:end="161:53"><name pos:start="161:49" pos:end="161:53">flags</name></expr></argument>, <argument pos:start="161:56" pos:end="161:59"><expr pos:start="161:56" pos:end="161:59"><name pos:start="161:56" pos:end="161:59">true</name></expr></argument>, <argument pos:start="161:62" pos:end="161:66"><expr pos:start="161:62" pos:end="161:66"><name pos:start="161:62" pos:end="161:66">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="169:5"><if pos:start="163:5" pos:end="169:5">if <condition pos:start="163:8" pos:end="163:14">(<expr pos:start="163:9" pos:end="163:13"><operator pos:start="163:9" pos:end="163:9">!</operator><name pos:start="163:10" pos:end="163:13">blk2</name></expr>)</condition> <block pos:start="163:16" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:18">

        <expr_stmt pos:start="165:9" pos:end="165:16"><expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <literal type="number" pos:start="165:15" pos:end="165:15">2</literal></expr>;</expr_stmt>

        <goto pos:start="167:9" pos:end="167:18">goto <name pos:start="167:14" pos:end="167:17">out2</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:23"><expr pos:start="171:5" pos:end="171:22"><name pos:start="171:5" pos:end="171:7">bs2</name> <operator pos:start="171:9" pos:end="171:9">=</operator> <call pos:start="171:11" pos:end="171:22"><name pos:start="171:11" pos:end="171:16">blk_bs</name><argument_list pos:start="171:17" pos:end="171:22">(<argument pos:start="171:18" pos:end="171:21"><expr pos:start="171:18" pos:end="171:21"><name pos:start="171:18" pos:end="171:21">blk2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:45"><expr pos:start="175:5" pos:end="175:44"><name pos:start="175:5" pos:end="175:8">buf1</name> <operator pos:start="175:10" pos:end="175:10">=</operator> <call pos:start="175:12" pos:end="175:44"><name pos:start="175:12" pos:end="175:25">blk_blockalign</name><argument_list pos:start="175:26" pos:end="175:44">(<argument pos:start="175:27" pos:end="175:30"><expr pos:start="175:27" pos:end="175:30"><name pos:start="175:27" pos:end="175:30">blk1</name></expr></argument>, <argument pos:start="175:33" pos:end="175:43"><expr pos:start="175:33" pos:end="175:43"><name pos:start="175:33" pos:end="175:43">IO_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:45"><expr pos:start="177:5" pos:end="177:44"><name pos:start="177:5" pos:end="177:8">buf2</name> <operator pos:start="177:10" pos:end="177:10">=</operator> <call pos:start="177:12" pos:end="177:44"><name pos:start="177:12" pos:end="177:25">blk_blockalign</name><argument_list pos:start="177:26" pos:end="177:44">(<argument pos:start="177:27" pos:end="177:30"><expr pos:start="177:27" pos:end="177:30"><name pos:start="177:27" pos:end="177:30">blk2</name></expr></argument>, <argument pos:start="177:33" pos:end="177:43"><expr pos:start="177:33" pos:end="177:43"><name pos:start="177:33" pos:end="177:43">IO_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:42"><expr pos:start="179:5" pos:end="179:41"><name pos:start="179:5" pos:end="179:18">total_sectors1</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <call pos:start="179:22" pos:end="179:41"><name pos:start="179:22" pos:end="179:35">blk_nb_sectors</name><argument_list pos:start="179:36" pos:end="179:41">(<argument pos:start="179:37" pos:end="179:40"><expr pos:start="179:37" pos:end="179:40"><name pos:start="179:37" pos:end="179:40">blk1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="191:5"><if pos:start="181:5" pos:end="191:5">if <condition pos:start="181:8" pos:end="181:27">(<expr pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:22">total_sectors1</name> <operator pos:start="181:24" pos:end="181:24">&lt;</operator> <literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>)</condition> <block pos:start="181:29" pos:end="191:5">{<block_content pos:start="183:9" pos:end="189:17">

        <expr_stmt pos:start="183:9" pos:end="185:59"><expr pos:start="183:9" pos:end="185:58"><call pos:start="183:9" pos:end="185:58"><name pos:start="183:9" pos:end="183:20">error_report</name><argument_list pos:start="183:21" pos:end="185:58">(<argument pos:start="183:22" pos:end="183:47"><expr pos:start="183:22" pos:end="183:47"><literal type="string" pos:start="183:22" pos:end="183:47">"Can't get size of %s: %s"</literal></expr></argument>,

                     <argument pos:start="185:22" pos:end="185:30"><expr pos:start="185:22" pos:end="185:30"><name pos:start="185:22" pos:end="185:30">filename1</name></expr></argument>, <argument pos:start="185:33" pos:end="185:57"><expr pos:start="185:33" pos:end="185:57"><call pos:start="185:33" pos:end="185:57"><name pos:start="185:33" pos:end="185:40">strerror</name><argument_list pos:start="185:41" pos:end="185:57">(<argument pos:start="185:42" pos:end="185:56"><expr pos:start="185:42" pos:end="185:56"><operator pos:start="185:42" pos:end="185:42">-</operator><name pos:start="185:43" pos:end="185:56">total_sectors1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:16"><expr pos:start="187:9" pos:end="187:15"><name pos:start="187:9" pos:end="187:11">ret</name> <operator pos:start="187:13" pos:end="187:13">=</operator> <literal type="number" pos:start="187:15" pos:end="187:15">4</literal></expr>;</expr_stmt>

        <goto pos:start="189:9" pos:end="189:17">goto <name pos:start="189:14" pos:end="189:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:42"><expr pos:start="193:5" pos:end="193:41"><name pos:start="193:5" pos:end="193:18">total_sectors2</name> <operator pos:start="193:20" pos:end="193:20">=</operator> <call pos:start="193:22" pos:end="193:41"><name pos:start="193:22" pos:end="193:35">blk_nb_sectors</name><argument_list pos:start="193:36" pos:end="193:41">(<argument pos:start="193:37" pos:end="193:40"><expr pos:start="193:37" pos:end="193:40"><name pos:start="193:37" pos:end="193:40">blk2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="205:5"><if pos:start="195:5" pos:end="205:5">if <condition pos:start="195:8" pos:end="195:27">(<expr pos:start="195:9" pos:end="195:26"><name pos:start="195:9" pos:end="195:22">total_sectors2</name> <operator pos:start="195:24" pos:end="195:24">&lt;</operator> <literal type="number" pos:start="195:26" pos:end="195:26">0</literal></expr>)</condition> <block pos:start="195:29" pos:end="205:5">{<block_content pos:start="197:9" pos:end="203:17">

        <expr_stmt pos:start="197:9" pos:end="199:59"><expr pos:start="197:9" pos:end="199:58"><call pos:start="197:9" pos:end="199:58"><name pos:start="197:9" pos:end="197:20">error_report</name><argument_list pos:start="197:21" pos:end="199:58">(<argument pos:start="197:22" pos:end="197:47"><expr pos:start="197:22" pos:end="197:47"><literal type="string" pos:start="197:22" pos:end="197:47">"Can't get size of %s: %s"</literal></expr></argument>,

                     <argument pos:start="199:22" pos:end="199:30"><expr pos:start="199:22" pos:end="199:30"><name pos:start="199:22" pos:end="199:30">filename2</name></expr></argument>, <argument pos:start="199:33" pos:end="199:57"><expr pos:start="199:33" pos:end="199:57"><call pos:start="199:33" pos:end="199:57"><name pos:start="199:33" pos:end="199:40">strerror</name><argument_list pos:start="199:41" pos:end="199:57">(<argument pos:start="199:42" pos:end="199:56"><expr pos:start="199:42" pos:end="199:56"><operator pos:start="199:42" pos:end="199:42">-</operator><name pos:start="199:43" pos:end="199:56">total_sectors2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:16"><expr pos:start="201:9" pos:end="201:15"><name pos:start="201:9" pos:end="201:11">ret</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <literal type="number" pos:start="201:15" pos:end="201:15">4</literal></expr>;</expr_stmt>

        <goto pos:start="203:9" pos:end="203:17">goto <name pos:start="203:14" pos:end="203:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:56"><expr pos:start="207:5" pos:end="207:55"><name pos:start="207:5" pos:end="207:17">total_sectors</name> <operator pos:start="207:19" pos:end="207:19">=</operator> <call pos:start="207:21" pos:end="207:55"><name pos:start="207:21" pos:end="207:23">MIN</name><argument_list pos:start="207:24" pos:end="207:55">(<argument pos:start="207:25" pos:end="207:38"><expr pos:start="207:25" pos:end="207:38"><name pos:start="207:25" pos:end="207:38">total_sectors1</name></expr></argument>, <argument pos:start="207:41" pos:end="207:54"><expr pos:start="207:41" pos:end="207:54"><name pos:start="207:41" pos:end="207:54">total_sectors2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:56"><expr pos:start="209:5" pos:end="209:55"><name pos:start="209:5" pos:end="209:17">progress_base</name> <operator pos:start="209:19" pos:end="209:19">=</operator> <call pos:start="209:21" pos:end="209:55"><name pos:start="209:21" pos:end="209:23">MAX</name><argument_list pos:start="209:24" pos:end="209:55">(<argument pos:start="209:25" pos:end="209:38"><expr pos:start="209:25" pos:end="209:38"><name pos:start="209:25" pos:end="209:38">total_sectors1</name></expr></argument>, <argument pos:start="209:41" pos:end="209:54"><expr pos:start="209:41" pos:end="209:54"><name pos:start="209:41" pos:end="209:54">total_sectors2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="213:5" pos:end="213:32"><expr pos:start="213:5" pos:end="213:31"><call pos:start="213:5" pos:end="213:31"><name pos:start="213:5" pos:end="213:23">qemu_progress_print</name><argument_list pos:start="213:24" pos:end="213:31">(<argument pos:start="213:25" pos:end="213:25"><expr pos:start="213:25" pos:end="213:25"><literal type="number" pos:start="213:25" pos:end="213:25">0</literal></expr></argument>, <argument pos:start="213:28" pos:end="213:30"><expr pos:start="213:28" pos:end="213:30"><literal type="number" pos:start="213:28" pos:end="213:30">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="217:5" pos:end="225:5"><if pos:start="217:5" pos:end="225:5">if <condition pos:start="217:8" pos:end="217:51">(<expr pos:start="217:9" pos:end="217:50"><name pos:start="217:9" pos:end="217:14">strict</name> <operator pos:start="217:16" pos:end="217:17">&amp;&amp;</operator> <name pos:start="217:19" pos:end="217:32">total_sectors1</name> <operator pos:start="217:34" pos:end="217:35">!=</operator> <name pos:start="217:37" pos:end="217:50">total_sectors2</name></expr>)</condition> <block pos:start="217:53" pos:end="225:5">{<block_content pos:start="219:9" pos:end="223:17">

        <expr_stmt pos:start="219:9" pos:end="219:16"><expr pos:start="219:9" pos:end="219:15"><name pos:start="219:9" pos:end="219:11">ret</name> <operator pos:start="219:13" pos:end="219:13">=</operator> <literal type="number" pos:start="219:15" pos:end="219:15">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:62"><expr pos:start="221:9" pos:end="221:61"><call pos:start="221:9" pos:end="221:61"><name pos:start="221:9" pos:end="221:15">qprintf</name><argument_list pos:start="221:16" pos:end="221:61">(<argument pos:start="221:17" pos:end="221:21"><expr pos:start="221:17" pos:end="221:21"><name pos:start="221:17" pos:end="221:21">quiet</name></expr></argument>, <argument pos:start="221:24" pos:end="221:60"><expr pos:start="221:24" pos:end="221:60"><literal type="string" pos:start="221:24" pos:end="221:60">"Strict mode: Image size mismatch!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="223:9" pos:end="223:17">goto <name pos:start="223:14" pos:end="223:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="229:5" pos:end="411:5">for <control pos:start="229:9" pos:end="229:12">(<init pos:start="229:10" pos:end="229:10">;</init><condition pos:start="229:11" pos:end="229:11">;</condition><incr/>)</control> <block pos:start="229:14" pos:end="411:5">{<block_content pos:start="231:9" pos:end="409:75">

        <decl_stmt pos:start="231:9" pos:end="231:33"><decl pos:start="231:9" pos:end="231:23"><type pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:15">int64_t</name></type> <name pos:start="231:17" pos:end="231:23">status1</name></decl>, <decl pos:start="231:26" pos:end="231:32"><type ref="prev" pos:start="231:9" pos:end="231:15"/><name pos:start="231:26" pos:end="231:32">status2</name></decl>;</decl_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:67"><expr pos:start="233:9" pos:end="233:66"><name pos:start="233:9" pos:end="233:18">nb_sectors</name> <operator pos:start="233:20" pos:end="233:20">=</operator> <call pos:start="233:22" pos:end="233:66"><name pos:start="233:22" pos:end="233:39">sectors_to_process</name><argument_list pos:start="233:40" pos:end="233:66">(<argument pos:start="233:41" pos:end="233:53"><expr pos:start="233:41" pos:end="233:53"><name pos:start="233:41" pos:end="233:53">total_sectors</name></expr></argument>, <argument pos:start="233:56" pos:end="233:65"><expr pos:start="233:56" pos:end="233:65"><name pos:start="233:56" pos:end="233:65">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="239:9"><if pos:start="235:9" pos:end="239:9">if <condition pos:start="235:12" pos:end="235:28">(<expr pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:22">nb_sectors</name> <operator pos:start="235:24" pos:end="235:25">&lt;=</operator> <literal type="number" pos:start="235:27" pos:end="235:27">0</literal></expr>)</condition> <block pos:start="235:30" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:18">

            <break pos:start="237:13" pos:end="237:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="245:54"><expr pos:start="241:9" pos:end="245:53"><name pos:start="241:9" pos:end="241:15">status1</name> <operator pos:start="241:17" pos:end="241:17">=</operator> <call pos:start="241:19" pos:end="245:53"><name pos:start="241:19" pos:end="241:45">bdrv_get_block_status_above</name><argument_list pos:start="241:46" pos:end="245:53">(<argument pos:start="241:47" pos:end="241:49"><expr pos:start="241:47" pos:end="241:49"><name pos:start="241:47" pos:end="241:49">bs1</name></expr></argument>, <argument pos:start="241:52" pos:end="241:55"><expr pos:start="241:52" pos:end="241:55"><name pos:start="241:52" pos:end="241:55">NULL</name></expr></argument>, <argument pos:start="241:58" pos:end="241:67"><expr pos:start="241:58" pos:end="241:67"><name pos:start="241:58" pos:end="241:67">sector_num</name></expr></argument>,

                                              <argument pos:start="243:47" pos:end="243:73"><expr pos:start="243:47" pos:end="243:73"><name pos:start="243:47" pos:end="243:60">total_sectors1</name> <operator pos:start="243:62" pos:end="243:62">-</operator> <name pos:start="243:64" pos:end="243:73">sector_num</name></expr></argument>,

                                              <argument pos:start="245:47" pos:end="245:52"><expr pos:start="245:47" pos:end="245:52"><operator pos:start="245:47" pos:end="245:47">&amp;</operator><name pos:start="245:48" pos:end="245:52">pnum1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="255:9"><if pos:start="247:9" pos:end="255:9">if <condition pos:start="247:12" pos:end="247:24">(<expr pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:19">status1</name> <operator pos:start="247:21" pos:end="247:21">&lt;</operator> <literal type="number" pos:start="247:23" pos:end="247:23">0</literal></expr>)</condition> <block pos:start="247:26" pos:end="255:9">{<block_content pos:start="249:13" pos:end="253:21">

            <expr_stmt pos:start="249:13" pos:end="249:20"><expr pos:start="249:13" pos:end="249:19"><name pos:start="249:13" pos:end="249:15">ret</name> <operator pos:start="249:17" pos:end="249:17">=</operator> <literal type="number" pos:start="249:19" pos:end="249:19">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:76"><expr pos:start="251:13" pos:end="251:75"><call pos:start="251:13" pos:end="251:75"><name pos:start="251:13" pos:end="251:24">error_report</name><argument_list pos:start="251:25" pos:end="251:75">(<argument pos:start="251:26" pos:end="251:63"><expr pos:start="251:26" pos:end="251:63"><literal type="string" pos:start="251:26" pos:end="251:63">"Sector allocation test failed for %s"</literal></expr></argument>, <argument pos:start="251:66" pos:end="251:74"><expr pos:start="251:66" pos:end="251:74"><name pos:start="251:66" pos:end="251:74">filename1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="253:13" pos:end="253:21">goto <name pos:start="253:18" pos:end="253:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:52"><expr pos:start="257:9" pos:end="257:51"><name pos:start="257:9" pos:end="257:18">allocated1</name> <operator pos:start="257:20" pos:end="257:20">=</operator> <name pos:start="257:22" pos:end="257:28">status1</name> <operator pos:start="257:30" pos:end="257:30">&amp;</operator> <name pos:start="257:32" pos:end="257:51">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>



        <expr_stmt pos:start="261:9" pos:end="265:54"><expr pos:start="261:9" pos:end="265:53"><name pos:start="261:9" pos:end="261:15">status2</name> <operator pos:start="261:17" pos:end="261:17">=</operator> <call pos:start="261:19" pos:end="265:53"><name pos:start="261:19" pos:end="261:45">bdrv_get_block_status_above</name><argument_list pos:start="261:46" pos:end="265:53">(<argument pos:start="261:47" pos:end="261:49"><expr pos:start="261:47" pos:end="261:49"><name pos:start="261:47" pos:end="261:49">bs2</name></expr></argument>, <argument pos:start="261:52" pos:end="261:55"><expr pos:start="261:52" pos:end="261:55"><name pos:start="261:52" pos:end="261:55">NULL</name></expr></argument>, <argument pos:start="261:58" pos:end="261:67"><expr pos:start="261:58" pos:end="261:67"><name pos:start="261:58" pos:end="261:67">sector_num</name></expr></argument>,

                                              <argument pos:start="263:47" pos:end="263:73"><expr pos:start="263:47" pos:end="263:73"><name pos:start="263:47" pos:end="263:60">total_sectors2</name> <operator pos:start="263:62" pos:end="263:62">-</operator> <name pos:start="263:64" pos:end="263:73">sector_num</name></expr></argument>,

                                              <argument pos:start="265:47" pos:end="265:52"><expr pos:start="265:47" pos:end="265:52"><operator pos:start="265:47" pos:end="265:47">&amp;</operator><name pos:start="265:48" pos:end="265:52">pnum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="267:9" pos:end="275:9"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="267:24">(<expr pos:start="267:13" pos:end="267:23"><name pos:start="267:13" pos:end="267:19">status2</name> <operator pos:start="267:21" pos:end="267:21">&lt;</operator> <literal type="number" pos:start="267:23" pos:end="267:23">0</literal></expr>)</condition> <block pos:start="267:26" pos:end="275:9">{<block_content pos:start="269:13" pos:end="273:21">

            <expr_stmt pos:start="269:13" pos:end="269:20"><expr pos:start="269:13" pos:end="269:19"><name pos:start="269:13" pos:end="269:15">ret</name> <operator pos:start="269:17" pos:end="269:17">=</operator> <literal type="number" pos:start="269:19" pos:end="269:19">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:76"><expr pos:start="271:13" pos:end="271:75"><call pos:start="271:13" pos:end="271:75"><name pos:start="271:13" pos:end="271:24">error_report</name><argument_list pos:start="271:25" pos:end="271:75">(<argument pos:start="271:26" pos:end="271:63"><expr pos:start="271:26" pos:end="271:63"><literal type="string" pos:start="271:26" pos:end="271:63">"Sector allocation test failed for %s"</literal></expr></argument>, <argument pos:start="271:66" pos:end="271:74"><expr pos:start="271:66" pos:end="271:74"><name pos:start="271:66" pos:end="271:74">filename2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="273:13" pos:end="273:21">goto <name pos:start="273:18" pos:end="273:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:52"><expr pos:start="277:9" pos:end="277:51"><name pos:start="277:9" pos:end="277:18">allocated2</name> <operator pos:start="277:20" pos:end="277:20">=</operator> <name pos:start="277:22" pos:end="277:28">status2</name> <operator pos:start="277:30" pos:end="277:30">&amp;</operator> <name pos:start="277:32" pos:end="277:51">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="283:9"><if pos:start="279:9" pos:end="283:9">if <condition pos:start="279:12" pos:end="279:18">(<expr pos:start="279:13" pos:end="279:17"><name pos:start="279:13" pos:end="279:17">pnum1</name></expr>)</condition> <block pos:start="279:20" pos:end="283:9">{<block_content pos:start="281:13" pos:end="281:48">

            <expr_stmt pos:start="281:13" pos:end="281:48"><expr pos:start="281:13" pos:end="281:47"><name pos:start="281:13" pos:end="281:22">nb_sectors</name> <operator pos:start="281:24" pos:end="281:24">=</operator> <call pos:start="281:26" pos:end="281:47"><name pos:start="281:26" pos:end="281:28">MIN</name><argument_list pos:start="281:29" pos:end="281:47">(<argument pos:start="281:30" pos:end="281:39"><expr pos:start="281:30" pos:end="281:39"><name pos:start="281:30" pos:end="281:39">nb_sectors</name></expr></argument>, <argument pos:start="281:42" pos:end="281:46"><expr pos:start="281:42" pos:end="281:46"><name pos:start="281:42" pos:end="281:46">pnum1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="285:9" pos:end="289:9"><if pos:start="285:9" pos:end="289:9">if <condition pos:start="285:12" pos:end="285:18">(<expr pos:start="285:13" pos:end="285:17"><name pos:start="285:13" pos:end="285:17">pnum2</name></expr>)</condition> <block pos:start="285:20" pos:end="289:9">{<block_content pos:start="287:13" pos:end="287:48">

            <expr_stmt pos:start="287:13" pos:end="287:48"><expr pos:start="287:13" pos:end="287:47"><name pos:start="287:13" pos:end="287:22">nb_sectors</name> <operator pos:start="287:24" pos:end="287:24">=</operator> <call pos:start="287:26" pos:end="287:47"><name pos:start="287:26" pos:end="287:28">MIN</name><argument_list pos:start="287:29" pos:end="287:47">(<argument pos:start="287:30" pos:end="287:39"><expr pos:start="287:30" pos:end="287:39"><name pos:start="287:30" pos:end="287:39">nb_sectors</name></expr></argument>, <argument pos:start="287:42" pos:end="287:46"><expr pos:start="287:42" pos:end="287:46"><name pos:start="287:42" pos:end="287:46">pnum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="293:9" pos:end="311:9"><if pos:start="293:9" pos:end="311:9">if <condition pos:start="293:12" pos:end="293:19">(<expr pos:start="293:13" pos:end="293:18"><name pos:start="293:13" pos:end="293:18">strict</name></expr>)</condition> <block pos:start="293:21" pos:end="311:9">{<block_content pos:start="295:13" pos:end="309:13">

            <if_stmt pos:start="295:13" pos:end="309:13"><if pos:start="295:13" pos:end="309:13">if <condition pos:start="295:16" pos:end="297:52">(<expr pos:start="295:17" pos:end="297:51"><operator pos:start="295:17" pos:end="295:17">(</operator><name pos:start="295:18" pos:end="295:24">status1</name> <operator pos:start="295:26" pos:end="295:26">&amp;</operator> <operator pos:start="295:28" pos:end="295:28">~</operator><name pos:start="295:29" pos:end="295:50">BDRV_BLOCK_OFFSET_MASK</name><operator pos:start="295:51" pos:end="295:51">)</operator> <operator pos:start="295:53" pos:end="295:54">!=</operator>

                <operator pos:start="297:17" pos:end="297:17">(</operator><name pos:start="297:18" pos:end="297:24">status2</name> <operator pos:start="297:26" pos:end="297:26">&amp;</operator> <operator pos:start="297:28" pos:end="297:28">~</operator><name pos:start="297:29" pos:end="297:50">BDRV_BLOCK_OFFSET_MASK</name><operator pos:start="297:51" pos:end="297:51">)</operator></expr>)</condition> <block pos:start="297:54" pos:end="309:13">{<block_content pos:start="299:17" pos:end="307:25">

                <expr_stmt pos:start="299:17" pos:end="299:24"><expr pos:start="299:17" pos:end="299:23"><name pos:start="299:17" pos:end="299:19">ret</name> <operator pos:start="299:21" pos:end="299:21">=</operator> <literal type="number" pos:start="299:23" pos:end="299:23">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="305:54"><expr pos:start="301:17" pos:end="305:53"><call pos:start="301:17" pos:end="305:53"><name pos:start="301:17" pos:end="301:23">qprintf</name><argument_list pos:start="301:24" pos:end="305:53">(<argument pos:start="301:25" pos:end="301:29"><expr pos:start="301:25" pos:end="301:29"><name pos:start="301:25" pos:end="301:29">quiet</name></expr></argument>, <argument pos:start="301:32" pos:end="303:51"><expr pos:start="301:32" pos:end="303:51"><literal type="string" pos:start="301:32" pos:end="301:54">"Strict mode: Offset %"</literal> <name pos:start="301:56" pos:end="301:61">PRId64</name>

                        <literal type="string" pos:start="303:25" pos:end="303:51">" block status mismatch!\n"</literal></expr></argument>,

                        <argument pos:start="305:25" pos:end="305:52"><expr pos:start="305:25" pos:end="305:52"><call pos:start="305:25" pos:end="305:52"><name pos:start="305:25" pos:end="305:40">sectors_to_bytes</name><argument_list pos:start="305:41" pos:end="305:52">(<argument pos:start="305:42" pos:end="305:51"><expr pos:start="305:42" pos:end="305:51"><name pos:start="305:42" pos:end="305:51">sector_num</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="307:17" pos:end="307:25">goto <name pos:start="307:22" pos:end="307:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="313:9" pos:end="405:9"><if pos:start="313:9" pos:end="317:9">if <condition pos:start="313:12" pos:end="313:71">(<expr pos:start="313:13" pos:end="313:70"><operator pos:start="313:13" pos:end="313:13">(</operator><name pos:start="313:14" pos:end="313:20">status1</name> <operator pos:start="313:22" pos:end="313:22">&amp;</operator> <name pos:start="313:24" pos:end="313:38">BDRV_BLOCK_ZERO</name><operator pos:start="313:39" pos:end="313:39">)</operator> <operator pos:start="313:41" pos:end="313:42">&amp;&amp;</operator> <operator pos:start="313:44" pos:end="313:44">(</operator><name pos:start="313:45" pos:end="313:51">status2</name> <operator pos:start="313:53" pos:end="313:53">&amp;</operator> <name pos:start="313:55" pos:end="313:69">BDRV_BLOCK_ZERO</name><operator pos:start="313:70" pos:end="313:70">)</operator></expr>)</condition> <block pos:start="313:73" pos:end="317:9">{<block_content pos:start="315:13" pos:end="315:43">

            <expr_stmt pos:start="315:13" pos:end="315:43"><expr pos:start="315:13" pos:end="315:42"><name pos:start="315:13" pos:end="315:22">nb_sectors</name> <operator pos:start="315:24" pos:end="315:24">=</operator> <call pos:start="315:26" pos:end="315:42"><name pos:start="315:26" pos:end="315:28">MIN</name><argument_list pos:start="315:29" pos:end="315:42">(<argument pos:start="315:30" pos:end="315:34"><expr pos:start="315:30" pos:end="315:34"><name pos:start="315:30" pos:end="315:34">pnum1</name></expr></argument>, <argument pos:start="315:37" pos:end="315:41"><expr pos:start="315:37" pos:end="315:41"><name pos:start="315:37" pos:end="315:41">pnum2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="317:11" pos:end="371:9">else if <condition pos:start="317:19" pos:end="317:44">(<expr pos:start="317:20" pos:end="317:43"><name pos:start="317:20" pos:end="317:29">allocated1</name> <operator pos:start="317:31" pos:end="317:32">==</operator> <name pos:start="317:34" pos:end="317:43">allocated2</name></expr>)</condition> <block pos:start="317:46" pos:end="371:9">{<block_content pos:start="319:13" pos:end="369:13">

            <if_stmt pos:start="319:13" pos:end="369:13"><if pos:start="319:13" pos:end="369:13">if <condition pos:start="319:16" pos:end="319:27">(<expr pos:start="319:17" pos:end="319:26"><name pos:start="319:17" pos:end="319:26">allocated1</name></expr>)</condition> <block pos:start="319:29" pos:end="369:13">{<block_content pos:start="321:17" pos:end="367:17">

                <expr_stmt pos:start="321:17" pos:end="321:67"><expr pos:start="321:17" pos:end="321:66"><name pos:start="321:17" pos:end="321:19">ret</name> <operator pos:start="321:21" pos:end="321:21">=</operator> <call pos:start="321:23" pos:end="321:66"><name pos:start="321:23" pos:end="321:30">blk_read</name><argument_list pos:start="321:31" pos:end="321:66">(<argument pos:start="321:32" pos:end="321:35"><expr pos:start="321:32" pos:end="321:35"><name pos:start="321:32" pos:end="321:35">blk1</name></expr></argument>, <argument pos:start="321:38" pos:end="321:47"><expr pos:start="321:38" pos:end="321:47"><name pos:start="321:38" pos:end="321:47">sector_num</name></expr></argument>, <argument pos:start="321:50" pos:end="321:53"><expr pos:start="321:50" pos:end="321:53"><name pos:start="321:50" pos:end="321:53">buf1</name></expr></argument>, <argument pos:start="321:56" pos:end="321:65"><expr pos:start="321:56" pos:end="321:65"><name pos:start="321:56" pos:end="321:65">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="323:17" pos:end="335:17"><if pos:start="323:17" pos:end="335:17">if <condition pos:start="323:20" pos:end="323:28">(<expr pos:start="323:21" pos:end="323:27"><name pos:start="323:21" pos:end="323:23">ret</name> <operator pos:start="323:25" pos:end="323:25">&lt;</operator> <literal type="number" pos:start="323:27" pos:end="323:27">0</literal></expr>)</condition> <block pos:start="323:30" pos:end="335:17">{<block_content pos:start="325:21" pos:end="333:29">

                    <expr_stmt pos:start="325:21" pos:end="329:49"><expr pos:start="325:21" pos:end="329:48"><call pos:start="325:21" pos:end="329:48"><name pos:start="325:21" pos:end="325:32">error_report</name><argument_list pos:start="325:33" pos:end="329:48">(<argument pos:start="325:34" pos:end="327:38"><expr pos:start="325:34" pos:end="327:38"><literal type="string" pos:start="325:34" pos:end="325:63">"Error while reading offset %"</literal> <name pos:start="325:65" pos:end="325:70">PRId64</name> <literal type="string" pos:start="325:72" pos:end="325:80">" of %s:"</literal>

                                 <literal type="string" pos:start="327:34" pos:end="327:38">" %s"</literal></expr></argument>, <argument pos:start="327:41" pos:end="327:68"><expr pos:start="327:41" pos:end="327:68"><call pos:start="327:41" pos:end="327:68"><name pos:start="327:41" pos:end="327:56">sectors_to_bytes</name><argument_list pos:start="327:57" pos:end="327:68">(<argument pos:start="327:58" pos:end="327:67"><expr pos:start="327:58" pos:end="327:67"><name pos:start="327:58" pos:end="327:67">sector_num</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="327:71" pos:end="327:79"><expr pos:start="327:71" pos:end="327:79"><name pos:start="327:71" pos:end="327:79">filename1</name></expr></argument>,

                                 <argument pos:start="329:34" pos:end="329:47"><expr pos:start="329:34" pos:end="329:47"><call pos:start="329:34" pos:end="329:47"><name pos:start="329:34" pos:end="329:41">strerror</name><argument_list pos:start="329:42" pos:end="329:47">(<argument pos:start="329:43" pos:end="329:46"><expr pos:start="329:43" pos:end="329:46"><operator pos:start="329:43" pos:end="329:43">-</operator><name pos:start="329:44" pos:end="329:46">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="331:21" pos:end="331:28"><expr pos:start="331:21" pos:end="331:27"><name pos:start="331:21" pos:end="331:23">ret</name> <operator pos:start="331:25" pos:end="331:25">=</operator> <literal type="number" pos:start="331:27" pos:end="331:27">4</literal></expr>;</expr_stmt>

                    <goto pos:start="333:21" pos:end="333:29">goto <name pos:start="333:26" pos:end="333:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:67"><expr pos:start="337:17" pos:end="337:66"><name pos:start="337:17" pos:end="337:19">ret</name> <operator pos:start="337:21" pos:end="337:21">=</operator> <call pos:start="337:23" pos:end="337:66"><name pos:start="337:23" pos:end="337:30">blk_read</name><argument_list pos:start="337:31" pos:end="337:66">(<argument pos:start="337:32" pos:end="337:35"><expr pos:start="337:32" pos:end="337:35"><name pos:start="337:32" pos:end="337:35">blk2</name></expr></argument>, <argument pos:start="337:38" pos:end="337:47"><expr pos:start="337:38" pos:end="337:47"><name pos:start="337:38" pos:end="337:47">sector_num</name></expr></argument>, <argument pos:start="337:50" pos:end="337:53"><expr pos:start="337:50" pos:end="337:53"><name pos:start="337:50" pos:end="337:53">buf2</name></expr></argument>, <argument pos:start="337:56" pos:end="337:65"><expr pos:start="337:56" pos:end="337:65"><name pos:start="337:56" pos:end="337:65">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="339:17" pos:end="351:17"><if pos:start="339:17" pos:end="351:17">if <condition pos:start="339:20" pos:end="339:28">(<expr pos:start="339:21" pos:end="339:27"><name pos:start="339:21" pos:end="339:23">ret</name> <operator pos:start="339:25" pos:end="339:25">&lt;</operator> <literal type="number" pos:start="339:27" pos:end="339:27">0</literal></expr>)</condition> <block pos:start="339:30" pos:end="351:17">{<block_content pos:start="341:21" pos:end="349:29">

                    <expr_stmt pos:start="341:21" pos:end="345:60"><expr pos:start="341:21" pos:end="345:59"><call pos:start="341:21" pos:end="345:59"><name pos:start="341:21" pos:end="341:32">error_report</name><argument_list pos:start="341:33" pos:end="345:59">(<argument pos:start="341:34" pos:end="343:45"><expr pos:start="341:34" pos:end="343:45"><literal type="string" pos:start="341:34" pos:end="341:63">"Error while reading offset %"</literal> <name pos:start="341:65" pos:end="341:70">PRId64</name>

                                 <literal type="string" pos:start="343:34" pos:end="343:45">" of %s: %s"</literal></expr></argument>, <argument pos:start="343:48" pos:end="343:75"><expr pos:start="343:48" pos:end="343:75"><call pos:start="343:48" pos:end="343:75"><name pos:start="343:48" pos:end="343:63">sectors_to_bytes</name><argument_list pos:start="343:64" pos:end="343:75">(<argument pos:start="343:65" pos:end="343:74"><expr pos:start="343:65" pos:end="343:74"><name pos:start="343:65" pos:end="343:74">sector_num</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="345:34" pos:end="345:42"><expr pos:start="345:34" pos:end="345:42"><name pos:start="345:34" pos:end="345:42">filename2</name></expr></argument>, <argument pos:start="345:45" pos:end="345:58"><expr pos:start="345:45" pos:end="345:58"><call pos:start="345:45" pos:end="345:58"><name pos:start="345:45" pos:end="345:52">strerror</name><argument_list pos:start="345:53" pos:end="345:58">(<argument pos:start="345:54" pos:end="345:57"><expr pos:start="345:54" pos:end="345:57"><operator pos:start="345:54" pos:end="345:54">-</operator><name pos:start="345:55" pos:end="345:57">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="347:21" pos:end="347:28"><expr pos:start="347:21" pos:end="347:27"><name pos:start="347:21" pos:end="347:23">ret</name> <operator pos:start="347:25" pos:end="347:25">=</operator> <literal type="number" pos:start="347:27" pos:end="347:27">4</literal></expr>;</expr_stmt>

                    <goto pos:start="349:21" pos:end="349:29">goto <name pos:start="349:26" pos:end="349:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:69"><expr pos:start="353:17" pos:end="353:68"><name pos:start="353:17" pos:end="353:19">ret</name> <operator pos:start="353:21" pos:end="353:21">=</operator> <call pos:start="353:23" pos:end="353:68"><name pos:start="353:23" pos:end="353:37">compare_sectors</name><argument_list pos:start="353:38" pos:end="353:68">(<argument pos:start="353:39" pos:end="353:42"><expr pos:start="353:39" pos:end="353:42"><name pos:start="353:39" pos:end="353:42">buf1</name></expr></argument>, <argument pos:start="353:45" pos:end="353:48"><expr pos:start="353:45" pos:end="353:48"><name pos:start="353:45" pos:end="353:48">buf2</name></expr></argument>, <argument pos:start="353:51" pos:end="353:60"><expr pos:start="353:51" pos:end="353:60"><name pos:start="353:51" pos:end="353:60">nb_sectors</name></expr></argument>, <argument pos:start="353:63" pos:end="353:67"><expr pos:start="353:63" pos:end="353:67"><operator pos:start="353:63" pos:end="353:63">&amp;</operator><name pos:start="353:64" pos:end="353:67">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="355:17" pos:end="367:17"><if pos:start="355:17" pos:end="367:17">if <condition pos:start="355:20" pos:end="355:46">(<expr pos:start="355:21" pos:end="355:45"><name pos:start="355:21" pos:end="355:23">ret</name> <operator pos:start="355:25" pos:end="355:26">||</operator> <name pos:start="355:28" pos:end="355:31">pnum</name> <operator pos:start="355:33" pos:end="355:34">!=</operator> <name pos:start="355:36" pos:end="355:45">nb_sectors</name></expr>)</condition> <block pos:start="355:48" pos:end="367:17">{<block_content pos:start="357:21" pos:end="365:29">

                    <expr_stmt pos:start="357:21" pos:end="361:71"><expr pos:start="357:21" pos:end="361:70"><call pos:start="357:21" pos:end="361:70"><name pos:start="357:21" pos:end="357:27">qprintf</name><argument_list pos:start="357:28" pos:end="361:70">(<argument pos:start="357:29" pos:end="357:33"><expr pos:start="357:29" pos:end="357:33"><name pos:start="357:29" pos:end="357:33">quiet</name></expr></argument>, <argument pos:start="357:36" pos:end="357:78"><expr pos:start="357:36" pos:end="357:78"><literal type="string" pos:start="357:36" pos:end="357:65">"Content mismatch at offset %"</literal> <name pos:start="357:67" pos:end="357:72">PRId64</name> <literal type="string" pos:start="357:74" pos:end="357:78">"!\n"</literal></expr></argument>,

                            <argument pos:start="359:29" pos:end="361:69"><expr pos:start="359:29" pos:end="361:69"><call pos:start="359:29" pos:end="361:69"><name pos:start="359:29" pos:end="359:44">sectors_to_bytes</name><argument_list pos:start="359:45" pos:end="361:69">(

                                <argument pos:start="361:33" pos:end="361:68"><expr pos:start="361:33" pos:end="361:68"><ternary pos:start="361:33" pos:end="361:68"><condition pos:start="361:33" pos:end="361:37"><expr pos:start="361:33" pos:end="361:35"><name pos:start="361:33" pos:end="361:35">ret</name></expr> ?</condition><then pos:start="361:39" pos:end="361:48"> <expr pos:start="361:39" pos:end="361:48"><name pos:start="361:39" pos:end="361:48">sector_num</name></expr> </then><else pos:start="361:50" pos:end="361:68">: <expr pos:start="361:52" pos:end="361:68"><name pos:start="361:52" pos:end="361:61">sector_num</name> <operator pos:start="361:63" pos:end="361:63">+</operator> <name pos:start="361:65" pos:end="361:68">pnum</name></expr></else></ternary></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="363:21" pos:end="363:28"><expr pos:start="363:21" pos:end="363:27"><name pos:start="363:21" pos:end="363:23">ret</name> <operator pos:start="363:25" pos:end="363:25">=</operator> <literal type="number" pos:start="363:27" pos:end="363:27">1</literal></expr>;</expr_stmt>

                    <goto pos:start="365:21" pos:end="365:29">goto <name pos:start="365:26" pos:end="365:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="371:11" pos:end="405:9">else <block pos:start="371:16" pos:end="405:9">{<block_content pos:start="375:13" pos:end="403:13">



            <if_stmt pos:start="375:13" pos:end="387:13"><if pos:start="375:13" pos:end="381:13">if <condition pos:start="375:16" pos:end="375:27">(<expr pos:start="375:17" pos:end="375:26"><name pos:start="375:17" pos:end="375:26">allocated1</name></expr>)</condition> <block pos:start="375:29" pos:end="381:13">{<block_content pos:start="377:17" pos:end="379:66">

                <expr_stmt pos:start="377:17" pos:end="379:66"><expr pos:start="377:17" pos:end="379:65"><name pos:start="377:17" pos:end="377:19">ret</name> <operator pos:start="377:21" pos:end="377:21">=</operator> <call pos:start="377:23" pos:end="379:65"><name pos:start="377:23" pos:end="377:41">check_empty_sectors</name><argument_list pos:start="377:42" pos:end="379:65">(<argument pos:start="377:43" pos:end="377:46"><expr pos:start="377:43" pos:end="377:46"><name pos:start="377:43" pos:end="377:46">blk1</name></expr></argument>, <argument pos:start="377:49" pos:end="377:58"><expr pos:start="377:49" pos:end="377:58"><name pos:start="377:49" pos:end="377:58">sector_num</name></expr></argument>, <argument pos:start="377:61" pos:end="377:70"><expr pos:start="377:61" pos:end="377:70"><name pos:start="377:61" pos:end="377:70">nb_sectors</name></expr></argument>,

                                          <argument pos:start="379:43" pos:end="379:51"><expr pos:start="379:43" pos:end="379:51"><name pos:start="379:43" pos:end="379:51">filename1</name></expr></argument>, <argument pos:start="379:54" pos:end="379:57"><expr pos:start="379:54" pos:end="379:57"><name pos:start="379:54" pos:end="379:57">buf1</name></expr></argument>, <argument pos:start="379:60" pos:end="379:64"><expr pos:start="379:60" pos:end="379:64"><name pos:start="379:60" pos:end="379:64">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="381:15" pos:end="387:13">else <block pos:start="381:20" pos:end="387:13">{<block_content pos:start="383:17" pos:end="385:66">

                <expr_stmt pos:start="383:17" pos:end="385:66"><expr pos:start="383:17" pos:end="385:65"><name pos:start="383:17" pos:end="383:19">ret</name> <operator pos:start="383:21" pos:end="383:21">=</operator> <call pos:start="383:23" pos:end="385:65"><name pos:start="383:23" pos:end="383:41">check_empty_sectors</name><argument_list pos:start="383:42" pos:end="385:65">(<argument pos:start="383:43" pos:end="383:46"><expr pos:start="383:43" pos:end="383:46"><name pos:start="383:43" pos:end="383:46">blk2</name></expr></argument>, <argument pos:start="383:49" pos:end="383:58"><expr pos:start="383:49" pos:end="383:58"><name pos:start="383:49" pos:end="383:58">sector_num</name></expr></argument>, <argument pos:start="383:61" pos:end="383:70"><expr pos:start="383:61" pos:end="383:70"><name pos:start="383:61" pos:end="383:70">nb_sectors</name></expr></argument>,

                                          <argument pos:start="385:43" pos:end="385:51"><expr pos:start="385:43" pos:end="385:51"><name pos:start="385:43" pos:end="385:51">filename2</name></expr></argument>, <argument pos:start="385:54" pos:end="385:57"><expr pos:start="385:54" pos:end="385:57"><name pos:start="385:54" pos:end="385:57">buf1</name></expr></argument>, <argument pos:start="385:60" pos:end="385:64"><expr pos:start="385:60" pos:end="385:64"><name pos:start="385:60" pos:end="385:64">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="389:13" pos:end="403:13"><if pos:start="389:13" pos:end="403:13">if <condition pos:start="389:16" pos:end="389:20">(<expr pos:start="389:17" pos:end="389:19"><name pos:start="389:17" pos:end="389:19">ret</name></expr>)</condition> <block pos:start="389:22" pos:end="403:13">{<block_content pos:start="391:17" pos:end="401:25">

                <if_stmt pos:start="391:17" pos:end="399:17"><if pos:start="391:17" pos:end="399:17">if <condition pos:start="391:20" pos:end="391:28">(<expr pos:start="391:21" pos:end="391:27"><name pos:start="391:21" pos:end="391:23">ret</name> <operator pos:start="391:25" pos:end="391:25">&lt;</operator> <literal type="number" pos:start="391:27" pos:end="391:27">0</literal></expr>)</condition> <block pos:start="391:30" pos:end="399:17">{<block_content pos:start="393:21" pos:end="397:28">

                    <expr_stmt pos:start="393:21" pos:end="395:79"><expr pos:start="393:21" pos:end="395:78"><call pos:start="393:21" pos:end="395:78"><name pos:start="393:21" pos:end="393:32">error_report</name><argument_list pos:start="393:33" pos:end="395:78">(<argument pos:start="393:34" pos:end="393:77"><expr pos:start="393:34" pos:end="393:77"><literal type="string" pos:start="393:34" pos:end="393:63">"Error while reading offset %"</literal> <name pos:start="393:65" pos:end="393:70">PRId64</name> <literal type="string" pos:start="393:72" pos:end="393:77">": %s"</literal></expr></argument>,

                                 <argument pos:start="395:34" pos:end="395:61"><expr pos:start="395:34" pos:end="395:61"><call pos:start="395:34" pos:end="395:61"><name pos:start="395:34" pos:end="395:49">sectors_to_bytes</name><argument_list pos:start="395:50" pos:end="395:61">(<argument pos:start="395:51" pos:end="395:60"><expr pos:start="395:51" pos:end="395:60"><name pos:start="395:51" pos:end="395:60">sector_num</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="395:64" pos:end="395:77"><expr pos:start="395:64" pos:end="395:77"><call pos:start="395:64" pos:end="395:77"><name pos:start="395:64" pos:end="395:71">strerror</name><argument_list pos:start="395:72" pos:end="395:77">(<argument pos:start="395:73" pos:end="395:76"><expr pos:start="395:73" pos:end="395:76"><operator pos:start="395:73" pos:end="395:73">-</operator><name pos:start="395:74" pos:end="395:76">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="397:21" pos:end="397:28"><expr pos:start="397:21" pos:end="397:27"><name pos:start="397:21" pos:end="397:23">ret</name> <operator pos:start="397:25" pos:end="397:25">=</operator> <literal type="number" pos:start="397:27" pos:end="397:27">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <goto pos:start="401:17" pos:end="401:25">goto <name pos:start="401:22" pos:end="401:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="407:9" pos:end="407:33"><expr pos:start="407:9" pos:end="407:32"><name pos:start="407:9" pos:end="407:18">sector_num</name> <operator pos:start="407:20" pos:end="407:21">+=</operator> <name pos:start="407:23" pos:end="407:32">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:75"><expr pos:start="409:9" pos:end="409:74"><call pos:start="409:9" pos:end="409:74"><name pos:start="409:9" pos:end="409:27">qemu_progress_print</name><argument_list pos:start="409:28" pos:end="409:74">(<argument pos:start="409:29" pos:end="409:68"><expr pos:start="409:29" pos:end="409:68"><operator pos:start="409:29" pos:end="409:29">(</operator><operator pos:start="409:30" pos:end="409:30">(</operator><name pos:start="409:31" pos:end="409:35">float</name><operator pos:start="409:36" pos:end="409:36">)</operator> <name pos:start="409:38" pos:end="409:47">nb_sectors</name> <operator pos:start="409:49" pos:end="409:49">/</operator> <name pos:start="409:51" pos:end="409:63">progress_base</name><operator pos:start="409:64" pos:end="409:64">)</operator><operator pos:start="409:65" pos:end="409:65">*</operator><literal type="number" pos:start="409:66" pos:end="409:68">100</literal></expr></argument>, <argument pos:start="409:71" pos:end="409:73"><expr pos:start="409:71" pos:end="409:73"><literal type="number" pos:start="409:71" pos:end="409:73">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="415:5" pos:end="509:5"><if pos:start="415:5" pos:end="509:5">if <condition pos:start="415:8" pos:end="415:41">(<expr pos:start="415:9" pos:end="415:40"><name pos:start="415:9" pos:end="415:22">total_sectors1</name> <operator pos:start="415:24" pos:end="415:25">!=</operator> <name pos:start="415:27" pos:end="415:40">total_sectors2</name></expr>)</condition> <block pos:start="415:43" pos:end="509:5">{<block_content pos:start="417:9" pos:end="507:9">

        <decl_stmt pos:start="417:9" pos:end="417:31"><decl pos:start="417:9" pos:end="417:30"><type pos:start="417:9" pos:end="417:22"><name pos:start="417:9" pos:end="417:20">BlockBackend</name> <modifier pos:start="417:22" pos:end="417:22">*</modifier></type><name pos:start="417:23" pos:end="417:30">blk_over</name></decl>;</decl_stmt>

        <decl_stmt pos:start="419:9" pos:end="419:35"><decl pos:start="419:9" pos:end="419:34"><type pos:start="419:9" pos:end="419:15"><name pos:start="419:9" pos:end="419:15">int64_t</name></type> <name pos:start="419:17" pos:end="419:34">total_sectors_over</name></decl>;</decl_stmt>

        <decl_stmt pos:start="421:9" pos:end="421:34"><decl pos:start="421:9" pos:end="421:33"><type pos:start="421:9" pos:end="421:20"><specifier pos:start="421:9" pos:end="421:13">const</specifier> <name pos:start="421:15" pos:end="421:18">char</name> <modifier pos:start="421:20" pos:end="421:20">*</modifier></type><name pos:start="421:21" pos:end="421:33">filename_over</name></decl>;</decl_stmt>



        <expr_stmt pos:start="425:9" pos:end="425:58"><expr pos:start="425:9" pos:end="425:57"><call pos:start="425:9" pos:end="425:57"><name pos:start="425:9" pos:end="425:15">qprintf</name><argument_list pos:start="425:16" pos:end="425:57">(<argument pos:start="425:17" pos:end="425:21"><expr pos:start="425:17" pos:end="425:21"><name pos:start="425:17" pos:end="425:21">quiet</name></expr></argument>, <argument pos:start="425:24" pos:end="425:56"><expr pos:start="425:24" pos:end="425:56"><literal type="string" pos:start="425:24" pos:end="425:56">"Warning: Image size mismatch!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="427:9" pos:end="443:9"><if pos:start="427:9" pos:end="435:9">if <condition pos:start="427:12" pos:end="427:44">(<expr pos:start="427:13" pos:end="427:43"><name pos:start="427:13" pos:end="427:26">total_sectors1</name> <operator pos:start="427:28" pos:end="427:28">&gt;</operator> <name pos:start="427:30" pos:end="427:43">total_sectors2</name></expr>)</condition> <block pos:start="427:46" pos:end="435:9">{<block_content pos:start="429:13" pos:end="433:38">

            <expr_stmt pos:start="429:13" pos:end="429:48"><expr pos:start="429:13" pos:end="429:47"><name pos:start="429:13" pos:end="429:30">total_sectors_over</name> <operator pos:start="429:32" pos:end="429:32">=</operator> <name pos:start="429:34" pos:end="429:47">total_sectors1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:28"><expr pos:start="431:13" pos:end="431:27"><name pos:start="431:13" pos:end="431:20">blk_over</name> <operator pos:start="431:22" pos:end="431:22">=</operator> <name pos:start="431:24" pos:end="431:27">blk1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:38"><expr pos:start="433:13" pos:end="433:37"><name pos:start="433:13" pos:end="433:25">filename_over</name> <operator pos:start="433:27" pos:end="433:27">=</operator> <name pos:start="433:29" pos:end="433:37">filename1</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="435:11" pos:end="443:9">else <block pos:start="435:16" pos:end="443:9">{<block_content pos:start="437:13" pos:end="441:38">

            <expr_stmt pos:start="437:13" pos:end="437:48"><expr pos:start="437:13" pos:end="437:47"><name pos:start="437:13" pos:end="437:30">total_sectors_over</name> <operator pos:start="437:32" pos:end="437:32">=</operator> <name pos:start="437:34" pos:end="437:47">total_sectors2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:28"><expr pos:start="439:13" pos:end="439:27"><name pos:start="439:13" pos:end="439:20">blk_over</name> <operator pos:start="439:22" pos:end="439:22">=</operator> <name pos:start="439:24" pos:end="439:27">blk2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:38"><expr pos:start="441:13" pos:end="441:37"><name pos:start="441:13" pos:end="441:25">filename_over</name> <operator pos:start="441:27" pos:end="441:27">=</operator> <name pos:start="441:29" pos:end="441:37">filename2</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <for pos:start="447:9" pos:end="507:9">for <control pos:start="447:13" pos:end="447:16">(<init pos:start="447:14" pos:end="447:14">;</init><condition pos:start="447:15" pos:end="447:15">;</condition><incr/>)</control> <block pos:start="447:18" pos:end="507:9">{<block_content pos:start="449:13" pos:end="505:79">

            <expr_stmt pos:start="449:13" pos:end="449:76"><expr pos:start="449:13" pos:end="449:75"><name pos:start="449:13" pos:end="449:22">nb_sectors</name> <operator pos:start="449:24" pos:end="449:24">=</operator> <call pos:start="449:26" pos:end="449:75"><name pos:start="449:26" pos:end="449:43">sectors_to_process</name><argument_list pos:start="449:44" pos:end="449:75">(<argument pos:start="449:45" pos:end="449:62"><expr pos:start="449:45" pos:end="449:62"><name pos:start="449:45" pos:end="449:62">total_sectors_over</name></expr></argument>, <argument pos:start="449:65" pos:end="449:74"><expr pos:start="449:65" pos:end="449:74"><name pos:start="449:65" pos:end="449:74">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="451:13" pos:end="455:13"><if pos:start="451:13" pos:end="455:13">if <condition pos:start="451:16" pos:end="451:32">(<expr pos:start="451:17" pos:end="451:31"><name pos:start="451:17" pos:end="451:26">nb_sectors</name> <operator pos:start="451:28" pos:end="451:29">&lt;=</operator> <literal type="number" pos:start="451:31" pos:end="451:31">0</literal></expr>)</condition> <block pos:start="451:34" pos:end="455:13">{<block_content pos:start="453:17" pos:end="453:22">

                <break pos:start="453:17" pos:end="453:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="457:13" pos:end="459:61"><expr pos:start="457:13" pos:end="459:60"><name pos:start="457:13" pos:end="457:15">ret</name> <operator pos:start="457:17" pos:end="457:17">=</operator> <call pos:start="457:19" pos:end="459:60"><name pos:start="457:19" pos:end="457:41">bdrv_is_allocated_above</name><argument_list pos:start="457:42" pos:end="459:60">(<argument pos:start="457:43" pos:end="457:58"><expr pos:start="457:43" pos:end="457:58"><call pos:start="457:43" pos:end="457:58"><name pos:start="457:43" pos:end="457:48">blk_bs</name><argument_list pos:start="457:49" pos:end="457:58">(<argument pos:start="457:50" pos:end="457:57"><expr pos:start="457:50" pos:end="457:57"><name pos:start="457:50" pos:end="457:57">blk_over</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="457:61" pos:end="457:64"><expr pos:start="457:61" pos:end="457:64"><name pos:start="457:61" pos:end="457:64">NULL</name></expr></argument>, <argument pos:start="457:67" pos:end="457:76"><expr pos:start="457:67" pos:end="457:76"><name pos:start="457:67" pos:end="457:76">sector_num</name></expr></argument>,

                                          <argument pos:start="459:43" pos:end="459:52"><expr pos:start="459:43" pos:end="459:52"><name pos:start="459:43" pos:end="459:52">nb_sectors</name></expr></argument>, <argument pos:start="459:55" pos:end="459:59"><expr pos:start="459:55" pos:end="459:59"><operator pos:start="459:55" pos:end="459:55">&amp;</operator><name pos:start="459:56" pos:end="459:59">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="461:13" pos:end="473:13"><if pos:start="461:13" pos:end="473:13">if <condition pos:start="461:16" pos:end="461:24">(<expr pos:start="461:17" pos:end="461:23"><name pos:start="461:17" pos:end="461:19">ret</name> <operator pos:start="461:21" pos:end="461:21">&lt;</operator> <literal type="number" pos:start="461:23" pos:end="461:23">0</literal></expr>)</condition> <block pos:start="461:26" pos:end="473:13">{<block_content pos:start="463:17" pos:end="469:25">

                <expr_stmt pos:start="463:17" pos:end="463:24"><expr pos:start="463:17" pos:end="463:23"><name pos:start="463:17" pos:end="463:19">ret</name> <operator pos:start="463:21" pos:end="463:21">=</operator> <literal type="number" pos:start="463:23" pos:end="463:23">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="465:17" pos:end="467:44"><expr pos:start="465:17" pos:end="467:43"><call pos:start="465:17" pos:end="467:43"><name pos:start="465:17" pos:end="465:28">error_report</name><argument_list pos:start="465:29" pos:end="467:43">(<argument pos:start="465:30" pos:end="465:67"><expr pos:start="465:30" pos:end="465:67"><literal type="string" pos:start="465:30" pos:end="465:67">"Sector allocation test failed for %s"</literal></expr></argument>,

                             <argument pos:start="467:30" pos:end="467:42"><expr pos:start="467:30" pos:end="467:42"><name pos:start="467:30" pos:end="467:42">filename_over</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="469:17" pos:end="469:25">goto <name pos:start="469:22" pos:end="469:24">out</name>;</goto>



            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="475:13" pos:end="475:30"><expr pos:start="475:13" pos:end="475:29"><name pos:start="475:13" pos:end="475:22">nb_sectors</name> <operator pos:start="475:24" pos:end="475:24">=</operator> <name pos:start="475:26" pos:end="475:29">pnum</name></expr>;</expr_stmt>

            <if_stmt pos:start="477:13" pos:end="501:13"><if pos:start="477:13" pos:end="501:13">if <condition pos:start="477:16" pos:end="477:20">(<expr pos:start="477:17" pos:end="477:19"><name pos:start="477:17" pos:end="477:19">ret</name></expr>)</condition> <block pos:start="477:22" pos:end="501:13">{<block_content pos:start="479:17" pos:end="499:17">

                <expr_stmt pos:start="479:17" pos:end="481:70"><expr pos:start="479:17" pos:end="481:69"><name pos:start="479:17" pos:end="479:19">ret</name> <operator pos:start="479:21" pos:end="479:21">=</operator> <call pos:start="479:23" pos:end="481:69"><name pos:start="479:23" pos:end="479:41">check_empty_sectors</name><argument_list pos:start="479:42" pos:end="481:69">(<argument pos:start="479:43" pos:end="479:50"><expr pos:start="479:43" pos:end="479:50"><name pos:start="479:43" pos:end="479:50">blk_over</name></expr></argument>, <argument pos:start="479:53" pos:end="479:62"><expr pos:start="479:53" pos:end="479:62"><name pos:start="479:53" pos:end="479:62">sector_num</name></expr></argument>, <argument pos:start="479:65" pos:end="479:74"><expr pos:start="479:65" pos:end="479:74"><name pos:start="479:65" pos:end="479:74">nb_sectors</name></expr></argument>,

                                          <argument pos:start="481:43" pos:end="481:55"><expr pos:start="481:43" pos:end="481:55"><name pos:start="481:43" pos:end="481:55">filename_over</name></expr></argument>, <argument pos:start="481:58" pos:end="481:61"><expr pos:start="481:58" pos:end="481:61"><name pos:start="481:58" pos:end="481:61">buf1</name></expr></argument>, <argument pos:start="481:64" pos:end="481:68"><expr pos:start="481:64" pos:end="481:68"><name pos:start="481:64" pos:end="481:68">quiet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="483:17" pos:end="499:17"><if pos:start="483:17" pos:end="499:17">if <condition pos:start="483:20" pos:end="483:24">(<expr pos:start="483:21" pos:end="483:23"><name pos:start="483:21" pos:end="483:23">ret</name></expr>)</condition> <block pos:start="483:26" pos:end="499:17">{<block_content pos:start="485:21" pos:end="497:29">

                    <if_stmt pos:start="485:21" pos:end="495:21"><if pos:start="485:21" pos:end="495:21">if <condition pos:start="485:24" pos:end="485:32">(<expr pos:start="485:25" pos:end="485:31"><name pos:start="485:25" pos:end="485:27">ret</name> <operator pos:start="485:29" pos:end="485:29">&lt;</operator> <literal type="number" pos:start="485:31" pos:end="485:31">0</literal></expr>)</condition> <block pos:start="485:34" pos:end="495:21">{<block_content pos:start="487:25" pos:end="493:32">

                        <expr_stmt pos:start="487:25" pos:end="491:68"><expr pos:start="487:25" pos:end="491:67"><call pos:start="487:25" pos:end="491:67"><name pos:start="487:25" pos:end="487:36">error_report</name><argument_list pos:start="487:37" pos:end="491:67">(<argument pos:start="487:38" pos:end="489:49"><expr pos:start="487:38" pos:end="489:49"><literal type="string" pos:start="487:38" pos:end="487:67">"Error while reading offset %"</literal> <name pos:start="487:69" pos:end="487:74">PRId64</name>

                                     <literal type="string" pos:start="489:38" pos:end="489:49">" of %s: %s"</literal></expr></argument>, <argument pos:start="489:52" pos:end="489:79"><expr pos:start="489:52" pos:end="489:79"><call pos:start="489:52" pos:end="489:79"><name pos:start="489:52" pos:end="489:67">sectors_to_bytes</name><argument_list pos:start="489:68" pos:end="489:79">(<argument pos:start="489:69" pos:end="489:78"><expr pos:start="489:69" pos:end="489:78"><name pos:start="489:69" pos:end="489:78">sector_num</name></expr></argument>)</argument_list></call></expr></argument>,

                                     <argument pos:start="491:38" pos:end="491:50"><expr pos:start="491:38" pos:end="491:50"><name pos:start="491:38" pos:end="491:50">filename_over</name></expr></argument>, <argument pos:start="491:53" pos:end="491:66"><expr pos:start="491:53" pos:end="491:66"><call pos:start="491:53" pos:end="491:66"><name pos:start="491:53" pos:end="491:60">strerror</name><argument_list pos:start="491:61" pos:end="491:66">(<argument pos:start="491:62" pos:end="491:65"><expr pos:start="491:62" pos:end="491:65"><operator pos:start="491:62" pos:end="491:62">-</operator><name pos:start="491:63" pos:end="491:65">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="493:25" pos:end="493:32"><expr pos:start="493:25" pos:end="493:31"><name pos:start="493:25" pos:end="493:27">ret</name> <operator pos:start="493:29" pos:end="493:29">=</operator> <literal type="number" pos:start="493:31" pos:end="493:31">4</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <goto pos:start="497:21" pos:end="497:29">goto <name pos:start="497:26" pos:end="497:28">out</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:37"><expr pos:start="503:13" pos:end="503:36"><name pos:start="503:13" pos:end="503:22">sector_num</name> <operator pos:start="503:24" pos:end="503:25">+=</operator> <name pos:start="503:27" pos:end="503:36">nb_sectors</name></expr>;</expr_stmt>

            <expr_stmt pos:start="505:13" pos:end="505:79"><expr pos:start="505:13" pos:end="505:78"><call pos:start="505:13" pos:end="505:78"><name pos:start="505:13" pos:end="505:31">qemu_progress_print</name><argument_list pos:start="505:32" pos:end="505:78">(<argument pos:start="505:33" pos:end="505:72"><expr pos:start="505:33" pos:end="505:72"><operator pos:start="505:33" pos:end="505:33">(</operator><operator pos:start="505:34" pos:end="505:34">(</operator><name pos:start="505:35" pos:end="505:39">float</name><operator pos:start="505:40" pos:end="505:40">)</operator> <name pos:start="505:42" pos:end="505:51">nb_sectors</name> <operator pos:start="505:53" pos:end="505:53">/</operator> <name pos:start="505:55" pos:end="505:67">progress_base</name><operator pos:start="505:68" pos:end="505:68">)</operator><operator pos:start="505:69" pos:end="505:69">*</operator><literal type="number" pos:start="505:70" pos:end="505:72">100</literal></expr></argument>, <argument pos:start="505:75" pos:end="505:77"><expr pos:start="505:75" pos:end="505:77"><literal type="number" pos:start="505:75" pos:end="505:77">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="513:5" pos:end="513:46"><expr pos:start="513:5" pos:end="513:45"><call pos:start="513:5" pos:end="513:45"><name pos:start="513:5" pos:end="513:11">qprintf</name><argument_list pos:start="513:12" pos:end="513:45">(<argument pos:start="513:13" pos:end="513:17"><expr pos:start="513:13" pos:end="513:17"><name pos:start="513:13" pos:end="513:17">quiet</name></expr></argument>, <argument pos:start="513:20" pos:end="513:44"><expr pos:start="513:20" pos:end="513:44"><literal type="string" pos:start="513:20" pos:end="513:44">"Images are identical.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="515:5" pos:end="515:12"><expr pos:start="515:5" pos:end="515:11"><name pos:start="515:5" pos:end="515:7">ret</name> <operator pos:start="515:9" pos:end="515:9">=</operator> <literal type="number" pos:start="515:11" pos:end="515:11">0</literal></expr>;</expr_stmt>



<label pos:start="519:1" pos:end="519:4"><name pos:start="519:1" pos:end="519:3">out</name>:</label>

    <expr_stmt pos:start="521:5" pos:end="521:21"><expr pos:start="521:5" pos:end="521:20"><call pos:start="521:5" pos:end="521:20"><name pos:start="521:5" pos:end="521:14">qemu_vfree</name><argument_list pos:start="521:15" pos:end="521:20">(<argument pos:start="521:16" pos:end="521:19"><expr pos:start="521:16" pos:end="521:19"><name pos:start="521:16" pos:end="521:19">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="523:5" pos:end="523:21"><expr pos:start="523:5" pos:end="523:20"><call pos:start="523:5" pos:end="523:20"><name pos:start="523:5" pos:end="523:14">qemu_vfree</name><argument_list pos:start="523:15" pos:end="523:20">(<argument pos:start="523:16" pos:end="523:19"><expr pos:start="523:16" pos:end="523:19"><name pos:start="523:16" pos:end="523:19">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="525:5" pos:end="525:20"><expr pos:start="525:5" pos:end="525:19"><call pos:start="525:5" pos:end="525:19"><name pos:start="525:5" pos:end="525:13">blk_unref</name><argument_list pos:start="525:14" pos:end="525:19">(<argument pos:start="525:15" pos:end="525:18"><expr pos:start="525:15" pos:end="525:18"><name pos:start="525:15" pos:end="525:18">blk2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="527:1" pos:end="527:5"><name pos:start="527:1" pos:end="527:4">out2</name>:</label>

    <expr_stmt pos:start="529:5" pos:end="529:20"><expr pos:start="529:5" pos:end="529:19"><call pos:start="529:5" pos:end="529:19"><name pos:start="529:5" pos:end="529:13">blk_unref</name><argument_list pos:start="529:14" pos:end="529:19">(<argument pos:start="529:15" pos:end="529:18"><expr pos:start="529:15" pos:end="529:18"><name pos:start="529:15" pos:end="529:18">blk1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="531:1" pos:end="531:5"><name pos:start="531:1" pos:end="531:4">out3</name>:</label>

    <expr_stmt pos:start="533:5" pos:end="533:24"><expr pos:start="533:5" pos:end="533:23"><call pos:start="533:5" pos:end="533:23"><name pos:start="533:5" pos:end="533:21">qemu_progress_end</name><argument_list pos:start="533:22" pos:end="533:23">()</argument_list></call></expr>;</expr_stmt>

    <return pos:start="535:5" pos:end="535:15">return <expr pos:start="535:12" pos:end="535:14"><name pos:start="535:12" pos:end="535:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
