<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19135.c" pos:tabs="8"><function pos:start="1:1" pos:end="395:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:42">filter_mb_dir</name><parameter_list pos:start="1:43" pos:end="1:254">(<parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:54">H264Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">h</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:67"><decl pos:start="1:60" pos:end="1:67"><type pos:start="1:60" pos:end="1:67"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:67">mb_x</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:77"><decl pos:start="1:70" pos:end="1:77"><type pos:start="1:70" pos:end="1:77"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:77">mb_y</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:93"><decl pos:start="1:80" pos:end="1:93"><type pos:start="1:80" pos:end="1:93"><name pos:start="1:80" pos:end="1:86">uint8_t</name> <modifier pos:start="1:88" pos:end="1:88">*</modifier></type><name pos:start="1:89" pos:end="1:93">img_y</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:110"><decl pos:start="1:96" pos:end="1:110"><type pos:start="1:96" pos:end="1:110"><name pos:start="1:96" pos:end="1:102">uint8_t</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier></type><name pos:start="1:105" pos:end="1:110">img_cb</name></decl></parameter>, <parameter pos:start="1:113" pos:end="1:127"><decl pos:start="1:113" pos:end="1:127"><type pos:start="1:113" pos:end="1:127"><name pos:start="1:113" pos:end="1:119">uint8_t</name> <modifier pos:start="1:121" pos:end="1:121">*</modifier></type><name pos:start="1:122" pos:end="1:127">img_cr</name></decl></parameter>, <parameter pos:start="1:130" pos:end="1:150"><decl pos:start="1:130" pos:end="1:150"><type pos:start="1:130" pos:end="1:150"><name pos:start="1:130" pos:end="1:137">unsigned</name> <name pos:start="1:139" pos:end="1:141">int</name></type> <name pos:start="1:143" pos:end="1:150">linesize</name></decl></parameter>, <parameter pos:start="1:153" pos:end="1:175"><decl pos:start="1:153" pos:end="1:175"><type pos:start="1:153" pos:end="1:175"><name pos:start="1:153" pos:end="1:160">unsigned</name> <name pos:start="1:162" pos:end="1:164">int</name></type> <name pos:start="1:166" pos:end="1:175">uvlinesize</name></decl></parameter>, <parameter pos:start="1:178" pos:end="1:186"><decl pos:start="1:178" pos:end="1:186"><type pos:start="1:178" pos:end="1:186"><name pos:start="1:178" pos:end="1:180">int</name></type> <name pos:start="1:182" pos:end="1:186">mb_xy</name></decl></parameter>, <parameter pos:start="1:189" pos:end="1:199"><decl pos:start="1:189" pos:end="1:199"><type pos:start="1:189" pos:end="1:199"><name pos:start="1:189" pos:end="1:191">int</name></type> <name pos:start="1:193" pos:end="1:199">mb_type</name></decl></parameter>, <parameter pos:start="1:202" pos:end="1:214"><decl pos:start="1:202" pos:end="1:214"><type pos:start="1:202" pos:end="1:214"><name pos:start="1:202" pos:end="1:204">int</name></type> <name pos:start="1:206" pos:end="1:214">mvy_limit</name></decl></parameter>, <parameter pos:start="1:217" pos:end="1:244"><decl pos:start="1:217" pos:end="1:244"><type pos:start="1:217" pos:end="1:244"><name pos:start="1:217" pos:end="1:219">int</name></type> <name pos:start="1:221" pos:end="1:244">first_vertical_edge_done</name></decl></parameter>, <parameter pos:start="1:247" pos:end="1:253"><decl pos:start="1:247" pos:end="1:253"><type pos:start="1:247" pos:end="1:253"><name pos:start="1:247" pos:end="1:249">int</name></type> <name pos:start="1:251" pos:end="1:253">dir</name></decl></parameter>)</parameter_list> <block pos:start="1:256" pos:end="395:1">{<block_content pos:start="3:5" pos:end="393:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">edge</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:57"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:20">mbm_xy</name> <init pos:start="7:22" pos:end="7:57">= <expr pos:start="7:24" pos:end="7:57"><ternary pos:start="7:24" pos:end="7:57"><condition pos:start="7:24" pos:end="7:33"><expr pos:start="7:24" pos:end="7:31"><name pos:start="7:24" pos:end="7:26">dir</name> <operator pos:start="7:28" pos:end="7:29">==</operator> <literal type="number" pos:start="7:31" pos:end="7:31">0</literal></expr> ?</condition><then pos:start="7:35" pos:end="7:42"> <expr pos:start="7:35" pos:end="7:42"><name pos:start="7:35" pos:end="7:39">mb_xy</name> <operator pos:start="7:41" pos:end="7:41">-</operator><literal type="number" pos:start="7:42" pos:end="7:42">1</literal></expr> </then><else pos:start="7:44" pos:end="7:57">: <expr pos:start="7:46" pos:end="7:57"><name pos:start="7:46" pos:end="7:57"><name pos:start="7:46" pos:end="7:46">h</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:57">top_mb_xy</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:65"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:22">mbm_type</name> <init pos:start="9:24" pos:end="9:65">= <expr pos:start="9:26" pos:end="9:65"><ternary pos:start="9:26" pos:end="9:65"><condition pos:start="9:26" pos:end="9:35"><expr pos:start="9:26" pos:end="9:33"><name pos:start="9:26" pos:end="9:28">dir</name> <operator pos:start="9:30" pos:end="9:31">==</operator> <literal type="number" pos:start="9:33" pos:end="9:33">0</literal></expr> ?</condition><then pos:start="9:37" pos:end="9:51"> <expr pos:start="9:37" pos:end="9:51"><name pos:start="9:37" pos:end="9:51"><name pos:start="9:37" pos:end="9:37">h</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:48">left_type</name><index pos:start="9:49" pos:end="9:51">[<expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">0</literal></expr>]</index></name></expr> </then><else pos:start="9:53" pos:end="9:65">: <expr pos:start="9:55" pos:end="9:65"><name pos:start="9:55" pos:end="9:65"><name pos:start="9:55" pos:end="9:55">h</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:65">top_type</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:68">// how often to recheck mv-based bS when iterating between edges</comment>

    <decl_stmt pos:start="15:5" pos:end="17:65"><decl pos:start="15:5" pos:end="17:64"><type pos:start="15:5" pos:end="15:24"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <specifier pos:start="15:12" pos:end="15:16">const</specifier> <name pos:start="15:18" pos:end="15:24">uint8_t</name></type> <name pos:start="15:26" pos:end="15:44"><name pos:start="15:26" pos:end="15:38">mask_edge_tab</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">2</literal></expr>]</index><index pos:start="15:42" pos:end="15:44">[<expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">8</literal></expr>]</index></name><init pos:start="15:45" pos:end="17:64">=<expr pos:start="15:46" pos:end="17:64"><block pos:start="15:46" pos:end="17:64">{<expr pos:start="15:47" pos:end="15:63"><block pos:start="15:47" pos:end="15:63">{<expr pos:start="15:48" pos:end="15:48"><literal type="number" pos:start="15:48" pos:end="15:48">0</literal></expr>,<expr pos:start="15:50" pos:end="15:50"><literal type="number" pos:start="15:50" pos:end="15:50">3</literal></expr>,<expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">3</literal></expr>,<expr pos:start="15:54" pos:end="15:54"><literal type="number" pos:start="15:54" pos:end="15:54">3</literal></expr>,<expr pos:start="15:56" pos:end="15:56"><literal type="number" pos:start="15:56" pos:end="15:56">1</literal></expr>,<expr pos:start="15:58" pos:end="15:58"><literal type="number" pos:start="15:58" pos:end="15:58">1</literal></expr>,<expr pos:start="15:60" pos:end="15:60"><literal type="number" pos:start="15:60" pos:end="15:60">1</literal></expr>,<expr pos:start="15:62" pos:end="15:62"><literal type="number" pos:start="15:62" pos:end="15:62">1</literal></expr>}</block></expr>,

                                              <expr pos:start="17:47" pos:end="17:63"><block pos:start="17:47" pos:end="17:63">{<expr pos:start="17:48" pos:end="17:48"><literal type="number" pos:start="17:48" pos:end="17:48">0</literal></expr>,<expr pos:start="17:50" pos:end="17:50"><literal type="number" pos:start="17:50" pos:end="17:50">3</literal></expr>,<expr pos:start="17:52" pos:end="17:52"><literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr>,<expr pos:start="17:54" pos:end="17:54"><literal type="number" pos:start="17:54" pos:end="17:54">1</literal></expr>,<expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">3</literal></expr>,<expr pos:start="17:58" pos:end="17:58"><literal type="number" pos:start="17:58" pos:end="17:58">3</literal></expr>,<expr pos:start="17:60" pos:end="17:60"><literal type="number" pos:start="17:60" pos:end="17:60">3</literal></expr>,<expr pos:start="17:62" pos:end="17:62"><literal type="number" pos:start="17:62" pos:end="17:62">3</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:61"><decl pos:start="19:5" pos:end="19:60"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:23">mask_edge</name> <init pos:start="19:25" pos:end="19:60">= <expr pos:start="19:27" pos:end="19:60"><name pos:start="19:27" pos:end="19:60"><name pos:start="19:27" pos:end="19:39">mask_edge_tab</name><index pos:start="19:40" pos:end="19:44">[<expr pos:start="19:41" pos:end="19:43"><name pos:start="19:41" pos:end="19:43">dir</name></expr>]</index><index pos:start="19:45" pos:end="19:60">[<expr pos:start="19:46" pos:end="19:59"><operator pos:start="19:46" pos:end="19:46">(</operator><name pos:start="19:47" pos:end="19:53">mb_type</name><operator pos:start="19:54" pos:end="19:55">&gt;&gt;</operator><literal type="number" pos:start="19:56" pos:end="19:56">3</literal><operator pos:start="19:57" pos:end="19:57">)</operator><operator pos:start="19:58" pos:end="19:58">&amp;</operator><literal type="number" pos:start="19:59" pos:end="19:59">7</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:60"><decl pos:start="21:5" pos:end="21:59"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:19">edges</name> <init pos:start="21:21" pos:end="21:59">= <expr pos:start="21:23" pos:end="21:59"><ternary pos:start="21:23" pos:end="21:59"><condition pos:start="21:23" pos:end="21:53"><expr pos:start="21:23" pos:end="21:51"><name pos:start="21:23" pos:end="21:31">mask_edge</name><operator pos:start="21:32" pos:end="21:33">==</operator> <literal type="number" pos:start="21:35" pos:end="21:35">3</literal> <operator pos:start="21:37" pos:end="21:38">&amp;&amp;</operator> <operator pos:start="21:40" pos:end="21:40">!</operator><operator pos:start="21:41" pos:end="21:41">(</operator><name pos:start="21:42" pos:end="21:47"><name pos:start="21:42" pos:end="21:42">h</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:47">cbp</name></name><operator pos:start="21:48" pos:end="21:48">&amp;</operator><literal type="number" pos:start="21:49" pos:end="21:50">15</literal><operator pos:start="21:51" pos:end="21:51">)</operator></expr> ?</condition><then pos:start="21:55" pos:end="21:55"> <expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">1</literal></expr> </then><else pos:start="21:57" pos:end="21:59">: <expr pos:start="21:59" pos:end="21:59"><literal type="number" pos:start="21:59" pos:end="21:59">4</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="25:5" pos:end="25:70">// how often to recheck mv-based bS when iterating along each edge</comment>

    <decl_stmt pos:start="27:5" pos:end="27:76"><decl pos:start="27:5" pos:end="27:75"><type pos:start="27:5" pos:end="27:13"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:13">int</name></type> <name pos:start="27:15" pos:end="27:23">mask_par0</name> <init pos:start="27:25" pos:end="27:75">= <expr pos:start="27:27" pos:end="27:75"><name pos:start="27:27" pos:end="27:33">mb_type</name> <operator pos:start="27:35" pos:end="27:35">&amp;</operator> <operator pos:start="27:37" pos:end="27:37">(</operator><name pos:start="27:38" pos:end="27:50">MB_TYPE_16x16</name> <operator pos:start="27:52" pos:end="27:52">|</operator> <operator pos:start="27:54" pos:end="27:54">(</operator><name pos:start="27:55" pos:end="27:66">MB_TYPE_8x16</name> <operator pos:start="27:68" pos:end="27:69">&gt;&gt;</operator> <name pos:start="27:71" pos:end="27:73">dir</name><operator pos:start="27:74" pos:end="27:74">)</operator><operator pos:start="27:75" pos:end="27:75">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="253:5"><if pos:start="31:5" pos:end="253:5">if<condition pos:start="31:7" pos:end="31:45">(<expr pos:start="31:8" pos:end="31:44"><name pos:start="31:8" pos:end="31:15">mbm_type</name> <operator pos:start="31:17" pos:end="31:18">&amp;&amp;</operator> <operator pos:start="31:20" pos:end="31:20">!</operator><name pos:start="31:21" pos:end="31:44">first_vertical_edge_done</name></expr>)</condition><block pos:start="31:46" pos:end="253:5">{<block_content pos:start="35:9" pos:end="251:9">



        <if_stmt pos:start="35:9" pos:end="251:9"><if pos:start="35:9" pos:end="105:9">if <condition pos:start="35:12" pos:end="39:13">(<expr pos:start="35:13" pos:end="37:47"><name pos:start="35:13" pos:end="35:23">FRAME_MBAFF</name> <operator pos:start="35:25" pos:end="35:26">&amp;&amp;</operator> <operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:31">dir</name> <operator pos:start="35:33" pos:end="35:34">==</operator> <literal type="number" pos:start="35:36" pos:end="35:36">1</literal><operator pos:start="35:37" pos:end="35:37">)</operator> <operator pos:start="35:39" pos:end="35:40">&amp;&amp;</operator> <operator pos:start="35:42" pos:end="35:42">(</operator><operator pos:start="35:43" pos:end="35:43">(</operator><name pos:start="35:44" pos:end="35:47">mb_y</name><operator pos:start="35:48" pos:end="35:48">&amp;</operator><literal type="number" pos:start="35:49" pos:end="35:49">1</literal><operator pos:start="35:50" pos:end="35:50">)</operator> <operator pos:start="35:52" pos:end="35:53">==</operator> <literal type="number" pos:start="35:55" pos:end="35:55">0</literal><operator pos:start="35:56" pos:end="35:56">)</operator>

            <operator pos:start="37:13" pos:end="37:14">&amp;&amp;</operator> <call pos:start="37:16" pos:end="37:47"><name pos:start="37:16" pos:end="37:28">IS_INTERLACED</name><argument_list pos:start="37:29" pos:end="37:47">(<argument pos:start="37:30" pos:end="37:46"><expr pos:start="37:30" pos:end="37:46"><name pos:start="37:30" pos:end="37:37">mbm_type</name><operator pos:start="37:38" pos:end="37:38">&amp;</operator><operator pos:start="37:39" pos:end="37:39">~</operator><name pos:start="37:40" pos:end="37:46">mb_type</name></expr></argument>)</argument_list></call></expr>

            )</condition> <block pos:start="39:15" pos:end="105:9">{<block_content pos:start="49:13" pos:end="103:13">

            <comment type="line" pos:start="41:13" pos:end="41:74">// This is a special case in the norm where the filtering must</comment>

            <comment type="line" pos:start="43:13" pos:end="43:72">// be done twice (one each of the field) even if we are in a</comment>

            <comment type="line" pos:start="45:13" pos:end="45:32">// frame macroblock.</comment>

            <comment type="line" pos:start="47:13" pos:end="47:14">//</comment>

            <decl_stmt pos:start="49:13" pos:end="49:57"><decl pos:start="49:13" pos:end="49:56"><type pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:20">unsigned</name> <name pos:start="49:22" pos:end="49:24">int</name></type> <name pos:start="49:26" pos:end="49:37">tmp_linesize</name>   <init pos:start="49:41" pos:end="49:56">= <expr pos:start="49:43" pos:end="49:56"><literal type="number" pos:start="49:43" pos:end="49:43">2</literal> <operator pos:start="49:45" pos:end="49:45">*</operator>   <name pos:start="49:49" pos:end="49:56">linesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:57"><decl pos:start="51:13" pos:end="51:56"><type pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:20">unsigned</name> <name pos:start="51:22" pos:end="51:24">int</name></type> <name pos:start="51:26" pos:end="51:39">tmp_uvlinesize</name> <init pos:start="51:41" pos:end="51:56">= <expr pos:start="51:43" pos:end="51:56"><literal type="number" pos:start="51:43" pos:end="51:43">2</literal> <operator pos:start="51:45" pos:end="51:45">*</operator> <name pos:start="51:47" pos:end="51:56">uvlinesize</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:50"><decl pos:start="53:13" pos:end="53:49"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:22">mbn_xy</name> <init pos:start="53:24" pos:end="53:49">= <expr pos:start="53:26" pos:end="53:49"><name pos:start="53:26" pos:end="53:30">mb_xy</name> <operator pos:start="53:32" pos:end="53:32">-</operator> <literal type="number" pos:start="53:34" pos:end="53:34">2</literal> <operator pos:start="53:36" pos:end="53:36">*</operator> <name pos:start="53:38" pos:end="53:49"><name pos:start="53:38" pos:end="53:38">s</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:49">mb_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:18"><decl pos:start="55:13" pos:end="55:17"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:17">j</name></decl>;</decl_stmt>



            <for pos:start="59:13" pos:end="103:13">for<control pos:start="59:16" pos:end="59:54">(<init pos:start="59:17" pos:end="59:20"><expr pos:start="59:17" pos:end="59:19"><name pos:start="59:17" pos:end="59:17">j</name><operator pos:start="59:18" pos:end="59:18">=</operator><literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>;</init> <condition pos:start="59:22" pos:end="59:25"><expr pos:start="59:22" pos:end="59:24"><name pos:start="59:22" pos:end="59:22">j</name><operator pos:start="59:23" pos:end="59:23">&lt;</operator><literal type="number" pos:start="59:24" pos:end="59:24">2</literal></expr>;</condition> <incr pos:start="59:27" pos:end="59:53"><expr pos:start="59:27" pos:end="59:29"><name pos:start="59:27" pos:end="59:27">j</name><operator pos:start="59:28" pos:end="59:29">++</operator></expr><operator pos:start="59:30" pos:end="59:30">,</operator> <expr pos:start="59:32" pos:end="59:53"><name pos:start="59:32" pos:end="59:37">mbn_xy</name> <operator pos:start="59:39" pos:end="59:40">+=</operator> <name pos:start="59:42" pos:end="59:53"><name pos:start="59:42" pos:end="59:42">s</name><operator pos:start="59:43" pos:end="59:44">-&gt;</operator><name pos:start="59:45" pos:end="59:53">mb_stride</name></name></expr></incr>)</control><block pos:start="59:55" pos:end="103:13">{<block_content pos:start="61:17" pos:end="101:130">

                <expr_stmt pos:start="61:17" pos:end="61:50"><expr pos:start="61:17" pos:end="61:49"><call pos:start="61:17" pos:end="61:46"><name pos:start="61:17" pos:end="61:33">DECLARE_ALIGNED_8</name><argument_list pos:start="61:34" pos:end="61:46">(<argument pos:start="61:35" pos:end="61:41"><expr pos:start="61:35" pos:end="61:41"><name pos:start="61:35" pos:end="61:41">int16_t</name></expr></argument>, <argument pos:start="61:44" pos:end="61:45"><expr pos:start="61:44" pos:end="61:45"><name pos:start="61:44" pos:end="61:45">bS</name></expr></argument>)</argument_list></call><index pos:start="61:47" pos:end="61:49">[<expr pos:start="61:48" pos:end="61:48"><literal type="number" pos:start="61:48" pos:end="61:48">4</literal></expr>]</index></expr>;</expr_stmt>

                <decl_stmt pos:start="63:17" pos:end="63:23"><decl pos:start="63:17" pos:end="63:22"><type pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:19">int</name></type> <name pos:start="63:21" pos:end="63:22">qp</name></decl>;</decl_stmt>

                <if_stmt pos:start="65:17" pos:end="81:17"><if pos:start="65:17" pos:end="69:17">if<condition pos:start="65:19" pos:end="65:74">( <expr pos:start="65:21" pos:end="65:72"><call pos:start="65:21" pos:end="65:72"><name pos:start="65:21" pos:end="65:28">IS_INTRA</name><argument_list pos:start="65:29" pos:end="65:72">(<argument pos:start="65:30" pos:end="65:71"><expr pos:start="65:30" pos:end="65:71"><name pos:start="65:30" pos:end="65:36">mb_type</name><operator pos:start="65:37" pos:end="65:37">|</operator><name pos:start="65:38" pos:end="65:71"><name pos:start="65:38" pos:end="65:38">s</name><operator pos:start="65:39" pos:end="65:40">-&gt;</operator><name pos:start="65:41" pos:end="65:55">current_picture</name><operator pos:start="65:56" pos:end="65:56">.</operator><name pos:start="65:57" pos:end="65:63">mb_type</name><index pos:start="65:64" pos:end="65:71">[<expr pos:start="65:65" pos:end="65:70"><name pos:start="65:65" pos:end="65:70">mbn_xy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr> )</condition> <block pos:start="65:76" pos:end="69:17">{<block_content pos:start="67:21" pos:end="67:58">

                    <expr_stmt pos:start="67:21" pos:end="67:58"><expr pos:start="67:21" pos:end="67:57"><operator pos:start="67:21" pos:end="67:21">*</operator><operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:30">uint64_t</name><operator pos:start="67:31" pos:end="67:31">*</operator><operator pos:start="67:32" pos:end="67:32">)</operator><name pos:start="67:33" pos:end="67:34">bS</name><operator pos:start="67:35" pos:end="67:35">=</operator> <literal type="number" pos:start="67:37" pos:end="67:57">0x0003000300030003ULL</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="69:19" pos:end="81:17">else <block pos:start="69:24" pos:end="81:17">{<block_content pos:start="71:21" pos:end="79:21">

                    <decl_stmt pos:start="71:21" pos:end="71:79"><decl pos:start="71:21" pos:end="71:78"><type pos:start="71:21" pos:end="71:35"><specifier pos:start="71:21" pos:end="71:25">const</specifier> <name pos:start="71:27" pos:end="71:33">uint8_t</name> <modifier pos:start="71:35" pos:end="71:35">*</modifier></type><name pos:start="71:36" pos:end="71:42">mbn_nnz</name> <init pos:start="71:44" pos:end="71:78">= <expr pos:start="71:46" pos:end="71:78"><name pos:start="71:46" pos:end="71:70"><name pos:start="71:46" pos:end="71:46">h</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:62">non_zero_count</name><index pos:start="71:63" pos:end="71:70">[<expr pos:start="71:64" pos:end="71:69"><name pos:start="71:64" pos:end="71:69">mbn_xy</name></expr>]</index></name> <operator pos:start="71:72" pos:end="71:72">+</operator> <literal type="number" pos:start="71:74" pos:end="71:75">4</literal><operator pos:start="71:75" pos:end="71:75">+</operator><literal type="number" pos:start="71:76" pos:end="71:76">3</literal><operator pos:start="71:77" pos:end="71:77">*</operator><literal type="number" pos:start="71:78" pos:end="71:78">8</literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="71:81" pos:end="71:96">//FIXME  8x8dct?</comment>

                    <decl_stmt pos:start="73:21" pos:end="73:26"><decl pos:start="73:21" pos:end="73:25"><type pos:start="73:21" pos:end="73:23"><name pos:start="73:21" pos:end="73:23">int</name></type> <name pos:start="73:25" pos:end="73:25">i</name></decl>;</decl_stmt>

                    <for pos:start="75:21" pos:end="79:21">for<control pos:start="75:24" pos:end="75:44">( <init pos:start="75:26" pos:end="75:31"><expr pos:start="75:26" pos:end="75:30"><name pos:start="75:26" pos:end="75:26">i</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr>;</init> <condition pos:start="75:33" pos:end="75:38"><expr pos:start="75:33" pos:end="75:37"><name pos:start="75:33" pos:end="75:33">i</name> <operator pos:start="75:35" pos:end="75:35">&lt;</operator> <literal type="number" pos:start="75:37" pos:end="75:37">4</literal></expr>;</condition> <incr pos:start="75:40" pos:end="75:42"><expr pos:start="75:40" pos:end="75:42"><name pos:start="75:40" pos:end="75:40">i</name><operator pos:start="75:41" pos:end="75:42">++</operator></expr></incr> )</control> <block pos:start="75:46" pos:end="79:21">{<block_content pos:start="77:25" pos:end="77:89">

                        <expr_stmt pos:start="77:25" pos:end="77:89"><expr pos:start="77:25" pos:end="77:88"><name pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:26">bS</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><name pos:start="77:28" pos:end="77:28">i</name></expr>]</index></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:35">1</literal> <operator pos:start="77:35" pos:end="77:35">+</operator> <operator pos:start="77:37" pos:end="77:37">!</operator><operator pos:start="77:38" pos:end="77:38">!</operator><operator pos:start="77:39" pos:end="77:39">(</operator><name pos:start="77:40" pos:end="77:74"><name pos:start="77:40" pos:end="77:40">h</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:62">non_zero_count_cache</name><index pos:start="77:63" pos:end="77:74">[<expr pos:start="77:64" pos:end="77:73"><name pos:start="77:64" pos:end="77:71"><name pos:start="77:64" pos:end="77:68">scan8</name><index pos:start="77:69" pos:end="77:71">[<expr pos:start="77:70" pos:end="77:70"><literal type="number" pos:start="77:70" pos:end="77:70">0</literal></expr>]</index></name><operator pos:start="77:72" pos:end="77:72">+</operator><name pos:start="77:73" pos:end="77:73">i</name></expr>]</index></name> <operator pos:start="77:76" pos:end="77:76">|</operator> <name pos:start="77:78" pos:end="77:87"><name pos:start="77:78" pos:end="77:84">mbn_nnz</name><index pos:start="77:85" pos:end="77:87">[<expr pos:start="77:86" pos:end="77:86"><name pos:start="77:86" pos:end="77:86">i</name></expr>]</index></name><operator pos:start="77:88" pos:end="77:88">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

                <comment type="line" pos:start="83:17" pos:end="83:85">// Do not use s-&gt;qscale as luma quantizer because it has not the same</comment>

                <comment type="line" pos:start="85:17" pos:end="85:45">// value in IPCM macroblocks.</comment>

                <expr_stmt pos:start="87:17" pos:end="87:115"><expr pos:start="87:17" pos:end="87:114"><name pos:start="87:17" pos:end="87:18">qp</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <operator pos:start="87:22" pos:end="87:22">(</operator> <name pos:start="87:24" pos:end="87:61"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:41">current_picture</name><operator pos:start="87:42" pos:end="87:42">.</operator><name pos:start="87:43" pos:end="87:54">qscale_table</name><index pos:start="87:55" pos:end="87:61">[<expr pos:start="87:56" pos:end="87:60"><name pos:start="87:56" pos:end="87:60">mb_xy</name></expr>]</index></name> <operator pos:start="87:63" pos:end="87:63">+</operator> <name pos:start="87:65" pos:end="87:103"><name pos:start="87:65" pos:end="87:65">s</name><operator pos:start="87:66" pos:end="87:67">-&gt;</operator><name pos:start="87:68" pos:end="87:82">current_picture</name><operator pos:start="87:83" pos:end="87:83">.</operator><name pos:start="87:84" pos:end="87:95">qscale_table</name><index pos:start="87:96" pos:end="87:103">[<expr pos:start="87:97" pos:end="87:102"><name pos:start="87:97" pos:end="87:102">mbn_xy</name></expr>]</index></name> <operator pos:start="87:105" pos:end="87:105">+</operator> <literal type="number" pos:start="87:107" pos:end="87:107">1</literal> <operator pos:start="87:109" pos:end="87:109">)</operator> <operator pos:start="87:111" pos:end="87:112">&gt;&gt;</operator> <literal type="number" pos:start="87:114" pos:end="87:114">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:147"><expr pos:start="89:17" pos:end="89:146"><call pos:start="89:17" pos:end="89:146"><name pos:start="89:17" pos:end="89:23">tprintf</name><argument_list pos:start="89:24" pos:end="89:146">(<argument pos:start="89:25" pos:end="89:32"><expr pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:32"><name pos:start="89:25" pos:end="89:25">s</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:32">avctx</name></name></expr></argument>, <argument pos:start="89:35" pos:end="89:88"><expr pos:start="89:35" pos:end="89:88"><literal type="string" pos:start="89:35" pos:end="89:88">"filter mb:%d/%d dir:%d edge:%d, QPy:%d ls:%d uvls:%d"</literal></expr></argument>, <argument pos:start="89:91" pos:end="89:94"><expr pos:start="89:91" pos:end="89:94"><name pos:start="89:91" pos:end="89:94">mb_x</name></expr></argument>, <argument pos:start="89:97" pos:end="89:100"><expr pos:start="89:97" pos:end="89:100"><name pos:start="89:97" pos:end="89:100">mb_y</name></expr></argument>, <argument pos:start="89:103" pos:end="89:105"><expr pos:start="89:103" pos:end="89:105"><name pos:start="89:103" pos:end="89:105">dir</name></expr></argument>, <argument pos:start="89:108" pos:end="89:111"><expr pos:start="89:108" pos:end="89:111"><name pos:start="89:108" pos:end="89:111">edge</name></expr></argument>, <argument pos:start="89:114" pos:end="89:115"><expr pos:start="89:114" pos:end="89:115"><name pos:start="89:114" pos:end="89:115">qp</name></expr></argument>, <argument pos:start="89:118" pos:end="89:129"><expr pos:start="89:118" pos:end="89:129"><name pos:start="89:118" pos:end="89:129">tmp_linesize</name></expr></argument>, <argument pos:start="89:132" pos:end="89:145"><expr pos:start="89:132" pos:end="89:145"><name pos:start="89:132" pos:end="89:145">tmp_uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="91:17" pos:end="91:118">{<block_content pos:start="91:19" pos:end="91:116"> <decl_stmt pos:start="91:19" pos:end="91:24"><decl pos:start="91:19" pos:end="91:23"><type pos:start="91:19" pos:end="91:21"><name pos:start="91:19" pos:end="91:21">int</name></type> <name pos:start="91:23" pos:end="91:23">i</name></decl>;</decl_stmt> <for pos:start="91:26" pos:end="91:91">for <control pos:start="91:30" pos:end="91:48">(<init pos:start="91:31" pos:end="91:36"><expr pos:start="91:31" pos:end="91:35"><name pos:start="91:31" pos:end="91:31">i</name> <operator pos:start="91:33" pos:end="91:33">=</operator> <literal type="number" pos:start="91:35" pos:end="91:35">0</literal></expr>;</init> <condition pos:start="91:38" pos:end="91:43"><expr pos:start="91:38" pos:end="91:42"><name pos:start="91:38" pos:end="91:38">i</name> <operator pos:start="91:40" pos:end="91:40">&lt;</operator> <literal type="number" pos:start="91:42" pos:end="91:42">4</literal></expr>;</condition> <incr pos:start="91:45" pos:end="91:47"><expr pos:start="91:45" pos:end="91:47"><name pos:start="91:45" pos:end="91:45">i</name><operator pos:start="91:46" pos:end="91:47">++</operator></expr></incr>)</control><block type="pseudo" pos:start="91:50" pos:end="91:91"><block_content pos:start="91:50" pos:end="91:91"> <expr_stmt pos:start="91:50" pos:end="91:91"><expr pos:start="91:50" pos:end="91:90"><call pos:start="91:50" pos:end="91:90"><name pos:start="91:50" pos:end="91:56">tprintf</name><argument_list pos:start="91:57" pos:end="91:90">(<argument pos:start="91:58" pos:end="91:65"><expr pos:start="91:58" pos:end="91:65"><name pos:start="91:58" pos:end="91:65"><name pos:start="91:58" pos:end="91:58">s</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:65">avctx</name></name></expr></argument>, <argument pos:start="91:68" pos:end="91:79"><expr pos:start="91:68" pos:end="91:79"><literal type="string" pos:start="91:68" pos:end="91:79">" bS[%d]:%d"</literal></expr></argument>, <argument pos:start="91:82" pos:end="91:82"><expr pos:start="91:82" pos:end="91:82"><name pos:start="91:82" pos:end="91:82">i</name></expr></argument>, <argument pos:start="91:85" pos:end="91:89"><expr pos:start="91:85" pos:end="91:89"><name pos:start="91:85" pos:end="91:89"><name pos:start="91:85" pos:end="91:86">bS</name><index pos:start="91:87" pos:end="91:89">[<expr pos:start="91:88" pos:end="91:88"><name pos:start="91:88" pos:end="91:88">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <expr_stmt pos:start="91:93" pos:end="91:116"><expr pos:start="91:93" pos:end="91:115"><call pos:start="91:93" pos:end="91:115"><name pos:start="91:93" pos:end="91:99">tprintf</name><argument_list pos:start="91:100" pos:end="91:115">(<argument pos:start="91:101" pos:end="91:108"><expr pos:start="91:101" pos:end="91:108"><name pos:start="91:101" pos:end="91:108"><name pos:start="91:101" pos:end="91:101">s</name><operator pos:start="91:102" pos:end="91:103">-&gt;</operator><name pos:start="91:104" pos:end="91:108">avctx</name></name></expr></argument>, <argument pos:start="91:111" pos:end="91:114"><expr pos:start="91:111" pos:end="91:114"><literal type="string" pos:start="91:111" pos:end="91:114">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block>

                <expr_stmt pos:start="93:17" pos:end="93:79"><expr pos:start="93:17" pos:end="93:78"><call pos:start="93:17" pos:end="93:78"><name pos:start="93:17" pos:end="93:31">filter_mb_edgeh</name><argument_list pos:start="93:32" pos:end="93:78">( <argument pos:start="93:34" pos:end="93:51"><expr pos:start="93:34" pos:end="93:51"><operator pos:start="93:34" pos:end="93:34">&amp;</operator><name pos:start="93:35" pos:end="93:51"><name pos:start="93:35" pos:end="93:39">img_y</name><index pos:start="93:40" pos:end="93:51">[<expr pos:start="93:41" pos:end="93:50"><name pos:start="93:41" pos:end="93:41">j</name><operator pos:start="93:42" pos:end="93:42">*</operator><name pos:start="93:43" pos:end="93:50">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="93:54" pos:end="93:65"><expr pos:start="93:54" pos:end="93:65"><name pos:start="93:54" pos:end="93:65">tmp_linesize</name></expr></argument>, <argument pos:start="93:68" pos:end="93:69"><expr pos:start="93:68" pos:end="93:69"><name pos:start="93:68" pos:end="93:69">bS</name></expr></argument>, <argument pos:start="93:72" pos:end="93:73"><expr pos:start="93:72" pos:end="93:73"><name pos:start="93:72" pos:end="93:73">qp</name></expr></argument>, <argument pos:start="93:76" pos:end="93:76"><expr pos:start="93:76" pos:end="93:76"><name pos:start="93:76" pos:end="93:76">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="97:130"><expr pos:start="95:17" pos:end="97:129"><call pos:start="95:17" pos:end="97:129"><name pos:start="95:17" pos:end="95:32">filter_mb_edgech</name><argument_list pos:start="95:33" pos:end="97:129">( <argument pos:start="95:35" pos:end="95:55"><expr pos:start="95:35" pos:end="95:55"><operator pos:start="95:35" pos:end="95:35">&amp;</operator><name pos:start="95:36" pos:end="95:55"><name pos:start="95:36" pos:end="95:41">img_cb</name><index pos:start="95:42" pos:end="95:55">[<expr pos:start="95:43" pos:end="95:54"><name pos:start="95:43" pos:end="95:43">j</name><operator pos:start="95:44" pos:end="95:44">*</operator><name pos:start="95:45" pos:end="95:54">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="95:58" pos:end="95:71"><expr pos:start="95:58" pos:end="95:71"><name pos:start="95:58" pos:end="95:71">tmp_uvlinesize</name></expr></argument>, <argument pos:start="95:74" pos:end="95:75"><expr pos:start="95:74" pos:end="95:75"><name pos:start="95:74" pos:end="95:75">bS</name></expr></argument>,

                                <argument pos:start="97:33" pos:end="97:125"><expr pos:start="97:33" pos:end="97:125"><operator pos:start="97:33" pos:end="97:33">(</operator> <name pos:start="97:35" pos:end="97:49"><name pos:start="97:35" pos:end="97:35">h</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:46">chroma_qp</name><index pos:start="97:47" pos:end="97:49">[<expr pos:start="97:48" pos:end="97:48"><literal type="number" pos:start="97:48" pos:end="97:48">0</literal></expr>]</index></name> <operator pos:start="97:51" pos:end="97:51">+</operator> <call pos:start="97:53" pos:end="97:114"><name pos:start="97:53" pos:end="97:65">get_chroma_qp</name><argument_list pos:start="97:66" pos:end="97:114">( <argument pos:start="97:68" pos:end="97:68"><expr pos:start="97:68" pos:end="97:68"><name pos:start="97:68" pos:end="97:68">h</name></expr></argument>, <argument pos:start="97:71" pos:end="97:71"><expr pos:start="97:71" pos:end="97:71"><literal type="number" pos:start="97:71" pos:end="97:71">0</literal></expr></argument>, <argument pos:start="97:74" pos:end="97:112"><expr pos:start="97:74" pos:end="97:112"><name pos:start="97:74" pos:end="97:112"><name pos:start="97:74" pos:end="97:74">s</name><operator pos:start="97:75" pos:end="97:76">-&gt;</operator><name pos:start="97:77" pos:end="97:91">current_picture</name><operator pos:start="97:92" pos:end="97:92">.</operator><name pos:start="97:93" pos:end="97:104">qscale_table</name><index pos:start="97:105" pos:end="97:112">[<expr pos:start="97:106" pos:end="97:111"><name pos:start="97:106" pos:end="97:111">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="97:116" pos:end="97:116">+</operator> <literal type="number" pos:start="97:118" pos:end="97:118">1</literal> <operator pos:start="97:120" pos:end="97:120">)</operator> <operator pos:start="97:122" pos:end="97:123">&gt;&gt;</operator> <literal type="number" pos:start="97:125" pos:end="97:125">1</literal></expr></argument>, <argument pos:start="97:128" pos:end="97:128"><expr pos:start="97:128" pos:end="97:128"><name pos:start="97:128" pos:end="97:128">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="101:130"><expr pos:start="99:17" pos:end="101:129"><call pos:start="99:17" pos:end="101:129"><name pos:start="99:17" pos:end="99:32">filter_mb_edgech</name><argument_list pos:start="99:33" pos:end="101:129">( <argument pos:start="99:35" pos:end="99:55"><expr pos:start="99:35" pos:end="99:55"><operator pos:start="99:35" pos:end="99:35">&amp;</operator><name pos:start="99:36" pos:end="99:55"><name pos:start="99:36" pos:end="99:41">img_cr</name><index pos:start="99:42" pos:end="99:55">[<expr pos:start="99:43" pos:end="99:54"><name pos:start="99:43" pos:end="99:43">j</name><operator pos:start="99:44" pos:end="99:44">*</operator><name pos:start="99:45" pos:end="99:54">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="99:58" pos:end="99:71"><expr pos:start="99:58" pos:end="99:71"><name pos:start="99:58" pos:end="99:71">tmp_uvlinesize</name></expr></argument>, <argument pos:start="99:74" pos:end="99:75"><expr pos:start="99:74" pos:end="99:75"><name pos:start="99:74" pos:end="99:75">bS</name></expr></argument>,

                                <argument pos:start="101:33" pos:end="101:125"><expr pos:start="101:33" pos:end="101:125"><operator pos:start="101:33" pos:end="101:33">(</operator> <name pos:start="101:35" pos:end="101:49"><name pos:start="101:35" pos:end="101:35">h</name><operator pos:start="101:36" pos:end="101:37">-&gt;</operator><name pos:start="101:38" pos:end="101:46">chroma_qp</name><index pos:start="101:47" pos:end="101:49">[<expr pos:start="101:48" pos:end="101:48"><literal type="number" pos:start="101:48" pos:end="101:48">1</literal></expr>]</index></name> <operator pos:start="101:51" pos:end="101:51">+</operator> <call pos:start="101:53" pos:end="101:114"><name pos:start="101:53" pos:end="101:65">get_chroma_qp</name><argument_list pos:start="101:66" pos:end="101:114">( <argument pos:start="101:68" pos:end="101:68"><expr pos:start="101:68" pos:end="101:68"><name pos:start="101:68" pos:end="101:68">h</name></expr></argument>, <argument pos:start="101:71" pos:end="101:71"><expr pos:start="101:71" pos:end="101:71"><literal type="number" pos:start="101:71" pos:end="101:71">1</literal></expr></argument>, <argument pos:start="101:74" pos:end="101:112"><expr pos:start="101:74" pos:end="101:112"><name pos:start="101:74" pos:end="101:112"><name pos:start="101:74" pos:end="101:74">s</name><operator pos:start="101:75" pos:end="101:76">-&gt;</operator><name pos:start="101:77" pos:end="101:91">current_picture</name><operator pos:start="101:92" pos:end="101:92">.</operator><name pos:start="101:93" pos:end="101:104">qscale_table</name><index pos:start="101:105" pos:end="101:112">[<expr pos:start="101:106" pos:end="101:111"><name pos:start="101:106" pos:end="101:111">mbn_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="101:116" pos:end="101:116">+</operator> <literal type="number" pos:start="101:118" pos:end="101:118">1</literal> <operator pos:start="101:120" pos:end="101:120">)</operator> <operator pos:start="101:122" pos:end="101:123">&gt;&gt;</operator> <literal type="number" pos:start="101:125" pos:end="101:125">1</literal></expr></argument>, <argument pos:start="101:128" pos:end="101:128"><expr pos:start="101:128" pos:end="101:128"><name pos:start="101:128" pos:end="101:128">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if><else pos:start="105:10" pos:end="251:9">else<block pos:start="105:14" pos:end="251:9">{<block_content pos:start="107:13" pos:end="249:13">

            <expr_stmt pos:start="107:13" pos:end="107:46"><expr pos:start="107:13" pos:end="107:45"><call pos:start="107:13" pos:end="107:42"><name pos:start="107:13" pos:end="107:29">DECLARE_ALIGNED_8</name><argument_list pos:start="107:30" pos:end="107:42">(<argument pos:start="107:31" pos:end="107:37"><expr pos:start="107:31" pos:end="107:37"><name pos:start="107:31" pos:end="107:37">int16_t</name></expr></argument>, <argument pos:start="107:40" pos:end="107:41"><expr pos:start="107:40" pos:end="107:41"><name pos:start="107:40" pos:end="107:41">bS</name></expr></argument>)</argument_list></call><index pos:start="107:43" pos:end="107:45">[<expr pos:start="107:44" pos:end="107:44"><literal type="number" pos:start="107:44" pos:end="107:44">4</literal></expr>]</index></expr>;</expr_stmt>

            <decl_stmt pos:start="109:13" pos:end="109:19"><decl pos:start="109:13" pos:end="109:18"><type pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:15">int</name></type> <name pos:start="109:17" pos:end="109:18">qp</name></decl>;</decl_stmt>



            <if_stmt pos:start="113:13" pos:end="191:13"><if pos:start="113:13" pos:end="125:13">if<condition pos:start="113:15" pos:end="113:43">( <expr pos:start="113:17" pos:end="113:42"><call pos:start="113:17" pos:end="113:42"><name pos:start="113:17" pos:end="113:24">IS_INTRA</name><argument_list pos:start="113:25" pos:end="113:42">(<argument pos:start="113:26" pos:end="113:41"><expr pos:start="113:26" pos:end="113:41"><name pos:start="113:26" pos:end="113:32">mb_type</name><operator pos:start="113:33" pos:end="113:33">|</operator><name pos:start="113:34" pos:end="113:41">mbm_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:45" pos:end="125:13">{<block_content pos:start="115:17" pos:end="123:58">

                <expr_stmt pos:start="115:17" pos:end="115:54"><expr pos:start="115:17" pos:end="115:53"><operator pos:start="115:17" pos:end="115:17">*</operator><operator pos:start="115:18" pos:end="115:18">(</operator><name pos:start="115:19" pos:end="115:26">uint64_t</name><operator pos:start="115:27" pos:end="115:27">*</operator><operator pos:start="115:28" pos:end="115:28">)</operator><name pos:start="115:29" pos:end="115:30">bS</name><operator pos:start="115:31" pos:end="115:31">=</operator> <literal type="number" pos:start="115:33" pos:end="115:53">0x0003000300030003ULL</literal></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="123:58"><if pos:start="117:17" pos:end="123:58">if <condition pos:start="117:20" pos:end="121:17">(   <expr pos:start="117:24" pos:end="119:92"><operator pos:start="117:24" pos:end="117:24">(</operator><operator pos:start="117:25" pos:end="117:25">!</operator><call pos:start="117:26" pos:end="117:56"><name pos:start="117:26" pos:end="117:38">IS_INTERLACED</name><argument_list pos:start="117:39" pos:end="117:56">(<argument pos:start="117:40" pos:end="117:55"><expr pos:start="117:40" pos:end="117:55"><name pos:start="117:40" pos:end="117:46">mb_type</name><operator pos:start="117:47" pos:end="117:47">|</operator><name pos:start="117:48" pos:end="117:55">mbm_type</name></expr></argument>)</argument_list></call><operator pos:start="117:57" pos:end="117:57">)</operator>

                    <operator pos:start="119:21" pos:end="119:22">||</operator> <operator pos:start="119:24" pos:end="119:24">(</operator><operator pos:start="119:25" pos:end="119:25">(</operator><name pos:start="119:26" pos:end="119:36">FRAME_MBAFF</name> <operator pos:start="119:38" pos:end="119:39">||</operator> <operator pos:start="119:41" pos:end="119:41">(</operator><name pos:start="119:42" pos:end="119:61"><name pos:start="119:42" pos:end="119:42">s</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:61">picture_structure</name></name> <operator pos:start="119:63" pos:end="119:64">!=</operator> <name pos:start="119:66" pos:end="119:75">PICT_FRAME</name><operator pos:start="119:76" pos:end="119:76">)</operator><operator pos:start="119:77" pos:end="119:77">)</operator> <operator pos:start="119:79" pos:end="119:80">&amp;&amp;</operator> <operator pos:start="119:82" pos:end="119:82">(</operator><name pos:start="119:83" pos:end="119:85">dir</name> <operator pos:start="119:87" pos:end="119:88">==</operator> <literal type="number" pos:start="119:90" pos:end="119:90">0</literal><operator pos:start="119:91" pos:end="119:91">)</operator><operator pos:start="119:92" pos:end="119:92">)</operator></expr>

                )</condition><block type="pseudo" pos:start="123:21" pos:end="123:58"><block_content pos:start="123:21" pos:end="123:58">

                    <expr_stmt pos:start="123:21" pos:end="123:58"><expr pos:start="123:21" pos:end="123:57"><operator pos:start="123:21" pos:end="123:21">*</operator><operator pos:start="123:22" pos:end="123:22">(</operator><name pos:start="123:23" pos:end="123:30">uint64_t</name><operator pos:start="123:31" pos:end="123:31">*</operator><operator pos:start="123:32" pos:end="123:32">)</operator><name pos:start="123:33" pos:end="123:34">bS</name><operator pos:start="123:35" pos:end="123:35">=</operator> <literal type="number" pos:start="123:37" pos:end="123:57">0x0004000400040004ULL</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="125:15" pos:end="191:13">else <block pos:start="125:20" pos:end="191:13">{<block_content pos:start="127:17" pos:end="189:17">

                <decl_stmt pos:start="127:17" pos:end="127:25"><decl pos:start="127:17" pos:end="127:21"><type pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:19">int</name></type> <name pos:start="127:21" pos:end="127:21">i</name></decl>, <decl pos:start="127:24" pos:end="127:24"><type ref="prev" pos:start="127:17" pos:end="127:19"/><name pos:start="127:24" pos:end="127:24">l</name></decl>;</decl_stmt>

                <decl_stmt pos:start="129:17" pos:end="129:28"><decl pos:start="129:17" pos:end="129:27"><type pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:19">int</name></type> <name pos:start="129:21" pos:end="129:27">mv_done</name></decl>;</decl_stmt>



                <if_stmt pos:start="133:17" pos:end="157:32"><if pos:start="133:17" pos:end="139:17">if<condition pos:start="133:19" pos:end="133:76">( <expr pos:start="133:21" pos:end="133:75"><name pos:start="133:21" pos:end="133:23">dir</name> <operator pos:start="133:25" pos:end="133:26">&amp;&amp;</operator> <name pos:start="133:28" pos:end="133:38">FRAME_MBAFF</name> <operator pos:start="133:40" pos:end="133:41">&amp;&amp;</operator> <call pos:start="133:43" pos:end="133:75"><name pos:start="133:43" pos:end="133:55">IS_INTERLACED</name><argument_list pos:start="133:56" pos:end="133:75">(<argument pos:start="133:57" pos:end="133:74"><expr pos:start="133:57" pos:end="133:74"><name pos:start="133:57" pos:end="133:63">mb_type</name> <operator pos:start="133:65" pos:end="133:65">^</operator> <name pos:start="133:67" pos:end="133:74">mbm_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:78" pos:end="139:17">{<block_content pos:start="135:21" pos:end="137:32">

                    <expr_stmt pos:start="135:21" pos:end="135:58"><expr pos:start="135:21" pos:end="135:57"><operator pos:start="135:21" pos:end="135:21">*</operator><operator pos:start="135:22" pos:end="135:22">(</operator><name pos:start="135:23" pos:end="135:30">uint64_t</name><operator pos:start="135:31" pos:end="135:31">*</operator><operator pos:start="135:32" pos:end="135:32">)</operator><name pos:start="135:33" pos:end="135:34">bS</name><operator pos:start="135:35" pos:end="135:35">=</operator> <literal type="number" pos:start="135:37" pos:end="135:57">0x0001000100010001ULL</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="137:21" pos:end="137:32"><expr pos:start="137:21" pos:end="137:31"><name pos:start="137:21" pos:end="137:27">mv_done</name> <operator pos:start="137:29" pos:end="137:29">=</operator> <literal type="number" pos:start="137:31" pos:end="137:31">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <if type="elseif" pos:start="141:17" pos:end="153:17">else if<condition pos:start="141:24" pos:end="141:94">( <expr pos:start="141:26" pos:end="141:92"><name pos:start="141:26" pos:end="141:34">mask_par0</name> <operator pos:start="141:36" pos:end="141:37">&amp;&amp;</operator> <operator pos:start="141:39" pos:end="141:39">(</operator><operator pos:start="141:40" pos:end="141:40">(</operator><name pos:start="141:41" pos:end="141:48">mbm_type</name> <operator pos:start="141:50" pos:end="141:50">&amp;</operator> <operator pos:start="141:52" pos:end="141:52">(</operator><name pos:start="141:53" pos:end="141:65">MB_TYPE_16x16</name> <operator pos:start="141:67" pos:end="141:67">|</operator> <operator pos:start="141:69" pos:end="141:69">(</operator><name pos:start="141:70" pos:end="141:81">MB_TYPE_8x16</name> <operator pos:start="141:83" pos:end="141:84">&gt;&gt;</operator> <name pos:start="141:86" pos:end="141:88">dir</name><operator pos:start="141:89" pos:end="141:89">)</operator><operator pos:start="141:90" pos:end="141:90">)</operator><operator pos:start="141:91" pos:end="141:91">)</operator><operator pos:start="141:92" pos:end="141:92">)</operator></expr> )</condition> <block pos:start="141:96" pos:end="153:17">{<block_content pos:start="143:21" pos:end="151:32">

                    <decl_stmt pos:start="143:21" pos:end="143:37"><decl pos:start="143:21" pos:end="143:36"><type pos:start="143:21" pos:end="143:23"><name pos:start="143:21" pos:end="143:23">int</name></type> <name pos:start="143:25" pos:end="143:29">b_idx</name><init pos:start="143:30" pos:end="143:36">= <expr pos:start="143:32" pos:end="143:36"><literal type="number" pos:start="143:32" pos:end="143:34">8</literal> <operator pos:start="143:34" pos:end="143:34">+</operator> <literal type="number" pos:start="143:36" pos:end="143:36">4</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="145:21" pos:end="145:52"><decl pos:start="145:21" pos:end="145:51"><type pos:start="145:21" pos:end="145:23"><name pos:start="145:21" pos:end="145:23">int</name></type> <name pos:start="145:25" pos:end="145:30">bn_idx</name><init pos:start="145:31" pos:end="145:51">= <expr pos:start="145:33" pos:end="145:51"><name pos:start="145:33" pos:end="145:37">b_idx</name> <operator pos:start="145:39" pos:end="145:39">-</operator> <operator pos:start="145:41" pos:end="145:41">(</operator><ternary pos:start="145:42" pos:end="145:50"><condition pos:start="145:42" pos:end="145:46"><expr pos:start="145:42" pos:end="145:44"><name pos:start="145:42" pos:end="145:44">dir</name></expr> ?</condition><then pos:start="145:48" pos:end="145:48"> <expr pos:start="145:48" pos:end="145:48"><literal type="number" pos:start="145:48" pos:end="145:48">8</literal></expr></then><else pos:start="145:49" pos:end="145:50">:<expr pos:start="145:50" pos:end="145:50"><literal type="number" pos:start="145:50" pos:end="145:50">1</literal></expr></else></ternary><operator pos:start="145:51" pos:end="145:51">)</operator></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="149:21" pos:end="149:90"><expr pos:start="149:21" pos:end="149:89"><name pos:start="149:21" pos:end="149:25"><name pos:start="149:21" pos:end="149:22">bS</name><index pos:start="149:23" pos:end="149:25">[<expr pos:start="149:24" pos:end="149:24"><literal type="number" pos:start="149:24" pos:end="149:24">0</literal></expr>]</index></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:33"><name pos:start="149:29" pos:end="149:30">bS</name><index pos:start="149:31" pos:end="149:33">[<expr pos:start="149:32" pos:end="149:32"><literal type="number" pos:start="149:32" pos:end="149:32">1</literal></expr>]</index></name> <operator pos:start="149:35" pos:end="149:35">=</operator> <name pos:start="149:37" pos:end="149:41"><name pos:start="149:37" pos:end="149:38">bS</name><index pos:start="149:39" pos:end="149:41">[<expr pos:start="149:40" pos:end="149:40"><literal type="number" pos:start="149:40" pos:end="149:40">2</literal></expr>]</index></name> <operator pos:start="149:43" pos:end="149:43">=</operator> <name pos:start="149:45" pos:end="149:49"><name pos:start="149:45" pos:end="149:46">bS</name><index pos:start="149:47" pos:end="149:49">[<expr pos:start="149:48" pos:end="149:48"><literal type="number" pos:start="149:48" pos:end="149:48">3</literal></expr>]</index></name> <operator pos:start="149:51" pos:end="149:51">=</operator> <call pos:start="149:53" pos:end="149:89"><name pos:start="149:53" pos:end="149:60">check_mv</name><argument_list pos:start="149:61" pos:end="149:89">(<argument pos:start="149:62" pos:end="149:62"><expr pos:start="149:62" pos:end="149:62"><name pos:start="149:62" pos:end="149:62">h</name></expr></argument>, <argument pos:start="149:65" pos:end="149:69"><expr pos:start="149:65" pos:end="149:69"><literal type="number" pos:start="149:65" pos:end="149:67">8</literal> <operator pos:start="149:67" pos:end="149:67">+</operator> <literal type="number" pos:start="149:69" pos:end="149:69">4</literal></expr></argument>, <argument pos:start="149:72" pos:end="149:77"><expr pos:start="149:72" pos:end="149:77"><name pos:start="149:72" pos:end="149:77">bn_idx</name></expr></argument>, <argument pos:start="149:80" pos:end="149:88"><expr pos:start="149:80" pos:end="149:88"><name pos:start="149:80" pos:end="149:88">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:32"><expr pos:start="151:21" pos:end="151:31"><name pos:start="151:21" pos:end="151:27">mv_done</name> <operator pos:start="151:29" pos:end="151:29">=</operator> <literal type="number" pos:start="151:31" pos:end="151:31">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <else pos:start="155:17" pos:end="157:32">else<block type="pseudo" pos:start="157:21" pos:end="157:32"><block_content pos:start="157:21" pos:end="157:32">

                    <expr_stmt pos:start="157:21" pos:end="157:32"><expr pos:start="157:21" pos:end="157:31"><name pos:start="157:21" pos:end="157:27">mv_done</name> <operator pos:start="157:29" pos:end="157:29">=</operator> <literal type="number" pos:start="157:31" pos:end="157:31">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <for pos:start="161:17" pos:end="189:17">for<control pos:start="161:20" pos:end="161:40">( <init pos:start="161:22" pos:end="161:27"><expr pos:start="161:22" pos:end="161:26"><name pos:start="161:22" pos:end="161:22">i</name> <operator pos:start="161:24" pos:end="161:24">=</operator> <literal type="number" pos:start="161:26" pos:end="161:26">0</literal></expr>;</init> <condition pos:start="161:29" pos:end="161:34"><expr pos:start="161:29" pos:end="161:33"><name pos:start="161:29" pos:end="161:29">i</name> <operator pos:start="161:31" pos:end="161:31">&lt;</operator> <literal type="number" pos:start="161:33" pos:end="161:33">4</literal></expr>;</condition> <incr pos:start="161:36" pos:end="161:38"><expr pos:start="161:36" pos:end="161:38"><name pos:start="161:36" pos:end="161:36">i</name><operator pos:start="161:37" pos:end="161:38">++</operator></expr></incr> )</control> <block pos:start="161:42" pos:end="189:17">{<block_content pos:start="163:21" pos:end="187:21">

                    <decl_stmt pos:start="163:21" pos:end="163:45"><decl pos:start="163:21" pos:end="163:44"><type pos:start="163:21" pos:end="163:23"><name pos:start="163:21" pos:end="163:23">int</name></type> <name pos:start="163:25" pos:end="163:25">x</name> <init pos:start="163:27" pos:end="163:44">= <expr pos:start="163:29" pos:end="163:44"><ternary pos:start="163:29" pos:end="163:44"><condition pos:start="163:29" pos:end="163:38"><expr pos:start="163:29" pos:end="163:36"><name pos:start="163:29" pos:end="163:31">dir</name> <operator pos:start="163:33" pos:end="163:34">==</operator> <literal type="number" pos:start="163:36" pos:end="163:36">0</literal></expr> ?</condition><then pos:start="163:40" pos:end="163:40"> <expr pos:start="163:40" pos:end="163:40"><literal type="number" pos:start="163:40" pos:end="163:40">0</literal></expr> </then><else pos:start="163:42" pos:end="163:44">: <expr pos:start="163:44" pos:end="163:44"><name pos:start="163:44" pos:end="163:44">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="165:21" pos:end="165:48"><decl pos:start="165:21" pos:end="165:47"><type pos:start="165:21" pos:end="165:23"><name pos:start="165:21" pos:end="165:23">int</name></type> <name pos:start="165:25" pos:end="165:25">y</name> <init pos:start="165:27" pos:end="165:47">= <expr pos:start="165:29" pos:end="165:47"><ternary pos:start="165:29" pos:end="165:47"><condition pos:start="165:29" pos:end="165:38"><expr pos:start="165:29" pos:end="165:36"><name pos:start="165:29" pos:end="165:31">dir</name> <operator pos:start="165:33" pos:end="165:34">==</operator> <literal type="number" pos:start="165:36" pos:end="165:36">0</literal></expr> ?</condition><then pos:start="165:40" pos:end="165:40"> <expr pos:start="165:40" pos:end="165:40"><name pos:start="165:40" pos:end="165:40">i</name></expr>    </then><else pos:start="165:45" pos:end="165:47">: <expr pos:start="165:47" pos:end="165:47"><literal type="number" pos:start="165:47" pos:end="165:47">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="167:21" pos:end="167:47"><decl pos:start="167:21" pos:end="167:46"><type pos:start="167:21" pos:end="167:23"><name pos:start="167:21" pos:end="167:23">int</name></type> <name pos:start="167:25" pos:end="167:29">b_idx</name><init pos:start="167:30" pos:end="167:46">= <expr pos:start="167:32" pos:end="167:46"><literal type="number" pos:start="167:32" pos:end="167:34">8</literal> <operator pos:start="167:34" pos:end="167:34">+</operator> <literal type="number" pos:start="167:36" pos:end="167:38">4</literal> <operator pos:start="167:38" pos:end="167:38">+</operator> <name pos:start="167:40" pos:end="167:40">x</name> <operator pos:start="167:42" pos:end="167:42">+</operator> <literal type="number" pos:start="167:44" pos:end="167:44">8</literal><operator pos:start="167:45" pos:end="167:45">*</operator><name pos:start="167:46" pos:end="167:46">y</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="169:21" pos:end="169:52"><decl pos:start="169:21" pos:end="169:51"><type pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:23">int</name></type> <name pos:start="169:25" pos:end="169:30">bn_idx</name><init pos:start="169:31" pos:end="169:51">= <expr pos:start="169:33" pos:end="169:51"><name pos:start="169:33" pos:end="169:37">b_idx</name> <operator pos:start="169:39" pos:end="169:39">-</operator> <operator pos:start="169:41" pos:end="169:41">(</operator><ternary pos:start="169:42" pos:end="169:50"><condition pos:start="169:42" pos:end="169:46"><expr pos:start="169:42" pos:end="169:44"><name pos:start="169:42" pos:end="169:44">dir</name></expr> ?</condition><then pos:start="169:48" pos:end="169:48"> <expr pos:start="169:48" pos:end="169:48"><literal type="number" pos:start="169:48" pos:end="169:48">8</literal></expr></then><else pos:start="169:49" pos:end="169:50">:<expr pos:start="169:50" pos:end="169:50"><literal type="number" pos:start="169:50" pos:end="169:50">1</literal></expr></else></ternary><operator pos:start="169:51" pos:end="169:51">)</operator></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="173:21" pos:end="187:21"><if pos:start="173:21" pos:end="179:21">if<condition pos:start="173:23" pos:end="175:57">( <expr pos:start="173:25" pos:end="175:55"><name pos:start="173:25" pos:end="173:54"><name pos:start="173:25" pos:end="173:25">h</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:47">non_zero_count_cache</name><index pos:start="173:48" pos:end="173:54">[<expr pos:start="173:49" pos:end="173:53"><name pos:start="173:49" pos:end="173:53">b_idx</name></expr>]</index></name> <operator pos:start="173:56" pos:end="173:56">|</operator>

                        <name pos:start="175:25" pos:end="175:55"><name pos:start="175:25" pos:end="175:25">h</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:47">non_zero_count_cache</name><index pos:start="175:48" pos:end="175:55">[<expr pos:start="175:49" pos:end="175:54"><name pos:start="175:49" pos:end="175:54">bn_idx</name></expr>]</index></name></expr> )</condition> <block pos:start="175:59" pos:end="179:21">{<block_content pos:start="177:25" pos:end="177:34">

                        <expr_stmt pos:start="177:25" pos:end="177:34"><expr pos:start="177:25" pos:end="177:33"><name pos:start="177:25" pos:end="177:29"><name pos:start="177:25" pos:end="177:26">bS</name><index pos:start="177:27" pos:end="177:29">[<expr pos:start="177:28" pos:end="177:28"><name pos:start="177:28" pos:end="177:28">i</name></expr>]</index></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <literal type="number" pos:start="177:33" pos:end="177:33">2</literal></expr>;</expr_stmt>

                    </block_content>}</block></if>

                    <if type="elseif" pos:start="181:21" pos:end="187:21">else if<condition pos:start="181:28" pos:end="181:37">(<expr pos:start="181:29" pos:end="181:36"><operator pos:start="181:29" pos:end="181:29">!</operator><name pos:start="181:30" pos:end="181:36">mv_done</name></expr>)</condition>

                    <block pos:start="183:21" pos:end="187:21">{<block_content pos:start="185:25" pos:end="185:70">

                        <expr_stmt pos:start="185:25" pos:end="185:70"><expr pos:start="185:25" pos:end="185:69"><name pos:start="185:25" pos:end="185:29"><name pos:start="185:25" pos:end="185:26">bS</name><index pos:start="185:27" pos:end="185:29">[<expr pos:start="185:28" pos:end="185:28"><name pos:start="185:28" pos:end="185:28">i</name></expr>]</index></name> <operator pos:start="185:31" pos:end="185:31">=</operator> <call pos:start="185:33" pos:end="185:69"><name pos:start="185:33" pos:end="185:40">check_mv</name><argument_list pos:start="185:41" pos:end="185:69">(<argument pos:start="185:42" pos:end="185:42"><expr pos:start="185:42" pos:end="185:42"><name pos:start="185:42" pos:end="185:42">h</name></expr></argument>, <argument pos:start="185:45" pos:end="185:49"><expr pos:start="185:45" pos:end="185:49"><name pos:start="185:45" pos:end="185:49">b_idx</name></expr></argument>, <argument pos:start="185:52" pos:end="185:57"><expr pos:start="185:52" pos:end="185:57"><name pos:start="185:52" pos:end="185:57">bn_idx</name></expr></argument>, <argument pos:start="185:60" pos:end="185:68"><expr pos:start="185:60" pos:end="185:68"><name pos:start="185:60" pos:end="185:68">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="195:13" pos:end="195:29">/* Filter edge */</comment>

            <comment type="line" pos:start="197:13" pos:end="197:81">// Do not use s-&gt;qscale as luma quantizer because it has not the same</comment>

            <comment type="line" pos:start="199:13" pos:end="199:41">// value in IPCM macroblocks.</comment>

            <if_stmt pos:start="201:13" pos:end="249:13"><if pos:start="201:13" pos:end="249:13">if<condition pos:start="201:15" pos:end="201:39">(<expr pos:start="201:16" pos:end="201:38"><name pos:start="201:16" pos:end="201:20"><name pos:start="201:16" pos:end="201:17">bS</name><index pos:start="201:18" pos:end="201:20">[<expr pos:start="201:19" pos:end="201:19"><literal type="number" pos:start="201:19" pos:end="201:19">0</literal></expr>]</index></name><operator pos:start="201:21" pos:end="201:21">+</operator><name pos:start="201:22" pos:end="201:26"><name pos:start="201:22" pos:end="201:23">bS</name><index pos:start="201:24" pos:end="201:26">[<expr pos:start="201:25" pos:end="201:25"><literal type="number" pos:start="201:25" pos:end="201:25">1</literal></expr>]</index></name><operator pos:start="201:27" pos:end="201:27">+</operator><name pos:start="201:28" pos:end="201:32"><name pos:start="201:28" pos:end="201:29">bS</name><index pos:start="201:30" pos:end="201:32">[<expr pos:start="201:31" pos:end="201:31"><literal type="number" pos:start="201:31" pos:end="201:31">2</literal></expr>]</index></name><operator pos:start="201:33" pos:end="201:33">+</operator><name pos:start="201:34" pos:end="201:38"><name pos:start="201:34" pos:end="201:35">bS</name><index pos:start="201:36" pos:end="201:38">[<expr pos:start="201:37" pos:end="201:37"><literal type="number" pos:start="201:37" pos:end="201:37">3</literal></expr>]</index></name></expr>)</condition><block pos:start="201:40" pos:end="249:13">{<block_content pos:start="203:17" pos:end="247:17">

                <expr_stmt pos:start="203:17" pos:end="203:115"><expr pos:start="203:17" pos:end="203:114"><name pos:start="203:17" pos:end="203:18">qp</name> <operator pos:start="203:20" pos:end="203:20">=</operator> <operator pos:start="203:22" pos:end="203:22">(</operator> <name pos:start="203:24" pos:end="203:61"><name pos:start="203:24" pos:end="203:24">s</name><operator pos:start="203:25" pos:end="203:26">-&gt;</operator><name pos:start="203:27" pos:end="203:41">current_picture</name><operator pos:start="203:42" pos:end="203:42">.</operator><name pos:start="203:43" pos:end="203:54">qscale_table</name><index pos:start="203:55" pos:end="203:61">[<expr pos:start="203:56" pos:end="203:60"><name pos:start="203:56" pos:end="203:60">mb_xy</name></expr>]</index></name> <operator pos:start="203:63" pos:end="203:63">+</operator> <name pos:start="203:65" pos:end="203:103"><name pos:start="203:65" pos:end="203:65">s</name><operator pos:start="203:66" pos:end="203:67">-&gt;</operator><name pos:start="203:68" pos:end="203:82">current_picture</name><operator pos:start="203:83" pos:end="203:83">.</operator><name pos:start="203:84" pos:end="203:95">qscale_table</name><index pos:start="203:96" pos:end="203:103">[<expr pos:start="203:97" pos:end="203:102"><name pos:start="203:97" pos:end="203:102">mbm_xy</name></expr>]</index></name> <operator pos:start="203:105" pos:end="203:105">+</operator> <literal type="number" pos:start="203:107" pos:end="203:107">1</literal> <operator pos:start="203:109" pos:end="203:109">)</operator> <operator pos:start="203:111" pos:end="203:112">&gt;&gt;</operator> <literal type="number" pos:start="203:114" pos:end="203:114">1</literal></expr>;</expr_stmt>

                <comment type="line" pos:start="205:17" pos:end="205:182">//tprintf(s-&gt;avctx, "filter mb:%d/%d dir:%d edge:%d, QPy:%d, QPc:%d, QPcn:%d\n", mb_x, mb_y, dir, edge, qp, h-&gt;chroma_qp[0], s-&gt;current_picture.qscale_table[mbn_xy]);</comment>

                <expr_stmt pos:start="207:17" pos:end="207:139"><expr pos:start="207:17" pos:end="207:138"><call pos:start="207:17" pos:end="207:138"><name pos:start="207:17" pos:end="207:23">tprintf</name><argument_list pos:start="207:24" pos:end="207:138">(<argument pos:start="207:25" pos:end="207:32"><expr pos:start="207:25" pos:end="207:32"><name pos:start="207:25" pos:end="207:32"><name pos:start="207:25" pos:end="207:25">s</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:32">avctx</name></name></expr></argument>, <argument pos:start="207:35" pos:end="207:88"><expr pos:start="207:35" pos:end="207:88"><literal type="string" pos:start="207:35" pos:end="207:88">"filter mb:%d/%d dir:%d edge:%d, QPy:%d ls:%d uvls:%d"</literal></expr></argument>, <argument pos:start="207:91" pos:end="207:94"><expr pos:start="207:91" pos:end="207:94"><name pos:start="207:91" pos:end="207:94">mb_x</name></expr></argument>, <argument pos:start="207:97" pos:end="207:100"><expr pos:start="207:97" pos:end="207:100"><name pos:start="207:97" pos:end="207:100">mb_y</name></expr></argument>, <argument pos:start="207:103" pos:end="207:105"><expr pos:start="207:103" pos:end="207:105"><name pos:start="207:103" pos:end="207:105">dir</name></expr></argument>, <argument pos:start="207:108" pos:end="207:111"><expr pos:start="207:108" pos:end="207:111"><name pos:start="207:108" pos:end="207:111">edge</name></expr></argument>, <argument pos:start="207:114" pos:end="207:115"><expr pos:start="207:114" pos:end="207:115"><name pos:start="207:114" pos:end="207:115">qp</name></expr></argument>, <argument pos:start="207:118" pos:end="207:125"><expr pos:start="207:118" pos:end="207:125"><name pos:start="207:118" pos:end="207:125">linesize</name></expr></argument>, <argument pos:start="207:128" pos:end="207:137"><expr pos:start="207:128" pos:end="207:137"><name pos:start="207:128" pos:end="207:137">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:start="209:17" pos:end="209:120">//{ int i; for (i = 0; i &lt; 4; i++) tprintf(s-&gt;avctx, " bS[%d]:%d", i, bS[i]); tprintf(s-&gt;avctx, "\n"); }</comment>

                <if_stmt pos:start="211:17" pos:end="247:17"><if pos:start="211:17" pos:end="229:17">if<condition pos:start="211:19" pos:end="211:30">( <expr pos:start="211:21" pos:end="211:28"><name pos:start="211:21" pos:end="211:23">dir</name> <operator pos:start="211:25" pos:end="211:26">==</operator> <literal type="number" pos:start="211:28" pos:end="211:28">0</literal></expr> )</condition> <block pos:start="211:32" pos:end="229:17">{<block_content pos:start="213:21" pos:end="227:21">

                    <expr_stmt pos:start="213:21" pos:end="213:70"><expr pos:start="213:21" pos:end="213:69"><call pos:start="213:21" pos:end="213:69"><name pos:start="213:21" pos:end="213:35">filter_mb_edgev</name><argument_list pos:start="213:36" pos:end="213:69">( <argument pos:start="213:38" pos:end="213:46"><expr pos:start="213:38" pos:end="213:46"><operator pos:start="213:38" pos:end="213:38">&amp;</operator><name pos:start="213:39" pos:end="213:46"><name pos:start="213:39" pos:end="213:43">img_y</name><index pos:start="213:44" pos:end="213:46">[<expr pos:start="213:45" pos:end="213:45"><literal type="number" pos:start="213:45" pos:end="213:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:49" pos:end="213:56"><expr pos:start="213:49" pos:end="213:56"><name pos:start="213:49" pos:end="213:56">linesize</name></expr></argument>, <argument pos:start="213:59" pos:end="213:60"><expr pos:start="213:59" pos:end="213:60"><name pos:start="213:59" pos:end="213:60">bS</name></expr></argument>, <argument pos:start="213:63" pos:end="213:64"><expr pos:start="213:63" pos:end="213:64"><name pos:start="213:63" pos:end="213:64">qp</name></expr></argument>, <argument pos:start="213:67" pos:end="213:67"><expr pos:start="213:67" pos:end="213:67"><name pos:start="213:67" pos:end="213:67">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="215:21" pos:end="227:21">{<block_content pos:start="217:25" pos:end="225:77">

                        <decl_stmt pos:start="217:25" pos:end="217:126"><decl pos:start="217:25" pos:end="217:125"><type pos:start="217:25" pos:end="217:27"><name pos:start="217:25" pos:end="217:27">int</name></type> <name pos:start="217:29" pos:end="217:30">qp</name><init pos:start="217:31" pos:end="217:125">= <expr pos:start="217:33" pos:end="217:125"><operator pos:start="217:33" pos:end="217:33">(</operator> <name pos:start="217:35" pos:end="217:49"><name pos:start="217:35" pos:end="217:35">h</name><operator pos:start="217:36" pos:end="217:37">-&gt;</operator><name pos:start="217:38" pos:end="217:46">chroma_qp</name><index pos:start="217:47" pos:end="217:49">[<expr pos:start="217:48" pos:end="217:48"><literal type="number" pos:start="217:48" pos:end="217:48">0</literal></expr>]</index></name> <operator pos:start="217:51" pos:end="217:51">+</operator> <call pos:start="217:53" pos:end="217:114"><name pos:start="217:53" pos:end="217:65">get_chroma_qp</name><argument_list pos:start="217:66" pos:end="217:114">( <argument pos:start="217:68" pos:end="217:68"><expr pos:start="217:68" pos:end="217:68"><name pos:start="217:68" pos:end="217:68">h</name></expr></argument>, <argument pos:start="217:71" pos:end="217:71"><expr pos:start="217:71" pos:end="217:71"><literal type="number" pos:start="217:71" pos:end="217:71">0</literal></expr></argument>, <argument pos:start="217:74" pos:end="217:112"><expr pos:start="217:74" pos:end="217:112"><name pos:start="217:74" pos:end="217:112"><name pos:start="217:74" pos:end="217:74">s</name><operator pos:start="217:75" pos:end="217:76">-&gt;</operator><name pos:start="217:77" pos:end="217:91">current_picture</name><operator pos:start="217:92" pos:end="217:92">.</operator><name pos:start="217:93" pos:end="217:104">qscale_table</name><index pos:start="217:105" pos:end="217:112">[<expr pos:start="217:106" pos:end="217:111"><name pos:start="217:106" pos:end="217:111">mbm_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="217:116" pos:end="217:116">+</operator> <literal type="number" pos:start="217:118" pos:end="217:118">1</literal> <operator pos:start="217:120" pos:end="217:120">)</operator> <operator pos:start="217:122" pos:end="217:123">&gt;&gt;</operator> <literal type="number" pos:start="217:125" pos:end="217:125">1</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="219:25" pos:end="219:77"><expr pos:start="219:25" pos:end="219:76"><call pos:start="219:25" pos:end="219:76"><name pos:start="219:25" pos:end="219:40">filter_mb_edgecv</name><argument_list pos:start="219:41" pos:end="219:76">( <argument pos:start="219:43" pos:end="219:52"><expr pos:start="219:43" pos:end="219:52"><operator pos:start="219:43" pos:end="219:43">&amp;</operator><name pos:start="219:44" pos:end="219:52"><name pos:start="219:44" pos:end="219:49">img_cb</name><index pos:start="219:50" pos:end="219:52">[<expr pos:start="219:51" pos:end="219:51"><literal type="number" pos:start="219:51" pos:end="219:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="219:55" pos:end="219:64"><expr pos:start="219:55" pos:end="219:64"><name pos:start="219:55" pos:end="219:64">uvlinesize</name></expr></argument>, <argument pos:start="219:67" pos:end="219:68"><expr pos:start="219:67" pos:end="219:68"><name pos:start="219:67" pos:end="219:68">bS</name></expr></argument>, <argument pos:start="219:71" pos:end="219:72"><expr pos:start="219:71" pos:end="219:72"><name pos:start="219:71" pos:end="219:72">qp</name></expr></argument>, <argument pos:start="219:75" pos:end="219:75"><expr pos:start="219:75" pos:end="219:75"><name pos:start="219:75" pos:end="219:75">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="221:25" pos:end="223:126"><if pos:start="221:25" pos:end="223:126">if<condition pos:start="221:27" pos:end="221:49">(<expr pos:start="221:28" pos:end="221:48"><name pos:start="221:28" pos:end="221:48"><name pos:start="221:28" pos:end="221:28">h</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:33">pps</name><operator pos:start="221:34" pos:end="221:34">.</operator><name pos:start="221:35" pos:end="221:48">chroma_qp_diff</name></name></expr>)</condition><block type="pseudo" pos:start="223:29" pos:end="223:126"><block_content pos:start="223:29" pos:end="223:126">

                            <expr_stmt pos:start="223:29" pos:end="223:126"><expr pos:start="223:29" pos:end="223:125"><name pos:start="223:29" pos:end="223:30">qp</name><operator pos:start="223:31" pos:end="223:31">=</operator> <operator pos:start="223:33" pos:end="223:33">(</operator> <name pos:start="223:35" pos:end="223:49"><name pos:start="223:35" pos:end="223:35">h</name><operator pos:start="223:36" pos:end="223:37">-&gt;</operator><name pos:start="223:38" pos:end="223:46">chroma_qp</name><index pos:start="223:47" pos:end="223:49">[<expr pos:start="223:48" pos:end="223:48"><literal type="number" pos:start="223:48" pos:end="223:48">1</literal></expr>]</index></name> <operator pos:start="223:51" pos:end="223:51">+</operator> <call pos:start="223:53" pos:end="223:114"><name pos:start="223:53" pos:end="223:65">get_chroma_qp</name><argument_list pos:start="223:66" pos:end="223:114">( <argument pos:start="223:68" pos:end="223:68"><expr pos:start="223:68" pos:end="223:68"><name pos:start="223:68" pos:end="223:68">h</name></expr></argument>, <argument pos:start="223:71" pos:end="223:71"><expr pos:start="223:71" pos:end="223:71"><literal type="number" pos:start="223:71" pos:end="223:71">1</literal></expr></argument>, <argument pos:start="223:74" pos:end="223:112"><expr pos:start="223:74" pos:end="223:112"><name pos:start="223:74" pos:end="223:112"><name pos:start="223:74" pos:end="223:74">s</name><operator pos:start="223:75" pos:end="223:76">-&gt;</operator><name pos:start="223:77" pos:end="223:91">current_picture</name><operator pos:start="223:92" pos:end="223:92">.</operator><name pos:start="223:93" pos:end="223:104">qscale_table</name><index pos:start="223:105" pos:end="223:112">[<expr pos:start="223:106" pos:end="223:111"><name pos:start="223:106" pos:end="223:111">mbm_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="223:116" pos:end="223:116">+</operator> <literal type="number" pos:start="223:118" pos:end="223:118">1</literal> <operator pos:start="223:120" pos:end="223:120">)</operator> <operator pos:start="223:122" pos:end="223:123">&gt;&gt;</operator> <literal type="number" pos:start="223:125" pos:end="223:125">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="225:25" pos:end="225:77"><expr pos:start="225:25" pos:end="225:76"><call pos:start="225:25" pos:end="225:76"><name pos:start="225:25" pos:end="225:40">filter_mb_edgecv</name><argument_list pos:start="225:41" pos:end="225:76">( <argument pos:start="225:43" pos:end="225:52"><expr pos:start="225:43" pos:end="225:52"><operator pos:start="225:43" pos:end="225:43">&amp;</operator><name pos:start="225:44" pos:end="225:52"><name pos:start="225:44" pos:end="225:49">img_cr</name><index pos:start="225:50" pos:end="225:52">[<expr pos:start="225:51" pos:end="225:51"><literal type="number" pos:start="225:51" pos:end="225:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:55" pos:end="225:64"><expr pos:start="225:55" pos:end="225:64"><name pos:start="225:55" pos:end="225:64">uvlinesize</name></expr></argument>, <argument pos:start="225:67" pos:end="225:68"><expr pos:start="225:67" pos:end="225:68"><name pos:start="225:67" pos:end="225:68">bS</name></expr></argument>, <argument pos:start="225:71" pos:end="225:72"><expr pos:start="225:71" pos:end="225:72"><name pos:start="225:71" pos:end="225:72">qp</name></expr></argument>, <argument pos:start="225:75" pos:end="225:75"><expr pos:start="225:75" pos:end="225:75"><name pos:start="225:75" pos:end="225:75">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                </block_content>}</block></if> <else pos:start="229:19" pos:end="247:17">else <block pos:start="229:24" pos:end="247:17">{<block_content pos:start="231:21" pos:end="245:21">

                    <expr_stmt pos:start="231:21" pos:end="231:70"><expr pos:start="231:21" pos:end="231:69"><call pos:start="231:21" pos:end="231:69"><name pos:start="231:21" pos:end="231:35">filter_mb_edgeh</name><argument_list pos:start="231:36" pos:end="231:69">( <argument pos:start="231:38" pos:end="231:46"><expr pos:start="231:38" pos:end="231:46"><operator pos:start="231:38" pos:end="231:38">&amp;</operator><name pos:start="231:39" pos:end="231:46"><name pos:start="231:39" pos:end="231:43">img_y</name><index pos:start="231:44" pos:end="231:46">[<expr pos:start="231:45" pos:end="231:45"><literal type="number" pos:start="231:45" pos:end="231:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:49" pos:end="231:56"><expr pos:start="231:49" pos:end="231:56"><name pos:start="231:49" pos:end="231:56">linesize</name></expr></argument>, <argument pos:start="231:59" pos:end="231:60"><expr pos:start="231:59" pos:end="231:60"><name pos:start="231:59" pos:end="231:60">bS</name></expr></argument>, <argument pos:start="231:63" pos:end="231:64"><expr pos:start="231:63" pos:end="231:64"><name pos:start="231:63" pos:end="231:64">qp</name></expr></argument>, <argument pos:start="231:67" pos:end="231:67"><expr pos:start="231:67" pos:end="231:67"><name pos:start="231:67" pos:end="231:67">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                    <block pos:start="233:21" pos:end="245:21">{<block_content pos:start="235:25" pos:end="243:77">

                        <decl_stmt pos:start="235:25" pos:end="235:126"><decl pos:start="235:25" pos:end="235:125"><type pos:start="235:25" pos:end="235:27"><name pos:start="235:25" pos:end="235:27">int</name></type> <name pos:start="235:29" pos:end="235:30">qp</name><init pos:start="235:31" pos:end="235:125">= <expr pos:start="235:33" pos:end="235:125"><operator pos:start="235:33" pos:end="235:33">(</operator> <name pos:start="235:35" pos:end="235:49"><name pos:start="235:35" pos:end="235:35">h</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:46">chroma_qp</name><index pos:start="235:47" pos:end="235:49">[<expr pos:start="235:48" pos:end="235:48"><literal type="number" pos:start="235:48" pos:end="235:48">0</literal></expr>]</index></name> <operator pos:start="235:51" pos:end="235:51">+</operator> <call pos:start="235:53" pos:end="235:114"><name pos:start="235:53" pos:end="235:65">get_chroma_qp</name><argument_list pos:start="235:66" pos:end="235:114">( <argument pos:start="235:68" pos:end="235:68"><expr pos:start="235:68" pos:end="235:68"><name pos:start="235:68" pos:end="235:68">h</name></expr></argument>, <argument pos:start="235:71" pos:end="235:71"><expr pos:start="235:71" pos:end="235:71"><literal type="number" pos:start="235:71" pos:end="235:71">0</literal></expr></argument>, <argument pos:start="235:74" pos:end="235:112"><expr pos:start="235:74" pos:end="235:112"><name pos:start="235:74" pos:end="235:112"><name pos:start="235:74" pos:end="235:74">s</name><operator pos:start="235:75" pos:end="235:76">-&gt;</operator><name pos:start="235:77" pos:end="235:91">current_picture</name><operator pos:start="235:92" pos:end="235:92">.</operator><name pos:start="235:93" pos:end="235:104">qscale_table</name><index pos:start="235:105" pos:end="235:112">[<expr pos:start="235:106" pos:end="235:111"><name pos:start="235:106" pos:end="235:111">mbm_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="235:116" pos:end="235:116">+</operator> <literal type="number" pos:start="235:118" pos:end="235:118">1</literal> <operator pos:start="235:120" pos:end="235:120">)</operator> <operator pos:start="235:122" pos:end="235:123">&gt;&gt;</operator> <literal type="number" pos:start="235:125" pos:end="235:125">1</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="237:25" pos:end="237:77"><expr pos:start="237:25" pos:end="237:76"><call pos:start="237:25" pos:end="237:76"><name pos:start="237:25" pos:end="237:40">filter_mb_edgech</name><argument_list pos:start="237:41" pos:end="237:76">( <argument pos:start="237:43" pos:end="237:52"><expr pos:start="237:43" pos:end="237:52"><operator pos:start="237:43" pos:end="237:43">&amp;</operator><name pos:start="237:44" pos:end="237:52"><name pos:start="237:44" pos:end="237:49">img_cb</name><index pos:start="237:50" pos:end="237:52">[<expr pos:start="237:51" pos:end="237:51"><literal type="number" pos:start="237:51" pos:end="237:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="237:55" pos:end="237:64"><expr pos:start="237:55" pos:end="237:64"><name pos:start="237:55" pos:end="237:64">uvlinesize</name></expr></argument>, <argument pos:start="237:67" pos:end="237:68"><expr pos:start="237:67" pos:end="237:68"><name pos:start="237:67" pos:end="237:68">bS</name></expr></argument>, <argument pos:start="237:71" pos:end="237:72"><expr pos:start="237:71" pos:end="237:72"><name pos:start="237:71" pos:end="237:72">qp</name></expr></argument>, <argument pos:start="237:75" pos:end="237:75"><expr pos:start="237:75" pos:end="237:75"><name pos:start="237:75" pos:end="237:75">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="239:25" pos:end="241:126"><if pos:start="239:25" pos:end="241:126">if<condition pos:start="239:27" pos:end="239:49">(<expr pos:start="239:28" pos:end="239:48"><name pos:start="239:28" pos:end="239:48"><name pos:start="239:28" pos:end="239:28">h</name><operator pos:start="239:29" pos:end="239:30">-&gt;</operator><name pos:start="239:31" pos:end="239:33">pps</name><operator pos:start="239:34" pos:end="239:34">.</operator><name pos:start="239:35" pos:end="239:48">chroma_qp_diff</name></name></expr>)</condition><block type="pseudo" pos:start="241:29" pos:end="241:126"><block_content pos:start="241:29" pos:end="241:126">

                            <expr_stmt pos:start="241:29" pos:end="241:126"><expr pos:start="241:29" pos:end="241:125"><name pos:start="241:29" pos:end="241:30">qp</name><operator pos:start="241:31" pos:end="241:31">=</operator> <operator pos:start="241:33" pos:end="241:33">(</operator> <name pos:start="241:35" pos:end="241:49"><name pos:start="241:35" pos:end="241:35">h</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:46">chroma_qp</name><index pos:start="241:47" pos:end="241:49">[<expr pos:start="241:48" pos:end="241:48"><literal type="number" pos:start="241:48" pos:end="241:48">1</literal></expr>]</index></name> <operator pos:start="241:51" pos:end="241:51">+</operator> <call pos:start="241:53" pos:end="241:114"><name pos:start="241:53" pos:end="241:65">get_chroma_qp</name><argument_list pos:start="241:66" pos:end="241:114">( <argument pos:start="241:68" pos:end="241:68"><expr pos:start="241:68" pos:end="241:68"><name pos:start="241:68" pos:end="241:68">h</name></expr></argument>, <argument pos:start="241:71" pos:end="241:71"><expr pos:start="241:71" pos:end="241:71"><literal type="number" pos:start="241:71" pos:end="241:71">1</literal></expr></argument>, <argument pos:start="241:74" pos:end="241:112"><expr pos:start="241:74" pos:end="241:112"><name pos:start="241:74" pos:end="241:112"><name pos:start="241:74" pos:end="241:74">s</name><operator pos:start="241:75" pos:end="241:76">-&gt;</operator><name pos:start="241:77" pos:end="241:91">current_picture</name><operator pos:start="241:92" pos:end="241:92">.</operator><name pos:start="241:93" pos:end="241:104">qscale_table</name><index pos:start="241:105" pos:end="241:112">[<expr pos:start="241:106" pos:end="241:111"><name pos:start="241:106" pos:end="241:111">mbm_xy</name></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="241:116" pos:end="241:116">+</operator> <literal type="number" pos:start="241:118" pos:end="241:118">1</literal> <operator pos:start="241:120" pos:end="241:120">)</operator> <operator pos:start="241:122" pos:end="241:123">&gt;&gt;</operator> <literal type="number" pos:start="241:125" pos:end="241:125">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="243:25" pos:end="243:77"><expr pos:start="243:25" pos:end="243:76"><call pos:start="243:25" pos:end="243:76"><name pos:start="243:25" pos:end="243:40">filter_mb_edgech</name><argument_list pos:start="243:41" pos:end="243:76">( <argument pos:start="243:43" pos:end="243:52"><expr pos:start="243:43" pos:end="243:52"><operator pos:start="243:43" pos:end="243:43">&amp;</operator><name pos:start="243:44" pos:end="243:52"><name pos:start="243:44" pos:end="243:49">img_cr</name><index pos:start="243:50" pos:end="243:52">[<expr pos:start="243:51" pos:end="243:51"><literal type="number" pos:start="243:51" pos:end="243:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:55" pos:end="243:64"><expr pos:start="243:55" pos:end="243:64"><name pos:start="243:55" pos:end="243:64">uvlinesize</name></expr></argument>, <argument pos:start="243:67" pos:end="243:68"><expr pos:start="243:67" pos:end="243:68"><name pos:start="243:67" pos:end="243:68">bS</name></expr></argument>, <argument pos:start="243:71" pos:end="243:72"><expr pos:start="243:71" pos:end="243:72"><name pos:start="243:71" pos:end="243:72">qp</name></expr></argument>, <argument pos:start="243:75" pos:end="243:75"><expr pos:start="243:75" pos:end="243:75"><name pos:start="243:75" pos:end="243:75">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="257:5" pos:end="257:22">/* Calculate bS */</comment>

    <for pos:start="259:5" pos:end="393:5">for<control pos:start="259:8" pos:end="259:41">( <init pos:start="259:10" pos:end="259:18"><expr pos:start="259:10" pos:end="259:17"><name pos:start="259:10" pos:end="259:13">edge</name> <operator pos:start="259:15" pos:end="259:15">=</operator> <literal type="number" pos:start="259:17" pos:end="259:17">1</literal></expr>;</init> <condition pos:start="259:20" pos:end="259:32"><expr pos:start="259:20" pos:end="259:31"><name pos:start="259:20" pos:end="259:23">edge</name> <operator pos:start="259:25" pos:end="259:25">&lt;</operator> <name pos:start="259:27" pos:end="259:31">edges</name></expr>;</condition> <incr pos:start="259:34" pos:end="259:39"><expr pos:start="259:34" pos:end="259:39"><name pos:start="259:34" pos:end="259:37">edge</name><operator pos:start="259:38" pos:end="259:39">++</operator></expr></incr> )</control> <block pos:start="259:43" pos:end="393:5">{<block_content pos:start="261:9" pos:end="391:9">

        <expr_stmt pos:start="261:9" pos:end="261:42"><expr pos:start="261:9" pos:end="261:41"><call pos:start="261:9" pos:end="261:38"><name pos:start="261:9" pos:end="261:25">DECLARE_ALIGNED_8</name><argument_list pos:start="261:26" pos:end="261:38">(<argument pos:start="261:27" pos:end="261:33"><expr pos:start="261:27" pos:end="261:33"><name pos:start="261:27" pos:end="261:33">int16_t</name></expr></argument>, <argument pos:start="261:36" pos:end="261:37"><expr pos:start="261:36" pos:end="261:37"><name pos:start="261:36" pos:end="261:37">bS</name></expr></argument>)</argument_list></call><index pos:start="261:39" pos:end="261:41">[<expr pos:start="261:40" pos:end="261:40"><literal type="number" pos:start="261:40" pos:end="261:40">4</literal></expr>]</index></expr>;</expr_stmt>

        <decl_stmt pos:start="263:9" pos:end="263:15"><decl pos:start="263:9" pos:end="263:14"><type pos:start="263:9" pos:end="263:11"><name pos:start="263:9" pos:end="263:11">int</name></type> <name pos:start="263:13" pos:end="263:14">qp</name></decl>;</decl_stmt>



        <if_stmt pos:start="267:9" pos:end="269:21"><if pos:start="267:9" pos:end="269:21">if<condition pos:start="267:11" pos:end="267:45">( <expr pos:start="267:13" pos:end="267:43"><call pos:start="267:13" pos:end="267:43"><name pos:start="267:13" pos:end="267:21">IS_8x8DCT</name><argument_list pos:start="267:22" pos:end="267:43">(<argument pos:start="267:23" pos:end="267:42"><expr pos:start="267:23" pos:end="267:42"><name pos:start="267:23" pos:end="267:29">mb_type</name> <operator pos:start="267:31" pos:end="267:31">&amp;</operator> <operator pos:start="267:33" pos:end="267:33">(</operator><name pos:start="267:34" pos:end="267:37">edge</name><operator pos:start="267:38" pos:end="267:39">&lt;&lt;</operator><literal type="number" pos:start="267:40" pos:end="267:41">24</literal><operator pos:start="267:42" pos:end="267:42">)</operator></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo" pos:start="269:13" pos:end="269:21"><block_content pos:start="269:13" pos:end="269:21"> <comment type="line" pos:start="267:47" pos:end="267:79">// (edge&amp;1) &amp;&amp; IS_8x8DCT(mb_type)</comment>

            <continue pos:start="269:13" pos:end="269:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="273:9" pos:end="349:9"><if pos:start="273:9" pos:end="277:9">if<condition pos:start="273:11" pos:end="273:30">( <expr pos:start="273:13" pos:end="273:29"><call pos:start="273:13" pos:end="273:29"><name pos:start="273:13" pos:end="273:20">IS_INTRA</name><argument_list pos:start="273:21" pos:end="273:29">(<argument pos:start="273:22" pos:end="273:28"><expr pos:start="273:22" pos:end="273:28"><name pos:start="273:22" pos:end="273:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="273:32" pos:end="277:9">{<block_content pos:start="275:13" pos:end="275:50">

            <expr_stmt pos:start="275:13" pos:end="275:50"><expr pos:start="275:13" pos:end="275:49"><operator pos:start="275:13" pos:end="275:13">*</operator><operator pos:start="275:14" pos:end="275:14">(</operator><name pos:start="275:15" pos:end="275:22">uint64_t</name><operator pos:start="275:23" pos:end="275:23">*</operator><operator pos:start="275:24" pos:end="275:24">)</operator><name pos:start="275:25" pos:end="275:26">bS</name><operator pos:start="275:27" pos:end="275:27">=</operator> <literal type="number" pos:start="275:29" pos:end="275:49">0x0003000300030003ULL</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="277:11" pos:end="349:9">else <block pos:start="277:16" pos:end="349:9">{<block_content pos:start="279:13" pos:end="347:25">

            <decl_stmt pos:start="279:13" pos:end="279:21"><decl pos:start="279:13" pos:end="279:17"><type pos:start="279:13" pos:end="279:15"><name pos:start="279:13" pos:end="279:15">int</name></type> <name pos:start="279:17" pos:end="279:17">i</name></decl>, <decl pos:start="279:20" pos:end="279:20"><type ref="prev" pos:start="279:13" pos:end="279:15"/><name pos:start="279:20" pos:end="279:20">l</name></decl>;</decl_stmt>

            <decl_stmt pos:start="281:13" pos:end="281:24"><decl pos:start="281:13" pos:end="281:23"><type pos:start="281:13" pos:end="281:15"><name pos:start="281:13" pos:end="281:15">int</name></type> <name pos:start="281:17" pos:end="281:23">mv_done</name></decl>;</decl_stmt>



            <if_stmt pos:start="285:13" pos:end="309:28"><if pos:start="285:13" pos:end="291:13">if<condition pos:start="285:15" pos:end="285:34">( <expr pos:start="285:17" pos:end="285:32"><name pos:start="285:17" pos:end="285:20">edge</name> <operator pos:start="285:22" pos:end="285:22">&amp;</operator> <name pos:start="285:24" pos:end="285:32">mask_edge</name></expr> )</condition> <block pos:start="285:36" pos:end="291:13">{<block_content pos:start="287:17" pos:end="289:28">

                <expr_stmt pos:start="287:17" pos:end="287:34"><expr pos:start="287:17" pos:end="287:33"><operator pos:start="287:17" pos:end="287:17">*</operator><operator pos:start="287:18" pos:end="287:18">(</operator><name pos:start="287:19" pos:end="287:26">uint64_t</name><operator pos:start="287:27" pos:end="287:27">*</operator><operator pos:start="287:28" pos:end="287:28">)</operator><name pos:start="287:29" pos:end="287:30">bS</name><operator pos:start="287:31" pos:end="287:31">=</operator> <literal type="number" pos:start="287:33" pos:end="287:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:28"><expr pos:start="289:17" pos:end="289:27"><name pos:start="289:17" pos:end="289:23">mv_done</name> <operator pos:start="289:25" pos:end="289:25">=</operator> <literal type="number" pos:start="289:27" pos:end="289:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <if type="elseif" pos:start="293:13" pos:end="305:13">else if<condition pos:start="293:20" pos:end="293:32">( <expr pos:start="293:22" pos:end="293:30"><name pos:start="293:22" pos:end="293:30">mask_par0</name></expr> )</condition> <block pos:start="293:34" pos:end="305:13">{<block_content pos:start="295:17" pos:end="303:28">

                <decl_stmt pos:start="295:17" pos:end="295:54"><decl pos:start="295:17" pos:end="295:53"><type pos:start="295:17" pos:end="295:19"><name pos:start="295:17" pos:end="295:19">int</name></type> <name pos:start="295:21" pos:end="295:25">b_idx</name><init pos:start="295:26" pos:end="295:53">= <expr pos:start="295:28" pos:end="295:53"><literal type="number" pos:start="295:28" pos:end="295:30">8</literal> <operator pos:start="295:30" pos:end="295:30">+</operator> <literal type="number" pos:start="295:32" pos:end="295:34">4</literal> <operator pos:start="295:34" pos:end="295:34">+</operator> <name pos:start="295:36" pos:end="295:39">edge</name> <operator pos:start="295:41" pos:end="295:41">*</operator> <operator pos:start="295:43" pos:end="295:43">(</operator><ternary pos:start="295:44" pos:end="295:52"><condition pos:start="295:44" pos:end="295:48"><expr pos:start="295:44" pos:end="295:46"><name pos:start="295:44" pos:end="295:46">dir</name></expr> ?</condition><then pos:start="295:50" pos:end="295:50"> <expr pos:start="295:50" pos:end="295:50"><literal type="number" pos:start="295:50" pos:end="295:50">8</literal></expr></then><else pos:start="295:51" pos:end="295:52">:<expr pos:start="295:52" pos:end="295:52"><literal type="number" pos:start="295:52" pos:end="295:52">1</literal></expr></else></ternary><operator pos:start="295:53" pos:end="295:53">)</operator></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="297:17" pos:end="297:48"><decl pos:start="297:17" pos:end="297:47"><type pos:start="297:17" pos:end="297:19"><name pos:start="297:17" pos:end="297:19">int</name></type> <name pos:start="297:21" pos:end="297:26">bn_idx</name><init pos:start="297:27" pos:end="297:47">= <expr pos:start="297:29" pos:end="297:47"><name pos:start="297:29" pos:end="297:33">b_idx</name> <operator pos:start="297:35" pos:end="297:35">-</operator> <operator pos:start="297:37" pos:end="297:37">(</operator><ternary pos:start="297:38" pos:end="297:46"><condition pos:start="297:38" pos:end="297:42"><expr pos:start="297:38" pos:end="297:40"><name pos:start="297:38" pos:end="297:40">dir</name></expr> ?</condition><then pos:start="297:44" pos:end="297:44"> <expr pos:start="297:44" pos:end="297:44"><literal type="number" pos:start="297:44" pos:end="297:44">8</literal></expr></then><else pos:start="297:45" pos:end="297:46">:<expr pos:start="297:46" pos:end="297:46"><literal type="number" pos:start="297:46" pos:end="297:46">1</literal></expr></else></ternary><operator pos:start="297:47" pos:end="297:47">)</operator></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="301:17" pos:end="301:86"><expr pos:start="301:17" pos:end="301:85"><name pos:start="301:17" pos:end="301:21"><name pos:start="301:17" pos:end="301:18">bS</name><index pos:start="301:19" pos:end="301:21">[<expr pos:start="301:20" pos:end="301:20"><literal type="number" pos:start="301:20" pos:end="301:20">0</literal></expr>]</index></name> <operator pos:start="301:23" pos:end="301:23">=</operator> <name pos:start="301:25" pos:end="301:29"><name pos:start="301:25" pos:end="301:26">bS</name><index pos:start="301:27" pos:end="301:29">[<expr pos:start="301:28" pos:end="301:28"><literal type="number" pos:start="301:28" pos:end="301:28">1</literal></expr>]</index></name> <operator pos:start="301:31" pos:end="301:31">=</operator> <name pos:start="301:33" pos:end="301:37"><name pos:start="301:33" pos:end="301:34">bS</name><index pos:start="301:35" pos:end="301:37">[<expr pos:start="301:36" pos:end="301:36"><literal type="number" pos:start="301:36" pos:end="301:36">2</literal></expr>]</index></name> <operator pos:start="301:39" pos:end="301:39">=</operator> <name pos:start="301:41" pos:end="301:45"><name pos:start="301:41" pos:end="301:42">bS</name><index pos:start="301:43" pos:end="301:45">[<expr pos:start="301:44" pos:end="301:44"><literal type="number" pos:start="301:44" pos:end="301:44">3</literal></expr>]</index></name> <operator pos:start="301:47" pos:end="301:47">=</operator> <call pos:start="301:49" pos:end="301:85"><name pos:start="301:49" pos:end="301:56">check_mv</name><argument_list pos:start="301:57" pos:end="301:85">(<argument pos:start="301:58" pos:end="301:58"><expr pos:start="301:58" pos:end="301:58"><name pos:start="301:58" pos:end="301:58">h</name></expr></argument>, <argument pos:start="301:61" pos:end="301:65"><expr pos:start="301:61" pos:end="301:65"><name pos:start="301:61" pos:end="301:65">b_idx</name></expr></argument>, <argument pos:start="301:68" pos:end="301:73"><expr pos:start="301:68" pos:end="301:73"><name pos:start="301:68" pos:end="301:73">bn_idx</name></expr></argument>, <argument pos:start="301:76" pos:end="301:84"><expr pos:start="301:76" pos:end="301:84"><name pos:start="301:76" pos:end="301:84">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:28"><expr pos:start="303:17" pos:end="303:27"><name pos:start="303:17" pos:end="303:23">mv_done</name> <operator pos:start="303:25" pos:end="303:25">=</operator> <literal type="number" pos:start="303:27" pos:end="303:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="307:13" pos:end="309:28">else<block type="pseudo" pos:start="309:17" pos:end="309:28"><block_content pos:start="309:17" pos:end="309:28">

                <expr_stmt pos:start="309:17" pos:end="309:28"><expr pos:start="309:17" pos:end="309:27"><name pos:start="309:17" pos:end="309:23">mv_done</name> <operator pos:start="309:25" pos:end="309:25">=</operator> <literal type="number" pos:start="309:27" pos:end="309:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <for pos:start="313:13" pos:end="341:13">for<control pos:start="313:16" pos:end="313:36">( <init pos:start="313:18" pos:end="313:23"><expr pos:start="313:18" pos:end="313:22"><name pos:start="313:18" pos:end="313:18">i</name> <operator pos:start="313:20" pos:end="313:20">=</operator> <literal type="number" pos:start="313:22" pos:end="313:22">0</literal></expr>;</init> <condition pos:start="313:25" pos:end="313:30"><expr pos:start="313:25" pos:end="313:29"><name pos:start="313:25" pos:end="313:25">i</name> <operator pos:start="313:27" pos:end="313:27">&lt;</operator> <literal type="number" pos:start="313:29" pos:end="313:29">4</literal></expr>;</condition> <incr pos:start="313:32" pos:end="313:34"><expr pos:start="313:32" pos:end="313:34"><name pos:start="313:32" pos:end="313:32">i</name><operator pos:start="313:33" pos:end="313:34">++</operator></expr></incr> )</control> <block pos:start="313:38" pos:end="341:13">{<block_content pos:start="315:17" pos:end="339:17">

                <decl_stmt pos:start="315:17" pos:end="315:44"><decl pos:start="315:17" pos:end="315:43"><type pos:start="315:17" pos:end="315:19"><name pos:start="315:17" pos:end="315:19">int</name></type> <name pos:start="315:21" pos:end="315:21">x</name> <init pos:start="315:23" pos:end="315:43">= <expr pos:start="315:25" pos:end="315:43"><ternary pos:start="315:25" pos:end="315:43"><condition pos:start="315:25" pos:end="315:34"><expr pos:start="315:25" pos:end="315:32"><name pos:start="315:25" pos:end="315:27">dir</name> <operator pos:start="315:29" pos:end="315:30">==</operator> <literal type="number" pos:start="315:32" pos:end="315:32">0</literal></expr> ?</condition><then pos:start="315:36" pos:end="315:39"> <expr pos:start="315:36" pos:end="315:39"><name pos:start="315:36" pos:end="315:39">edge</name></expr> </then><else pos:start="315:41" pos:end="315:43">: <expr pos:start="315:43" pos:end="315:43"><name pos:start="315:43" pos:end="315:43">i</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="317:17" pos:end="317:47"><decl pos:start="317:17" pos:end="317:46"><type pos:start="317:17" pos:end="317:19"><name pos:start="317:17" pos:end="317:19">int</name></type> <name pos:start="317:21" pos:end="317:21">y</name> <init pos:start="317:23" pos:end="317:46">= <expr pos:start="317:25" pos:end="317:46"><ternary pos:start="317:25" pos:end="317:46"><condition pos:start="317:25" pos:end="317:34"><expr pos:start="317:25" pos:end="317:32"><name pos:start="317:25" pos:end="317:27">dir</name> <operator pos:start="317:29" pos:end="317:30">==</operator> <literal type="number" pos:start="317:32" pos:end="317:32">0</literal></expr> ?</condition><then pos:start="317:36" pos:end="317:36"> <expr pos:start="317:36" pos:end="317:36"><name pos:start="317:36" pos:end="317:36">i</name></expr>    </then><else pos:start="317:41" pos:end="317:46">: <expr pos:start="317:43" pos:end="317:46"><name pos:start="317:43" pos:end="317:46">edge</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="319:17" pos:end="319:43"><decl pos:start="319:17" pos:end="319:42"><type pos:start="319:17" pos:end="319:19"><name pos:start="319:17" pos:end="319:19">int</name></type> <name pos:start="319:21" pos:end="319:25">b_idx</name><init pos:start="319:26" pos:end="319:42">= <expr pos:start="319:28" pos:end="319:42"><literal type="number" pos:start="319:28" pos:end="319:30">8</literal> <operator pos:start="319:30" pos:end="319:30">+</operator> <literal type="number" pos:start="319:32" pos:end="319:34">4</literal> <operator pos:start="319:34" pos:end="319:34">+</operator> <name pos:start="319:36" pos:end="319:36">x</name> <operator pos:start="319:38" pos:end="319:38">+</operator> <literal type="number" pos:start="319:40" pos:end="319:40">8</literal><operator pos:start="319:41" pos:end="319:41">*</operator><name pos:start="319:42" pos:end="319:42">y</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="321:17" pos:end="321:48"><decl pos:start="321:17" pos:end="321:47"><type pos:start="321:17" pos:end="321:19"><name pos:start="321:17" pos:end="321:19">int</name></type> <name pos:start="321:21" pos:end="321:26">bn_idx</name><init pos:start="321:27" pos:end="321:47">= <expr pos:start="321:29" pos:end="321:47"><name pos:start="321:29" pos:end="321:33">b_idx</name> <operator pos:start="321:35" pos:end="321:35">-</operator> <operator pos:start="321:37" pos:end="321:37">(</operator><ternary pos:start="321:38" pos:end="321:46"><condition pos:start="321:38" pos:end="321:42"><expr pos:start="321:38" pos:end="321:40"><name pos:start="321:38" pos:end="321:40">dir</name></expr> ?</condition><then pos:start="321:44" pos:end="321:44"> <expr pos:start="321:44" pos:end="321:44"><literal type="number" pos:start="321:44" pos:end="321:44">8</literal></expr></then><else pos:start="321:45" pos:end="321:46">:<expr pos:start="321:46" pos:end="321:46"><literal type="number" pos:start="321:46" pos:end="321:46">1</literal></expr></else></ternary><operator pos:start="321:47" pos:end="321:47">)</operator></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="325:17" pos:end="339:17"><if pos:start="325:17" pos:end="331:17">if<condition pos:start="325:19" pos:end="327:53">( <expr pos:start="325:21" pos:end="327:51"><name pos:start="325:21" pos:end="325:50"><name pos:start="325:21" pos:end="325:21">h</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:43">non_zero_count_cache</name><index pos:start="325:44" pos:end="325:50">[<expr pos:start="325:45" pos:end="325:49"><name pos:start="325:45" pos:end="325:49">b_idx</name></expr>]</index></name> <operator pos:start="325:52" pos:end="325:52">|</operator>

                    <name pos:start="327:21" pos:end="327:51"><name pos:start="327:21" pos:end="327:21">h</name><operator pos:start="327:22" pos:end="327:23">-&gt;</operator><name pos:start="327:24" pos:end="327:43">non_zero_count_cache</name><index pos:start="327:44" pos:end="327:51">[<expr pos:start="327:45" pos:end="327:50"><name pos:start="327:45" pos:end="327:50">bn_idx</name></expr>]</index></name></expr> )</condition> <block pos:start="327:55" pos:end="331:17">{<block_content pos:start="329:21" pos:end="329:30">

                    <expr_stmt pos:start="329:21" pos:end="329:30"><expr pos:start="329:21" pos:end="329:29"><name pos:start="329:21" pos:end="329:25"><name pos:start="329:21" pos:end="329:22">bS</name><index pos:start="329:23" pos:end="329:25">[<expr pos:start="329:24" pos:end="329:24"><name pos:start="329:24" pos:end="329:24">i</name></expr>]</index></name> <operator pos:start="329:27" pos:end="329:27">=</operator> <literal type="number" pos:start="329:29" pos:end="329:29">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if>

                <if type="elseif" pos:start="333:17" pos:end="339:17">else if<condition pos:start="333:24" pos:end="333:33">(<expr pos:start="333:25" pos:end="333:32"><operator pos:start="333:25" pos:end="333:25">!</operator><name pos:start="333:26" pos:end="333:32">mv_done</name></expr>)</condition>

                <block pos:start="335:17" pos:end="339:17">{<block_content pos:start="337:21" pos:end="337:66">

                    <expr_stmt pos:start="337:21" pos:end="337:66"><expr pos:start="337:21" pos:end="337:65"><name pos:start="337:21" pos:end="337:25"><name pos:start="337:21" pos:end="337:22">bS</name><index pos:start="337:23" pos:end="337:25">[<expr pos:start="337:24" pos:end="337:24"><name pos:start="337:24" pos:end="337:24">i</name></expr>]</index></name> <operator pos:start="337:27" pos:end="337:27">=</operator> <call pos:start="337:29" pos:end="337:65"><name pos:start="337:29" pos:end="337:36">check_mv</name><argument_list pos:start="337:37" pos:end="337:65">(<argument pos:start="337:38" pos:end="337:38"><expr pos:start="337:38" pos:end="337:38"><name pos:start="337:38" pos:end="337:38">h</name></expr></argument>, <argument pos:start="337:41" pos:end="337:45"><expr pos:start="337:41" pos:end="337:45"><name pos:start="337:41" pos:end="337:45">b_idx</name></expr></argument>, <argument pos:start="337:48" pos:end="337:53"><expr pos:start="337:48" pos:end="337:53"><name pos:start="337:48" pos:end="337:53">bn_idx</name></expr></argument>, <argument pos:start="337:56" pos:end="337:64"><expr pos:start="337:56" pos:end="337:64"><name pos:start="337:56" pos:end="337:64">mvy_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="345:13" pos:end="347:25"><if pos:start="345:13" pos:end="347:25">if<condition pos:start="345:15" pos:end="345:44">(<expr pos:start="345:16" pos:end="345:43"><name pos:start="345:16" pos:end="345:20"><name pos:start="345:16" pos:end="345:17">bS</name><index pos:start="345:18" pos:end="345:20">[<expr pos:start="345:19" pos:end="345:19"><literal type="number" pos:start="345:19" pos:end="345:19">0</literal></expr>]</index></name><operator pos:start="345:21" pos:end="345:21">+</operator><name pos:start="345:22" pos:end="345:26"><name pos:start="345:22" pos:end="345:23">bS</name><index pos:start="345:24" pos:end="345:26">[<expr pos:start="345:25" pos:end="345:25"><literal type="number" pos:start="345:25" pos:end="345:25">1</literal></expr>]</index></name><operator pos:start="345:27" pos:end="345:27">+</operator><name pos:start="345:28" pos:end="345:32"><name pos:start="345:28" pos:end="345:29">bS</name><index pos:start="345:30" pos:end="345:32">[<expr pos:start="345:31" pos:end="345:31"><literal type="number" pos:start="345:31" pos:end="345:31">2</literal></expr>]</index></name><operator pos:start="345:33" pos:end="345:33">+</operator><name pos:start="345:34" pos:end="345:38"><name pos:start="345:34" pos:end="345:35">bS</name><index pos:start="345:36" pos:end="345:38">[<expr pos:start="345:37" pos:end="345:37"><literal type="number" pos:start="345:37" pos:end="345:37">3</literal></expr>]</index></name> <operator pos:start="345:40" pos:end="345:41">==</operator> <literal type="number" pos:start="345:43" pos:end="345:43">0</literal></expr>)</condition><block type="pseudo" pos:start="347:17" pos:end="347:25"><block_content pos:start="347:17" pos:end="347:25">

                <continue pos:start="347:17" pos:end="347:25">continue;</continue></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="353:9" pos:end="353:25">/* Filter edge */</comment>

        <comment type="line" pos:start="355:9" pos:end="355:77">// Do not use s-&gt;qscale as luma quantizer because it has not the same</comment>

        <comment type="line" pos:start="357:9" pos:end="357:37">// value in IPCM macroblocks.</comment>

        <expr_stmt pos:start="359:9" pos:end="359:52"><expr pos:start="359:9" pos:end="359:51"><name pos:start="359:9" pos:end="359:10">qp</name> <operator pos:start="359:12" pos:end="359:12">=</operator> <name pos:start="359:14" pos:end="359:51"><name pos:start="359:14" pos:end="359:14">s</name><operator pos:start="359:15" pos:end="359:16">-&gt;</operator><name pos:start="359:17" pos:end="359:31">current_picture</name><operator pos:start="359:32" pos:end="359:32">.</operator><name pos:start="359:33" pos:end="359:44">qscale_table</name><index pos:start="359:45" pos:end="359:51">[<expr pos:start="359:46" pos:end="359:50"><name pos:start="359:46" pos:end="359:50">mb_xy</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="line" pos:start="361:9" pos:end="361:174">//tprintf(s-&gt;avctx, "filter mb:%d/%d dir:%d edge:%d, QPy:%d, QPc:%d, QPcn:%d\n", mb_x, mb_y, dir, edge, qp, h-&gt;chroma_qp[0], s-&gt;current_picture.qscale_table[mbn_xy]);</comment>

        <expr_stmt pos:start="363:9" pos:end="363:131"><expr pos:start="363:9" pos:end="363:130"><call pos:start="363:9" pos:end="363:130"><name pos:start="363:9" pos:end="363:15">tprintf</name><argument_list pos:start="363:16" pos:end="363:130">(<argument pos:start="363:17" pos:end="363:24"><expr pos:start="363:17" pos:end="363:24"><name pos:start="363:17" pos:end="363:24"><name pos:start="363:17" pos:end="363:17">s</name><operator pos:start="363:18" pos:end="363:19">-&gt;</operator><name pos:start="363:20" pos:end="363:24">avctx</name></name></expr></argument>, <argument pos:start="363:27" pos:end="363:80"><expr pos:start="363:27" pos:end="363:80"><literal type="string" pos:start="363:27" pos:end="363:80">"filter mb:%d/%d dir:%d edge:%d, QPy:%d ls:%d uvls:%d"</literal></expr></argument>, <argument pos:start="363:83" pos:end="363:86"><expr pos:start="363:83" pos:end="363:86"><name pos:start="363:83" pos:end="363:86">mb_x</name></expr></argument>, <argument pos:start="363:89" pos:end="363:92"><expr pos:start="363:89" pos:end="363:92"><name pos:start="363:89" pos:end="363:92">mb_y</name></expr></argument>, <argument pos:start="363:95" pos:end="363:97"><expr pos:start="363:95" pos:end="363:97"><name pos:start="363:95" pos:end="363:97">dir</name></expr></argument>, <argument pos:start="363:100" pos:end="363:103"><expr pos:start="363:100" pos:end="363:103"><name pos:start="363:100" pos:end="363:103">edge</name></expr></argument>, <argument pos:start="363:106" pos:end="363:107"><expr pos:start="363:106" pos:end="363:107"><name pos:start="363:106" pos:end="363:107">qp</name></expr></argument>, <argument pos:start="363:110" pos:end="363:117"><expr pos:start="363:110" pos:end="363:117"><name pos:start="363:110" pos:end="363:117">linesize</name></expr></argument>, <argument pos:start="363:120" pos:end="363:129"><expr pos:start="363:120" pos:end="363:129"><name pos:start="363:120" pos:end="363:129">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="365:9" pos:end="365:112">//{ int i; for (i = 0; i &lt; 4; i++) tprintf(s-&gt;avctx, " bS[%d]:%d", i, bS[i]); tprintf(s-&gt;avctx, "\n"); }</comment>

        <if_stmt pos:start="367:9" pos:end="391:9"><if pos:start="367:9" pos:end="379:9">if<condition pos:start="367:11" pos:end="367:22">( <expr pos:start="367:13" pos:end="367:20"><name pos:start="367:13" pos:end="367:15">dir</name> <operator pos:start="367:17" pos:end="367:18">==</operator> <literal type="number" pos:start="367:20" pos:end="367:20">0</literal></expr> )</condition> <block pos:start="367:24" pos:end="379:9">{<block_content pos:start="369:13" pos:end="377:13">

            <expr_stmt pos:start="369:13" pos:end="369:67"><expr pos:start="369:13" pos:end="369:66"><call pos:start="369:13" pos:end="369:66"><name pos:start="369:13" pos:end="369:27">filter_mb_edgev</name><argument_list pos:start="369:28" pos:end="369:66">( <argument pos:start="369:30" pos:end="369:43"><expr pos:start="369:30" pos:end="369:43"><operator pos:start="369:30" pos:end="369:30">&amp;</operator><name pos:start="369:31" pos:end="369:43"><name pos:start="369:31" pos:end="369:35">img_y</name><index pos:start="369:36" pos:end="369:43">[<expr pos:start="369:37" pos:end="369:42"><literal type="number" pos:start="369:37" pos:end="369:37">4</literal><operator pos:start="369:38" pos:end="369:38">*</operator><name pos:start="369:39" pos:end="369:42">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="369:46" pos:end="369:53"><expr pos:start="369:46" pos:end="369:53"><name pos:start="369:46" pos:end="369:53">linesize</name></expr></argument>, <argument pos:start="369:56" pos:end="369:57"><expr pos:start="369:56" pos:end="369:57"><name pos:start="369:56" pos:end="369:57">bS</name></expr></argument>, <argument pos:start="369:60" pos:end="369:61"><expr pos:start="369:60" pos:end="369:61"><name pos:start="369:60" pos:end="369:61">qp</name></expr></argument>, <argument pos:start="369:64" pos:end="369:64"><expr pos:start="369:64" pos:end="369:64"><name pos:start="369:64" pos:end="369:64">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="371:13" pos:end="377:13"><if pos:start="371:13" pos:end="377:13">if<condition pos:start="371:15" pos:end="371:31">( <expr pos:start="371:17" pos:end="371:29"><operator pos:start="371:17" pos:end="371:17">(</operator><name pos:start="371:18" pos:end="371:21">edge</name><operator pos:start="371:22" pos:end="371:22">&amp;</operator><literal type="number" pos:start="371:23" pos:end="371:23">1</literal><operator pos:start="371:24" pos:end="371:24">)</operator> <operator pos:start="371:26" pos:end="371:27">==</operator> <literal type="number" pos:start="371:29" pos:end="371:29">0</literal></expr> )</condition> <block pos:start="371:33" pos:end="377:13">{<block_content pos:start="373:17" pos:end="375:87">

                <expr_stmt pos:start="373:17" pos:end="373:87"><expr pos:start="373:17" pos:end="373:86"><call pos:start="373:17" pos:end="373:86"><name pos:start="373:17" pos:end="373:32">filter_mb_edgecv</name><argument_list pos:start="373:33" pos:end="373:86">( <argument pos:start="373:35" pos:end="373:49"><expr pos:start="373:35" pos:end="373:49"><operator pos:start="373:35" pos:end="373:35">&amp;</operator><name pos:start="373:36" pos:end="373:49"><name pos:start="373:36" pos:end="373:41">img_cb</name><index pos:start="373:42" pos:end="373:49">[<expr pos:start="373:43" pos:end="373:48"><literal type="number" pos:start="373:43" pos:end="373:43">2</literal><operator pos:start="373:44" pos:end="373:44">*</operator><name pos:start="373:45" pos:end="373:48">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="373:52" pos:end="373:61"><expr pos:start="373:52" pos:end="373:61"><name pos:start="373:52" pos:end="373:61">uvlinesize</name></expr></argument>, <argument pos:start="373:64" pos:end="373:65"><expr pos:start="373:64" pos:end="373:65"><name pos:start="373:64" pos:end="373:65">bS</name></expr></argument>, <argument pos:start="373:68" pos:end="373:82"><expr pos:start="373:68" pos:end="373:82"><name pos:start="373:68" pos:end="373:82"><name pos:start="373:68" pos:end="373:68">h</name><operator pos:start="373:69" pos:end="373:70">-&gt;</operator><name pos:start="373:71" pos:end="373:79">chroma_qp</name><index pos:start="373:80" pos:end="373:82">[<expr pos:start="373:81" pos:end="373:81"><literal type="number" pos:start="373:81" pos:end="373:81">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="373:85" pos:end="373:85"><expr pos:start="373:85" pos:end="373:85"><name pos:start="373:85" pos:end="373:85">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="375:17" pos:end="375:87"><expr pos:start="375:17" pos:end="375:86"><call pos:start="375:17" pos:end="375:86"><name pos:start="375:17" pos:end="375:32">filter_mb_edgecv</name><argument_list pos:start="375:33" pos:end="375:86">( <argument pos:start="375:35" pos:end="375:49"><expr pos:start="375:35" pos:end="375:49"><operator pos:start="375:35" pos:end="375:35">&amp;</operator><name pos:start="375:36" pos:end="375:49"><name pos:start="375:36" pos:end="375:41">img_cr</name><index pos:start="375:42" pos:end="375:49">[<expr pos:start="375:43" pos:end="375:48"><literal type="number" pos:start="375:43" pos:end="375:43">2</literal><operator pos:start="375:44" pos:end="375:44">*</operator><name pos:start="375:45" pos:end="375:48">edge</name></expr>]</index></name></expr></argument>, <argument pos:start="375:52" pos:end="375:61"><expr pos:start="375:52" pos:end="375:61"><name pos:start="375:52" pos:end="375:61">uvlinesize</name></expr></argument>, <argument pos:start="375:64" pos:end="375:65"><expr pos:start="375:64" pos:end="375:65"><name pos:start="375:64" pos:end="375:65">bS</name></expr></argument>, <argument pos:start="375:68" pos:end="375:82"><expr pos:start="375:68" pos:end="375:82"><name pos:start="375:68" pos:end="375:82"><name pos:start="375:68" pos:end="375:68">h</name><operator pos:start="375:69" pos:end="375:70">-&gt;</operator><name pos:start="375:71" pos:end="375:79">chroma_qp</name><index pos:start="375:80" pos:end="375:82">[<expr pos:start="375:81" pos:end="375:81"><literal type="number" pos:start="375:81" pos:end="375:81">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="375:85" pos:end="375:85"><expr pos:start="375:85" pos:end="375:85"><name pos:start="375:85" pos:end="375:85">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="379:11" pos:end="391:9">else <block pos:start="379:16" pos:end="391:9">{<block_content pos:start="381:13" pos:end="389:13">

            <expr_stmt pos:start="381:13" pos:end="381:76"><expr pos:start="381:13" pos:end="381:75"><call pos:start="381:13" pos:end="381:75"><name pos:start="381:13" pos:end="381:27">filter_mb_edgeh</name><argument_list pos:start="381:28" pos:end="381:75">( <argument pos:start="381:30" pos:end="381:52"><expr pos:start="381:30" pos:end="381:52"><operator pos:start="381:30" pos:end="381:30">&amp;</operator><name pos:start="381:31" pos:end="381:52"><name pos:start="381:31" pos:end="381:35">img_y</name><index pos:start="381:36" pos:end="381:52">[<expr pos:start="381:37" pos:end="381:51"><literal type="number" pos:start="381:37" pos:end="381:37">4</literal><operator pos:start="381:38" pos:end="381:38">*</operator><name pos:start="381:39" pos:end="381:42">edge</name><operator pos:start="381:43" pos:end="381:43">*</operator><name pos:start="381:44" pos:end="381:51">linesize</name></expr>]</index></name></expr></argument>, <argument pos:start="381:55" pos:end="381:62"><expr pos:start="381:55" pos:end="381:62"><name pos:start="381:55" pos:end="381:62">linesize</name></expr></argument>, <argument pos:start="381:65" pos:end="381:66"><expr pos:start="381:65" pos:end="381:66"><name pos:start="381:65" pos:end="381:66">bS</name></expr></argument>, <argument pos:start="381:69" pos:end="381:70"><expr pos:start="381:69" pos:end="381:70"><name pos:start="381:69" pos:end="381:70">qp</name></expr></argument>, <argument pos:start="381:73" pos:end="381:73"><expr pos:start="381:73" pos:end="381:73"><name pos:start="381:73" pos:end="381:73">h</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="383:13" pos:end="389:13"><if pos:start="383:13" pos:end="389:13">if<condition pos:start="383:15" pos:end="383:31">( <expr pos:start="383:17" pos:end="383:29"><operator pos:start="383:17" pos:end="383:17">(</operator><name pos:start="383:18" pos:end="383:21">edge</name><operator pos:start="383:22" pos:end="383:22">&amp;</operator><literal type="number" pos:start="383:23" pos:end="383:23">1</literal><operator pos:start="383:24" pos:end="383:24">)</operator> <operator pos:start="383:26" pos:end="383:27">==</operator> <literal type="number" pos:start="383:29" pos:end="383:29">0</literal></expr> )</condition> <block pos:start="383:33" pos:end="389:13">{<block_content pos:start="385:17" pos:end="387:98">

                <expr_stmt pos:start="385:17" pos:end="385:98"><expr pos:start="385:17" pos:end="385:97"><call pos:start="385:17" pos:end="385:97"><name pos:start="385:17" pos:end="385:32">filter_mb_edgech</name><argument_list pos:start="385:33" pos:end="385:97">( <argument pos:start="385:35" pos:end="385:60"><expr pos:start="385:35" pos:end="385:60"><operator pos:start="385:35" pos:end="385:35">&amp;</operator><name pos:start="385:36" pos:end="385:60"><name pos:start="385:36" pos:end="385:41">img_cb</name><index pos:start="385:42" pos:end="385:60">[<expr pos:start="385:43" pos:end="385:59"><literal type="number" pos:start="385:43" pos:end="385:43">2</literal><operator pos:start="385:44" pos:end="385:44">*</operator><name pos:start="385:45" pos:end="385:48">edge</name><operator pos:start="385:49" pos:end="385:49">*</operator><name pos:start="385:50" pos:end="385:59">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="385:63" pos:end="385:72"><expr pos:start="385:63" pos:end="385:72"><name pos:start="385:63" pos:end="385:72">uvlinesize</name></expr></argument>, <argument pos:start="385:75" pos:end="385:76"><expr pos:start="385:75" pos:end="385:76"><name pos:start="385:75" pos:end="385:76">bS</name></expr></argument>, <argument pos:start="385:79" pos:end="385:93"><expr pos:start="385:79" pos:end="385:93"><name pos:start="385:79" pos:end="385:93"><name pos:start="385:79" pos:end="385:79">h</name><operator pos:start="385:80" pos:end="385:81">-&gt;</operator><name pos:start="385:82" pos:end="385:90">chroma_qp</name><index pos:start="385:91" pos:end="385:93">[<expr pos:start="385:92" pos:end="385:92"><literal type="number" pos:start="385:92" pos:end="385:92">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="385:96" pos:end="385:96"><expr pos:start="385:96" pos:end="385:96"><name pos:start="385:96" pos:end="385:96">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="387:17" pos:end="387:98"><expr pos:start="387:17" pos:end="387:97"><call pos:start="387:17" pos:end="387:97"><name pos:start="387:17" pos:end="387:32">filter_mb_edgech</name><argument_list pos:start="387:33" pos:end="387:97">( <argument pos:start="387:35" pos:end="387:60"><expr pos:start="387:35" pos:end="387:60"><operator pos:start="387:35" pos:end="387:35">&amp;</operator><name pos:start="387:36" pos:end="387:60"><name pos:start="387:36" pos:end="387:41">img_cr</name><index pos:start="387:42" pos:end="387:60">[<expr pos:start="387:43" pos:end="387:59"><literal type="number" pos:start="387:43" pos:end="387:43">2</literal><operator pos:start="387:44" pos:end="387:44">*</operator><name pos:start="387:45" pos:end="387:48">edge</name><operator pos:start="387:49" pos:end="387:49">*</operator><name pos:start="387:50" pos:end="387:59">uvlinesize</name></expr>]</index></name></expr></argument>, <argument pos:start="387:63" pos:end="387:72"><expr pos:start="387:63" pos:end="387:72"><name pos:start="387:63" pos:end="387:72">uvlinesize</name></expr></argument>, <argument pos:start="387:75" pos:end="387:76"><expr pos:start="387:75" pos:end="387:76"><name pos:start="387:75" pos:end="387:76">bS</name></expr></argument>, <argument pos:start="387:79" pos:end="387:93"><expr pos:start="387:79" pos:end="387:93"><name pos:start="387:79" pos:end="387:93"><name pos:start="387:79" pos:end="387:79">h</name><operator pos:start="387:80" pos:end="387:81">-&gt;</operator><name pos:start="387:82" pos:end="387:90">chroma_qp</name><index pos:start="387:91" pos:end="387:93">[<expr pos:start="387:92" pos:end="387:92"><literal type="number" pos:start="387:92" pos:end="387:92">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="387:96" pos:end="387:96"><expr pos:start="387:96" pos:end="387:96"><name pos:start="387:96" pos:end="387:96">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
