<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14142.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">nbd_reply_ready</name><parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVNBDState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="11:29">(<expr pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:16">reply</name><operator pos:start="11:17" pos:end="11:17">.</operator><name pos:start="11:18" pos:end="11:23">handle</name></name> <operator pos:start="11:25" pos:end="11:26">==</operator> <literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr>)</condition> <block pos:start="11:31" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:9">

        <comment type="block" pos:start="13:9" pos:end="13:59">/* No reply already in flight.  Fetch a header.  */</comment>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:54">(<expr pos:start="15:13" pos:end="15:53"><call pos:start="15:13" pos:end="15:49"><name pos:start="15:13" pos:end="15:29">nbd_receive_reply</name><argument_list pos:start="15:30" pos:end="15:49">(<argument pos:start="15:31" pos:end="15:37"><expr pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:37"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:37">sock</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:48"><expr pos:start="15:40" pos:end="15:48"><operator pos:start="15:40" pos:end="15:40">&amp;</operator><name pos:start="15:41" pos:end="15:48"><name pos:start="15:41" pos:end="15:41">s</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:48">reply</name></name></expr></argument>)</argument_list></call> <operator pos:start="15:51" pos:end="15:51">&lt;</operator> <literal type="number" pos:start="15:53" pos:end="15:53">0</literal></expr>)</condition> <block pos:start="15:56" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:22">

            <expr_stmt pos:start="17:13" pos:end="17:32"><expr pos:start="17:13" pos:end="17:31"><name pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">reply</name><operator pos:start="17:21" pos:end="17:21">.</operator><name pos:start="17:22" pos:end="17:27">handle</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr>;</expr_stmt>

            <goto pos:start="19:13" pos:end="19:22">goto <name pos:start="19:18" pos:end="19:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="31:60">/* There's no need for a mutex on the receive side, because the

     * handler acts as a synchronization point and ensures that only

     * one coroutine is called until the reply finishes.  */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:5">i</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:23">HANDLE_TO_INDEX</name><argument_list pos:start="33:24" pos:end="33:43">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">s</name></expr></argument>, <argument pos:start="33:28" pos:end="33:42"><expr pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:42"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:35">reply</name><operator pos:start="33:36" pos:end="33:36">.</operator><name pos:start="33:37" pos:end="33:42">handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:30">(<expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:12">&gt;=</operator> <name pos:start="35:14" pos:end="35:29">MAX_NBD_REQUESTS</name></expr>)</condition> <block pos:start="35:32" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <goto pos:start="37:9" pos:end="37:18">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:29">(<expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:25">recv_coroutine</name><index pos:start="43:26" pos:end="43:28">[<expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">i</name></expr>]</index></name></expr>)</condition> <block pos:start="43:31" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <expr_stmt pos:start="45:9" pos:end="45:57"><expr pos:start="45:9" pos:end="45:56"><call pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:28">qemu_coroutine_enter</name><argument_list pos:start="45:29" pos:end="45:56">(<argument pos:start="45:30" pos:end="45:49"><expr pos:start="45:30" pos:end="45:49"><name pos:start="45:30" pos:end="45:49"><name pos:start="45:30" pos:end="45:30">s</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:46">recv_coroutine</name><index pos:start="45:47" pos:end="45:49">[<expr pos:start="45:48" pos:end="45:48"><name pos:start="45:48" pos:end="45:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="45:52" pos:end="45:55"><expr pos:start="45:52" pos:end="45:55"><name pos:start="45:52" pos:end="45:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if></if_stmt>



<label pos:start="53:1" pos:end="53:5"><name pos:start="53:1" pos:end="53:4">fail</name>:</label>

    <for pos:start="55:5" pos:end="63:5">for <control pos:start="55:9" pos:end="55:42">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:37"><expr pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:36">MAX_NBD_REQUESTS</name></expr>;</condition> <incr pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><name pos:start="55:39" pos:end="55:39">i</name><operator pos:start="55:40" pos:end="55:41">++</operator></expr></incr>)</control> <block pos:start="55:44" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:9">

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:33">(<expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:29">recv_coroutine</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">i</name></expr>]</index></name></expr>)</condition> <block pos:start="57:35" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:61">

            <expr_stmt pos:start="59:13" pos:end="59:61"><expr pos:start="59:13" pos:end="59:60"><call pos:start="59:13" pos:end="59:60"><name pos:start="59:13" pos:end="59:32">qemu_coroutine_enter</name><argument_list pos:start="59:33" pos:end="59:60">(<argument pos:start="59:34" pos:end="59:53"><expr pos:start="59:34" pos:end="59:53"><name pos:start="59:34" pos:end="59:53"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:50">recv_coroutine</name><index pos:start="59:51" pos:end="59:53">[<expr pos:start="59:52" pos:end="59:52"><name pos:start="59:52" pos:end="59:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="59:56" pos:end="59:59"><expr pos:start="59:56" pos:end="59:59"><name pos:start="59:56" pos:end="59:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
