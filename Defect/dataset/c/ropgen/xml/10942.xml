<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10942.c" pos:tabs="8"><function pos:start="1:1" pos:end="425:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:26">nvic_readl</name><parameter_list pos:start="1:27" pos:end="1:75">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:36">NVICState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:56">offset</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><name pos:start="1:59" pos:end="1:68">MemTxAttrs</name></type> <name pos:start="1:70" pos:end="1:74">attrs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="425:1">{<block_content pos:start="5:5" pos:end="423:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:19">s</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:24">cpu</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="423:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="423:5">{<block_content pos:start="13:5" pos:end="421:17">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">4</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:42">/* Interrupt Control Type.  */</comment>

        <return pos:start="15:9" pos:end="15:56">return <expr pos:start="15:16" pos:end="15:55"><operator pos:start="15:16" pos:end="15:16">(</operator><operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:27"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:27">num_irq</name></name> <operator pos:start="15:29" pos:end="15:29">-</operator> <name pos:start="15:31" pos:end="15:44">NVIC_FIRST_IRQ</name><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:47">/</operator> <literal type="number" pos:start="15:49" pos:end="15:50">32</literal><operator pos:start="15:51" pos:end="15:51">)</operator> <operator pos:start="15:53" pos:end="15:53">-</operator> <literal type="number" pos:start="15:55" pos:end="15:55">1</literal></expr>;</return>

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><literal type="number" pos:start="17:10" pos:end="17:14">0xd00</literal></expr>:</case> <comment type="block" pos:start="17:17" pos:end="17:34">/* CPUID Base.  */</comment>

        <return pos:start="19:9" pos:end="19:25">return <expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:18">cpu</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:24">midr</name></name></expr>;</return>

    <case pos:start="21:5" pos:end="21:15">case <expr pos:start="21:10" pos:end="21:14"><literal type="number" pos:start="21:10" pos:end="21:14">0xd04</literal></expr>:</case> <comment type="block" pos:start="21:17" pos:end="21:47">/* Interrupt Control State.  */</comment>

        <comment type="block" pos:start="23:9" pos:end="23:24">/* VECTACTIVE */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:11">val</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:36"><name pos:start="25:15" pos:end="25:17">cpu</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:22">env</name><operator pos:start="25:23" pos:end="25:23">.</operator><name pos:start="25:24" pos:end="25:26">v7m</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:36">exception</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:25">/* VECTPENDING */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:11">val</name> <operator pos:start="29:13" pos:end="29:14">|=</operator> <operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:30">vectpending</name></name> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <literal type="number" pos:start="29:34" pos:end="29:37">0xff</literal><operator pos:start="29:38" pos:end="29:38">)</operator> <operator pos:start="29:40" pos:end="29:41">&lt;&lt;</operator> <literal type="number" pos:start="29:43" pos:end="29:44">12</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="31:9" pos:end="31:61">/* ISRPENDING - set if any external IRQ is pending */</comment>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:31">(<expr pos:start="33:13" pos:end="33:30"><call pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:27">nvic_isrpending</name><argument_list pos:start="33:28" pos:end="33:30">(<argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:33" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:29">

            <expr_stmt pos:start="35:13" pos:end="35:29"><expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:15">val</name> <operator pos:start="35:17" pos:end="35:18">|=</operator> <operator pos:start="35:20" pos:end="35:20">(</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal> <operator pos:start="35:23" pos:end="35:24">&lt;&lt;</operator> <literal type="number" pos:start="35:26" pos:end="35:27">22</literal><operator pos:start="35:28" pos:end="35:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:59">/* RETTOBASE - set if only one handler is active */</comment>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:30">(<expr pos:start="41:13" pos:end="41:29"><call pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:26">nvic_rettobase</name><argument_list pos:start="41:27" pos:end="41:29">(<argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><name pos:start="41:28" pos:end="41:28">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:32" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:29">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:15">val</name> <operator pos:start="43:17" pos:end="43:18">|=</operator> <operator pos:start="43:20" pos:end="43:20">(</operator><literal type="number" pos:start="43:21" pos:end="43:21">1</literal> <operator pos:start="43:23" pos:end="43:24">&lt;&lt;</operator> <literal type="number" pos:start="43:26" pos:end="43:27">11</literal><operator pos:start="43:28" pos:end="43:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:23">/* PENDSTSET */</comment>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:52">(<expr pos:start="49:13" pos:end="49:51"><name pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">vectors</name><index pos:start="49:23" pos:end="49:43">[<expr pos:start="49:24" pos:end="49:42"><name pos:start="49:24" pos:end="49:42">ARMV7M_EXCP_SYSTICK</name></expr>]</index></name><operator pos:start="49:44" pos:end="49:44">.</operator><name pos:start="49:45" pos:end="49:51">pending</name></expr>)</condition> <block pos:start="49:54" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:29">

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:15">val</name> <operator pos:start="51:17" pos:end="51:18">|=</operator> <operator pos:start="51:20" pos:end="51:20">(</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal> <operator pos:start="51:23" pos:end="51:24">&lt;&lt;</operator> <literal type="number" pos:start="51:26" pos:end="51:27">26</literal><operator pos:start="51:28" pos:end="51:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:23">/* PENDSVSET */</comment>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:51">(<expr pos:start="57:13" pos:end="57:50"><name pos:start="57:13" pos:end="57:42"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">vectors</name><index pos:start="57:23" pos:end="57:42">[<expr pos:start="57:24" pos:end="57:41"><name pos:start="57:24" pos:end="57:41">ARMV7M_EXCP_PENDSV</name></expr>]</index></name><operator pos:start="57:43" pos:end="57:43">.</operator><name pos:start="57:44" pos:end="57:50">pending</name></expr>)</condition> <block pos:start="57:53" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:29">

            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:15">val</name> <operator pos:start="59:17" pos:end="59:18">|=</operator> <operator pos:start="59:20" pos:end="59:20">(</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal> <operator pos:start="59:23" pos:end="59:24">&lt;&lt;</operator> <literal type="number" pos:start="59:26" pos:end="59:27">28</literal><operator pos:start="59:28" pos:end="59:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="63:9" pos:end="63:24">/* NMIPENDSET */</comment>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:48">(<expr pos:start="65:13" pos:end="65:47"><name pos:start="65:13" pos:end="65:39"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">vectors</name><index pos:start="65:23" pos:end="65:39">[<expr pos:start="65:24" pos:end="65:38"><name pos:start="65:24" pos:end="65:38">ARMV7M_EXCP_NMI</name></expr>]</index></name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:47">pending</name></expr>)</condition> <block pos:start="65:50" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:29">

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:15">val</name> <operator pos:start="67:17" pos:end="67:18">|=</operator> <operator pos:start="67:20" pos:end="67:20">(</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal> <operator pos:start="67:23" pos:end="67:24">&lt;&lt;</operator> <literal type="number" pos:start="67:26" pos:end="67:27">31</literal><operator pos:start="67:28" pos:end="67:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="71:9" pos:end="71:40">/* ISRPREEMPT not implemented */</comment>

        <return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">val</name></expr>;</return>

    <case pos:start="75:5" pos:end="75:15">case <expr pos:start="75:10" pos:end="75:14"><literal type="number" pos:start="75:10" pos:end="75:14">0xd08</literal></expr>:</case> <comment type="block" pos:start="75:17" pos:end="75:43">/* Vector Table Offset.  */</comment>

        <return pos:start="77:9" pos:end="77:50">return <expr pos:start="77:16" pos:end="77:49"><name pos:start="77:16" pos:end="77:49"><name pos:start="77:16" pos:end="77:18">cpu</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:23">env</name><operator pos:start="77:24" pos:end="77:24">.</operator><name pos:start="77:25" pos:end="77:27">v7m</name><operator pos:start="77:28" pos:end="77:28">.</operator><name pos:start="77:29" pos:end="77:35">vecbase</name><index pos:start="77:36" pos:end="77:49">[<expr pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:41">attrs</name><operator pos:start="77:42" pos:end="77:42">.</operator><name pos:start="77:43" pos:end="77:48">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="79:5" pos:end="79:15">case <expr pos:start="79:10" pos:end="79:14"><literal type="number" pos:start="79:10" pos:end="79:14">0xd0c</literal></expr>:</case> <comment type="block" pos:start="79:17" pos:end="79:59">/* Application Interrupt/Reset Control.  */</comment>

        <return pos:start="81:9" pos:end="81:47">return <expr pos:start="81:16" pos:end="81:46"><literal type="number" pos:start="81:16" pos:end="81:25">0xfa050000</literal> <operator pos:start="81:27" pos:end="81:27">|</operator> <operator pos:start="81:29" pos:end="81:29">(</operator><name pos:start="81:30" pos:end="81:40"><name pos:start="81:30" pos:end="81:30">s</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:40">prigroup</name></name> <operator pos:start="81:42" pos:end="81:43">&lt;&lt;</operator> <literal type="number" pos:start="81:45" pos:end="81:45">8</literal><operator pos:start="81:46" pos:end="81:46">)</operator></expr>;</return>

    <case pos:start="83:5" pos:end="83:15">case <expr pos:start="83:10" pos:end="83:14"><literal type="number" pos:start="83:10" pos:end="83:14">0xd10</literal></expr>:</case> <comment type="block" pos:start="83:17" pos:end="83:38">/* System Control.  */</comment>

        <comment type="block" pos:start="85:9" pos:end="85:43">/* TODO: Implement SLEEPONEXIT.  */</comment>

        <return pos:start="87:9" pos:end="87:17">return <expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</return>

    <case pos:start="89:5" pos:end="89:15">case <expr pos:start="89:10" pos:end="89:14"><literal type="number" pos:start="89:10" pos:end="89:14">0xd14</literal></expr>:</case> <comment type="block" pos:start="89:17" pos:end="89:45">/* Configuration Control.  */</comment>

        <return pos:start="91:9" pos:end="91:32">return <expr pos:start="91:16" pos:end="91:31"><name pos:start="91:16" pos:end="91:31"><name pos:start="91:16" pos:end="91:18">cpu</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:23">env</name><operator pos:start="91:24" pos:end="91:24">.</operator><name pos:start="91:25" pos:end="91:27">v7m</name><operator pos:start="91:28" pos:end="91:28">.</operator><name pos:start="91:29" pos:end="91:31">ccr</name></name></expr>;</return>

    <case pos:start="93:5" pos:end="93:15">case <expr pos:start="93:10" pos:end="93:14"><literal type="number" pos:start="93:10" pos:end="93:14">0xd24</literal></expr>:</case> <comment type="block" pos:start="93:17" pos:end="93:45">/* System Handler Status.  */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:16"><expr pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:11">val</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <literal type="number" pos:start="95:15" pos:end="95:15">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="101:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:47">(<expr pos:start="97:13" pos:end="97:46"><name pos:start="97:13" pos:end="97:39"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:22">vectors</name><index pos:start="97:23" pos:end="97:39">[<expr pos:start="97:24" pos:end="97:38"><name pos:start="97:24" pos:end="97:38">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="97:40" pos:end="97:40">.</operator><name pos:start="97:41" pos:end="97:46">active</name></expr>)</condition> <block pos:start="97:49" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:28">

            <expr_stmt pos:start="99:13" pos:end="99:28"><expr pos:start="99:13" pos:end="99:27"><name pos:start="99:13" pos:end="99:15">val</name> <operator pos:start="99:17" pos:end="99:18">|=</operator> <operator pos:start="99:20" pos:end="99:20">(</operator><literal type="number" pos:start="99:21" pos:end="99:21">1</literal> <operator pos:start="99:23" pos:end="99:24">&lt;&lt;</operator> <literal type="number" pos:start="99:26" pos:end="99:26">0</literal><operator pos:start="99:27" pos:end="99:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="107:9"><if pos:start="103:9" pos:end="107:9">if <condition pos:start="103:12" pos:end="103:47">(<expr pos:start="103:13" pos:end="103:46"><name pos:start="103:13" pos:end="103:39"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:22">vectors</name><index pos:start="103:23" pos:end="103:39">[<expr pos:start="103:24" pos:end="103:38"><name pos:start="103:24" pos:end="103:38">ARMV7M_EXCP_BUS</name></expr>]</index></name><operator pos:start="103:40" pos:end="103:40">.</operator><name pos:start="103:41" pos:end="103:46">active</name></expr>)</condition> <block pos:start="103:49" pos:end="107:9">{<block_content pos:start="105:13" pos:end="105:28">

            <expr_stmt pos:start="105:13" pos:end="105:28"><expr pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:15">val</name> <operator pos:start="105:17" pos:end="105:18">|=</operator> <operator pos:start="105:20" pos:end="105:20">(</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal> <operator pos:start="105:23" pos:end="105:24">&lt;&lt;</operator> <literal type="number" pos:start="105:26" pos:end="105:26">1</literal><operator pos:start="105:27" pos:end="105:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="113:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:49">(<expr pos:start="109:13" pos:end="109:48"><name pos:start="109:13" pos:end="109:41"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">vectors</name><index pos:start="109:23" pos:end="109:41">[<expr pos:start="109:24" pos:end="109:40"><name pos:start="109:24" pos:end="109:40">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="109:42" pos:end="109:42">.</operator><name pos:start="109:43" pos:end="109:48">active</name></expr>)</condition> <block pos:start="109:51" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:28">

            <expr_stmt pos:start="111:13" pos:end="111:28"><expr pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:15">val</name> <operator pos:start="111:17" pos:end="111:18">|=</operator> <operator pos:start="111:20" pos:end="111:20">(</operator><literal type="number" pos:start="111:21" pos:end="111:21">1</literal> <operator pos:start="111:23" pos:end="111:24">&lt;&lt;</operator> <literal type="number" pos:start="111:26" pos:end="111:26">3</literal><operator pos:start="111:27" pos:end="111:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:47">(<expr pos:start="115:13" pos:end="115:46"><name pos:start="115:13" pos:end="115:39"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:22">vectors</name><index pos:start="115:23" pos:end="115:39">[<expr pos:start="115:24" pos:end="115:38"><name pos:start="115:24" pos:end="115:38">ARMV7M_EXCP_SVC</name></expr>]</index></name><operator pos:start="115:40" pos:end="115:40">.</operator><name pos:start="115:41" pos:end="115:46">active</name></expr>)</condition> <block pos:start="115:49" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:28">

            <expr_stmt pos:start="117:13" pos:end="117:28"><expr pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:15">val</name> <operator pos:start="117:17" pos:end="117:18">|=</operator> <operator pos:start="117:20" pos:end="117:20">(</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal> <operator pos:start="117:23" pos:end="117:24">&lt;&lt;</operator> <literal type="number" pos:start="117:26" pos:end="117:26">7</literal><operator pos:start="117:27" pos:end="117:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="125:9"><if pos:start="121:9" pos:end="125:9">if <condition pos:start="121:12" pos:end="121:49">(<expr pos:start="121:13" pos:end="121:48"><name pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:22">vectors</name><index pos:start="121:23" pos:end="121:41">[<expr pos:start="121:24" pos:end="121:40"><name pos:start="121:24" pos:end="121:40">ARMV7M_EXCP_DEBUG</name></expr>]</index></name><operator pos:start="121:42" pos:end="121:42">.</operator><name pos:start="121:43" pos:end="121:48">active</name></expr>)</condition> <block pos:start="121:51" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:28">

            <expr_stmt pos:start="123:13" pos:end="123:28"><expr pos:start="123:13" pos:end="123:27"><name pos:start="123:13" pos:end="123:15">val</name> <operator pos:start="123:17" pos:end="123:18">|=</operator> <operator pos:start="123:20" pos:end="123:20">(</operator><literal type="number" pos:start="123:21" pos:end="123:21">1</literal> <operator pos:start="123:23" pos:end="123:24">&lt;&lt;</operator> <literal type="number" pos:start="123:26" pos:end="123:26">8</literal><operator pos:start="123:27" pos:end="123:27">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="127:9" pos:end="131:9"><if pos:start="127:9" pos:end="131:9">if <condition pos:start="127:12" pos:end="127:50">(<expr pos:start="127:13" pos:end="127:49"><name pos:start="127:13" pos:end="127:42"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:22">vectors</name><index pos:start="127:23" pos:end="127:42">[<expr pos:start="127:24" pos:end="127:41"><name pos:start="127:24" pos:end="127:41">ARMV7M_EXCP_PENDSV</name></expr>]</index></name><operator pos:start="127:43" pos:end="127:43">.</operator><name pos:start="127:44" pos:end="127:49">active</name></expr>)</condition> <block pos:start="127:52" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:29">

            <expr_stmt pos:start="129:13" pos:end="129:29"><expr pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:15">val</name> <operator pos:start="129:17" pos:end="129:18">|=</operator> <operator pos:start="129:20" pos:end="129:20">(</operator><literal type="number" pos:start="129:21" pos:end="129:21">1</literal> <operator pos:start="129:23" pos:end="129:24">&lt;&lt;</operator> <literal type="number" pos:start="129:26" pos:end="129:27">10</literal><operator pos:start="129:28" pos:end="129:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="137:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:51">(<expr pos:start="133:13" pos:end="133:50"><name pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">vectors</name><index pos:start="133:23" pos:end="133:43">[<expr pos:start="133:24" pos:end="133:42"><name pos:start="133:24" pos:end="133:42">ARMV7M_EXCP_SYSTICK</name></expr>]</index></name><operator pos:start="133:44" pos:end="133:44">.</operator><name pos:start="133:45" pos:end="133:50">active</name></expr>)</condition> <block pos:start="133:53" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:29">

            <expr_stmt pos:start="135:13" pos:end="135:29"><expr pos:start="135:13" pos:end="135:28"><name pos:start="135:13" pos:end="135:15">val</name> <operator pos:start="135:17" pos:end="135:18">|=</operator> <operator pos:start="135:20" pos:end="135:20">(</operator><literal type="number" pos:start="135:21" pos:end="135:21">1</literal> <operator pos:start="135:23" pos:end="135:24">&lt;&lt;</operator> <literal type="number" pos:start="135:26" pos:end="135:27">11</literal><operator pos:start="135:28" pos:end="135:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:50">(<expr pos:start="139:13" pos:end="139:49"><name pos:start="139:13" pos:end="139:41"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:22">vectors</name><index pos:start="139:23" pos:end="139:41">[<expr pos:start="139:24" pos:end="139:40"><name pos:start="139:24" pos:end="139:40">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="139:42" pos:end="139:42">.</operator><name pos:start="139:43" pos:end="139:49">pending</name></expr>)</condition> <block pos:start="139:52" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:29">

            <expr_stmt pos:start="141:13" pos:end="141:29"><expr pos:start="141:13" pos:end="141:28"><name pos:start="141:13" pos:end="141:15">val</name> <operator pos:start="141:17" pos:end="141:18">|=</operator> <operator pos:start="141:20" pos:end="141:20">(</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal> <operator pos:start="141:23" pos:end="141:24">&lt;&lt;</operator> <literal type="number" pos:start="141:26" pos:end="141:27">12</literal><operator pos:start="141:28" pos:end="141:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="145:9" pos:end="149:9"><if pos:start="145:9" pos:end="149:9">if <condition pos:start="145:12" pos:end="145:48">(<expr pos:start="145:13" pos:end="145:47"><name pos:start="145:13" pos:end="145:39"><name pos:start="145:13" pos:end="145:13">s</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:22">vectors</name><index pos:start="145:23" pos:end="145:39">[<expr pos:start="145:24" pos:end="145:38"><name pos:start="145:24" pos:end="145:38">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="145:40" pos:end="145:40">.</operator><name pos:start="145:41" pos:end="145:47">pending</name></expr>)</condition> <block pos:start="145:50" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:29">

            <expr_stmt pos:start="147:13" pos:end="147:29"><expr pos:start="147:13" pos:end="147:28"><name pos:start="147:13" pos:end="147:15">val</name> <operator pos:start="147:17" pos:end="147:18">|=</operator> <operator pos:start="147:20" pos:end="147:20">(</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal> <operator pos:start="147:23" pos:end="147:24">&lt;&lt;</operator> <literal type="number" pos:start="147:26" pos:end="147:27">13</literal><operator pos:start="147:28" pos:end="147:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="151:9" pos:end="155:9"><if pos:start="151:9" pos:end="155:9">if <condition pos:start="151:12" pos:end="151:48">(<expr pos:start="151:13" pos:end="151:47"><name pos:start="151:13" pos:end="151:39"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:22">vectors</name><index pos:start="151:23" pos:end="151:39">[<expr pos:start="151:24" pos:end="151:38"><name pos:start="151:24" pos:end="151:38">ARMV7M_EXCP_BUS</name></expr>]</index></name><operator pos:start="151:40" pos:end="151:40">.</operator><name pos:start="151:41" pos:end="151:47">pending</name></expr>)</condition> <block pos:start="151:50" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:29">

            <expr_stmt pos:start="153:13" pos:end="153:29"><expr pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:15">val</name> <operator pos:start="153:17" pos:end="153:18">|=</operator> <operator pos:start="153:20" pos:end="153:20">(</operator><literal type="number" pos:start="153:21" pos:end="153:21">1</literal> <operator pos:start="153:23" pos:end="153:24">&lt;&lt;</operator> <literal type="number" pos:start="153:26" pos:end="153:27">14</literal><operator pos:start="153:28" pos:end="153:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="157:9" pos:end="161:9"><if pos:start="157:9" pos:end="161:9">if <condition pos:start="157:12" pos:end="157:48">(<expr pos:start="157:13" pos:end="157:47"><name pos:start="157:13" pos:end="157:39"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:22">vectors</name><index pos:start="157:23" pos:end="157:39">[<expr pos:start="157:24" pos:end="157:38"><name pos:start="157:24" pos:end="157:38">ARMV7M_EXCP_SVC</name></expr>]</index></name><operator pos:start="157:40" pos:end="157:40">.</operator><name pos:start="157:41" pos:end="157:47">pending</name></expr>)</condition> <block pos:start="157:50" pos:end="161:9">{<block_content pos:start="159:13" pos:end="159:29">

            <expr_stmt pos:start="159:13" pos:end="159:29"><expr pos:start="159:13" pos:end="159:28"><name pos:start="159:13" pos:end="159:15">val</name> <operator pos:start="159:17" pos:end="159:18">|=</operator> <operator pos:start="159:20" pos:end="159:20">(</operator><literal type="number" pos:start="159:21" pos:end="159:21">1</literal> <operator pos:start="159:23" pos:end="159:24">&lt;&lt;</operator> <literal type="number" pos:start="159:26" pos:end="159:27">15</literal><operator pos:start="159:28" pos:end="159:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="163:9" pos:end="167:9"><if pos:start="163:9" pos:end="167:9">if <condition pos:start="163:12" pos:end="163:48">(<expr pos:start="163:13" pos:end="163:47"><name pos:start="163:13" pos:end="163:39"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:22">vectors</name><index pos:start="163:23" pos:end="163:39">[<expr pos:start="163:24" pos:end="163:38"><name pos:start="163:24" pos:end="163:38">ARMV7M_EXCP_MEM</name></expr>]</index></name><operator pos:start="163:40" pos:end="163:40">.</operator><name pos:start="163:41" pos:end="163:47">enabled</name></expr>)</condition> <block pos:start="163:50" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:29">

            <expr_stmt pos:start="165:13" pos:end="165:29"><expr pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:15">val</name> <operator pos:start="165:17" pos:end="165:18">|=</operator> <operator pos:start="165:20" pos:end="165:20">(</operator><literal type="number" pos:start="165:21" pos:end="165:21">1</literal> <operator pos:start="165:23" pos:end="165:24">&lt;&lt;</operator> <literal type="number" pos:start="165:26" pos:end="165:27">16</literal><operator pos:start="165:28" pos:end="165:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="169:9" pos:end="173:9"><if pos:start="169:9" pos:end="173:9">if <condition pos:start="169:12" pos:end="169:48">(<expr pos:start="169:13" pos:end="169:47"><name pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:22">vectors</name><index pos:start="169:23" pos:end="169:39">[<expr pos:start="169:24" pos:end="169:38"><name pos:start="169:24" pos:end="169:38">ARMV7M_EXCP_BUS</name></expr>]</index></name><operator pos:start="169:40" pos:end="169:40">.</operator><name pos:start="169:41" pos:end="169:47">enabled</name></expr>)</condition> <block pos:start="169:50" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:29">

            <expr_stmt pos:start="171:13" pos:end="171:29"><expr pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:15">val</name> <operator pos:start="171:17" pos:end="171:18">|=</operator> <operator pos:start="171:20" pos:end="171:20">(</operator><literal type="number" pos:start="171:21" pos:end="171:21">1</literal> <operator pos:start="171:23" pos:end="171:24">&lt;&lt;</operator> <literal type="number" pos:start="171:26" pos:end="171:27">17</literal><operator pos:start="171:28" pos:end="171:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="175:9" pos:end="179:9"><if pos:start="175:9" pos:end="179:9">if <condition pos:start="175:12" pos:end="175:50">(<expr pos:start="175:13" pos:end="175:49"><name pos:start="175:13" pos:end="175:41"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:22">vectors</name><index pos:start="175:23" pos:end="175:41">[<expr pos:start="175:24" pos:end="175:40"><name pos:start="175:24" pos:end="175:40">ARMV7M_EXCP_USAGE</name></expr>]</index></name><operator pos:start="175:42" pos:end="175:42">.</operator><name pos:start="175:43" pos:end="175:49">enabled</name></expr>)</condition> <block pos:start="175:52" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:29">

            <expr_stmt pos:start="177:13" pos:end="177:29"><expr pos:start="177:13" pos:end="177:28"><name pos:start="177:13" pos:end="177:15">val</name> <operator pos:start="177:17" pos:end="177:18">|=</operator> <operator pos:start="177:20" pos:end="177:20">(</operator><literal type="number" pos:start="177:21" pos:end="177:21">1</literal> <operator pos:start="177:23" pos:end="177:24">&lt;&lt;</operator> <literal type="number" pos:start="177:26" pos:end="177:27">18</literal><operator pos:start="177:28" pos:end="177:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="181:9" pos:end="181:19">return <expr pos:start="181:16" pos:end="181:18"><name pos:start="181:16" pos:end="181:18">val</name></expr>;</return>

    <case pos:start="183:5" pos:end="183:15">case <expr pos:start="183:10" pos:end="183:14"><literal type="number" pos:start="183:10" pos:end="183:14">0xd28</literal></expr>:</case> <comment type="block" pos:start="183:17" pos:end="183:49">/* Configurable Fault Status.  */</comment>

        <return pos:start="185:9" pos:end="185:33">return <expr pos:start="185:16" pos:end="185:32"><name pos:start="185:16" pos:end="185:32"><name pos:start="185:16" pos:end="185:18">cpu</name><operator pos:start="185:19" pos:end="185:20">-&gt;</operator><name pos:start="185:21" pos:end="185:23">env</name><operator pos:start="185:24" pos:end="185:24">.</operator><name pos:start="185:25" pos:end="185:27">v7m</name><operator pos:start="185:28" pos:end="185:28">.</operator><name pos:start="185:29" pos:end="185:32">cfsr</name></name></expr>;</return>

    <case pos:start="187:5" pos:end="187:15">case <expr pos:start="187:10" pos:end="187:14"><literal type="number" pos:start="187:10" pos:end="187:14">0xd2c</literal></expr>:</case> <comment type="block" pos:start="187:17" pos:end="187:41">/* Hard Fault Status.  */</comment>

        <return pos:start="189:9" pos:end="189:33">return <expr pos:start="189:16" pos:end="189:32"><name pos:start="189:16" pos:end="189:32"><name pos:start="189:16" pos:end="189:18">cpu</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:23">env</name><operator pos:start="189:24" pos:end="189:24">.</operator><name pos:start="189:25" pos:end="189:27">v7m</name><operator pos:start="189:28" pos:end="189:28">.</operator><name pos:start="189:29" pos:end="189:32">hfsr</name></name></expr>;</return>

    <case pos:start="191:5" pos:end="191:15">case <expr pos:start="191:10" pos:end="191:14"><literal type="number" pos:start="191:10" pos:end="191:14">0xd30</literal></expr>:</case> <comment type="block" pos:start="191:17" pos:end="191:42">/* Debug Fault Status.  */</comment>

        <return pos:start="193:9" pos:end="193:33">return <expr pos:start="193:16" pos:end="193:32"><name pos:start="193:16" pos:end="193:32"><name pos:start="193:16" pos:end="193:18">cpu</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:23">env</name><operator pos:start="193:24" pos:end="193:24">.</operator><name pos:start="193:25" pos:end="193:27">v7m</name><operator pos:start="193:28" pos:end="193:28">.</operator><name pos:start="193:29" pos:end="193:32">dfsr</name></name></expr>;</return>

    <case pos:start="195:5" pos:end="195:15">case <expr pos:start="195:10" pos:end="195:14"><literal type="number" pos:start="195:10" pos:end="195:14">0xd34</literal></expr>:</case> <comment type="block" pos:start="195:17" pos:end="195:51">/* MMFAR MemManage Fault Address */</comment>

        <return pos:start="197:9" pos:end="197:34">return <expr pos:start="197:16" pos:end="197:33"><name pos:start="197:16" pos:end="197:33"><name pos:start="197:16" pos:end="197:18">cpu</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:23">env</name><operator pos:start="197:24" pos:end="197:24">.</operator><name pos:start="197:25" pos:end="197:27">v7m</name><operator pos:start="197:28" pos:end="197:28">.</operator><name pos:start="197:29" pos:end="197:33">mmfar</name></name></expr>;</return>

    <case pos:start="199:5" pos:end="199:15">case <expr pos:start="199:10" pos:end="199:14"><literal type="number" pos:start="199:10" pos:end="199:14">0xd38</literal></expr>:</case> <comment type="block" pos:start="199:17" pos:end="199:41">/* Bus Fault Address.  */</comment>

        <return pos:start="201:9" pos:end="201:33">return <expr pos:start="201:16" pos:end="201:32"><name pos:start="201:16" pos:end="201:32"><name pos:start="201:16" pos:end="201:18">cpu</name><operator pos:start="201:19" pos:end="201:20">-&gt;</operator><name pos:start="201:21" pos:end="201:23">env</name><operator pos:start="201:24" pos:end="201:24">.</operator><name pos:start="201:25" pos:end="201:27">v7m</name><operator pos:start="201:28" pos:end="201:28">.</operator><name pos:start="201:29" pos:end="201:32">bfar</name></name></expr>;</return>

    <case pos:start="203:5" pos:end="203:15">case <expr pos:start="203:10" pos:end="203:14"><literal type="number" pos:start="203:10" pos:end="203:14">0xd3c</literal></expr>:</case> <comment type="block" pos:start="203:17" pos:end="203:40">/* Aux Fault Status.  */</comment>

        <comment type="block" pos:start="205:9" pos:end="205:54">/* TODO: Implement fault status registers.  */</comment>

        <expr_stmt pos:start="207:9" pos:end="209:68"><expr pos:start="207:9" pos:end="209:67"><call pos:start="207:9" pos:end="209:67"><name pos:start="207:9" pos:end="207:21">qemu_log_mask</name><argument_list pos:start="207:22" pos:end="209:67">(<argument pos:start="207:23" pos:end="207:31"><expr pos:start="207:23" pos:end="207:31"><name pos:start="207:23" pos:end="207:31">LOG_UNIMP</name></expr></argument>,

                      <argument pos:start="209:23" pos:end="209:66"><expr pos:start="209:23" pos:end="209:66"><literal type="string" pos:start="209:23" pos:end="209:66">"Aux Fault status registers unimplemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="211:9" pos:end="211:17">return <expr pos:start="211:16" pos:end="211:16"><literal type="number" pos:start="211:16" pos:end="211:16">0</literal></expr>;</return>

    <case pos:start="213:5" pos:end="213:15">case <expr pos:start="213:10" pos:end="213:14"><literal type="number" pos:start="213:10" pos:end="213:14">0xd40</literal></expr>:</case> <comment type="block" pos:start="213:17" pos:end="213:28">/* PFR0.  */</comment>

        <return pos:start="215:9" pos:end="215:26">return <expr pos:start="215:16" pos:end="215:25"><literal type="number" pos:start="215:16" pos:end="215:25">0x00000030</literal></expr>;</return>

    <case pos:start="217:5" pos:end="217:15">case <expr pos:start="217:10" pos:end="217:14"><literal type="number" pos:start="217:10" pos:end="217:14">0xd44</literal></expr>:</case> <comment type="block" pos:start="217:17" pos:end="217:28">/* PRF1.  */</comment>

        <return pos:start="219:9" pos:end="219:26">return <expr pos:start="219:16" pos:end="219:25"><literal type="number" pos:start="219:16" pos:end="219:25">0x00000200</literal></expr>;</return>

    <case pos:start="221:5" pos:end="221:15">case <expr pos:start="221:10" pos:end="221:14"><literal type="number" pos:start="221:10" pos:end="221:14">0xd48</literal></expr>:</case> <comment type="block" pos:start="221:17" pos:end="221:28">/* DFR0.  */</comment>

        <return pos:start="223:9" pos:end="223:26">return <expr pos:start="223:16" pos:end="223:25"><literal type="number" pos:start="223:16" pos:end="223:25">0x00100000</literal></expr>;</return>

    <case pos:start="225:5" pos:end="225:15">case <expr pos:start="225:10" pos:end="225:14"><literal type="number" pos:start="225:10" pos:end="225:14">0xd4c</literal></expr>:</case> <comment type="block" pos:start="225:17" pos:end="225:28">/* AFR0.  */</comment>

        <return pos:start="227:9" pos:end="227:26">return <expr pos:start="227:16" pos:end="227:25"><literal type="number" pos:start="227:16" pos:end="227:25">0x00000000</literal></expr>;</return>

    <case pos:start="229:5" pos:end="229:15">case <expr pos:start="229:10" pos:end="229:14"><literal type="number" pos:start="229:10" pos:end="229:14">0xd50</literal></expr>:</case> <comment type="block" pos:start="229:17" pos:end="229:29">/* MMFR0.  */</comment>

        <return pos:start="231:9" pos:end="231:26">return <expr pos:start="231:16" pos:end="231:25"><literal type="number" pos:start="231:16" pos:end="231:25">0x00000030</literal></expr>;</return>

    <case pos:start="233:5" pos:end="233:15">case <expr pos:start="233:10" pos:end="233:14"><literal type="number" pos:start="233:10" pos:end="233:14">0xd54</literal></expr>:</case> <comment type="block" pos:start="233:17" pos:end="233:29">/* MMFR1.  */</comment>

        <return pos:start="235:9" pos:end="235:26">return <expr pos:start="235:16" pos:end="235:25"><literal type="number" pos:start="235:16" pos:end="235:25">0x00000000</literal></expr>;</return>

    <case pos:start="237:5" pos:end="237:15">case <expr pos:start="237:10" pos:end="237:14"><literal type="number" pos:start="237:10" pos:end="237:14">0xd58</literal></expr>:</case> <comment type="block" pos:start="237:17" pos:end="237:29">/* MMFR2.  */</comment>

        <return pos:start="239:9" pos:end="239:26">return <expr pos:start="239:16" pos:end="239:25"><literal type="number" pos:start="239:16" pos:end="239:25">0x00000000</literal></expr>;</return>

    <case pos:start="241:5" pos:end="241:15">case <expr pos:start="241:10" pos:end="241:14"><literal type="number" pos:start="241:10" pos:end="241:14">0xd5c</literal></expr>:</case> <comment type="block" pos:start="241:17" pos:end="241:29">/* MMFR3.  */</comment>

        <return pos:start="243:9" pos:end="243:26">return <expr pos:start="243:16" pos:end="243:25"><literal type="number" pos:start="243:16" pos:end="243:25">0x00000000</literal></expr>;</return>

    <case pos:start="245:5" pos:end="245:15">case <expr pos:start="245:10" pos:end="245:14"><literal type="number" pos:start="245:10" pos:end="245:14">0xd60</literal></expr>:</case> <comment type="block" pos:start="245:17" pos:end="245:29">/* ISAR0.  */</comment>

        <return pos:start="247:9" pos:end="247:26">return <expr pos:start="247:16" pos:end="247:25"><literal type="number" pos:start="247:16" pos:end="247:25">0x01141110</literal></expr>;</return>

    <case pos:start="249:5" pos:end="249:15">case <expr pos:start="249:10" pos:end="249:14"><literal type="number" pos:start="249:10" pos:end="249:14">0xd64</literal></expr>:</case> <comment type="block" pos:start="249:17" pos:end="249:29">/* ISAR1.  */</comment>

        <return pos:start="251:9" pos:end="251:26">return <expr pos:start="251:16" pos:end="251:25"><literal type="number" pos:start="251:16" pos:end="251:25">0x02111000</literal></expr>;</return>

    <case pos:start="253:5" pos:end="253:15">case <expr pos:start="253:10" pos:end="253:14"><literal type="number" pos:start="253:10" pos:end="253:14">0xd68</literal></expr>:</case> <comment type="block" pos:start="253:17" pos:end="253:29">/* ISAR2.  */</comment>

        <return pos:start="255:9" pos:end="255:26">return <expr pos:start="255:16" pos:end="255:25"><literal type="number" pos:start="255:16" pos:end="255:25">0x21112231</literal></expr>;</return>

    <case pos:start="257:5" pos:end="257:15">case <expr pos:start="257:10" pos:end="257:14"><literal type="number" pos:start="257:10" pos:end="257:14">0xd6c</literal></expr>:</case> <comment type="block" pos:start="257:17" pos:end="257:29">/* ISAR3.  */</comment>

        <return pos:start="259:9" pos:end="259:26">return <expr pos:start="259:16" pos:end="259:25"><literal type="number" pos:start="259:16" pos:end="259:25">0x01111110</literal></expr>;</return>

    <case pos:start="261:5" pos:end="261:15">case <expr pos:start="261:10" pos:end="261:14"><literal type="number" pos:start="261:10" pos:end="261:14">0xd70</literal></expr>:</case> <comment type="block" pos:start="261:17" pos:end="261:29">/* ISAR4.  */</comment>

        <return pos:start="263:9" pos:end="263:26">return <expr pos:start="263:16" pos:end="263:25"><literal type="number" pos:start="263:16" pos:end="263:25">0x01310102</literal></expr>;</return>

    <comment type="block" pos:start="265:5" pos:end="265:43">/* TODO: Implement debug registers.  */</comment>

    <case pos:start="267:5" pos:end="267:15">case <expr pos:start="267:10" pos:end="267:14"><literal type="number" pos:start="267:10" pos:end="267:14">0xd90</literal></expr>:</case> <comment type="block" pos:start="267:17" pos:end="267:30">/* MPU_TYPE */</comment>

        <comment type="block" pos:start="269:9" pos:end="269:71">/* Unified MPU; if the MPU is not present this value is zero */</comment>

        <return pos:start="271:9" pos:end="271:40">return <expr pos:start="271:16" pos:end="271:39"><name pos:start="271:16" pos:end="271:34"><name pos:start="271:16" pos:end="271:18">cpu</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:34">pmsav7_dregion</name></name> <operator pos:start="271:36" pos:end="271:37">&lt;&lt;</operator> <literal type="number" pos:start="271:39" pos:end="271:39">8</literal></expr>;</return>

        <break pos:start="273:9" pos:end="273:14">break;</break>

    <case pos:start="275:5" pos:end="275:15">case <expr pos:start="275:10" pos:end="275:14"><literal type="number" pos:start="275:10" pos:end="275:14">0xd94</literal></expr>:</case> <comment type="block" pos:start="275:17" pos:end="275:30">/* MPU_CTRL */</comment>

        <return pos:start="277:9" pos:end="277:37">return <expr pos:start="277:16" pos:end="277:36"><name pos:start="277:16" pos:end="277:36"><name pos:start="277:16" pos:end="277:18">cpu</name><operator pos:start="277:19" pos:end="277:20">-&gt;</operator><name pos:start="277:21" pos:end="277:23">env</name><operator pos:start="277:24" pos:end="277:24">.</operator><name pos:start="277:25" pos:end="277:27">v7m</name><operator pos:start="277:28" pos:end="277:28">.</operator><name pos:start="277:29" pos:end="277:36">mpu_ctrl</name></name></expr>;</return>

    <case pos:start="279:5" pos:end="279:15">case <expr pos:start="279:10" pos:end="279:14"><literal type="number" pos:start="279:10" pos:end="279:14">0xd98</literal></expr>:</case> <comment type="block" pos:start="279:17" pos:end="279:29">/* MPU_RNR */</comment>

        <return pos:start="281:9" pos:end="281:49">return <expr pos:start="281:16" pos:end="281:48"><name pos:start="281:16" pos:end="281:48"><name pos:start="281:16" pos:end="281:18">cpu</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:23">env</name><operator pos:start="281:24" pos:end="281:24">.</operator><name pos:start="281:25" pos:end="281:30">pmsav7</name><operator pos:start="281:31" pos:end="281:31">.</operator><name pos:start="281:32" pos:end="281:34">rnr</name><index pos:start="281:35" pos:end="281:48">[<expr pos:start="281:36" pos:end="281:47"><name pos:start="281:36" pos:end="281:47"><name pos:start="281:36" pos:end="281:40">attrs</name><operator pos:start="281:41" pos:end="281:41">.</operator><name pos:start="281:42" pos:end="281:47">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="283:5" pos:end="283:15">case <expr pos:start="283:10" pos:end="283:14"><literal type="number" pos:start="283:10" pos:end="283:14">0xd9c</literal></expr>:</case> <comment type="block" pos:start="283:17" pos:end="283:30">/* MPU_RBAR */</comment>

    <case pos:start="285:5" pos:end="285:15">case <expr pos:start="285:10" pos:end="285:14"><literal type="number" pos:start="285:10" pos:end="285:14">0xda4</literal></expr>:</case> <comment type="block" pos:start="285:17" pos:end="285:33">/* MPU_RBAR_A1 */</comment>

    <case pos:start="287:5" pos:end="287:15">case <expr pos:start="287:10" pos:end="287:14"><literal type="number" pos:start="287:10" pos:end="287:14">0xdac</literal></expr>:</case> <comment type="block" pos:start="287:17" pos:end="287:33">/* MPU_RBAR_A2 */</comment>

    <case pos:start="289:5" pos:end="289:15">case <expr pos:start="289:10" pos:end="289:14"><literal type="number" pos:start="289:10" pos:end="289:14">0xdb4</literal></expr>:</case> <comment type="block" pos:start="289:17" pos:end="289:33">/* MPU_RBAR_A3 */</comment>

    <block pos:start="291:5" pos:end="337:5">{<block_content pos:start="293:9" pos:end="335:71">

        <decl_stmt pos:start="293:9" pos:end="293:55"><decl pos:start="293:9" pos:end="293:54"><type pos:start="293:9" pos:end="293:11"><name pos:start="293:9" pos:end="293:11">int</name></type> <name pos:start="293:13" pos:end="293:18">region</name> <init pos:start="293:20" pos:end="293:54">= <expr pos:start="293:22" pos:end="293:54"><name pos:start="293:22" pos:end="293:54"><name pos:start="293:22" pos:end="293:24">cpu</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:29">env</name><operator pos:start="293:30" pos:end="293:30">.</operator><name pos:start="293:31" pos:end="293:36">pmsav7</name><operator pos:start="293:37" pos:end="293:37">.</operator><name pos:start="293:38" pos:end="293:40">rnr</name><index pos:start="293:41" pos:end="293:54">[<expr pos:start="293:42" pos:end="293:53"><name pos:start="293:42" pos:end="293:53"><name pos:start="293:42" pos:end="293:46">attrs</name><operator pos:start="293:47" pos:end="293:47">.</operator><name pos:start="293:48" pos:end="293:53">secure</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="297:9" pos:end="325:9"><if pos:start="297:9" pos:end="325:9">if <condition pos:start="297:12" pos:end="297:51">(<expr pos:start="297:13" pos:end="297:50"><call pos:start="297:13" pos:end="297:50"><name pos:start="297:13" pos:end="297:23">arm_feature</name><argument_list pos:start="297:24" pos:end="297:50">(<argument pos:start="297:25" pos:end="297:33"><expr pos:start="297:25" pos:end="297:33"><operator pos:start="297:25" pos:end="297:25">&amp;</operator><name pos:start="297:26" pos:end="297:33"><name pos:start="297:26" pos:end="297:28">cpu</name><operator pos:start="297:29" pos:end="297:30">-&gt;</operator><name pos:start="297:31" pos:end="297:33">env</name></name></expr></argument>, <argument pos:start="297:36" pos:end="297:49"><expr pos:start="297:36" pos:end="297:49"><name pos:start="297:36" pos:end="297:49">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="297:53" pos:end="325:9">{<block_content pos:start="309:13" pos:end="323:62">

            <comment type="block" pos:start="299:13" pos:end="307:15">/* PMSAv8M handling of the aliases is different from v7M:

             * aliases A1, A2, A3 override the low two bits of the region

             * number in MPU_RNR, and there is no 'region' field in the

             * RBAR register.

             */</comment>

            <decl_stmt pos:start="309:13" pos:end="309:47"><decl pos:start="309:13" pos:end="309:46"><type pos:start="309:13" pos:end="309:15"><name pos:start="309:13" pos:end="309:15">int</name></type> <name pos:start="309:17" pos:end="309:23">aliasno</name> <init pos:start="309:25" pos:end="309:46">= <expr pos:start="309:27" pos:end="309:46"><operator pos:start="309:27" pos:end="309:27">(</operator><name pos:start="309:28" pos:end="309:33">offset</name> <operator pos:start="309:35" pos:end="309:35">-</operator> <literal type="number" pos:start="309:37" pos:end="309:41">0xd9c</literal><operator pos:start="309:42" pos:end="309:42">)</operator> <operator pos:start="309:44" pos:end="309:44">/</operator> <literal type="number" pos:start="309:46" pos:end="309:46">8</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="309:49" pos:end="309:58">/* 0..3 */</comment>

            <if_stmt pos:start="311:13" pos:end="315:13"><if pos:start="311:13" pos:end="315:13">if <condition pos:start="311:16" pos:end="311:24">(<expr pos:start="311:17" pos:end="311:23"><name pos:start="311:17" pos:end="311:23">aliasno</name></expr>)</condition> <block pos:start="311:26" pos:end="315:13">{<block_content pos:start="313:17" pos:end="313:58">

                <expr_stmt pos:start="313:17" pos:end="313:58"><expr pos:start="313:17" pos:end="313:57"><name pos:start="313:17" pos:end="313:22">region</name> <operator pos:start="313:24" pos:end="313:24">=</operator> <call pos:start="313:26" pos:end="313:57"><name pos:start="313:26" pos:end="313:34">deposit32</name><argument_list pos:start="313:35" pos:end="313:57">(<argument pos:start="313:36" pos:end="313:41"><expr pos:start="313:36" pos:end="313:41"><name pos:start="313:36" pos:end="313:41">region</name></expr></argument>, <argument pos:start="313:44" pos:end="313:44"><expr pos:start="313:44" pos:end="313:44"><literal type="number" pos:start="313:44" pos:end="313:44">0</literal></expr></argument>, <argument pos:start="313:47" pos:end="313:47"><expr pos:start="313:47" pos:end="313:47"><literal type="number" pos:start="313:47" pos:end="313:47">2</literal></expr></argument>, <argument pos:start="313:50" pos:end="313:56"><expr pos:start="313:50" pos:end="313:56"><name pos:start="313:50" pos:end="313:56">aliasno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="317:13" pos:end="321:13"><if pos:start="317:13" pos:end="321:13">if <condition pos:start="317:16" pos:end="317:46">(<expr pos:start="317:17" pos:end="317:45"><name pos:start="317:17" pos:end="317:22">region</name> <operator pos:start="317:24" pos:end="317:25">&gt;=</operator> <name pos:start="317:27" pos:end="317:45"><name pos:start="317:27" pos:end="317:29">cpu</name><operator pos:start="317:30" pos:end="317:31">-&gt;</operator><name pos:start="317:32" pos:end="317:45">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="317:48" pos:end="321:13">{<block_content pos:start="319:17" pos:end="319:25">

                <return pos:start="319:17" pos:end="319:25">return <expr pos:start="319:24" pos:end="319:24"><literal type="number" pos:start="319:24" pos:end="319:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="323:13" pos:end="323:62">return <expr pos:start="323:20" pos:end="323:61"><name pos:start="323:20" pos:end="323:61"><name pos:start="323:20" pos:end="323:22">cpu</name><operator pos:start="323:23" pos:end="323:24">-&gt;</operator><name pos:start="323:25" pos:end="323:27">env</name><operator pos:start="323:28" pos:end="323:28">.</operator><name pos:start="323:29" pos:end="323:34">pmsav8</name><operator pos:start="323:35" pos:end="323:35">.</operator><name pos:start="323:36" pos:end="323:39">rbar</name><index pos:start="323:40" pos:end="323:53">[<expr pos:start="323:41" pos:end="323:52"><name pos:start="323:41" pos:end="323:52"><name pos:start="323:41" pos:end="323:45">attrs</name><operator pos:start="323:46" pos:end="323:46">.</operator><name pos:start="323:47" pos:end="323:52">secure</name></name></expr>]</index><index pos:start="323:54" pos:end="323:61">[<expr pos:start="323:55" pos:end="323:60"><name pos:start="323:55" pos:end="323:60">region</name></expr>]</index></name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="329:9" pos:end="333:9"><if pos:start="329:9" pos:end="333:9">if <condition pos:start="329:12" pos:end="329:42">(<expr pos:start="329:13" pos:end="329:41"><name pos:start="329:13" pos:end="329:18">region</name> <operator pos:start="329:20" pos:end="329:21">&gt;=</operator> <name pos:start="329:23" pos:end="329:41"><name pos:start="329:23" pos:end="329:25">cpu</name><operator pos:start="329:26" pos:end="329:27">-&gt;</operator><name pos:start="329:28" pos:end="329:41">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="329:44" pos:end="333:9">{<block_content pos:start="331:13" pos:end="331:21">

            <return pos:start="331:13" pos:end="331:21">return <expr pos:start="331:20" pos:end="331:20"><literal type="number" pos:start="331:20" pos:end="331:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="335:9" pos:end="335:71">return <expr pos:start="335:16" pos:end="335:70"><operator pos:start="335:16" pos:end="335:16">(</operator><name pos:start="335:17" pos:end="335:45"><name pos:start="335:17" pos:end="335:19">cpu</name><operator pos:start="335:20" pos:end="335:21">-&gt;</operator><name pos:start="335:22" pos:end="335:24">env</name><operator pos:start="335:25" pos:end="335:25">.</operator><name pos:start="335:26" pos:end="335:31">pmsav7</name><operator pos:start="335:32" pos:end="335:32">.</operator><name pos:start="335:33" pos:end="335:37">drbar</name><index pos:start="335:38" pos:end="335:45">[<expr pos:start="335:39" pos:end="335:44"><name pos:start="335:39" pos:end="335:44">region</name></expr>]</index></name> <operator pos:start="335:47" pos:end="335:47">&amp;</operator> <literal type="number" pos:start="335:49" pos:end="335:52">0x1f</literal><operator pos:start="335:53" pos:end="335:53">)</operator> <operator pos:start="335:55" pos:end="335:55">|</operator> <operator pos:start="335:57" pos:end="335:57">(</operator><name pos:start="335:58" pos:end="335:63">region</name> <operator pos:start="335:65" pos:end="335:65">&amp;</operator> <literal type="number" pos:start="335:67" pos:end="335:69">0xf</literal><operator pos:start="335:70" pos:end="335:70">)</operator></expr>;</return>

    </block_content>}</block>

    <case pos:start="339:5" pos:end="339:15">case <expr pos:start="339:10" pos:end="339:14"><literal type="number" pos:start="339:10" pos:end="339:14">0xda0</literal></expr>:</case> <comment type="block" pos:start="339:17" pos:end="339:52">/* MPU_RASR (v7M), MPU_RLAR (v8M) */</comment>

    <case pos:start="341:5" pos:end="341:15">case <expr pos:start="341:10" pos:end="341:14"><literal type="number" pos:start="341:10" pos:end="341:14">0xda8</literal></expr>:</case> <comment type="block" pos:start="341:17" pos:end="341:58">/* MPU_RASR_A1 (v7M), MPU_RLAR_A1 (v8M) */</comment>

    <case pos:start="343:5" pos:end="343:15">case <expr pos:start="343:10" pos:end="343:14"><literal type="number" pos:start="343:10" pos:end="343:14">0xdb0</literal></expr>:</case> <comment type="block" pos:start="343:17" pos:end="343:58">/* MPU_RASR_A2 (v7M), MPU_RLAR_A2 (v8M) */</comment>

    <case pos:start="345:5" pos:end="345:15">case <expr pos:start="345:10" pos:end="345:14"><literal type="number" pos:start="345:10" pos:end="345:14">0xdb8</literal></expr>:</case> <comment type="block" pos:start="345:17" pos:end="345:58">/* MPU_RASR_A3 (v7M), MPU_RLAR_A3 (v8M) */</comment>

    <block pos:start="347:5" pos:end="393:5">{<block_content pos:start="349:9" pos:end="391:52">

        <decl_stmt pos:start="349:9" pos:end="349:55"><decl pos:start="349:9" pos:end="349:54"><type pos:start="349:9" pos:end="349:11"><name pos:start="349:9" pos:end="349:11">int</name></type> <name pos:start="349:13" pos:end="349:18">region</name> <init pos:start="349:20" pos:end="349:54">= <expr pos:start="349:22" pos:end="349:54"><name pos:start="349:22" pos:end="349:54"><name pos:start="349:22" pos:end="349:24">cpu</name><operator pos:start="349:25" pos:end="349:26">-&gt;</operator><name pos:start="349:27" pos:end="349:29">env</name><operator pos:start="349:30" pos:end="349:30">.</operator><name pos:start="349:31" pos:end="349:36">pmsav7</name><operator pos:start="349:37" pos:end="349:37">.</operator><name pos:start="349:38" pos:end="349:40">rnr</name><index pos:start="349:41" pos:end="349:54">[<expr pos:start="349:42" pos:end="349:53"><name pos:start="349:42" pos:end="349:53"><name pos:start="349:42" pos:end="349:46">attrs</name><operator pos:start="349:47" pos:end="349:47">.</operator><name pos:start="349:48" pos:end="349:53">secure</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="353:9" pos:end="379:9"><if pos:start="353:9" pos:end="379:9">if <condition pos:start="353:12" pos:end="353:51">(<expr pos:start="353:13" pos:end="353:50"><call pos:start="353:13" pos:end="353:50"><name pos:start="353:13" pos:end="353:23">arm_feature</name><argument_list pos:start="353:24" pos:end="353:50">(<argument pos:start="353:25" pos:end="353:33"><expr pos:start="353:25" pos:end="353:33"><operator pos:start="353:25" pos:end="353:25">&amp;</operator><name pos:start="353:26" pos:end="353:33"><name pos:start="353:26" pos:end="353:28">cpu</name><operator pos:start="353:29" pos:end="353:30">-&gt;</operator><name pos:start="353:31" pos:end="353:33">env</name></name></expr></argument>, <argument pos:start="353:36" pos:end="353:49"><expr pos:start="353:36" pos:end="353:49"><name pos:start="353:36" pos:end="353:49">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="353:53" pos:end="379:9">{<block_content pos:start="363:13" pos:end="377:62">

            <comment type="block" pos:start="355:13" pos:end="361:15">/* PMSAv8M handling of the aliases is different from v7M:

             * aliases A1, A2, A3 override the low two bits of the region

             * number in MPU_RNR.

             */</comment>

            <decl_stmt pos:start="363:13" pos:end="363:47"><decl pos:start="363:13" pos:end="363:46"><type pos:start="363:13" pos:end="363:15"><name pos:start="363:13" pos:end="363:15">int</name></type> <name pos:start="363:17" pos:end="363:23">aliasno</name> <init pos:start="363:25" pos:end="363:46">= <expr pos:start="363:27" pos:end="363:46"><operator pos:start="363:27" pos:end="363:27">(</operator><name pos:start="363:28" pos:end="363:33">offset</name> <operator pos:start="363:35" pos:end="363:35">-</operator> <literal type="number" pos:start="363:37" pos:end="363:41">0xda0</literal><operator pos:start="363:42" pos:end="363:42">)</operator> <operator pos:start="363:44" pos:end="363:44">/</operator> <literal type="number" pos:start="363:46" pos:end="363:46">8</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="363:49" pos:end="363:58">/* 0..3 */</comment>

            <if_stmt pos:start="365:13" pos:end="369:13"><if pos:start="365:13" pos:end="369:13">if <condition pos:start="365:16" pos:end="365:24">(<expr pos:start="365:17" pos:end="365:23"><name pos:start="365:17" pos:end="365:23">aliasno</name></expr>)</condition> <block pos:start="365:26" pos:end="369:13">{<block_content pos:start="367:17" pos:end="367:58">

                <expr_stmt pos:start="367:17" pos:end="367:58"><expr pos:start="367:17" pos:end="367:57"><name pos:start="367:17" pos:end="367:22">region</name> <operator pos:start="367:24" pos:end="367:24">=</operator> <call pos:start="367:26" pos:end="367:57"><name pos:start="367:26" pos:end="367:34">deposit32</name><argument_list pos:start="367:35" pos:end="367:57">(<argument pos:start="367:36" pos:end="367:41"><expr pos:start="367:36" pos:end="367:41"><name pos:start="367:36" pos:end="367:41">region</name></expr></argument>, <argument pos:start="367:44" pos:end="367:44"><expr pos:start="367:44" pos:end="367:44"><literal type="number" pos:start="367:44" pos:end="367:44">0</literal></expr></argument>, <argument pos:start="367:47" pos:end="367:47"><expr pos:start="367:47" pos:end="367:47"><literal type="number" pos:start="367:47" pos:end="367:47">2</literal></expr></argument>, <argument pos:start="367:50" pos:end="367:56"><expr pos:start="367:50" pos:end="367:56"><name pos:start="367:50" pos:end="367:56">aliasno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="371:13" pos:end="375:13"><if pos:start="371:13" pos:end="375:13">if <condition pos:start="371:16" pos:end="371:46">(<expr pos:start="371:17" pos:end="371:45"><name pos:start="371:17" pos:end="371:22">region</name> <operator pos:start="371:24" pos:end="371:25">&gt;=</operator> <name pos:start="371:27" pos:end="371:45"><name pos:start="371:27" pos:end="371:29">cpu</name><operator pos:start="371:30" pos:end="371:31">-&gt;</operator><name pos:start="371:32" pos:end="371:45">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="371:48" pos:end="375:13">{<block_content pos:start="373:17" pos:end="373:25">

                <return pos:start="373:17" pos:end="373:25">return <expr pos:start="373:24" pos:end="373:24"><literal type="number" pos:start="373:24" pos:end="373:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <return pos:start="377:13" pos:end="377:62">return <expr pos:start="377:20" pos:end="377:61"><name pos:start="377:20" pos:end="377:61"><name pos:start="377:20" pos:end="377:22">cpu</name><operator pos:start="377:23" pos:end="377:24">-&gt;</operator><name pos:start="377:25" pos:end="377:27">env</name><operator pos:start="377:28" pos:end="377:28">.</operator><name pos:start="377:29" pos:end="377:34">pmsav8</name><operator pos:start="377:35" pos:end="377:35">.</operator><name pos:start="377:36" pos:end="377:39">rlar</name><index pos:start="377:40" pos:end="377:53">[<expr pos:start="377:41" pos:end="377:52"><name pos:start="377:41" pos:end="377:52"><name pos:start="377:41" pos:end="377:45">attrs</name><operator pos:start="377:46" pos:end="377:46">.</operator><name pos:start="377:47" pos:end="377:52">secure</name></name></expr>]</index><index pos:start="377:54" pos:end="377:61">[<expr pos:start="377:55" pos:end="377:60"><name pos:start="377:55" pos:end="377:60">region</name></expr>]</index></name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="383:9" pos:end="387:9"><if pos:start="383:9" pos:end="387:9">if <condition pos:start="383:12" pos:end="383:42">(<expr pos:start="383:13" pos:end="383:41"><name pos:start="383:13" pos:end="383:18">region</name> <operator pos:start="383:20" pos:end="383:21">&gt;=</operator> <name pos:start="383:23" pos:end="383:41"><name pos:start="383:23" pos:end="383:25">cpu</name><operator pos:start="383:26" pos:end="383:27">-&gt;</operator><name pos:start="383:28" pos:end="383:41">pmsav7_dregion</name></name></expr>)</condition> <block pos:start="383:44" pos:end="387:9">{<block_content pos:start="385:13" pos:end="385:21">

            <return pos:start="385:13" pos:end="385:21">return <expr pos:start="385:20" pos:end="385:20"><literal type="number" pos:start="385:20" pos:end="385:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="389:9" pos:end="391:52">return <expr pos:start="389:16" pos:end="391:51"><operator pos:start="389:16" pos:end="389:16">(</operator><operator pos:start="389:17" pos:end="389:17">(</operator><name pos:start="389:18" pos:end="389:46"><name pos:start="389:18" pos:end="389:20">cpu</name><operator pos:start="389:21" pos:end="389:22">-&gt;</operator><name pos:start="389:23" pos:end="389:25">env</name><operator pos:start="389:26" pos:end="389:26">.</operator><name pos:start="389:27" pos:end="389:32">pmsav7</name><operator pos:start="389:33" pos:end="389:33">.</operator><name pos:start="389:34" pos:end="389:38">dracr</name><index pos:start="389:39" pos:end="389:46">[<expr pos:start="389:40" pos:end="389:45"><name pos:start="389:40" pos:end="389:45">region</name></expr>]</index></name> <operator pos:start="389:48" pos:end="389:48">&amp;</operator> <literal type="number" pos:start="389:50" pos:end="389:55">0xffff</literal><operator pos:start="389:56" pos:end="389:56">)</operator> <operator pos:start="389:58" pos:end="389:59">&lt;&lt;</operator> <literal type="number" pos:start="389:61" pos:end="389:62">16</literal><operator pos:start="389:63" pos:end="389:63">)</operator> <operator pos:start="389:65" pos:end="389:65">|</operator>

            <operator pos:start="391:13" pos:end="391:13">(</operator><name pos:start="391:14" pos:end="391:41"><name pos:start="391:14" pos:end="391:16">cpu</name><operator pos:start="391:17" pos:end="391:18">-&gt;</operator><name pos:start="391:19" pos:end="391:21">env</name><operator pos:start="391:22" pos:end="391:22">.</operator><name pos:start="391:23" pos:end="391:28">pmsav7</name><operator pos:start="391:29" pos:end="391:29">.</operator><name pos:start="391:30" pos:end="391:33">drsr</name><index pos:start="391:34" pos:end="391:41">[<expr pos:start="391:35" pos:end="391:40"><name pos:start="391:35" pos:end="391:40">region</name></expr>]</index></name> <operator pos:start="391:43" pos:end="391:43">&amp;</operator> <literal type="number" pos:start="391:45" pos:end="391:50">0xffff</literal><operator pos:start="391:51" pos:end="391:51">)</operator></expr>;</return>

    </block_content>}</block>

    <case pos:start="395:5" pos:end="395:15">case <expr pos:start="395:10" pos:end="395:14"><literal type="number" pos:start="395:10" pos:end="395:14">0xdc0</literal></expr>:</case> <comment type="block" pos:start="395:17" pos:end="395:31">/* MPU_MAIR0 */</comment>

        <if_stmt pos:start="397:9" pos:end="401:9"><if pos:start="397:9" pos:end="401:9">if <condition pos:start="397:12" pos:end="397:52">(<expr pos:start="397:13" pos:end="397:51"><operator pos:start="397:13" pos:end="397:13">!</operator><call pos:start="397:14" pos:end="397:51"><name pos:start="397:14" pos:end="397:24">arm_feature</name><argument_list pos:start="397:25" pos:end="397:51">(<argument pos:start="397:26" pos:end="397:34"><expr pos:start="397:26" pos:end="397:34"><operator pos:start="397:26" pos:end="397:26">&amp;</operator><name pos:start="397:27" pos:end="397:34"><name pos:start="397:27" pos:end="397:29">cpu</name><operator pos:start="397:30" pos:end="397:31">-&gt;</operator><name pos:start="397:32" pos:end="397:34">env</name></name></expr></argument>, <argument pos:start="397:37" pos:end="397:50"><expr pos:start="397:37" pos:end="397:50"><name pos:start="397:37" pos:end="397:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="397:54" pos:end="401:9">{<block_content pos:start="399:13" pos:end="399:28">

            <goto pos:start="399:13" pos:end="399:28">goto <name pos:start="399:18" pos:end="399:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="403:9" pos:end="403:51">return <expr pos:start="403:16" pos:end="403:50"><name pos:start="403:16" pos:end="403:50"><name pos:start="403:16" pos:end="403:18">cpu</name><operator pos:start="403:19" pos:end="403:20">-&gt;</operator><name pos:start="403:21" pos:end="403:23">env</name><operator pos:start="403:24" pos:end="403:24">.</operator><name pos:start="403:25" pos:end="403:30">pmsav8</name><operator pos:start="403:31" pos:end="403:31">.</operator><name pos:start="403:32" pos:end="403:36">mair0</name><index pos:start="403:37" pos:end="403:50">[<expr pos:start="403:38" pos:end="403:49"><name pos:start="403:38" pos:end="403:49"><name pos:start="403:38" pos:end="403:42">attrs</name><operator pos:start="403:43" pos:end="403:43">.</operator><name pos:start="403:44" pos:end="403:49">secure</name></name></expr>]</index></name></expr>;</return>

    <case pos:start="405:5" pos:end="405:15">case <expr pos:start="405:10" pos:end="405:14"><literal type="number" pos:start="405:10" pos:end="405:14">0xdc4</literal></expr>:</case> <comment type="block" pos:start="405:17" pos:end="405:31">/* MPU_MAIR1 */</comment>

        <if_stmt pos:start="407:9" pos:end="411:9"><if pos:start="407:9" pos:end="411:9">if <condition pos:start="407:12" pos:end="407:52">(<expr pos:start="407:13" pos:end="407:51"><operator pos:start="407:13" pos:end="407:13">!</operator><call pos:start="407:14" pos:end="407:51"><name pos:start="407:14" pos:end="407:24">arm_feature</name><argument_list pos:start="407:25" pos:end="407:51">(<argument pos:start="407:26" pos:end="407:34"><expr pos:start="407:26" pos:end="407:34"><operator pos:start="407:26" pos:end="407:26">&amp;</operator><name pos:start="407:27" pos:end="407:34"><name pos:start="407:27" pos:end="407:29">cpu</name><operator pos:start="407:30" pos:end="407:31">-&gt;</operator><name pos:start="407:32" pos:end="407:34">env</name></name></expr></argument>, <argument pos:start="407:37" pos:end="407:50"><expr pos:start="407:37" pos:end="407:50"><name pos:start="407:37" pos:end="407:50">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="407:54" pos:end="411:9">{<block_content pos:start="409:13" pos:end="409:28">

            <goto pos:start="409:13" pos:end="409:28">goto <name pos:start="409:18" pos:end="409:27">bad_offset</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <return pos:start="413:9" pos:end="413:51">return <expr pos:start="413:16" pos:end="413:50"><name pos:start="413:16" pos:end="413:50"><name pos:start="413:16" pos:end="413:18">cpu</name><operator pos:start="413:19" pos:end="413:20">-&gt;</operator><name pos:start="413:21" pos:end="413:23">env</name><operator pos:start="413:24" pos:end="413:24">.</operator><name pos:start="413:25" pos:end="413:30">pmsav8</name><operator pos:start="413:31" pos:end="413:31">.</operator><name pos:start="413:32" pos:end="413:36">mair1</name><index pos:start="413:37" pos:end="413:50">[<expr pos:start="413:38" pos:end="413:49"><name pos:start="413:38" pos:end="413:49"><name pos:start="413:38" pos:end="413:42">attrs</name><operator pos:start="413:43" pos:end="413:43">.</operator><name pos:start="413:44" pos:end="413:49">secure</name></name></expr>]</index></name></expr>;</return>

    <default pos:start="415:5" pos:end="415:12">default:</default>

    <label pos:start="417:5" pos:end="417:15"><name pos:start="417:5" pos:end="417:14">bad_offset</name>:</label>

        <expr_stmt pos:start="419:9" pos:end="419:79"><expr pos:start="419:9" pos:end="419:78"><call pos:start="419:9" pos:end="419:78"><name pos:start="419:9" pos:end="419:21">qemu_log_mask</name><argument_list pos:start="419:22" pos:end="419:78">(<argument pos:start="419:23" pos:end="419:37"><expr pos:start="419:23" pos:end="419:37"><name pos:start="419:23" pos:end="419:37">LOG_GUEST_ERROR</name></expr></argument>, <argument pos:start="419:40" pos:end="419:69"><expr pos:start="419:40" pos:end="419:69"><literal type="string" pos:start="419:40" pos:end="419:69">"NVIC: Bad read offset 0x%x\n"</literal></expr></argument>, <argument pos:start="419:72" pos:end="419:77"><expr pos:start="419:72" pos:end="419:77"><name pos:start="419:72" pos:end="419:77">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="421:9" pos:end="421:17">return <expr pos:start="421:16" pos:end="421:16"><literal type="number" pos:start="421:16" pos:end="421:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
