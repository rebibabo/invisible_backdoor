<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/147.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">alsa_init_in</name> <parameter_list pos:start="1:25" pos:end="1:63">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:34">HWVoiceIn</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">hw</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:58"><name pos:start="1:41" pos:end="1:46">struct</name> <name pos:start="1:48" pos:end="1:58">audsettings</name></name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">ALSAVoiceIn</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">alsa</name> <init pos:start="5:23" pos:end="5:42">= <expr pos:start="5:25" pos:end="5:42"><operator pos:start="5:25" pos:end="5:25">(</operator><name pos:start="5:26" pos:end="5:36">ALSAVoiceIn</name> <operator pos:start="5:38" pos:end="5:38">*</operator><operator pos:start="5:39" pos:end="5:39">)</operator> <name pos:start="5:41" pos:end="5:42">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:26">alsa_params_req</name></name></type> <name pos:start="7:28" pos:end="7:30">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:26">alsa_params_obt</name></name></type> <name pos:start="9:28" pos:end="9:30">obt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">snd_pcm_t</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">handle</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:22">audsettings</name></name></type> <name pos:start="13:24" pos:end="13:29">obt_as</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:55"><expr pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:7">req</name><operator pos:start="17:8" pos:end="17:8">.</operator><name pos:start="17:9" pos:end="17:11">fmt</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:54"><name pos:start="17:15" pos:end="17:28">aud_to_alsafmt</name> <argument_list pos:start="17:30" pos:end="17:54">(<argument pos:start="17:31" pos:end="17:37"><expr pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:37"><name pos:start="17:31" pos:end="17:32">as</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:37">fmt</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:53"><expr pos:start="17:40" pos:end="17:53"><name pos:start="17:40" pos:end="17:53"><name pos:start="17:40" pos:end="17:41">as</name><operator pos:start="17:42" pos:end="17:43">-&gt;</operator><name pos:start="17:44" pos:end="17:53">endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">req</name><operator pos:start="19:8" pos:end="19:8">.</operator><name pos:start="19:9" pos:end="19:12">freq</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:17">as</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:23">freq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:7">req</name><operator pos:start="21:8" pos:end="21:8">.</operator><name pos:start="21:9" pos:end="21:17">nchannels</name></name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:22">as</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:33">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">req</name><operator pos:start="23:8" pos:end="23:8">.</operator><name pos:start="23:9" pos:end="23:19">period_size</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:41"><name pos:start="23:23" pos:end="23:26">conf</name><operator pos:start="23:27" pos:end="23:27">.</operator><name pos:start="23:28" pos:end="23:41">period_size_in</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">req</name><operator pos:start="25:8" pos:end="25:8">.</operator><name pos:start="25:9" pos:end="25:19">buffer_size</name></name> <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:41"><name pos:start="25:23" pos:end="25:26">conf</name><operator pos:start="25:27" pos:end="25:27">.</operator><name pos:start="25:28" pos:end="25:41">buffer_size_in</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:44"><expr pos:start="27:5" pos:end="27:43"><name pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:7">req</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:20">size_in_usec</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:43"><name pos:start="27:24" pos:end="27:27">conf</name><operator pos:start="27:28" pos:end="27:28">.</operator><name pos:start="27:29" pos:end="27:43">size_in_usec_in</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="33:49"><expr pos:start="29:5" pos:end="33:48"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:7">req</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:21">override_mask</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator>

        <operator pos:start="31:9" pos:end="31:9">(</operator><ternary pos:start="31:10" pos:end="31:47"><condition pos:start="31:10" pos:end="31:41"><expr pos:start="31:10" pos:end="31:39"><name pos:start="31:10" pos:end="31:39"><name pos:start="31:10" pos:end="31:13">conf</name><operator pos:start="31:14" pos:end="31:14">.</operator><name pos:start="31:15" pos:end="31:39">period_size_in_overridden</name></name></expr> ?</condition><then pos:start="31:43" pos:end="31:43"> <expr pos:start="31:43" pos:end="31:43"><literal type="number" pos:start="31:43" pos:end="31:43">1</literal></expr> </then><else pos:start="31:45" pos:end="31:47">: <expr pos:start="31:47" pos:end="31:47"><literal type="number" pos:start="31:47" pos:end="31:47">0</literal></expr></else></ternary><operator pos:start="31:48" pos:end="31:48">)</operator> <operator pos:start="31:50" pos:end="31:50">|</operator>

        <operator pos:start="33:9" pos:end="33:9">(</operator><ternary pos:start="33:10" pos:end="33:47"><condition pos:start="33:10" pos:end="33:41"><expr pos:start="33:10" pos:end="33:39"><name pos:start="33:10" pos:end="33:39"><name pos:start="33:10" pos:end="33:13">conf</name><operator pos:start="33:14" pos:end="33:14">.</operator><name pos:start="33:15" pos:end="33:39">buffer_size_in_overridden</name></name></expr> ?</condition><then pos:start="33:43" pos:end="33:43"> <expr pos:start="33:43" pos:end="33:43"><literal type="number" pos:start="33:43" pos:end="33:43">2</literal></expr> </then><else pos:start="33:45" pos:end="33:47">: <expr pos:start="33:47" pos:end="33:47"><literal type="number" pos:start="33:47" pos:end="33:47">0</literal></expr></else></ternary><operator pos:start="33:48" pos:end="33:48">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:43">(<expr pos:start="37:9" pos:end="37:42"><call pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:17">alsa_open</name> <argument_list pos:start="37:19" pos:end="37:42">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr></argument>, <argument pos:start="37:23" pos:end="37:26"><expr pos:start="37:23" pos:end="37:26"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:26">req</name></expr></argument>, <argument pos:start="37:29" pos:end="37:32"><expr pos:start="37:29" pos:end="37:32"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:32">obt</name></expr></argument>, <argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:41">handle</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:45" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:27"><expr pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:10">obt_as</name><operator pos:start="45:11" pos:end="45:11">.</operator><name pos:start="45:12" pos:end="45:15">freq</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:26"><name pos:start="45:19" pos:end="45:21">obt</name><operator pos:start="45:22" pos:end="45:22">.</operator><name pos:start="45:23" pos:end="45:26">freq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:10">obt_as</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:20">nchannels</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:36"><name pos:start="47:24" pos:end="47:26">obt</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:36">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:25"><expr pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:10">obt_as</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:14">fmt</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <name pos:start="49:18" pos:end="49:24"><name pos:start="49:18" pos:end="49:20">obt</name><operator pos:start="49:21" pos:end="49:21">.</operator><name pos:start="49:22" pos:end="49:24">fmt</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:10">obt_as</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:21">endianness</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:27">obt</name><operator pos:start="51:28" pos:end="51:28">.</operator><name pos:start="51:29" pos:end="51:38">endianness</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:23">audio_pcm_init_info</name> <argument_list pos:start="55:25" pos:end="55:44">(<argument pos:start="55:26" pos:end="55:34"><expr pos:start="55:26" pos:end="55:34"><operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:34"><name pos:start="55:27" pos:end="55:28">hw</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:34">info</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:43"><expr pos:start="55:37" pos:end="55:43"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:43">obt_as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:6">hw</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:15">samples</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:29"><name pos:start="57:19" pos:end="57:21">obt</name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:29">samples</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:80"><expr pos:start="61:5" pos:end="61:79"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:8">alsa</name><operator pos:start="61:9" pos:end="61:10">-&gt;</operator><name pos:start="61:11" pos:end="61:17">pcm_buf</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:79"><name pos:start="61:21" pos:end="61:32">audio_calloc</name> <argument_list pos:start="61:34" pos:end="61:79">(<argument pos:start="61:35" pos:end="61:44"><expr pos:start="61:35" pos:end="61:44"><name pos:start="61:35" pos:end="61:44">AUDIO_FUNC</name></expr></argument>, <argument pos:start="61:47" pos:end="61:57"><expr pos:start="61:47" pos:end="61:57"><name pos:start="61:47" pos:end="61:57"><name pos:start="61:47" pos:end="61:48">hw</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:57">samples</name></name></expr></argument>, <argument pos:start="61:60" pos:end="61:78"><expr pos:start="61:60" pos:end="61:78"><literal type="number" pos:start="61:60" pos:end="61:60">1</literal> <operator pos:start="61:62" pos:end="61:63">&lt;&lt;</operator> <name pos:start="61:65" pos:end="61:78"><name pos:start="61:65" pos:end="61:66">hw</name><operator pos:start="61:67" pos:end="61:68">-&gt;</operator><name pos:start="61:69" pos:end="61:72">info</name><operator pos:start="61:73" pos:end="61:73">.</operator><name pos:start="61:74" pos:end="61:78">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="73:5"><if pos:start="63:5" pos:end="73:5">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:22"><name pos:start="63:10" pos:end="63:13">alsa</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">pcm_buf</name></name></expr>)</condition> <block pos:start="63:25" pos:end="73:5">{<block_content pos:start="65:9" pos:end="71:18">

        <expr_stmt pos:start="65:9" pos:end="67:49"><expr pos:start="65:9" pos:end="67:48"><call pos:start="65:9" pos:end="67:48"><name pos:start="65:9" pos:end="65:13">dolog</name> <argument_list pos:start="65:15" pos:end="67:48">(<argument pos:start="65:16" pos:end="65:76"><expr pos:start="65:16" pos:end="65:76"><literal type="string" pos:start="65:16" pos:end="65:76">"Could not allocate ADC buffer (%d samples, each %d bytes)\n"</literal></expr></argument>,

               <argument pos:start="67:16" pos:end="67:26"><expr pos:start="67:16" pos:end="67:26"><name pos:start="67:16" pos:end="67:26"><name pos:start="67:16" pos:end="67:17">hw</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:26">samples</name></name></expr></argument>, <argument pos:start="67:29" pos:end="67:47"><expr pos:start="67:29" pos:end="67:47"><literal type="number" pos:start="67:29" pos:end="67:29">1</literal> <operator pos:start="67:31" pos:end="67:32">&lt;&lt;</operator> <name pos:start="67:34" pos:end="67:47"><name pos:start="67:34" pos:end="67:35">hw</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:41">info</name><operator pos:start="67:42" pos:end="67:42">.</operator><name pos:start="67:43" pos:end="67:47">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:35"><expr pos:start="69:9" pos:end="69:34"><call pos:start="69:9" pos:end="69:34"><name pos:start="69:9" pos:end="69:24">alsa_anal_close1</name> <argument_list pos:start="69:26" pos:end="69:34">(<argument pos:start="69:27" pos:end="69:33"><expr pos:start="69:27" pos:end="69:33"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:33">handle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:26"><expr pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:16"><name pos:start="77:5" pos:end="77:8">alsa</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:16">handle</name></name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:25">handle</name></expr>;</expr_stmt>

    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
