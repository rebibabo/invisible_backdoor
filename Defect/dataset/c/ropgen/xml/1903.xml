<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1903.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">BlockDriverState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:38">bdrv_new_open</name><parameter_list pos:start="1:39" pos:end="5:49">(<parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:59">filename</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">fmt</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:48"><decl pos:start="5:40" pos:end="5:48"><type pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:48">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="87:1">{<block_content pos:start="9:5" pos:end="85:16">

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">bs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">BlockDriver</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:22"><name pos:start="13:10" pos:end="13:17">password</name><index pos:start="13:18" pos:end="13:22">[<expr pos:start="13:19" pos:end="13:21"><literal type="number" pos:start="13:19" pos:end="13:21">256</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:6">bs</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:17">bdrv_new</name><argument_list pos:start="17:18" pos:end="17:21">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><literal type="string" pos:start="17:19" pos:end="17:20">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">bs</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><call pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="21:41">(<argument pos:start="21:22" pos:end="21:40"><expr pos:start="21:22" pos:end="21:40"><literal type="string" pos:start="21:22" pos:end="21:40">"Not enough memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:18">goto <name pos:start="23:14" pos:end="23:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="43:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:12">(<expr pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">fmt</name></expr>)</condition> <block pos:start="27:14" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:9">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:11">drv</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:35"><name pos:start="29:15" pos:end="29:30">bdrv_find_format</name><argument_list pos:start="29:31" pos:end="29:35">(<argument pos:start="29:32" pos:end="29:34"><expr pos:start="29:32" pos:end="29:34"><name pos:start="29:32" pos:end="29:34">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:17">(<expr pos:start="31:13" pos:end="31:16"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:16">drv</name></expr>)</condition> <block pos:start="31:19" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:22">

            <expr_stmt pos:start="33:13" pos:end="33:58"><expr pos:start="33:13" pos:end="33:57"><call pos:start="33:13" pos:end="33:57"><name pos:start="33:13" pos:end="33:24">error_report</name><argument_list pos:start="33:25" pos:end="33:57">(<argument pos:start="33:26" pos:end="33:51"><expr pos:start="33:26" pos:end="33:51"><literal type="string" pos:start="33:26" pos:end="33:51">"Unknown file format '%s'"</literal></expr></argument>, <argument pos:start="33:54" pos:end="33:56"><expr pos:start="33:54" pos:end="33:56"><name pos:start="33:54" pos:end="33:56">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="35:13" pos:end="35:22">goto <name pos:start="35:18" pos:end="35:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="43:5">else <block pos:start="39:12" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:19">

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">drv</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:48">(<expr pos:start="45:9" pos:end="45:47"><call pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:17">bdrv_open</name><argument_list pos:start="45:18" pos:end="45:43">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">bs</name></expr></argument>, <argument pos:start="45:23" pos:end="45:30"><expr pos:start="45:23" pos:end="45:30"><name pos:start="45:23" pos:end="45:30">filename</name></expr></argument>, <argument pos:start="45:33" pos:end="45:37"><expr pos:start="45:33" pos:end="45:37"><name pos:start="45:33" pos:end="45:37">flags</name></expr></argument>, <argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><name pos:start="45:40" pos:end="45:42">drv</name></expr></argument>)</argument_list></call> <operator pos:start="45:45" pos:end="45:45">&lt;</operator> <literal type="number" pos:start="45:47" pos:end="45:47">0</literal></expr>)</condition> <block pos:start="45:50" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:54"><expr pos:start="47:9" pos:end="47:53"><call pos:start="47:9" pos:end="47:53"><name pos:start="47:9" pos:end="47:20">error_report</name><argument_list pos:start="47:21" pos:end="47:53">(<argument pos:start="47:22" pos:end="47:42"><expr pos:start="47:22" pos:end="47:42"><literal type="string" pos:start="47:22" pos:end="47:42">"Could not open '%s'"</literal></expr></argument>, <argument pos:start="47:45" pos:end="47:52"><expr pos:start="47:45" pos:end="47:52"><name pos:start="47:45" pos:end="47:52">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:18">goto <name pos:start="49:14" pos:end="49:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="73:5"><if pos:start="53:5" pos:end="73:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:25">bdrv_is_encrypted</name><argument_list pos:start="53:26" pos:end="53:29">(<argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><name pos:start="53:27" pos:end="53:28">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:32" pos:end="73:5">{<block_content pos:start="55:9" pos:end="71:9">

        <expr_stmt pos:start="55:9" pos:end="55:60"><expr pos:start="55:9" pos:end="55:59"><call pos:start="55:9" pos:end="55:59"><name pos:start="55:9" pos:end="55:14">printf</name><argument_list pos:start="55:15" pos:end="55:59">(<argument pos:start="55:16" pos:end="55:48"><expr pos:start="55:16" pos:end="55:48"><literal type="string" pos:start="55:16" pos:end="55:48">"Disk image '%s' is encrypted.\n"</literal></expr></argument>, <argument pos:start="55:51" pos:end="55:58"><expr pos:start="55:51" pos:end="55:58"><name pos:start="55:51" pos:end="55:58">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:58">(<expr pos:start="57:13" pos:end="57:57"><call pos:start="57:13" pos:end="57:53"><name pos:start="57:13" pos:end="57:25">read_password</name><argument_list pos:start="57:26" pos:end="57:53">(<argument pos:start="57:27" pos:end="57:34"><expr pos:start="57:27" pos:end="57:34"><name pos:start="57:27" pos:end="57:34">password</name></expr></argument>, <argument pos:start="57:37" pos:end="57:52"><expr pos:start="57:37" pos:end="57:52"><sizeof pos:start="57:37" pos:end="57:52">sizeof<argument_list pos:start="57:43" pos:end="57:52">(<argument pos:start="57:44" pos:end="57:51"><expr pos:start="57:44" pos:end="57:51"><name pos:start="57:44" pos:end="57:51">password</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="57:55" pos:end="57:55">&lt;</operator> <literal type="number" pos:start="57:57" pos:end="57:57">0</literal></expr>)</condition> <block pos:start="57:60" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:22">

            <expr_stmt pos:start="59:13" pos:end="59:46"><expr pos:start="59:13" pos:end="59:45"><call pos:start="59:13" pos:end="59:45"><name pos:start="59:13" pos:end="59:24">error_report</name><argument_list pos:start="59:25" pos:end="59:45">(<argument pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:44"><literal type="string" pos:start="59:26" pos:end="59:44">"No password given"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="61:13" pos:end="61:22">goto <name pos:start="61:18" pos:end="61:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:43">(<expr pos:start="65:13" pos:end="65:42"><call pos:start="65:13" pos:end="65:38"><name pos:start="65:13" pos:end="65:24">bdrv_set_key</name><argument_list pos:start="65:25" pos:end="65:38">(<argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><name pos:start="65:26" pos:end="65:27">bs</name></expr></argument>, <argument pos:start="65:30" pos:end="65:37"><expr pos:start="65:30" pos:end="65:37"><name pos:start="65:30" pos:end="65:37">password</name></expr></argument>)</argument_list></call> <operator pos:start="65:40" pos:end="65:40">&lt;</operator> <literal type="number" pos:start="65:42" pos:end="65:42">0</literal></expr>)</condition> <block pos:start="65:45" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:22">

            <expr_stmt pos:start="67:13" pos:end="67:45"><expr pos:start="67:13" pos:end="67:44"><call pos:start="67:13" pos:end="67:44"><name pos:start="67:13" pos:end="67:24">error_report</name><argument_list pos:start="67:25" pos:end="67:44">(<argument pos:start="67:26" pos:end="67:43"><expr pos:start="67:26" pos:end="67:43"><literal type="string" pos:start="67:26" pos:end="67:43">"invalid password"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="69:13" pos:end="69:22">goto <name pos:start="69:18" pos:end="69:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="75:5" pos:end="75:14">return <expr pos:start="75:12" pos:end="75:13"><name pos:start="75:12" pos:end="75:13">bs</name></expr>;</return>

<label pos:start="77:1" pos:end="77:5"><name pos:start="77:1" pos:end="77:4">fail</name>:</label>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:11">(<expr pos:start="79:9" pos:end="79:10"><name pos:start="79:9" pos:end="79:10">bs</name></expr>)</condition> <block pos:start="79:13" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:24">

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><call pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:19">bdrv_delete</name><argument_list pos:start="81:20" pos:end="81:23">(<argument pos:start="81:21" pos:end="81:22"><expr pos:start="81:21" pos:end="81:22"><name pos:start="81:21" pos:end="81:22">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="85:5" pos:end="85:16">return <expr pos:start="85:12" pos:end="85:15"><name pos:start="85:12" pos:end="85:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
