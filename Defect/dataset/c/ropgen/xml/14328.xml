<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14328.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">mp3_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MP3DecContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">mp3</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">off</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:37"><name pos:start="17:10" pos:end="17:28">avformat_new_stream</name><argument_list pos:start="17:29" pos:end="17:37">(<argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">s</name></expr></argument>, <argument pos:start="17:33" pos:end="17:36"><expr pos:start="17:33" pos:end="17:36"><name pos:start="17:33" pos:end="17:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">st</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:6">st</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:13">codec</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">codec_type</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:46">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:6">st</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:13">codec</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">codec_id</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:41">AV_CODEC_ID_MP3</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:47"><expr pos:start="29:5" pos:end="29:46"><name pos:start="29:5" pos:end="29:20"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:20">need_parsing</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:46">AVSTREAM_PARSE_FULL_RAW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:6">st</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:18">start_time</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:34">// lcm of all mp3 sample rates</comment>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><call pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:23">avpriv_set_pts_info</name><argument_list pos:start="37:24" pos:end="37:44">(<argument pos:start="37:25" pos:end="37:26"><expr pos:start="37:25" pos:end="37:26"><name pos:start="37:25" pos:end="37:26">st</name></expr></argument>, <argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><literal type="number" pos:start="37:29" pos:end="37:30">64</literal></expr></argument>, <argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><literal type="number" pos:start="37:33" pos:end="37:33">1</literal></expr></argument>, <argument pos:start="37:36" pos:end="37:43"><expr pos:start="37:36" pos:end="37:43"><literal type="number" pos:start="37:36" pos:end="37:43">14112000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">pb</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:18">maxsize</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <operator pos:start="41:22" pos:end="41:22">-</operator><literal type="number" pos:start="41:23" pos:end="41:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:7">off</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:26"><name pos:start="43:11" pos:end="43:19">avio_tell</name><argument_list pos:start="43:20" pos:end="43:26">(<argument pos:start="43:21" pos:end="43:25"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="49:25"><if pos:start="47:5" pos:end="49:25">if <condition pos:start="47:8" pos:end="47:67">(<expr pos:start="47:9" pos:end="47:66"><operator pos:start="47:9" pos:end="47:9">!</operator><call pos:start="47:10" pos:end="47:66"><name pos:start="47:10" pos:end="47:20">av_dict_get</name><argument_list pos:start="47:21" pos:end="47:66">(<argument pos:start="47:22" pos:end="47:32"><expr pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:32">metadata</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:36"><expr pos:start="47:35" pos:end="47:36"><literal type="string" pos:start="47:35" pos:end="47:36">""</literal></expr></argument>, <argument pos:start="47:39" pos:end="47:42"><expr pos:start="47:39" pos:end="47:42"><name pos:start="47:39" pos:end="47:42">NULL</name></expr></argument>, <argument pos:start="47:45" pos:end="47:65"><expr pos:start="47:45" pos:end="47:65"><name pos:start="47:45" pos:end="47:65">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:25"><block_content pos:start="49:9" pos:end="49:25">

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:21">ff_id3v1_read</name><argument_list pos:start="49:22" pos:end="49:24">(<argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><name pos:start="49:23" pos:end="49:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="55:41"><if pos:start="53:5" pos:end="55:41">if<condition pos:start="53:7" pos:end="53:23">(<expr pos:start="53:8" pos:end="53:22"><name pos:start="53:8" pos:end="53:22"><name pos:start="53:8" pos:end="53:8">s</name><operator pos:start="53:9" pos:end="53:10">-&gt;</operator><name pos:start="53:11" pos:end="53:12">pb</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:22">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:41"><block_content pos:start="55:9" pos:end="55:41">

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:11">mp3</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:21">filesize</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <call pos:start="55:25" pos:end="55:40"><name pos:start="55:25" pos:end="55:33">avio_size</name><argument_list pos:start="55:34" pos:end="55:40">(<argument pos:start="55:35" pos:end="55:39"><expr pos:start="55:35" pos:end="55:39"><name pos:start="55:35" pos:end="55:39"><name pos:start="55:35" pos:end="55:35">s</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="61:40"><if pos:start="59:5" pos:end="61:40">if <condition pos:start="59:8" pos:end="59:43">(<expr pos:start="59:9" pos:end="59:42"><call pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:26">mp3_parse_vbr_tags</name><argument_list pos:start="59:27" pos:end="59:38">(<argument pos:start="59:28" pos:end="59:28"><expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">s</name></expr></argument>, <argument pos:start="59:31" pos:end="59:32"><expr pos:start="59:31" pos:end="59:32"><name pos:start="59:31" pos:end="59:32">st</name></expr></argument>, <argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><name pos:start="59:35" pos:end="59:37">off</name></expr></argument>)</argument_list></call> <operator pos:start="59:40" pos:end="59:40">&lt;</operator> <literal type="number" pos:start="59:42" pos:end="59:42">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:40"><block_content pos:start="61:9" pos:end="61:40">

        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><call pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:17">avio_seek</name><argument_list pos:start="61:18" pos:end="61:39">(<argument pos:start="61:19" pos:end="61:23"><expr pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:19">s</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:23">pb</name></name></expr></argument>, <argument pos:start="61:26" pos:end="61:28"><expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:28">off</name></expr></argument>, <argument pos:start="61:31" pos:end="61:38"><expr pos:start="61:31" pos:end="61:38"><name pos:start="61:31" pos:end="61:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:48"><expr pos:start="65:5" pos:end="65:47"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:47"><name pos:start="65:11" pos:end="65:30">ff_replaygain_export</name><argument_list pos:start="65:31" pos:end="65:47">(<argument pos:start="65:32" pos:end="65:33"><expr pos:start="65:32" pos:end="65:33"><name pos:start="65:32" pos:end="65:33">st</name></expr></argument>, <argument pos:start="65:36" pos:end="65:46"><expr pos:start="65:36" pos:end="65:46"><name pos:start="65:36" pos:end="65:46"><name pos:start="65:36" pos:end="65:36">s</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:46">metadata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="69:19"><if pos:start="67:5" pos:end="69:19">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:19"><block_content pos:start="69:9" pos:end="69:19">

        <return pos:start="69:9" pos:end="69:19">return <expr pos:start="69:16" pos:end="69:18"><name pos:start="69:16" pos:end="69:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:7">off</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:26"><name pos:start="73:11" pos:end="73:19">avio_tell</name><argument_list pos:start="73:20" pos:end="73:26">(<argument pos:start="73:21" pos:end="73:25"><expr pos:start="73:21" pos:end="73:25"><name pos:start="73:21" pos:end="73:25"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="75:5" pos:end="111:5">for <control pos:start="75:9" pos:end="75:35">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:30"><expr pos:start="75:17" pos:end="75:29"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <literal type="number" pos:start="75:21" pos:end="75:22">64</literal> <operator pos:start="75:24" pos:end="75:24">*</operator> <literal type="number" pos:start="75:26" pos:end="75:29">1024</literal></expr>;</condition> <incr pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:32">i</name><operator pos:start="75:33" pos:end="75:34">++</operator></expr></incr>)</control> <block pos:start="75:37" pos:end="111:5">{<block_content pos:start="77:9" pos:end="109:40">

        <decl_stmt pos:start="77:9" pos:end="77:33"><decl pos:start="77:9" pos:end="77:23"><type pos:start="77:9" pos:end="77:16"><name pos:start="77:9" pos:end="77:16">uint32_t</name></type> <name pos:start="77:18" pos:end="77:23">header</name></decl>, <decl pos:start="77:26" pos:end="77:32"><type ref="prev" pos:start="77:9" pos:end="77:16"/><name pos:start="77:26" pos:end="77:32">header2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:23"><decl pos:start="79:9" pos:end="79:22"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:22">frame_size</name></decl>;</decl_stmt>

        <if_stmt pos:start="81:9" pos:end="83:54"><if pos:start="81:9" pos:end="83:54">if <condition pos:start="81:12" pos:end="81:22">(<expr pos:start="81:13" pos:end="81:21"><operator pos:start="81:13" pos:end="81:13">!</operator><operator pos:start="81:14" pos:end="81:14">(</operator><name pos:start="81:15" pos:end="81:15">i</name><operator pos:start="81:16" pos:end="81:16">&amp;</operator><literal type="number" pos:start="81:17" pos:end="81:20">1023</literal><operator pos:start="81:21" pos:end="81:21">)</operator></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:54"><block_content pos:start="83:13" pos:end="83:54">

            <expr_stmt pos:start="83:13" pos:end="83:54"><expr pos:start="83:13" pos:end="83:53"><call pos:start="83:13" pos:end="83:53"><name pos:start="83:13" pos:end="83:32">ffio_ensure_seekback</name><argument_list pos:start="83:33" pos:end="83:53">(<argument pos:start="83:34" pos:end="83:38"><expr pos:start="83:34" pos:end="83:38"><name pos:start="83:34" pos:end="83:38"><name pos:start="83:34" pos:end="83:34">s</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:38">pb</name></name></expr></argument>, <argument pos:start="83:41" pos:end="83:52"><expr pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:41">i</name> <operator pos:start="83:43" pos:end="83:43">+</operator> <literal type="number" pos:start="83:45" pos:end="83:50">1024</literal> <operator pos:start="83:50" pos:end="83:50">+</operator> <literal type="number" pos:start="83:52" pos:end="83:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:52"><expr pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:18">frame_size</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <call pos:start="85:22" pos:end="85:51"><name pos:start="85:22" pos:end="85:26">check</name><argument_list pos:start="85:27" pos:end="85:51">(<argument pos:start="85:28" pos:end="85:32"><expr pos:start="85:28" pos:end="85:32"><name pos:start="85:28" pos:end="85:32"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:32">pb</name></name></expr></argument>, <argument pos:start="85:35" pos:end="85:41"><expr pos:start="85:35" pos:end="85:41"><name pos:start="85:35" pos:end="85:37">off</name> <operator pos:start="85:39" pos:end="85:39">+</operator> <name pos:start="85:41" pos:end="85:41">i</name></expr></argument>, <argument pos:start="85:44" pos:end="85:50"><expr pos:start="85:44" pos:end="85:50"><operator pos:start="85:44" pos:end="85:44">&amp;</operator><name pos:start="85:45" pos:end="85:50">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="107:9"><if pos:start="87:9" pos:end="107:9">if <condition pos:start="87:12" pos:end="87:27">(<expr pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:22">frame_size</name> <operator pos:start="87:24" pos:end="87:24">&gt;</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>)</condition> <block pos:start="87:29" pos:end="107:9">{<block_content pos:start="89:13" pos:end="105:13">

            <expr_stmt pos:start="89:13" pos:end="89:44"><expr pos:start="89:13" pos:end="89:43"><call pos:start="89:13" pos:end="89:43"><name pos:start="89:13" pos:end="89:21">avio_seek</name><argument_list pos:start="89:22" pos:end="89:43">(<argument pos:start="89:23" pos:end="89:27"><expr pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:23">s</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:27">pb</name></name></expr></argument>, <argument pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:32">off</name></expr></argument>, <argument pos:start="89:35" pos:end="89:42"><expr pos:start="89:35" pos:end="89:42"><name pos:start="89:35" pos:end="89:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:67"><expr pos:start="91:13" pos:end="91:66"><call pos:start="91:13" pos:end="91:66"><name pos:start="91:13" pos:end="91:32">ffio_ensure_seekback</name><argument_list pos:start="91:33" pos:end="91:66">(<argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:34">s</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:38">pb</name></name></expr></argument>, <argument pos:start="91:41" pos:end="91:65"><expr pos:start="91:41" pos:end="91:65"><name pos:start="91:41" pos:end="91:41">i</name> <operator pos:start="91:43" pos:end="91:43">+</operator> <literal type="number" pos:start="91:45" pos:end="91:50">1024</literal> <operator pos:start="91:50" pos:end="91:50">+</operator> <name pos:start="91:52" pos:end="91:61">frame_size</name> <operator pos:start="91:63" pos:end="91:63">+</operator> <literal type="number" pos:start="91:65" pos:end="91:65">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="105:13"><if pos:start="93:13" pos:end="105:13">if <condition pos:start="93:16" pos:end="95:76">(<expr pos:start="93:17" pos:end="95:75"><call pos:start="93:17" pos:end="93:60"><name pos:start="93:17" pos:end="93:21">check</name><argument_list pos:start="93:22" pos:end="93:60">(<argument pos:start="93:23" pos:end="93:27"><expr pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:23">s</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:27">pb</name></name></expr></argument>, <argument pos:start="93:30" pos:end="93:49"><expr pos:start="93:30" pos:end="93:49"><name pos:start="93:30" pos:end="93:32">off</name> <operator pos:start="93:34" pos:end="93:34">+</operator> <name pos:start="93:36" pos:end="93:36">i</name> <operator pos:start="93:38" pos:end="93:38">+</operator> <name pos:start="93:40" pos:end="93:49">frame_size</name></expr></argument>, <argument pos:start="93:52" pos:end="93:59"><expr pos:start="93:52" pos:end="93:59"><operator pos:start="93:52" pos:end="93:52">&amp;</operator><name pos:start="93:53" pos:end="93:59">header2</name></expr></argument>)</argument_list></call> <operator pos:start="93:62" pos:end="93:63">&gt;=</operator> <literal type="number" pos:start="93:65" pos:end="93:65">0</literal> <operator pos:start="93:67" pos:end="93:68">&amp;&amp;</operator>

                <operator pos:start="95:17" pos:end="95:17">(</operator><name pos:start="95:18" pos:end="95:23">header</name> <operator pos:start="95:25" pos:end="95:25">&amp;</operator> <name pos:start="95:27" pos:end="95:42">SAME_HEADER_MASK</name><operator pos:start="95:43" pos:end="95:43">)</operator> <operator pos:start="95:45" pos:end="95:46">==</operator> <operator pos:start="95:48" pos:end="95:48">(</operator><name pos:start="95:49" pos:end="95:55">header2</name> <operator pos:start="95:57" pos:end="95:57">&amp;</operator> <name pos:start="95:59" pos:end="95:74">SAME_HEADER_MASK</name><operator pos:start="95:75" pos:end="95:75">)</operator></expr>)</condition>

            <block pos:start="97:13" pos:end="105:13">{<block_content pos:start="99:17" pos:end="103:22">

                <expr_stmt pos:start="99:17" pos:end="99:92"><expr pos:start="99:17" pos:end="99:91"><call pos:start="99:17" pos:end="99:91"><name pos:start="99:17" pos:end="99:22">av_log</name><argument_list pos:start="99:23" pos:end="99:91">(<argument pos:start="99:24" pos:end="99:24"><expr pos:start="99:24" pos:end="99:24"><name pos:start="99:24" pos:end="99:24">s</name></expr></argument>, <argument pos:start="99:27" pos:end="99:37"><expr pos:start="99:27" pos:end="99:37"><name pos:start="99:27" pos:end="99:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="99:40" pos:end="99:82"><expr pos:start="99:40" pos:end="99:82"><literal type="string" pos:start="99:40" pos:end="99:71">"Skipping %d bytes of junk at %"</literal><name pos:start="99:72" pos:end="99:77">PRId64</name><literal type="string" pos:start="99:78" pos:end="99:82">".\n"</literal></expr></argument>, <argument pos:start="99:85" pos:end="99:85"><expr pos:start="99:85" pos:end="99:85"><name pos:start="99:85" pos:end="99:85">i</name></expr></argument>, <argument pos:start="99:88" pos:end="99:90"><expr pos:start="99:88" pos:end="99:90"><name pos:start="99:88" pos:end="99:90">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:52"><expr pos:start="101:17" pos:end="101:51"><call pos:start="101:17" pos:end="101:51"><name pos:start="101:17" pos:end="101:25">avio_seek</name><argument_list pos:start="101:26" pos:end="101:51">(<argument pos:start="101:27" pos:end="101:31"><expr pos:start="101:27" pos:end="101:31"><name pos:start="101:27" pos:end="101:31"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:31">pb</name></name></expr></argument>, <argument pos:start="101:34" pos:end="101:40"><expr pos:start="101:34" pos:end="101:40"><name pos:start="101:34" pos:end="101:36">off</name> <operator pos:start="101:38" pos:end="101:38">+</operator> <name pos:start="101:40" pos:end="101:40">i</name></expr></argument>, <argument pos:start="101:43" pos:end="101:50"><expr pos:start="101:43" pos:end="101:50"><name pos:start="101:43" pos:end="101:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><call pos:start="109:9" pos:end="109:39"><name pos:start="109:9" pos:end="109:17">avio_seek</name><argument_list pos:start="109:18" pos:end="109:39">(<argument pos:start="109:19" pos:end="109:23"><expr pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">pb</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:28"><expr pos:start="109:26" pos:end="109:28"><name pos:start="109:26" pos:end="109:28">off</name></expr></argument>, <argument pos:start="109:31" pos:end="109:38"><expr pos:start="109:31" pos:end="109:38"><name pos:start="109:31" pos:end="109:38">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="115:5" pos:end="115:68">// the seek index is relative to the end of the xing vbr headers</comment>

    <for pos:start="117:5" pos:end="119:53">for <control pos:start="117:9" pos:end="117:46">(<init pos:start="117:10" pos:end="117:15"><expr pos:start="117:10" pos:end="117:14"><name pos:start="117:10" pos:end="117:10">i</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <literal type="number" pos:start="117:14" pos:end="117:14">0</literal></expr>;</init> <condition pos:start="117:17" pos:end="117:41"><expr pos:start="117:17" pos:end="117:40"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:19">&lt;</operator> <name pos:start="117:21" pos:end="117:40"><name pos:start="117:21" pos:end="117:22">st</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:40">nb_index_entries</name></name></expr>;</condition> <incr pos:start="117:43" pos:end="117:45"><expr pos:start="117:43" pos:end="117:45"><name pos:start="117:43" pos:end="117:43">i</name><operator pos:start="117:44" pos:end="117:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="119:9" pos:end="119:53"><block_content pos:start="119:9" pos:end="119:53">

        <expr_stmt pos:start="119:9" pos:end="119:53"><expr pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:10">st</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:25">index_entries</name><index pos:start="119:26" pos:end="119:28">[<expr pos:start="119:27" pos:end="119:27"><name pos:start="119:27" pos:end="119:27">i</name></expr>]</index></name><operator pos:start="119:29" pos:end="119:29">.</operator><name pos:start="119:30" pos:end="119:32">pos</name> <operator pos:start="119:34" pos:end="119:35">+=</operator> <call pos:start="119:37" pos:end="119:52"><name pos:start="119:37" pos:end="119:45">avio_tell</name><argument_list pos:start="119:46" pos:end="119:52">(<argument pos:start="119:47" pos:end="119:51"><expr pos:start="119:47" pos:end="119:51"><name pos:start="119:47" pos:end="119:51"><name pos:start="119:47" pos:end="119:47">s</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:51">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="123:5" pos:end="123:72">/* the parameters will be extracted from the compressed bitstream */</comment>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
