<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20203.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">virtio_blk_set_config</name><parameter_list pos:start="1:34" pos:end="1:76">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:46">VirtIODevice</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">vdev</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:75"><decl pos:start="1:55" pos:end="1:75"><type pos:start="1:55" pos:end="1:75"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:75">config</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:53">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">VirtIOBlock</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><call pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:31">VIRTIO_BLK</name><argument_list pos:start="5:32" pos:end="5:37">(<argument pos:start="5:33" pos:end="5:36"><expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:28">virtio_blk_config</name></name></type> <name pos:start="7:30" pos:end="7:35">blkcfg</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><call pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:10">memcpy</name><argument_list pos:start="11:11" pos:end="11:43">(<argument pos:start="11:12" pos:end="11:18"><expr pos:start="11:12" pos:end="11:18"><operator pos:start="11:12" pos:end="11:12">&amp;</operator><name pos:start="11:13" pos:end="11:18">blkcfg</name></expr></argument>, <argument pos:start="11:21" pos:end="11:26"><expr pos:start="11:21" pos:end="11:26"><name pos:start="11:21" pos:end="11:26">config</name></expr></argument>, <argument pos:start="11:29" pos:end="11:42"><expr pos:start="11:29" pos:end="11:42"><sizeof pos:start="11:29" pos:end="11:42">sizeof<argument_list pos:start="11:35" pos:end="11:42">(<argument pos:start="11:36" pos:end="11:41"><expr pos:start="11:36" pos:end="11:41"><name pos:start="11:36" pos:end="11:41">blkcfg</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:53"><expr pos:start="15:5" pos:end="15:52"><call pos:start="15:5" pos:end="15:52"><name pos:start="15:5" pos:end="15:23">aio_context_acquire</name><argument_list pos:start="15:24" pos:end="15:52">(<argument pos:start="15:25" pos:end="15:51"><expr pos:start="15:25" pos:end="15:51"><call pos:start="15:25" pos:end="15:51"><name pos:start="15:25" pos:end="15:44">bdrv_get_aio_context</name><argument_list pos:start="15:45" pos:end="15:51">(<argument pos:start="15:46" pos:end="15:50"><expr pos:start="15:46" pos:end="15:50"><name pos:start="15:46" pos:end="15:50"><name pos:start="15:46" pos:end="15:46">s</name><operator pos:start="15:47" pos:end="15:48">-&gt;</operator><name pos:start="15:49" pos:end="15:50">bs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><call pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:31">bdrv_set_enable_write_cache</name><argument_list pos:start="17:32" pos:end="17:55">(<argument pos:start="17:33" pos:end="17:37"><expr pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:37"><name pos:start="17:33" pos:end="17:33">s</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:37">bs</name></name></expr></argument>, <argument pos:start="17:40" pos:end="17:54"><expr pos:start="17:40" pos:end="17:54"><name pos:start="17:40" pos:end="17:49"><name pos:start="17:40" pos:end="17:45">blkcfg</name><operator pos:start="17:46" pos:end="17:46">.</operator><name pos:start="17:47" pos:end="17:49">wce</name></name> <operator pos:start="17:51" pos:end="17:52">!=</operator> <literal type="number" pos:start="17:54" pos:end="17:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><call pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:23">aio_context_release</name><argument_list pos:start="19:24" pos:end="19:52">(<argument pos:start="19:25" pos:end="19:51"><expr pos:start="19:25" pos:end="19:51"><call pos:start="19:25" pos:end="19:51"><name pos:start="19:25" pos:end="19:44">bdrv_get_aio_context</name><argument_list pos:start="19:45" pos:end="19:51">(<argument pos:start="19:46" pos:end="19:50"><expr pos:start="19:46" pos:end="19:50"><name pos:start="19:46" pos:end="19:50"><name pos:start="19:46" pos:end="19:46">s</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:50">bs</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
