<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17257.c" pos:tabs="8"><function pos:start="1:1" pos:end="447:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:32">(<parameter pos:start="1:15" pos:end="1:31"><decl pos:start="1:15" pos:end="1:31"><type pos:start="1:15" pos:end="1:28"><name pos:start="1:15" pos:end="1:26">CPUMIPSState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="447:1">{<block_content pos:start="5:5" pos:end="445:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:45">= <expr pos:start="5:20" pos:end="5:45"><call pos:start="5:20" pos:end="5:45"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:45">(<argument pos:start="5:24" pos:end="5:44"><expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:39">mips_env_get_cpu</name><argument_list pos:start="5:40" pos:end="5:44">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">target_siginfo_t</name></type> <name pos:start="7:22" pos:end="7:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">abi_long</name></type> <name pos:start="11:14" pos:end="11:16">ret</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="13:1" pos:end="13:26"># <cpp:directive pos:start="13:3" pos:end="13:7">ifdef</cpp:directive> <name pos:start="13:9" pos:end="13:26">TARGET_ABI_MIPSO32</name></cpp:ifdef>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:28">syscall_num</name></decl>;</decl_stmt>

<cpp:endif pos:start="17:1" pos:end="17:7"># <cpp:directive pos:start="17:3" pos:end="17:7">endif</cpp:directive></cpp:endif>



    <for pos:start="21:5" pos:end="445:5">for<control pos:start="21:8" pos:end="21:11">(<init pos:start="21:9" pos:end="21:9">;</init><condition pos:start="21:10" pos:end="21:10">;</condition><incr/>)</control> <block pos:start="21:13" pos:end="445:5">{<block_content pos:start="23:9" pos:end="443:37">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><call pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:22">cpu_exec_start</name><argument_list pos:start="23:23" pos:end="23:26">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:14">trapnr</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:35"><name pos:start="25:18" pos:end="25:30">cpu_mips_exec</name><argument_list pos:start="25:31" pos:end="25:35">(<argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:34">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:25"><expr pos:start="27:9" pos:end="27:24"><call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:20">cpu_exec_end</name><argument_list pos:start="27:21" pos:end="27:24">(<argument pos:start="27:22" pos:end="27:23"><expr pos:start="27:22" pos:end="27:23"><name pos:start="27:22" pos:end="27:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="29:9" pos:end="441:9">switch<condition pos:start="29:15" pos:end="29:22">(<expr pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:21">trapnr</name></expr>)</condition> <block pos:start="29:24" pos:end="441:9">{<block_content pos:start="31:9" pos:end="439:20">

        <case pos:start="31:9" pos:end="31:26">case <expr pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:25">EXCP_SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="36:0"><expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:15">env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:26">active_tc</name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:29">PC</name></name> <operator pos:start="33:31" pos:end="33:32">+=</operator> <literal type="number" pos:start="33:34" pos:end="33:34">4</literal></expr>;</expr_stmt>

<cpp:ifdef pos:start="35:1" pos:end="35:26"># <cpp:directive pos:start="35:3" pos:end="35:7">ifdef</cpp:directive> <name pos:start="35:9" pos:end="35:26">TARGET_ABI_MIPSO32</name></cpp:ifdef>

            <expr_stmt pos:start="37:13" pos:end="37:55"><expr pos:start="37:13" pos:end="37:54"><name pos:start="37:13" pos:end="37:23">syscall_num</name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:47"><name pos:start="37:27" pos:end="37:29">env</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:40">active_tc</name><operator pos:start="37:41" pos:end="37:41">.</operator><name pos:start="37:42" pos:end="37:44">gpr</name><index pos:start="37:45" pos:end="37:47">[<expr pos:start="37:46" pos:end="37:46"><literal type="number" pos:start="37:46" pos:end="37:46">2</literal></expr>]</index></name> <operator pos:start="37:49" pos:end="37:49">-</operator> <literal type="number" pos:start="37:51" pos:end="37:54">4000</literal></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="111:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:57">(<expr pos:start="39:17" pos:end="39:56"><name pos:start="39:17" pos:end="39:27">syscall_num</name> <operator pos:start="39:29" pos:end="39:30">&gt;=</operator> <sizeof pos:start="39:32" pos:end="39:56">sizeof<argument_list pos:start="39:38" pos:end="39:56">(<argument pos:start="39:39" pos:end="39:55"><expr pos:start="39:39" pos:end="39:55"><name pos:start="39:39" pos:end="39:55">mips_syscall_args</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="39:59" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:37">

                <expr_stmt pos:start="41:17" pos:end="41:37"><expr pos:start="41:17" pos:end="41:36"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">-</operator><name pos:start="41:24" pos:end="41:36">TARGET_ENOSYS</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="111:13">else <block pos:start="43:20" pos:end="111:13">{<block_content pos:start="45:17" pos:end="109:57">

                <decl_stmt pos:start="45:17" pos:end="45:28"><decl pos:start="45:17" pos:end="45:27"><type pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">int</name></type> <name pos:start="45:21" pos:end="45:27">nb_args</name></decl>;</decl_stmt>

                <decl_stmt pos:start="47:17" pos:end="47:33"><decl pos:start="47:17" pos:end="47:32"><type pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:25">abi_ulong</name></type> <name pos:start="47:27" pos:end="47:32">sp_reg</name></decl>;</decl_stmt>

                <decl_stmt pos:start="49:17" pos:end="49:65"><decl pos:start="49:17" pos:end="49:34"><type pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:25">abi_ulong</name></type> <name pos:start="49:27" pos:end="49:30">arg5</name> <init pos:start="49:32" pos:end="49:34">= <expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr></init></decl>, <decl pos:start="49:37" pos:end="49:44"><type ref="prev" pos:start="49:17" pos:end="49:25"/><name pos:start="49:37" pos:end="49:40">arg6</name> <init pos:start="49:42" pos:end="49:44">= <expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">0</literal></expr></init></decl>, <decl pos:start="49:47" pos:end="49:54"><type ref="prev" pos:start="49:17" pos:end="49:25"/><name pos:start="49:47" pos:end="49:50">arg7</name> <init pos:start="49:52" pos:end="49:54">= <expr pos:start="49:54" pos:end="49:54"><literal type="number" pos:start="49:54" pos:end="49:54">0</literal></expr></init></decl>, <decl pos:start="49:57" pos:end="49:64"><type ref="prev" pos:start="49:17" pos:end="49:25"/><name pos:start="49:57" pos:end="49:60">arg8</name> <init pos:start="49:62" pos:end="49:64">= <expr pos:start="49:64" pos:end="49:64"><literal type="number" pos:start="49:64" pos:end="49:64">0</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="53:17" pos:end="53:57"><expr pos:start="53:17" pos:end="53:56"><name pos:start="53:17" pos:end="53:23">nb_args</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:56"><name pos:start="53:27" pos:end="53:43">mips_syscall_args</name><index pos:start="53:44" pos:end="53:56">[<expr pos:start="53:45" pos:end="53:55"><name pos:start="53:45" pos:end="53:55">syscall_num</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:48"><expr pos:start="55:17" pos:end="55:47"><name pos:start="55:17" pos:end="55:22">sp_reg</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:47"><name pos:start="55:26" pos:end="55:28">env</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:39">active_tc</name><operator pos:start="55:40" pos:end="55:40">.</operator><name pos:start="55:41" pos:end="55:43">gpr</name><index pos:start="55:44" pos:end="55:47">[<expr pos:start="55:45" pos:end="55:46"><literal type="number" pos:start="55:45" pos:end="55:46">29</literal></expr>]</index></name></expr>;</expr_stmt>

                <switch pos:start="57:17" pos:end="97:17">switch <condition pos:start="57:24" pos:end="57:32">(<expr pos:start="57:25" pos:end="57:31"><name pos:start="57:25" pos:end="57:31">nb_args</name></expr>)</condition> <block pos:start="57:34" pos:end="97:17">{<block_content pos:start="61:17" pos:end="95:26">

                <comment type="block" pos:start="59:17" pos:end="59:62">/* these arguments are taken from the stack */</comment>

                <case pos:start="61:17" pos:end="61:23">case <expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">8</literal></expr>:</case>

                    <if_stmt pos:start="63:21" pos:end="67:21"><if pos:start="63:21" pos:end="67:21">if <condition pos:start="63:24" pos:end="63:69">(<expr pos:start="63:25" pos:end="63:68"><operator pos:start="63:25" pos:end="63:25">(</operator><name pos:start="63:26" pos:end="63:28">ret</name> <operator pos:start="63:30" pos:end="63:30">=</operator> <call pos:start="63:32" pos:end="63:62"><name pos:start="63:32" pos:end="63:43">get_user_ual</name><argument_list pos:start="63:44" pos:end="63:62">(<argument pos:start="63:45" pos:end="63:48"><expr pos:start="63:45" pos:end="63:48"><name pos:start="63:45" pos:end="63:48">arg8</name></expr></argument>, <argument pos:start="63:51" pos:end="63:61"><expr pos:start="63:51" pos:end="63:61"><name pos:start="63:51" pos:end="63:56">sp_reg</name> <operator pos:start="63:58" pos:end="63:58">+</operator> <literal type="number" pos:start="63:60" pos:end="63:61">28</literal></expr></argument>)</argument_list></call><operator pos:start="63:63" pos:end="63:63">)</operator> <operator pos:start="63:65" pos:end="63:66">!=</operator> <literal type="number" pos:start="63:68" pos:end="63:68">0</literal></expr>)</condition> <block pos:start="63:71" pos:end="67:21">{<block_content pos:start="65:25" pos:end="65:42">

                        <goto pos:start="65:25" pos:end="65:42">goto <name pos:start="65:30" pos:end="65:41">done_syscall</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                <case pos:start="69:17" pos:end="69:23">case <expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">7</literal></expr>:</case>

                    <if_stmt pos:start="71:21" pos:end="75:21"><if pos:start="71:21" pos:end="75:21">if <condition pos:start="71:24" pos:end="71:69">(<expr pos:start="71:25" pos:end="71:68"><operator pos:start="71:25" pos:end="71:25">(</operator><name pos:start="71:26" pos:end="71:28">ret</name> <operator pos:start="71:30" pos:end="71:30">=</operator> <call pos:start="71:32" pos:end="71:62"><name pos:start="71:32" pos:end="71:43">get_user_ual</name><argument_list pos:start="71:44" pos:end="71:62">(<argument pos:start="71:45" pos:end="71:48"><expr pos:start="71:45" pos:end="71:48"><name pos:start="71:45" pos:end="71:48">arg7</name></expr></argument>, <argument pos:start="71:51" pos:end="71:61"><expr pos:start="71:51" pos:end="71:61"><name pos:start="71:51" pos:end="71:56">sp_reg</name> <operator pos:start="71:58" pos:end="71:58">+</operator> <literal type="number" pos:start="71:60" pos:end="71:61">24</literal></expr></argument>)</argument_list></call><operator pos:start="71:63" pos:end="71:63">)</operator> <operator pos:start="71:65" pos:end="71:66">!=</operator> <literal type="number" pos:start="71:68" pos:end="71:68">0</literal></expr>)</condition> <block pos:start="71:71" pos:end="75:21">{<block_content pos:start="73:25" pos:end="73:42">

                        <goto pos:start="73:25" pos:end="73:42">goto <name pos:start="73:30" pos:end="73:41">done_syscall</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                <case pos:start="77:17" pos:end="77:23">case <expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">6</literal></expr>:</case>

                    <if_stmt pos:start="79:21" pos:end="83:21"><if pos:start="79:21" pos:end="83:21">if <condition pos:start="79:24" pos:end="79:69">(<expr pos:start="79:25" pos:end="79:68"><operator pos:start="79:25" pos:end="79:25">(</operator><name pos:start="79:26" pos:end="79:28">ret</name> <operator pos:start="79:30" pos:end="79:30">=</operator> <call pos:start="79:32" pos:end="79:62"><name pos:start="79:32" pos:end="79:43">get_user_ual</name><argument_list pos:start="79:44" pos:end="79:62">(<argument pos:start="79:45" pos:end="79:48"><expr pos:start="79:45" pos:end="79:48"><name pos:start="79:45" pos:end="79:48">arg6</name></expr></argument>, <argument pos:start="79:51" pos:end="79:61"><expr pos:start="79:51" pos:end="79:61"><name pos:start="79:51" pos:end="79:56">sp_reg</name> <operator pos:start="79:58" pos:end="79:58">+</operator> <literal type="number" pos:start="79:60" pos:end="79:61">20</literal></expr></argument>)</argument_list></call><operator pos:start="79:63" pos:end="79:63">)</operator> <operator pos:start="79:65" pos:end="79:66">!=</operator> <literal type="number" pos:start="79:68" pos:end="79:68">0</literal></expr>)</condition> <block pos:start="79:71" pos:end="83:21">{<block_content pos:start="81:25" pos:end="81:42">

                        <goto pos:start="81:25" pos:end="81:42">goto <name pos:start="81:30" pos:end="81:41">done_syscall</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                <case pos:start="85:17" pos:end="85:23">case <expr pos:start="85:22" pos:end="85:22"><literal type="number" pos:start="85:22" pos:end="85:22">5</literal></expr>:</case>

                    <if_stmt pos:start="87:21" pos:end="91:21"><if pos:start="87:21" pos:end="91:21">if <condition pos:start="87:24" pos:end="87:69">(<expr pos:start="87:25" pos:end="87:68"><operator pos:start="87:25" pos:end="87:25">(</operator><name pos:start="87:26" pos:end="87:28">ret</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <call pos:start="87:32" pos:end="87:62"><name pos:start="87:32" pos:end="87:43">get_user_ual</name><argument_list pos:start="87:44" pos:end="87:62">(<argument pos:start="87:45" pos:end="87:48"><expr pos:start="87:45" pos:end="87:48"><name pos:start="87:45" pos:end="87:48">arg5</name></expr></argument>, <argument pos:start="87:51" pos:end="87:61"><expr pos:start="87:51" pos:end="87:61"><name pos:start="87:51" pos:end="87:56">sp_reg</name> <operator pos:start="87:58" pos:end="87:58">+</operator> <literal type="number" pos:start="87:60" pos:end="87:61">16</literal></expr></argument>)</argument_list></call><operator pos:start="87:63" pos:end="87:63">)</operator> <operator pos:start="87:65" pos:end="87:66">!=</operator> <literal type="number" pos:start="87:68" pos:end="87:68">0</literal></expr>)</condition> <block pos:start="87:71" pos:end="91:21">{<block_content pos:start="89:25" pos:end="89:42">

                        <goto pos:start="89:25" pos:end="89:42">goto <name pos:start="89:30" pos:end="89:41">done_syscall</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                <default pos:start="93:17" pos:end="93:24">default:</default>

                    <break pos:start="95:21" pos:end="95:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="99:17" pos:end="109:57"><expr pos:start="99:17" pos:end="109:56"><name pos:start="99:17" pos:end="99:19">ret</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="109:56"><name pos:start="99:23" pos:end="99:32">do_syscall</name><argument_list pos:start="99:33" pos:end="109:56">(<argument pos:start="99:34" pos:end="99:36"><expr pos:start="99:34" pos:end="99:36"><name pos:start="99:34" pos:end="99:36">env</name></expr></argument>, <argument pos:start="99:39" pos:end="99:59"><expr pos:start="99:39" pos:end="99:59"><name pos:start="99:39" pos:end="99:59"><name pos:start="99:39" pos:end="99:41">env</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:52">active_tc</name><operator pos:start="99:53" pos:end="99:53">.</operator><name pos:start="99:54" pos:end="99:56">gpr</name><index pos:start="99:57" pos:end="99:59">[<expr pos:start="99:58" pos:end="99:58"><literal type="number" pos:start="99:58" pos:end="99:58">2</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="101:34" pos:end="101:54"><expr pos:start="101:34" pos:end="101:54"><name pos:start="101:34" pos:end="101:54"><name pos:start="101:34" pos:end="101:36">env</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:47">active_tc</name><operator pos:start="101:48" pos:end="101:48">.</operator><name pos:start="101:49" pos:end="101:51">gpr</name><index pos:start="101:52" pos:end="101:54">[<expr pos:start="101:53" pos:end="101:53"><literal type="number" pos:start="101:53" pos:end="101:53">4</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="103:34" pos:end="103:54"><expr pos:start="103:34" pos:end="103:54"><name pos:start="103:34" pos:end="103:54"><name pos:start="103:34" pos:end="103:36">env</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:47">active_tc</name><operator pos:start="103:48" pos:end="103:48">.</operator><name pos:start="103:49" pos:end="103:51">gpr</name><index pos:start="103:52" pos:end="103:54">[<expr pos:start="103:53" pos:end="103:53"><literal type="number" pos:start="103:53" pos:end="103:53">5</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="105:34" pos:end="105:54"><expr pos:start="105:34" pos:end="105:54"><name pos:start="105:34" pos:end="105:54"><name pos:start="105:34" pos:end="105:36">env</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:47">active_tc</name><operator pos:start="105:48" pos:end="105:48">.</operator><name pos:start="105:49" pos:end="105:51">gpr</name><index pos:start="105:52" pos:end="105:54">[<expr pos:start="105:53" pos:end="105:53"><literal type="number" pos:start="105:53" pos:end="105:53">6</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="107:34" pos:end="107:54"><expr pos:start="107:34" pos:end="107:54"><name pos:start="107:34" pos:end="107:54"><name pos:start="107:34" pos:end="107:36">env</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:47">active_tc</name><operator pos:start="107:48" pos:end="107:48">.</operator><name pos:start="107:49" pos:end="107:51">gpr</name><index pos:start="107:52" pos:end="107:54">[<expr pos:start="107:53" pos:end="107:53"><literal type="number" pos:start="107:53" pos:end="107:53">7</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="109:34" pos:end="109:37"><expr pos:start="109:34" pos:end="109:37"><name pos:start="109:34" pos:end="109:37">arg5</name></expr></argument>, <argument pos:start="109:40" pos:end="109:43"><expr pos:start="109:40" pos:end="109:43"><name pos:start="109:40" pos:end="109:43">arg6</name></expr></argument>, <argument pos:start="109:46" pos:end="109:49"><expr pos:start="109:46" pos:end="109:49"><name pos:start="109:46" pos:end="109:49">arg7</name></expr></argument>, <argument pos:start="109:52" pos:end="109:55"><expr pos:start="109:52" pos:end="109:55"><name pos:start="109:52" pos:end="109:55">arg8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

<label pos:start="113:1" pos:end="116:0"><name pos:start="113:1" pos:end="113:12">done_syscall</name>:</label>

<cpp:else pos:start="115:1" pos:end="115:6"># <cpp:directive pos:start="115:3" pos:end="115:6">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="117:13" pos:end="128:0"><expr pos:start="117:13" pos:end="125:76"><name pos:start="117:13" pos:end="117:15">ret</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="125:76"><name pos:start="117:19" pos:end="117:28">do_syscall</name><argument_list pos:start="117:29" pos:end="125:76">(<argument pos:start="117:30" pos:end="117:32"><expr pos:start="117:30" pos:end="117:32"><name pos:start="117:30" pos:end="117:32">env</name></expr></argument>, <argument pos:start="117:35" pos:end="117:55"><expr pos:start="117:35" pos:end="117:55"><name pos:start="117:35" pos:end="117:55"><name pos:start="117:35" pos:end="117:37">env</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:48">active_tc</name><operator pos:start="117:49" pos:end="117:49">.</operator><name pos:start="117:50" pos:end="117:52">gpr</name><index pos:start="117:53" pos:end="117:55">[<expr pos:start="117:54" pos:end="117:54"><literal type="number" pos:start="117:54" pos:end="117:54">2</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="119:30" pos:end="119:50"><expr pos:start="119:30" pos:end="119:50"><name pos:start="119:30" pos:end="119:50"><name pos:start="119:30" pos:end="119:32">env</name><operator pos:start="119:33" pos:end="119:34">-&gt;</operator><name pos:start="119:35" pos:end="119:43">active_tc</name><operator pos:start="119:44" pos:end="119:44">.</operator><name pos:start="119:45" pos:end="119:47">gpr</name><index pos:start="119:48" pos:end="119:50">[<expr pos:start="119:49" pos:end="119:49"><literal type="number" pos:start="119:49" pos:end="119:49">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:53" pos:end="119:73"><expr pos:start="119:53" pos:end="119:73"><name pos:start="119:53" pos:end="119:73"><name pos:start="119:53" pos:end="119:55">env</name><operator pos:start="119:56" pos:end="119:57">-&gt;</operator><name pos:start="119:58" pos:end="119:66">active_tc</name><operator pos:start="119:67" pos:end="119:67">.</operator><name pos:start="119:68" pos:end="119:70">gpr</name><index pos:start="119:71" pos:end="119:73">[<expr pos:start="119:72" pos:end="119:72"><literal type="number" pos:start="119:72" pos:end="119:72">5</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="121:30" pos:end="121:50"><expr pos:start="121:30" pos:end="121:50"><name pos:start="121:30" pos:end="121:50"><name pos:start="121:30" pos:end="121:32">env</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:43">active_tc</name><operator pos:start="121:44" pos:end="121:44">.</operator><name pos:start="121:45" pos:end="121:47">gpr</name><index pos:start="121:48" pos:end="121:50">[<expr pos:start="121:49" pos:end="121:49"><literal type="number" pos:start="121:49" pos:end="121:49">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:53" pos:end="121:73"><expr pos:start="121:53" pos:end="121:73"><name pos:start="121:53" pos:end="121:73"><name pos:start="121:53" pos:end="121:55">env</name><operator pos:start="121:56" pos:end="121:57">-&gt;</operator><name pos:start="121:58" pos:end="121:66">active_tc</name><operator pos:start="121:67" pos:end="121:67">.</operator><name pos:start="121:68" pos:end="121:70">gpr</name><index pos:start="121:71" pos:end="121:73">[<expr pos:start="121:72" pos:end="121:72"><literal type="number" pos:start="121:72" pos:end="121:72">7</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="123:30" pos:end="123:50"><expr pos:start="123:30" pos:end="123:50"><name pos:start="123:30" pos:end="123:50"><name pos:start="123:30" pos:end="123:32">env</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:43">active_tc</name><operator pos:start="123:44" pos:end="123:44">.</operator><name pos:start="123:45" pos:end="123:47">gpr</name><index pos:start="123:48" pos:end="123:50">[<expr pos:start="123:49" pos:end="123:49"><literal type="number" pos:start="123:49" pos:end="123:49">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:53" pos:end="123:73"><expr pos:start="123:53" pos:end="123:73"><name pos:start="123:53" pos:end="123:73"><name pos:start="123:53" pos:end="123:55">env</name><operator pos:start="123:56" pos:end="123:57">-&gt;</operator><name pos:start="123:58" pos:end="123:66">active_tc</name><operator pos:start="123:67" pos:end="123:67">.</operator><name pos:start="123:68" pos:end="123:70">gpr</name><index pos:start="123:71" pos:end="123:73">[<expr pos:start="123:72" pos:end="123:72"><literal type="number" pos:start="123:72" pos:end="123:72">9</literal></expr>]</index></name></expr></argument>,

                             <argument pos:start="125:30" pos:end="125:51"><expr pos:start="125:30" pos:end="125:51"><name pos:start="125:30" pos:end="125:51"><name pos:start="125:30" pos:end="125:32">env</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:43">active_tc</name><operator pos:start="125:44" pos:end="125:44">.</operator><name pos:start="125:45" pos:end="125:47">gpr</name><index pos:start="125:48" pos:end="125:51">[<expr pos:start="125:49" pos:end="125:50"><literal type="number" pos:start="125:49" pos:end="125:50">10</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:54" pos:end="125:75"><expr pos:start="125:54" pos:end="125:75"><name pos:start="125:54" pos:end="125:75"><name pos:start="125:54" pos:end="125:56">env</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:67">active_tc</name><operator pos:start="125:68" pos:end="125:68">.</operator><name pos:start="125:69" pos:end="125:71">gpr</name><index pos:start="125:72" pos:end="125:75">[<expr pos:start="125:73" pos:end="125:74"><literal type="number" pos:start="125:73" pos:end="125:74">11</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="127:1" pos:end="127:7"># <cpp:directive pos:start="127:3" pos:end="127:7">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="127:9" pos:end="127:17">/* O32 */</comment>

            <if_stmt pos:start="129:13" pos:end="137:13"><if pos:start="129:13" pos:end="137:13">if <condition pos:start="129:16" pos:end="129:47">(<expr pos:start="129:17" pos:end="129:46"><name pos:start="129:17" pos:end="129:19">ret</name> <operator pos:start="129:21" pos:end="129:22">==</operator> <operator pos:start="129:24" pos:end="129:24">-</operator><name pos:start="129:25" pos:end="129:46">TARGET_QEMU_ESIGRETURN</name></expr>)</condition> <block pos:start="129:49" pos:end="137:13">{<block_content pos:start="135:17" pos:end="135:22">

                <comment type="block" pos:start="131:17" pos:end="133:55">/* Returning from a successful sigreturn syscall.

                   Avoid clobbering register state.  */</comment>

                <break pos:start="135:17" pos:end="135:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="149:13"><if pos:start="139:13" pos:end="145:13">if <condition pos:start="139:16" pos:end="139:51">(<expr pos:start="139:17" pos:end="139:50"><operator pos:start="139:17" pos:end="139:17">(</operator><name pos:start="139:18" pos:end="139:26">abi_ulong</name><operator pos:start="139:27" pos:end="139:27">)</operator><name pos:start="139:28" pos:end="139:30">ret</name> <operator pos:start="139:32" pos:end="139:33">&gt;=</operator> <operator pos:start="139:35" pos:end="139:35">(</operator><name pos:start="139:36" pos:end="139:44">abi_ulong</name><operator pos:start="139:45" pos:end="139:45">)</operator><operator pos:start="139:46" pos:end="139:46">-</operator><literal type="number" pos:start="139:47" pos:end="139:50">1133</literal></expr>)</condition> <block pos:start="139:53" pos:end="145:13">{<block_content pos:start="141:17" pos:end="143:27">

                <expr_stmt pos:start="141:17" pos:end="141:42"><expr pos:start="141:17" pos:end="141:41"><name pos:start="141:17" pos:end="141:37"><name pos:start="141:17" pos:end="141:19">env</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:30">active_tc</name><operator pos:start="141:31" pos:end="141:31">.</operator><name pos:start="141:32" pos:end="141:34">gpr</name><index pos:start="141:35" pos:end="141:37">[<expr pos:start="141:36" pos:end="141:36"><literal type="number" pos:start="141:36" pos:end="141:36">7</literal></expr>]</index></name> <operator pos:start="141:39" pos:end="141:39">=</operator> <literal type="number" pos:start="141:41" pos:end="141:41">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="141:44" pos:end="141:59">/* error flag */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:27"><expr pos:start="143:17" pos:end="143:26"><name pos:start="143:17" pos:end="143:19">ret</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <operator pos:start="143:23" pos:end="143:23">-</operator><name pos:start="143:24" pos:end="143:26">ret</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="145:15" pos:end="149:13">else <block pos:start="145:20" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:42">

                <expr_stmt pos:start="147:17" pos:end="147:42"><expr pos:start="147:17" pos:end="147:41"><name pos:start="147:17" pos:end="147:37"><name pos:start="147:17" pos:end="147:19">env</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:30">active_tc</name><operator pos:start="147:31" pos:end="147:31">.</operator><name pos:start="147:32" pos:end="147:34">gpr</name><index pos:start="147:35" pos:end="147:37">[<expr pos:start="147:36" pos:end="147:36"><literal type="number" pos:start="147:36" pos:end="147:36">7</literal></expr>]</index></name> <operator pos:start="147:39" pos:end="147:39">=</operator> <literal type="number" pos:start="147:41" pos:end="147:41">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="147:44" pos:end="147:59">/* error flag */</comment>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:40"><expr pos:start="151:13" pos:end="151:39"><name pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:15">env</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:26">active_tc</name><operator pos:start="151:27" pos:end="151:27">.</operator><name pos:start="151:28" pos:end="151:30">gpr</name><index pos:start="151:31" pos:end="151:33">[<expr pos:start="151:32" pos:end="151:32"><literal type="number" pos:start="151:32" pos:end="151:32">2</literal></expr>]</index></name> <operator pos:start="151:35" pos:end="151:35">=</operator> <name pos:start="151:37" pos:end="151:39">ret</name></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <case pos:start="155:9" pos:end="155:23">case <expr pos:start="155:14" pos:end="155:22"><name pos:start="155:14" pos:end="155:22">EXCP_TLBL</name></expr>:</case>

        <case pos:start="157:9" pos:end="157:23">case <expr pos:start="157:14" pos:end="157:22"><name pos:start="157:14" pos:end="157:22">EXCP_TLBS</name></expr>:</case>

        <case pos:start="159:9" pos:end="159:23">case <expr pos:start="159:14" pos:end="159:22"><name pos:start="159:14" pos:end="159:22">EXCP_AdEL</name></expr>:</case>

        <case pos:start="161:9" pos:end="161:23">case <expr pos:start="161:14" pos:end="161:22"><name pos:start="161:14" pos:end="161:22">EXCP_AdES</name></expr>:</case>

            <expr_stmt pos:start="163:13" pos:end="163:43"><expr pos:start="163:13" pos:end="163:42"><name pos:start="163:13" pos:end="163:25"><name pos:start="163:13" pos:end="163:16">info</name><operator pos:start="163:17" pos:end="163:17">.</operator><name pos:start="163:18" pos:end="163:25">si_signo</name></name> <operator pos:start="163:27" pos:end="163:27">=</operator> <name pos:start="163:29" pos:end="163:42">TARGET_SIGSEGV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:30"><expr pos:start="165:13" pos:end="165:29"><name pos:start="165:13" pos:end="165:25"><name pos:start="165:13" pos:end="165:16">info</name><operator pos:start="165:17" pos:end="165:17">.</operator><name pos:start="165:18" pos:end="165:25">si_errno</name></name> <operator pos:start="165:27" pos:end="165:27">=</operator> <literal type="number" pos:start="165:29" pos:end="165:29">0</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="167:13" pos:end="167:44">/* XXX: check env-&gt;error_code */</comment>

            <expr_stmt pos:start="169:13" pos:end="169:46"><expr pos:start="169:13" pos:end="169:45"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:16">info</name><operator pos:start="169:17" pos:end="169:17">.</operator><name pos:start="169:18" pos:end="169:24">si_code</name></name> <operator pos:start="169:26" pos:end="169:26">=</operator> <name pos:start="169:28" pos:end="169:45">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:63"><expr pos:start="171:13" pos:end="171:62"><name pos:start="171:13" pos:end="171:42"><name pos:start="171:13" pos:end="171:16">info</name><operator pos:start="171:17" pos:end="171:17">.</operator><name pos:start="171:18" pos:end="171:26">_sifields</name><operator pos:start="171:27" pos:end="171:27">.</operator><name pos:start="171:28" pos:end="171:36">_sigfault</name><operator pos:start="171:37" pos:end="171:37">.</operator><name pos:start="171:38" pos:end="171:42">_addr</name></name> <operator pos:start="171:44" pos:end="171:44">=</operator> <name pos:start="171:46" pos:end="171:62"><name pos:start="171:46" pos:end="171:48">env</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:62">CP0_BadVAddr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:52"><expr pos:start="173:13" pos:end="173:51"><call pos:start="173:13" pos:end="173:51"><name pos:start="173:13" pos:end="173:24">queue_signal</name><argument_list pos:start="173:25" pos:end="173:51">(<argument pos:start="173:26" pos:end="173:28"><expr pos:start="173:26" pos:end="173:28"><name pos:start="173:26" pos:end="173:28">env</name></expr></argument>, <argument pos:start="173:31" pos:end="173:43"><expr pos:start="173:31" pos:end="173:43"><name pos:start="173:31" pos:end="173:43"><name pos:start="173:31" pos:end="173:34">info</name><operator pos:start="173:35" pos:end="173:35">.</operator><name pos:start="173:36" pos:end="173:43">si_signo</name></name></expr></argument>, <argument pos:start="173:46" pos:end="173:50"><expr pos:start="173:46" pos:end="173:50"><operator pos:start="173:46" pos:end="173:46">&amp;</operator><name pos:start="173:47" pos:end="173:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:22">case <expr pos:start="177:14" pos:end="177:21"><name pos:start="177:14" pos:end="177:21">EXCP_CpU</name></expr>:</case>

        <case pos:start="179:9" pos:end="179:21">case <expr pos:start="179:14" pos:end="179:20"><name pos:start="179:14" pos:end="179:20">EXCP_RI</name></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:16">info</name><operator pos:start="181:17" pos:end="181:17">.</operator><name pos:start="181:18" pos:end="181:25">si_signo</name></name> <operator pos:start="181:27" pos:end="181:27">=</operator> <name pos:start="181:29" pos:end="181:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:30"><expr pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:16">info</name><operator pos:start="183:17" pos:end="183:17">.</operator><name pos:start="183:18" pos:end="183:25">si_errno</name></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <literal type="number" pos:start="183:29" pos:end="183:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:29"><expr pos:start="185:13" pos:end="185:28"><name pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:16">info</name><operator pos:start="185:17" pos:end="185:17">.</operator><name pos:start="185:18" pos:end="185:24">si_code</name></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <literal type="number" pos:start="185:28" pos:end="185:28">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:52"><expr pos:start="187:13" pos:end="187:51"><call pos:start="187:13" pos:end="187:51"><name pos:start="187:13" pos:end="187:24">queue_signal</name><argument_list pos:start="187:25" pos:end="187:51">(<argument pos:start="187:26" pos:end="187:28"><expr pos:start="187:26" pos:end="187:28"><name pos:start="187:26" pos:end="187:28">env</name></expr></argument>, <argument pos:start="187:31" pos:end="187:43"><expr pos:start="187:31" pos:end="187:43"><name pos:start="187:31" pos:end="187:43"><name pos:start="187:31" pos:end="187:34">info</name><operator pos:start="187:35" pos:end="187:35">.</operator><name pos:start="187:36" pos:end="187:43">si_signo</name></name></expr></argument>, <argument pos:start="187:46" pos:end="187:50"><expr pos:start="187:46" pos:end="187:50"><operator pos:start="187:46" pos:end="187:46">&amp;</operator><name pos:start="187:47" pos:end="187:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:28">case <expr pos:start="191:14" pos:end="191:27"><name pos:start="191:14" pos:end="191:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="193:13" pos:end="193:67">/* just indicate that signals should be handled asap */</comment>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:24">case <expr pos:start="197:14" pos:end="197:23"><name pos:start="197:14" pos:end="197:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="199:13" pos:end="221:13">{<block_content pos:start="201:17" pos:end="219:19">

                <decl_stmt pos:start="201:17" pos:end="201:24"><decl pos:start="201:17" pos:end="201:23"><type pos:start="201:17" pos:end="201:19"><name pos:start="201:17" pos:end="201:19">int</name></type> <name pos:start="201:21" pos:end="201:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="205:17" pos:end="205:56"><expr pos:start="205:17" pos:end="205:55"><name pos:start="205:17" pos:end="205:19">sig</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:55"><name pos:start="205:23" pos:end="205:35">gdb_handlesig</name><argument_list pos:start="205:36" pos:end="205:55">(<argument pos:start="205:37" pos:end="205:38"><expr pos:start="205:37" pos:end="205:38"><name pos:start="205:37" pos:end="205:38">cs</name></expr></argument>, <argument pos:start="205:41" pos:end="205:54"><expr pos:start="205:41" pos:end="205:54"><name pos:start="205:41" pos:end="205:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="207:17" pos:end="219:19"><if pos:start="207:17" pos:end="219:19">if <condition pos:start="207:20" pos:end="207:24">(<expr pos:start="207:21" pos:end="207:23"><name pos:start="207:21" pos:end="207:23">sig</name></expr>)</condition>

                  <block pos:start="209:19" pos:end="219:19">{<block_content pos:start="211:21" pos:end="217:60">

                    <expr_stmt pos:start="211:21" pos:end="211:40"><expr pos:start="211:21" pos:end="211:39"><name pos:start="211:21" pos:end="211:33"><name pos:start="211:21" pos:end="211:24">info</name><operator pos:start="211:25" pos:end="211:25">.</operator><name pos:start="211:26" pos:end="211:33">si_signo</name></name> <operator pos:start="211:35" pos:end="211:35">=</operator> <name pos:start="211:37" pos:end="211:39">sig</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="213:21" pos:end="213:38"><expr pos:start="213:21" pos:end="213:37"><name pos:start="213:21" pos:end="213:33"><name pos:start="213:21" pos:end="213:24">info</name><operator pos:start="213:25" pos:end="213:25">.</operator><name pos:start="213:26" pos:end="213:33">si_errno</name></name> <operator pos:start="213:35" pos:end="213:35">=</operator> <literal type="number" pos:start="213:37" pos:end="213:37">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:53"><expr pos:start="215:21" pos:end="215:52"><name pos:start="215:21" pos:end="215:32"><name pos:start="215:21" pos:end="215:24">info</name><operator pos:start="215:25" pos:end="215:25">.</operator><name pos:start="215:26" pos:end="215:32">si_code</name></name> <operator pos:start="215:34" pos:end="215:34">=</operator> <name pos:start="215:36" pos:end="215:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:60"><expr pos:start="217:21" pos:end="217:59"><call pos:start="217:21" pos:end="217:59"><name pos:start="217:21" pos:end="217:32">queue_signal</name><argument_list pos:start="217:33" pos:end="217:59">(<argument pos:start="217:34" pos:end="217:36"><expr pos:start="217:34" pos:end="217:36"><name pos:start="217:34" pos:end="217:36">env</name></expr></argument>, <argument pos:start="217:39" pos:end="217:51"><expr pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:51"><name pos:start="217:39" pos:end="217:42">info</name><operator pos:start="217:43" pos:end="217:43">.</operator><name pos:start="217:44" pos:end="217:51">si_signo</name></name></expr></argument>, <argument pos:start="217:54" pos:end="217:58"><expr pos:start="217:54" pos:end="217:58"><operator pos:start="217:54" pos:end="217:54">&amp;</operator><name pos:start="217:55" pos:end="217:58">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:21">case <expr pos:start="225:14" pos:end="225:20"><name pos:start="225:14" pos:end="225:20">EXCP_SC</name></expr>:</case>

            <if_stmt pos:start="227:13" pos:end="239:13"><if pos:start="227:13" pos:end="239:13">if <condition pos:start="227:16" pos:end="227:40">(<expr pos:start="227:17" pos:end="227:39"><call pos:start="227:17" pos:end="227:39"><name pos:start="227:17" pos:end="227:34">do_store_exclusive</name><argument_list pos:start="227:35" pos:end="227:39">(<argument pos:start="227:36" pos:end="227:38"><expr pos:start="227:36" pos:end="227:38"><name pos:start="227:36" pos:end="227:38">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:42" pos:end="239:13">{<block_content pos:start="229:17" pos:end="237:56">

                <expr_stmt pos:start="229:17" pos:end="229:47"><expr pos:start="229:17" pos:end="229:46"><name pos:start="229:17" pos:end="229:29"><name pos:start="229:17" pos:end="229:20">info</name><operator pos:start="229:21" pos:end="229:21">.</operator><name pos:start="229:22" pos:end="229:29">si_signo</name></name> <operator pos:start="229:31" pos:end="229:31">=</operator> <name pos:start="229:33" pos:end="229:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:34"><expr pos:start="231:17" pos:end="231:33"><name pos:start="231:17" pos:end="231:29"><name pos:start="231:17" pos:end="231:20">info</name><operator pos:start="231:21" pos:end="231:21">.</operator><name pos:start="231:22" pos:end="231:29">si_errno</name></name> <operator pos:start="231:31" pos:end="231:31">=</operator> <literal type="number" pos:start="231:33" pos:end="231:33">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:50"><expr pos:start="233:17" pos:end="233:49"><name pos:start="233:17" pos:end="233:28"><name pos:start="233:17" pos:end="233:20">info</name><operator pos:start="233:21" pos:end="233:21">.</operator><name pos:start="233:22" pos:end="233:28">si_code</name></name> <operator pos:start="233:30" pos:end="233:30">=</operator> <name pos:start="233:32" pos:end="233:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:67"><expr pos:start="235:17" pos:end="235:66"><name pos:start="235:17" pos:end="235:46"><name pos:start="235:17" pos:end="235:20">info</name><operator pos:start="235:21" pos:end="235:21">.</operator><name pos:start="235:22" pos:end="235:30">_sifields</name><operator pos:start="235:31" pos:end="235:31">.</operator><name pos:start="235:32" pos:end="235:40">_sigfault</name><operator pos:start="235:41" pos:end="235:41">.</operator><name pos:start="235:42" pos:end="235:46">_addr</name></name> <operator pos:start="235:48" pos:end="235:48">=</operator> <name pos:start="235:50" pos:end="235:66"><name pos:start="235:50" pos:end="235:52">env</name><operator pos:start="235:53" pos:end="235:54">-&gt;</operator><name pos:start="235:55" pos:end="235:63">active_tc</name><operator pos:start="235:64" pos:end="235:64">.</operator><name pos:start="235:65" pos:end="235:66">PC</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="237:56"><expr pos:start="237:17" pos:end="237:55"><call pos:start="237:17" pos:end="237:55"><name pos:start="237:17" pos:end="237:28">queue_signal</name><argument_list pos:start="237:29" pos:end="237:55">(<argument pos:start="237:30" pos:end="237:32"><expr pos:start="237:30" pos:end="237:32"><name pos:start="237:30" pos:end="237:32">env</name></expr></argument>, <argument pos:start="237:35" pos:end="237:47"><expr pos:start="237:35" pos:end="237:47"><name pos:start="237:35" pos:end="237:47"><name pos:start="237:35" pos:end="237:38">info</name><operator pos:start="237:39" pos:end="237:39">.</operator><name pos:start="237:40" pos:end="237:47">si_signo</name></name></expr></argument>, <argument pos:start="237:50" pos:end="237:54"><expr pos:start="237:50" pos:end="237:54"><operator pos:start="237:50" pos:end="237:50">&amp;</operator><name pos:start="237:51" pos:end="237:54">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="241:13" pos:end="241:18">break;</break>

        <case pos:start="243:9" pos:end="243:25">case <expr pos:start="243:14" pos:end="243:24"><name pos:start="243:14" pos:end="243:24">EXCP_DSPDIS</name></expr>:</case>

            <expr_stmt pos:start="245:13" pos:end="245:42"><expr pos:start="245:13" pos:end="245:41"><name pos:start="245:13" pos:end="245:25"><name pos:start="245:13" pos:end="245:16">info</name><operator pos:start="245:17" pos:end="245:17">.</operator><name pos:start="245:18" pos:end="245:25">si_signo</name></name> <operator pos:start="245:27" pos:end="245:27">=</operator> <name pos:start="245:29" pos:end="245:41">TARGET_SIGILL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:30"><expr pos:start="247:13" pos:end="247:29"><name pos:start="247:13" pos:end="247:25"><name pos:start="247:13" pos:end="247:16">info</name><operator pos:start="247:17" pos:end="247:17">.</operator><name pos:start="247:18" pos:end="247:25">si_errno</name></name> <operator pos:start="247:27" pos:end="247:27">=</operator> <literal type="number" pos:start="247:29" pos:end="247:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:45"><expr pos:start="249:13" pos:end="249:44"><name pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:16">info</name><operator pos:start="249:17" pos:end="249:17">.</operator><name pos:start="249:18" pos:end="249:24">si_code</name></name> <operator pos:start="249:26" pos:end="249:26">=</operator> <name pos:start="249:28" pos:end="249:44">TARGET_ILL_ILLOPC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:52"><expr pos:start="251:13" pos:end="251:51"><call pos:start="251:13" pos:end="251:51"><name pos:start="251:13" pos:end="251:24">queue_signal</name><argument_list pos:start="251:25" pos:end="251:51">(<argument pos:start="251:26" pos:end="251:28"><expr pos:start="251:26" pos:end="251:28"><name pos:start="251:26" pos:end="251:28">env</name></expr></argument>, <argument pos:start="251:31" pos:end="251:43"><expr pos:start="251:31" pos:end="251:43"><name pos:start="251:31" pos:end="251:43"><name pos:start="251:31" pos:end="251:34">info</name><operator pos:start="251:35" pos:end="251:35">.</operator><name pos:start="251:36" pos:end="251:43">si_signo</name></name></expr></argument>, <argument pos:start="251:46" pos:end="251:50"><expr pos:start="251:46" pos:end="251:50"><operator pos:start="251:46" pos:end="251:46">&amp;</operator><name pos:start="251:47" pos:end="251:50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="253:13" pos:end="253:18">break;</break>

        <comment type="block" pos:start="255:9" pos:end="259:11">/* The code below was inspired by the MIPS Linux kernel trap

         * handling code in arch/mips/kernel/traps.c.

         */</comment>

        <case pos:start="261:9" pos:end="261:24">case <expr pos:start="261:14" pos:end="261:23"><name pos:start="261:14" pos:end="261:23">EXCP_BREAK</name></expr>:</case>

            <block pos:start="263:13" pos:end="353:13">{<block_content pos:start="265:17" pos:end="351:17">

                <decl_stmt pos:start="265:17" pos:end="265:37"><decl pos:start="265:17" pos:end="265:36"><type pos:start="265:17" pos:end="265:25"><name pos:start="265:17" pos:end="265:25">abi_ulong</name></type> <name pos:start="265:27" pos:end="265:36">trap_instr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="267:17" pos:end="267:34"><decl pos:start="267:17" pos:end="267:33"><type pos:start="267:17" pos:end="267:28"><name pos:start="267:17" pos:end="267:24">unsigned</name> <name pos:start="267:26" pos:end="267:28">int</name></type> <name pos:start="267:30" pos:end="267:33">code</name></decl>;</decl_stmt>



                <if_stmt pos:start="271:17" pos:end="317:17"><if pos:start="271:17" pos:end="313:17">if <condition pos:start="271:20" pos:end="271:49">(<expr pos:start="271:21" pos:end="271:48"><name pos:start="271:21" pos:end="271:31"><name pos:start="271:21" pos:end="271:23">env</name><operator pos:start="271:24" pos:end="271:25">-&gt;</operator><name pos:start="271:26" pos:end="271:31">hflags</name></name> <operator pos:start="271:33" pos:end="271:33">&amp;</operator> <name pos:start="271:35" pos:end="271:48">MIPS_HFLAG_M16</name></expr>)</condition> <block pos:start="271:51" pos:end="313:17">{<block_content pos:start="273:21" pos:end="311:21">

                    <if_stmt pos:start="273:21" pos:end="311:21"><if pos:start="273:21" pos:end="289:21">if <condition pos:start="273:24" pos:end="273:56">(<expr pos:start="273:25" pos:end="273:55"><name pos:start="273:25" pos:end="273:39"><name pos:start="273:25" pos:end="273:27">env</name><operator pos:start="273:28" pos:end="273:29">-&gt;</operator><name pos:start="273:30" pos:end="273:39">insn_flags</name></name> <operator pos:start="273:41" pos:end="273:41">&amp;</operator> <name pos:start="273:43" pos:end="273:55">ASE_MICROMIPS</name></expr>)</condition> <block pos:start="273:58" pos:end="289:21">{<block_content pos:start="277:25" pos:end="287:65">

                        <comment type="block" pos:start="275:25" pos:end="275:44">/* microMIPS mode */</comment>

                        <decl_stmt pos:start="277:25" pos:end="277:43"><decl pos:start="277:25" pos:end="277:42"><type pos:start="277:25" pos:end="277:33"><name pos:start="277:25" pos:end="277:33">abi_ulong</name></type> <name pos:start="277:35" pos:end="277:42"><name pos:start="277:35" pos:end="277:39">instr</name><index pos:start="277:40" pos:end="277:42">[<expr pos:start="277:41" pos:end="277:41"><literal type="number" pos:start="277:41" pos:end="277:41">2</literal></expr>]</index></name></decl>;</decl_stmt>



                        <expr_stmt pos:start="281:25" pos:end="283:76"><expr pos:start="281:25" pos:end="283:75"><name pos:start="281:25" pos:end="281:27">ret</name> <operator pos:start="281:29" pos:end="281:29">=</operator> <call pos:start="281:31" pos:end="281:71"><name pos:start="281:31" pos:end="281:42">get_user_u16</name><argument_list pos:start="281:43" pos:end="281:71">(<argument pos:start="281:44" pos:end="281:51"><expr pos:start="281:44" pos:end="281:51"><name pos:start="281:44" pos:end="281:51"><name pos:start="281:44" pos:end="281:48">instr</name><index pos:start="281:49" pos:end="281:51">[<expr pos:start="281:50" pos:end="281:50"><literal type="number" pos:start="281:50" pos:end="281:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="281:54" pos:end="281:70"><expr pos:start="281:54" pos:end="281:70"><name pos:start="281:54" pos:end="281:70"><name pos:start="281:54" pos:end="281:56">env</name><operator pos:start="281:57" pos:end="281:58">-&gt;</operator><name pos:start="281:59" pos:end="281:67">active_tc</name><operator pos:start="281:68" pos:end="281:68">.</operator><name pos:start="281:69" pos:end="281:70">PC</name></name></expr></argument>)</argument_list></call> <operator pos:start="281:73" pos:end="281:74">||</operator>

                              <call pos:start="283:31" pos:end="283:75"><name pos:start="283:31" pos:end="283:42">get_user_u16</name><argument_list pos:start="283:43" pos:end="283:75">(<argument pos:start="283:44" pos:end="283:51"><expr pos:start="283:44" pos:end="283:51"><name pos:start="283:44" pos:end="283:51"><name pos:start="283:44" pos:end="283:48">instr</name><index pos:start="283:49" pos:end="283:51">[<expr pos:start="283:50" pos:end="283:50"><literal type="number" pos:start="283:50" pos:end="283:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:54" pos:end="283:74"><expr pos:start="283:54" pos:end="283:74"><name pos:start="283:54" pos:end="283:70"><name pos:start="283:54" pos:end="283:56">env</name><operator pos:start="283:57" pos:end="283:58">-&gt;</operator><name pos:start="283:59" pos:end="283:67">active_tc</name><operator pos:start="283:68" pos:end="283:68">.</operator><name pos:start="283:69" pos:end="283:70">PC</name></name> <operator pos:start="283:72" pos:end="283:72">+</operator> <literal type="number" pos:start="283:74" pos:end="283:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="287:25" pos:end="287:65"><expr pos:start="287:25" pos:end="287:64"><name pos:start="287:25" pos:end="287:34">trap_instr</name> <operator pos:start="287:36" pos:end="287:36">=</operator> <operator pos:start="287:38" pos:end="287:38">(</operator><name pos:start="287:39" pos:end="287:46"><name pos:start="287:39" pos:end="287:43">instr</name><index pos:start="287:44" pos:end="287:46">[<expr pos:start="287:45" pos:end="287:45"><literal type="number" pos:start="287:45" pos:end="287:45">0</literal></expr>]</index></name> <operator pos:start="287:48" pos:end="287:49">&lt;&lt;</operator> <literal type="number" pos:start="287:51" pos:end="287:52">16</literal><operator pos:start="287:53" pos:end="287:53">)</operator> <operator pos:start="287:55" pos:end="287:55">|</operator> <name pos:start="287:57" pos:end="287:64"><name pos:start="287:57" pos:end="287:61">instr</name><index pos:start="287:62" pos:end="287:64">[<expr pos:start="287:63" pos:end="287:63"><literal type="number" pos:start="287:63" pos:end="287:63">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="289:23" pos:end="311:21">else <block pos:start="289:28" pos:end="311:21">{<block_content pos:start="293:25" pos:end="309:30">

                        <comment type="block" pos:start="291:25" pos:end="291:42">/* MIPS16e mode */</comment>

                        <expr_stmt pos:start="293:25" pos:end="293:74"><expr pos:start="293:25" pos:end="293:73"><name pos:start="293:25" pos:end="293:27">ret</name> <operator pos:start="293:29" pos:end="293:29">=</operator> <call pos:start="293:31" pos:end="293:73"><name pos:start="293:31" pos:end="293:42">get_user_u16</name><argument_list pos:start="293:43" pos:end="293:73">(<argument pos:start="293:44" pos:end="293:53"><expr pos:start="293:44" pos:end="293:53"><name pos:start="293:44" pos:end="293:53">trap_instr</name></expr></argument>, <argument pos:start="293:56" pos:end="293:72"><expr pos:start="293:56" pos:end="293:72"><name pos:start="293:56" pos:end="293:72"><name pos:start="293:56" pos:end="293:58">env</name><operator pos:start="293:59" pos:end="293:60">-&gt;</operator><name pos:start="293:61" pos:end="293:69">active_tc</name><operator pos:start="293:70" pos:end="293:70">.</operator><name pos:start="293:71" pos:end="293:72">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="295:25" pos:end="299:25"><if pos:start="295:25" pos:end="299:25">if <condition pos:start="295:28" pos:end="295:37">(<expr pos:start="295:29" pos:end="295:36"><name pos:start="295:29" pos:end="295:31">ret</name> <operator pos:start="295:33" pos:end="295:34">!=</operator> <literal type="number" pos:start="295:36" pos:end="295:36">0</literal></expr>)</condition> <block pos:start="295:39" pos:end="299:25">{<block_content pos:start="297:29" pos:end="297:39">

                            <goto pos:start="297:29" pos:end="297:39">goto <name pos:start="297:34" pos:end="297:38">error</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="301:25" pos:end="301:56"><expr pos:start="301:25" pos:end="301:55"><name pos:start="301:25" pos:end="301:28">code</name> <operator pos:start="301:30" pos:end="301:30">=</operator> <operator pos:start="301:32" pos:end="301:32">(</operator><name pos:start="301:33" pos:end="301:42">trap_instr</name> <operator pos:start="301:44" pos:end="301:45">&gt;&gt;</operator> <literal type="number" pos:start="301:47" pos:end="301:47">6</literal><operator pos:start="301:48" pos:end="301:48">)</operator> <operator pos:start="301:50" pos:end="301:50">&amp;</operator> <literal type="number" pos:start="301:52" pos:end="301:55">0x3f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="303:25" pos:end="307:25"><if pos:start="303:25" pos:end="307:25">if <condition pos:start="303:28" pos:end="303:60">(<expr pos:start="303:29" pos:end="303:59"><call pos:start="303:29" pos:end="303:54"><name pos:start="303:29" pos:end="303:36">do_break</name><argument_list pos:start="303:37" pos:end="303:54">(<argument pos:start="303:38" pos:end="303:40"><expr pos:start="303:38" pos:end="303:40"><name pos:start="303:38" pos:end="303:40">env</name></expr></argument>, <argument pos:start="303:43" pos:end="303:47"><expr pos:start="303:43" pos:end="303:47"><operator pos:start="303:43" pos:end="303:43">&amp;</operator><name pos:start="303:44" pos:end="303:47">info</name></expr></argument>, <argument pos:start="303:50" pos:end="303:53"><expr pos:start="303:50" pos:end="303:53"><name pos:start="303:50" pos:end="303:53">code</name></expr></argument>)</argument_list></call> <operator pos:start="303:56" pos:end="303:57">!=</operator> <literal type="number" pos:start="303:59" pos:end="303:59">0</literal></expr>)</condition> <block pos:start="303:62" pos:end="307:25">{<block_content pos:start="305:29" pos:end="305:39">

                            <goto pos:start="305:29" pos:end="305:39">goto <name pos:start="305:34" pos:end="305:38">error</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <break pos:start="309:25" pos:end="309:30">break;</break>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="313:19" pos:end="317:17">else <block pos:start="313:24" pos:end="317:17">{<block_content pos:start="315:21" pos:end="315:70">

                    <expr_stmt pos:start="315:21" pos:end="315:70"><expr pos:start="315:21" pos:end="315:69"><name pos:start="315:21" pos:end="315:23">ret</name> <operator pos:start="315:25" pos:end="315:25">=</operator> <call pos:start="315:27" pos:end="315:69"><name pos:start="315:27" pos:end="315:38">get_user_ual</name><argument_list pos:start="315:39" pos:end="315:69">(<argument pos:start="315:40" pos:end="315:49"><expr pos:start="315:40" pos:end="315:49"><name pos:start="315:40" pos:end="315:49">trap_instr</name></expr></argument>, <argument pos:start="315:52" pos:end="315:68"><expr pos:start="315:52" pos:end="315:68"><name pos:start="315:52" pos:end="315:68"><name pos:start="315:52" pos:end="315:54">env</name><operator pos:start="315:55" pos:end="315:56">-&gt;</operator><name pos:start="315:57" pos:end="315:65">active_tc</name><operator pos:start="315:66" pos:end="315:66">.</operator><name pos:start="315:67" pos:end="315:68">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="321:17" pos:end="325:17"><if pos:start="321:17" pos:end="325:17">if <condition pos:start="321:20" pos:end="321:29">(<expr pos:start="321:21" pos:end="321:28"><name pos:start="321:21" pos:end="321:23">ret</name> <operator pos:start="321:25" pos:end="321:26">!=</operator> <literal type="number" pos:start="321:28" pos:end="321:28">0</literal></expr>)</condition> <block pos:start="321:31" pos:end="325:17">{<block_content pos:start="323:21" pos:end="323:31">

                    <goto pos:start="323:21" pos:end="323:31">goto <name pos:start="323:26" pos:end="323:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="329:17" pos:end="335:19">/* As described in the original Linux kernel code, the

                 * below checks on 'code' are to work around an old

                 * assembly bug.

                 */</comment>

                <expr_stmt pos:start="337:17" pos:end="337:61"><expr pos:start="337:17" pos:end="337:60"><name pos:start="337:17" pos:end="337:20">code</name> <operator pos:start="337:22" pos:end="337:22">=</operator> <operator pos:start="337:24" pos:end="337:24">(</operator><operator pos:start="337:25" pos:end="337:25">(</operator><name pos:start="337:26" pos:end="337:35">trap_instr</name> <operator pos:start="337:37" pos:end="337:38">&gt;&gt;</operator> <literal type="number" pos:start="337:40" pos:end="337:40">6</literal><operator pos:start="337:41" pos:end="337:41">)</operator> <operator pos:start="337:43" pos:end="337:43">&amp;</operator> <operator pos:start="337:45" pos:end="337:45">(</operator><operator pos:start="337:46" pos:end="337:46">(</operator><literal type="number" pos:start="337:47" pos:end="337:47">1</literal> <operator pos:start="337:49" pos:end="337:50">&lt;&lt;</operator> <literal type="number" pos:start="337:52" pos:end="337:53">20</literal><operator pos:start="337:54" pos:end="337:54">)</operator> <operator pos:start="337:56" pos:end="337:56">-</operator> <literal type="number" pos:start="337:58" pos:end="337:58">1</literal><operator pos:start="337:59" pos:end="337:59">)</operator><operator pos:start="337:60" pos:end="337:60">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="339:17" pos:end="343:17"><if pos:start="339:17" pos:end="343:17">if <condition pos:start="339:20" pos:end="339:38">(<expr pos:start="339:21" pos:end="339:37"><name pos:start="339:21" pos:end="339:24">code</name> <operator pos:start="339:26" pos:end="339:27">&gt;=</operator> <operator pos:start="339:29" pos:end="339:29">(</operator><literal type="number" pos:start="339:30" pos:end="339:30">1</literal> <operator pos:start="339:32" pos:end="339:33">&lt;&lt;</operator> <literal type="number" pos:start="339:35" pos:end="339:36">10</literal><operator pos:start="339:37" pos:end="339:37">)</operator></expr>)</condition> <block pos:start="339:40" pos:end="343:17">{<block_content pos:start="341:21" pos:end="341:32">

                    <expr_stmt pos:start="341:21" pos:end="341:32"><expr pos:start="341:21" pos:end="341:31"><name pos:start="341:21" pos:end="341:24">code</name> <operator pos:start="341:26" pos:end="341:28">&gt;&gt;=</operator> <literal type="number" pos:start="341:30" pos:end="341:31">10</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="347:17" pos:end="351:17"><if pos:start="347:17" pos:end="351:17">if <condition pos:start="347:20" pos:end="347:52">(<expr pos:start="347:21" pos:end="347:51"><call pos:start="347:21" pos:end="347:46"><name pos:start="347:21" pos:end="347:28">do_break</name><argument_list pos:start="347:29" pos:end="347:46">(<argument pos:start="347:30" pos:end="347:32"><expr pos:start="347:30" pos:end="347:32"><name pos:start="347:30" pos:end="347:32">env</name></expr></argument>, <argument pos:start="347:35" pos:end="347:39"><expr pos:start="347:35" pos:end="347:39"><operator pos:start="347:35" pos:end="347:35">&amp;</operator><name pos:start="347:36" pos:end="347:39">info</name></expr></argument>, <argument pos:start="347:42" pos:end="347:45"><expr pos:start="347:42" pos:end="347:45"><name pos:start="347:42" pos:end="347:45">code</name></expr></argument>)</argument_list></call> <operator pos:start="347:48" pos:end="347:49">!=</operator> <literal type="number" pos:start="347:51" pos:end="347:51">0</literal></expr>)</condition> <block pos:start="347:54" pos:end="351:17">{<block_content pos:start="349:21" pos:end="349:31">

                    <goto pos:start="349:21" pos:end="349:31">goto <name pos:start="349:26" pos:end="349:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="355:13" pos:end="355:18">break;</break>

        <case pos:start="357:9" pos:end="357:23">case <expr pos:start="357:14" pos:end="357:22"><name pos:start="357:14" pos:end="357:22">EXCP_TRAP</name></expr>:</case>

            <block pos:start="359:13" pos:end="425:13">{<block_content pos:start="361:17" pos:end="423:17">

                <decl_stmt pos:start="361:17" pos:end="361:37"><decl pos:start="361:17" pos:end="361:36"><type pos:start="361:17" pos:end="361:25"><name pos:start="361:17" pos:end="361:25">abi_ulong</name></type> <name pos:start="361:27" pos:end="361:36">trap_instr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="363:17" pos:end="363:38"><decl pos:start="363:17" pos:end="363:37"><type pos:start="363:17" pos:end="363:28"><name pos:start="363:17" pos:end="363:24">unsigned</name> <name pos:start="363:26" pos:end="363:28">int</name></type> <name pos:start="363:30" pos:end="363:33">code</name> <init pos:start="363:35" pos:end="363:37">= <expr pos:start="363:37" pos:end="363:37"><literal type="number" pos:start="363:37" pos:end="363:37">0</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="367:17" pos:end="387:17"><if pos:start="367:17" pos:end="383:17">if <condition pos:start="367:20" pos:end="367:49">(<expr pos:start="367:21" pos:end="367:48"><name pos:start="367:21" pos:end="367:31"><name pos:start="367:21" pos:end="367:23">env</name><operator pos:start="367:24" pos:end="367:25">-&gt;</operator><name pos:start="367:26" pos:end="367:31">hflags</name></name> <operator pos:start="367:33" pos:end="367:33">&amp;</operator> <name pos:start="367:35" pos:end="367:48">MIPS_HFLAG_M16</name></expr>)</condition> <block pos:start="367:51" pos:end="383:17">{<block_content pos:start="371:21" pos:end="381:61">

                    <comment type="block" pos:start="369:21" pos:end="369:40">/* microMIPS mode */</comment>

                    <decl_stmt pos:start="371:21" pos:end="371:39"><decl pos:start="371:21" pos:end="371:38"><type pos:start="371:21" pos:end="371:29"><name pos:start="371:21" pos:end="371:29">abi_ulong</name></type> <name pos:start="371:31" pos:end="371:38"><name pos:start="371:31" pos:end="371:35">instr</name><index pos:start="371:36" pos:end="371:38">[<expr pos:start="371:37" pos:end="371:37"><literal type="number" pos:start="371:37" pos:end="371:37">2</literal></expr>]</index></name></decl>;</decl_stmt>



                    <expr_stmt pos:start="375:21" pos:end="377:72"><expr pos:start="375:21" pos:end="377:71"><name pos:start="375:21" pos:end="375:23">ret</name> <operator pos:start="375:25" pos:end="375:25">=</operator> <call pos:start="375:27" pos:end="375:67"><name pos:start="375:27" pos:end="375:38">get_user_u16</name><argument_list pos:start="375:39" pos:end="375:67">(<argument pos:start="375:40" pos:end="375:47"><expr pos:start="375:40" pos:end="375:47"><name pos:start="375:40" pos:end="375:47"><name pos:start="375:40" pos:end="375:44">instr</name><index pos:start="375:45" pos:end="375:47">[<expr pos:start="375:46" pos:end="375:46"><literal type="number" pos:start="375:46" pos:end="375:46">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="375:50" pos:end="375:66"><expr pos:start="375:50" pos:end="375:66"><name pos:start="375:50" pos:end="375:66"><name pos:start="375:50" pos:end="375:52">env</name><operator pos:start="375:53" pos:end="375:54">-&gt;</operator><name pos:start="375:55" pos:end="375:63">active_tc</name><operator pos:start="375:64" pos:end="375:64">.</operator><name pos:start="375:65" pos:end="375:66">PC</name></name></expr></argument>)</argument_list></call> <operator pos:start="375:69" pos:end="375:70">||</operator>

                          <call pos:start="377:27" pos:end="377:71"><name pos:start="377:27" pos:end="377:38">get_user_u16</name><argument_list pos:start="377:39" pos:end="377:71">(<argument pos:start="377:40" pos:end="377:47"><expr pos:start="377:40" pos:end="377:47"><name pos:start="377:40" pos:end="377:47"><name pos:start="377:40" pos:end="377:44">instr</name><index pos:start="377:45" pos:end="377:47">[<expr pos:start="377:46" pos:end="377:46"><literal type="number" pos:start="377:46" pos:end="377:46">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="377:50" pos:end="377:70"><expr pos:start="377:50" pos:end="377:70"><name pos:start="377:50" pos:end="377:66"><name pos:start="377:50" pos:end="377:52">env</name><operator pos:start="377:53" pos:end="377:54">-&gt;</operator><name pos:start="377:55" pos:end="377:63">active_tc</name><operator pos:start="377:64" pos:end="377:64">.</operator><name pos:start="377:65" pos:end="377:66">PC</name></name> <operator pos:start="377:68" pos:end="377:68">+</operator> <literal type="number" pos:start="377:70" pos:end="377:70">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="381:21" pos:end="381:61"><expr pos:start="381:21" pos:end="381:60"><name pos:start="381:21" pos:end="381:30">trap_instr</name> <operator pos:start="381:32" pos:end="381:32">=</operator> <operator pos:start="381:34" pos:end="381:34">(</operator><name pos:start="381:35" pos:end="381:42"><name pos:start="381:35" pos:end="381:39">instr</name><index pos:start="381:40" pos:end="381:42">[<expr pos:start="381:41" pos:end="381:41"><literal type="number" pos:start="381:41" pos:end="381:41">0</literal></expr>]</index></name> <operator pos:start="381:44" pos:end="381:45">&lt;&lt;</operator> <literal type="number" pos:start="381:47" pos:end="381:48">16</literal><operator pos:start="381:49" pos:end="381:49">)</operator> <operator pos:start="381:51" pos:end="381:51">|</operator> <name pos:start="381:53" pos:end="381:60"><name pos:start="381:53" pos:end="381:57">instr</name><index pos:start="381:58" pos:end="381:60">[<expr pos:start="381:59" pos:end="381:59"><literal type="number" pos:start="381:59" pos:end="381:59">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="383:19" pos:end="387:17">else <block pos:start="383:24" pos:end="387:17">{<block_content pos:start="385:21" pos:end="385:70">

                    <expr_stmt pos:start="385:21" pos:end="385:70"><expr pos:start="385:21" pos:end="385:69"><name pos:start="385:21" pos:end="385:23">ret</name> <operator pos:start="385:25" pos:end="385:25">=</operator> <call pos:start="385:27" pos:end="385:69"><name pos:start="385:27" pos:end="385:38">get_user_ual</name><argument_list pos:start="385:39" pos:end="385:69">(<argument pos:start="385:40" pos:end="385:49"><expr pos:start="385:40" pos:end="385:49"><name pos:start="385:40" pos:end="385:49">trap_instr</name></expr></argument>, <argument pos:start="385:52" pos:end="385:68"><expr pos:start="385:52" pos:end="385:68"><name pos:start="385:52" pos:end="385:68"><name pos:start="385:52" pos:end="385:54">env</name><operator pos:start="385:55" pos:end="385:56">-&gt;</operator><name pos:start="385:57" pos:end="385:65">active_tc</name><operator pos:start="385:66" pos:end="385:66">.</operator><name pos:start="385:67" pos:end="385:68">PC</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="391:17" pos:end="395:17"><if pos:start="391:17" pos:end="395:17">if <condition pos:start="391:20" pos:end="391:29">(<expr pos:start="391:21" pos:end="391:28"><name pos:start="391:21" pos:end="391:23">ret</name> <operator pos:start="391:25" pos:end="391:26">!=</operator> <literal type="number" pos:start="391:28" pos:end="391:28">0</literal></expr>)</condition> <block pos:start="391:31" pos:end="395:17">{<block_content pos:start="393:21" pos:end="393:31">

                    <goto pos:start="393:21" pos:end="393:31">goto <name pos:start="393:26" pos:end="393:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="399:17" pos:end="399:67">/* The immediate versions don't provide a code.  */</comment>

                <if_stmt pos:start="401:17" pos:end="415:17"><if pos:start="401:17" pos:end="415:17">if <condition pos:start="401:20" pos:end="401:47">(<expr pos:start="401:21" pos:end="401:46"><operator pos:start="401:21" pos:end="401:21">!</operator><operator pos:start="401:22" pos:end="401:22">(</operator><name pos:start="401:23" pos:end="401:32">trap_instr</name> <operator pos:start="401:34" pos:end="401:34">&amp;</operator> <literal type="number" pos:start="401:36" pos:end="401:45">0xFC000000</literal><operator pos:start="401:46" pos:end="401:46">)</operator></expr>)</condition> <block pos:start="401:49" pos:end="415:17">{<block_content pos:start="403:21" pos:end="413:21">

                    <if_stmt pos:start="403:21" pos:end="413:21"><if pos:start="403:21" pos:end="409:21">if <condition pos:start="403:24" pos:end="403:53">(<expr pos:start="403:25" pos:end="403:52"><name pos:start="403:25" pos:end="403:35"><name pos:start="403:25" pos:end="403:27">env</name><operator pos:start="403:28" pos:end="403:29">-&gt;</operator><name pos:start="403:30" pos:end="403:35">hflags</name></name> <operator pos:start="403:37" pos:end="403:37">&amp;</operator> <name pos:start="403:39" pos:end="403:52">MIPS_HFLAG_M16</name></expr>)</condition> <block pos:start="403:55" pos:end="409:21">{<block_content pos:start="407:25" pos:end="407:69">

                        <comment type="block" pos:start="405:25" pos:end="405:44">/* microMIPS mode */</comment>

                        <expr_stmt pos:start="407:25" pos:end="407:69"><expr pos:start="407:25" pos:end="407:68"><name pos:start="407:25" pos:end="407:28">code</name> <operator pos:start="407:30" pos:end="407:30">=</operator> <operator pos:start="407:32" pos:end="407:32">(</operator><operator pos:start="407:33" pos:end="407:33">(</operator><name pos:start="407:34" pos:end="407:43">trap_instr</name> <operator pos:start="407:45" pos:end="407:46">&gt;&gt;</operator> <literal type="number" pos:start="407:48" pos:end="407:49">12</literal><operator pos:start="407:50" pos:end="407:50">)</operator> <operator pos:start="407:52" pos:end="407:52">&amp;</operator> <operator pos:start="407:54" pos:end="407:54">(</operator><operator pos:start="407:55" pos:end="407:55">(</operator><literal type="number" pos:start="407:56" pos:end="407:56">1</literal> <operator pos:start="407:58" pos:end="407:59">&lt;&lt;</operator> <literal type="number" pos:start="407:61" pos:end="407:61">4</literal><operator pos:start="407:62" pos:end="407:62">)</operator> <operator pos:start="407:64" pos:end="407:64">-</operator> <literal type="number" pos:start="407:66" pos:end="407:66">1</literal><operator pos:start="407:67" pos:end="407:67">)</operator><operator pos:start="407:68" pos:end="407:68">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="409:23" pos:end="413:21">else <block pos:start="409:28" pos:end="413:21">{<block_content pos:start="411:25" pos:end="411:69">

                        <expr_stmt pos:start="411:25" pos:end="411:69"><expr pos:start="411:25" pos:end="411:68"><name pos:start="411:25" pos:end="411:28">code</name> <operator pos:start="411:30" pos:end="411:30">=</operator> <operator pos:start="411:32" pos:end="411:32">(</operator><operator pos:start="411:33" pos:end="411:33">(</operator><name pos:start="411:34" pos:end="411:43">trap_instr</name> <operator pos:start="411:45" pos:end="411:46">&gt;&gt;</operator> <literal type="number" pos:start="411:48" pos:end="411:48">6</literal><operator pos:start="411:49" pos:end="411:49">)</operator> <operator pos:start="411:51" pos:end="411:51">&amp;</operator> <operator pos:start="411:53" pos:end="411:53">(</operator><operator pos:start="411:54" pos:end="411:54">(</operator><literal type="number" pos:start="411:55" pos:end="411:55">1</literal> <operator pos:start="411:57" pos:end="411:58">&lt;&lt;</operator> <literal type="number" pos:start="411:60" pos:end="411:61">10</literal><operator pos:start="411:62" pos:end="411:62">)</operator> <operator pos:start="411:64" pos:end="411:64">-</operator> <literal type="number" pos:start="411:66" pos:end="411:66">1</literal><operator pos:start="411:67" pos:end="411:67">)</operator><operator pos:start="411:68" pos:end="411:68">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="419:17" pos:end="423:17"><if pos:start="419:17" pos:end="423:17">if <condition pos:start="419:20" pos:end="419:52">(<expr pos:start="419:21" pos:end="419:51"><call pos:start="419:21" pos:end="419:46"><name pos:start="419:21" pos:end="419:28">do_break</name><argument_list pos:start="419:29" pos:end="419:46">(<argument pos:start="419:30" pos:end="419:32"><expr pos:start="419:30" pos:end="419:32"><name pos:start="419:30" pos:end="419:32">env</name></expr></argument>, <argument pos:start="419:35" pos:end="419:39"><expr pos:start="419:35" pos:end="419:39"><operator pos:start="419:35" pos:end="419:35">&amp;</operator><name pos:start="419:36" pos:end="419:39">info</name></expr></argument>, <argument pos:start="419:42" pos:end="419:45"><expr pos:start="419:42" pos:end="419:45"><name pos:start="419:42" pos:end="419:45">code</name></expr></argument>)</argument_list></call> <operator pos:start="419:48" pos:end="419:49">!=</operator> <literal type="number" pos:start="419:51" pos:end="419:51">0</literal></expr>)</condition> <block pos:start="419:54" pos:end="423:17">{<block_content pos:start="421:21" pos:end="421:31">

                    <goto pos:start="421:21" pos:end="421:31">goto <name pos:start="421:26" pos:end="421:30">error</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="427:13" pos:end="427:18">break;</break>

        <default pos:start="429:9" pos:end="429:16">default:</default>

<label pos:start="431:1" pos:end="431:6"><name pos:start="431:1" pos:end="431:5">error</name>:</label>

            <expr_stmt pos:start="433:13" pos:end="435:28"><expr pos:start="433:13" pos:end="435:27"><call pos:start="433:13" pos:end="435:27"><name pos:start="433:13" pos:end="433:19">fprintf</name><argument_list pos:start="433:20" pos:end="435:27">(<argument pos:start="433:21" pos:end="433:26"><expr pos:start="433:21" pos:end="433:26"><name pos:start="433:21" pos:end="433:26">stderr</name></expr></argument>, <argument pos:start="433:29" pos:end="433:77"><expr pos:start="433:29" pos:end="433:77"><literal type="string" pos:start="433:29" pos:end="433:77">"qemu: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>,

                    <argument pos:start="435:21" pos:end="435:26"><expr pos:start="435:21" pos:end="435:26"><name pos:start="435:21" pos:end="435:26">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:51"><expr pos:start="437:13" pos:end="437:50"><call pos:start="437:13" pos:end="437:50"><name pos:start="437:13" pos:end="437:26">cpu_dump_state</name><argument_list pos:start="437:27" pos:end="437:50">(<argument pos:start="437:28" pos:end="437:29"><expr pos:start="437:28" pos:end="437:29"><name pos:start="437:28" pos:end="437:29">cs</name></expr></argument>, <argument pos:start="437:32" pos:end="437:37"><expr pos:start="437:32" pos:end="437:37"><name pos:start="437:32" pos:end="437:37">stderr</name></expr></argument>, <argument pos:start="437:40" pos:end="437:46"><expr pos:start="437:40" pos:end="437:46"><name pos:start="437:40" pos:end="437:46">fprintf</name></expr></argument>, <argument pos:start="437:49" pos:end="437:49"><expr pos:start="437:49" pos:end="437:49"><literal type="number" pos:start="437:49" pos:end="437:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:20"><expr pos:start="439:13" pos:end="439:19"><call pos:start="439:13" pos:end="439:19"><name pos:start="439:13" pos:end="439:17">abort</name><argument_list pos:start="439:18" pos:end="439:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="443:9" pos:end="443:37"><expr pos:start="443:9" pos:end="443:36"><call pos:start="443:9" pos:end="443:36"><name pos:start="443:9" pos:end="443:31">process_pending_signals</name><argument_list pos:start="443:32" pos:end="443:36">(<argument pos:start="443:33" pos:end="443:35"><expr pos:start="443:33" pos:end="443:35"><name pos:start="443:33" pos:end="443:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
