<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12162.c" pos:tabs="8"><function pos:start="1:1" pos:end="14:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:24">trace_init_backends</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="14:1">{<block_content pos:start="4:5" pos:end="13:16">
<cpp:ifdef pos:start="3:1" pos:end="3:26">#<cpp:directive pos:start="3:2" pos:end="3:6">ifdef</cpp:directive> <name pos:start="3:8" pos:end="3:26">CONFIG_TRACE_SIMPLE</name></cpp:ifdef>
    <if_stmt pos:start="4:5" pos:end="9:0"><if pos:start="4:5" pos:end="9:0">if <condition pos:start="4:8" pos:end="4:19">(<expr pos:start="4:9" pos:end="4:18"><operator pos:start="4:9" pos:end="4:9">!</operator><call pos:start="4:10" pos:end="4:18"><name pos:start="4:10" pos:end="4:16">st_init</name><argument_list pos:start="4:17" pos:end="4:18">()</argument_list></call></expr>)</condition> <block pos:start="4:21" pos:end="9:0">{<block_content pos:start="5:9" pos:end="6:21">
        <expr_stmt pos:start="5:9" pos:end="5:74"><expr pos:start="5:9" pos:end="5:73"><call pos:start="5:9" pos:end="5:73"><name pos:start="5:9" pos:end="5:15">fprintf</name><argument_list pos:start="5:16" pos:end="5:73">(<argument pos:start="5:17" pos:end="5:22"><expr pos:start="5:17" pos:end="5:22"><name pos:start="5:17" pos:end="5:22">stderr</name></expr></argument>, <argument pos:start="5:25" pos:end="5:72"><expr pos:start="5:25" pos:end="5:72"><literal type="string" pos:start="5:25" pos:end="5:72">"failed to initialize simple tracing backend.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="6:9" pos:end="6:21">return <expr pos:start="6:16" pos:end="6:20"><name pos:start="6:16" pos:end="6:20">false</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
<cpp:ifdef pos:start="8:1" pos:end="8:26">#<cpp:directive pos:start="8:2" pos:end="8:6">ifdef</cpp:directive> <name pos:start="8:8" pos:end="8:26">CONFIG_TRACE_FTRACE</name></cpp:ifdef>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:20">ftrace_init</name><argument_list pos:start="9:21" pos:end="9:22">()</argument_list></call></expr>)</condition> <block pos:start="9:25" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:21">
        <expr_stmt pos:start="10:9" pos:end="10:66"><expr pos:start="10:9" pos:end="10:65"><call pos:start="10:9" pos:end="10:65"><name pos:start="10:9" pos:end="10:15">fprintf</name><argument_list pos:start="10:16" pos:end="10:65">(<argument pos:start="10:17" pos:end="10:22"><expr pos:start="10:17" pos:end="10:22"><name pos:start="10:17" pos:end="10:22">stderr</name></expr></argument>, <argument pos:start="10:25" pos:end="10:64"><expr pos:start="10:25" pos:end="10:64"><literal type="string" pos:start="10:25" pos:end="10:64">"failed to initialize ftrace backend.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:21">return <expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">false</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <return pos:start="13:5" pos:end="13:16">return <expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:15">true</name></expr>;</return>
</block_content>}</block></function></unit>
