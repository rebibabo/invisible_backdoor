<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12287.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">h263_decode_block</name><parameter_list pos:start="1:29" pos:end="3:46">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:43">MpegEncContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:56">int16_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type> <name pos:start="1:60" pos:end="1:64">block</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:34"><decl pos:start="3:30" pos:end="3:34"><type pos:start="3:30" pos:end="3:34"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:34">n</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">coded</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="291:1">{<block_content pos:start="7:5" pos:end="289:13">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">j</name></decl>, <decl pos:start="7:22" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:24">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">RLTable</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">rl</name> <init pos:start="9:17" pos:end="9:35">= <expr pos:start="9:19" pos:end="9:35"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:35">ff_h263_rl_inter</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:29">scan_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">GetBitContext</name></type> <name pos:start="13:19" pos:end="13:20">gb</name><init pos:start="13:21" pos:end="13:27">= <expr pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:27">gb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:14">scan_table</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:46"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:35">intra_scantable</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:46">permutated</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="109:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">h263_aic</name></name> <operator pos:start="19:21" pos:end="19:22">&amp;&amp;</operator> <name pos:start="19:24" pos:end="19:34"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:34">mb_intra</name></name></expr>)</condition> <block pos:start="19:37" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:9">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:10">rl</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:29">ff_rl_intra_aic</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:14"><expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">i</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:13">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:23">(<expr pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">ac_pred</name></name></expr>)</condition> <block pos:start="25:25" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:61">

            <if_stmt pos:start="27:13" pos:end="33:61"><if pos:start="27:13" pos:end="29:61">if <condition pos:start="27:16" pos:end="27:32">(<expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:31">h263_aic_dir</name></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:61"><block_content pos:start="29:17" pos:end="29:61">

                <expr_stmt pos:start="29:17" pos:end="29:61"><expr pos:start="29:17" pos:end="29:60"><name pos:start="29:17" pos:end="29:26">scan_table</name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:60"><name pos:start="29:30" pos:end="29:30">s</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:49">intra_v_scantable</name><operator pos:start="29:50" pos:end="29:50">.</operator><name pos:start="29:51" pos:end="29:60">permutated</name></name></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="29:63" pos:end="29:72">/* left */</comment>

            <else pos:start="31:13" pos:end="33:61">else<block type="pseudo" pos:start="33:17" pos:end="33:61"><block_content pos:start="33:17" pos:end="33:61">

                <expr_stmt pos:start="33:17" pos:end="33:61"><expr pos:start="33:17" pos:end="33:60"><name pos:start="33:17" pos:end="33:26">scan_table</name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:60"><name pos:start="33:30" pos:end="33:30">s</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:49">intra_h_scantable</name><operator pos:start="33:50" pos:end="33:50">.</operator><name pos:start="33:51" pos:end="33:60">permutated</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="33:63" pos:end="33:71">/* top */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="105:5">else if <condition pos:start="37:15" pos:end="37:27">(<expr pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:26">mb_intra</name></name></expr>)</condition> <block pos:start="37:29" pos:end="105:5">{<block_content pos:start="41:9" pos:end="103:14">

        <comment type="block" pos:start="39:9" pos:end="39:21">/* DC coef */</comment>

        <if_stmt pos:start="41:9" pos:end="99:9"><if pos:start="41:9" pos:end="81:9">if <condition pos:start="41:12" pos:end="41:67">(<expr pos:start="41:13" pos:end="41:66"><name pos:start="41:13" pos:end="41:31">CONFIG_RV10_DECODER</name> <operator pos:start="41:33" pos:end="41:34">&amp;&amp;</operator> <name pos:start="41:36" pos:end="41:46"><name pos:start="41:36" pos:end="41:36">s</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:46">codec_id</name></name> <operator pos:start="41:48" pos:end="41:49">==</operator> <name pos:start="41:51" pos:end="41:66">AV_CODEC_ID_RV10</name></expr>)</condition> <block pos:start="41:69" pos:end="81:9">{<block_content pos:start="43:11" pos:end="79:11">

          <if_stmt pos:start="43:11" pos:end="79:11"><if pos:start="43:11" pos:end="71:11">if <condition pos:start="43:14" pos:end="43:72">(<expr pos:start="43:15" pos:end="43:71"><name pos:start="43:15" pos:end="43:29"><name pos:start="43:15" pos:end="43:15">s</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:29">rv10_version</name></name> <operator pos:start="43:31" pos:end="43:32">==</operator> <literal type="number" pos:start="43:34" pos:end="43:34">3</literal> <operator pos:start="43:36" pos:end="43:37">&amp;&amp;</operator> <name pos:start="43:39" pos:end="43:50"><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:50">pict_type</name></name> <operator pos:start="43:52" pos:end="43:53">==</operator> <name pos:start="43:55" pos:end="43:71">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="43:74" pos:end="71:11">{<block_content pos:start="45:13" pos:end="69:13">

            <decl_stmt pos:start="45:13" pos:end="45:32"><decl pos:start="45:13" pos:end="45:25"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:25">component</name></decl>, <decl pos:start="45:28" pos:end="45:31"><type ref="prev" pos:start="45:13" pos:end="45:15"/><name pos:start="45:28" pos:end="45:31">diff</name></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:49"><expr pos:start="47:13" pos:end="47:48"><name pos:start="47:13" pos:end="47:21">component</name> <operator pos:start="47:23" pos:end="47:23">=</operator> <operator pos:start="47:25" pos:end="47:25">(</operator><ternary pos:start="47:26" pos:end="47:47"><condition pos:start="47:26" pos:end="47:33"><expr pos:start="47:26" pos:end="47:31"><name pos:start="47:26" pos:end="47:26">n</name> <operator pos:start="47:28" pos:end="47:29">&lt;=</operator> <literal type="number" pos:start="47:31" pos:end="47:31">3</literal></expr> ?</condition><then pos:start="47:35" pos:end="47:35"> <expr pos:start="47:35" pos:end="47:35"><literal type="number" pos:start="47:35" pos:end="47:35">0</literal></expr> </then><else pos:start="47:37" pos:end="47:47">: <expr pos:start="47:39" pos:end="47:47"><name pos:start="47:39" pos:end="47:39">n</name> <operator pos:start="47:41" pos:end="47:41">-</operator> <literal type="number" pos:start="47:43" pos:end="47:45">4</literal> <operator pos:start="47:45" pos:end="47:45">+</operator> <literal type="number" pos:start="47:47" pos:end="47:47">1</literal></expr></else></ternary><operator pos:start="47:48" pos:end="47:48">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:42"><expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:17">level</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:41"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:30">last_dc</name><index pos:start="49:31" pos:end="49:41">[<expr pos:start="49:32" pos:end="49:40"><name pos:start="49:32" pos:end="49:40">component</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="69:13"><if pos:start="51:13" pos:end="65:13">if <condition pos:start="51:16" pos:end="51:50">(<expr pos:start="51:17" pos:end="51:49"><name pos:start="51:17" pos:end="51:49"><name pos:start="51:17" pos:end="51:17">s</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:38">rv10_first_dc_coded</name><index pos:start="51:39" pos:end="51:49">[<expr pos:start="51:40" pos:end="51:48"><name pos:start="51:40" pos:end="51:48">component</name></expr>]</index></name></expr>)</condition> <block pos:start="51:52" pos:end="65:13">{<block_content pos:start="53:17" pos:end="63:46">

                <expr_stmt pos:start="53:17" pos:end="53:45"><expr pos:start="53:17" pos:end="53:44"><name pos:start="53:17" pos:end="53:20">diff</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:44"><name pos:start="53:24" pos:end="53:38">ff_rv_decode_dc</name><argument_list pos:start="53:39" pos:end="53:44">(<argument pos:start="53:40" pos:end="53:40"><expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">s</name></expr></argument>, <argument pos:start="53:43" pos:end="53:43"><expr pos:start="53:43" pos:end="53:43"><name pos:start="53:43" pos:end="53:43">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="57:30"><if pos:start="55:17" pos:end="57:30">if <condition pos:start="55:20" pos:end="55:35">(<expr pos:start="55:21" pos:end="55:34"><name pos:start="55:21" pos:end="55:24">diff</name> <operator pos:start="55:26" pos:end="55:27">==</operator> <literal type="number" pos:start="55:29" pos:end="55:34">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="57:21" pos:end="57:30"><block_content pos:start="57:21" pos:end="57:30">

                    <return pos:start="57:21" pos:end="57:30">return <expr pos:start="57:28" pos:end="57:29"><operator pos:start="57:28" pos:end="57:28">-</operator><literal type="number" pos:start="57:29" pos:end="57:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:30"><expr pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:21">level</name> <operator pos:start="59:23" pos:end="59:24">+=</operator> <name pos:start="59:26" pos:end="59:29">diff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:37"><expr pos:start="61:17" pos:end="61:36"><name pos:start="61:17" pos:end="61:21">level</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:29">level</name> <operator pos:start="61:31" pos:end="61:31">&amp;</operator> <literal type="number" pos:start="61:33" pos:end="61:36">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="61:39" pos:end="61:61">/* handle wrap round */</comment>

                <expr_stmt pos:start="63:17" pos:end="63:46"><expr pos:start="63:17" pos:end="63:45"><name pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:26">last_dc</name><index pos:start="63:27" pos:end="63:37">[<expr pos:start="63:28" pos:end="63:36"><name pos:start="63:28" pos:end="63:36">component</name></expr>]</index></name> <operator pos:start="63:39" pos:end="63:39">=</operator> <name pos:start="63:41" pos:end="63:45">level</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="69:13">else <block pos:start="65:20" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:54">

                <expr_stmt pos:start="67:17" pos:end="67:54"><expr pos:start="67:17" pos:end="67:53"><name pos:start="67:17" pos:end="67:49"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:38">rv10_first_dc_coded</name><index pos:start="67:39" pos:end="67:49">[<expr pos:start="67:40" pos:end="67:48"><name pos:start="67:40" pos:end="67:48">component</name></expr>]</index></name> <operator pos:start="67:51" pos:end="67:51">=</operator> <literal type="number" pos:start="67:53" pos:end="67:53">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

          </block_content>}</block></if> <else pos:start="71:13" pos:end="79:11">else <block pos:start="71:18" pos:end="79:11">{<block_content pos:start="73:17" pos:end="77:32">

                <expr_stmt pos:start="73:17" pos:end="73:44"><expr pos:start="73:17" pos:end="73:43"><name pos:start="73:17" pos:end="73:21">level</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <call pos:start="73:25" pos:end="73:43"><name pos:start="73:25" pos:end="73:32">get_bits</name><argument_list pos:start="73:33" pos:end="73:43">(<argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:39"><name pos:start="73:35" pos:end="73:35">s</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">gb</name></name></expr></argument>, <argument pos:start="73:42" pos:end="73:42"><expr pos:start="73:42" pos:end="73:42"><literal type="number" pos:start="73:42" pos:end="73:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="77:32"><if pos:start="75:17" pos:end="77:32">if <condition pos:start="75:20" pos:end="75:33">(<expr pos:start="75:21" pos:end="75:32"><name pos:start="75:21" pos:end="75:25">level</name> <operator pos:start="75:27" pos:end="75:28">==</operator> <literal type="number" pos:start="75:30" pos:end="75:32">255</literal></expr>)</condition><block type="pseudo" pos:start="77:21" pos:end="77:32"><block_content pos:start="77:21" pos:end="77:32">

                    <expr_stmt pos:start="77:21" pos:end="77:32"><expr pos:start="77:21" pos:end="77:31"><name pos:start="77:21" pos:end="77:25">level</name> <operator pos:start="77:27" pos:end="77:27">=</operator> <literal type="number" pos:start="77:29" pos:end="77:31">128</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

          </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="81:10" pos:end="99:9">else<block pos:start="81:14" pos:end="99:9">{<block_content pos:start="83:13" pos:end="97:28">

            <expr_stmt pos:start="83:13" pos:end="83:40"><expr pos:start="83:13" pos:end="83:39"><name pos:start="83:13" pos:end="83:17">level</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <call pos:start="83:21" pos:end="83:39"><name pos:start="83:21" pos:end="83:28">get_bits</name><argument_list pos:start="83:29" pos:end="83:39">(<argument pos:start="83:30" pos:end="83:35"><expr pos:start="83:30" pos:end="83:35"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:35"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:35">gb</name></name></expr></argument>, <argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><literal type="number" pos:start="83:38" pos:end="83:38">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="93:13"><if pos:start="85:13" pos:end="93:13">if<condition pos:start="85:15" pos:end="85:33">(<expr pos:start="85:16" pos:end="85:32"><operator pos:start="85:16" pos:end="85:16">(</operator><name pos:start="85:17" pos:end="85:21">level</name><operator pos:start="85:22" pos:end="85:22">&amp;</operator><literal type="number" pos:start="85:23" pos:end="85:26">0x7F</literal><operator pos:start="85:27" pos:end="85:27">)</operator> <operator pos:start="85:29" pos:end="85:30">==</operator> <literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>)</condition><block pos:start="85:34" pos:end="93:13">{<block_content pos:start="87:17" pos:end="91:30">

                <expr_stmt pos:start="87:17" pos:end="87:100"><expr pos:start="87:17" pos:end="87:99"><call pos:start="87:17" pos:end="87:99"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="87:99">(<argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:31">avctx</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:45"><expr pos:start="87:34" pos:end="87:45"><name pos:start="87:34" pos:end="87:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:48" pos:end="87:73"><expr pos:start="87:48" pos:end="87:73"><literal type="string" pos:start="87:48" pos:end="87:73">"illegal dc %d at %d %d\n"</literal></expr></argument>, <argument pos:start="87:76" pos:end="87:80"><expr pos:start="87:76" pos:end="87:80"><name pos:start="87:76" pos:end="87:80">level</name></expr></argument>, <argument pos:start="87:83" pos:end="87:89"><expr pos:start="87:83" pos:end="87:89"><name pos:start="87:83" pos:end="87:89"><name pos:start="87:83" pos:end="87:83">s</name><operator pos:start="87:84" pos:end="87:85">-&gt;</operator><name pos:start="87:86" pos:end="87:89">mb_x</name></name></expr></argument>, <argument pos:start="87:92" pos:end="87:98"><expr pos:start="87:92" pos:end="87:98"><name pos:start="87:92" pos:end="87:98"><name pos:start="87:92" pos:end="87:92">s</name><operator pos:start="87:93" pos:end="87:94">-&gt;</operator><name pos:start="87:95" pos:end="87:98">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="89:17" pos:end="91:30"><if pos:start="89:17" pos:end="91:30">if <condition pos:start="89:20" pos:end="89:82">(<expr pos:start="89:21" pos:end="89:81"><name pos:start="89:21" pos:end="89:45"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:28">avctx</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:45">err_recognition</name></name> <operator pos:start="89:47" pos:end="89:47">&amp;</operator> <operator pos:start="89:49" pos:end="89:49">(</operator><name pos:start="89:50" pos:end="89:64">AV_EF_BITSTREAM</name><operator pos:start="89:65" pos:end="89:65">|</operator><name pos:start="89:66" pos:end="89:80">AV_EF_COMPLIANT</name><operator pos:start="89:81" pos:end="89:81">)</operator></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:30"><block_content pos:start="91:21" pos:end="91:30">

                    <return pos:start="91:21" pos:end="91:30">return <expr pos:start="91:28" pos:end="91:29"><operator pos:start="91:28" pos:end="91:28">-</operator><literal type="number" pos:start="91:29" pos:end="91:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="95:13" pos:end="97:28"><if pos:start="95:13" pos:end="97:28">if <condition pos:start="95:16" pos:end="95:29">(<expr pos:start="95:17" pos:end="95:28"><name pos:start="95:17" pos:end="95:21">level</name> <operator pos:start="95:23" pos:end="95:24">==</operator> <literal type="number" pos:start="95:26" pos:end="95:28">255</literal></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:28"><block_content pos:start="97:17" pos:end="97:28">

                <expr_stmt pos:start="97:17" pos:end="97:28"><expr pos:start="97:17" pos:end="97:27"><name pos:start="97:17" pos:end="97:21">level</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <literal type="number" pos:start="97:25" pos:end="97:27">128</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:25"><expr pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:13">block</name><index pos:start="101:14" pos:end="101:16">[<expr pos:start="101:15" pos:end="101:15"><literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>]</index></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <name pos:start="101:20" pos:end="101:24">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:14"><expr pos:start="103:9" pos:end="103:13"><name pos:start="103:9" pos:end="103:9">i</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <literal type="number" pos:start="103:13" pos:end="103:13">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="109:5">else <block pos:start="105:12" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:14">

        <expr_stmt pos:start="107:9" pos:end="107:14"><expr pos:start="107:9" pos:end="107:13"><name pos:start="107:9" pos:end="107:9">i</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <literal type="number" pos:start="107:13" pos:end="107:13">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="111:5" pos:end="121:5"><if pos:start="111:5" pos:end="121:5">if <condition pos:start="111:8" pos:end="111:15">(<expr pos:start="111:9" pos:end="111:14"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:14">coded</name></expr>)</condition> <block pos:start="111:17" pos:end="121:5">{<block_content pos:start="113:9" pos:end="119:17">

        <if_stmt pos:start="113:9" pos:end="115:27"><if pos:start="113:9" pos:end="115:27">if <condition pos:start="113:12" pos:end="113:39">(<expr pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:23">mb_intra</name></name> <operator pos:start="113:25" pos:end="113:26">&amp;&amp;</operator> <name pos:start="113:28" pos:end="113:38"><name pos:start="113:28" pos:end="113:28">s</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:38">h263_aic</name></name></expr>)</condition><block type="pseudo" pos:start="115:13" pos:end="115:27"><block_content pos:start="115:13" pos:end="115:27">

            <goto pos:start="115:13" pos:end="115:27">goto <name pos:start="115:18" pos:end="115:26">not_coded</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:27">block_last_index</name><index pos:start="117:28" pos:end="117:30">[<expr pos:start="117:29" pos:end="117:29"><name pos:start="117:29" pos:end="117:29">n</name></expr>]</index></name> <operator pos:start="117:32" pos:end="117:32">=</operator> <name pos:start="117:34" pos:end="117:34">i</name> <operator pos:start="117:36" pos:end="117:36">-</operator> <literal type="number" pos:start="117:38" pos:end="117:38">1</literal></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:17">return <expr pos:start="119:16" pos:end="119:16"><literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<label pos:start="123:1" pos:end="123:6"><name pos:start="123:1" pos:end="123:5">retry</name>:</label>

    <block pos:start="125:5" pos:end="275:5">{<block_content pos:start="127:5" pos:end="273:5">

    <expr_stmt pos:start="127:5" pos:end="127:28"><expr pos:start="127:5" pos:end="127:27"><call pos:start="127:5" pos:end="127:27"><name pos:start="127:5" pos:end="127:15">OPEN_READER</name><argument_list pos:start="127:16" pos:end="127:27">(<argument pos:start="127:17" pos:end="127:18"><expr pos:start="127:17" pos:end="127:18"><name pos:start="127:17" pos:end="127:18">re</name></expr></argument>, <argument pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:26"><operator pos:start="127:21" pos:end="127:21">&amp;</operator><name pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:22">s</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:26">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:8"><expr pos:start="129:5" pos:end="129:7"><name pos:start="129:5" pos:end="129:5">i</name><operator pos:start="129:6" pos:end="129:7">--</operator></expr>;</expr_stmt> <comment type="line" pos:start="129:10" pos:end="129:63">// offset by -1 to allow direct indexing of scan_table</comment>

    <for pos:start="131:5" pos:end="273:5">for<control pos:start="131:8" pos:end="131:11">(<init pos:start="131:9" pos:end="131:9">;</init><condition pos:start="131:10" pos:end="131:10">;</condition><incr/>)</control> <block pos:start="131:13" pos:end="273:5">{<block_content pos:start="133:9" pos:end="271:25">

        <expr_stmt pos:start="133:9" pos:end="133:33"><expr pos:start="133:9" pos:end="133:32"><call pos:start="133:9" pos:end="133:32"><name pos:start="133:9" pos:end="133:20">UPDATE_CACHE</name><argument_list pos:start="133:21" pos:end="133:32">(<argument pos:start="133:22" pos:end="133:23"><expr pos:start="133:22" pos:end="133:23"><name pos:start="133:22" pos:end="133:23">re</name></expr></argument>, <argument pos:start="133:26" pos:end="133:31"><expr pos:start="133:26" pos:end="133:31"><operator pos:start="133:26" pos:end="133:26">&amp;</operator><name pos:start="133:27" pos:end="133:31"><name pos:start="133:27" pos:end="133:27">s</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:78"><expr pos:start="135:9" pos:end="135:77"><call pos:start="135:9" pos:end="135:77"><name pos:start="135:9" pos:end="135:18">GET_RL_VLC</name><argument_list pos:start="135:19" pos:end="135:77">(<argument pos:start="135:20" pos:end="135:24"><expr pos:start="135:20" pos:end="135:24"><name pos:start="135:20" pos:end="135:24">level</name></expr></argument>, <argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">run</name></expr></argument>, <argument pos:start="135:32" pos:end="135:33"><expr pos:start="135:32" pos:end="135:33"><name pos:start="135:32" pos:end="135:33">re</name></expr></argument>, <argument pos:start="135:36" pos:end="135:41"><expr pos:start="135:36" pos:end="135:41"><operator pos:start="135:36" pos:end="135:36">&amp;</operator><name pos:start="135:37" pos:end="135:41"><name pos:start="135:37" pos:end="135:37">s</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:41">gb</name></name></expr></argument>, <argument pos:start="135:44" pos:end="135:56"><expr pos:start="135:44" pos:end="135:56"><name pos:start="135:44" pos:end="135:56"><name pos:start="135:44" pos:end="135:45">rl</name><operator pos:start="135:46" pos:end="135:47">-&gt;</operator><name pos:start="135:48" pos:end="135:53">rl_vlc</name><index pos:start="135:54" pos:end="135:56">[<expr pos:start="135:55" pos:end="135:55"><literal type="number" pos:start="135:55" pos:end="135:55">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:59" pos:end="135:70"><expr pos:start="135:59" pos:end="135:70"><name pos:start="135:59" pos:end="135:70">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="135:73" pos:end="135:73"><expr pos:start="135:73" pos:end="135:73"><literal type="number" pos:start="135:73" pos:end="135:73">2</literal></expr></argument>, <argument pos:start="135:76" pos:end="135:76"><expr pos:start="135:76" pos:end="135:76"><literal type="number" pos:start="135:76" pos:end="135:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="225:9"><if pos:start="137:9" pos:end="217:9">if <condition pos:start="137:12" pos:end="137:22">(<expr pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:15">run</name> <operator pos:start="137:17" pos:end="137:18">==</operator> <literal type="number" pos:start="137:20" pos:end="137:21">66</literal></expr>)</condition> <block pos:start="137:24" pos:end="217:9">{<block_content pos:start="139:13" pos:end="215:13">

            <if_stmt pos:start="139:13" pos:end="147:13"><if pos:start="139:13" pos:end="147:13">if <condition pos:start="139:16" pos:end="139:22">(<expr pos:start="139:17" pos:end="139:21"><name pos:start="139:17" pos:end="139:21">level</name></expr>)</condition><block pos:start="139:23" pos:end="147:13">{<block_content pos:start="141:17" pos:end="145:26">

                <expr_stmt pos:start="141:17" pos:end="141:41"><expr pos:start="141:17" pos:end="141:40"><call pos:start="141:17" pos:end="141:40"><name pos:start="141:17" pos:end="141:28">CLOSE_READER</name><argument_list pos:start="141:29" pos:end="141:40">(<argument pos:start="141:30" pos:end="141:31"><expr pos:start="141:30" pos:end="141:31"><name pos:start="141:30" pos:end="141:31">re</name></expr></argument>, <argument pos:start="141:34" pos:end="141:39"><expr pos:start="141:34" pos:end="141:39"><operator pos:start="141:34" pos:end="141:34">&amp;</operator><name pos:start="141:35" pos:end="141:39"><name pos:start="141:35" pos:end="141:35">s</name><operator pos:start="141:36" pos:end="141:37">-&gt;</operator><name pos:start="141:38" pos:end="141:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:99"><expr pos:start="143:17" pos:end="143:98"><call pos:start="143:17" pos:end="143:98"><name pos:start="143:17" pos:end="143:22">av_log</name><argument_list pos:start="143:23" pos:end="143:98">(<argument pos:start="143:24" pos:end="143:31"><expr pos:start="143:24" pos:end="143:31"><name pos:start="143:24" pos:end="143:31"><name pos:start="143:24" pos:end="143:24">s</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:31">avctx</name></name></expr></argument>, <argument pos:start="143:34" pos:end="143:45"><expr pos:start="143:34" pos:end="143:45"><name pos:start="143:34" pos:end="143:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:48" pos:end="143:79"><expr pos:start="143:48" pos:end="143:79"><literal type="string" pos:start="143:48" pos:end="143:79">"illegal ac vlc code at %dx%d\n"</literal></expr></argument>, <argument pos:start="143:82" pos:end="143:88"><expr pos:start="143:82" pos:end="143:88"><name pos:start="143:82" pos:end="143:88"><name pos:start="143:82" pos:end="143:82">s</name><operator pos:start="143:83" pos:end="143:84">-&gt;</operator><name pos:start="143:85" pos:end="143:88">mb_x</name></name></expr></argument>, <argument pos:start="143:91" pos:end="143:97"><expr pos:start="143:91" pos:end="143:97"><name pos:start="143:91" pos:end="143:97"><name pos:start="143:91" pos:end="143:91">s</name><operator pos:start="143:92" pos:end="143:93">-&gt;</operator><name pos:start="143:94" pos:end="143:97">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="145:17" pos:end="145:26">return <expr pos:start="145:24" pos:end="145:25"><operator pos:start="145:24" pos:end="145:24">-</operator><literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="149:13" pos:end="149:24">/* escape */</comment>

            <if_stmt pos:start="151:13" pos:end="215:13"><if pos:start="151:13" pos:end="179:13">if <condition pos:start="151:16" pos:end="151:54">(<expr pos:start="151:17" pos:end="151:53"><name pos:start="151:17" pos:end="151:34">CONFIG_FLV_DECODER</name> <operator pos:start="151:36" pos:end="151:37">&amp;&amp;</operator> <name pos:start="151:39" pos:end="151:49"><name pos:start="151:39" pos:end="151:39">s</name><operator pos:start="151:40" pos:end="151:41">-&gt;</operator><name pos:start="151:42" pos:end="151:49">h263_flv</name></name> <operator pos:start="151:51" pos:end="151:51">&gt;</operator> <literal type="number" pos:start="151:53" pos:end="151:53">1</literal></expr>)</condition> <block pos:start="151:56" pos:end="179:13">{<block_content pos:start="153:17" pos:end="177:17">

                <decl_stmt pos:start="153:17" pos:end="153:53"><decl pos:start="153:17" pos:end="153:52"><type pos:start="153:17" pos:end="153:19"><name pos:start="153:17" pos:end="153:19">int</name></type> <name pos:start="153:21" pos:end="153:24">is11</name> <init pos:start="153:26" pos:end="153:52">= <expr pos:start="153:28" pos:end="153:52"><call pos:start="153:28" pos:end="153:52"><name pos:start="153:28" pos:end="153:37">SHOW_UBITS</name><argument_list pos:start="153:38" pos:end="153:52">(<argument pos:start="153:39" pos:end="153:40"><expr pos:start="153:39" pos:end="153:40"><name pos:start="153:39" pos:end="153:40">re</name></expr></argument>, <argument pos:start="153:43" pos:end="153:48"><expr pos:start="153:43" pos:end="153:48"><operator pos:start="153:43" pos:end="153:43">&amp;</operator><name pos:start="153:44" pos:end="153:48"><name pos:start="153:44" pos:end="153:44">s</name><operator pos:start="153:45" pos:end="153:46">-&gt;</operator><name pos:start="153:47" pos:end="153:48">gb</name></name></expr></argument>, <argument pos:start="153:51" pos:end="153:51"><expr pos:start="153:51" pos:end="153:51"><literal type="number" pos:start="153:51" pos:end="153:51">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:42"><expr pos:start="155:17" pos:end="155:41"><call pos:start="155:17" pos:end="155:41"><name pos:start="155:17" pos:end="155:26">SKIP_CACHE</name><argument_list pos:start="155:27" pos:end="155:41">(<argument pos:start="155:28" pos:end="155:29"><expr pos:start="155:28" pos:end="155:29"><name pos:start="155:28" pos:end="155:29">re</name></expr></argument>, <argument pos:start="155:32" pos:end="155:37"><expr pos:start="155:32" pos:end="155:37"><operator pos:start="155:32" pos:end="155:32">&amp;</operator><name pos:start="155:33" pos:end="155:37"><name pos:start="155:33" pos:end="155:33">s</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:37">gb</name></name></expr></argument>, <argument pos:start="155:40" pos:end="155:40"><expr pos:start="155:40" pos:end="155:40"><literal type="number" pos:start="155:40" pos:end="155:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:52"><expr pos:start="157:17" pos:end="157:51"><name pos:start="157:17" pos:end="157:19">run</name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="157:47"><name pos:start="157:23" pos:end="157:32">SHOW_UBITS</name><argument_list pos:start="157:33" pos:end="157:47">(<argument pos:start="157:34" pos:end="157:35"><expr pos:start="157:34" pos:end="157:35"><name pos:start="157:34" pos:end="157:35">re</name></expr></argument>, <argument pos:start="157:38" pos:end="157:43"><expr pos:start="157:38" pos:end="157:43"><operator pos:start="157:38" pos:end="157:38">&amp;</operator><name pos:start="157:39" pos:end="157:43"><name pos:start="157:39" pos:end="157:39">s</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:43">gb</name></name></expr></argument>, <argument pos:start="157:46" pos:end="157:46"><expr pos:start="157:46" pos:end="157:46"><literal type="number" pos:start="157:46" pos:end="157:46">7</literal></expr></argument>)</argument_list></call> <operator pos:start="157:49" pos:end="157:49">+</operator> <literal type="number" pos:start="157:51" pos:end="157:51">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="177:17"><if pos:start="159:17" pos:end="169:17">if <condition pos:start="159:20" pos:end="159:25">(<expr pos:start="159:21" pos:end="159:24"><name pos:start="159:21" pos:end="159:24">is11</name></expr>)</condition> <block pos:start="159:27" pos:end="169:17">{<block_content pos:start="161:21" pos:end="167:49">

                    <expr_stmt pos:start="161:21" pos:end="161:52"><expr pos:start="161:21" pos:end="161:51"><call pos:start="161:21" pos:end="161:51"><name pos:start="161:21" pos:end="161:32">SKIP_COUNTER</name><argument_list pos:start="161:33" pos:end="161:51">(<argument pos:start="161:34" pos:end="161:35"><expr pos:start="161:34" pos:end="161:35"><name pos:start="161:34" pos:end="161:35">re</name></expr></argument>, <argument pos:start="161:38" pos:end="161:43"><expr pos:start="161:38" pos:end="161:43"><operator pos:start="161:38" pos:end="161:38">&amp;</operator><name pos:start="161:39" pos:end="161:43"><name pos:start="161:39" pos:end="161:39">s</name><operator pos:start="161:40" pos:end="161:41">-&gt;</operator><name pos:start="161:42" pos:end="161:43">gb</name></name></expr></argument>, <argument pos:start="161:46" pos:end="161:50"><expr pos:start="161:46" pos:end="161:50"><literal type="number" pos:start="161:46" pos:end="161:48">1</literal> <operator pos:start="161:48" pos:end="161:48">+</operator> <literal type="number" pos:start="161:50" pos:end="161:50">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="163:21" pos:end="163:45"><expr pos:start="163:21" pos:end="163:44"><call pos:start="163:21" pos:end="163:44"><name pos:start="163:21" pos:end="163:32">UPDATE_CACHE</name><argument_list pos:start="163:33" pos:end="163:44">(<argument pos:start="163:34" pos:end="163:35"><expr pos:start="163:34" pos:end="163:35"><name pos:start="163:34" pos:end="163:35">re</name></expr></argument>, <argument pos:start="163:38" pos:end="163:43"><expr pos:start="163:38" pos:end="163:43"><operator pos:start="163:38" pos:end="163:38">&amp;</operator><name pos:start="163:39" pos:end="163:43"><name pos:start="163:39" pos:end="163:39">s</name><operator pos:start="163:40" pos:end="163:41">-&gt;</operator><name pos:start="163:42" pos:end="163:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:55"><expr pos:start="165:21" pos:end="165:54"><name pos:start="165:21" pos:end="165:25">level</name> <operator pos:start="165:27" pos:end="165:27">=</operator> <call pos:start="165:29" pos:end="165:54"><name pos:start="165:29" pos:end="165:38">SHOW_SBITS</name><argument_list pos:start="165:39" pos:end="165:54">(<argument pos:start="165:40" pos:end="165:41"><expr pos:start="165:40" pos:end="165:41"><name pos:start="165:40" pos:end="165:41">re</name></expr></argument>, <argument pos:start="165:44" pos:end="165:49"><expr pos:start="165:44" pos:end="165:49"><operator pos:start="165:44" pos:end="165:44">&amp;</operator><name pos:start="165:45" pos:end="165:49"><name pos:start="165:45" pos:end="165:45">s</name><operator pos:start="165:46" pos:end="165:47">-&gt;</operator><name pos:start="165:48" pos:end="165:49">gb</name></name></expr></argument>, <argument pos:start="165:52" pos:end="165:53"><expr pos:start="165:52" pos:end="165:53"><literal type="number" pos:start="165:52" pos:end="165:53">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:49"><expr pos:start="167:21" pos:end="167:48"><call pos:start="167:21" pos:end="167:48"><name pos:start="167:21" pos:end="167:32">SKIP_COUNTER</name><argument_list pos:start="167:33" pos:end="167:48">(<argument pos:start="167:34" pos:end="167:35"><expr pos:start="167:34" pos:end="167:35"><name pos:start="167:34" pos:end="167:35">re</name></expr></argument>, <argument pos:start="167:38" pos:end="167:43"><expr pos:start="167:38" pos:end="167:43"><operator pos:start="167:38" pos:end="167:38">&amp;</operator><name pos:start="167:39" pos:end="167:43"><name pos:start="167:39" pos:end="167:39">s</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:43">gb</name></name></expr></argument>, <argument pos:start="167:46" pos:end="167:47"><expr pos:start="167:46" pos:end="167:47"><literal type="number" pos:start="167:46" pos:end="167:47">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="169:19" pos:end="177:17">else <block pos:start="169:24" pos:end="177:17">{<block_content pos:start="171:21" pos:end="175:56">

                    <expr_stmt pos:start="171:21" pos:end="171:46"><expr pos:start="171:21" pos:end="171:45"><call pos:start="171:21" pos:end="171:45"><name pos:start="171:21" pos:end="171:30">SKIP_CACHE</name><argument_list pos:start="171:31" pos:end="171:45">(<argument pos:start="171:32" pos:end="171:33"><expr pos:start="171:32" pos:end="171:33"><name pos:start="171:32" pos:end="171:33">re</name></expr></argument>, <argument pos:start="171:36" pos:end="171:41"><expr pos:start="171:36" pos:end="171:41"><operator pos:start="171:36" pos:end="171:36">&amp;</operator><name pos:start="171:37" pos:end="171:41"><name pos:start="171:37" pos:end="171:37">s</name><operator pos:start="171:38" pos:end="171:39">-&gt;</operator><name pos:start="171:40" pos:end="171:41">gb</name></name></expr></argument>, <argument pos:start="171:44" pos:end="171:44"><expr pos:start="171:44" pos:end="171:44"><literal type="number" pos:start="171:44" pos:end="171:44">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="173:21" pos:end="173:54"><expr pos:start="173:21" pos:end="173:53"><name pos:start="173:21" pos:end="173:25">level</name> <operator pos:start="173:27" pos:end="173:27">=</operator> <call pos:start="173:29" pos:end="173:53"><name pos:start="173:29" pos:end="173:38">SHOW_SBITS</name><argument_list pos:start="173:39" pos:end="173:53">(<argument pos:start="173:40" pos:end="173:41"><expr pos:start="173:40" pos:end="173:41"><name pos:start="173:40" pos:end="173:41">re</name></expr></argument>, <argument pos:start="173:44" pos:end="173:49"><expr pos:start="173:44" pos:end="173:49"><operator pos:start="173:44" pos:end="173:44">&amp;</operator><name pos:start="173:45" pos:end="173:49"><name pos:start="173:45" pos:end="173:45">s</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:49">gb</name></name></expr></argument>, <argument pos:start="173:52" pos:end="173:52"><expr pos:start="173:52" pos:end="173:52"><literal type="number" pos:start="173:52" pos:end="173:52">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:56"><expr pos:start="175:21" pos:end="175:55"><call pos:start="175:21" pos:end="175:55"><name pos:start="175:21" pos:end="175:32">SKIP_COUNTER</name><argument_list pos:start="175:33" pos:end="175:55">(<argument pos:start="175:34" pos:end="175:35"><expr pos:start="175:34" pos:end="175:35"><name pos:start="175:34" pos:end="175:35">re</name></expr></argument>, <argument pos:start="175:38" pos:end="175:43"><expr pos:start="175:38" pos:end="175:43"><operator pos:start="175:38" pos:end="175:38">&amp;</operator><name pos:start="175:39" pos:end="175:43"><name pos:start="175:39" pos:end="175:39">s</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:43">gb</name></name></expr></argument>, <argument pos:start="175:46" pos:end="175:54"><expr pos:start="175:46" pos:end="175:54"><literal type="number" pos:start="175:46" pos:end="175:48">1</literal> <operator pos:start="175:48" pos:end="175:48">+</operator> <literal type="number" pos:start="175:50" pos:end="175:52">7</literal> <operator pos:start="175:52" pos:end="175:52">+</operator> <literal type="number" pos:start="175:54" pos:end="175:54">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="179:15" pos:end="215:13">else <block pos:start="179:20" pos:end="215:13">{<block_content pos:start="181:17" pos:end="213:17">

                <expr_stmt pos:start="181:17" pos:end="181:52"><expr pos:start="181:17" pos:end="181:51"><name pos:start="181:17" pos:end="181:19">run</name> <operator pos:start="181:21" pos:end="181:21">=</operator> <call pos:start="181:23" pos:end="181:47"><name pos:start="181:23" pos:end="181:32">SHOW_UBITS</name><argument_list pos:start="181:33" pos:end="181:47">(<argument pos:start="181:34" pos:end="181:35"><expr pos:start="181:34" pos:end="181:35"><name pos:start="181:34" pos:end="181:35">re</name></expr></argument>, <argument pos:start="181:38" pos:end="181:43"><expr pos:start="181:38" pos:end="181:43"><operator pos:start="181:38" pos:end="181:38">&amp;</operator><name pos:start="181:39" pos:end="181:43"><name pos:start="181:39" pos:end="181:39">s</name><operator pos:start="181:40" pos:end="181:41">-&gt;</operator><name pos:start="181:42" pos:end="181:43">gb</name></name></expr></argument>, <argument pos:start="181:46" pos:end="181:46"><expr pos:start="181:46" pos:end="181:46"><literal type="number" pos:start="181:46" pos:end="181:46">7</literal></expr></argument>)</argument_list></call> <operator pos:start="181:49" pos:end="181:49">+</operator> <literal type="number" pos:start="181:51" pos:end="181:51">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:42"><expr pos:start="183:17" pos:end="183:41"><call pos:start="183:17" pos:end="183:41"><name pos:start="183:17" pos:end="183:26">SKIP_CACHE</name><argument_list pos:start="183:27" pos:end="183:41">(<argument pos:start="183:28" pos:end="183:29"><expr pos:start="183:28" pos:end="183:29"><name pos:start="183:28" pos:end="183:29">re</name></expr></argument>, <argument pos:start="183:32" pos:end="183:37"><expr pos:start="183:32" pos:end="183:37"><operator pos:start="183:32" pos:end="183:32">&amp;</operator><name pos:start="183:33" pos:end="183:37"><name pos:start="183:33" pos:end="183:33">s</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:37">gb</name></name></expr></argument>, <argument pos:start="183:40" pos:end="183:40"><expr pos:start="183:40" pos:end="183:40"><literal type="number" pos:start="183:40" pos:end="183:40">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:58"><expr pos:start="185:17" pos:end="185:57"><name pos:start="185:17" pos:end="185:21">level</name> <operator pos:start="185:23" pos:end="185:23">=</operator> <operator pos:start="185:25" pos:end="185:25">(</operator><name pos:start="185:26" pos:end="185:31">int8_t</name><operator pos:start="185:32" pos:end="185:32">)</operator><call pos:start="185:33" pos:end="185:57"><name pos:start="185:33" pos:end="185:42">SHOW_UBITS</name><argument_list pos:start="185:43" pos:end="185:57">(<argument pos:start="185:44" pos:end="185:45"><expr pos:start="185:44" pos:end="185:45"><name pos:start="185:44" pos:end="185:45">re</name></expr></argument>, <argument pos:start="185:48" pos:end="185:53"><expr pos:start="185:48" pos:end="185:53"><operator pos:start="185:48" pos:end="185:48">&amp;</operator><name pos:start="185:49" pos:end="185:53"><name pos:start="185:49" pos:end="185:49">s</name><operator pos:start="185:50" pos:end="185:51">-&gt;</operator><name pos:start="185:52" pos:end="185:53">gb</name></name></expr></argument>, <argument pos:start="185:56" pos:end="185:56"><expr pos:start="185:56" pos:end="185:56"><literal type="number" pos:start="185:56" pos:end="185:56">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:48"><expr pos:start="187:17" pos:end="187:47"><call pos:start="187:17" pos:end="187:47"><name pos:start="187:17" pos:end="187:28">SKIP_COUNTER</name><argument_list pos:start="187:29" pos:end="187:47">(<argument pos:start="187:30" pos:end="187:31"><expr pos:start="187:30" pos:end="187:31"><name pos:start="187:30" pos:end="187:31">re</name></expr></argument>, <argument pos:start="187:34" pos:end="187:39"><expr pos:start="187:34" pos:end="187:39"><operator pos:start="187:34" pos:end="187:34">&amp;</operator><name pos:start="187:35" pos:end="187:39"><name pos:start="187:35" pos:end="187:35">s</name><operator pos:start="187:36" pos:end="187:37">-&gt;</operator><name pos:start="187:38" pos:end="187:39">gb</name></name></expr></argument>, <argument pos:start="187:42" pos:end="187:46"><expr pos:start="187:42" pos:end="187:46"><literal type="number" pos:start="187:42" pos:end="187:44">7</literal> <operator pos:start="187:44" pos:end="187:44">+</operator> <literal type="number" pos:start="187:46" pos:end="187:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="189:17" pos:end="213:17"><if pos:start="189:17" pos:end="213:17">if<condition pos:start="189:19" pos:end="189:33">(<expr pos:start="189:20" pos:end="189:32"><name pos:start="189:20" pos:end="189:24">level</name> <operator pos:start="189:26" pos:end="189:27">==</operator> <operator pos:start="189:29" pos:end="189:29">-</operator><literal type="number" pos:start="189:30" pos:end="189:32">128</literal></expr>)</condition><block pos:start="189:34" pos:end="213:17">{<block_content pos:start="191:21" pos:end="211:21">

                    <expr_stmt pos:start="191:21" pos:end="191:45"><expr pos:start="191:21" pos:end="191:44"><call pos:start="191:21" pos:end="191:44"><name pos:start="191:21" pos:end="191:32">UPDATE_CACHE</name><argument_list pos:start="191:33" pos:end="191:44">(<argument pos:start="191:34" pos:end="191:35"><expr pos:start="191:34" pos:end="191:35"><name pos:start="191:34" pos:end="191:35">re</name></expr></argument>, <argument pos:start="191:38" pos:end="191:43"><expr pos:start="191:38" pos:end="191:43"><operator pos:start="191:38" pos:end="191:38">&amp;</operator><name pos:start="191:39" pos:end="191:43"><name pos:start="191:39" pos:end="191:39">s</name><operator pos:start="191:40" pos:end="191:41">-&gt;</operator><name pos:start="191:42" pos:end="191:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="193:21" pos:end="211:21"><if pos:start="193:21" pos:end="201:21">if <condition pos:start="193:24" pos:end="193:56">(<expr pos:start="193:25" pos:end="193:55"><name pos:start="193:25" pos:end="193:35"><name pos:start="193:25" pos:end="193:25">s</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:35">codec_id</name></name> <operator pos:start="193:37" pos:end="193:38">==</operator> <name pos:start="193:40" pos:end="193:55">AV_CODEC_ID_RV10</name></expr>)</condition> <block pos:start="193:58" pos:end="201:21">{<block_content pos:start="197:25" pos:end="199:53">

                        <comment type="block" pos:start="195:25" pos:end="195:59">/* XXX: should patch encoder too */</comment>

                        <expr_stmt pos:start="197:25" pos:end="197:59"><expr pos:start="197:25" pos:end="197:58"><name pos:start="197:25" pos:end="197:29">level</name> <operator pos:start="197:31" pos:end="197:31">=</operator> <call pos:start="197:33" pos:end="197:58"><name pos:start="197:33" pos:end="197:42">SHOW_SBITS</name><argument_list pos:start="197:43" pos:end="197:58">(<argument pos:start="197:44" pos:end="197:45"><expr pos:start="197:44" pos:end="197:45"><name pos:start="197:44" pos:end="197:45">re</name></expr></argument>, <argument pos:start="197:48" pos:end="197:53"><expr pos:start="197:48" pos:end="197:53"><operator pos:start="197:48" pos:end="197:48">&amp;</operator><name pos:start="197:49" pos:end="197:53"><name pos:start="197:49" pos:end="197:49">s</name><operator pos:start="197:50" pos:end="197:51">-&gt;</operator><name pos:start="197:52" pos:end="197:53">gb</name></name></expr></argument>, <argument pos:start="197:56" pos:end="197:57"><expr pos:start="197:56" pos:end="197:57"><literal type="number" pos:start="197:56" pos:end="197:57">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:53"><expr pos:start="199:25" pos:end="199:52"><call pos:start="199:25" pos:end="199:52"><name pos:start="199:25" pos:end="199:36">SKIP_COUNTER</name><argument_list pos:start="199:37" pos:end="199:52">(<argument pos:start="199:38" pos:end="199:39"><expr pos:start="199:38" pos:end="199:39"><name pos:start="199:38" pos:end="199:39">re</name></expr></argument>, <argument pos:start="199:42" pos:end="199:47"><expr pos:start="199:42" pos:end="199:47"><operator pos:start="199:42" pos:end="199:42">&amp;</operator><name pos:start="199:43" pos:end="199:47"><name pos:start="199:43" pos:end="199:43">s</name><operator pos:start="199:44" pos:end="199:45">-&gt;</operator><name pos:start="199:46" pos:end="199:47">gb</name></name></expr></argument>, <argument pos:start="199:50" pos:end="199:51"><expr pos:start="199:50" pos:end="199:51"><literal type="number" pos:start="199:50" pos:end="199:51">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="201:22" pos:end="211:21">else<block pos:start="201:26" pos:end="211:21">{<block_content pos:start="203:25" pos:end="209:56">

                        <expr_stmt pos:start="203:25" pos:end="203:58"><expr pos:start="203:25" pos:end="203:57"><name pos:start="203:25" pos:end="203:29">level</name> <operator pos:start="203:31" pos:end="203:31">=</operator> <call pos:start="203:33" pos:end="203:57"><name pos:start="203:33" pos:end="203:42">SHOW_UBITS</name><argument_list pos:start="203:43" pos:end="203:57">(<argument pos:start="203:44" pos:end="203:45"><expr pos:start="203:44" pos:end="203:45"><name pos:start="203:44" pos:end="203:45">re</name></expr></argument>, <argument pos:start="203:48" pos:end="203:53"><expr pos:start="203:48" pos:end="203:53"><operator pos:start="203:48" pos:end="203:48">&amp;</operator><name pos:start="203:49" pos:end="203:53"><name pos:start="203:49" pos:end="203:49">s</name><operator pos:start="203:50" pos:end="203:51">-&gt;</operator><name pos:start="203:52" pos:end="203:53">gb</name></name></expr></argument>, <argument pos:start="203:56" pos:end="203:56"><expr pos:start="203:56" pos:end="203:56"><literal type="number" pos:start="203:56" pos:end="203:56">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="205:25" pos:end="205:50"><expr pos:start="205:25" pos:end="205:49"><call pos:start="205:25" pos:end="205:49"><name pos:start="205:25" pos:end="205:34">SKIP_CACHE</name><argument_list pos:start="205:35" pos:end="205:49">(<argument pos:start="205:36" pos:end="205:37"><expr pos:start="205:36" pos:end="205:37"><name pos:start="205:36" pos:end="205:37">re</name></expr></argument>, <argument pos:start="205:40" pos:end="205:45"><expr pos:start="205:40" pos:end="205:45"><operator pos:start="205:40" pos:end="205:40">&amp;</operator><name pos:start="205:41" pos:end="205:45"><name pos:start="205:41" pos:end="205:41">s</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:45">gb</name></name></expr></argument>, <argument pos:start="205:48" pos:end="205:48"><expr pos:start="205:48" pos:end="205:48"><literal type="number" pos:start="205:48" pos:end="205:48">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="207:25" pos:end="207:62"><expr pos:start="207:25" pos:end="207:61"><name pos:start="207:25" pos:end="207:29">level</name> <operator pos:start="207:31" pos:end="207:32">|=</operator> <call pos:start="207:34" pos:end="207:58"><name pos:start="207:34" pos:end="207:43">SHOW_SBITS</name><argument_list pos:start="207:44" pos:end="207:58">(<argument pos:start="207:45" pos:end="207:46"><expr pos:start="207:45" pos:end="207:46"><name pos:start="207:45" pos:end="207:46">re</name></expr></argument>, <argument pos:start="207:49" pos:end="207:54"><expr pos:start="207:49" pos:end="207:54"><operator pos:start="207:49" pos:end="207:49">&amp;</operator><name pos:start="207:50" pos:end="207:54"><name pos:start="207:50" pos:end="207:50">s</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:54">gb</name></name></expr></argument>, <argument pos:start="207:57" pos:end="207:57"><expr pos:start="207:57" pos:end="207:57"><literal type="number" pos:start="207:57" pos:end="207:57">6</literal></expr></argument>)</argument_list></call><operator pos:start="207:59" pos:end="207:60">&lt;&lt;</operator><literal type="number" pos:start="207:61" pos:end="207:61">5</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:56"><expr pos:start="209:25" pos:end="209:55"><call pos:start="209:25" pos:end="209:55"><name pos:start="209:25" pos:end="209:36">SKIP_COUNTER</name><argument_list pos:start="209:37" pos:end="209:55">(<argument pos:start="209:38" pos:end="209:39"><expr pos:start="209:38" pos:end="209:39"><name pos:start="209:38" pos:end="209:39">re</name></expr></argument>, <argument pos:start="209:42" pos:end="209:47"><expr pos:start="209:42" pos:end="209:47"><operator pos:start="209:42" pos:end="209:42">&amp;</operator><name pos:start="209:43" pos:end="209:47"><name pos:start="209:43" pos:end="209:43">s</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:47">gb</name></name></expr></argument>, <argument pos:start="209:50" pos:end="209:54"><expr pos:start="209:50" pos:end="209:54"><literal type="number" pos:start="209:50" pos:end="209:52">5</literal> <operator pos:start="209:52" pos:end="209:52">+</operator> <literal type="number" pos:start="209:54" pos:end="209:54">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="217:11" pos:end="225:9">else <block pos:start="217:16" pos:end="225:9">{<block_content pos:start="219:13" pos:end="223:40">

            <if_stmt pos:start="219:13" pos:end="221:31"><if pos:start="219:13" pos:end="221:31">if <condition pos:start="219:16" pos:end="219:42">(<expr pos:start="219:17" pos:end="219:41"><call pos:start="219:17" pos:end="219:41"><name pos:start="219:17" pos:end="219:26">SHOW_UBITS</name><argument_list pos:start="219:27" pos:end="219:41">(<argument pos:start="219:28" pos:end="219:29"><expr pos:start="219:28" pos:end="219:29"><name pos:start="219:28" pos:end="219:29">re</name></expr></argument>, <argument pos:start="219:32" pos:end="219:37"><expr pos:start="219:32" pos:end="219:37"><operator pos:start="219:32" pos:end="219:32">&amp;</operator><name pos:start="219:33" pos:end="219:37"><name pos:start="219:33" pos:end="219:33">s</name><operator pos:start="219:34" pos:end="219:35">-&gt;</operator><name pos:start="219:36" pos:end="219:37">gb</name></name></expr></argument>, <argument pos:start="219:40" pos:end="219:40"><expr pos:start="219:40" pos:end="219:40"><literal type="number" pos:start="219:40" pos:end="219:40">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:31"><block_content pos:start="221:17" pos:end="221:31">

                <expr_stmt pos:start="221:17" pos:end="221:31"><expr pos:start="221:17" pos:end="221:30"><name pos:start="221:17" pos:end="221:21">level</name> <operator pos:start="221:23" pos:end="221:23">=</operator> <operator pos:start="221:25" pos:end="221:25">-</operator><name pos:start="221:26" pos:end="221:30">level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:40"><expr pos:start="223:13" pos:end="223:39"><call pos:start="223:13" pos:end="223:39"><name pos:start="223:13" pos:end="223:24">SKIP_COUNTER</name><argument_list pos:start="223:25" pos:end="223:39">(<argument pos:start="223:26" pos:end="223:27"><expr pos:start="223:26" pos:end="223:27"><name pos:start="223:26" pos:end="223:27">re</name></expr></argument>, <argument pos:start="223:30" pos:end="223:35"><expr pos:start="223:30" pos:end="223:35"><operator pos:start="223:30" pos:end="223:30">&amp;</operator><name pos:start="223:31" pos:end="223:35"><name pos:start="223:31" pos:end="223:31">s</name><operator pos:start="223:32" pos:end="223:33">-&gt;</operator><name pos:start="223:34" pos:end="223:35">gb</name></name></expr></argument>, <argument pos:start="223:38" pos:end="223:38"><expr pos:start="223:38" pos:end="223:38"><literal type="number" pos:start="223:38" pos:end="223:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:17"><expr pos:start="227:9" pos:end="227:16"><name pos:start="227:9" pos:end="227:9">i</name> <operator pos:start="227:11" pos:end="227:12">+=</operator> <name pos:start="227:14" pos:end="227:16">run</name></expr>;</expr_stmt>

        <if_stmt pos:start="229:9" pos:end="267:9"><if pos:start="229:9" pos:end="267:9">if <condition pos:start="229:12" pos:end="229:20">(<expr pos:start="229:13" pos:end="229:19"><name pos:start="229:13" pos:end="229:13">i</name> <operator pos:start="229:15" pos:end="229:16">&gt;=</operator> <literal type="number" pos:start="229:18" pos:end="229:19">64</literal></expr>)</condition><block pos:start="229:21" pos:end="267:9">{<block_content pos:start="231:13" pos:end="265:22">

            <expr_stmt pos:start="231:13" pos:end="231:37"><expr pos:start="231:13" pos:end="231:36"><call pos:start="231:13" pos:end="231:36"><name pos:start="231:13" pos:end="231:24">CLOSE_READER</name><argument_list pos:start="231:25" pos:end="231:36">(<argument pos:start="231:26" pos:end="231:27"><expr pos:start="231:26" pos:end="231:27"><name pos:start="231:26" pos:end="231:27">re</name></expr></argument>, <argument pos:start="231:30" pos:end="231:35"><expr pos:start="231:30" pos:end="231:35"><operator pos:start="231:30" pos:end="231:30">&amp;</operator><name pos:start="231:31" pos:end="231:35"><name pos:start="231:31" pos:end="231:31">s</name><operator pos:start="231:32" pos:end="231:33">-&gt;</operator><name pos:start="231:34" pos:end="231:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="233:13" pos:end="233:62">// redo update without last flag, revert -1 offset</comment>

            <expr_stmt pos:start="235:13" pos:end="235:43"><expr pos:start="235:13" pos:end="235:42"><name pos:start="235:13" pos:end="235:13">i</name> <operator pos:start="235:15" pos:end="235:15">=</operator> <name pos:start="235:17" pos:end="235:17">i</name> <operator pos:start="235:19" pos:end="235:19">-</operator> <name pos:start="235:21" pos:end="235:23">run</name> <operator pos:start="235:25" pos:end="235:25">+</operator> <operator pos:start="235:27" pos:end="235:27">(</operator><operator pos:start="235:28" pos:end="235:28">(</operator><name pos:start="235:29" pos:end="235:31">run</name><operator pos:start="235:32" pos:end="235:32">-</operator><literal type="number" pos:start="235:33" pos:end="235:33">1</literal><operator pos:start="235:34" pos:end="235:34">)</operator><operator pos:start="235:35" pos:end="235:35">&amp;</operator><literal type="number" pos:start="235:36" pos:end="235:37">63</literal><operator pos:start="235:38" pos:end="235:38">)</operator> <operator pos:start="235:40" pos:end="235:40">+</operator> <literal type="number" pos:start="235:42" pos:end="235:42">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="237:13" pos:end="245:13"><if pos:start="237:13" pos:end="245:13">if <condition pos:start="237:16" pos:end="237:23">(<expr pos:start="237:17" pos:end="237:22"><name pos:start="237:17" pos:end="237:17">i</name> <operator pos:start="237:19" pos:end="237:19">&lt;</operator> <literal type="number" pos:start="237:21" pos:end="237:22">64</literal></expr>)</condition> <block pos:start="237:25" pos:end="245:13">{<block_content pos:start="241:17" pos:end="243:22">

                <comment type="line" pos:start="239:17" pos:end="239:47">// only last marker, no overrun</comment>

                <expr_stmt pos:start="241:17" pos:end="241:45"><expr pos:start="241:17" pos:end="241:44"><name pos:start="241:17" pos:end="241:36"><name pos:start="241:17" pos:end="241:21">block</name><index pos:start="241:22" pos:end="241:36">[<expr pos:start="241:23" pos:end="241:35"><name pos:start="241:23" pos:end="241:35"><name pos:start="241:23" pos:end="241:32">scan_table</name><index pos:start="241:33" pos:end="241:35">[<expr pos:start="241:34" pos:end="241:34"><name pos:start="241:34" pos:end="241:34">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="241:38" pos:end="241:38">=</operator> <name pos:start="241:40" pos:end="241:44">level</name></expr>;</expr_stmt>

                <break pos:start="243:17" pos:end="243:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="247:13" pos:end="261:13"><if pos:start="247:13" pos:end="261:13">if<condition pos:start="247:15" pos:end="247:75">(<expr pos:start="247:16" pos:end="247:74"><name pos:start="247:16" pos:end="247:31"><name pos:start="247:16" pos:end="247:16">s</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:31">alt_inter_vlc</name></name> <operator pos:start="247:33" pos:end="247:34">&amp;&amp;</operator> <name pos:start="247:36" pos:end="247:37">rl</name> <operator pos:start="247:39" pos:end="247:40">==</operator> <operator pos:start="247:42" pos:end="247:42">&amp;</operator><name pos:start="247:43" pos:end="247:58">ff_h263_rl_inter</name> <operator pos:start="247:60" pos:end="247:61">&amp;&amp;</operator> <operator pos:start="247:63" pos:end="247:63">!</operator><name pos:start="247:64" pos:end="247:74"><name pos:start="247:64" pos:end="247:64">s</name><operator pos:start="247:65" pos:end="247:66">-&gt;</operator><name pos:start="247:67" pos:end="247:74">mb_intra</name></name></expr>)</condition><block pos:start="247:76" pos:end="261:13">{<block_content pos:start="251:17" pos:end="259:27">

                <comment type="line" pos:start="249:17" pos:end="249:83">//Looks like a hack but no, it's the way it is supposed to work ...</comment>

                <expr_stmt pos:start="251:17" pos:end="251:38"><expr pos:start="251:17" pos:end="251:37"><name pos:start="251:17" pos:end="251:18">rl</name> <operator pos:start="251:20" pos:end="251:20">=</operator> <operator pos:start="251:22" pos:end="251:22">&amp;</operator><name pos:start="251:23" pos:end="251:37">ff_rl_intra_aic</name></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:22"><expr pos:start="253:17" pos:end="253:21"><name pos:start="253:17" pos:end="253:17">i</name> <operator pos:start="253:19" pos:end="253:19">=</operator> <literal type="number" pos:start="253:21" pos:end="253:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:26"><expr pos:start="255:17" pos:end="255:25"><name pos:start="255:17" pos:end="255:21"><name pos:start="255:17" pos:end="255:17">s</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:21">gb</name></name><operator pos:start="255:22" pos:end="255:22">=</operator> <name pos:start="255:24" pos:end="255:25">gb</name></expr>;</expr_stmt>

                <expr_stmt pos:start="257:17" pos:end="257:43"><expr pos:start="257:17" pos:end="257:42"><call pos:start="257:17" pos:end="257:42"><name pos:start="257:17" pos:end="257:35"><name pos:start="257:17" pos:end="257:17">s</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:23">bdsp</name><operator pos:start="257:24" pos:end="257:24">.</operator><name pos:start="257:25" pos:end="257:35">clear_block</name></name><argument_list pos:start="257:36" pos:end="257:42">(<argument pos:start="257:37" pos:end="257:41"><expr pos:start="257:37" pos:end="257:41"><name pos:start="257:37" pos:end="257:41">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="259:17" pos:end="259:27">goto <name pos:start="259:22" pos:end="259:26">retry</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="263:13" pos:end="263:106"><expr pos:start="263:13" pos:end="263:105"><call pos:start="263:13" pos:end="263:105"><name pos:start="263:13" pos:end="263:18">av_log</name><argument_list pos:start="263:19" pos:end="263:105">(<argument pos:start="263:20" pos:end="263:27"><expr pos:start="263:20" pos:end="263:27"><name pos:start="263:20" pos:end="263:27"><name pos:start="263:20" pos:end="263:20">s</name><operator pos:start="263:21" pos:end="263:22">-&gt;</operator><name pos:start="263:23" pos:end="263:27">avctx</name></name></expr></argument>, <argument pos:start="263:30" pos:end="263:41"><expr pos:start="263:30" pos:end="263:41"><name pos:start="263:30" pos:end="263:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="263:44" pos:end="263:73"><expr pos:start="263:44" pos:end="263:73"><literal type="string" pos:start="263:44" pos:end="263:73">"run overflow at %dx%d i:%d\n"</literal></expr></argument>, <argument pos:start="263:76" pos:end="263:82"><expr pos:start="263:76" pos:end="263:82"><name pos:start="263:76" pos:end="263:82"><name pos:start="263:76" pos:end="263:76">s</name><operator pos:start="263:77" pos:end="263:78">-&gt;</operator><name pos:start="263:79" pos:end="263:82">mb_x</name></name></expr></argument>, <argument pos:start="263:85" pos:end="263:91"><expr pos:start="263:85" pos:end="263:91"><name pos:start="263:85" pos:end="263:91"><name pos:start="263:85" pos:end="263:85">s</name><operator pos:start="263:86" pos:end="263:87">-&gt;</operator><name pos:start="263:88" pos:end="263:91">mb_y</name></name></expr></argument>, <argument pos:start="263:94" pos:end="263:104"><expr pos:start="263:94" pos:end="263:104"><name pos:start="263:94" pos:end="263:104"><name pos:start="263:94" pos:end="263:94">s</name><operator pos:start="263:95" pos:end="263:96">-&gt;</operator><name pos:start="263:97" pos:end="263:104">mb_intra</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="265:13" pos:end="265:22">return <expr pos:start="265:20" pos:end="265:21"><operator pos:start="265:20" pos:end="265:20">-</operator><literal type="number" pos:start="265:21" pos:end="265:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:26"><expr pos:start="269:9" pos:end="269:25"><name pos:start="269:9" pos:end="269:9">j</name> <operator pos:start="269:11" pos:end="269:11">=</operator> <name pos:start="269:13" pos:end="269:25"><name pos:start="269:13" pos:end="269:22">scan_table</name><index pos:start="269:23" pos:end="269:25">[<expr pos:start="269:24" pos:end="269:24"><name pos:start="269:24" pos:end="269:24">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:25"><expr pos:start="271:9" pos:end="271:24"><name pos:start="271:9" pos:end="271:16"><name pos:start="271:9" pos:end="271:13">block</name><index pos:start="271:14" pos:end="271:16">[<expr pos:start="271:15" pos:end="271:15"><name pos:start="271:15" pos:end="271:15">j</name></expr>]</index></name> <operator pos:start="271:18" pos:end="271:18">=</operator> <name pos:start="271:20" pos:end="271:24">level</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    </block_content>}</block>

<label pos:start="277:1" pos:end="277:10"><name pos:start="277:1" pos:end="277:9">not_coded</name>:</label>

    <if_stmt pos:start="279:5" pos:end="285:5"><if pos:start="279:5" pos:end="285:5">if <condition pos:start="279:8" pos:end="279:35">(<expr pos:start="279:9" pos:end="279:34"><name pos:start="279:9" pos:end="279:19"><name pos:start="279:9" pos:end="279:9">s</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:19">mb_intra</name></name> <operator pos:start="279:21" pos:end="279:22">&amp;&amp;</operator> <name pos:start="279:24" pos:end="279:34"><name pos:start="279:24" pos:end="279:24">s</name><operator pos:start="279:25" pos:end="279:26">-&gt;</operator><name pos:start="279:27" pos:end="279:34">h263_aic</name></name></expr>)</condition> <block pos:start="279:37" pos:end="285:5">{<block_content pos:start="281:9" pos:end="283:15">

        <expr_stmt pos:start="281:9" pos:end="281:39"><expr pos:start="281:9" pos:end="281:38"><call pos:start="281:9" pos:end="281:38"><name pos:start="281:9" pos:end="281:25">ff_h263_pred_acdc</name><argument_list pos:start="281:26" pos:end="281:38">(<argument pos:start="281:27" pos:end="281:27"><expr pos:start="281:27" pos:end="281:27"><name pos:start="281:27" pos:end="281:27">s</name></expr></argument>, <argument pos:start="281:30" pos:end="281:34"><expr pos:start="281:30" pos:end="281:34"><name pos:start="281:30" pos:end="281:34">block</name></expr></argument>, <argument pos:start="281:37" pos:end="281:37"><expr pos:start="281:37" pos:end="281:37"><name pos:start="281:37" pos:end="281:37">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:15"><expr pos:start="283:9" pos:end="283:14"><name pos:start="283:9" pos:end="283:9">i</name> <operator pos:start="283:11" pos:end="283:11">=</operator> <literal type="number" pos:start="283:13" pos:end="283:14">63</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:31"><expr pos:start="287:5" pos:end="287:30"><name pos:start="287:5" pos:end="287:26"><name pos:start="287:5" pos:end="287:5">s</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:23">block_last_index</name><index pos:start="287:24" pos:end="287:26">[<expr pos:start="287:25" pos:end="287:25"><name pos:start="287:25" pos:end="287:25">n</name></expr>]</index></name> <operator pos:start="287:28" pos:end="287:28">=</operator> <name pos:start="287:30" pos:end="287:30">i</name></expr>;</expr_stmt>

    <return pos:start="289:5" pos:end="289:13">return <expr pos:start="289:12" pos:end="289:12"><literal type="number" pos:start="289:12" pos:end="289:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
