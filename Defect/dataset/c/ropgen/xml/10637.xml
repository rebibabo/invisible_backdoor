<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10637.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">gen_wsr_ps</name><parameter_list pos:start="1:23" pos:end="1:65">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:35">DisasContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">dc</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:52">sr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:62">TCGv_i32</name></type> <name pos:start="1:64" pos:end="1:64">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:35">

    <decl_stmt pos:start="5:5" pos:end="7:38"><decl pos:start="5:5" pos:end="7:37"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">mask</name> <init pos:start="5:19" pos:end="7:37">= <expr pos:start="5:21" pos:end="7:37"><name pos:start="5:21" pos:end="5:26">PS_WOE</name> <operator pos:start="5:28" pos:end="5:28">|</operator> <name pos:start="5:30" pos:end="5:39">PS_CALLINC</name> <operator pos:start="5:41" pos:end="5:41">|</operator> <name pos:start="5:43" pos:end="5:48">PS_OWB</name> <operator pos:start="5:50" pos:end="5:50">|</operator>

        <name pos:start="7:9" pos:end="7:13">PS_UM</name> <operator pos:start="7:15" pos:end="7:15">|</operator> <name pos:start="7:17" pos:end="7:23">PS_EXCM</name> <operator pos:start="7:25" pos:end="7:25">|</operator> <name pos:start="7:27" pos:end="7:37">PS_INTLEVEL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:46">(<expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:22">option_enabled</name><argument_list pos:start="11:23" pos:end="11:45">(<argument pos:start="11:24" pos:end="11:25"><expr pos:start="11:24" pos:end="11:25"><name pos:start="11:24" pos:end="11:25">dc</name></expr></argument>, <argument pos:start="11:28" pos:end="11:44"><expr pos:start="11:28" pos:end="11:44"><name pos:start="11:28" pos:end="11:44">XTENSA_OPTION_MMU</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:48" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:24">

        <expr_stmt pos:start="13:9" pos:end="13:24"><expr pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:12">mask</name> <operator pos:start="13:14" pos:end="13:15">|=</operator> <name pos:start="13:17" pos:end="13:23">PS_RING</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:20">tcg_gen_andi_i32</name><argument_list pos:start="17:21" pos:end="17:41">(<argument pos:start="17:22" pos:end="17:31"><expr pos:start="17:22" pos:end="17:31"><name pos:start="17:22" pos:end="17:31"><name pos:start="17:22" pos:end="17:27">cpu_SR</name><index pos:start="17:28" pos:end="17:31">[<expr pos:start="17:29" pos:end="17:30"><name pos:start="17:29" pos:end="17:30">sr</name></expr>]</index></name></expr></argument>, <argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">v</name></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:47">/* This can change mmu index, so exit tb */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><call pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:13">gen_jumpi</name><argument_list pos:start="21:14" pos:end="21:34">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">dc</name></expr></argument>, <argument pos:start="21:19" pos:end="21:29"><expr pos:start="21:19" pos:end="21:29"><name pos:start="21:19" pos:end="21:29"><name pos:start="21:19" pos:end="21:20">dc</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:29">next_pc</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><operator pos:start="21:32" pos:end="21:32">-</operator><literal type="number" pos:start="21:33" pos:end="21:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
