<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23552.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">sockaddr_to_str</name><parameter_list pos:start="1:27" pos:end="7:58">(<parameter pos:start="1:28" pos:end="1:37"><decl pos:start="1:28" pos:end="1:37"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:37">dest</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:50">max_len</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:54"><decl pos:start="3:28" pos:end="3:54"><type pos:start="3:28" pos:end="3:54"><name pos:start="3:28" pos:end="3:50"><name pos:start="3:28" pos:end="3:33">struct</name> <name pos:start="3:35" pos:end="3:50">sockaddr_storage</name></name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:54">ss</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:72"><decl pos:start="3:57" pos:end="3:72"><type pos:start="3:57" pos:end="3:72"><name pos:start="3:57" pos:end="3:65">socklen_t</name></type> <name pos:start="3:67" pos:end="3:72">ss_len</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:54"><decl pos:start="5:28" pos:end="5:54"><type pos:start="5:28" pos:end="5:54"><name pos:start="5:28" pos:end="5:50"><name pos:start="5:28" pos:end="5:33">struct</name> <name pos:start="5:35" pos:end="5:50">sockaddr_storage</name></name> <modifier pos:start="5:52" pos:end="5:52">*</modifier></type><name pos:start="5:53" pos:end="5:54">ps</name></decl></parameter>, <parameter pos:start="5:57" pos:end="5:72"><decl pos:start="5:57" pos:end="5:72"><type pos:start="5:57" pos:end="5:72"><name pos:start="5:57" pos:end="5:65">socklen_t</name></type> <name pos:start="5:67" pos:end="5:72">ps_len</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:41"><decl pos:start="7:28" pos:end="7:41"><type pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:31">bool</name></type> <name pos:start="7:33" pos:end="7:41">is_listen</name></decl></parameter>, <parameter pos:start="7:44" pos:end="7:57"><decl pos:start="7:44" pos:end="7:57"><type pos:start="7:44" pos:end="7:57"><name pos:start="7:44" pos:end="7:47">bool</name></type> <name pos:start="7:49" pos:end="7:57">is_telnet</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="69:1">{<block_content pos:start="11:5" pos:end="67:5">

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:26"><name pos:start="11:10" pos:end="11:14">shost</name><index pos:start="11:15" pos:end="11:26">[<expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:25">NI_MAXHOST</name></expr>]</index></name></decl>, <decl pos:start="11:29" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:29" pos:end="11:45"><name pos:start="11:29" pos:end="11:33">sserv</name><index pos:start="11:34" pos:end="11:45">[<expr pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:44">NI_MAXSERV</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:26"><name pos:start="13:10" pos:end="13:14">phost</name><index pos:start="13:15" pos:end="13:26">[<expr pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:25">NI_MAXHOST</name></expr>]</index></name></decl>, <decl pos:start="13:29" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:29" pos:end="13:45"><name pos:start="13:29" pos:end="13:33">pserv</name><index pos:start="13:34" pos:end="13:45">[<expr pos:start="13:35" pos:end="13:44"><name pos:start="13:35" pos:end="13:44">NI_MAXSERV</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">left</name> <init pos:start="15:22" pos:end="15:25">= <expr pos:start="15:24" pos:end="15:25"><literal type="string" pos:start="15:24" pos:end="15:25">""</literal></expr></init></decl>, <decl pos:start="15:28" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:16"><modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:33">right</name> <init pos:start="15:35" pos:end="15:38">= <expr pos:start="15:37" pos:end="15:38"><literal type="string" pos:start="15:37" pos:end="15:38">""</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="19:5" pos:end="67:5">switch <condition pos:start="19:12" pos:end="19:26">(<expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:14">ss</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:25">ss_family</name></name></expr>)</condition> <block pos:start="19:28" pos:end="67:5">{<block_content pos:start="23:5" pos:end="65:50">

<cpp:ifndef pos:start="21:1" pos:end="21:14">#<cpp:directive pos:start="21:2" pos:end="21:7">ifndef</cpp:directive> <name pos:start="21:9" pos:end="21:14">_WIN32</name></cpp:ifndef>

    <case pos:start="23:5" pos:end="23:17">case <expr pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:16">AF_UNIX</name></expr>:</case>

        <return pos:start="25:9" pos:end="32:0">return <expr pos:start="25:16" pos:end="29:51"><call pos:start="25:16" pos:end="29:51"><name pos:start="25:16" pos:end="25:23">snprintf</name><argument_list pos:start="25:24" pos:end="29:51">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">dest</name></expr></argument>, <argument pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:37"><name pos:start="25:31" pos:end="25:37">max_len</name></expr></argument>, <argument pos:start="25:40" pos:end="25:50"><expr pos:start="25:40" pos:end="25:50"><literal type="string" pos:start="25:40" pos:end="25:50">"unix:%s%s"</literal></expr></argument>,

                        <argument pos:start="27:25" pos:end="27:62"><expr pos:start="27:25" pos:end="27:62"><operator pos:start="27:25" pos:end="27:25">(</operator><operator pos:start="27:26" pos:end="27:26">(</operator>struct <name pos:start="27:34" pos:end="27:44">sockaddr_un</name> <operator pos:start="27:46" pos:end="27:46">*</operator><operator pos:start="27:47" pos:end="27:47">)</operator><operator pos:start="27:48" pos:end="27:48">(</operator><name pos:start="27:49" pos:end="27:50">ss</name><operator pos:start="27:51" pos:end="27:51">)</operator><operator pos:start="27:52" pos:end="27:52">)</operator><operator pos:start="27:53" pos:end="27:54">-&gt;</operator><name pos:start="27:55" pos:end="27:62">sun_path</name></expr></argument>,

                        <argument pos:start="29:25" pos:end="29:50"><expr pos:start="29:25" pos:end="29:50"><ternary pos:start="29:25" pos:end="29:50"><condition pos:start="29:25" pos:end="29:35"><expr pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:33">is_listen</name></expr> ?</condition><then pos:start="29:37" pos:end="29:45"> <expr pos:start="29:37" pos:end="29:45"><literal type="string" pos:start="29:37" pos:end="29:45">",server"</literal></expr> </then><else pos:start="29:47" pos:end="29:50">: <expr pos:start="29:49" pos:end="29:50"><literal type="string" pos:start="29:49" pos:end="29:50">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="31:1" pos:end="31:6">#<cpp:directive pos:start="31:2" pos:end="31:6">endif</cpp:directive></cpp:endif>

    <case pos:start="33:5" pos:end="33:18">case <expr pos:start="33:10" pos:end="33:17"><name pos:start="33:10" pos:end="33:17">AF_INET6</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:12">left</name>  <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="string" pos:start="35:17" pos:end="35:19">"["</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:20"><expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">right</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="string" pos:start="37:17" pos:end="37:19">"]"</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:26">/* fall through */</comment>

    <case pos:start="41:5" pos:end="41:17">case <expr pos:start="41:10" pos:end="41:16"><name pos:start="41:10" pos:end="41:16">AF_INET</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="45:75"><expr pos:start="43:9" pos:end="45:74"><call pos:start="43:9" pos:end="45:74"><name pos:start="43:9" pos:end="43:19">getnameinfo</name><argument_list pos:start="43:20" pos:end="45:74">(<argument pos:start="43:21" pos:end="43:42"><expr pos:start="43:21" pos:end="43:42"><operator pos:start="43:21" pos:end="43:21">(</operator>struct <name pos:start="43:29" pos:end="43:36">sockaddr</name> <operator pos:start="43:38" pos:end="43:38">*</operator><operator pos:start="43:39" pos:end="43:39">)</operator> <name pos:start="43:41" pos:end="43:42">ss</name></expr></argument>, <argument pos:start="43:45" pos:end="43:50"><expr pos:start="43:45" pos:end="43:50"><name pos:start="43:45" pos:end="43:50">ss_len</name></expr></argument>, <argument pos:start="43:53" pos:end="43:57"><expr pos:start="43:53" pos:end="43:57"><name pos:start="43:53" pos:end="43:57">shost</name></expr></argument>, <argument pos:start="43:60" pos:end="43:72"><expr pos:start="43:60" pos:end="43:72"><sizeof pos:start="43:60" pos:end="43:72">sizeof<argument_list pos:start="43:66" pos:end="43:72">(<argument pos:start="43:67" pos:end="43:71"><expr pos:start="43:67" pos:end="43:71"><name pos:start="43:67" pos:end="43:71">shost</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="45:21" pos:end="45:25"><expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:25">sserv</name></expr></argument>, <argument pos:start="45:28" pos:end="45:40"><expr pos:start="45:28" pos:end="45:40"><sizeof pos:start="45:28" pos:end="45:40">sizeof<argument_list pos:start="45:34" pos:end="45:40">(<argument pos:start="45:35" pos:end="45:39"><expr pos:start="45:35" pos:end="45:39"><name pos:start="45:35" pos:end="45:39">sserv</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:43" pos:end="45:73"><expr pos:start="45:43" pos:end="45:73"><name pos:start="45:43" pos:end="45:56">NI_NUMERICHOST</name> <operator pos:start="45:58" pos:end="45:58">|</operator> <name pos:start="45:60" pos:end="45:73">NI_NUMERICSERV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:75"><expr pos:start="47:9" pos:end="49:74"><call pos:start="47:9" pos:end="49:74"><name pos:start="47:9" pos:end="47:19">getnameinfo</name><argument_list pos:start="47:20" pos:end="49:74">(<argument pos:start="47:21" pos:end="47:42"><expr pos:start="47:21" pos:end="47:42"><operator pos:start="47:21" pos:end="47:21">(</operator>struct <name pos:start="47:29" pos:end="47:36">sockaddr</name> <operator pos:start="47:38" pos:end="47:38">*</operator><operator pos:start="47:39" pos:end="47:39">)</operator> <name pos:start="47:41" pos:end="47:42">ps</name></expr></argument>, <argument pos:start="47:45" pos:end="47:50"><expr pos:start="47:45" pos:end="47:50"><name pos:start="47:45" pos:end="47:50">ps_len</name></expr></argument>, <argument pos:start="47:53" pos:end="47:57"><expr pos:start="47:53" pos:end="47:57"><name pos:start="47:53" pos:end="47:57">phost</name></expr></argument>, <argument pos:start="47:60" pos:end="47:72"><expr pos:start="47:60" pos:end="47:72"><sizeof pos:start="47:60" pos:end="47:72">sizeof<argument_list pos:start="47:66" pos:end="47:72">(<argument pos:start="47:67" pos:end="47:71"><expr pos:start="47:67" pos:end="47:71"><name pos:start="47:67" pos:end="47:71">phost</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:25"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:25">pserv</name></expr></argument>, <argument pos:start="49:28" pos:end="49:40"><expr pos:start="49:28" pos:end="49:40"><sizeof pos:start="49:28" pos:end="49:40">sizeof<argument_list pos:start="49:34" pos:end="49:40">(<argument pos:start="49:35" pos:end="49:39"><expr pos:start="49:35" pos:end="49:39"><name pos:start="49:35" pos:end="49:39">pserv</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="49:43" pos:end="49:73"><expr pos:start="49:43" pos:end="49:73"><name pos:start="49:43" pos:end="49:56">NI_NUMERICHOST</name> <operator pos:start="49:58" pos:end="49:58">|</operator> <name pos:start="49:60" pos:end="49:73">NI_NUMERICSERV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="59:51">return <expr pos:start="51:16" pos:end="59:50"><call pos:start="51:16" pos:end="59:50"><name pos:start="51:16" pos:end="51:23">snprintf</name><argument_list pos:start="51:24" pos:end="59:50">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><name pos:start="51:25" pos:end="51:28">dest</name></expr></argument>, <argument pos:start="51:31" pos:end="51:37"><expr pos:start="51:31" pos:end="51:37"><name pos:start="51:31" pos:end="51:37">max_len</name></expr></argument>, <argument pos:start="51:40" pos:end="51:69"><expr pos:start="51:40" pos:end="51:69"><literal type="string" pos:start="51:40" pos:end="51:69">"%s:%s%s%s:%s%s &lt;-&gt; %s%s%s:%s"</literal></expr></argument>,

                        <argument pos:start="53:25" pos:end="53:52"><expr pos:start="53:25" pos:end="53:52"><ternary pos:start="53:25" pos:end="53:52"><condition pos:start="53:25" pos:end="53:35"><expr pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:33">is_telnet</name></expr> ?</condition><then pos:start="53:37" pos:end="53:44"> <expr pos:start="53:37" pos:end="53:44"><literal type="string" pos:start="53:37" pos:end="53:44">"telnet"</literal></expr> </then><else pos:start="53:46" pos:end="53:52">: <expr pos:start="53:48" pos:end="53:52"><literal type="string" pos:start="53:48" pos:end="53:52">"tcp"</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">left</name></expr></argument>, <argument pos:start="55:31" pos:end="55:35"><expr pos:start="55:31" pos:end="55:35"><name pos:start="55:31" pos:end="55:35">shost</name></expr></argument>, <argument pos:start="55:38" pos:end="55:42"><expr pos:start="55:38" pos:end="55:42"><name pos:start="55:38" pos:end="55:42">right</name></expr></argument>, <argument pos:start="55:45" pos:end="55:49"><expr pos:start="55:45" pos:end="55:49"><name pos:start="55:45" pos:end="55:49">sserv</name></expr></argument>,

                        <argument pos:start="57:25" pos:end="57:50"><expr pos:start="57:25" pos:end="57:50"><ternary pos:start="57:25" pos:end="57:50"><condition pos:start="57:25" pos:end="57:35"><expr pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:33">is_listen</name></expr> ?</condition><then pos:start="57:37" pos:end="57:45"> <expr pos:start="57:37" pos:end="57:45"><literal type="string" pos:start="57:37" pos:end="57:45">",server"</literal></expr> </then><else pos:start="57:47" pos:end="57:50">: <expr pos:start="57:49" pos:end="57:50"><literal type="string" pos:start="57:49" pos:end="57:50">""</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="59:25" pos:end="59:28"><expr pos:start="59:25" pos:end="59:28"><name pos:start="59:25" pos:end="59:28">left</name></expr></argument>, <argument pos:start="59:31" pos:end="59:35"><expr pos:start="59:31" pos:end="59:35"><name pos:start="59:31" pos:end="59:35">phost</name></expr></argument>, <argument pos:start="59:38" pos:end="59:42"><expr pos:start="59:38" pos:end="59:42"><name pos:start="59:38" pos:end="59:42">right</name></expr></argument>, <argument pos:start="59:45" pos:end="59:49"><expr pos:start="59:45" pos:end="59:49"><name pos:start="59:45" pos:end="59:49">pserv</name></expr></argument>)</argument_list></call></expr>;</return>



    <default pos:start="63:5" pos:end="63:12">default:</default>

        <return pos:start="65:9" pos:end="65:50">return <expr pos:start="65:16" pos:end="65:49"><call pos:start="65:16" pos:end="65:49"><name pos:start="65:16" pos:end="65:23">snprintf</name><argument_list pos:start="65:24" pos:end="65:49">(<argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">dest</name></expr></argument>, <argument pos:start="65:31" pos:end="65:37"><expr pos:start="65:31" pos:end="65:37"><name pos:start="65:31" pos:end="65:37">max_len</name></expr></argument>, <argument pos:start="65:40" pos:end="65:48"><expr pos:start="65:40" pos:end="65:48"><literal type="string" pos:start="65:40" pos:end="65:48">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
