<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17724.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ff_lag_rac_init</name><parameter_list pos:start="1:21" pos:end="1:63">(<parameter pos:start="1:22" pos:end="1:31"><decl pos:start="1:22" pos:end="1:31"><type pos:start="1:22" pos:end="1:31"><name pos:start="1:22" pos:end="1:28">lag_rac</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">l</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:46">GetBitContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">gb</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:62">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:24">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:18">left</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="13:7">/* According to reference decoder "1st byte is garbage",

     * however, it gets skipped by the call to align_get_bits()

     */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:18">align_get_bits</name><argument_list pos:start="15:19" pos:end="15:22">(<argument pos:start="15:20" pos:end="15:21"><expr pos:start="15:20" pos:end="15:21"><name pos:start="15:20" pos:end="15:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:49"><expr pos:start="17:5" pos:end="17:48"><name pos:start="17:5" pos:end="17:8">left</name>                <operator pos:start="17:25" pos:end="17:25">=</operator> <call pos:start="17:27" pos:end="17:43"><name pos:start="17:27" pos:end="17:39">get_bits_left</name><argument_list pos:start="17:40" pos:end="17:43">(<argument pos:start="17:41" pos:end="17:42"><expr pos:start="17:41" pos:end="17:42"><name pos:start="17:41" pos:end="17:42">gb</name></expr></argument>)</argument_list></call> <operator pos:start="17:45" pos:end="17:46">&gt;&gt;</operator> <literal type="number" pos:start="17:48" pos:end="17:48">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:62"><expr pos:start="19:5" pos:end="21:61"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:5">l</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:23">bytestream_start</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator>

    <name pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:5">l</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:17">bytestream</name></name>       <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:36"><name pos:start="21:27" pos:end="21:28">gb</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">buffer</name></name> <operator pos:start="21:38" pos:end="21:38">+</operator> <call pos:start="21:40" pos:end="21:57"><name pos:start="21:40" pos:end="21:53">get_bits_count</name><argument_list pos:start="21:54" pos:end="21:57">(<argument pos:start="21:55" pos:end="21:56"><expr pos:start="21:55" pos:end="21:56"><name pos:start="21:55" pos:end="21:56">gb</name></expr></argument>)</argument_list></call> <operator pos:start="21:59" pos:end="21:59">/</operator> <literal type="number" pos:start="21:61" pos:end="21:61">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">l</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:21">bytestream_end</name></name>   <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:45"><name pos:start="23:27" pos:end="23:27">l</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:45">bytestream_start</name></name> <operator pos:start="23:47" pos:end="23:47">+</operator> <name pos:start="23:49" pos:end="23:52">left</name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:5">l</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">range</name></name>        <operator pos:start="27:21" pos:end="27:21">=</operator> <literal type="number" pos:start="27:23" pos:end="27:26">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">l</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">low</name></name>          <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">*</operator><name pos:start="29:24" pos:end="29:36"><name pos:start="29:24" pos:end="29:24">l</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:36">bytestream</name></name> <operator pos:start="29:38" pos:end="29:39">&gt;&gt;</operator> <literal type="number" pos:start="29:41" pos:end="29:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:45"><expr pos:start="31:5" pos:end="31:44"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:5">l</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:17">hash_shift</name></name>   <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:44"><name pos:start="31:23" pos:end="31:27">FFMAX</name><argument_list pos:start="31:28" pos:end="31:44">(<argument pos:start="31:29" pos:end="31:40"><expr pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:36"><name pos:start="31:29" pos:end="31:29">l</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:36">scale</name></name> <operator pos:start="31:38" pos:end="31:38">-</operator> <literal type="number" pos:start="31:40" pos:end="31:40">8</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:43"><expr pos:start="31:43" pos:end="31:43"><literal type="number" pos:start="31:43" pos:end="31:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="45:5">for <control pos:start="35:9" pos:end="35:33">(<init pos:start="35:10" pos:end="35:19"><expr pos:start="35:10" pos:end="35:18"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:14">j</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:28"><expr pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <literal type="number" pos:start="35:25" pos:end="35:27">256</literal></expr>;</condition> <incr pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:30">i</name><operator pos:start="35:31" pos:end="35:32">++</operator></expr></incr>)</control> <block pos:start="35:35" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:29">

        <decl_stmt pos:start="37:9" pos:end="37:40"><decl pos:start="37:9" pos:end="37:39"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">unsigned</name></type> <name pos:start="37:18" pos:end="37:18">r</name> <init pos:start="37:20" pos:end="37:39">= <expr pos:start="37:22" pos:end="37:39"><name pos:start="37:22" pos:end="37:22">i</name> <operator pos:start="37:24" pos:end="37:25">&lt;&lt;</operator> <name pos:start="37:27" pos:end="37:39"><name pos:start="37:27" pos:end="37:27">l</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:39">hash_shift</name></name></expr></init></decl>;</decl_stmt>

        <while pos:start="39:9" pos:end="41:16">while <condition pos:start="39:15" pos:end="39:35">(<expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:16">l</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">prob</name><index pos:start="39:23" pos:end="39:29">[<expr pos:start="39:24" pos:end="39:28"><name pos:start="39:24" pos:end="39:24">j</name> <operator pos:start="39:26" pos:end="39:26">+</operator> <literal type="number" pos:start="39:28" pos:end="39:28">1</literal></expr>]</index></name> <operator pos:start="39:31" pos:end="39:32">&lt;=</operator> <name pos:start="39:34" pos:end="39:34">r</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:16"><block_content pos:start="41:13" pos:end="41:16">

            <expr_stmt pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">j</name><operator pos:start="41:14" pos:end="41:15">++</operator></expr>;</expr_stmt></block_content></block></while>

        <expr_stmt pos:start="43:9" pos:end="43:29"><expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:9">l</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">range_hash</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name> <operator pos:start="43:26" pos:end="43:26">=</operator> <name pos:start="43:28" pos:end="43:28">j</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="49:5" pos:end="49:81">/* Add conversion factor to hash_shift so we don't have to in lag_get_rac. */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:5">l</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:17">hash_shift</name></name> <operator pos:start="51:19" pos:end="51:20">+=</operator> <literal type="number" pos:start="51:22" pos:end="51:23">23</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
