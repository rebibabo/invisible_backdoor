<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21892.c" pos:tabs="8"><function pos:start="1:1" pos:end="775:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">xvid_encode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="775:1">{<block_content pos:start="5:5" pos:end="773:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">xerr</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">i</name></decl>, <decl pos:start="5:18" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:20">ret</name> <init pos:start="5:22" pos:end="5:25">= <expr pos:start="5:24" pos:end="5:25"><operator pos:start="5:24" pos:end="5:24">-</operator><literal type="number" pos:start="5:25" pos:end="5:25">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">xvid_flags</name> <init pos:start="7:20" pos:end="7:33">= <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:33">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">xvid_context</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:26">x</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:19">intra</name></decl>, <decl pos:start="11:22" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:27">inter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:53"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:24">xvid_plugin_single_t</name></type>      <name pos:start="17:31" pos:end="17:36">single</name>          <init pos:start="17:47" pos:end="17:53">= <expr pos:start="17:49" pos:end="17:53"><block pos:start="17:49" pos:end="17:53">{ <expr pos:start="17:51" pos:end="17:51"><literal type="number" pos:start="17:51" pos:end="17:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:24">xvid_ff_pass1</name></name></type>      <name pos:start="19:31" pos:end="19:38">rc2pass1</name>        <init pos:start="19:47" pos:end="19:53">= <expr pos:start="19:49" pos:end="19:53"><block pos:start="19:49" pos:end="19:53">{ <expr pos:start="19:51" pos:end="19:51"><literal type="number" pos:start="19:51" pos:end="19:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:54"><decl pos:start="21:5" pos:end="21:53"><type pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:24">xvid_plugin_2pass2_t</name></type>      <name pos:start="21:31" pos:end="21:38">rc2pass2</name>        <init pos:start="21:47" pos:end="21:53">= <expr pos:start="21:49" pos:end="21:53"><block pos:start="21:49" pos:end="21:53">{ <expr pos:start="21:51" pos:end="21:51"><literal type="number" pos:start="21:51" pos:end="21:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:54"><decl pos:start="23:5" pos:end="23:53"><type pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:29">xvid_plugin_lumimasking_t</name></type> <name pos:start="23:31" pos:end="23:39">masking_l</name>       <init pos:start="23:47" pos:end="23:53">= <expr pos:start="23:49" pos:end="23:53"><block pos:start="23:49" pos:end="23:53">{ <expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="23:56" pos:end="23:77">/* For lumi masking */</comment>

    <decl_stmt pos:start="25:5" pos:end="25:54"><decl pos:start="25:5" pos:end="25:53"><type pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:29">xvid_plugin_lumimasking_t</name></type> <name pos:start="25:31" pos:end="25:39">masking_v</name>       <init pos:start="25:47" pos:end="25:53">= <expr pos:start="25:49" pos:end="25:53"><block pos:start="25:49" pos:end="25:53">{ <expr pos:start="25:51" pos:end="25:51"><literal type="number" pos:start="25:51" pos:end="25:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="25:56" pos:end="25:76">/* For variance AQ */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:54"><decl pos:start="27:5" pos:end="27:53"><type pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:22">xvid_plugin_ssim_t</name></type>        <name pos:start="27:31" pos:end="27:34">ssim</name>            <init pos:start="27:47" pos:end="27:53">= <expr pos:start="27:49" pos:end="27:53"><block pos:start="27:49" pos:end="27:53">{ <expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:54"><decl pos:start="29:5" pos:end="29:53"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:19">xvid_gbl_init_t</name></type>           <name pos:start="29:31" pos:end="29:43">xvid_gbl_init</name>   <init pos:start="29:47" pos:end="29:53">= <expr pos:start="29:49" pos:end="29:53"><block pos:start="29:49" pos:end="29:53">{ <expr pos:start="29:51" pos:end="29:51"><literal type="number" pos:start="29:51" pos:end="29:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:54"><decl pos:start="31:5" pos:end="31:53"><type pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:21">xvid_enc_create_t</name></type>         <name pos:start="31:31" pos:end="31:45">xvid_enc_create</name> <init pos:start="31:47" pos:end="31:53">= <expr pos:start="31:49" pos:end="31:53"><block pos:start="31:49" pos:end="31:53">{ <expr pos:start="31:51" pos:end="31:51"><literal type="number" pos:start="31:51" pos:end="31:51">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:41"><decl pos:start="33:5" pos:end="33:40"><type pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:21">xvid_enc_plugin_t</name></type>         <name pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:37">plugins</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">4</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">x</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">twopassfd</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <operator pos:start="37:20" pos:end="37:20">-</operator><literal type="number" pos:start="37:21" pos:end="37:21">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:53">/* Bring in VOP flags from ffmpeg command-line */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:36"><expr pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">x</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:16">vop_flags</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:35">XVID_VOP_HALFPEL</name></expr>;</expr_stmt>              <comment type="block" pos:start="43:51" pos:end="43:76">/* Bare minimum quality */</comment>

    <if_stmt pos:start="45:5" pos:end="47:44"><if pos:start="45:5" pos:end="47:44">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:18">xvid_flags</name> <operator pos:start="45:20" pos:end="45:20">&amp;</operator> <name pos:start="45:22" pos:end="45:38">AV_CODEC_FLAG_4MV</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:44"><block_content pos:start="47:9" pos:end="47:44">

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">x</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">vop_flags</name></name>    <operator pos:start="47:25" pos:end="47:26">|=</operator> <name pos:start="47:28" pos:end="47:43">XVID_VOP_INTER4V</name></expr>;</expr_stmt></block_content></block></if></if_stmt>      <comment type="block" pos:start="47:51" pos:end="47:63">/* Level 3 */</comment>

    <if_stmt pos:start="49:5" pos:end="51:49"><if pos:start="49:5" pos:end="51:49">if <condition pos:start="49:8" pos:end="49:23">(<expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">trellis</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:49"><block_content pos:start="51:9" pos:end="51:49">

        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">x</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:20">vop_flags</name></name>    <operator pos:start="51:25" pos:end="51:26">|=</operator> <name pos:start="51:28" pos:end="51:48">XVID_VOP_TRELLISQUANT</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="51:51" pos:end="51:63">/* Level 5 */</comment>

    <if_stmt pos:start="53:5" pos:end="55:45"><if pos:start="53:5" pos:end="55:45">if <condition pos:start="53:8" pos:end="53:43">(<expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:18">xvid_flags</name> <operator pos:start="53:20" pos:end="53:20">&amp;</operator> <name pos:start="53:22" pos:end="53:42">AV_CODEC_FLAG_AC_PRED</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:45"><block_content pos:start="55:9" pos:end="55:45">

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">x</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">vop_flags</name></name>    <operator pos:start="55:25" pos:end="55:26">|=</operator> <name pos:start="55:28" pos:end="55:44">XVID_VOP_HQACPRED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>     <comment type="block" pos:start="55:51" pos:end="55:63">/* Level 6 */</comment>

    <if_stmt pos:start="57:5" pos:end="59:46"><if pos:start="57:5" pos:end="59:46">if <condition pos:start="57:8" pos:end="57:40">(<expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:18">xvid_flags</name> <operator pos:start="57:20" pos:end="57:20">&amp;</operator> <name pos:start="57:22" pos:end="57:39">AV_CODEC_FLAG_GRAY</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:46"><block_content pos:start="59:9" pos:end="59:46">

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">x</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">vop_flags</name></name>    <operator pos:start="59:25" pos:end="59:26">|=</operator> <name pos:start="59:28" pos:end="59:45">XVID_VOP_GREYSCALE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:48">/* Decide which ME quality setting to use */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:20"><expr pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:5">x</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:15">me_flags</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>;</expr_stmt>

    <switch pos:start="67:5" pos:end="145:5">switch <condition pos:start="67:12" pos:end="67:26">(<expr pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:13">x</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:25">me_quality</name></name></expr>)</condition> <block pos:start="67:28" pos:end="145:5">{<block_content pos:start="69:5" pos:end="144:0">

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">6</literal></expr>:</case>

    <case pos:start="71:5" pos:end="71:11">case <expr pos:start="71:10" pos:end="71:10"><literal type="number" pos:start="71:10" pos:end="71:10">5</literal></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="75:42"><expr pos:start="73:9" pos:end="75:41"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">x</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:19">me_flags</name></name> <operator pos:start="73:21" pos:end="73:22">|=</operator> <name pos:start="73:24" pos:end="73:42">XVID_ME_EXTSEARCH16</name> <operator pos:start="73:44" pos:end="73:44">|</operator>

                       <name pos:start="75:24" pos:end="75:41">XVID_ME_EXTSEARCH8</name></expr>;</expr_stmt>

    <case pos:start="77:5" pos:end="77:11">case <expr pos:start="77:10" pos:end="77:10"><literal type="number" pos:start="77:10" pos:end="77:10">4</literal></expr>:</case>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">3</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="87:43"><expr pos:start="81:9" pos:end="87:42"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:9">x</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:19">me_flags</name></name> <operator pos:start="81:21" pos:end="81:22">|=</operator> <name pos:start="81:24" pos:end="81:47">XVID_ME_ADVANCEDDIAMOND8</name> <operator pos:start="81:49" pos:end="81:49">|</operator>

                       <name pos:start="83:24" pos:end="83:45">XVID_ME_HALFPELREFINE8</name>   <operator pos:start="83:49" pos:end="83:49">|</operator>

                       <name pos:start="85:24" pos:end="85:42">XVID_ME_CHROMA_PVOP</name>      <operator pos:start="85:49" pos:end="85:49">|</operator>

                       <name pos:start="87:24" pos:end="87:42">XVID_ME_CHROMA_BVOP</name></expr>;</expr_stmt>

    <case pos:start="89:5" pos:end="89:11">case <expr pos:start="89:10" pos:end="89:10"><literal type="number" pos:start="89:10" pos:end="89:10">2</literal></expr>:</case>

    <case pos:start="91:5" pos:end="91:11">case <expr pos:start="91:10" pos:end="91:10"><literal type="number" pos:start="91:10" pos:end="91:10">1</literal></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="98:0"><expr pos:start="93:9" pos:end="95:46"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:9">x</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:19">me_flags</name></name> <operator pos:start="93:21" pos:end="93:22">|=</operator> <name pos:start="93:24" pos:end="93:48">XVID_ME_ADVANCEDDIAMOND16</name> <operator pos:start="93:50" pos:end="93:50">|</operator>

                       <name pos:start="95:24" pos:end="95:46">XVID_ME_HALFPELREFINE16</name></expr>;</expr_stmt>

<cpp:if pos:start="97:1" pos:end="97:21">#<cpp:directive pos:start="97:2" pos:end="97:3">if</cpp:directive> <expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:21">FF_API_MOTION_EST</name></expr></cpp:if>

<macro pos:start="99:1" pos:end="99:31"><name pos:start="99:1" pos:end="99:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <default pos:start="103:5" pos:end="103:12">default:</default>

        <switch pos:start="105:9" pos:end="139:9">switch <condition pos:start="105:16" pos:end="105:33">(<expr pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:21">avctx</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:32">me_method</name></name></expr>)</condition> <block pos:start="105:35" pos:end="139:9">{<block_content pos:start="107:9" pos:end="137:18">

        <case pos:start="107:9" pos:end="107:21">case <expr pos:start="107:14" pos:end="107:20"><name pos:start="107:14" pos:end="107:20">ME_FULL</name></expr>:</case>   <comment type="block" pos:start="107:25" pos:end="107:39">/* Quality 6 */</comment>

             <expr_stmt pos:start="109:14" pos:end="111:47"><expr pos:start="109:14" pos:end="111:46"><name pos:start="109:14" pos:end="109:24"><name pos:start="109:14" pos:end="109:14">x</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:24">me_flags</name></name> <operator pos:start="109:26" pos:end="109:27">|=</operator> <name pos:start="109:29" pos:end="109:47">XVID_ME_EXTSEARCH16</name> <operator pos:start="109:49" pos:end="109:49">|</operator>

                            <name pos:start="111:29" pos:end="111:46">XVID_ME_EXTSEARCH8</name></expr>;</expr_stmt>

        <case pos:start="113:9" pos:end="113:21">case <expr pos:start="113:14" pos:end="113:20"><name pos:start="113:14" pos:end="113:20">ME_EPZS</name></expr>:</case>   <comment type="block" pos:start="113:25" pos:end="113:39">/* Quality 4 */</comment>

             <expr_stmt pos:start="115:14" pos:end="121:48"><expr pos:start="115:14" pos:end="121:47"><name pos:start="115:14" pos:end="115:24"><name pos:start="115:14" pos:end="115:14">x</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:24">me_flags</name></name> <operator pos:start="115:26" pos:end="115:27">|=</operator> <name pos:start="115:29" pos:end="115:52">XVID_ME_ADVANCEDDIAMOND8</name> <operator pos:start="115:54" pos:end="115:54">|</operator>

                            <name pos:start="117:29" pos:end="117:50">XVID_ME_HALFPELREFINE8</name>   <operator pos:start="117:54" pos:end="117:54">|</operator>

                            <name pos:start="119:29" pos:end="119:47">XVID_ME_CHROMA_PVOP</name>      <operator pos:start="119:54" pos:end="119:54">|</operator>

                            <name pos:start="121:29" pos:end="121:47">XVID_ME_CHROMA_BVOP</name></expr>;</expr_stmt>

        <case pos:start="123:9" pos:end="123:20">case <expr pos:start="123:14" pos:end="123:19"><name pos:start="123:14" pos:end="123:19">ME_LOG</name></expr>:</case>    <comment type="block" pos:start="123:25" pos:end="123:39">/* Quality 2 */</comment>

        <case pos:start="125:9" pos:end="125:22">case <expr pos:start="125:14" pos:end="125:21"><name pos:start="125:14" pos:end="125:21">ME_PHODS</name></expr>:</case>

        <case pos:start="127:9" pos:end="127:19">case <expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:18">ME_X1</name></expr>:</case>

             <expr_stmt pos:start="129:14" pos:end="131:52"><expr pos:start="129:14" pos:end="131:51"><name pos:start="129:14" pos:end="129:24"><name pos:start="129:14" pos:end="129:14">x</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:24">me_flags</name></name> <operator pos:start="129:26" pos:end="129:27">|=</operator> <name pos:start="129:29" pos:end="129:53">XVID_ME_ADVANCEDDIAMOND16</name> <operator pos:start="129:55" pos:end="129:55">|</operator>

                            <name pos:start="131:29" pos:end="131:51">XVID_ME_HALFPELREFINE16</name></expr>;</expr_stmt>

        <case pos:start="133:9" pos:end="133:21">case <expr pos:start="133:14" pos:end="133:20"><name pos:start="133:14" pos:end="133:20">ME_ZERO</name></expr>:</case>   <comment type="block" pos:start="133:25" pos:end="133:39">/* Quality 0 */</comment>

        <default pos:start="135:9" pos:end="135:16">default:</default>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        </block_content>}</block></switch>

<expr_stmt pos:start="141:1" pos:end="144:0"><expr pos:start="141:1" pos:end="144:0"><name pos:start="141:1" pos:end="144:0">FF_ENABLE_DEPRECATION_WARNINGS</name></expr></expr_stmt>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></switch>



    <comment type="block" pos:start="149:5" pos:end="149:44">/* Decide how we should decide blocks */</comment>

    <switch pos:start="151:5" pos:end="186:0">switch <condition pos:start="151:12" pos:end="151:31">(<expr pos:start="151:13" pos:end="151:30"><name pos:start="151:13" pos:end="151:30"><name pos:start="151:13" pos:end="151:17">avctx</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:30">mb_decision</name></name></expr>)</condition> <block pos:start="151:33" pos:end="186:0">{<block_content pos:start="153:5" pos:end="177:14">

    <case pos:start="153:5" pos:end="153:11">case <expr pos:start="153:10" pos:end="153:10"><literal type="number" pos:start="153:10" pos:end="153:10">2</literal></expr>:</case>

        <expr_stmt pos:start="155:9" pos:end="155:50"><expr pos:start="155:9" pos:end="155:49"><name pos:start="155:9" pos:end="155:20"><name pos:start="155:9" pos:end="155:9">x</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:20">vop_flags</name></name> <operator pos:start="155:22" pos:end="155:23">|=</operator>  <name pos:start="155:26" pos:end="155:49">XVID_VOP_MODEDECISION_RD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="163:52"><expr pos:start="157:9" pos:end="163:51"><name pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:9">x</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:19">me_flags</name></name>  <operator pos:start="157:22" pos:end="157:23">|=</operator>  <name pos:start="157:26" pos:end="157:50">XVID_ME_HALFPELREFINE8_RD</name>    <operator pos:start="157:55" pos:end="157:55">|</operator>

                         <name pos:start="159:26" pos:end="159:53">XVID_ME_QUARTERPELREFINE8_RD</name> <operator pos:start="159:55" pos:end="159:55">|</operator>

                         <name pos:start="161:26" pos:end="161:45">XVID_ME_EXTSEARCH_RD</name>         <operator pos:start="161:55" pos:end="161:55">|</operator>

                         <name pos:start="163:26" pos:end="163:51">XVID_ME_CHECKPREDICTION_RD</name></expr>;</expr_stmt>

    <case pos:start="165:5" pos:end="165:11">case <expr pos:start="165:10" pos:end="165:10"><literal type="number" pos:start="165:10" pos:end="165:10">1</literal></expr>:</case>

        <if_stmt pos:start="167:9" pos:end="169:58"><if pos:start="167:9" pos:end="169:58">if <condition pos:start="167:12" pos:end="167:55">(<expr pos:start="167:13" pos:end="167:54"><operator pos:start="167:13" pos:end="167:13">!</operator><operator pos:start="167:14" pos:end="167:14">(</operator><name pos:start="167:15" pos:end="167:26"><name pos:start="167:15" pos:end="167:15">x</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:26">vop_flags</name></name> <operator pos:start="167:28" pos:end="167:28">&amp;</operator> <name pos:start="167:30" pos:end="167:53">XVID_VOP_MODEDECISION_RD</name><operator pos:start="167:54" pos:end="167:54">)</operator></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:58"><block_content pos:start="169:13" pos:end="169:58">

            <expr_stmt pos:start="169:13" pos:end="169:58"><expr pos:start="169:13" pos:end="169:57"><name pos:start="169:13" pos:end="169:24"><name pos:start="169:13" pos:end="169:13">x</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:24">vop_flags</name></name> <operator pos:start="169:26" pos:end="169:27">|=</operator> <name pos:start="169:29" pos:end="169:57">XVID_VOP_FAST_MODEDECISION_RD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="173:53"><expr pos:start="171:9" pos:end="173:52"><name pos:start="171:9" pos:end="171:19"><name pos:start="171:9" pos:end="171:9">x</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:19">me_flags</name></name> <operator pos:start="171:21" pos:end="171:22">|=</operator> <name pos:start="171:24" pos:end="171:49">XVID_ME_HALFPELREFINE16_RD</name> <operator pos:start="171:51" pos:end="171:51">|</operator>

                       <name pos:start="173:24" pos:end="173:52">XVID_ME_QUARTERPELREFINE16_RD</name></expr>;</expr_stmt>

    <default pos:start="175:5" pos:end="175:12">default:</default>

        <break pos:start="177:9" pos:end="177:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="183:5" pos:end="183:53">/* Bring in VOL flags from ffmpeg command-line */</comment>

<cpp:if pos:start="185:1" pos:end="185:14">#<cpp:directive pos:start="185:2" pos:end="185:3">if</cpp:directive> <expr pos:start="185:5" pos:end="185:14"><name pos:start="185:5" pos:end="185:14">FF_API_GMC</name></expr></cpp:if>

    <if_stmt pos:start="187:5" pos:end="192:0"><if pos:start="187:5" pos:end="192:0">if <condition pos:start="187:8" pos:end="187:38">(<expr pos:start="187:9" pos:end="187:37"><name pos:start="187:9" pos:end="187:20"><name pos:start="187:9" pos:end="187:13">avctx</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:20">flags</name></name> <operator pos:start="187:22" pos:end="187:22">&amp;</operator> <name pos:start="187:24" pos:end="187:37">CODEC_FLAG_GMC</name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="192:0"><block_content pos:start="189:9" pos:end="192:0">

        <expr_stmt pos:start="189:9" pos:end="192:0"><expr pos:start="189:9" pos:end="189:18"><name pos:start="189:9" pos:end="189:14"><name pos:start="189:9" pos:end="189:9">x</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:14">gmc</name></name> <operator pos:start="189:16" pos:end="189:16">=</operator> <literal type="number" pos:start="189:18" pos:end="189:18">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="191:1" pos:end="191:6">#<cpp:directive pos:start="191:2" pos:end="191:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="195:5" pos:end="195:21"><expr pos:start="195:5" pos:end="195:20"><name pos:start="195:5" pos:end="195:16"><name pos:start="195:5" pos:end="195:5">x</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:16">vol_flags</name></name> <operator pos:start="195:18" pos:end="195:18">=</operator> <literal type="number" pos:start="195:20" pos:end="195:20">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if <condition pos:start="197:8" pos:end="197:15">(<expr pos:start="197:9" pos:end="197:14"><name pos:start="197:9" pos:end="197:14"><name pos:start="197:9" pos:end="197:9">x</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:14">gmc</name></name></expr>)</condition> <block pos:start="197:17" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:43">

        <expr_stmt pos:start="199:9" pos:end="199:37"><expr pos:start="199:9" pos:end="199:36"><name pos:start="199:9" pos:end="199:20"><name pos:start="199:9" pos:end="199:9">x</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:20">vol_flags</name></name> <operator pos:start="199:22" pos:end="199:23">|=</operator> <name pos:start="199:25" pos:end="199:36">XVID_VOL_GMC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:43"><expr pos:start="201:9" pos:end="201:42"><name pos:start="201:9" pos:end="201:19"><name pos:start="201:9" pos:end="201:9">x</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:19">me_flags</name></name>  <operator pos:start="201:22" pos:end="201:23">|=</operator> <name pos:start="201:25" pos:end="201:42">XVID_ME_GME_REFINE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="205:5" pos:end="215:5"><if pos:start="205:5" pos:end="215:5">if <condition pos:start="205:8" pos:end="205:40">(<expr pos:start="205:9" pos:end="205:39"><name pos:start="205:9" pos:end="205:18">xvid_flags</name> <operator pos:start="205:20" pos:end="205:20">&amp;</operator> <name pos:start="205:22" pos:end="205:39">AV_CODEC_FLAG_QPEL</name></expr>)</condition> <block pos:start="205:42" pos:end="215:5">{<block_content pos:start="207:9" pos:end="213:53">

        <expr_stmt pos:start="207:9" pos:end="207:44"><expr pos:start="207:9" pos:end="207:43"><name pos:start="207:9" pos:end="207:20"><name pos:start="207:9" pos:end="207:9">x</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:20">vol_flags</name></name> <operator pos:start="207:22" pos:end="207:23">|=</operator> <name pos:start="207:25" pos:end="207:43">XVID_VOL_QUARTERPEL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:51"><expr pos:start="209:9" pos:end="209:50"><name pos:start="209:9" pos:end="209:19"><name pos:start="209:9" pos:end="209:9">x</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:19">me_flags</name></name>  <operator pos:start="209:22" pos:end="209:23">|=</operator> <name pos:start="209:25" pos:end="209:50">XVID_ME_QUARTERPELREFINE16</name></expr>;</expr_stmt>

        <if_stmt pos:start="211:9" pos:end="213:53"><if pos:start="211:9" pos:end="213:53">if <condition pos:start="211:12" pos:end="211:44">(<expr pos:start="211:13" pos:end="211:43"><name pos:start="211:13" pos:end="211:24"><name pos:start="211:13" pos:end="211:13">x</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:24">vop_flags</name></name> <operator pos:start="211:26" pos:end="211:26">&amp;</operator> <name pos:start="211:28" pos:end="211:43">XVID_VOP_INTER4V</name></expr>)</condition><block type="pseudo" pos:start="213:13" pos:end="213:53"><block_content pos:start="213:13" pos:end="213:53">

            <expr_stmt pos:start="213:13" pos:end="213:53"><expr pos:start="213:13" pos:end="213:52"><name pos:start="213:13" pos:end="213:23"><name pos:start="213:13" pos:end="213:13">x</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:23">me_flags</name></name> <operator pos:start="213:25" pos:end="213:26">|=</operator> <name pos:start="213:28" pos:end="213:52">XVID_ME_QUARTERPELREFINE8</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="219:5" pos:end="219:43"><expr pos:start="219:5" pos:end="219:42"><name pos:start="219:5" pos:end="219:25"><name pos:start="219:5" pos:end="219:17">xvid_gbl_init</name><operator pos:start="219:18" pos:end="219:18">.</operator><name pos:start="219:19" pos:end="219:25">version</name></name>   <operator pos:start="219:29" pos:end="219:29">=</operator> <name pos:start="219:31" pos:end="219:42">XVID_VERSION</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:32"><expr pos:start="221:5" pos:end="221:31"><name pos:start="221:5" pos:end="221:23"><name pos:start="221:5" pos:end="221:17">xvid_gbl_init</name><operator pos:start="221:18" pos:end="221:18">.</operator><name pos:start="221:19" pos:end="221:23">debug</name></name>     <operator pos:start="221:29" pos:end="221:29">=</operator> <literal type="number" pos:start="221:31" pos:end="221:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="223:5" pos:end="223:32"><expr pos:start="223:5" pos:end="223:31"><name pos:start="223:5" pos:end="223:27"><name pos:start="223:5" pos:end="223:17">xvid_gbl_init</name><operator pos:start="223:18" pos:end="223:18">.</operator><name pos:start="223:19" pos:end="223:27">cpu_flags</name></name> <operator pos:start="223:29" pos:end="223:29">=</operator> <literal type="number" pos:start="223:31" pos:end="223:31">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="227:5" pos:end="227:20">/* Initialize */</comment>

    <expr_stmt pos:start="229:5" pos:end="229:59"><expr pos:start="229:5" pos:end="229:58"><call pos:start="229:5" pos:end="229:58"><name pos:start="229:5" pos:end="229:15">xvid_global</name><argument_list pos:start="229:16" pos:end="229:58">(<argument pos:start="229:17" pos:end="229:20"><expr pos:start="229:17" pos:end="229:20"><name pos:start="229:17" pos:end="229:20">NULL</name></expr></argument>, <argument pos:start="229:23" pos:end="229:35"><expr pos:start="229:23" pos:end="229:35"><name pos:start="229:23" pos:end="229:35">XVID_GBL_INIT</name></expr></argument>, <argument pos:start="229:38" pos:end="229:51"><expr pos:start="229:38" pos:end="229:51"><operator pos:start="229:38" pos:end="229:38">&amp;</operator><name pos:start="229:39" pos:end="229:51">xvid_gbl_init</name></expr></argument>, <argument pos:start="229:54" pos:end="229:57"><expr pos:start="229:54" pos:end="229:57"><name pos:start="229:54" pos:end="229:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="233:5" pos:end="233:38">/* Create the encoder reference */</comment>

    <expr_stmt pos:start="235:5" pos:end="235:43"><expr pos:start="235:5" pos:end="235:42"><name pos:start="235:5" pos:end="235:27"><name pos:start="235:5" pos:end="235:19">xvid_enc_create</name><operator pos:start="235:20" pos:end="235:20">.</operator><name pos:start="235:21" pos:end="235:27">version</name></name> <operator pos:start="235:29" pos:end="235:29">=</operator> <name pos:start="235:31" pos:end="235:42">XVID_VERSION</name></expr>;</expr_stmt>



    <comment type="block" pos:start="239:5" pos:end="239:38">/* Store the desired frame size */</comment>

    <expr_stmt pos:start="241:5" pos:end="243:42"><expr pos:start="241:5" pos:end="243:41"><name pos:start="241:5" pos:end="241:25"><name pos:start="241:5" pos:end="241:19">xvid_enc_create</name><operator pos:start="241:20" pos:end="241:20">.</operator><name pos:start="241:21" pos:end="241:25">width</name></name>  <operator pos:start="241:28" pos:end="241:28">=</operator>

    <name pos:start="243:5" pos:end="243:12"><name pos:start="243:5" pos:end="243:5">x</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:12">xsize</name></name>               <operator pos:start="243:28" pos:end="243:28">=</operator> <name pos:start="243:30" pos:end="243:41"><name pos:start="243:30" pos:end="243:34">avctx</name><operator pos:start="243:35" pos:end="243:36">-&gt;</operator><name pos:start="243:37" pos:end="243:41">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="247:43"><expr pos:start="245:5" pos:end="247:42"><name pos:start="245:5" pos:end="245:26"><name pos:start="245:5" pos:end="245:19">xvid_enc_create</name><operator pos:start="245:20" pos:end="245:20">.</operator><name pos:start="245:21" pos:end="245:26">height</name></name> <operator pos:start="245:28" pos:end="245:28">=</operator>

    <name pos:start="247:5" pos:end="247:12"><name pos:start="247:5" pos:end="247:5">x</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:12">ysize</name></name>               <operator pos:start="247:28" pos:end="247:28">=</operator> <name pos:start="247:30" pos:end="247:42"><name pos:start="247:30" pos:end="247:34">avctx</name><operator pos:start="247:35" pos:end="247:36">-&gt;</operator><name pos:start="247:37" pos:end="247:42">height</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="251:5" pos:end="251:54">/* Xvid can determine the proper profile to use */</comment>

    <comment type="block" pos:start="253:5" pos:end="253:54">/* xvid_enc_create.profile = XVID_PROFILE_S_L3; */</comment>



    <comment type="block" pos:start="257:5" pos:end="257:28">/* We don't use zones */</comment>

    <expr_stmt pos:start="259:5" pos:end="259:37"><expr pos:start="259:5" pos:end="259:36"><name pos:start="259:5" pos:end="259:25"><name pos:start="259:5" pos:end="259:19">xvid_enc_create</name><operator pos:start="259:20" pos:end="259:20">.</operator><name pos:start="259:21" pos:end="259:25">zones</name></name>     <operator pos:start="259:31" pos:end="259:31">=</operator> <name pos:start="259:33" pos:end="259:36">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:34"><expr pos:start="261:5" pos:end="261:33"><name pos:start="261:5" pos:end="261:29"><name pos:start="261:5" pos:end="261:19">xvid_enc_create</name><operator pos:start="261:20" pos:end="261:20">.</operator><name pos:start="261:21" pos:end="261:29">num_zones</name></name> <operator pos:start="261:31" pos:end="261:31">=</operator> <literal type="number" pos:start="261:33" pos:end="261:33">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="265:5" pos:end="268:0"><expr pos:start="265:5" pos:end="265:53"><name pos:start="265:5" pos:end="265:31"><name pos:start="265:5" pos:end="265:19">xvid_enc_create</name><operator pos:start="265:20" pos:end="265:20">.</operator><name pos:start="265:21" pos:end="265:31">num_threads</name></name> <operator pos:start="265:33" pos:end="265:33">=</operator> <name pos:start="265:35" pos:end="265:53"><name pos:start="265:35" pos:end="265:39">avctx</name><operator pos:start="265:40" pos:end="265:41">-&gt;</operator><name pos:start="265:42" pos:end="265:53">thread_count</name></name></expr>;</expr_stmt>

<cpp:if pos:start="267:1" pos:end="267:60">#<cpp:directive pos:start="267:2" pos:end="267:3">if</cpp:directive> <expr pos:start="267:5" pos:end="267:60"><operator pos:start="267:5" pos:end="267:5">(</operator><name pos:start="267:6" pos:end="267:17">XVID_VERSION</name> <operator pos:start="267:19" pos:end="267:20">&lt;=</operator> <literal type="number" pos:start="267:22" pos:end="267:29">0x010303</literal><operator pos:start="267:30" pos:end="267:30">)</operator> <operator pos:start="267:32" pos:end="267:33">&amp;&amp;</operator> <operator pos:start="267:35" pos:end="267:35">(</operator><name pos:start="267:36" pos:end="267:47">XVID_VERSION</name> <operator pos:start="267:49" pos:end="267:50">&gt;=</operator> <literal type="number" pos:start="267:52" pos:end="267:59">0x010300</literal><operator pos:start="267:60" pos:end="267:60">)</operator></expr></cpp:if>

    <comment type="block" pos:start="269:5" pos:end="269:45">/* workaround for a bug in libxvidcore */</comment>

    <if_stmt pos:start="271:5" pos:end="290:0"><if pos:start="271:5" pos:end="290:0">if <condition pos:start="271:8" pos:end="271:28">(<expr pos:start="271:9" pos:end="271:27"><name pos:start="271:9" pos:end="271:21"><name pos:start="271:9" pos:end="271:13">avctx</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:21">height</name></name> <operator pos:start="271:23" pos:end="271:24">&lt;=</operator> <literal type="number" pos:start="271:26" pos:end="271:27">16</literal></expr>)</condition> <block pos:start="271:30" pos:end="290:0">{<block_content pos:start="273:9" pos:end="285:9">

        <if_stmt pos:start="273:9" pos:end="285:9"><if pos:start="273:9" pos:end="277:9">if <condition pos:start="273:12" pos:end="273:36">(<expr pos:start="273:13" pos:end="273:35"><name pos:start="273:13" pos:end="273:31"><name pos:start="273:13" pos:end="273:17">avctx</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:31">thread_count</name></name> <operator pos:start="273:33" pos:end="273:33">&lt;</operator> <literal type="number" pos:start="273:35" pos:end="273:35">2</literal></expr>)</condition> <block pos:start="273:38" pos:end="277:9">{<block_content pos:start="275:13" pos:end="275:44">

            <expr_stmt pos:start="275:13" pos:end="275:44"><expr pos:start="275:13" pos:end="275:43"><name pos:start="275:13" pos:end="275:39"><name pos:start="275:13" pos:end="275:27">xvid_enc_create</name><operator pos:start="275:28" pos:end="275:28">.</operator><name pos:start="275:29" pos:end="275:39">num_threads</name></name> <operator pos:start="275:41" pos:end="275:41">=</operator> <literal type="number" pos:start="275:43" pos:end="275:43">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="277:11" pos:end="285:9">else <block pos:start="277:16" pos:end="285:9">{<block_content pos:start="279:13" pos:end="283:35">

            <expr_stmt pos:start="279:13" pos:end="281:56"><expr pos:start="279:13" pos:end="281:55"><call pos:start="279:13" pos:end="281:55"><name pos:start="279:13" pos:end="279:18">av_log</name><argument_list pos:start="279:19" pos:end="281:55">(<argument pos:start="279:20" pos:end="279:24"><expr pos:start="279:20" pos:end="279:24"><name pos:start="279:20" pos:end="279:24">avctx</name></expr></argument>, <argument pos:start="279:27" pos:end="279:38"><expr pos:start="279:27" pos:end="279:38"><name pos:start="279:27" pos:end="279:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="281:20" pos:end="281:54"><expr pos:start="281:20" pos:end="281:54"><literal type="string" pos:start="281:20" pos:end="281:54">"Too small height for threads &gt; 1."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="283:13" pos:end="283:35">return <expr pos:start="283:20" pos:end="283:34"><call pos:start="283:20" pos:end="283:34"><name pos:start="283:20" pos:end="283:26">AVERROR</name><argument_list pos:start="283:27" pos:end="283:34">(<argument pos:start="283:28" pos:end="283:33"><expr pos:start="283:28" pos:end="283:33"><name pos:start="283:28" pos:end="283:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="289:1" pos:end="289:6">#<cpp:directive pos:start="289:2" pos:end="289:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="293:5" pos:end="293:42"><expr pos:start="293:5" pos:end="293:41"><name pos:start="293:5" pos:end="293:27"><name pos:start="293:5" pos:end="293:19">xvid_enc_create</name><operator pos:start="293:20" pos:end="293:20">.</operator><name pos:start="293:21" pos:end="293:27">plugins</name></name>     <operator pos:start="293:33" pos:end="293:33">=</operator> <name pos:start="293:35" pos:end="293:41">plugins</name></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:36"><expr pos:start="295:5" pos:end="295:35"><name pos:start="295:5" pos:end="295:31"><name pos:start="295:5" pos:end="295:19">xvid_enc_create</name><operator pos:start="295:20" pos:end="295:20">.</operator><name pos:start="295:21" pos:end="295:31">num_plugins</name></name> <operator pos:start="295:33" pos:end="295:33">=</operator> <literal type="number" pos:start="295:35" pos:end="295:35">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="299:5" pos:end="299:28">/* Initialize Buffers */</comment>

    <expr_stmt pos:start="301:5" pos:end="301:32"><expr pos:start="301:5" pos:end="301:31"><name pos:start="301:5" pos:end="301:20"><name pos:start="301:5" pos:end="301:5">x</name><operator pos:start="301:6" pos:end="301:7">-&gt;</operator><name pos:start="301:8" pos:end="301:20">twopassbuffer</name></name>     <operator pos:start="301:26" pos:end="301:26">=</operator> <name pos:start="301:28" pos:end="301:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:32"><expr pos:start="303:5" pos:end="303:31"><name pos:start="303:5" pos:end="303:24"><name pos:start="303:5" pos:end="303:5">x</name><operator pos:start="303:6" pos:end="303:7">-&gt;</operator><name pos:start="303:8" pos:end="303:24">old_twopassbuffer</name></name> <operator pos:start="303:26" pos:end="303:26">=</operator> <name pos:start="303:28" pos:end="303:31">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:32"><expr pos:start="305:5" pos:end="305:31"><name pos:start="305:5" pos:end="305:18"><name pos:start="305:5" pos:end="305:5">x</name><operator pos:start="305:6" pos:end="305:7">-&gt;</operator><name pos:start="305:8" pos:end="305:18">twopassfile</name></name>       <operator pos:start="305:26" pos:end="305:26">=</operator> <name pos:start="305:28" pos:end="305:31">NULL</name></expr>;</expr_stmt>



    <if_stmt pos:start="309:5" pos:end="419:5"><if pos:start="309:5" pos:end="341:5">if <condition pos:start="309:8" pos:end="309:41">(<expr pos:start="309:9" pos:end="309:40"><name pos:start="309:9" pos:end="309:18">xvid_flags</name> <operator pos:start="309:20" pos:end="309:20">&amp;</operator> <name pos:start="309:22" pos:end="309:40">AV_CODEC_FLAG_PASS1</name></expr>)</condition> <block pos:start="309:43" pos:end="341:5">{<block_content pos:start="311:9" pos:end="339:38">

        <expr_stmt pos:start="311:9" pos:end="311:44"><expr pos:start="311:9" pos:end="311:43"><name pos:start="311:9" pos:end="311:24"><name pos:start="311:9" pos:end="311:16">rc2pass1</name><operator pos:start="311:17" pos:end="311:17">.</operator><name pos:start="311:18" pos:end="311:24">version</name></name>     <operator pos:start="311:30" pos:end="311:30">=</operator> <name pos:start="311:32" pos:end="311:43">XVID_VERSION</name></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:33"><expr pos:start="313:9" pos:end="313:32"><name pos:start="313:9" pos:end="313:24"><name pos:start="313:9" pos:end="313:16">rc2pass1</name><operator pos:start="313:17" pos:end="313:17">.</operator><name pos:start="313:18" pos:end="313:24">context</name></name>     <operator pos:start="313:30" pos:end="313:30">=</operator> <name pos:start="313:32" pos:end="313:32">x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:54"><expr pos:start="315:9" pos:end="315:53"><name pos:start="315:9" pos:end="315:24"><name pos:start="315:9" pos:end="315:9">x</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:24">twopassbuffer</name></name>     <operator pos:start="315:30" pos:end="315:30">=</operator> <call pos:start="315:32" pos:end="315:53"><name pos:start="315:32" pos:end="315:40">av_malloc</name><argument_list pos:start="315:41" pos:end="315:53">(<argument pos:start="315:42" pos:end="315:52"><expr pos:start="315:42" pos:end="315:52"><name pos:start="315:42" pos:end="315:52">BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:54"><expr pos:start="317:9" pos:end="317:53"><name pos:start="317:9" pos:end="317:28"><name pos:start="317:9" pos:end="317:9">x</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:28">old_twopassbuffer</name></name> <operator pos:start="317:30" pos:end="317:30">=</operator> <call pos:start="317:32" pos:end="317:53"><name pos:start="317:32" pos:end="317:40">av_malloc</name><argument_list pos:start="317:41" pos:end="317:53">(<argument pos:start="317:42" pos:end="317:52"><expr pos:start="317:42" pos:end="317:52"><name pos:start="317:42" pos:end="317:52">BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="319:9" pos:end="327:9"><if pos:start="319:9" pos:end="327:9">if <condition pos:start="319:12" pos:end="319:55">(<expr pos:start="319:13" pos:end="319:54"><operator pos:start="319:13" pos:end="319:13">!</operator><name pos:start="319:14" pos:end="319:29"><name pos:start="319:14" pos:end="319:14">x</name><operator pos:start="319:15" pos:end="319:16">-&gt;</operator><name pos:start="319:17" pos:end="319:29">twopassbuffer</name></name> <operator pos:start="319:31" pos:end="319:32">||</operator> <operator pos:start="319:34" pos:end="319:34">!</operator><name pos:start="319:35" pos:end="319:54"><name pos:start="319:35" pos:end="319:35">x</name><operator pos:start="319:36" pos:end="319:37">-&gt;</operator><name pos:start="319:38" pos:end="319:54">old_twopassbuffer</name></name></expr>)</condition> <block pos:start="319:57" pos:end="327:9">{<block_content pos:start="321:13" pos:end="325:35">

            <expr_stmt pos:start="321:13" pos:end="323:65"><expr pos:start="321:13" pos:end="323:64"><call pos:start="321:13" pos:end="323:64"><name pos:start="321:13" pos:end="321:18">av_log</name><argument_list pos:start="321:19" pos:end="323:64">(<argument pos:start="321:20" pos:end="321:24"><expr pos:start="321:20" pos:end="321:24"><name pos:start="321:20" pos:end="321:24">avctx</name></expr></argument>, <argument pos:start="321:27" pos:end="321:38"><expr pos:start="321:27" pos:end="321:38"><name pos:start="321:27" pos:end="321:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="323:20" pos:end="323:63"><expr pos:start="323:20" pos:end="323:63"><literal type="string" pos:start="323:20" pos:end="323:63">"Xvid: Cannot allocate 2-pass log buffers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="325:13" pos:end="325:35">return <expr pos:start="325:20" pos:end="325:34"><call pos:start="325:20" pos:end="325:34"><name pos:start="325:20" pos:end="325:26">AVERROR</name><argument_list pos:start="325:27" pos:end="325:34">(<argument pos:start="325:28" pos:end="325:33"><expr pos:start="325:28" pos:end="325:33"><name pos:start="325:28" pos:end="325:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="329:9" pos:end="331:36"><expr pos:start="329:9" pos:end="331:35"><name pos:start="329:9" pos:end="329:27"><name pos:start="329:9" pos:end="329:9">x</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:24">twopassbuffer</name><index pos:start="329:25" pos:end="329:27">[<expr pos:start="329:26" pos:end="329:26"><literal type="number" pos:start="329:26" pos:end="329:26">0</literal></expr>]</index></name>     <operator pos:start="329:33" pos:end="329:33">=</operator>

        <name pos:start="331:9" pos:end="331:31"><name pos:start="331:9" pos:end="331:9">x</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:28">old_twopassbuffer</name><index pos:start="331:29" pos:end="331:31">[<expr pos:start="331:30" pos:end="331:30"><literal type="number" pos:start="331:30" pos:end="331:30">0</literal></expr>]</index></name> <operator pos:start="331:33" pos:end="331:33">=</operator> <literal type="number" pos:start="331:35" pos:end="331:35">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="335:9" pos:end="335:67"><expr pos:start="335:9" pos:end="335:66"><name pos:start="335:9" pos:end="335:44"><name pos:start="335:9" pos:end="335:15">plugins</name><index pos:start="335:16" pos:end="335:44">[<expr pos:start="335:17" pos:end="335:43"><name pos:start="335:17" pos:end="335:43"><name pos:start="335:17" pos:end="335:31">xvid_enc_create</name><operator pos:start="335:32" pos:end="335:32">.</operator><name pos:start="335:33" pos:end="335:43">num_plugins</name></name></expr>]</index></name><operator pos:start="335:45" pos:end="335:45">.</operator><name pos:start="335:46" pos:end="335:49">func</name>  <operator pos:start="335:52" pos:end="335:52">=</operator> <name pos:start="335:54" pos:end="335:66">xvid_ff_2pass</name></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:63"><expr pos:start="337:9" pos:end="337:62"><name pos:start="337:9" pos:end="337:44"><name pos:start="337:9" pos:end="337:15">plugins</name><index pos:start="337:16" pos:end="337:44">[<expr pos:start="337:17" pos:end="337:43"><name pos:start="337:17" pos:end="337:43"><name pos:start="337:17" pos:end="337:31">xvid_enc_create</name><operator pos:start="337:32" pos:end="337:32">.</operator><name pos:start="337:33" pos:end="337:43">num_plugins</name></name></expr>]</index></name><operator pos:start="337:45" pos:end="337:45">.</operator><name pos:start="337:46" pos:end="337:50">param</name> <operator pos:start="337:52" pos:end="337:52">=</operator> <operator pos:start="337:54" pos:end="337:54">&amp;</operator><name pos:start="337:55" pos:end="337:62">rc2pass1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:38"><expr pos:start="339:9" pos:end="339:37"><name pos:start="339:9" pos:end="339:35"><name pos:start="339:9" pos:end="339:23">xvid_enc_create</name><operator pos:start="339:24" pos:end="339:24">.</operator><name pos:start="339:25" pos:end="339:35">num_plugins</name></name><operator pos:start="339:36" pos:end="339:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="341:7" pos:end="403:5">else if <condition pos:start="341:15" pos:end="341:48">(<expr pos:start="341:16" pos:end="341:47"><name pos:start="341:16" pos:end="341:25">xvid_flags</name> <operator pos:start="341:27" pos:end="341:27">&amp;</operator> <name pos:start="341:29" pos:end="341:47">AV_CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="341:50" pos:end="403:5">{<block_content pos:start="343:9" pos:end="401:38">

        <expr_stmt pos:start="343:9" pos:end="343:40"><expr pos:start="343:9" pos:end="343:39"><name pos:start="343:9" pos:end="343:24"><name pos:start="343:9" pos:end="343:16">rc2pass2</name><operator pos:start="343:17" pos:end="343:17">.</operator><name pos:start="343:18" pos:end="343:24">version</name></name> <operator pos:start="343:26" pos:end="343:26">=</operator> <name pos:start="343:28" pos:end="343:39">XVID_VERSION</name></expr>;</expr_stmt>

        <expr_stmt pos:start="345:9" pos:end="345:43"><expr pos:start="345:9" pos:end="345:42"><name pos:start="345:9" pos:end="345:24"><name pos:start="345:9" pos:end="345:16">rc2pass2</name><operator pos:start="345:17" pos:end="345:17">.</operator><name pos:start="345:18" pos:end="345:24">bitrate</name></name> <operator pos:start="345:26" pos:end="345:26">=</operator> <name pos:start="345:28" pos:end="345:42"><name pos:start="345:28" pos:end="345:32">avctx</name><operator pos:start="345:33" pos:end="345:34">-&gt;</operator><name pos:start="345:35" pos:end="345:42">bit_rate</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="349:9" pos:end="349:67"><expr pos:start="349:9" pos:end="349:66"><name pos:start="349:9" pos:end="349:10">fd</name> <operator pos:start="349:12" pos:end="349:12">=</operator> <call pos:start="349:14" pos:end="349:66"><name pos:start="349:14" pos:end="349:28">avpriv_tempfile</name><argument_list pos:start="349:29" pos:end="349:66">(<argument pos:start="349:30" pos:end="349:38"><expr pos:start="349:30" pos:end="349:38"><literal type="string" pos:start="349:30" pos:end="349:38">"xvidff."</literal></expr></argument>, <argument pos:start="349:41" pos:end="349:55"><expr pos:start="349:41" pos:end="349:55"><operator pos:start="349:41" pos:end="349:41">&amp;</operator><name pos:start="349:42" pos:end="349:55"><name pos:start="349:42" pos:end="349:42">x</name><operator pos:start="349:43" pos:end="349:44">-&gt;</operator><name pos:start="349:45" pos:end="349:55">twopassfile</name></name></expr></argument>, <argument pos:start="349:58" pos:end="349:58"><expr pos:start="349:58" pos:end="349:58"><literal type="number" pos:start="349:58" pos:end="349:58">0</literal></expr></argument>, <argument pos:start="349:61" pos:end="349:65"><expr pos:start="349:61" pos:end="349:65"><name pos:start="349:61" pos:end="349:65">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="357:9"><if pos:start="351:9" pos:end="357:9">if <condition pos:start="351:12" pos:end="351:19">(<expr pos:start="351:13" pos:end="351:18"><name pos:start="351:13" pos:end="351:14">fd</name> <operator pos:start="351:16" pos:end="351:16">&lt;</operator> <literal type="number" pos:start="351:18" pos:end="351:18">0</literal></expr>)</condition> <block pos:start="351:21" pos:end="357:9">{<block_content pos:start="353:13" pos:end="355:22">

            <expr_stmt pos:start="353:13" pos:end="353:76"><expr pos:start="353:13" pos:end="353:75"><call pos:start="353:13" pos:end="353:75"><name pos:start="353:13" pos:end="353:18">av_log</name><argument_list pos:start="353:19" pos:end="353:75">(<argument pos:start="353:20" pos:end="353:24"><expr pos:start="353:20" pos:end="353:24"><name pos:start="353:20" pos:end="353:24">avctx</name></expr></argument>, <argument pos:start="353:27" pos:end="353:38"><expr pos:start="353:27" pos:end="353:38"><name pos:start="353:27" pos:end="353:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="353:41" pos:end="353:74"><expr pos:start="353:41" pos:end="353:74"><literal type="string" pos:start="353:41" pos:end="353:74">"Xvid: Cannot write 2-pass pipe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="355:13" pos:end="355:22">return <expr pos:start="355:20" pos:end="355:21"><name pos:start="355:20" pos:end="355:21">fd</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:26"><expr pos:start="359:9" pos:end="359:25"><name pos:start="359:9" pos:end="359:20"><name pos:start="359:9" pos:end="359:9">x</name><operator pos:start="359:10" pos:end="359:11">-&gt;</operator><name pos:start="359:12" pos:end="359:20">twopassfd</name></name> <operator pos:start="359:22" pos:end="359:22">=</operator> <name pos:start="359:24" pos:end="359:25">fd</name></expr>;</expr_stmt>



        <if_stmt pos:start="363:9" pos:end="371:9"><if pos:start="363:9" pos:end="371:9">if <condition pos:start="363:12" pos:end="363:29">(<expr pos:start="363:13" pos:end="363:28"><operator pos:start="363:13" pos:end="363:13">!</operator><name pos:start="363:14" pos:end="363:28"><name pos:start="363:14" pos:end="363:18">avctx</name><operator pos:start="363:19" pos:end="363:20">-&gt;</operator><name pos:start="363:21" pos:end="363:28">stats_in</name></name></expr>)</condition> <block pos:start="363:31" pos:end="371:9">{<block_content pos:start="365:13" pos:end="369:35">

            <expr_stmt pos:start="365:13" pos:end="367:75"><expr pos:start="365:13" pos:end="367:74"><call pos:start="365:13" pos:end="367:74"><name pos:start="365:13" pos:end="365:18">av_log</name><argument_list pos:start="365:19" pos:end="367:74">(<argument pos:start="365:20" pos:end="365:24"><expr pos:start="365:20" pos:end="365:24"><name pos:start="365:20" pos:end="365:24">avctx</name></expr></argument>, <argument pos:start="365:27" pos:end="365:38"><expr pos:start="365:27" pos:end="365:38"><name pos:start="365:27" pos:end="365:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="367:20" pos:end="367:73"><expr pos:start="367:20" pos:end="367:73"><literal type="string" pos:start="367:20" pos:end="367:73">"Xvid: No 2-pass information loaded for second pass\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="369:13" pos:end="369:35">return <expr pos:start="369:20" pos:end="369:34"><call pos:start="369:20" pos:end="369:34"><name pos:start="369:20" pos:end="369:26">AVERROR</name><argument_list pos:start="369:27" pos:end="369:34">(<argument pos:start="369:28" pos:end="369:33"><expr pos:start="369:28" pos:end="369:33"><name pos:start="369:28" pos:end="369:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="375:9" pos:end="375:66"><expr pos:start="375:9" pos:end="375:65"><name pos:start="375:9" pos:end="375:11">ret</name> <operator pos:start="375:13" pos:end="375:13">=</operator> <call pos:start="375:15" pos:end="375:65"><name pos:start="375:15" pos:end="375:19">write</name><argument_list pos:start="375:20" pos:end="375:65">(<argument pos:start="375:21" pos:end="375:22"><expr pos:start="375:21" pos:end="375:22"><name pos:start="375:21" pos:end="375:22">fd</name></expr></argument>, <argument pos:start="375:25" pos:end="375:39"><expr pos:start="375:25" pos:end="375:39"><name pos:start="375:25" pos:end="375:39"><name pos:start="375:25" pos:end="375:29">avctx</name><operator pos:start="375:30" pos:end="375:31">-&gt;</operator><name pos:start="375:32" pos:end="375:39">stats_in</name></name></expr></argument>, <argument pos:start="375:42" pos:end="375:64"><expr pos:start="375:42" pos:end="375:64"><call pos:start="375:42" pos:end="375:64"><name pos:start="375:42" pos:end="375:47">strlen</name><argument_list pos:start="375:48" pos:end="375:64">(<argument pos:start="375:49" pos:end="375:63"><expr pos:start="375:49" pos:end="375:63"><name pos:start="375:49" pos:end="375:63"><name pos:start="375:49" pos:end="375:53">avctx</name><operator pos:start="375:54" pos:end="375:55">-&gt;</operator><name pos:start="375:56" pos:end="375:63">stats_in</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="377:9" pos:end="387:9"><if pos:start="377:9" pos:end="379:33">if <condition pos:start="377:12" pos:end="377:22">(<expr pos:start="377:13" pos:end="377:21"><name pos:start="377:13" pos:end="377:15">ret</name> <operator pos:start="377:17" pos:end="377:18">==</operator> <operator pos:start="377:20" pos:end="377:20">-</operator><literal type="number" pos:start="377:21" pos:end="377:21">1</literal></expr>)</condition><block type="pseudo" pos:start="379:13" pos:end="379:33"><block_content pos:start="379:13" pos:end="379:33">

            <expr_stmt pos:start="379:13" pos:end="379:33"><expr pos:start="379:13" pos:end="379:32"><name pos:start="379:13" pos:end="379:15">ret</name> <operator pos:start="379:17" pos:end="379:17">=</operator> <call pos:start="379:19" pos:end="379:32"><name pos:start="379:19" pos:end="379:25">AVERROR</name><argument_list pos:start="379:26" pos:end="379:32">(<argument pos:start="379:27" pos:end="379:31"><expr pos:start="379:27" pos:end="379:31"><name pos:start="379:27" pos:end="379:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="381:9" pos:end="387:9">else if <condition pos:start="381:17" pos:end="381:47">(<expr pos:start="381:18" pos:end="381:46"><call pos:start="381:18" pos:end="381:40"><name pos:start="381:18" pos:end="381:23">strlen</name><argument_list pos:start="381:24" pos:end="381:40">(<argument pos:start="381:25" pos:end="381:39"><expr pos:start="381:25" pos:end="381:39"><name pos:start="381:25" pos:end="381:39"><name pos:start="381:25" pos:end="381:29">avctx</name><operator pos:start="381:30" pos:end="381:31">-&gt;</operator><name pos:start="381:32" pos:end="381:39">stats_in</name></name></expr></argument>)</argument_list></call> <operator pos:start="381:42" pos:end="381:42">&gt;</operator> <name pos:start="381:44" pos:end="381:46">ret</name></expr>)</condition> <block pos:start="381:49" pos:end="387:9">{<block_content pos:start="383:13" pos:end="385:31">

            <expr_stmt pos:start="383:13" pos:end="383:79"><expr pos:start="383:13" pos:end="383:78"><call pos:start="383:13" pos:end="383:78"><name pos:start="383:13" pos:end="383:18">av_log</name><argument_list pos:start="383:19" pos:end="383:78">(<argument pos:start="383:20" pos:end="383:24"><expr pos:start="383:20" pos:end="383:24"><name pos:start="383:20" pos:end="383:24">avctx</name></expr></argument>, <argument pos:start="383:27" pos:end="383:38"><expr pos:start="383:27" pos:end="383:38"><name pos:start="383:27" pos:end="383:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="383:41" pos:end="383:77"><expr pos:start="383:41" pos:end="383:77"><literal type="string" pos:start="383:41" pos:end="383:77">"Xvid: Cannot write to 2-pass pipe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:31"><expr pos:start="385:13" pos:end="385:30"><name pos:start="385:13" pos:end="385:15">ret</name> <operator pos:start="385:17" pos:end="385:17">=</operator> <call pos:start="385:19" pos:end="385:30"><name pos:start="385:19" pos:end="385:25">AVERROR</name><argument_list pos:start="385:26" pos:end="385:30">(<argument pos:start="385:27" pos:end="385:29"><expr pos:start="385:27" pos:end="385:29"><name pos:start="385:27" pos:end="385:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="389:9" pos:end="391:23"><if pos:start="389:9" pos:end="391:23">if <condition pos:start="389:12" pos:end="389:20">(<expr pos:start="389:13" pos:end="389:19"><name pos:start="389:13" pos:end="389:15">ret</name> <operator pos:start="389:17" pos:end="389:17">&lt;</operator> <literal type="number" pos:start="389:19" pos:end="389:19">0</literal></expr>)</condition><block type="pseudo" pos:start="391:13" pos:end="391:23"><block_content pos:start="391:13" pos:end="391:23">

            <return pos:start="391:13" pos:end="391:23">return <expr pos:start="391:20" pos:end="391:22"><name pos:start="391:20" pos:end="391:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="395:9" pos:end="395:68"><expr pos:start="395:9" pos:end="395:67"><name pos:start="395:9" pos:end="395:25"><name pos:start="395:9" pos:end="395:16">rc2pass2</name><operator pos:start="395:17" pos:end="395:17">.</operator><name pos:start="395:18" pos:end="395:25">filename</name></name>                          <operator pos:start="395:52" pos:end="395:52">=</operator> <name pos:start="395:54" pos:end="395:67"><name pos:start="395:54" pos:end="395:54">x</name><operator pos:start="395:55" pos:end="395:56">-&gt;</operator><name pos:start="395:57" pos:end="395:67">twopassfile</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:72"><expr pos:start="397:9" pos:end="397:71"><name pos:start="397:9" pos:end="397:44"><name pos:start="397:9" pos:end="397:15">plugins</name><index pos:start="397:16" pos:end="397:44">[<expr pos:start="397:17" pos:end="397:43"><name pos:start="397:17" pos:end="397:43"><name pos:start="397:17" pos:end="397:31">xvid_enc_create</name><operator pos:start="397:32" pos:end="397:32">.</operator><name pos:start="397:33" pos:end="397:43">num_plugins</name></name></expr>]</index></name><operator pos:start="397:45" pos:end="397:45">.</operator><name pos:start="397:46" pos:end="397:49">func</name>  <operator pos:start="397:52" pos:end="397:52">=</operator> <name pos:start="397:54" pos:end="397:71">xvid_plugin_2pass2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:63"><expr pos:start="399:9" pos:end="399:62"><name pos:start="399:9" pos:end="399:44"><name pos:start="399:9" pos:end="399:15">plugins</name><index pos:start="399:16" pos:end="399:44">[<expr pos:start="399:17" pos:end="399:43"><name pos:start="399:17" pos:end="399:43"><name pos:start="399:17" pos:end="399:31">xvid_enc_create</name><operator pos:start="399:32" pos:end="399:32">.</operator><name pos:start="399:33" pos:end="399:43">num_plugins</name></name></expr>]</index></name><operator pos:start="399:45" pos:end="399:45">.</operator><name pos:start="399:46" pos:end="399:50">param</name> <operator pos:start="399:52" pos:end="399:52">=</operator> <operator pos:start="399:54" pos:end="399:54">&amp;</operator><name pos:start="399:55" pos:end="399:62">rc2pass2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:38"><expr pos:start="401:9" pos:end="401:37"><name pos:start="401:9" pos:end="401:35"><name pos:start="401:9" pos:end="401:23">xvid_enc_create</name><operator pos:start="401:24" pos:end="401:24">.</operator><name pos:start="401:25" pos:end="401:35">num_plugins</name></name><operator pos:start="401:36" pos:end="401:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="403:7" pos:end="419:5">else if <condition pos:start="403:15" pos:end="403:52">(<expr pos:start="403:16" pos:end="403:51"><operator pos:start="403:16" pos:end="403:16">!</operator><operator pos:start="403:17" pos:end="403:17">(</operator><name pos:start="403:18" pos:end="403:27">xvid_flags</name> <operator pos:start="403:29" pos:end="403:29">&amp;</operator> <name pos:start="403:31" pos:end="403:50">AV_CODEC_FLAG_QSCALE</name><operator pos:start="403:51" pos:end="403:51">)</operator></expr>)</condition> <block pos:start="403:54" pos:end="419:5">{<block_content pos:start="407:9" pos:end="417:38">

        <comment type="block" pos:start="405:9" pos:end="405:42">/* Single Pass Bitrate Control! */</comment>

        <expr_stmt pos:start="407:9" pos:end="407:38"><expr pos:start="407:9" pos:end="407:37"><name pos:start="407:9" pos:end="407:22"><name pos:start="407:9" pos:end="407:14">single</name><operator pos:start="407:15" pos:end="407:15">.</operator><name pos:start="407:16" pos:end="407:22">version</name></name> <operator pos:start="407:24" pos:end="407:24">=</operator> <name pos:start="407:26" pos:end="407:37">XVID_VERSION</name></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:41"><expr pos:start="409:9" pos:end="409:40"><name pos:start="409:9" pos:end="409:22"><name pos:start="409:9" pos:end="409:14">single</name><operator pos:start="409:15" pos:end="409:15">.</operator><name pos:start="409:16" pos:end="409:22">bitrate</name></name> <operator pos:start="409:24" pos:end="409:24">=</operator> <name pos:start="409:26" pos:end="409:40"><name pos:start="409:26" pos:end="409:30">avctx</name><operator pos:start="409:31" pos:end="409:32">-&gt;</operator><name pos:start="409:33" pos:end="409:40">bit_rate</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="413:9" pos:end="413:72"><expr pos:start="413:9" pos:end="413:71"><name pos:start="413:9" pos:end="413:44"><name pos:start="413:9" pos:end="413:15">plugins</name><index pos:start="413:16" pos:end="413:44">[<expr pos:start="413:17" pos:end="413:43"><name pos:start="413:17" pos:end="413:43"><name pos:start="413:17" pos:end="413:31">xvid_enc_create</name><operator pos:start="413:32" pos:end="413:32">.</operator><name pos:start="413:33" pos:end="413:43">num_plugins</name></name></expr>]</index></name><operator pos:start="413:45" pos:end="413:45">.</operator><name pos:start="413:46" pos:end="413:49">func</name>  <operator pos:start="413:52" pos:end="413:52">=</operator> <name pos:start="413:54" pos:end="413:71">xvid_plugin_single</name></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:61"><expr pos:start="415:9" pos:end="415:60"><name pos:start="415:9" pos:end="415:44"><name pos:start="415:9" pos:end="415:15">plugins</name><index pos:start="415:16" pos:end="415:44">[<expr pos:start="415:17" pos:end="415:43"><name pos:start="415:17" pos:end="415:43"><name pos:start="415:17" pos:end="415:31">xvid_enc_create</name><operator pos:start="415:32" pos:end="415:32">.</operator><name pos:start="415:33" pos:end="415:43">num_plugins</name></name></expr>]</index></name><operator pos:start="415:45" pos:end="415:45">.</operator><name pos:start="415:46" pos:end="415:50">param</name> <operator pos:start="415:52" pos:end="415:52">=</operator> <operator pos:start="415:54" pos:end="415:54">&amp;</operator><name pos:start="415:55" pos:end="415:60">single</name></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:38"><expr pos:start="417:9" pos:end="417:37"><name pos:start="417:9" pos:end="417:35"><name pos:start="417:9" pos:end="417:23">xvid_enc_create</name><operator pos:start="417:24" pos:end="417:24">.</operator><name pos:start="417:25" pos:end="417:35">num_plugins</name></name><operator pos:start="417:36" pos:end="417:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="423:5" pos:end="425:23"><if pos:start="423:5" pos:end="425:23">if <condition pos:start="423:8" pos:end="423:35">(<expr pos:start="423:9" pos:end="423:34"><name pos:start="423:9" pos:end="423:27"><name pos:start="423:9" pos:end="423:13">avctx</name><operator pos:start="423:14" pos:end="423:15">-&gt;</operator><name pos:start="423:16" pos:end="423:27">lumi_masking</name></name> <operator pos:start="423:29" pos:end="423:30">!=</operator> <literal type="number" pos:start="423:32" pos:end="423:34">0.0</literal></expr>)</condition><block type="pseudo" pos:start="425:9" pos:end="425:23"><block_content pos:start="425:9" pos:end="425:23">

        <expr_stmt pos:start="425:9" pos:end="425:23"><expr pos:start="425:9" pos:end="425:22"><name pos:start="425:9" pos:end="425:18"><name pos:start="425:9" pos:end="425:9">x</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:18">lumi_aq</name></name> <operator pos:start="425:20" pos:end="425:20">=</operator> <literal type="number" pos:start="425:22" pos:end="425:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="429:5" pos:end="429:27">/* Luminance Masking */</comment>

    <if_stmt pos:start="431:5" pos:end="449:5"><if pos:start="431:5" pos:end="449:5">if <condition pos:start="431:8" pos:end="431:19">(<expr pos:start="431:9" pos:end="431:18"><name pos:start="431:9" pos:end="431:18"><name pos:start="431:9" pos:end="431:9">x</name><operator pos:start="431:10" pos:end="431:11">-&gt;</operator><name pos:start="431:12" pos:end="431:18">lumi_aq</name></name></expr>)</condition> <block pos:start="431:21" pos:end="449:5">{<block_content pos:start="433:9" pos:end="447:38">

        <expr_stmt pos:start="433:9" pos:end="433:54"><expr pos:start="433:9" pos:end="433:53"><name pos:start="433:9" pos:end="433:24"><name pos:start="433:9" pos:end="433:17">masking_l</name><operator pos:start="433:18" pos:end="433:18">.</operator><name pos:start="433:19" pos:end="433:24">method</name></name>                          <operator pos:start="433:51" pos:end="433:51">=</operator> <literal type="number" pos:start="433:53" pos:end="433:53">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="435:9" pos:end="435:76"><expr pos:start="435:9" pos:end="435:75"><name pos:start="435:9" pos:end="435:44"><name pos:start="435:9" pos:end="435:15">plugins</name><index pos:start="435:16" pos:end="435:44">[<expr pos:start="435:17" pos:end="435:43"><name pos:start="435:17" pos:end="435:43"><name pos:start="435:17" pos:end="435:31">xvid_enc_create</name><operator pos:start="435:32" pos:end="435:32">.</operator><name pos:start="435:33" pos:end="435:43">num_plugins</name></name></expr>]</index></name><operator pos:start="435:45" pos:end="435:45">.</operator><name pos:start="435:46" pos:end="435:49">func</name> <operator pos:start="435:51" pos:end="435:51">=</operator> <name pos:start="435:53" pos:end="435:75">xvid_plugin_lumimasking</name></expr>;</expr_stmt>



        <comment type="block" pos:start="439:9" pos:end="441:78">/* The old behavior is that when avctx-&gt;lumi_masking is specified,

         * plugins[...].param = NULL. Trying to keep the old behavior here. */</comment>

        <expr_stmt pos:start="443:9" pos:end="445:52"><expr pos:start="443:9" pos:end="445:51"><name pos:start="443:9" pos:end="443:44"><name pos:start="443:9" pos:end="443:15">plugins</name><index pos:start="443:16" pos:end="443:44">[<expr pos:start="443:17" pos:end="443:43"><name pos:start="443:17" pos:end="443:43"><name pos:start="443:17" pos:end="443:31">xvid_enc_create</name><operator pos:start="443:32" pos:end="443:32">.</operator><name pos:start="443:33" pos:end="443:43">num_plugins</name></name></expr>]</index></name><operator pos:start="443:45" pos:end="443:45">.</operator><name pos:start="443:46" pos:end="443:50">param</name> <operator pos:start="443:52" pos:end="443:52">=</operator>

            <ternary pos:start="445:13" pos:end="445:51"><condition pos:start="445:13" pos:end="445:33"><expr pos:start="445:13" pos:end="445:31"><name pos:start="445:13" pos:end="445:31"><name pos:start="445:13" pos:end="445:17">avctx</name><operator pos:start="445:18" pos:end="445:19">-&gt;</operator><name pos:start="445:20" pos:end="445:31">lumi_masking</name></name></expr> ?</condition><then pos:start="445:35" pos:end="445:38"> <expr pos:start="445:35" pos:end="445:38"><name pos:start="445:35" pos:end="445:38">NULL</name></expr> </then><else pos:start="445:40" pos:end="445:51">: <expr pos:start="445:42" pos:end="445:51"><operator pos:start="445:42" pos:end="445:42">&amp;</operator><name pos:start="445:43" pos:end="445:51">masking_l</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:38"><expr pos:start="447:9" pos:end="447:37"><name pos:start="447:9" pos:end="447:35"><name pos:start="447:9" pos:end="447:23">xvid_enc_create</name><operator pos:start="447:24" pos:end="447:24">.</operator><name pos:start="447:25" pos:end="447:35">num_plugins</name></name><operator pos:start="447:36" pos:end="447:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="453:5" pos:end="453:21">/* Variance AQ */</comment>

    <if_stmt pos:start="455:5" pos:end="465:5"><if pos:start="455:5" pos:end="465:5">if <condition pos:start="455:8" pos:end="455:23">(<expr pos:start="455:9" pos:end="455:22"><name pos:start="455:9" pos:end="455:22"><name pos:start="455:9" pos:end="455:9">x</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:22">variance_aq</name></name></expr>)</condition> <block pos:start="455:25" pos:end="465:5">{<block_content pos:start="457:9" pos:end="463:38">

        <expr_stmt pos:start="457:9" pos:end="457:55"><expr pos:start="457:9" pos:end="457:54"><name pos:start="457:9" pos:end="457:24"><name pos:start="457:9" pos:end="457:17">masking_v</name><operator pos:start="457:18" pos:end="457:18">.</operator><name pos:start="457:19" pos:end="457:24">method</name></name>                           <operator pos:start="457:52" pos:end="457:52">=</operator> <literal type="number" pos:start="457:54" pos:end="457:54">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:77"><expr pos:start="459:9" pos:end="459:76"><name pos:start="459:9" pos:end="459:44"><name pos:start="459:9" pos:end="459:15">plugins</name><index pos:start="459:16" pos:end="459:44">[<expr pos:start="459:17" pos:end="459:43"><name pos:start="459:17" pos:end="459:43"><name pos:start="459:17" pos:end="459:31">xvid_enc_create</name><operator pos:start="459:32" pos:end="459:32">.</operator><name pos:start="459:33" pos:end="459:43">num_plugins</name></name></expr>]</index></name><operator pos:start="459:45" pos:end="459:45">.</operator><name pos:start="459:46" pos:end="459:49">func</name>  <operator pos:start="459:52" pos:end="459:52">=</operator> <name pos:start="459:54" pos:end="459:76">xvid_plugin_lumimasking</name></expr>;</expr_stmt>

        <expr_stmt pos:start="461:9" pos:end="461:64"><expr pos:start="461:9" pos:end="461:63"><name pos:start="461:9" pos:end="461:44"><name pos:start="461:9" pos:end="461:15">plugins</name><index pos:start="461:16" pos:end="461:44">[<expr pos:start="461:17" pos:end="461:43"><name pos:start="461:17" pos:end="461:43"><name pos:start="461:17" pos:end="461:31">xvid_enc_create</name><operator pos:start="461:32" pos:end="461:32">.</operator><name pos:start="461:33" pos:end="461:43">num_plugins</name></name></expr>]</index></name><operator pos:start="461:45" pos:end="461:45">.</operator><name pos:start="461:46" pos:end="461:50">param</name> <operator pos:start="461:52" pos:end="461:52">=</operator> <operator pos:start="461:54" pos:end="461:54">&amp;</operator><name pos:start="461:55" pos:end="461:63">masking_v</name></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:38"><expr pos:start="463:9" pos:end="463:37"><name pos:start="463:9" pos:end="463:35"><name pos:start="463:9" pos:end="463:23">xvid_enc_create</name><operator pos:start="463:24" pos:end="463:24">.</operator><name pos:start="463:25" pos:end="463:35">num_plugins</name></name><operator pos:start="463:36" pos:end="463:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="469:5" pos:end="475:77"><if pos:start="469:5" pos:end="475:77">if <condition pos:start="469:8" pos:end="469:38">(<expr pos:start="469:9" pos:end="469:36"><name pos:start="469:9" pos:end="469:18"><name pos:start="469:9" pos:end="469:9">x</name><operator pos:start="469:10" pos:end="469:11">-&gt;</operator><name pos:start="469:12" pos:end="469:18">lumi_aq</name></name> <operator pos:start="469:20" pos:end="469:21">&amp;&amp;</operator> <name pos:start="469:23" pos:end="469:36"><name pos:start="469:23" pos:end="469:23">x</name><operator pos:start="469:24" pos:end="469:25">-&gt;</operator><name pos:start="469:26" pos:end="469:36">variance_aq</name></name></expr> )</condition><block type="pseudo" pos:start="471:9" pos:end="475:77"><block_content pos:start="471:9" pos:end="475:77">

        <expr_stmt pos:start="471:9" pos:end="475:77"><expr pos:start="471:9" pos:end="475:76"><call pos:start="471:9" pos:end="475:76"><name pos:start="471:9" pos:end="471:14">av_log</name><argument_list pos:start="471:15" pos:end="475:76">(<argument pos:start="471:16" pos:end="471:20"><expr pos:start="471:16" pos:end="471:20"><name pos:start="471:16" pos:end="471:20">avctx</name></expr></argument>, <argument pos:start="471:23" pos:end="471:33"><expr pos:start="471:23" pos:end="471:33"><name pos:start="471:23" pos:end="471:33">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="473:16" pos:end="475:75"><expr pos:start="473:16" pos:end="475:75"><literal type="string" pos:start="473:16" pos:end="473:80">"Both lumi_aq and variance_aq are enabled. The resulting quality"</literal>

               <literal type="string" pos:start="475:16" pos:end="475:75">"will be the worse one of the two effects made by the AQ.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="479:5" pos:end="479:14">/* SSIM */</comment>

    <if_stmt pos:start="481:5" pos:end="497:5"><if pos:start="481:5" pos:end="497:5">if <condition pos:start="481:8" pos:end="481:16">(<expr pos:start="481:9" pos:end="481:15"><name pos:start="481:9" pos:end="481:15"><name pos:start="481:9" pos:end="481:9">x</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:15">ssim</name></name></expr>)</condition> <block pos:start="481:18" pos:end="497:5">{<block_content pos:start="483:9" pos:end="495:38">

        <expr_stmt pos:start="483:9" pos:end="483:70"><expr pos:start="483:9" pos:end="483:69"><name pos:start="483:9" pos:end="483:44"><name pos:start="483:9" pos:end="483:15">plugins</name><index pos:start="483:16" pos:end="483:44">[<expr pos:start="483:17" pos:end="483:43"><name pos:start="483:17" pos:end="483:43"><name pos:start="483:17" pos:end="483:31">xvid_enc_create</name><operator pos:start="483:32" pos:end="483:32">.</operator><name pos:start="483:33" pos:end="483:43">num_plugins</name></name></expr>]</index></name><operator pos:start="483:45" pos:end="483:45">.</operator><name pos:start="483:46" pos:end="483:49">func</name>  <operator pos:start="483:52" pos:end="483:52">=</operator> <name pos:start="483:54" pos:end="483:69">xvid_plugin_ssim</name></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:66"><expr pos:start="485:9" pos:end="485:65"><name pos:start="485:9" pos:end="485:24"><name pos:start="485:9" pos:end="485:12">ssim</name><operator pos:start="485:13" pos:end="485:13">.</operator><name pos:start="485:14" pos:end="485:24">b_printstat</name></name>                           <operator pos:start="485:52" pos:end="485:52">=</operator> <name pos:start="485:54" pos:end="485:60"><name pos:start="485:54" pos:end="485:54">x</name><operator pos:start="485:55" pos:end="485:56">-&gt;</operator><name pos:start="485:57" pos:end="485:60">ssim</name></name> <operator pos:start="485:62" pos:end="485:63">==</operator> <literal type="number" pos:start="485:65" pos:end="485:65">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:65"><expr pos:start="487:9" pos:end="487:64"><name pos:start="487:9" pos:end="487:16"><name pos:start="487:9" pos:end="487:12">ssim</name><operator pos:start="487:13" pos:end="487:13">.</operator><name pos:start="487:14" pos:end="487:16">acc</name></name>                                   <operator pos:start="487:52" pos:end="487:52">=</operator> <name pos:start="487:54" pos:end="487:64"><name pos:start="487:54" pos:end="487:54">x</name><operator pos:start="487:55" pos:end="487:56">-&gt;</operator><name pos:start="487:57" pos:end="487:64">ssim_acc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:77"><expr pos:start="489:9" pos:end="489:76"><name pos:start="489:9" pos:end="489:22"><name pos:start="489:9" pos:end="489:12">ssim</name><operator pos:start="489:13" pos:end="489:13">.</operator><name pos:start="489:14" pos:end="489:22">cpu_flags</name></name>                             <operator pos:start="489:52" pos:end="489:52">=</operator> <name pos:start="489:54" pos:end="489:76"><name pos:start="489:54" pos:end="489:66">xvid_gbl_init</name><operator pos:start="489:67" pos:end="489:67">.</operator><name pos:start="489:68" pos:end="489:76">cpu_flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:55"><expr pos:start="491:9" pos:end="491:54"><name pos:start="491:9" pos:end="491:24"><name pos:start="491:9" pos:end="491:12">ssim</name><operator pos:start="491:13" pos:end="491:13">.</operator><name pos:start="491:14" pos:end="491:24">b_visualize</name></name>                           <operator pos:start="491:52" pos:end="491:52">=</operator> <literal type="number" pos:start="491:54" pos:end="491:54">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="493:9" pos:end="493:59"><expr pos:start="493:9" pos:end="493:58"><name pos:start="493:9" pos:end="493:44"><name pos:start="493:9" pos:end="493:15">plugins</name><index pos:start="493:16" pos:end="493:44">[<expr pos:start="493:17" pos:end="493:43"><name pos:start="493:17" pos:end="493:43"><name pos:start="493:17" pos:end="493:31">xvid_enc_create</name><operator pos:start="493:32" pos:end="493:32">.</operator><name pos:start="493:33" pos:end="493:43">num_plugins</name></name></expr>]</index></name><operator pos:start="493:45" pos:end="493:45">.</operator><name pos:start="493:46" pos:end="493:50">param</name> <operator pos:start="493:52" pos:end="493:52">=</operator> <operator pos:start="493:54" pos:end="493:54">&amp;</operator><name pos:start="493:55" pos:end="493:58">ssim</name></expr>;</expr_stmt>

        <expr_stmt pos:start="495:9" pos:end="495:38"><expr pos:start="495:9" pos:end="495:37"><name pos:start="495:9" pos:end="495:35"><name pos:start="495:9" pos:end="495:23">xvid_enc_create</name><operator pos:start="495:24" pos:end="495:24">.</operator><name pos:start="495:25" pos:end="495:35">num_plugins</name></name><operator pos:start="495:36" pos:end="495:37">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="501:5" pos:end="501:35">/* Frame Rate and Key Frames */</comment>

    <expr_stmt pos:start="503:5" pos:end="503:34"><expr pos:start="503:5" pos:end="503:33"><call pos:start="503:5" pos:end="503:33"><name pos:start="503:5" pos:end="503:26">xvid_correct_framerate</name><argument_list pos:start="503:27" pos:end="503:33">(<argument pos:start="503:28" pos:end="503:32"><expr pos:start="503:28" pos:end="503:32"><name pos:start="503:28" pos:end="503:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:49"><expr pos:start="505:5" pos:end="505:48"><name pos:start="505:5" pos:end="505:25"><name pos:start="505:5" pos:end="505:19">xvid_enc_create</name><operator pos:start="505:20" pos:end="505:20">.</operator><name pos:start="505:21" pos:end="505:25">fincr</name></name> <operator pos:start="505:27" pos:end="505:27">=</operator> <name pos:start="505:29" pos:end="505:48"><name pos:start="505:29" pos:end="505:33">avctx</name><operator pos:start="505:34" pos:end="505:35">-&gt;</operator><name pos:start="505:36" pos:end="505:44">time_base</name><operator pos:start="505:45" pos:end="505:45">.</operator><name pos:start="505:46" pos:end="505:48">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="507:5" pos:end="507:49"><expr pos:start="507:5" pos:end="507:48"><name pos:start="507:5" pos:end="507:25"><name pos:start="507:5" pos:end="507:19">xvid_enc_create</name><operator pos:start="507:20" pos:end="507:20">.</operator><name pos:start="507:21" pos:end="507:25">fbase</name></name> <operator pos:start="507:27" pos:end="507:27">=</operator> <name pos:start="507:29" pos:end="507:48"><name pos:start="507:29" pos:end="507:33">avctx</name><operator pos:start="507:34" pos:end="507:35">-&gt;</operator><name pos:start="507:36" pos:end="507:44">time_base</name><operator pos:start="507:45" pos:end="507:45">.</operator><name pos:start="507:46" pos:end="507:48">den</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="509:5" pos:end="515:47"><if pos:start="509:5" pos:end="511:59">if <condition pos:start="509:8" pos:end="509:28">(<expr pos:start="509:9" pos:end="509:27"><name pos:start="509:9" pos:end="509:23"><name pos:start="509:9" pos:end="509:13">avctx</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:23">gop_size</name></name> <operator pos:start="509:25" pos:end="509:25">&gt;</operator> <literal type="number" pos:start="509:27" pos:end="509:27">0</literal></expr>)</condition><block type="pseudo" pos:start="511:9" pos:end="511:59"><block_content pos:start="511:9" pos:end="511:59">

        <expr_stmt pos:start="511:9" pos:end="511:59"><expr pos:start="511:9" pos:end="511:58"><name pos:start="511:9" pos:end="511:40"><name pos:start="511:9" pos:end="511:23">xvid_enc_create</name><operator pos:start="511:24" pos:end="511:24">.</operator><name pos:start="511:25" pos:end="511:40">max_key_interval</name></name> <operator pos:start="511:42" pos:end="511:42">=</operator> <name pos:start="511:44" pos:end="511:58"><name pos:start="511:44" pos:end="511:48">avctx</name><operator pos:start="511:49" pos:end="511:50">-&gt;</operator><name pos:start="511:51" pos:end="511:58">gop_size</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="513:5" pos:end="515:47">else<block type="pseudo" pos:start="515:9" pos:end="515:47"><block_content pos:start="515:9" pos:end="515:47">

        <expr_stmt pos:start="515:9" pos:end="515:47"><expr pos:start="515:9" pos:end="515:46"><name pos:start="515:9" pos:end="515:40"><name pos:start="515:9" pos:end="515:23">xvid_enc_create</name><operator pos:start="515:24" pos:end="515:24">.</operator><name pos:start="515:25" pos:end="515:40">max_key_interval</name></name> <operator pos:start="515:42" pos:end="515:42">=</operator> <literal type="number" pos:start="515:44" pos:end="515:46">240</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="515:49" pos:end="515:73">/* Xvid's best default */</comment>



    <comment type="block" pos:start="519:5" pos:end="519:16">/* Quants */</comment>

    <if_stmt pos:start="521:5" pos:end="527:22"><if pos:start="521:5" pos:end="523:22">if <condition pos:start="521:8" pos:end="521:42">(<expr pos:start="521:9" pos:end="521:41"><name pos:start="521:9" pos:end="521:18">xvid_flags</name> <operator pos:start="521:20" pos:end="521:20">&amp;</operator> <name pos:start="521:22" pos:end="521:41">AV_CODEC_FLAG_QSCALE</name></expr>)</condition><block type="pseudo" pos:start="523:9" pos:end="523:22"><block_content pos:start="523:9" pos:end="523:22">

        <expr_stmt pos:start="523:9" pos:end="523:22"><expr pos:start="523:9" pos:end="523:21"><name pos:start="523:9" pos:end="523:17"><name pos:start="523:9" pos:end="523:9">x</name><operator pos:start="523:10" pos:end="523:11">-&gt;</operator><name pos:start="523:12" pos:end="523:17">qscale</name></name> <operator pos:start="523:19" pos:end="523:19">=</operator> <literal type="number" pos:start="523:21" pos:end="523:21">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="525:5" pos:end="527:22">else<block type="pseudo" pos:start="527:9" pos:end="527:22"><block_content pos:start="527:9" pos:end="527:22">

        <expr_stmt pos:start="527:9" pos:end="527:22"><expr pos:start="527:9" pos:end="527:21"><name pos:start="527:9" pos:end="527:17"><name pos:start="527:9" pos:end="527:9">x</name><operator pos:start="527:10" pos:end="527:11">-&gt;</operator><name pos:start="527:12" pos:end="527:17">qscale</name></name> <operator pos:start="527:19" pos:end="527:19">=</operator> <literal type="number" pos:start="527:21" pos:end="527:21">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="531:5" pos:end="531:47"><expr pos:start="531:5" pos:end="531:46"><name pos:start="531:5" pos:end="531:32"><name pos:start="531:5" pos:end="531:19">xvid_enc_create</name><operator pos:start="531:20" pos:end="531:20">.</operator><name pos:start="531:21" pos:end="531:29">min_quant</name><index pos:start="531:30" pos:end="531:32">[<expr pos:start="531:31" pos:end="531:31"><literal type="number" pos:start="531:31" pos:end="531:31">0</literal></expr>]</index></name> <operator pos:start="531:34" pos:end="531:34">=</operator> <name pos:start="531:36" pos:end="531:46"><name pos:start="531:36" pos:end="531:40">avctx</name><operator pos:start="531:41" pos:end="531:42">-&gt;</operator><name pos:start="531:43" pos:end="531:46">qmin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="533:5" pos:end="533:47"><expr pos:start="533:5" pos:end="533:46"><name pos:start="533:5" pos:end="533:32"><name pos:start="533:5" pos:end="533:19">xvid_enc_create</name><operator pos:start="533:20" pos:end="533:20">.</operator><name pos:start="533:21" pos:end="533:29">min_quant</name><index pos:start="533:30" pos:end="533:32">[<expr pos:start="533:31" pos:end="533:31"><literal type="number" pos:start="533:31" pos:end="533:31">1</literal></expr>]</index></name> <operator pos:start="533:34" pos:end="533:34">=</operator> <name pos:start="533:36" pos:end="533:46"><name pos:start="533:36" pos:end="533:40">avctx</name><operator pos:start="533:41" pos:end="533:42">-&gt;</operator><name pos:start="533:43" pos:end="533:46">qmin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="535:5" pos:end="535:47"><expr pos:start="535:5" pos:end="535:46"><name pos:start="535:5" pos:end="535:32"><name pos:start="535:5" pos:end="535:19">xvid_enc_create</name><operator pos:start="535:20" pos:end="535:20">.</operator><name pos:start="535:21" pos:end="535:29">min_quant</name><index pos:start="535:30" pos:end="535:32">[<expr pos:start="535:31" pos:end="535:31"><literal type="number" pos:start="535:31" pos:end="535:31">2</literal></expr>]</index></name> <operator pos:start="535:34" pos:end="535:34">=</operator> <name pos:start="535:36" pos:end="535:46"><name pos:start="535:36" pos:end="535:40">avctx</name><operator pos:start="535:41" pos:end="535:42">-&gt;</operator><name pos:start="535:43" pos:end="535:46">qmin</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="537:5" pos:end="537:47"><expr pos:start="537:5" pos:end="537:46"><name pos:start="537:5" pos:end="537:32"><name pos:start="537:5" pos:end="537:19">xvid_enc_create</name><operator pos:start="537:20" pos:end="537:20">.</operator><name pos:start="537:21" pos:end="537:29">max_quant</name><index pos:start="537:30" pos:end="537:32">[<expr pos:start="537:31" pos:end="537:31"><literal type="number" pos:start="537:31" pos:end="537:31">0</literal></expr>]</index></name> <operator pos:start="537:34" pos:end="537:34">=</operator> <name pos:start="537:36" pos:end="537:46"><name pos:start="537:36" pos:end="537:40">avctx</name><operator pos:start="537:41" pos:end="537:42">-&gt;</operator><name pos:start="537:43" pos:end="537:46">qmax</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="539:5" pos:end="539:47"><expr pos:start="539:5" pos:end="539:46"><name pos:start="539:5" pos:end="539:32"><name pos:start="539:5" pos:end="539:19">xvid_enc_create</name><operator pos:start="539:20" pos:end="539:20">.</operator><name pos:start="539:21" pos:end="539:29">max_quant</name><index pos:start="539:30" pos:end="539:32">[<expr pos:start="539:31" pos:end="539:31"><literal type="number" pos:start="539:31" pos:end="539:31">1</literal></expr>]</index></name> <operator pos:start="539:34" pos:end="539:34">=</operator> <name pos:start="539:36" pos:end="539:46"><name pos:start="539:36" pos:end="539:40">avctx</name><operator pos:start="539:41" pos:end="539:42">-&gt;</operator><name pos:start="539:43" pos:end="539:46">qmax</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="541:5" pos:end="541:47"><expr pos:start="541:5" pos:end="541:46"><name pos:start="541:5" pos:end="541:32"><name pos:start="541:5" pos:end="541:19">xvid_enc_create</name><operator pos:start="541:20" pos:end="541:20">.</operator><name pos:start="541:21" pos:end="541:29">max_quant</name><index pos:start="541:30" pos:end="541:32">[<expr pos:start="541:31" pos:end="541:31"><literal type="number" pos:start="541:31" pos:end="541:31">2</literal></expr>]</index></name> <operator pos:start="541:34" pos:end="541:34">=</operator> <name pos:start="541:36" pos:end="541:46"><name pos:start="541:36" pos:end="541:40">avctx</name><operator pos:start="541:41" pos:end="541:42">-&gt;</operator><name pos:start="541:43" pos:end="541:46">qmax</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="545:5" pos:end="545:24">/* Quant Matrices */</comment>

    <expr_stmt pos:start="547:5" pos:end="554:0"><expr pos:start="547:5" pos:end="549:26"><name pos:start="547:5" pos:end="547:19"><name pos:start="547:5" pos:end="547:5">x</name><operator pos:start="547:6" pos:end="547:7">-&gt;</operator><name pos:start="547:8" pos:end="547:19">intra_matrix</name></name> <operator pos:start="547:21" pos:end="547:21">=</operator>

    <name pos:start="549:5" pos:end="549:19"><name pos:start="549:5" pos:end="549:5">x</name><operator pos:start="549:6" pos:end="549:7">-&gt;</operator><name pos:start="549:8" pos:end="549:19">inter_matrix</name></name> <operator pos:start="549:21" pos:end="549:21">=</operator> <name pos:start="549:23" pos:end="549:26">NULL</name></expr>;</expr_stmt>



<cpp:if pos:start="553:1" pos:end="553:22">#<cpp:directive pos:start="553:2" pos:end="553:3">if</cpp:directive> <expr pos:start="553:5" pos:end="553:22"><name pos:start="553:5" pos:end="553:22">FF_API_PRIVATE_OPT</name></expr></cpp:if>

<macro pos:start="555:1" pos:end="555:31"><name pos:start="555:1" pos:end="555:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

    <if_stmt pos:start="557:5" pos:end="559:42"><if pos:start="557:5" pos:end="559:42">if <condition pos:start="557:8" pos:end="557:26">(<expr pos:start="557:9" pos:end="557:25"><name pos:start="557:9" pos:end="557:25"><name pos:start="557:9" pos:end="557:13">avctx</name><operator pos:start="557:14" pos:end="557:15">-&gt;</operator><name pos:start="557:16" pos:end="557:25">mpeg_quant</name></name></expr>)</condition><block type="pseudo" pos:start="559:9" pos:end="559:42"><block_content pos:start="559:9" pos:end="559:42">

        <expr_stmt pos:start="559:9" pos:end="559:42"><expr pos:start="559:9" pos:end="559:41"><name pos:start="559:9" pos:end="559:21"><name pos:start="559:9" pos:end="559:9">x</name><operator pos:start="559:10" pos:end="559:11">-&gt;</operator><name pos:start="559:12" pos:end="559:21">mpeg_quant</name></name> <operator pos:start="559:23" pos:end="559:23">=</operator> <name pos:start="559:25" pos:end="559:41"><name pos:start="559:25" pos:end="559:29">avctx</name><operator pos:start="559:30" pos:end="559:31">-&gt;</operator><name pos:start="559:32" pos:end="559:41">mpeg_quant</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="561:1" pos:end="564:0"><name pos:start="561:1" pos:end="564:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="563:1" pos:end="563:6">#<cpp:directive pos:start="563:2" pos:end="563:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="567:5" pos:end="569:43"><if pos:start="567:5" pos:end="569:43">if <condition pos:start="567:8" pos:end="567:22">(<expr pos:start="567:9" pos:end="567:21"><name pos:start="567:9" pos:end="567:21"><name pos:start="567:9" pos:end="567:9">x</name><operator pos:start="567:10" pos:end="567:11">-&gt;</operator><name pos:start="567:12" pos:end="567:21">mpeg_quant</name></name></expr>)</condition><block type="pseudo" pos:start="569:9" pos:end="569:43"><block_content pos:start="569:9" pos:end="569:43">

        <expr_stmt pos:start="569:9" pos:end="569:43"><expr pos:start="569:9" pos:end="569:42"><name pos:start="569:9" pos:end="569:20"><name pos:start="569:9" pos:end="569:9">x</name><operator pos:start="569:10" pos:end="569:11">-&gt;</operator><name pos:start="569:12" pos:end="569:20">vol_flags</name></name> <operator pos:start="569:22" pos:end="569:23">|=</operator> <name pos:start="569:25" pos:end="569:42">XVID_VOL_MPEGQUANT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="571:5" pos:end="619:5"><if pos:start="571:5" pos:end="619:5">if <condition pos:start="571:8" pos:end="571:53">(<expr pos:start="571:9" pos:end="571:52"><operator pos:start="571:9" pos:end="571:9">(</operator><name pos:start="571:10" pos:end="571:28"><name pos:start="571:10" pos:end="571:14">avctx</name><operator pos:start="571:15" pos:end="571:16">-&gt;</operator><name pos:start="571:17" pos:end="571:28">intra_matrix</name></name> <operator pos:start="571:30" pos:end="571:31">||</operator> <name pos:start="571:33" pos:end="571:51"><name pos:start="571:33" pos:end="571:37">avctx</name><operator pos:start="571:38" pos:end="571:39">-&gt;</operator><name pos:start="571:40" pos:end="571:51">inter_matrix</name></name><operator pos:start="571:52" pos:end="571:52">)</operator></expr>)</condition> <block pos:start="571:55" pos:end="619:5">{<block_content pos:start="573:9" pos:end="617:9">

        <expr_stmt pos:start="573:9" pos:end="573:43"><expr pos:start="573:9" pos:end="573:42"><name pos:start="573:9" pos:end="573:20"><name pos:start="573:9" pos:end="573:9">x</name><operator pos:start="573:10" pos:end="573:11">-&gt;</operator><name pos:start="573:12" pos:end="573:20">vol_flags</name></name> <operator pos:start="573:22" pos:end="573:23">|=</operator> <name pos:start="573:25" pos:end="573:42">XVID_VOL_MPEGQUANT</name></expr>;</expr_stmt>



        <if_stmt pos:start="577:9" pos:end="589:25"><if pos:start="577:9" pos:end="587:9">if <condition pos:start="577:12" pos:end="577:32">(<expr pos:start="577:13" pos:end="577:31"><name pos:start="577:13" pos:end="577:31"><name pos:start="577:13" pos:end="577:17">avctx</name><operator pos:start="577:18" pos:end="577:19">-&gt;</operator><name pos:start="577:20" pos:end="577:31">intra_matrix</name></name></expr>)</condition> <block pos:start="577:34" pos:end="587:9">{<block_content pos:start="579:13" pos:end="585:39">

            <expr_stmt pos:start="579:13" pos:end="579:50"><expr pos:start="579:13" pos:end="579:49"><name pos:start="579:13" pos:end="579:17">intra</name>           <operator pos:start="579:29" pos:end="579:29">=</operator> <name pos:start="579:31" pos:end="579:49"><name pos:start="579:31" pos:end="579:35">avctx</name><operator pos:start="579:36" pos:end="579:37">-&gt;</operator><name pos:start="579:38" pos:end="579:49">intra_matrix</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:68"><expr pos:start="581:13" pos:end="581:67"><name pos:start="581:13" pos:end="581:27"><name pos:start="581:13" pos:end="581:13">x</name><operator pos:start="581:14" pos:end="581:15">-&gt;</operator><name pos:start="581:16" pos:end="581:27">intra_matrix</name></name> <operator pos:start="581:29" pos:end="581:29">=</operator> <call pos:start="581:31" pos:end="581:67"><name pos:start="581:31" pos:end="581:39">av_malloc</name><argument_list pos:start="581:40" pos:end="581:67">(<argument pos:start="581:41" pos:end="581:66"><expr pos:start="581:41" pos:end="581:66">sizeof<operator pos:start="581:47" pos:end="581:47">(</operator><name pos:start="581:48" pos:end="581:55">unsigned</name> <name pos:start="581:57" pos:end="581:60">char</name><operator pos:start="581:61" pos:end="581:61">)</operator> <operator pos:start="581:63" pos:end="581:63">*</operator> <literal type="number" pos:start="581:65" pos:end="581:66">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="583:13" pos:end="585:39"><if pos:start="583:13" pos:end="585:39">if <condition pos:start="583:16" pos:end="583:33">(<expr pos:start="583:17" pos:end="583:32"><operator pos:start="583:17" pos:end="583:17">!</operator><name pos:start="583:18" pos:end="583:32"><name pos:start="583:18" pos:end="583:18">x</name><operator pos:start="583:19" pos:end="583:20">-&gt;</operator><name pos:start="583:21" pos:end="583:32">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="585:17" pos:end="585:39"><block_content pos:start="585:17" pos:end="585:39">

                <return pos:start="585:17" pos:end="585:39">return <expr pos:start="585:24" pos:end="585:38"><call pos:start="585:24" pos:end="585:38"><name pos:start="585:24" pos:end="585:30">AVERROR</name><argument_list pos:start="585:31" pos:end="585:38">(<argument pos:start="585:32" pos:end="585:37"><expr pos:start="585:32" pos:end="585:37"><name pos:start="585:32" pos:end="585:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="587:11" pos:end="589:25">else<block type="pseudo" pos:start="589:13" pos:end="589:25"><block_content pos:start="589:13" pos:end="589:25">

            <expr_stmt pos:start="589:13" pos:end="589:25"><expr pos:start="589:13" pos:end="589:24"><name pos:start="589:13" pos:end="589:17">intra</name> <operator pos:start="589:19" pos:end="589:19">=</operator> <name pos:start="589:21" pos:end="589:24">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="591:9" pos:end="603:25"><if pos:start="591:9" pos:end="601:9">if <condition pos:start="591:12" pos:end="591:32">(<expr pos:start="591:13" pos:end="591:31"><name pos:start="591:13" pos:end="591:31"><name pos:start="591:13" pos:end="591:17">avctx</name><operator pos:start="591:18" pos:end="591:19">-&gt;</operator><name pos:start="591:20" pos:end="591:31">inter_matrix</name></name></expr>)</condition> <block pos:start="591:34" pos:end="601:9">{<block_content pos:start="593:13" pos:end="599:39">

            <expr_stmt pos:start="593:13" pos:end="593:50"><expr pos:start="593:13" pos:end="593:49"><name pos:start="593:13" pos:end="593:17">inter</name>           <operator pos:start="593:29" pos:end="593:29">=</operator> <name pos:start="593:31" pos:end="593:49"><name pos:start="593:31" pos:end="593:35">avctx</name><operator pos:start="593:36" pos:end="593:37">-&gt;</operator><name pos:start="593:38" pos:end="593:49">inter_matrix</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:68"><expr pos:start="595:13" pos:end="595:67"><name pos:start="595:13" pos:end="595:27"><name pos:start="595:13" pos:end="595:13">x</name><operator pos:start="595:14" pos:end="595:15">-&gt;</operator><name pos:start="595:16" pos:end="595:27">inter_matrix</name></name> <operator pos:start="595:29" pos:end="595:29">=</operator> <call pos:start="595:31" pos:end="595:67"><name pos:start="595:31" pos:end="595:39">av_malloc</name><argument_list pos:start="595:40" pos:end="595:67">(<argument pos:start="595:41" pos:end="595:66"><expr pos:start="595:41" pos:end="595:66">sizeof<operator pos:start="595:47" pos:end="595:47">(</operator><name pos:start="595:48" pos:end="595:55">unsigned</name> <name pos:start="595:57" pos:end="595:60">char</name><operator pos:start="595:61" pos:end="595:61">)</operator> <operator pos:start="595:63" pos:end="595:63">*</operator> <literal type="number" pos:start="595:65" pos:end="595:66">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="597:13" pos:end="599:39"><if pos:start="597:13" pos:end="599:39">if <condition pos:start="597:16" pos:end="597:33">(<expr pos:start="597:17" pos:end="597:32"><operator pos:start="597:17" pos:end="597:17">!</operator><name pos:start="597:18" pos:end="597:32"><name pos:start="597:18" pos:end="597:18">x</name><operator pos:start="597:19" pos:end="597:20">-&gt;</operator><name pos:start="597:21" pos:end="597:32">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="599:17" pos:end="599:39"><block_content pos:start="599:17" pos:end="599:39">

                <return pos:start="599:17" pos:end="599:39">return <expr pos:start="599:24" pos:end="599:38"><call pos:start="599:24" pos:end="599:38"><name pos:start="599:24" pos:end="599:30">AVERROR</name><argument_list pos:start="599:31" pos:end="599:38">(<argument pos:start="599:32" pos:end="599:37"><expr pos:start="599:32" pos:end="599:37"><name pos:start="599:32" pos:end="599:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="601:11" pos:end="603:25">else<block type="pseudo" pos:start="603:13" pos:end="603:25"><block_content pos:start="603:13" pos:end="603:25">

            <expr_stmt pos:start="603:13" pos:end="603:25"><expr pos:start="603:13" pos:end="603:24"><name pos:start="603:13" pos:end="603:17">inter</name> <operator pos:start="603:19" pos:end="603:19">=</operator> <name pos:start="603:21" pos:end="603:24">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <for pos:start="607:9" pos:end="617:9">for <control pos:start="607:13" pos:end="607:32">(<init pos:start="607:14" pos:end="607:19"><expr pos:start="607:14" pos:end="607:18"><name pos:start="607:14" pos:end="607:14">i</name> <operator pos:start="607:16" pos:end="607:16">=</operator> <literal type="number" pos:start="607:18" pos:end="607:18">0</literal></expr>;</init> <condition pos:start="607:21" pos:end="607:27"><expr pos:start="607:21" pos:end="607:26"><name pos:start="607:21" pos:end="607:21">i</name> <operator pos:start="607:23" pos:end="607:23">&lt;</operator> <literal type="number" pos:start="607:25" pos:end="607:26">64</literal></expr>;</condition> <incr pos:start="607:29" pos:end="607:31"><expr pos:start="607:29" pos:end="607:31"><name pos:start="607:29" pos:end="607:29">i</name><operator pos:start="607:30" pos:end="607:31">++</operator></expr></incr>)</control> <block pos:start="607:34" pos:end="617:9">{<block_content pos:start="609:13" pos:end="615:62">

            <if_stmt pos:start="609:13" pos:end="611:62"><if pos:start="609:13" pos:end="611:62">if <condition pos:start="609:16" pos:end="609:22">(<expr pos:start="609:17" pos:end="609:21"><name pos:start="609:17" pos:end="609:21">intra</name></expr>)</condition><block type="pseudo" pos:start="611:17" pos:end="611:62"><block_content pos:start="611:17" pos:end="611:62">

                <expr_stmt pos:start="611:17" pos:end="611:62"><expr pos:start="611:17" pos:end="611:61"><name pos:start="611:17" pos:end="611:34"><name pos:start="611:17" pos:end="611:17">x</name><operator pos:start="611:18" pos:end="611:19">-&gt;</operator><name pos:start="611:20" pos:end="611:31">intra_matrix</name><index pos:start="611:32" pos:end="611:34">[<expr pos:start="611:33" pos:end="611:33"><name pos:start="611:33" pos:end="611:33">i</name></expr>]</index></name> <operator pos:start="611:36" pos:end="611:36">=</operator> <operator pos:start="611:38" pos:end="611:38">(</operator><name pos:start="611:39" pos:end="611:46">unsigned</name> <name pos:start="611:48" pos:end="611:51">char</name><operator pos:start="611:52" pos:end="611:52">)</operator> <name pos:start="611:54" pos:end="611:61"><name pos:start="611:54" pos:end="611:58">intra</name><index pos:start="611:59" pos:end="611:61">[<expr pos:start="611:60" pos:end="611:60"><name pos:start="611:60" pos:end="611:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="613:13" pos:end="615:62"><if pos:start="613:13" pos:end="615:62">if <condition pos:start="613:16" pos:end="613:22">(<expr pos:start="613:17" pos:end="613:21"><name pos:start="613:17" pos:end="613:21">inter</name></expr>)</condition><block type="pseudo" pos:start="615:17" pos:end="615:62"><block_content pos:start="615:17" pos:end="615:62">

                <expr_stmt pos:start="615:17" pos:end="615:62"><expr pos:start="615:17" pos:end="615:61"><name pos:start="615:17" pos:end="615:34"><name pos:start="615:17" pos:end="615:17">x</name><operator pos:start="615:18" pos:end="615:19">-&gt;</operator><name pos:start="615:20" pos:end="615:31">inter_matrix</name><index pos:start="615:32" pos:end="615:34">[<expr pos:start="615:33" pos:end="615:33"><name pos:start="615:33" pos:end="615:33">i</name></expr>]</index></name> <operator pos:start="615:36" pos:end="615:36">=</operator> <operator pos:start="615:38" pos:end="615:38">(</operator><name pos:start="615:39" pos:end="615:46">unsigned</name> <name pos:start="615:48" pos:end="615:51">char</name><operator pos:start="615:52" pos:end="615:52">)</operator> <name pos:start="615:54" pos:end="615:61"><name pos:start="615:54" pos:end="615:58">inter</name><index pos:start="615:59" pos:end="615:61">[<expr pos:start="615:60" pos:end="615:60"><name pos:start="615:60" pos:end="615:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="623:5" pos:end="623:23">/* Misc Settings */</comment>

    <expr_stmt pos:start="625:5" pos:end="625:41"><expr pos:start="625:5" pos:end="625:40"><name pos:start="625:5" pos:end="625:36"><name pos:start="625:5" pos:end="625:19">xvid_enc_create</name><operator pos:start="625:20" pos:end="625:20">.</operator><name pos:start="625:21" pos:end="625:36">frame_drop_ratio</name></name> <operator pos:start="625:38" pos:end="625:38">=</operator> <literal type="number" pos:start="625:40" pos:end="625:40">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="627:5" pos:end="627:41"><expr pos:start="627:5" pos:end="627:40"><name pos:start="627:5" pos:end="627:26"><name pos:start="627:5" pos:end="627:19">xvid_enc_create</name><operator pos:start="627:20" pos:end="627:20">.</operator><name pos:start="627:21" pos:end="627:26">global</name></name>           <operator pos:start="627:38" pos:end="627:38">=</operator> <literal type="number" pos:start="627:40" pos:end="627:40">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="629:5" pos:end="631:57"><if pos:start="629:5" pos:end="631:57">if <condition pos:start="629:8" pos:end="629:46">(<expr pos:start="629:9" pos:end="629:45"><name pos:start="629:9" pos:end="629:18">xvid_flags</name> <operator pos:start="629:20" pos:end="629:20">&amp;</operator> <name pos:start="629:22" pos:end="629:45">AV_CODEC_FLAG_CLOSED_GOP</name></expr>)</condition><block type="pseudo" pos:start="631:9" pos:end="631:57"><block_content pos:start="631:9" pos:end="631:57">

        <expr_stmt pos:start="631:9" pos:end="631:57"><expr pos:start="631:9" pos:end="631:56"><name pos:start="631:9" pos:end="631:30"><name pos:start="631:9" pos:end="631:23">xvid_enc_create</name><operator pos:start="631:24" pos:end="631:24">.</operator><name pos:start="631:25" pos:end="631:30">global</name></name> <operator pos:start="631:32" pos:end="631:33">|=</operator> <name pos:start="631:35" pos:end="631:56">XVID_GLOBAL_CLOSED_GOP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="635:5" pos:end="635:57">/* Determines which codec mode we are operating in */</comment>

    <expr_stmt pos:start="637:5" pos:end="637:33"><expr pos:start="637:5" pos:end="637:32"><name pos:start="637:5" pos:end="637:20"><name pos:start="637:5" pos:end="637:9">avctx</name><operator pos:start="637:10" pos:end="637:11">-&gt;</operator><name pos:start="637:12" pos:end="637:20">extradata</name></name>      <operator pos:start="637:27" pos:end="637:27">=</operator> <name pos:start="637:29" pos:end="637:32">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="639:5" pos:end="639:30"><expr pos:start="639:5" pos:end="639:29"><name pos:start="639:5" pos:end="639:25"><name pos:start="639:5" pos:end="639:9">avctx</name><operator pos:start="639:10" pos:end="639:11">-&gt;</operator><name pos:start="639:12" pos:end="639:25">extradata_size</name></name> <operator pos:start="639:27" pos:end="639:27">=</operator> <literal type="number" pos:start="639:29" pos:end="639:29">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="641:5" pos:end="659:5"><if pos:start="641:5" pos:end="649:5">if <condition pos:start="641:8" pos:end="641:49">(<expr pos:start="641:9" pos:end="641:48"><name pos:start="641:9" pos:end="641:18">xvid_flags</name> <operator pos:start="641:20" pos:end="641:20">&amp;</operator> <name pos:start="641:22" pos:end="641:48">AV_CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="641:51" pos:end="649:5">{<block_content pos:start="645:9" pos:end="647:48">

        <comment type="block" pos:start="643:9" pos:end="643:55">/* In this case, we are claiming to be MPEG4 */</comment>

        <expr_stmt pos:start="645:9" pos:end="645:32"><expr pos:start="645:9" pos:end="645:31"><name pos:start="645:9" pos:end="645:27"><name pos:start="645:9" pos:end="645:9">x</name><operator pos:start="645:10" pos:end="645:11">-&gt;</operator><name pos:start="645:12" pos:end="645:27">quicktime_format</name></name> <operator pos:start="645:29" pos:end="645:29">=</operator> <literal type="number" pos:start="645:31" pos:end="645:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="647:9" pos:end="647:48"><expr pos:start="647:9" pos:end="647:47"><name pos:start="647:9" pos:end="647:23"><name pos:start="647:9" pos:end="647:13">avctx</name><operator pos:start="647:14" pos:end="647:15">-&gt;</operator><name pos:start="647:16" pos:end="647:23">codec_id</name></name>     <operator pos:start="647:29" pos:end="647:29">=</operator> <name pos:start="647:31" pos:end="647:47">AV_CODEC_ID_MPEG4</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="649:7" pos:end="659:5">else <block pos:start="649:12" pos:end="659:5">{<block_content pos:start="653:9" pos:end="657:47">

        <comment type="block" pos:start="651:9" pos:end="651:40">/* We are claiming to be Xvid */</comment>

        <expr_stmt pos:start="653:9" pos:end="653:32"><expr pos:start="653:9" pos:end="653:31"><name pos:start="653:9" pos:end="653:27"><name pos:start="653:9" pos:end="653:9">x</name><operator pos:start="653:10" pos:end="653:11">-&gt;</operator><name pos:start="653:12" pos:end="653:27">quicktime_format</name></name> <operator pos:start="653:29" pos:end="653:29">=</operator> <literal type="number" pos:start="653:31" pos:end="653:31">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="655:9" pos:end="657:47"><if pos:start="655:9" pos:end="657:47">if <condition pos:start="655:12" pos:end="655:30">(<expr pos:start="655:13" pos:end="655:29"><operator pos:start="655:13" pos:end="655:13">!</operator><name pos:start="655:14" pos:end="655:29"><name pos:start="655:14" pos:end="655:18">avctx</name><operator pos:start="655:19" pos:end="655:20">-&gt;</operator><name pos:start="655:21" pos:end="655:29">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="657:13" pos:end="657:47"><block_content pos:start="657:13" pos:end="657:47">

            <expr_stmt pos:start="657:13" pos:end="657:47"><expr pos:start="657:13" pos:end="657:46"><name pos:start="657:13" pos:end="657:28"><name pos:start="657:13" pos:end="657:17">avctx</name><operator pos:start="657:18" pos:end="657:19">-&gt;</operator><name pos:start="657:20" pos:end="657:28">codec_tag</name></name> <operator pos:start="657:30" pos:end="657:30">=</operator> <call pos:start="657:32" pos:end="657:46"><name pos:start="657:32" pos:end="657:38">AV_RL32</name><argument_list pos:start="657:39" pos:end="657:46">(<argument pos:start="657:40" pos:end="657:45"><expr pos:start="657:40" pos:end="657:45"><literal type="string" pos:start="657:40" pos:end="657:45">"xvid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="663:5" pos:end="663:17">/* Bframes */</comment>

    <expr_stmt pos:start="665:5" pos:end="665:56"><expr pos:start="665:5" pos:end="665:55"><name pos:start="665:5" pos:end="665:31"><name pos:start="665:5" pos:end="665:19">xvid_enc_create</name><operator pos:start="665:20" pos:end="665:20">.</operator><name pos:start="665:21" pos:end="665:31">max_bframes</name></name>   <operator pos:start="665:35" pos:end="665:35">=</operator> <name pos:start="665:37" pos:end="665:55"><name pos:start="665:37" pos:end="665:41">avctx</name><operator pos:start="665:42" pos:end="665:43">-&gt;</operator><name pos:start="665:44" pos:end="665:55">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="667:5" pos:end="667:64"><expr pos:start="667:5" pos:end="667:63"><name pos:start="667:5" pos:end="667:33"><name pos:start="667:5" pos:end="667:19">xvid_enc_create</name><operator pos:start="667:20" pos:end="667:20">.</operator><name pos:start="667:21" pos:end="667:33">bquant_offset</name></name> <operator pos:start="667:35" pos:end="667:35">=</operator> <literal type="number" pos:start="667:37" pos:end="667:39">100</literal> <operator pos:start="667:41" pos:end="667:41">*</operator> <name pos:start="667:43" pos:end="667:63"><name pos:start="667:43" pos:end="667:47">avctx</name><operator pos:start="667:48" pos:end="667:49">-&gt;</operator><name pos:start="667:50" pos:end="667:63">b_quant_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="669:5" pos:end="669:64"><expr pos:start="669:5" pos:end="669:63"><name pos:start="669:5" pos:end="669:32"><name pos:start="669:5" pos:end="669:19">xvid_enc_create</name><operator pos:start="669:20" pos:end="669:20">.</operator><name pos:start="669:21" pos:end="669:32">bquant_ratio</name></name>  <operator pos:start="669:35" pos:end="669:35">=</operator> <literal type="number" pos:start="669:37" pos:end="669:39">100</literal> <operator pos:start="669:41" pos:end="669:41">*</operator> <name pos:start="669:43" pos:end="669:63"><name pos:start="669:43" pos:end="669:47">avctx</name><operator pos:start="669:48" pos:end="669:49">-&gt;</operator><name pos:start="669:50" pos:end="669:63">b_quant_factor</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="671:5" pos:end="673:53"><if pos:start="671:5" pos:end="673:53">if <condition pos:start="671:8" pos:end="671:56">(<expr pos:start="671:9" pos:end="671:55"><name pos:start="671:9" pos:end="671:27"><name pos:start="671:9" pos:end="671:13">avctx</name><operator pos:start="671:14" pos:end="671:15">-&gt;</operator><name pos:start="671:16" pos:end="671:27">max_b_frames</name></name> <operator pos:start="671:29" pos:end="671:29">&gt;</operator> <literal type="number" pos:start="671:31" pos:end="671:31">0</literal> <operator pos:start="671:33" pos:end="671:34">&amp;&amp;</operator> <operator pos:start="671:36" pos:end="671:36">!</operator><name pos:start="671:37" pos:end="671:55"><name pos:start="671:37" pos:end="671:37">x</name><operator pos:start="671:38" pos:end="671:39">-&gt;</operator><name pos:start="671:40" pos:end="671:55">quicktime_format</name></name></expr>)</condition><block type="pseudo" pos:start="673:9" pos:end="673:53"><block_content pos:start="673:9" pos:end="673:53">

        <expr_stmt pos:start="673:9" pos:end="673:53"><expr pos:start="673:9" pos:end="673:52"><name pos:start="673:9" pos:end="673:30"><name pos:start="673:9" pos:end="673:23">xvid_enc_create</name><operator pos:start="673:24" pos:end="673:24">.</operator><name pos:start="673:25" pos:end="673:30">global</name></name> <operator pos:start="673:32" pos:end="673:33">|=</operator> <name pos:start="673:35" pos:end="673:52">XVID_GLOBAL_PACKED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="677:5" pos:end="677:123"><expr pos:start="677:5" pos:end="677:122"><call pos:start="677:5" pos:end="677:122"><name pos:start="677:5" pos:end="677:14">av_assert0</name><argument_list pos:start="677:15" pos:end="677:122">(<argument pos:start="677:16" pos:end="677:121"><expr pos:start="677:16" pos:end="677:121"><name pos:start="677:16" pos:end="677:42"><name pos:start="677:16" pos:end="677:30">xvid_enc_create</name><operator pos:start="677:31" pos:end="677:31">.</operator><name pos:start="677:32" pos:end="677:42">num_plugins</name></name> <operator pos:start="677:44" pos:end="677:44">+</operator> <operator pos:start="677:46" pos:end="677:46">(</operator><operator pos:start="677:47" pos:end="677:47">!</operator><operator pos:start="677:48" pos:end="677:48">!</operator><name pos:start="677:49" pos:end="677:55"><name pos:start="677:49" pos:end="677:49">x</name><operator pos:start="677:50" pos:end="677:51">-&gt;</operator><name pos:start="677:52" pos:end="677:55">ssim</name></name><operator pos:start="677:56" pos:end="677:56">)</operator> <operator pos:start="677:58" pos:end="677:58">+</operator> <operator pos:start="677:60" pos:end="677:60">(</operator><operator pos:start="677:61" pos:end="677:61">!</operator><operator pos:start="677:62" pos:end="677:62">!</operator><name pos:start="677:63" pos:end="677:76"><name pos:start="677:63" pos:end="677:63">x</name><operator pos:start="677:64" pos:end="677:65">-&gt;</operator><name pos:start="677:66" pos:end="677:76">variance_aq</name></name><operator pos:start="677:77" pos:end="677:77">)</operator> <operator pos:start="677:79" pos:end="677:79">+</operator> <operator pos:start="677:81" pos:end="677:81">(</operator><operator pos:start="677:82" pos:end="677:82">!</operator><operator pos:start="677:83" pos:end="677:83">!</operator><name pos:start="677:84" pos:end="677:93"><name pos:start="677:84" pos:end="677:84">x</name><operator pos:start="677:85" pos:end="677:86">-&gt;</operator><name pos:start="677:87" pos:end="677:93">lumi_aq</name></name><operator pos:start="677:94" pos:end="677:94">)</operator> <operator pos:start="677:96" pos:end="677:97">&lt;=</operator> <call pos:start="677:99" pos:end="677:121"><name pos:start="677:99" pos:end="677:112">FF_ARRAY_ELEMS</name><argument_list pos:start="677:113" pos:end="677:121">(<argument pos:start="677:114" pos:end="677:120"><expr pos:start="677:114" pos:end="677:120"><name pos:start="677:114" pos:end="677:120">plugins</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="681:5" pos:end="681:63">/* Encode a dummy frame to get the extradata immediately */</comment>

    <if_stmt pos:start="683:5" pos:end="751:5"><if pos:start="683:5" pos:end="751:5">if <condition pos:start="683:8" pos:end="683:28">(<expr pos:start="683:9" pos:end="683:27"><name pos:start="683:9" pos:end="683:27"><name pos:start="683:9" pos:end="683:9">x</name><operator pos:start="683:10" pos:end="683:11">-&gt;</operator><name pos:start="683:12" pos:end="683:27">quicktime_format</name></name></expr>)</condition> <block pos:start="683:30" pos:end="751:5">{<block_content pos:start="685:9" pos:end="749:69">

        <decl_stmt pos:start="685:9" pos:end="685:25"><decl pos:start="685:9" pos:end="685:24"><type pos:start="685:9" pos:end="685:17"><name pos:start="685:9" pos:end="685:15">AVFrame</name> <modifier pos:start="685:17" pos:end="685:17">*</modifier></type><name pos:start="685:18" pos:end="685:24">picture</name></decl>;</decl_stmt>

        <decl_stmt pos:start="687:9" pos:end="687:24"><decl pos:start="687:9" pos:end="687:23"><type pos:start="687:9" pos:end="687:16"><name pos:start="687:9" pos:end="687:16">AVPacket</name></type> <name pos:start="687:18" pos:end="687:23">packet</name></decl>;</decl_stmt>

        <decl_stmt pos:start="689:9" pos:end="689:34"><decl pos:start="689:9" pos:end="689:16"><type pos:start="689:9" pos:end="689:11"><name pos:start="689:9" pos:end="689:11">int</name></type> <name pos:start="689:13" pos:end="689:16">size</name></decl>, <decl pos:start="689:19" pos:end="689:28"><type ref="prev" pos:start="689:9" pos:end="689:11"/><name pos:start="689:19" pos:end="689:28">got_packet</name></decl>, <decl pos:start="689:31" pos:end="689:33"><type ref="prev" pos:start="689:9" pos:end="689:11"/><name pos:start="689:31" pos:end="689:33">ret</name></decl>;</decl_stmt>



        <expr_stmt pos:start="693:9" pos:end="693:32"><expr pos:start="693:9" pos:end="693:31"><call pos:start="693:9" pos:end="693:31"><name pos:start="693:9" pos:end="693:22">av_init_packet</name><argument_list pos:start="693:23" pos:end="693:31">(<argument pos:start="693:24" pos:end="693:30"><expr pos:start="693:24" pos:end="693:30"><operator pos:start="693:24" pos:end="693:24">&amp;</operator><name pos:start="693:25" pos:end="693:30">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="697:9" pos:end="697:35"><expr pos:start="697:9" pos:end="697:34"><name pos:start="697:9" pos:end="697:15">picture</name> <operator pos:start="697:17" pos:end="697:17">=</operator> <call pos:start="697:19" pos:end="697:34"><name pos:start="697:19" pos:end="697:32">av_frame_alloc</name><argument_list pos:start="697:33" pos:end="697:34">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="699:9" pos:end="701:35"><if pos:start="699:9" pos:end="701:35">if <condition pos:start="699:12" pos:end="699:21">(<expr pos:start="699:13" pos:end="699:20"><operator pos:start="699:13" pos:end="699:13">!</operator><name pos:start="699:14" pos:end="699:20">picture</name></expr>)</condition><block type="pseudo" pos:start="701:13" pos:end="701:35"><block_content pos:start="701:13" pos:end="701:35">

            <return pos:start="701:13" pos:end="701:35">return <expr pos:start="701:20" pos:end="701:34"><call pos:start="701:20" pos:end="701:34"><name pos:start="701:20" pos:end="701:26">AVERROR</name><argument_list pos:start="701:27" pos:end="701:34">(<argument pos:start="701:28" pos:end="701:33"><expr pos:start="701:28" pos:end="701:33"><name pos:start="701:28" pos:end="701:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="705:9" pos:end="705:74"><expr pos:start="705:9" pos:end="705:73"><name pos:start="705:9" pos:end="705:12">xerr</name> <operator pos:start="705:14" pos:end="705:14">=</operator> <call pos:start="705:16" pos:end="705:73"><name pos:start="705:16" pos:end="705:26">xvid_encore</name><argument_list pos:start="705:27" pos:end="705:73">(<argument pos:start="705:28" pos:end="705:31"><expr pos:start="705:28" pos:end="705:31"><name pos:start="705:28" pos:end="705:31">NULL</name></expr></argument>, <argument pos:start="705:34" pos:end="705:48"><expr pos:start="705:34" pos:end="705:48"><name pos:start="705:34" pos:end="705:48">XVID_ENC_CREATE</name></expr></argument>, <argument pos:start="705:51" pos:end="705:66"><expr pos:start="705:51" pos:end="705:66"><operator pos:start="705:51" pos:end="705:51">&amp;</operator><name pos:start="705:52" pos:end="705:66">xvid_enc_create</name></expr></argument>, <argument pos:start="705:69" pos:end="705:72"><expr pos:start="705:69" pos:end="705:72"><name pos:start="705:69" pos:end="705:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="707:9" pos:end="715:9"><if pos:start="707:9" pos:end="715:9">if<condition pos:start="707:11" pos:end="707:18">( <expr pos:start="707:13" pos:end="707:16"><name pos:start="707:13" pos:end="707:16">xerr</name></expr> )</condition> <block pos:start="707:20" pos:end="715:9">{<block_content pos:start="709:13" pos:end="713:36">

            <expr_stmt pos:start="709:13" pos:end="709:36"><expr pos:start="709:13" pos:end="709:35"><call pos:start="709:13" pos:end="709:35"><name pos:start="709:13" pos:end="709:25">av_frame_free</name><argument_list pos:start="709:26" pos:end="709:35">(<argument pos:start="709:27" pos:end="709:34"><expr pos:start="709:27" pos:end="709:34"><operator pos:start="709:27" pos:end="709:27">&amp;</operator><name pos:start="709:28" pos:end="709:34">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:86"><expr pos:start="711:13" pos:end="711:85"><call pos:start="711:13" pos:end="711:85"><name pos:start="711:13" pos:end="711:18">av_log</name><argument_list pos:start="711:19" pos:end="711:85">(<argument pos:start="711:20" pos:end="711:24"><expr pos:start="711:20" pos:end="711:24"><name pos:start="711:20" pos:end="711:24">avctx</name></expr></argument>, <argument pos:start="711:27" pos:end="711:38"><expr pos:start="711:27" pos:end="711:38"><name pos:start="711:27" pos:end="711:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="711:41" pos:end="711:84"><expr pos:start="711:41" pos:end="711:84"><literal type="string" pos:start="711:41" pos:end="711:84">"Xvid: Could not create encoder reference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="713:13" pos:end="713:36">return <expr pos:start="713:20" pos:end="713:35"><name pos:start="713:20" pos:end="713:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="717:9" pos:end="717:51"><expr pos:start="717:9" pos:end="717:50"><name pos:start="717:9" pos:end="717:25"><name pos:start="717:9" pos:end="717:9">x</name><operator pos:start="717:10" pos:end="717:11">-&gt;</operator><name pos:start="717:12" pos:end="717:25">encoder_handle</name></name> <operator pos:start="717:27" pos:end="717:27">=</operator> <name pos:start="717:29" pos:end="717:50"><name pos:start="717:29" pos:end="717:43">xvid_enc_create</name><operator pos:start="717:44" pos:end="717:44">.</operator><name pos:start="717:45" pos:end="717:50">handle</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="719:9" pos:end="719:70"><expr pos:start="719:9" pos:end="719:69"><name pos:start="719:9" pos:end="719:12">size</name> <operator pos:start="719:14" pos:end="719:14">=</operator> <operator pos:start="719:16" pos:end="719:16">(</operator><operator pos:start="719:17" pos:end="719:17">(</operator><name pos:start="719:18" pos:end="719:29"><name pos:start="719:18" pos:end="719:22">avctx</name><operator pos:start="719:23" pos:end="719:24">-&gt;</operator><name pos:start="719:25" pos:end="719:29">width</name></name> <operator pos:start="719:31" pos:end="719:31">+</operator> <literal type="number" pos:start="719:33" pos:end="719:33">1</literal><operator pos:start="719:34" pos:end="719:34">)</operator> <operator pos:start="719:36" pos:end="719:36">&amp;</operator> <operator pos:start="719:38" pos:end="719:38">~</operator><literal type="number" pos:start="719:39" pos:end="719:39">1</literal><operator pos:start="719:40" pos:end="719:40">)</operator> <operator pos:start="719:42" pos:end="719:42">*</operator> <operator pos:start="719:44" pos:end="719:44">(</operator><operator pos:start="719:45" pos:end="719:45">(</operator><name pos:start="719:46" pos:end="719:58"><name pos:start="719:46" pos:end="719:50">avctx</name><operator pos:start="719:51" pos:end="719:52">-&gt;</operator><name pos:start="719:53" pos:end="719:58">height</name></name> <operator pos:start="719:60" pos:end="719:60">+</operator> <literal type="number" pos:start="719:62" pos:end="719:62">1</literal><operator pos:start="719:63" pos:end="719:63">)</operator> <operator pos:start="719:65" pos:end="719:65">&amp;</operator> <operator pos:start="719:67" pos:end="719:67">~</operator><literal type="number" pos:start="719:68" pos:end="719:68">1</literal><operator pos:start="719:69" pos:end="719:69">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="721:9" pos:end="721:54"><expr pos:start="721:9" pos:end="721:53"><name pos:start="721:9" pos:end="721:24"><name pos:start="721:9" pos:end="721:15">picture</name><operator pos:start="721:16" pos:end="721:17">-&gt;</operator><name pos:start="721:18" pos:end="721:21">data</name><index pos:start="721:22" pos:end="721:24">[<expr pos:start="721:23" pos:end="721:23"><literal type="number" pos:start="721:23" pos:end="721:23">0</literal></expr>]</index></name> <operator pos:start="721:26" pos:end="721:26">=</operator> <call pos:start="721:28" pos:end="721:53"><name pos:start="721:28" pos:end="721:36">av_malloc</name><argument_list pos:start="721:37" pos:end="721:53">(<argument pos:start="721:38" pos:end="721:52"><expr pos:start="721:38" pos:end="721:52"><name pos:start="721:38" pos:end="721:41">size</name> <operator pos:start="721:43" pos:end="721:43">+</operator> <name pos:start="721:45" pos:end="721:48">size</name> <operator pos:start="721:50" pos:end="721:50">/</operator> <literal type="number" pos:start="721:52" pos:end="721:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="723:9" pos:end="729:9"><if pos:start="723:9" pos:end="729:9">if <condition pos:start="723:12" pos:end="723:30">(<expr pos:start="723:13" pos:end="723:29"><operator pos:start="723:13" pos:end="723:13">!</operator><name pos:start="723:14" pos:end="723:29"><name pos:start="723:14" pos:end="723:20">picture</name><operator pos:start="723:21" pos:end="723:22">-&gt;</operator><name pos:start="723:23" pos:end="723:26">data</name><index pos:start="723:27" pos:end="723:29">[<expr pos:start="723:28" pos:end="723:28"><literal type="number" pos:start="723:28" pos:end="723:28">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="723:32" pos:end="729:9">{<block_content pos:start="725:13" pos:end="727:35">

            <expr_stmt pos:start="725:13" pos:end="725:36"><expr pos:start="725:13" pos:end="725:35"><call pos:start="725:13" pos:end="725:35"><name pos:start="725:13" pos:end="725:25">av_frame_free</name><argument_list pos:start="725:26" pos:end="725:35">(<argument pos:start="725:27" pos:end="725:34"><expr pos:start="725:27" pos:end="725:34"><operator pos:start="725:27" pos:end="725:27">&amp;</operator><name pos:start="725:28" pos:end="725:34">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="727:13" pos:end="727:35">return <expr pos:start="727:20" pos:end="727:34"><call pos:start="727:20" pos:end="727:34"><name pos:start="727:20" pos:end="727:26">AVERROR</name><argument_list pos:start="727:27" pos:end="727:34">(<argument pos:start="727:28" pos:end="727:33"><expr pos:start="727:28" pos:end="727:33"><name pos:start="727:28" pos:end="727:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="731:9" pos:end="731:51"><expr pos:start="731:9" pos:end="731:50"><name pos:start="731:9" pos:end="731:24"><name pos:start="731:9" pos:end="731:15">picture</name><operator pos:start="731:16" pos:end="731:17">-&gt;</operator><name pos:start="731:18" pos:end="731:21">data</name><index pos:start="731:22" pos:end="731:24">[<expr pos:start="731:23" pos:end="731:23"><literal type="number" pos:start="731:23" pos:end="731:23">1</literal></expr>]</index></name> <operator pos:start="731:26" pos:end="731:26">=</operator> <name pos:start="731:28" pos:end="731:43"><name pos:start="731:28" pos:end="731:34">picture</name><operator pos:start="731:35" pos:end="731:36">-&gt;</operator><name pos:start="731:37" pos:end="731:40">data</name><index pos:start="731:41" pos:end="731:43">[<expr pos:start="731:42" pos:end="731:42"><literal type="number" pos:start="731:42" pos:end="731:42">0</literal></expr>]</index></name> <operator pos:start="731:45" pos:end="731:45">+</operator> <name pos:start="731:47" pos:end="731:50">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="733:9" pos:end="733:55"><expr pos:start="733:9" pos:end="733:54"><name pos:start="733:9" pos:end="733:24"><name pos:start="733:9" pos:end="733:15">picture</name><operator pos:start="733:16" pos:end="733:17">-&gt;</operator><name pos:start="733:18" pos:end="733:21">data</name><index pos:start="733:22" pos:end="733:24">[<expr pos:start="733:23" pos:end="733:23"><literal type="number" pos:start="733:23" pos:end="733:23">2</literal></expr>]</index></name> <operator pos:start="733:26" pos:end="733:26">=</operator> <name pos:start="733:28" pos:end="733:43"><name pos:start="733:28" pos:end="733:34">picture</name><operator pos:start="733:35" pos:end="733:36">-&gt;</operator><name pos:start="733:37" pos:end="733:40">data</name><index pos:start="733:41" pos:end="733:43">[<expr pos:start="733:42" pos:end="733:42"><literal type="number" pos:start="733:42" pos:end="733:42">1</literal></expr>]</index></name> <operator pos:start="733:45" pos:end="733:45">+</operator> <name pos:start="733:47" pos:end="733:50">size</name> <operator pos:start="733:52" pos:end="733:52">/</operator> <literal type="number" pos:start="733:54" pos:end="733:54">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="735:9" pos:end="735:42"><expr pos:start="735:9" pos:end="735:41"><call pos:start="735:9" pos:end="735:41"><name pos:start="735:9" pos:end="735:14">memset</name><argument_list pos:start="735:15" pos:end="735:41">(<argument pos:start="735:16" pos:end="735:31"><expr pos:start="735:16" pos:end="735:31"><name pos:start="735:16" pos:end="735:31"><name pos:start="735:16" pos:end="735:22">picture</name><operator pos:start="735:23" pos:end="735:24">-&gt;</operator><name pos:start="735:25" pos:end="735:28">data</name><index pos:start="735:29" pos:end="735:31">[<expr pos:start="735:30" pos:end="735:30"><literal type="number" pos:start="735:30" pos:end="735:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="735:34" pos:end="735:34"><expr pos:start="735:34" pos:end="735:34"><literal type="number" pos:start="735:34" pos:end="735:34">0</literal></expr></argument>, <argument pos:start="735:37" pos:end="735:40"><expr pos:start="735:37" pos:end="735:40"><name pos:start="735:37" pos:end="735:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="737:9" pos:end="737:48"><expr pos:start="737:9" pos:end="737:47"><call pos:start="737:9" pos:end="737:47"><name pos:start="737:9" pos:end="737:14">memset</name><argument_list pos:start="737:15" pos:end="737:47">(<argument pos:start="737:16" pos:end="737:31"><expr pos:start="737:16" pos:end="737:31"><name pos:start="737:16" pos:end="737:31"><name pos:start="737:16" pos:end="737:22">picture</name><operator pos:start="737:23" pos:end="737:24">-&gt;</operator><name pos:start="737:25" pos:end="737:28">data</name><index pos:start="737:29" pos:end="737:31">[<expr pos:start="737:30" pos:end="737:30"><literal type="number" pos:start="737:30" pos:end="737:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="737:34" pos:end="737:36"><expr pos:start="737:34" pos:end="737:36"><literal type="number" pos:start="737:34" pos:end="737:36">128</literal></expr></argument>, <argument pos:start="737:39" pos:end="737:46"><expr pos:start="737:39" pos:end="737:46"><name pos:start="737:39" pos:end="737:42">size</name> <operator pos:start="737:44" pos:end="737:44">/</operator> <literal type="number" pos:start="737:46" pos:end="737:46">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="739:9" pos:end="739:70"><expr pos:start="739:9" pos:end="739:69"><name pos:start="739:9" pos:end="739:11">ret</name> <operator pos:start="739:13" pos:end="739:13">=</operator> <call pos:start="739:15" pos:end="739:69"><name pos:start="739:15" pos:end="739:31">xvid_encode_frame</name><argument_list pos:start="739:32" pos:end="739:69">(<argument pos:start="739:33" pos:end="739:37"><expr pos:start="739:33" pos:end="739:37"><name pos:start="739:33" pos:end="739:37">avctx</name></expr></argument>, <argument pos:start="739:40" pos:end="739:46"><expr pos:start="739:40" pos:end="739:46"><operator pos:start="739:40" pos:end="739:40">&amp;</operator><name pos:start="739:41" pos:end="739:46">packet</name></expr></argument>, <argument pos:start="739:49" pos:end="739:55"><expr pos:start="739:49" pos:end="739:55"><name pos:start="739:49" pos:end="739:55">picture</name></expr></argument>, <argument pos:start="739:58" pos:end="739:68"><expr pos:start="739:58" pos:end="739:68"><operator pos:start="739:58" pos:end="739:58">&amp;</operator><name pos:start="739:59" pos:end="739:68">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="741:9" pos:end="743:37"><if pos:start="741:9" pos:end="743:37">if <condition pos:start="741:12" pos:end="741:31">(<expr pos:start="741:13" pos:end="741:30"><operator pos:start="741:13" pos:end="741:13">!</operator><name pos:start="741:14" pos:end="741:16">ret</name> <operator pos:start="741:18" pos:end="741:19">&amp;&amp;</operator> <name pos:start="741:21" pos:end="741:30">got_packet</name></expr>)</condition><block type="pseudo" pos:start="743:13" pos:end="743:37"><block_content pos:start="743:13" pos:end="743:37">

            <expr_stmt pos:start="743:13" pos:end="743:37"><expr pos:start="743:13" pos:end="743:36"><call pos:start="743:13" pos:end="743:36"><name pos:start="743:13" pos:end="743:27">av_packet_unref</name><argument_list pos:start="743:28" pos:end="743:36">(<argument pos:start="743:29" pos:end="743:35"><expr pos:start="743:29" pos:end="743:35"><operator pos:start="743:29" pos:end="743:29">&amp;</operator><name pos:start="743:30" pos:end="743:35">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="745:9" pos:end="745:34"><expr pos:start="745:9" pos:end="745:33"><call pos:start="745:9" pos:end="745:33"><name pos:start="745:9" pos:end="745:15">av_free</name><argument_list pos:start="745:16" pos:end="745:33">(<argument pos:start="745:17" pos:end="745:32"><expr pos:start="745:17" pos:end="745:32"><name pos:start="745:17" pos:end="745:32"><name pos:start="745:17" pos:end="745:23">picture</name><operator pos:start="745:24" pos:end="745:25">-&gt;</operator><name pos:start="745:26" pos:end="745:29">data</name><index pos:start="745:30" pos:end="745:32">[<expr pos:start="745:31" pos:end="745:31"><literal type="number" pos:start="745:31" pos:end="745:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="747:9" pos:end="747:32"><expr pos:start="747:9" pos:end="747:31"><call pos:start="747:9" pos:end="747:31"><name pos:start="747:9" pos:end="747:21">av_frame_free</name><argument_list pos:start="747:22" pos:end="747:31">(<argument pos:start="747:23" pos:end="747:30"><expr pos:start="747:23" pos:end="747:30"><operator pos:start="747:23" pos:end="747:23">&amp;</operator><name pos:start="747:24" pos:end="747:30">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="749:9" pos:end="749:69"><expr pos:start="749:9" pos:end="749:68"><call pos:start="749:9" pos:end="749:68"><name pos:start="749:9" pos:end="749:19">xvid_encore</name><argument_list pos:start="749:20" pos:end="749:68">(<argument pos:start="749:21" pos:end="749:37"><expr pos:start="749:21" pos:end="749:37"><name pos:start="749:21" pos:end="749:37"><name pos:start="749:21" pos:end="749:21">x</name><operator pos:start="749:22" pos:end="749:23">-&gt;</operator><name pos:start="749:24" pos:end="749:37">encoder_handle</name></name></expr></argument>, <argument pos:start="749:40" pos:end="749:55"><expr pos:start="749:40" pos:end="749:55"><name pos:start="749:40" pos:end="749:55">XVID_ENC_DESTROY</name></expr></argument>, <argument pos:start="749:58" pos:end="749:61"><expr pos:start="749:58" pos:end="749:61"><name pos:start="749:58" pos:end="749:61">NULL</name></expr></argument>, <argument pos:start="749:64" pos:end="749:67"><expr pos:start="749:64" pos:end="749:67"><name pos:start="749:64" pos:end="749:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="755:5" pos:end="755:32">/* Create encoder context */</comment>

    <expr_stmt pos:start="757:5" pos:end="757:70"><expr pos:start="757:5" pos:end="757:69"><name pos:start="757:5" pos:end="757:8">xerr</name> <operator pos:start="757:10" pos:end="757:10">=</operator> <call pos:start="757:12" pos:end="757:69"><name pos:start="757:12" pos:end="757:22">xvid_encore</name><argument_list pos:start="757:23" pos:end="757:69">(<argument pos:start="757:24" pos:end="757:27"><expr pos:start="757:24" pos:end="757:27"><name pos:start="757:24" pos:end="757:27">NULL</name></expr></argument>, <argument pos:start="757:30" pos:end="757:44"><expr pos:start="757:30" pos:end="757:44"><name pos:start="757:30" pos:end="757:44">XVID_ENC_CREATE</name></expr></argument>, <argument pos:start="757:47" pos:end="757:62"><expr pos:start="757:47" pos:end="757:62"><operator pos:start="757:47" pos:end="757:47">&amp;</operator><name pos:start="757:48" pos:end="757:62">xvid_enc_create</name></expr></argument>, <argument pos:start="757:65" pos:end="757:68"><expr pos:start="757:65" pos:end="757:68"><name pos:start="757:65" pos:end="757:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="759:5" pos:end="765:5"><if pos:start="759:5" pos:end="765:5">if <condition pos:start="759:8" pos:end="759:13">(<expr pos:start="759:9" pos:end="759:12"><name pos:start="759:9" pos:end="759:12">xerr</name></expr>)</condition> <block pos:start="759:15" pos:end="765:5">{<block_content pos:start="761:9" pos:end="763:32">

        <expr_stmt pos:start="761:9" pos:end="761:82"><expr pos:start="761:9" pos:end="761:81"><call pos:start="761:9" pos:end="761:81"><name pos:start="761:9" pos:end="761:14">av_log</name><argument_list pos:start="761:15" pos:end="761:81">(<argument pos:start="761:16" pos:end="761:20"><expr pos:start="761:16" pos:end="761:20"><name pos:start="761:16" pos:end="761:20">avctx</name></expr></argument>, <argument pos:start="761:23" pos:end="761:34"><expr pos:start="761:23" pos:end="761:34"><name pos:start="761:23" pos:end="761:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="761:37" pos:end="761:80"><expr pos:start="761:37" pos:end="761:80"><literal type="string" pos:start="761:37" pos:end="761:80">"Xvid: Could not create encoder reference\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="763:9" pos:end="763:32">return <expr pos:start="763:16" pos:end="763:31"><name pos:start="763:16" pos:end="763:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="769:5" pos:end="769:48"><expr pos:start="769:5" pos:end="769:47"><name pos:start="769:5" pos:end="769:21"><name pos:start="769:5" pos:end="769:5">x</name><operator pos:start="769:6" pos:end="769:7">-&gt;</operator><name pos:start="769:8" pos:end="769:21">encoder_handle</name></name>  <operator pos:start="769:24" pos:end="769:24">=</operator> <name pos:start="769:26" pos:end="769:47"><name pos:start="769:26" pos:end="769:40">xvid_enc_create</name><operator pos:start="769:41" pos:end="769:41">.</operator><name pos:start="769:42" pos:end="769:47">handle</name></name></expr>;</expr_stmt>



    <return pos:start="773:5" pos:end="773:13">return <expr pos:start="773:12" pos:end="773:12"><literal type="number" pos:start="773:12" pos:end="773:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
