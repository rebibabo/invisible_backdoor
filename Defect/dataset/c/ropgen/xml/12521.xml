<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12521.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">get_physical_address</name> <parameter_list pos:start="1:33" pos:end="5:56">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:41">CPUState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:70"><decl pos:start="1:49" pos:end="1:70"><type pos:start="1:49" pos:end="1:70"><name pos:start="1:49" pos:end="1:60">target_ulong</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:70">physical</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:41"><decl pos:start="3:33" pos:end="3:41"><type pos:start="3:33" pos:end="3:41"><name pos:start="3:33" pos:end="3:35">int</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">prot</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:63"><decl pos:start="3:44" pos:end="3:63"><type pos:start="3:44" pos:end="3:63"><name pos:start="3:44" pos:end="3:55">target_ulong</name></type> <name pos:start="3:57" pos:end="3:63">address</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:38"><decl pos:start="5:33" pos:end="5:38"><type pos:start="5:33" pos:end="5:38"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:38">rw</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:55"><decl pos:start="5:41" pos:end="5:55"><type pos:start="5:41" pos:end="5:55"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:55">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="211:1">{<block_content pos:start="11:5" pos:end="209:15">

    <comment type="block" pos:start="9:5" pos:end="9:46">/* User mode can only access useg/xuseg */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:69"><decl pos:start="11:5" pos:end="11:68"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">user_mode</name> <init pos:start="11:19" pos:end="11:68">= <expr pos:start="11:21" pos:end="11:68"><operator pos:start="11:21" pos:end="11:21">(</operator><name pos:start="11:22" pos:end="11:32"><name pos:start="11:22" pos:end="11:24">env</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:32">hflags</name></name> <operator pos:start="11:34" pos:end="11:34">&amp;</operator> <name pos:start="11:36" pos:end="11:50">MIPS_HFLAG_MODE</name><operator pos:start="11:51" pos:end="11:51">)</operator> <operator pos:start="11:53" pos:end="11:54">==</operator> <name pos:start="11:56" pos:end="11:68">MIPS_HFLAG_UM</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:74"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:23">supervisor_mode</name> <init pos:start="13:25" pos:end="13:74">= <expr pos:start="13:27" pos:end="13:74"><operator pos:start="13:27" pos:end="13:27">(</operator><name pos:start="13:28" pos:end="13:38"><name pos:start="13:28" pos:end="13:30">env</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:38">hflags</name></name> <operator pos:start="13:40" pos:end="13:40">&amp;</operator> <name pos:start="13:42" pos:end="13:56">MIPS_HFLAG_MODE</name><operator pos:start="13:57" pos:end="13:57">)</operator> <operator pos:start="13:59" pos:end="13:60">==</operator> <name pos:start="13:62" pos:end="13:74">MIPS_HFLAG_SM</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:52"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">kernel_mode</name> <init pos:start="15:21" pos:end="15:52">= <expr pos:start="15:23" pos:end="15:52"><operator pos:start="15:23" pos:end="15:23">!</operator><name pos:start="15:24" pos:end="15:32">user_mode</name> <operator pos:start="15:34" pos:end="15:35">&amp;&amp;</operator> <operator pos:start="15:37" pos:end="15:37">!</operator><name pos:start="15:38" pos:end="15:52">supervisor_mode</name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="17:1" pos:end="17:26">#<cpp:directive pos:start="17:2" pos:end="17:3">if</cpp:directive> <expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:11">defined</name><argument_list pos:start="17:12" pos:end="17:26">(<argument pos:start="17:13" pos:end="17:25"><expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="19:5" pos:end="19:54"><decl pos:start="19:5" pos:end="19:53"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:10">UX</name> <init pos:start="19:12" pos:end="19:53">= <expr pos:start="19:14" pos:end="19:53"><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:29"><name pos:start="19:15" pos:end="19:17">env</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:29">CP0_Status</name></name> <operator pos:start="19:31" pos:end="19:31">&amp;</operator> <operator pos:start="19:33" pos:end="19:33">(</operator><literal type="number" pos:start="19:34" pos:end="19:34">1</literal> <operator pos:start="19:36" pos:end="19:37">&lt;&lt;</operator> <name pos:start="19:39" pos:end="19:46">CP0St_UX</name><operator pos:start="19:47" pos:end="19:47">)</operator><operator pos:start="19:48" pos:end="19:48">)</operator> <operator pos:start="19:50" pos:end="19:51">!=</operator> <literal type="number" pos:start="19:53" pos:end="19:53">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:54"><decl pos:start="21:5" pos:end="21:53"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:10">SX</name> <init pos:start="21:12" pos:end="21:53">= <expr pos:start="21:14" pos:end="21:53"><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:17">env</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:29">CP0_Status</name></name> <operator pos:start="21:31" pos:end="21:31">&amp;</operator> <operator pos:start="21:33" pos:end="21:33">(</operator><literal type="number" pos:start="21:34" pos:end="21:34">1</literal> <operator pos:start="21:36" pos:end="21:37">&lt;&lt;</operator> <name pos:start="21:39" pos:end="21:46">CP0St_SX</name><operator pos:start="21:47" pos:end="21:47">)</operator><operator pos:start="21:48" pos:end="21:48">)</operator> <operator pos:start="21:50" pos:end="21:51">!=</operator> <literal type="number" pos:start="21:53" pos:end="21:53">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="26:0"><decl pos:start="23:5" pos:end="23:53"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">KX</name> <init pos:start="23:12" pos:end="23:53">= <expr pos:start="23:14" pos:end="23:53"><operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:17">env</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:29">CP0_Status</name></name> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <operator pos:start="23:33" pos:end="23:33">(</operator><literal type="number" pos:start="23:34" pos:end="23:34">1</literal> <operator pos:start="23:36" pos:end="23:37">&lt;&lt;</operator> <name pos:start="23:39" pos:end="23:46">CP0St_KX</name><operator pos:start="23:47" pos:end="23:47">)</operator><operator pos:start="23:48" pos:end="23:48">)</operator> <operator pos:start="23:50" pos:end="23:51">!=</operator> <literal type="number" pos:start="23:53" pos:end="23:53">0</literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="27:5" pos:end="42:0"><decl pos:start="27:5" pos:end="27:26"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name> <init pos:start="27:13" pos:end="27:26">= <expr pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:26">TLBRET_MATCH</name></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="31:1" pos:end="31:5">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:5"><literal type="number" pos:start="31:5" pos:end="31:5">0</literal></expr></cpp:if>

    if (logfile) {

        fprintf(logfile, "user mode %d h %08x\n",

                user_mode, env-&gt;hflags);

    }

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="45:5" pos:end="206:0"><if pos:start="45:5" pos:end="63:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:15">address</name> <operator pos:start="45:17" pos:end="45:18">&lt;=</operator> <operator pos:start="45:20" pos:end="45:20">(</operator><name pos:start="45:21" pos:end="45:27">int32_t</name><operator pos:start="45:28" pos:end="45:28">)</operator><literal type="number" pos:start="45:29" pos:end="45:40">0x7FFFFFFFUL</literal></expr>)</condition> <block pos:start="45:43" pos:end="63:5">{<block_content pos:start="49:9" pos:end="62:0">

        <comment type="block" pos:start="47:9" pos:end="47:18">/* useg */</comment>

        <if_stmt pos:start="49:9" pos:end="62:0"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:47">(<expr pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:15">env</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">CP0_Status</name></name> <operator pos:start="49:29" pos:end="49:29">&amp;</operator> <operator pos:start="49:31" pos:end="49:31">(</operator><literal type="number" pos:start="49:32" pos:end="49:32">1</literal> <operator pos:start="49:34" pos:end="49:35">&lt;&lt;</operator> <name pos:start="49:37" pos:end="49:45">CP0St_ERL</name><operator pos:start="49:46" pos:end="49:46">)</operator></expr>)</condition> <block pos:start="49:49" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:43">

            <expr_stmt pos:start="51:13" pos:end="51:45"><expr pos:start="51:13" pos:end="51:44"><operator pos:start="51:13" pos:end="51:13">*</operator><name pos:start="51:14" pos:end="51:21">physical</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:31">address</name> <operator pos:start="51:33" pos:end="51:33">&amp;</operator> <literal type="number" pos:start="51:35" pos:end="51:44">0xFFFFFFFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:43"><expr pos:start="53:13" pos:end="53:42"><operator pos:start="53:13" pos:end="53:13">*</operator><name pos:start="53:14" pos:end="53:17">prot</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:29">PAGE_READ</name> <operator pos:start="53:31" pos:end="53:31">|</operator> <name pos:start="53:33" pos:end="53:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="62:0">else <block pos:start="55:16" pos:end="62:0">{<block_content pos:start="57:13" pos:end="57:87">

            <expr_stmt pos:start="57:13" pos:end="57:87"><expr pos:start="57:13" pos:end="57:86"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:86"><name pos:start="57:19" pos:end="57:39"><name pos:start="57:19" pos:end="57:21">env</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">tlb</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:39">map_address</name></name><argument_list pos:start="57:40" pos:end="57:86">(<argument pos:start="57:41" pos:end="57:43"><expr pos:start="57:41" pos:end="57:43"><name pos:start="57:41" pos:end="57:43">env</name></expr></argument>, <argument pos:start="57:46" pos:end="57:53"><expr pos:start="57:46" pos:end="57:53"><name pos:start="57:46" pos:end="57:53">physical</name></expr></argument>, <argument pos:start="57:56" pos:end="57:59"><expr pos:start="57:56" pos:end="57:59"><name pos:start="57:56" pos:end="57:59">prot</name></expr></argument>, <argument pos:start="57:62" pos:end="57:68"><expr pos:start="57:62" pos:end="57:68"><name pos:start="57:62" pos:end="57:68">address</name></expr></argument>, <argument pos:start="57:71" pos:end="57:72"><expr pos:start="57:71" pos:end="57:72"><name pos:start="57:71" pos:end="57:72">rw</name></expr></argument>, <argument pos:start="57:75" pos:end="57:85"><expr pos:start="57:75" pos:end="57:85"><name pos:start="57:75" pos:end="57:85">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="61:1" pos:end="61:26">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:26"><call pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:11">defined</name><argument_list pos:start="61:12" pos:end="61:26">(<argument pos:start="61:13" pos:end="61:25"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    </block_content>}</block></if> <if type="elseif" pos:start="63:7" pos:end="77:5">else if <condition pos:start="63:15" pos:end="63:47">(<expr pos:start="63:16" pos:end="63:46"><name pos:start="63:16" pos:end="63:22">address</name> <operator pos:start="63:24" pos:end="63:24">&lt;</operator> <literal type="number" pos:start="63:26" pos:end="63:46">0x4000000000000000ULL</literal></expr>)</condition> <block pos:start="63:49" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:9">

        <comment type="block" pos:start="65:9" pos:end="65:19">/* xuseg */</comment>

	<if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:67">(<expr pos:start="67:13" pos:end="67:66"><name pos:start="67:13" pos:end="67:14">UX</name> <operator pos:start="67:16" pos:end="67:17">&amp;&amp;</operator> <name pos:start="67:19" pos:end="67:25">address</name> <operator pos:start="67:27" pos:end="67:27">&lt;</operator> <operator pos:start="67:29" pos:end="67:29">(</operator><literal type="number" pos:start="67:30" pos:end="67:50">0x3FFFFFFFFFFFFFFFULL</literal> <operator pos:start="67:52" pos:end="67:52">&amp;</operator> <name pos:start="67:54" pos:end="67:65"><name pos:start="67:54" pos:end="67:56">env</name><operator pos:start="67:57" pos:end="67:58">-&gt;</operator><name pos:start="67:59" pos:end="67:65">SEGMask</name></name><operator pos:start="67:66" pos:end="67:66">)</operator></expr>)</condition> <block pos:start="67:69" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:87">

            <expr_stmt pos:start="69:13" pos:end="69:87"><expr pos:start="69:13" pos:end="69:86"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:86"><name pos:start="69:19" pos:end="69:39"><name pos:start="69:19" pos:end="69:21">env</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:26">tlb</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:39">map_address</name></name><argument_list pos:start="69:40" pos:end="69:86">(<argument pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:43">env</name></expr></argument>, <argument pos:start="69:46" pos:end="69:53"><expr pos:start="69:46" pos:end="69:53"><name pos:start="69:46" pos:end="69:53">physical</name></expr></argument>, <argument pos:start="69:56" pos:end="69:59"><expr pos:start="69:56" pos:end="69:59"><name pos:start="69:56" pos:end="69:59">prot</name></expr></argument>, <argument pos:start="69:62" pos:end="69:68"><expr pos:start="69:62" pos:end="69:68"><name pos:start="69:62" pos:end="69:68">address</name></expr></argument>, <argument pos:start="69:71" pos:end="69:72"><expr pos:start="69:71" pos:end="69:72"><name pos:start="69:71" pos:end="69:72">rw</name></expr></argument>, <argument pos:start="69:75" pos:end="69:85"><expr pos:start="69:75" pos:end="69:85"><name pos:start="69:75" pos:end="69:85">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="71:11" pos:end="75:9">else <block pos:start="71:16" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:33">

	    <expr_stmt pos:start="73:13" pos:end="73:33"><expr pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:15">ret</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <name pos:start="73:19" pos:end="73:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="93:5">else if <condition pos:start="77:15" pos:end="77:47">(<expr pos:start="77:16" pos:end="77:46"><name pos:start="77:16" pos:end="77:22">address</name> <operator pos:start="77:24" pos:end="77:24">&lt;</operator> <literal type="number" pos:start="77:26" pos:end="77:46">0x8000000000000000ULL</literal></expr>)</condition> <block pos:start="77:49" pos:end="93:5">{<block_content pos:start="81:9" pos:end="91:9">

        <comment type="block" pos:start="79:9" pos:end="79:19">/* xsseg */</comment>

	<if_stmt pos:start="81:9" pos:end="91:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="83:67">(<expr pos:start="81:13" pos:end="83:66"><operator pos:start="81:13" pos:end="81:13">(</operator><name pos:start="81:14" pos:end="81:28">supervisor_mode</name> <operator pos:start="81:30" pos:end="81:31">||</operator> <name pos:start="81:33" pos:end="81:43">kernel_mode</name><operator pos:start="81:44" pos:end="81:44">)</operator> <operator pos:start="81:46" pos:end="81:47">&amp;&amp;</operator>

	    <name pos:start="83:13" pos:end="83:14">SX</name> <operator pos:start="83:16" pos:end="83:17">&amp;&amp;</operator> <name pos:start="83:19" pos:end="83:25">address</name> <operator pos:start="83:27" pos:end="83:27">&lt;</operator> <operator pos:start="83:29" pos:end="83:29">(</operator><literal type="number" pos:start="83:30" pos:end="83:50">0x7FFFFFFFFFFFFFFFULL</literal> <operator pos:start="83:52" pos:end="83:52">&amp;</operator> <name pos:start="83:54" pos:end="83:65"><name pos:start="83:54" pos:end="83:56">env</name><operator pos:start="83:57" pos:end="83:58">-&gt;</operator><name pos:start="83:59" pos:end="83:65">SEGMask</name></name><operator pos:start="83:66" pos:end="83:66">)</operator></expr>)</condition> <block pos:start="83:69" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:87">

            <expr_stmt pos:start="85:13" pos:end="85:87"><expr pos:start="85:13" pos:end="85:86"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:86"><name pos:start="85:19" pos:end="85:39"><name pos:start="85:19" pos:end="85:21">env</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:26">tlb</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:39">map_address</name></name><argument_list pos:start="85:40" pos:end="85:86">(<argument pos:start="85:41" pos:end="85:43"><expr pos:start="85:41" pos:end="85:43"><name pos:start="85:41" pos:end="85:43">env</name></expr></argument>, <argument pos:start="85:46" pos:end="85:53"><expr pos:start="85:46" pos:end="85:53"><name pos:start="85:46" pos:end="85:53">physical</name></expr></argument>, <argument pos:start="85:56" pos:end="85:59"><expr pos:start="85:56" pos:end="85:59"><name pos:start="85:56" pos:end="85:59">prot</name></expr></argument>, <argument pos:start="85:62" pos:end="85:68"><expr pos:start="85:62" pos:end="85:68"><name pos:start="85:62" pos:end="85:68">address</name></expr></argument>, <argument pos:start="85:71" pos:end="85:72"><expr pos:start="85:71" pos:end="85:72"><name pos:start="85:71" pos:end="85:72">rw</name></expr></argument>, <argument pos:start="85:75" pos:end="85:85"><expr pos:start="85:75" pos:end="85:85"><name pos:start="85:75" pos:end="85:85">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="87:11" pos:end="91:9">else <block pos:start="87:16" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:33">

	    <expr_stmt pos:start="89:13" pos:end="89:33"><expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="113:5">else if <condition pos:start="93:15" pos:end="93:47">(<expr pos:start="93:16" pos:end="93:46"><name pos:start="93:16" pos:end="93:22">address</name> <operator pos:start="93:24" pos:end="93:24">&lt;</operator> <literal type="number" pos:start="93:26" pos:end="93:46">0xC000000000000000ULL</literal></expr>)</condition> <block pos:start="93:49" pos:end="113:5">{<block_content pos:start="99:9" pos:end="111:9">

        <comment type="block" pos:start="95:9" pos:end="95:20">/* xkphys */</comment>

        <comment type="block" pos:start="97:9" pos:end="97:61">/* XXX: Assumes PABITS = 36 (correct for MIPS64R1) */</comment>

        <if_stmt pos:start="99:9" pos:end="111:9"><if pos:start="99:9" pos:end="107:9">if <condition pos:start="99:12" pos:end="101:70">(<expr pos:start="99:13" pos:end="101:69"><name pos:start="99:13" pos:end="99:23">kernel_mode</name> <operator pos:start="99:25" pos:end="99:26">&amp;&amp;</operator> <name pos:start="99:28" pos:end="99:29">KX</name> <operator pos:start="99:31" pos:end="99:32">&amp;&amp;</operator>

            <operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:20">address</name> <operator pos:start="101:22" pos:end="101:22">&amp;</operator> <literal type="number" pos:start="101:24" pos:end="101:44">0x07FFFFFFFFFFFFFFULL</literal><operator pos:start="101:45" pos:end="101:45">)</operator> <operator pos:start="101:47" pos:end="101:47">&lt;</operator> <literal type="number" pos:start="101:49" pos:end="101:69">0x0000000FFFFFFFFFULL</literal></expr>)</condition> <block pos:start="101:72" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:43">

            <expr_stmt pos:start="103:13" pos:end="103:56"><expr pos:start="103:13" pos:end="103:55"><operator pos:start="103:13" pos:end="103:13">*</operator><name pos:start="103:14" pos:end="103:21">physical</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:31">address</name> <operator pos:start="103:33" pos:end="103:33">&amp;</operator> <literal type="number" pos:start="103:35" pos:end="103:55">0x0000000FFFFFFFFFULL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:43"><expr pos:start="105:13" pos:end="105:42"><operator pos:start="105:13" pos:end="105:13">*</operator><name pos:start="105:14" pos:end="105:17">prot</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:29">PAGE_READ</name> <operator pos:start="105:31" pos:end="105:31">|</operator> <name pos:start="105:33" pos:end="105:42">PAGE_WRITE</name></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="107:11" pos:end="111:9">else <block pos:start="107:16" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:33">

	    <expr_stmt pos:start="109:13" pos:end="109:33"><expr pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="131:5">else if <condition pos:start="113:15" pos:end="113:47">(<expr pos:start="113:16" pos:end="113:46"><name pos:start="113:16" pos:end="113:22">address</name> <operator pos:start="113:24" pos:end="113:24">&lt;</operator> <literal type="number" pos:start="113:26" pos:end="113:46">0xFFFFFFFF80000000ULL</literal></expr>)</condition> <block pos:start="113:49" pos:end="131:5">{<block_content pos:start="117:9" pos:end="130:0">

        <comment type="block" pos:start="115:9" pos:end="115:19">/* xkseg */</comment>

	<if_stmt pos:start="117:9" pos:end="130:0"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="119:61">(<expr pos:start="117:13" pos:end="119:60"><name pos:start="117:13" pos:end="117:23">kernel_mode</name> <operator pos:start="117:25" pos:end="117:26">&amp;&amp;</operator> <name pos:start="117:28" pos:end="117:29">KX</name> <operator pos:start="117:31" pos:end="117:32">&amp;&amp;</operator>

	    <name pos:start="119:13" pos:end="119:19">address</name> <operator pos:start="119:21" pos:end="119:21">&lt;</operator> <operator pos:start="119:23" pos:end="119:23">(</operator><literal type="number" pos:start="119:24" pos:end="119:44">0xFFFFFFFF7FFFFFFFULL</literal> <operator pos:start="119:46" pos:end="119:46">&amp;</operator> <name pos:start="119:48" pos:end="119:59"><name pos:start="119:48" pos:end="119:50">env</name><operator pos:start="119:51" pos:end="119:52">-&gt;</operator><name pos:start="119:53" pos:end="119:59">SEGMask</name></name><operator pos:start="119:60" pos:end="119:60">)</operator></expr>)</condition> <block pos:start="119:63" pos:end="123:9">{<block_content pos:start="121:13" pos:end="121:87">

            <expr_stmt pos:start="121:13" pos:end="121:87"><expr pos:start="121:13" pos:end="121:86"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:86"><name pos:start="121:19" pos:end="121:39"><name pos:start="121:19" pos:end="121:21">env</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:26">tlb</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:39">map_address</name></name><argument_list pos:start="121:40" pos:end="121:86">(<argument pos:start="121:41" pos:end="121:43"><expr pos:start="121:41" pos:end="121:43"><name pos:start="121:41" pos:end="121:43">env</name></expr></argument>, <argument pos:start="121:46" pos:end="121:53"><expr pos:start="121:46" pos:end="121:53"><name pos:start="121:46" pos:end="121:53">physical</name></expr></argument>, <argument pos:start="121:56" pos:end="121:59"><expr pos:start="121:56" pos:end="121:59"><name pos:start="121:56" pos:end="121:59">prot</name></expr></argument>, <argument pos:start="121:62" pos:end="121:68"><expr pos:start="121:62" pos:end="121:68"><name pos:start="121:62" pos:end="121:68">address</name></expr></argument>, <argument pos:start="121:71" pos:end="121:72"><expr pos:start="121:71" pos:end="121:72"><name pos:start="121:71" pos:end="121:72">rw</name></expr></argument>, <argument pos:start="121:75" pos:end="121:85"><expr pos:start="121:75" pos:end="121:85"><name pos:start="121:75" pos:end="121:85">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="123:11" pos:end="130:0">else <block pos:start="123:16" pos:end="130:0">{<block_content pos:start="125:13" pos:end="125:33">

	    <expr_stmt pos:start="125:13" pos:end="125:33"><expr pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

<cpp:endif pos:start="129:1" pos:end="129:6">#<cpp:directive pos:start="129:2" pos:end="129:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <if type="elseif" pos:start="131:7" pos:end="147:5">else if <condition pos:start="131:15" pos:end="131:47">(<expr pos:start="131:16" pos:end="131:46"><name pos:start="131:16" pos:end="131:22">address</name> <operator pos:start="131:24" pos:end="131:24">&lt;</operator> <operator pos:start="131:26" pos:end="131:26">(</operator><name pos:start="131:27" pos:end="131:33">int32_t</name><operator pos:start="131:34" pos:end="131:34">)</operator><literal type="number" pos:start="131:35" pos:end="131:46">0xA0000000UL</literal></expr>)</condition> <block pos:start="131:49" pos:end="147:5">{<block_content pos:start="135:9" pos:end="145:9">

        <comment type="block" pos:start="133:9" pos:end="133:19">/* kseg0 */</comment>

        <if_stmt pos:start="135:9" pos:end="145:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:24">(<expr pos:start="135:13" pos:end="135:23"><name pos:start="135:13" pos:end="135:23">kernel_mode</name></expr>)</condition> <block pos:start="135:26" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:43">

            <expr_stmt pos:start="137:13" pos:end="137:56"><expr pos:start="137:13" pos:end="137:55"><operator pos:start="137:13" pos:end="137:13">*</operator><name pos:start="137:14" pos:end="137:21">physical</name> <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:31">address</name> <operator pos:start="137:33" pos:end="137:33">-</operator> <operator pos:start="137:35" pos:end="137:35">(</operator><name pos:start="137:36" pos:end="137:42">int32_t</name><operator pos:start="137:43" pos:end="137:43">)</operator><literal type="number" pos:start="137:44" pos:end="137:55">0x80000000UL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:43"><expr pos:start="139:13" pos:end="139:42"><operator pos:start="139:13" pos:end="139:13">*</operator><name pos:start="139:14" pos:end="139:17">prot</name> <operator pos:start="139:19" pos:end="139:19">=</operator> <name pos:start="139:21" pos:end="139:29">PAGE_READ</name> <operator pos:start="139:31" pos:end="139:31">|</operator> <name pos:start="139:33" pos:end="139:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="145:9">else <block pos:start="141:16" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:33">

            <expr_stmt pos:start="143:13" pos:end="143:33"><expr pos:start="143:13" pos:end="143:32"><name pos:start="143:13" pos:end="143:15">ret</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <name pos:start="143:19" pos:end="143:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="147:7" pos:end="163:5">else if <condition pos:start="147:15" pos:end="147:47">(<expr pos:start="147:16" pos:end="147:46"><name pos:start="147:16" pos:end="147:22">address</name> <operator pos:start="147:24" pos:end="147:24">&lt;</operator> <operator pos:start="147:26" pos:end="147:26">(</operator><name pos:start="147:27" pos:end="147:33">int32_t</name><operator pos:start="147:34" pos:end="147:34">)</operator><literal type="number" pos:start="147:35" pos:end="147:46">0xC0000000UL</literal></expr>)</condition> <block pos:start="147:49" pos:end="163:5">{<block_content pos:start="151:9" pos:end="161:9">

        <comment type="block" pos:start="149:9" pos:end="149:19">/* kseg1 */</comment>

        <if_stmt pos:start="151:9" pos:end="161:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:24">(<expr pos:start="151:13" pos:end="151:23"><name pos:start="151:13" pos:end="151:23">kernel_mode</name></expr>)</condition> <block pos:start="151:26" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:43">

            <expr_stmt pos:start="153:13" pos:end="153:56"><expr pos:start="153:13" pos:end="153:55"><operator pos:start="153:13" pos:end="153:13">*</operator><name pos:start="153:14" pos:end="153:21">physical</name> <operator pos:start="153:23" pos:end="153:23">=</operator> <name pos:start="153:25" pos:end="153:31">address</name> <operator pos:start="153:33" pos:end="153:33">-</operator> <operator pos:start="153:35" pos:end="153:35">(</operator><name pos:start="153:36" pos:end="153:42">int32_t</name><operator pos:start="153:43" pos:end="153:43">)</operator><literal type="number" pos:start="153:44" pos:end="153:55">0xA0000000UL</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:43"><expr pos:start="155:13" pos:end="155:42"><operator pos:start="155:13" pos:end="155:13">*</operator><name pos:start="155:14" pos:end="155:17">prot</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:29">PAGE_READ</name> <operator pos:start="155:31" pos:end="155:31">|</operator> <name pos:start="155:33" pos:end="155:42">PAGE_WRITE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="157:11" pos:end="161:9">else <block pos:start="157:16" pos:end="161:9">{<block_content pos:start="159:13" pos:end="159:33">

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:15">ret</name> <operator pos:start="159:17" pos:end="159:17">=</operator> <name pos:start="159:19" pos:end="159:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="163:7" pos:end="177:5">else if <condition pos:start="163:15" pos:end="163:47">(<expr pos:start="163:16" pos:end="163:46"><name pos:start="163:16" pos:end="163:22">address</name> <operator pos:start="163:24" pos:end="163:24">&lt;</operator> <operator pos:start="163:26" pos:end="163:26">(</operator><name pos:start="163:27" pos:end="163:33">int32_t</name><operator pos:start="163:34" pos:end="163:34">)</operator><literal type="number" pos:start="163:35" pos:end="163:46">0xE0000000UL</literal></expr>)</condition> <block pos:start="163:49" pos:end="177:5">{<block_content pos:start="167:9" pos:end="175:9">

        <comment type="block" pos:start="165:9" pos:end="165:26">/* sseg (kseg2) */</comment>

        <if_stmt pos:start="167:9" pos:end="175:9"><if pos:start="167:9" pos:end="171:9">if <condition pos:start="167:12" pos:end="167:43">(<expr pos:start="167:13" pos:end="167:42"><name pos:start="167:13" pos:end="167:27">supervisor_mode</name> <operator pos:start="167:29" pos:end="167:30">||</operator> <name pos:start="167:32" pos:end="167:42">kernel_mode</name></expr>)</condition> <block pos:start="167:45" pos:end="171:9">{<block_content pos:start="169:13" pos:end="169:87">

            <expr_stmt pos:start="169:13" pos:end="169:87"><expr pos:start="169:13" pos:end="169:86"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:86"><name pos:start="169:19" pos:end="169:39"><name pos:start="169:19" pos:end="169:21">env</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:26">tlb</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:39">map_address</name></name><argument_list pos:start="169:40" pos:end="169:86">(<argument pos:start="169:41" pos:end="169:43"><expr pos:start="169:41" pos:end="169:43"><name pos:start="169:41" pos:end="169:43">env</name></expr></argument>, <argument pos:start="169:46" pos:end="169:53"><expr pos:start="169:46" pos:end="169:53"><name pos:start="169:46" pos:end="169:53">physical</name></expr></argument>, <argument pos:start="169:56" pos:end="169:59"><expr pos:start="169:56" pos:end="169:59"><name pos:start="169:56" pos:end="169:59">prot</name></expr></argument>, <argument pos:start="169:62" pos:end="169:68"><expr pos:start="169:62" pos:end="169:68"><name pos:start="169:62" pos:end="169:68">address</name></expr></argument>, <argument pos:start="169:71" pos:end="169:72"><expr pos:start="169:71" pos:end="169:72"><name pos:start="169:71" pos:end="169:72">rw</name></expr></argument>, <argument pos:start="169:75" pos:end="169:85"><expr pos:start="169:75" pos:end="169:85"><name pos:start="169:75" pos:end="169:85">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="171:11" pos:end="175:9">else <block pos:start="171:16" pos:end="175:9">{<block_content pos:start="173:13" pos:end="173:33">

            <expr_stmt pos:start="173:13" pos:end="173:33"><expr pos:start="173:13" pos:end="173:32"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <name pos:start="173:19" pos:end="173:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="206:0">else <block pos:start="177:12" pos:end="206:0">{<block_content pos:start="183:9" pos:end="191:9">

        <comment type="block" pos:start="179:9" pos:end="179:19">/* kseg3 */</comment>

        <comment type="block" pos:start="181:9" pos:end="181:48">/* XXX: debug segment is not emulated */</comment>

        <if_stmt pos:start="183:9" pos:end="191:9"><if pos:start="183:9" pos:end="187:9">if <condition pos:start="183:12" pos:end="183:24">(<expr pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:23">kernel_mode</name></expr>)</condition> <block pos:start="183:26" pos:end="187:9">{<block_content pos:start="185:13" pos:end="185:87">

            <expr_stmt pos:start="185:13" pos:end="185:87"><expr pos:start="185:13" pos:end="185:86"><name pos:start="185:13" pos:end="185:15">ret</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <call pos:start="185:19" pos:end="185:86"><name pos:start="185:19" pos:end="185:39"><name pos:start="185:19" pos:end="185:21">env</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:26">tlb</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:39">map_address</name></name><argument_list pos:start="185:40" pos:end="185:86">(<argument pos:start="185:41" pos:end="185:43"><expr pos:start="185:41" pos:end="185:43"><name pos:start="185:41" pos:end="185:43">env</name></expr></argument>, <argument pos:start="185:46" pos:end="185:53"><expr pos:start="185:46" pos:end="185:53"><name pos:start="185:46" pos:end="185:53">physical</name></expr></argument>, <argument pos:start="185:56" pos:end="185:59"><expr pos:start="185:56" pos:end="185:59"><name pos:start="185:56" pos:end="185:59">prot</name></expr></argument>, <argument pos:start="185:62" pos:end="185:68"><expr pos:start="185:62" pos:end="185:68"><name pos:start="185:62" pos:end="185:68">address</name></expr></argument>, <argument pos:start="185:71" pos:end="185:72"><expr pos:start="185:71" pos:end="185:72"><name pos:start="185:71" pos:end="185:72">rw</name></expr></argument>, <argument pos:start="185:75" pos:end="185:85"><expr pos:start="185:75" pos:end="185:85"><name pos:start="185:75" pos:end="185:85">access_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="187:11" pos:end="191:9">else <block pos:start="187:16" pos:end="191:9">{<block_content pos:start="189:13" pos:end="189:33">

            <expr_stmt pos:start="189:13" pos:end="189:33"><expr pos:start="189:13" pos:end="189:32"><name pos:start="189:13" pos:end="189:15">ret</name> <operator pos:start="189:17" pos:end="189:17">=</operator> <name pos:start="189:19" pos:end="189:32">TLBRET_BADADDR</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:if pos:start="195:1" pos:end="195:5">#<cpp:directive pos:start="195:2" pos:end="195:3">if</cpp:directive> <expr pos:start="195:5" pos:end="195:5"><literal type="number" pos:start="195:5" pos:end="195:5">0</literal></expr></cpp:if>

    if (logfile) {

        fprintf(logfile, TARGET_FMT_lx " %d %d =&gt; " TARGET_FMT_lx " %d (%d)\n",

		address, rw, access_type, *physical, *prot, ret);

    }

<cpp:endif pos:start="205:1" pos:end="205:6">#<cpp:directive pos:start="205:2" pos:end="205:6">endif</cpp:directive></cpp:endif>



    <return pos:start="209:5" pos:end="209:15">return <expr pos:start="209:12" pos:end="209:14"><name pos:start="209:12" pos:end="209:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
