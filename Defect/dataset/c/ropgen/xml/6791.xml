<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6791.c" pos:tabs="8"><function pos:start="1:1" pos:end="216:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ff_id3v2_parse</name><parameter_list pos:start="1:27" pos:end="1:87">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">len</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><name pos:start="1:57" pos:end="1:63">uint8_t</name></type> <name pos:start="1:65" pos:end="1:71">version</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:86"><decl pos:start="1:74" pos:end="1:86"><type pos:start="1:74" pos:end="1:86"><name pos:start="1:74" pos:end="1:80">uint8_t</name></type> <name pos:start="1:82" pos:end="1:86">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="216:1">{<block_content pos:start="5:5" pos:end="214:11">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">isv34</name></decl>, <decl pos:start="5:16" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:21">unsync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:17">tlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:15"><name pos:start="9:10" pos:end="9:12">tag</name><index pos:start="9:13" pos:end="9:15">[<expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">5</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:16">next</name></decl>, <decl pos:start="11:19" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:19" pos:end="11:21">end</name> <init pos:start="11:23" pos:end="11:46">= <expr pos:start="11:25" pos:end="11:46"><call pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:33">avio_tell</name><argument_list pos:start="11:34" pos:end="11:40">(<argument pos:start="11:35" pos:end="11:39"><expr pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:39"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="11:42" pos:end="11:42">+</operator> <name pos:start="11:44" pos:end="11:46">len</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">taghdrlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:22">reason</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">AVIOContext</name></type> <name pos:start="17:17" pos:end="17:18">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:17">char</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:25">buffer</name> <init pos:start="19:27" pos:end="19:32">= <expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">buffer_size</name> <init pos:start="21:21" pos:end="21:23">= <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="25:5" pos:end="61:5">switch <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">version</name></expr>)</condition> <block pos:start="25:22" pos:end="61:5">{<block_content pos:start="27:5" pos:end="59:19">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">2</literal></expr>:</case>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:25">(<expr pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:17">flags</name> <operator pos:start="29:19" pos:end="29:19">&amp;</operator> <literal type="number" pos:start="29:21" pos:end="29:24">0x40</literal></expr>)</condition> <block pos:start="29:27" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:23">

            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:18">reason</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="string" pos:start="31:22" pos:end="31:34">"compression"</literal></expr>;</expr_stmt>

            <goto pos:start="33:13" pos:end="33:23">goto <name pos:start="33:18" pos:end="33:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:13">isv34</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:17">taghdrlen</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <literal type="number" pos:start="39:21" pos:end="39:21">6</literal></expr>;</expr_stmt>




    <case pos:start="44:5" pos:end="44:11">case <expr pos:start="44:10" pos:end="44:10"><literal type="number" pos:start="44:10" pos:end="44:10">3</literal></expr>:</case>

    <case pos:start="46:5" pos:end="46:11">case <expr pos:start="46:10" pos:end="46:10"><literal type="number" pos:start="46:10" pos:end="46:10">4</literal></expr>:</case>

        <expr_stmt pos:start="48:9" pos:end="48:18"><expr pos:start="48:9" pos:end="48:17"><name pos:start="48:9" pos:end="48:13">isv34</name> <operator pos:start="48:15" pos:end="48:15">=</operator> <literal type="number" pos:start="48:17" pos:end="48:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="50:9" pos:end="50:23"><expr pos:start="50:9" pos:end="50:22"><name pos:start="50:9" pos:end="50:17">taghdrlen</name> <operator pos:start="50:19" pos:end="50:19">=</operator> <literal type="number" pos:start="50:21" pos:end="50:22">10</literal></expr>;</expr_stmt>




    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:14">reason</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="string" pos:start="57:18" pos:end="57:26">"version"</literal></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:19">goto <name pos:start="59:14" pos:end="59:18">error</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="65:5" pos:end="65:26"><expr pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:10">unsync</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <name pos:start="65:14" pos:end="65:18">flags</name> <operator pos:start="65:20" pos:end="65:20">&amp;</operator> <literal type="number" pos:start="65:22" pos:end="65:25">0x80</literal></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="71:45"><if pos:start="69:5" pos:end="71:45">if <condition pos:start="69:8" pos:end="69:30">(<expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:13">isv34</name> <operator pos:start="69:15" pos:end="69:16">&amp;&amp;</operator> <name pos:start="69:18" pos:end="69:22">flags</name> <operator pos:start="69:24" pos:end="69:24">&amp;</operator> <literal type="number" pos:start="69:26" pos:end="69:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:45"><block_content pos:start="71:9" pos:end="71:45"> <comment type="block" pos:start="69:32" pos:end="69:79">/* Extended header present, just skip over it */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:45"><expr pos:start="71:9" pos:end="71:44"><call pos:start="71:9" pos:end="71:44"><name pos:start="71:9" pos:end="71:17">avio_skip</name><argument_list pos:start="71:18" pos:end="71:44">(<argument pos:start="71:19" pos:end="71:23"><expr pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:23"><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:23">pb</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:43"><expr pos:start="71:26" pos:end="71:43"><call pos:start="71:26" pos:end="71:43"><name pos:start="71:26" pos:end="71:33">get_size</name><argument_list pos:start="71:34" pos:end="71:43">(<argument pos:start="71:35" pos:end="71:39"><expr pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:39"><name pos:start="71:35" pos:end="71:35">s</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:39">pb</name></name></expr></argument>, <argument pos:start="71:42" pos:end="71:42"><expr pos:start="71:42" pos:end="71:42"><literal type="number" pos:start="71:42" pos:end="71:42">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="75:5" pos:end="194:5">while <condition pos:start="75:11" pos:end="75:28">(<expr pos:start="75:12" pos:end="75:27"><name pos:start="75:12" pos:end="75:14">len</name> <operator pos:start="75:16" pos:end="75:17">&gt;=</operator> <name pos:start="75:19" pos:end="75:27">taghdrlen</name></expr>)</condition> <block pos:start="75:30" pos:end="194:5">{<block_content pos:start="77:9" pos:end="192:41">

        <decl_stmt pos:start="77:9" pos:end="77:28"><decl pos:start="77:9" pos:end="77:27"><type pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:16">unsigned</name> <name pos:start="77:18" pos:end="77:20">int</name></type> <name pos:start="77:22" pos:end="77:27">tflags</name></decl>;</decl_stmt>

        <decl_stmt pos:start="79:9" pos:end="79:24"><decl pos:start="79:9" pos:end="79:23"><type pos:start="79:9" pos:end="79:11"><name pos:start="79:9" pos:end="79:11">int</name></type> <name pos:start="79:13" pos:end="79:19">tunsync</name> <init pos:start="79:21" pos:end="79:23">= <expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="83:9" pos:end="109:9"><if pos:start="83:9" pos:end="101:9">if <condition pos:start="83:12" pos:end="83:18">(<expr pos:start="83:13" pos:end="83:17"><name pos:start="83:13" pos:end="83:17">isv34</name></expr>)</condition> <block pos:start="83:20" pos:end="101:9">{<block_content pos:start="85:13" pos:end="99:50">

            <expr_stmt pos:start="85:13" pos:end="85:37"><expr pos:start="85:13" pos:end="85:36"><call pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:21">avio_read</name><argument_list pos:start="85:22" pos:end="85:36">(<argument pos:start="85:23" pos:end="85:27"><expr pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:27"><name pos:start="85:23" pos:end="85:23">s</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:27">pb</name></name></expr></argument>, <argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">tag</name></expr></argument>, <argument pos:start="85:35" pos:end="85:35"><expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:23"><expr pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:15">tag</name><index pos:start="87:16" pos:end="87:18">[<expr pos:start="87:17" pos:end="87:17"><literal type="number" pos:start="87:17" pos:end="87:17">4</literal></expr>]</index></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="89:13" pos:end="95:42"><if pos:start="89:13" pos:end="93:13">if<condition pos:start="89:15" pos:end="89:26">(<expr pos:start="89:16" pos:end="89:25"><name pos:start="89:16" pos:end="89:22">version</name><operator pos:start="89:23" pos:end="89:24">==</operator><literal type="number" pos:start="89:25" pos:end="89:25">3</literal></expr>)</condition><block pos:start="89:27" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:40">

                <expr_stmt pos:start="91:17" pos:end="91:40"><expr pos:start="91:17" pos:end="91:39"><name pos:start="91:17" pos:end="91:20">tlen</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:39"><name pos:start="91:24" pos:end="91:32">avio_rb32</name><argument_list pos:start="91:33" pos:end="91:39">(<argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:34">s</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="93:14" pos:end="95:42">else<block type="pseudo" pos:start="95:17" pos:end="95:42"><block_content pos:start="95:17" pos:end="95:42">

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:20">tlen</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <call pos:start="95:24" pos:end="95:41"><name pos:start="95:24" pos:end="95:31">get_size</name><argument_list pos:start="95:32" pos:end="95:41">(<argument pos:start="95:33" pos:end="95:37"><expr pos:start="95:33" pos:end="95:37"><name pos:start="95:33" pos:end="95:37"><name pos:start="95:33" pos:end="95:33">s</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:37">pb</name></name></expr></argument>, <argument pos:start="95:40" pos:end="95:40"><expr pos:start="95:40" pos:end="95:40"><literal type="number" pos:start="95:40" pos:end="95:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:38"><expr pos:start="97:13" pos:end="97:37"><name pos:start="97:13" pos:end="97:18">tflags</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <call pos:start="97:22" pos:end="97:37"><name pos:start="97:22" pos:end="97:30">avio_rb16</name><argument_list pos:start="97:31" pos:end="97:37">(<argument pos:start="97:32" pos:end="97:36"><expr pos:start="97:32" pos:end="97:36"><name pos:start="97:32" pos:end="97:36"><name pos:start="97:32" pos:end="97:32">s</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:36">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:50"><expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:19">tunsync</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:28">tflags</name> <operator pos:start="99:30" pos:end="99:30">&amp;</operator> <name pos:start="99:32" pos:end="99:49">ID3v2_FLAG_UNSYNCH</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="109:9">else <block pos:start="101:16" pos:end="109:9">{<block_content pos:start="103:13" pos:end="107:36">

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><call pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:21">avio_read</name><argument_list pos:start="103:22" pos:end="103:36">(<argument pos:start="103:23" pos:end="103:27"><expr pos:start="103:23" pos:end="103:27"><name pos:start="103:23" pos:end="103:27"><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:27">pb</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><name pos:start="103:30" pos:end="103:32">tag</name></expr></argument>, <argument pos:start="103:35" pos:end="103:35"><expr pos:start="103:35" pos:end="103:35"><literal type="number" pos:start="103:35" pos:end="103:35">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:18"><name pos:start="105:13" pos:end="105:15">tag</name><index pos:start="105:16" pos:end="105:18">[<expr pos:start="105:17" pos:end="105:17"><literal type="number" pos:start="105:17" pos:end="105:17">3</literal></expr>]</index></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <literal type="number" pos:start="105:22" pos:end="105:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:36"><expr pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:16">tlen</name> <operator pos:start="107:18" pos:end="107:18">=</operator> <call pos:start="107:20" pos:end="107:35"><name pos:start="107:20" pos:end="107:28">avio_rb24</name><argument_list pos:start="107:29" pos:end="107:35">(<argument pos:start="107:30" pos:end="107:34"><expr pos:start="107:30" pos:end="107:34"><name pos:start="107:30" pos:end="107:34"><name pos:start="107:30" pos:end="107:30">s</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="111:9" pos:end="114:32"><if pos:start="111:9" pos:end="114:32">if <condition pos:start="111:12" pos:end="111:27">(<expr pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:16">tlen</name> <operator pos:start="111:18" pos:end="111:18">&gt;</operator> <operator pos:start="111:20" pos:end="111:20">(</operator><literal type="number" pos:start="111:21" pos:end="111:21">1</literal><operator pos:start="111:22" pos:end="111:23">&lt;&lt;</operator><literal type="number" pos:start="111:24" pos:end="111:25">28</literal><operator pos:start="111:26" pos:end="111:26">)</operator></expr>)</condition><block type="pseudo" pos:start="114:9" pos:end="114:32"><block_content pos:start="114:9" pos:end="114:32">


        <expr_stmt pos:start="114:9" pos:end="114:32"><expr pos:start="114:9" pos:end="114:31"><name pos:start="114:9" pos:end="114:11">len</name> <operator pos:start="114:13" pos:end="114:14">-=</operator> <name pos:start="114:16" pos:end="114:24">taghdrlen</name> <operator pos:start="114:26" pos:end="114:26">+</operator> <name pos:start="114:28" pos:end="114:31">tlen</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="118:9" pos:end="123:39"><if pos:start="118:9" pos:end="123:39">if <condition pos:start="118:12" pos:end="118:20">(<expr pos:start="118:13" pos:end="118:19"><name pos:start="118:13" pos:end="118:15">len</name> <operator pos:start="118:17" pos:end="118:17">&lt;</operator> <literal type="number" pos:start="118:19" pos:end="118:19">0</literal></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:39"><block_content pos:start="123:9" pos:end="123:39">




        <expr_stmt pos:start="123:9" pos:end="123:39"><expr pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:12">next</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <call pos:start="123:16" pos:end="123:31"><name pos:start="123:16" pos:end="123:24">avio_tell</name><argument_list pos:start="123:25" pos:end="123:31">(<argument pos:start="123:26" pos:end="123:30"><expr pos:start="123:26" pos:end="123:30"><name pos:start="123:26" pos:end="123:30"><name pos:start="123:26" pos:end="123:26">s</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:30">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:33" pos:end="123:33">+</operator> <name pos:start="123:35" pos:end="123:38">tlen</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="127:40">(<expr pos:start="127:13" pos:end="127:39"><name pos:start="127:13" pos:end="127:18">tflags</name> <operator pos:start="127:20" pos:end="127:20">&amp;</operator> <name pos:start="127:22" pos:end="127:39">ID3v2_FLAG_DATALEN</name></expr>)</condition> <block pos:start="127:42" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:22">



            <expr_stmt pos:start="131:13" pos:end="131:29"><expr pos:start="131:13" pos:end="131:28"><call pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:21">avio_rb32</name><argument_list pos:start="131:22" pos:end="131:28">(<argument pos:start="131:23" pos:end="131:27"><expr pos:start="131:23" pos:end="131:27"><name pos:start="131:23" pos:end="131:27"><name pos:start="131:23" pos:end="131:23">s</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:22"><expr pos:start="133:13" pos:end="133:21"><name pos:start="133:13" pos:end="133:16">tlen</name> <operator pos:start="133:18" pos:end="133:19">-=</operator> <literal type="number" pos:start="133:21" pos:end="133:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="188:9"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:70">(<expr pos:start="139:13" pos:end="139:69"><name pos:start="139:13" pos:end="139:18">tflags</name> <operator pos:start="139:20" pos:end="139:20">&amp;</operator> <operator pos:start="139:22" pos:end="139:22">(</operator><name pos:start="139:23" pos:end="139:43">ID3v2_FLAG_ENCRYPTION</name> <operator pos:start="139:45" pos:end="139:45">|</operator> <name pos:start="139:47" pos:end="139:68">ID3v2_FLAG_COMPRESSION</name><operator pos:start="139:69" pos:end="139:69">)</operator></expr>)</condition> <block pos:start="139:72" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:35">

            <expr_stmt pos:start="141:13" pos:end="141:94"><expr pos:start="141:13" pos:end="141:93"><call pos:start="141:13" pos:end="141:93"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="141:93">(<argument pos:start="141:20" pos:end="141:20"><expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">s</name></expr></argument>, <argument pos:start="141:23" pos:end="141:36"><expr pos:start="141:23" pos:end="141:36"><name pos:start="141:23" pos:end="141:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="141:39" pos:end="141:87"><expr pos:start="141:39" pos:end="141:87"><literal type="string" pos:start="141:39" pos:end="141:87">"Skipping encrypted/compressed ID3v2 frame %s.\n"</literal></expr></argument>, <argument pos:start="141:90" pos:end="141:92"><expr pos:start="141:90" pos:end="141:92"><name pos:start="141:90" pos:end="141:92">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:35"><expr pos:start="143:13" pos:end="143:34"><call pos:start="143:13" pos:end="143:34"><name pos:start="143:13" pos:end="143:21">avio_skip</name><argument_list pos:start="143:22" pos:end="143:34">(<argument pos:start="143:23" pos:end="143:27"><expr pos:start="143:23" pos:end="143:27"><name pos:start="143:23" pos:end="143:27"><name pos:start="143:23" pos:end="143:23">s</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:27">pb</name></name></expr></argument>, <argument pos:start="143:30" pos:end="143:33"><expr pos:start="143:30" pos:end="143:33"><name pos:start="143:30" pos:end="143:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="145:11" pos:end="177:9">else if <condition pos:start="145:19" pos:end="145:33">(<expr pos:start="145:20" pos:end="145:32"><name pos:start="145:20" pos:end="145:25"><name pos:start="145:20" pos:end="145:22">tag</name><index pos:start="145:23" pos:end="145:25">[<expr pos:start="145:24" pos:end="145:24"><literal type="number" pos:start="145:24" pos:end="145:24">0</literal></expr>]</index></name> <operator pos:start="145:27" pos:end="145:28">==</operator> <literal type="char" pos:start="145:30" pos:end="145:32">'T'</literal></expr>)</condition> <block pos:start="145:35" pos:end="177:9">{<block_content pos:start="147:13" pos:end="175:13">

            <if_stmt pos:start="147:13" pos:end="175:13"><if pos:start="147:13" pos:end="171:13">if <condition pos:start="147:16" pos:end="147:34">(<expr pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:22">unsync</name> <operator pos:start="147:24" pos:end="147:25">||</operator> <name pos:start="147:27" pos:end="147:33">tunsync</name></expr>)</condition> <block pos:start="147:36" pos:end="171:13">{<block_content pos:start="149:17" pos:end="169:42">

                <decl_stmt pos:start="149:17" pos:end="149:25"><decl pos:start="149:17" pos:end="149:21"><type pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">int</name></type> <name pos:start="149:21" pos:end="149:21">i</name></decl>, <decl pos:start="149:24" pos:end="149:24"><type ref="prev" pos:start="149:17" pos:end="149:19"/><name pos:start="149:24" pos:end="149:24">j</name></decl>;</decl_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:60"><expr pos:start="151:17" pos:end="151:59"><call pos:start="151:17" pos:end="151:59"><name pos:start="151:17" pos:end="151:30">av_fast_malloc</name><argument_list pos:start="151:31" pos:end="151:59">(<argument pos:start="151:32" pos:end="151:38"><expr pos:start="151:32" pos:end="151:38"><operator pos:start="151:32" pos:end="151:32">&amp;</operator><name pos:start="151:33" pos:end="151:38">buffer</name></expr></argument>, <argument pos:start="151:41" pos:end="151:52"><expr pos:start="151:41" pos:end="151:52"><operator pos:start="151:41" pos:end="151:41">&amp;</operator><name pos:start="151:42" pos:end="151:52">buffer_size</name></expr></argument>, <argument pos:start="151:55" pos:end="151:58"><expr pos:start="151:55" pos:end="151:58"><name pos:start="151:55" pos:end="151:58">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="153:17" pos:end="165:17">for <control pos:start="153:21" pos:end="153:54">(<init pos:start="153:22" pos:end="153:34"><expr pos:start="153:22" pos:end="153:26"><name pos:start="153:22" pos:end="153:22">i</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <literal type="number" pos:start="153:26" pos:end="153:26">0</literal></expr><operator pos:start="153:27" pos:end="153:27">,</operator> <expr pos:start="153:29" pos:end="153:33"><name pos:start="153:29" pos:end="153:29">j</name> <operator pos:start="153:31" pos:end="153:31">=</operator> <literal type="number" pos:start="153:33" pos:end="153:33">0</literal></expr>;</init> <condition pos:start="153:36" pos:end="153:44"><expr pos:start="153:36" pos:end="153:43"><name pos:start="153:36" pos:end="153:36">i</name> <operator pos:start="153:38" pos:end="153:38">&lt;</operator> <name pos:start="153:40" pos:end="153:43">tlen</name></expr>;</condition> <incr pos:start="153:46" pos:end="153:53"><expr pos:start="153:46" pos:end="153:48"><name pos:start="153:46" pos:end="153:46">i</name><operator pos:start="153:47" pos:end="153:48">++</operator></expr><operator pos:start="153:49" pos:end="153:49">,</operator> <expr pos:start="153:51" pos:end="153:53"><name pos:start="153:51" pos:end="153:51">j</name><operator pos:start="153:52" pos:end="153:53">++</operator></expr></incr>)</control> <block pos:start="153:56" pos:end="165:17">{<block_content pos:start="155:21" pos:end="163:21">

                    <expr_stmt pos:start="155:21" pos:end="155:47"><expr pos:start="155:21" pos:end="155:46"><name pos:start="155:21" pos:end="155:29"><name pos:start="155:21" pos:end="155:26">buffer</name><index pos:start="155:27" pos:end="155:29">[<expr pos:start="155:28" pos:end="155:28"><name pos:start="155:28" pos:end="155:28">j</name></expr>]</index></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <call pos:start="155:33" pos:end="155:46"><name pos:start="155:33" pos:end="155:39">avio_r8</name><argument_list pos:start="155:40" pos:end="155:46">(<argument pos:start="155:41" pos:end="155:45"><expr pos:start="155:41" pos:end="155:45"><name pos:start="155:41" pos:end="155:45"><name pos:start="155:41" pos:end="155:41">s</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:45">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="157:21" pos:end="163:21"><if pos:start="157:21" pos:end="163:21">if <condition pos:start="157:24" pos:end="157:69">(<expr pos:start="157:25" pos:end="157:68"><name pos:start="157:25" pos:end="157:25">j</name> <operator pos:start="157:27" pos:end="157:27">&gt;</operator> <literal type="number" pos:start="157:29" pos:end="157:29">0</literal> <operator pos:start="157:31" pos:end="157:32">&amp;&amp;</operator> <operator pos:start="157:34" pos:end="157:34">!</operator><name pos:start="157:35" pos:end="157:43"><name pos:start="157:35" pos:end="157:40">buffer</name><index pos:start="157:41" pos:end="157:43">[<expr pos:start="157:42" pos:end="157:42"><name pos:start="157:42" pos:end="157:42">j</name></expr>]</index></name> <operator pos:start="157:45" pos:end="157:46">&amp;&amp;</operator> <name pos:start="157:48" pos:end="157:60"><name pos:start="157:48" pos:end="157:53">buffer</name><index pos:start="157:54" pos:end="157:60">[<expr pos:start="157:55" pos:end="157:59"><name pos:start="157:55" pos:end="157:55">j</name> <operator pos:start="157:57" pos:end="157:57">-</operator> <literal type="number" pos:start="157:59" pos:end="157:59">1</literal></expr>]</index></name> <operator pos:start="157:62" pos:end="157:63">==</operator> <literal type="number" pos:start="157:65" pos:end="157:68">0xff</literal></expr>)</condition> <block pos:start="157:71" pos:end="163:21">{<block_content pos:start="161:25" pos:end="161:28">

                        <comment type="block" pos:start="159:25" pos:end="159:58">/* Unsynchronised byte, skip it */</comment>

                        <expr_stmt pos:start="161:25" pos:end="161:28"><expr pos:start="161:25" pos:end="161:27"><name pos:start="161:25" pos:end="161:25">j</name><operator pos:start="161:26" pos:end="161:27">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="167:17" pos:end="167:77"><expr pos:start="167:17" pos:end="167:76"><call pos:start="167:17" pos:end="167:76"><name pos:start="167:17" pos:end="167:33">ffio_init_context</name><argument_list pos:start="167:34" pos:end="167:76">(<argument pos:start="167:35" pos:end="167:37"><expr pos:start="167:35" pos:end="167:37"><operator pos:start="167:35" pos:end="167:35">&amp;</operator><name pos:start="167:36" pos:end="167:37">pb</name></expr></argument>, <argument pos:start="167:40" pos:end="167:45"><expr pos:start="167:40" pos:end="167:45"><name pos:start="167:40" pos:end="167:45">buffer</name></expr></argument>, <argument pos:start="167:48" pos:end="167:48"><expr pos:start="167:48" pos:end="167:48"><name pos:start="167:48" pos:end="167:48">j</name></expr></argument>, <argument pos:start="167:51" pos:end="167:51"><expr pos:start="167:51" pos:end="167:51"><literal type="number" pos:start="167:51" pos:end="167:51">0</literal></expr></argument>, <argument pos:start="167:54" pos:end="167:57"><expr pos:start="167:54" pos:end="167:57"><name pos:start="167:54" pos:end="167:57">NULL</name></expr></argument>, <argument pos:start="167:60" pos:end="167:63"><expr pos:start="167:60" pos:end="167:63"><name pos:start="167:60" pos:end="167:63">NULL</name></expr></argument>, <argument pos:start="167:66" pos:end="167:69"><expr pos:start="167:66" pos:end="167:69"><name pos:start="167:66" pos:end="167:69">NULL</name></expr></argument>, <argument pos:start="167:72" pos:end="167:75"><expr pos:start="167:72" pos:end="167:75"><name pos:start="167:72" pos:end="167:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:42"><expr pos:start="169:17" pos:end="169:41"><call pos:start="169:17" pos:end="169:41"><name pos:start="169:17" pos:end="169:25">read_ttag</name><argument_list pos:start="169:26" pos:end="169:41">(<argument pos:start="169:27" pos:end="169:27"><expr pos:start="169:27" pos:end="169:27"><name pos:start="169:27" pos:end="169:27">s</name></expr></argument>, <argument pos:start="169:30" pos:end="169:32"><expr pos:start="169:30" pos:end="169:32"><operator pos:start="169:30" pos:end="169:30">&amp;</operator><name pos:start="169:31" pos:end="169:32">pb</name></expr></argument>, <argument pos:start="169:35" pos:end="169:35"><expr pos:start="169:35" pos:end="169:35"><name pos:start="169:35" pos:end="169:35">j</name></expr></argument>, <argument pos:start="169:38" pos:end="169:40"><expr pos:start="169:38" pos:end="169:40"><name pos:start="169:38" pos:end="169:40">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="171:15" pos:end="175:13">else <block pos:start="171:20" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:47">

                <expr_stmt pos:start="173:17" pos:end="173:47"><expr pos:start="173:17" pos:end="173:46"><call pos:start="173:17" pos:end="173:46"><name pos:start="173:17" pos:end="173:25">read_ttag</name><argument_list pos:start="173:26" pos:end="173:46">(<argument pos:start="173:27" pos:end="173:27"><expr pos:start="173:27" pos:end="173:27"><name pos:start="173:27" pos:end="173:27">s</name></expr></argument>, <argument pos:start="173:30" pos:end="173:34"><expr pos:start="173:30" pos:end="173:34"><name pos:start="173:30" pos:end="173:34"><name pos:start="173:30" pos:end="173:30">s</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:34">pb</name></name></expr></argument>, <argument pos:start="173:37" pos:end="173:40"><expr pos:start="173:37" pos:end="173:40"><name pos:start="173:37" pos:end="173:40">tlen</name></expr></argument>, <argument pos:start="173:43" pos:end="173:45"><expr pos:start="173:43" pos:end="173:45"><name pos:start="173:43" pos:end="173:45">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="179:9" pos:end="188:9">else if <condition pos:start="179:17" pos:end="179:25">(<expr pos:start="179:18" pos:end="179:24"><operator pos:start="179:18" pos:end="179:18">!</operator><name pos:start="179:19" pos:end="179:24"><name pos:start="179:19" pos:end="179:21">tag</name><index pos:start="179:22" pos:end="179:24">[<expr pos:start="179:23" pos:end="179:23"><literal type="number" pos:start="179:23" pos:end="179:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="179:27" pos:end="188:9">{<block_content pos:start="181:13" pos:end="185:35">

            <if_stmt pos:start="181:13" pos:end="183:80"><if pos:start="181:13" pos:end="183:80">if <condition pos:start="181:16" pos:end="181:23">(<expr pos:start="181:17" pos:end="181:22"><name pos:start="181:17" pos:end="181:22"><name pos:start="181:17" pos:end="181:19">tag</name><index pos:start="181:20" pos:end="181:22">[<expr pos:start="181:21" pos:end="181:21"><literal type="number" pos:start="181:21" pos:end="181:21">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="183:17" pos:end="183:80"><block_content pos:start="183:17" pos:end="183:80">

                <expr_stmt pos:start="183:17" pos:end="183:80"><expr pos:start="183:17" pos:end="183:79"><call pos:start="183:17" pos:end="183:79"><name pos:start="183:17" pos:end="183:22">av_log</name><argument_list pos:start="183:23" pos:end="183:79">(<argument pos:start="183:24" pos:end="183:24"><expr pos:start="183:24" pos:end="183:24"><name pos:start="183:24" pos:end="183:24">s</name></expr></argument>, <argument pos:start="183:27" pos:end="183:40"><expr pos:start="183:27" pos:end="183:40"><name pos:start="183:27" pos:end="183:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="183:43" pos:end="183:78"><expr pos:start="183:43" pos:end="183:78"><literal type="string" pos:start="183:43" pos:end="183:78">"invalid frame id, assuming padding"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:35"><expr pos:start="185:13" pos:end="185:34"><call pos:start="185:13" pos:end="185:34"><name pos:start="185:13" pos:end="185:21">avio_skip</name><argument_list pos:start="185:22" pos:end="185:34">(<argument pos:start="185:23" pos:end="185:27"><expr pos:start="185:23" pos:end="185:27"><name pos:start="185:23" pos:end="185:27"><name pos:start="185:23" pos:end="185:23">s</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:27">pb</name></name></expr></argument>, <argument pos:start="185:30" pos:end="185:33"><expr pos:start="185:30" pos:end="185:33"><name pos:start="185:30" pos:end="185:33">tlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="190:9" pos:end="190:32">/* Skip to end of tag */</comment>

        <expr_stmt pos:start="192:9" pos:end="192:41"><expr pos:start="192:9" pos:end="192:40"><call pos:start="192:9" pos:end="192:40"><name pos:start="192:9" pos:end="192:17">avio_seek</name><argument_list pos:start="192:18" pos:end="192:40">(<argument pos:start="192:19" pos:end="192:23"><expr pos:start="192:19" pos:end="192:23"><name pos:start="192:19" pos:end="192:23"><name pos:start="192:19" pos:end="192:19">s</name><operator pos:start="192:20" pos:end="192:21">-&gt;</operator><name pos:start="192:22" pos:end="192:23">pb</name></name></expr></argument>, <argument pos:start="192:26" pos:end="192:29"><expr pos:start="192:26" pos:end="192:29"><name pos:start="192:26" pos:end="192:29">next</name></expr></argument>, <argument pos:start="192:32" pos:end="192:39"><expr pos:start="192:32" pos:end="192:39"><name pos:start="192:32" pos:end="192:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="198:5" pos:end="200:18"><if pos:start="198:5" pos:end="200:18">if <condition pos:start="198:8" pos:end="198:37">(<expr pos:start="198:9" pos:end="198:36"><name pos:start="198:9" pos:end="198:15">version</name> <operator pos:start="198:17" pos:end="198:18">==</operator> <literal type="number" pos:start="198:20" pos:end="198:20">4</literal> <operator pos:start="198:22" pos:end="198:23">&amp;&amp;</operator> <name pos:start="198:25" pos:end="198:29">flags</name> <operator pos:start="198:31" pos:end="198:31">&amp;</operator> <literal type="number" pos:start="198:33" pos:end="198:36">0x10</literal></expr>)</condition><block type="pseudo" pos:start="200:9" pos:end="200:18"><block_content pos:start="200:9" pos:end="200:18"> <comment type="block" pos:start="198:39" pos:end="198:88">/* Footer preset, always 10 bytes, skip over it */</comment>

        <expr_stmt pos:start="200:9" pos:end="200:18"><expr pos:start="200:9" pos:end="200:17"><name pos:start="200:9" pos:end="200:11">end</name> <operator pos:start="200:13" pos:end="200:14">+=</operator> <literal type="number" pos:start="200:16" pos:end="200:17">10</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



  <label pos:start="204:3" pos:end="204:8"><name pos:start="204:3" pos:end="204:7">error</name>:</label>

    <if_stmt pos:start="206:5" pos:end="208:92"><if pos:start="206:5" pos:end="208:92">if <condition pos:start="206:8" pos:end="206:15">(<expr pos:start="206:9" pos:end="206:14"><name pos:start="206:9" pos:end="206:14">reason</name></expr>)</condition><block type="pseudo" pos:start="208:9" pos:end="208:92"><block_content pos:start="208:9" pos:end="208:92">

        <expr_stmt pos:start="208:9" pos:end="208:92"><expr pos:start="208:9" pos:end="208:91"><call pos:start="208:9" pos:end="208:91"><name pos:start="208:9" pos:end="208:14">av_log</name><argument_list pos:start="208:15" pos:end="208:91">(<argument pos:start="208:16" pos:end="208:16"><expr pos:start="208:16" pos:end="208:16"><name pos:start="208:16" pos:end="208:16">s</name></expr></argument>, <argument pos:start="208:19" pos:end="208:29"><expr pos:start="208:19" pos:end="208:29"><name pos:start="208:19" pos:end="208:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="208:32" pos:end="208:73"><expr pos:start="208:32" pos:end="208:73"><literal type="string" pos:start="208:32" pos:end="208:73">"ID3v2.%d tag skipped, cannot handle %s\n"</literal></expr></argument>, <argument pos:start="208:76" pos:end="208:82"><expr pos:start="208:76" pos:end="208:82"><name pos:start="208:76" pos:end="208:82">version</name></expr></argument>, <argument pos:start="208:85" pos:end="208:90"><expr pos:start="208:85" pos:end="208:90"><name pos:start="208:85" pos:end="208:90">reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="210:5" pos:end="210:36"><expr pos:start="210:5" pos:end="210:35"><call pos:start="210:5" pos:end="210:35"><name pos:start="210:5" pos:end="210:13">avio_seek</name><argument_list pos:start="210:14" pos:end="210:35">(<argument pos:start="210:15" pos:end="210:19"><expr pos:start="210:15" pos:end="210:19"><name pos:start="210:15" pos:end="210:19"><name pos:start="210:15" pos:end="210:15">s</name><operator pos:start="210:16" pos:end="210:17">-&gt;</operator><name pos:start="210:18" pos:end="210:19">pb</name></name></expr></argument>, <argument pos:start="210:22" pos:end="210:24"><expr pos:start="210:22" pos:end="210:24"><name pos:start="210:22" pos:end="210:24">end</name></expr></argument>, <argument pos:start="210:27" pos:end="210:34"><expr pos:start="210:27" pos:end="210:34"><name pos:start="210:27" pos:end="210:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="212:5" pos:end="212:20"><expr pos:start="212:5" pos:end="212:19"><call pos:start="212:5" pos:end="212:19"><name pos:start="212:5" pos:end="212:11">av_free</name><argument_list pos:start="212:12" pos:end="212:19">(<argument pos:start="212:13" pos:end="212:18"><expr pos:start="212:13" pos:end="212:18"><name pos:start="212:13" pos:end="212:18">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="214:5" pos:end="214:11">return;</return>

</block_content>}</block></function></unit>
