<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17656.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">tcg_dump_info</name><parameter_list pos:start="1:19" pos:end="3:69">(<parameter pos:start="1:20" pos:end="1:26"><decl pos:start="1:20" pos:end="1:26"><type pos:start="1:20" pos:end="1:26"><name pos:start="1:20" pos:end="1:23">FILE</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:26">f</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:68"><function_decl pos:start="3:20" pos:end="3:68"><type pos:start="3:20" pos:end="3:22"><name pos:start="3:20" pos:end="3:22">int</name></type> (<modifier pos:start="3:25" pos:end="3:25">*</modifier><name pos:start="3:26" pos:end="3:36">cpu_fprintf</name>)<parameter_list pos:start="3:38" pos:end="3:68">(<parameter pos:start="3:39" pos:end="3:45"><decl pos:start="3:39" pos:end="3:45"><type pos:start="3:39" pos:end="3:45"><name pos:start="3:39" pos:end="3:42">FILE</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:45">f</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:57">char</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">fmt</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:67"><decl pos:start="3:65" pos:end="3:67"><type pos:start="3:65" pos:end="3:67"><modifier pos:start="3:65" pos:end="3:67">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:20">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">TCGContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:28">= <expr pos:start="7:21" pos:end="7:28"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:28">tcg_ctx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:15">tot</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:7">tot</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:24"><name pos:start="13:11" pos:end="13:11">s</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:24">interm_time</name></name> <operator pos:start="13:26" pos:end="13:26">+</operator> <name pos:start="13:28" pos:end="13:39"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:39">code_time</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:34"><expr pos:start="15:5" pos:end="17:33"><call pos:start="15:5" pos:end="17:33"><name pos:start="15:5" pos:end="15:15">cpu_fprintf</name><argument_list pos:start="15:16" pos:end="17:33">(<argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">f</name></expr></argument>, <argument pos:start="15:20" pos:end="15:75"><expr pos:start="15:20" pos:end="15:75"><literal type="string" pos:start="15:20" pos:end="15:42">"JIT cycles          %"</literal> <name pos:start="15:44" pos:end="15:49">PRId64</name> <literal type="string" pos:start="15:51" pos:end="15:75">" (%0.3f s at 2.4 GHz)\n"</literal></expr></argument>,

                <argument pos:start="17:17" pos:end="17:19"><expr pos:start="17:17" pos:end="17:19"><name pos:start="17:17" pos:end="17:19">tot</name></expr></argument>, <argument pos:start="17:22" pos:end="17:32"><expr pos:start="17:22" pos:end="17:32"><name pos:start="17:22" pos:end="17:24">tot</name> <operator pos:start="17:26" pos:end="17:26">/</operator> <literal type="number" pos:start="17:28" pos:end="17:32">2.4e9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="25:96"><expr pos:start="19:5" pos:end="25:95"><call pos:start="19:5" pos:end="25:95"><name pos:start="19:5" pos:end="19:15">cpu_fprintf</name><argument_list pos:start="19:16" pos:end="25:95">(<argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">f</name></expr></argument>, <argument pos:start="19:20" pos:end="19:84"><expr pos:start="19:20" pos:end="19:84"><literal type="string" pos:start="19:20" pos:end="19:42">"translated TBs      %"</literal> <name pos:start="19:44" pos:end="19:49">PRId64</name> <literal type="string" pos:start="19:51" pos:end="19:63">" (aborted=%"</literal> <name pos:start="19:65" pos:end="19:70">PRId64</name> <literal type="string" pos:start="19:72" pos:end="19:84">" %0.1f%%)\n"</literal></expr></argument>, 

                <argument pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:27">tb_count</name></name></expr></argument>, 

                <argument pos:start="23:17" pos:end="23:42"><expr pos:start="23:17" pos:end="23:42"><name pos:start="23:17" pos:end="23:28"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:28">tb_count1</name></name> <operator pos:start="23:30" pos:end="23:30">-</operator> <name pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:42">tb_count</name></name></expr></argument>,

                <argument pos:start="25:17" pos:end="25:94"><expr pos:start="25:17" pos:end="25:94"><ternary pos:start="25:17" pos:end="25:94"><condition pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:28">tb_count1</name></name></expr> ?</condition><then pos:start="25:32" pos:end="25:90"> <expr pos:start="25:32" pos:end="25:90"><operator pos:start="25:32" pos:end="25:32">(</operator><name pos:start="25:33" pos:end="25:38">double</name><operator pos:start="25:39" pos:end="25:39">)</operator><operator pos:start="25:40" pos:end="25:40">(</operator><name pos:start="25:41" pos:end="25:52"><name pos:start="25:41" pos:end="25:41">s</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:52">tb_count1</name></name> <operator pos:start="25:54" pos:end="25:54">-</operator> <name pos:start="25:56" pos:end="25:66"><name pos:start="25:56" pos:end="25:56">s</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:66">tb_count</name></name><operator pos:start="25:67" pos:end="25:67">)</operator> <operator pos:start="25:69" pos:end="25:69">/</operator> <name pos:start="25:71" pos:end="25:82"><name pos:start="25:71" pos:end="25:71">s</name><operator pos:start="25:72" pos:end="25:73">-&gt;</operator><name pos:start="25:74" pos:end="25:82">tb_count1</name></name> <operator pos:start="25:84" pos:end="25:84">*</operator> <literal type="number" pos:start="25:86" pos:end="25:90">100.0</literal></expr> </then><else pos:start="25:92" pos:end="25:94">: <expr pos:start="25:94" pos:end="25:94"><literal type="number" pos:start="25:94" pos:end="25:94">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:86"><expr pos:start="27:5" pos:end="29:85"><call pos:start="27:5" pos:end="29:85"><name pos:start="27:5" pos:end="27:15">cpu_fprintf</name><argument_list pos:start="27:16" pos:end="29:85">(<argument pos:start="27:17" pos:end="27:17"><expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">f</name></expr></argument>, <argument pos:start="27:20" pos:end="27:55"><expr pos:start="27:20" pos:end="27:55"><literal type="string" pos:start="27:20" pos:end="27:55">"avg ops/TB          %0.1f max=%d\n"</literal></expr></argument>, 

                <argument pos:start="29:17" pos:end="29:67"><expr pos:start="29:17" pos:end="29:67"><ternary pos:start="29:17" pos:end="29:67"><condition pos:start="29:17" pos:end="29:29"><expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">s</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">tb_count</name></name></expr> ?</condition><then pos:start="29:31" pos:end="29:63"> <expr pos:start="29:31" pos:end="29:63"><operator pos:start="29:31" pos:end="29:31">(</operator><name pos:start="29:32" pos:end="29:37">double</name><operator pos:start="29:38" pos:end="29:38">)</operator><name pos:start="29:39" pos:end="29:49"><name pos:start="29:39" pos:end="29:39">s</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:49">op_count</name></name> <operator pos:start="29:51" pos:end="29:51">/</operator> <name pos:start="29:53" pos:end="29:63"><name pos:start="29:53" pos:end="29:53">s</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:63">tb_count</name></name></expr> </then><else pos:start="29:65" pos:end="29:67">: <expr pos:start="29:67" pos:end="29:67"><literal type="number" pos:start="29:67" pos:end="29:67">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="29:70" pos:end="29:84"><expr pos:start="29:70" pos:end="29:84"><name pos:start="29:70" pos:end="29:84"><name pos:start="29:70" pos:end="29:70">s</name><operator pos:start="29:71" pos:end="29:72">-&gt;</operator><name pos:start="29:73" pos:end="29:84">op_count_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="35:59"><expr pos:start="31:5" pos:end="35:58"><call pos:start="31:5" pos:end="35:58"><name pos:start="31:5" pos:end="31:15">cpu_fprintf</name><argument_list pos:start="31:16" pos:end="35:58">(<argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">f</name></expr></argument>, <argument pos:start="31:20" pos:end="31:48"><expr pos:start="31:20" pos:end="31:48"><literal type="string" pos:start="31:20" pos:end="31:48">"deleted ops/TB      %0.2f\n"</literal></expr></argument>,

                <argument pos:start="33:17" pos:end="35:57"><expr pos:start="33:17" pos:end="35:57"><ternary pos:start="33:17" pos:end="35:57"><condition pos:start="33:17" pos:end="33:29"><expr pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">tb_count</name></name></expr> ?</condition><then pos:start="35:17" pos:end="35:53"> 

                <expr pos:start="35:17" pos:end="35:53"><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:23">double</name><operator pos:start="35:24" pos:end="35:24">)</operator><name pos:start="35:25" pos:end="35:39"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:39">del_op_count</name></name> <operator pos:start="35:41" pos:end="35:41">/</operator> <name pos:start="35:43" pos:end="35:53"><name pos:start="35:43" pos:end="35:43">s</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:53">tb_count</name></name></expr> </then><else pos:start="35:55" pos:end="35:57">: <expr pos:start="35:57" pos:end="35:57"><literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="43:35"><expr pos:start="37:5" pos:end="43:34"><call pos:start="37:5" pos:end="43:34"><name pos:start="37:5" pos:end="37:15">cpu_fprintf</name><argument_list pos:start="37:16" pos:end="43:34">(<argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">f</name></expr></argument>, <argument pos:start="37:20" pos:end="37:55"><expr pos:start="37:20" pos:end="37:55"><literal type="string" pos:start="37:20" pos:end="37:55">"avg temps/TB        %0.2f max=%d\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="41:55"><expr pos:start="39:17" pos:end="41:55"><ternary pos:start="39:17" pos:end="41:55"><condition pos:start="39:17" pos:end="39:29"><expr pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:27">tb_count</name></name></expr> ?</condition><then pos:start="41:17" pos:end="41:51"> 

                <expr pos:start="41:17" pos:end="41:51"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:23">double</name><operator pos:start="41:24" pos:end="41:24">)</operator><name pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:37">temp_count</name></name> <operator pos:start="41:39" pos:end="41:39">/</operator> <name pos:start="41:41" pos:end="41:51"><name pos:start="41:41" pos:end="41:41">s</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:51">tb_count</name></name></expr> </then><else pos:start="41:53" pos:end="41:55">: <expr pos:start="41:55" pos:end="41:55"><literal type="number" pos:start="41:55" pos:end="41:55">0</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="43:17" pos:end="43:33"><expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:33">temp_count_max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="47:5" pos:end="49:61"><expr pos:start="47:5" pos:end="49:60"><call pos:start="47:5" pos:end="49:60"><name pos:start="47:5" pos:end="47:15">cpu_fprintf</name><argument_list pos:start="47:16" pos:end="49:60">(<argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">f</name></expr></argument>, <argument pos:start="47:20" pos:end="47:48"><expr pos:start="47:20" pos:end="47:48"><literal type="string" pos:start="47:20" pos:end="47:48">"cycles/op           %0.1f\n"</literal></expr></argument>, 

                <argument pos:start="49:17" pos:end="49:59"><expr pos:start="49:17" pos:end="49:59"><ternary pos:start="49:17" pos:end="49:59"><condition pos:start="49:17" pos:end="49:29"><expr pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:17">s</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:27">op_count</name></name></expr> ?</condition><then pos:start="49:31" pos:end="49:55"> <expr pos:start="49:31" pos:end="49:55"><operator pos:start="49:31" pos:end="49:31">(</operator><name pos:start="49:32" pos:end="49:37">double</name><operator pos:start="49:38" pos:end="49:38">)</operator><name pos:start="49:39" pos:end="49:41">tot</name> <operator pos:start="49:43" pos:end="49:43">/</operator> <name pos:start="49:45" pos:end="49:55"><name pos:start="49:45" pos:end="49:45">s</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:55">op_count</name></name></expr> </then><else pos:start="49:57" pos:end="49:59">: <expr pos:start="49:59" pos:end="49:59"><literal type="number" pos:start="49:59" pos:end="49:59">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:67"><expr pos:start="51:5" pos:end="53:66"><call pos:start="51:5" pos:end="53:66"><name pos:start="51:5" pos:end="51:15">cpu_fprintf</name><argument_list pos:start="51:16" pos:end="53:66">(<argument pos:start="51:17" pos:end="51:17"><expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">f</name></expr></argument>, <argument pos:start="51:20" pos:end="51:48"><expr pos:start="51:20" pos:end="51:48"><literal type="string" pos:start="51:20" pos:end="51:48">"cycles/in byte      %0.1f\n"</literal></expr></argument>, 

                <argument pos:start="53:17" pos:end="53:65"><expr pos:start="53:17" pos:end="53:65"><ternary pos:start="53:17" pos:end="53:65"><condition pos:start="53:17" pos:end="53:32"><expr pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:30">code_in_len</name></name></expr> ?</condition><then pos:start="53:34" pos:end="53:61"> <expr pos:start="53:34" pos:end="53:61"><operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:40">double</name><operator pos:start="53:41" pos:end="53:41">)</operator><name pos:start="53:42" pos:end="53:44">tot</name> <operator pos:start="53:46" pos:end="53:46">/</operator> <name pos:start="53:48" pos:end="53:61"><name pos:start="53:48" pos:end="53:48">s</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:61">code_in_len</name></name></expr> </then><else pos:start="53:63" pos:end="53:65">: <expr pos:start="53:65" pos:end="53:65"><literal type="number" pos:start="53:65" pos:end="53:65">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:69"><expr pos:start="55:5" pos:end="57:68"><call pos:start="55:5" pos:end="57:68"><name pos:start="55:5" pos:end="55:15">cpu_fprintf</name><argument_list pos:start="55:16" pos:end="57:68">(<argument pos:start="55:17" pos:end="55:17"><expr pos:start="55:17" pos:end="55:17"><name pos:start="55:17" pos:end="55:17">f</name></expr></argument>, <argument pos:start="55:20" pos:end="55:48"><expr pos:start="55:20" pos:end="55:48"><literal type="string" pos:start="55:20" pos:end="55:48">"cycles/out byte     %0.1f\n"</literal></expr></argument>, 

                <argument pos:start="57:17" pos:end="57:67"><expr pos:start="57:17" pos:end="57:67"><ternary pos:start="57:17" pos:end="57:67"><condition pos:start="57:17" pos:end="57:33"><expr pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:31"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:31">code_out_len</name></name></expr> ?</condition><then pos:start="57:35" pos:end="57:63"> <expr pos:start="57:35" pos:end="57:63"><operator pos:start="57:35" pos:end="57:35">(</operator><name pos:start="57:36" pos:end="57:41">double</name><operator pos:start="57:42" pos:end="57:42">)</operator><name pos:start="57:43" pos:end="57:45">tot</name> <operator pos:start="57:47" pos:end="57:47">/</operator> <name pos:start="57:49" pos:end="57:63"><name pos:start="57:49" pos:end="57:49">s</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:63">code_out_len</name></name></expr> </then><else pos:start="57:65" pos:end="57:67">: <expr pos:start="57:67" pos:end="57:67"><literal type="number" pos:start="57:67" pos:end="57:67">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:16"><if pos:start="59:5" pos:end="61:16">if <condition pos:start="59:8" pos:end="59:17">(<expr pos:start="59:9" pos:end="59:16"><name pos:start="59:9" pos:end="59:11">tot</name> <operator pos:start="59:13" pos:end="59:14">==</operator> <literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:16"><block_content pos:start="61:9" pos:end="61:16">

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:11">tot</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <literal type="number" pos:start="61:15" pos:end="61:15">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:54"><expr pos:start="63:5" pos:end="65:53"><call pos:start="63:5" pos:end="65:53"><name pos:start="63:5" pos:end="63:15">cpu_fprintf</name><argument_list pos:start="63:16" pos:end="65:53">(<argument pos:start="63:17" pos:end="63:17"><expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">f</name></expr></argument>, <argument pos:start="63:20" pos:end="63:50"><expr pos:start="63:20" pos:end="63:50"><literal type="string" pos:start="63:20" pos:end="63:50">"  gen_interm time   %0.1f%%\n"</literal></expr></argument>, 

                <argument pos:start="65:17" pos:end="65:52"><expr pos:start="65:17" pos:end="65:52"><operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:23">double</name><operator pos:start="65:24" pos:end="65:24">)</operator><name pos:start="65:25" pos:end="65:38"><name pos:start="65:25" pos:end="65:25">s</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:38">interm_time</name></name> <operator pos:start="65:40" pos:end="65:40">/</operator> <name pos:start="65:42" pos:end="65:44">tot</name> <operator pos:start="65:46" pos:end="65:46">*</operator> <literal type="number" pos:start="65:48" pos:end="65:52">100.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:52"><expr pos:start="67:5" pos:end="69:51"><call pos:start="67:5" pos:end="69:51"><name pos:start="67:5" pos:end="67:15">cpu_fprintf</name><argument_list pos:start="67:16" pos:end="69:51">(<argument pos:start="67:17" pos:end="67:17"><expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">f</name></expr></argument>, <argument pos:start="67:20" pos:end="67:50"><expr pos:start="67:20" pos:end="67:50"><literal type="string" pos:start="67:20" pos:end="67:50">"  gen_code time     %0.1f%%\n"</literal></expr></argument>, 

                <argument pos:start="69:17" pos:end="69:50"><expr pos:start="69:17" pos:end="69:50"><operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:23">double</name><operator pos:start="69:24" pos:end="69:24">)</operator><name pos:start="69:25" pos:end="69:36"><name pos:start="69:25" pos:end="69:25">s</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:36">code_time</name></name> <operator pos:start="69:38" pos:end="69:38">/</operator> <name pos:start="69:40" pos:end="69:42">tot</name> <operator pos:start="69:44" pos:end="69:44">*</operator> <literal type="number" pos:start="69:46" pos:end="69:50">100.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:80"><expr pos:start="71:5" pos:end="73:79"><call pos:start="71:5" pos:end="73:79"><name pos:start="71:5" pos:end="71:15">cpu_fprintf</name><argument_list pos:start="71:16" pos:end="73:79">(<argument pos:start="71:17" pos:end="71:17"><expr pos:start="71:17" pos:end="71:17"><name pos:start="71:17" pos:end="71:17">f</name></expr></argument>, <argument pos:start="71:20" pos:end="71:50"><expr pos:start="71:20" pos:end="71:50"><literal type="string" pos:start="71:20" pos:end="71:50">"liveness/code time  %0.1f%%\n"</literal></expr></argument>, 

                <argument pos:start="73:17" pos:end="73:78"><expr pos:start="73:17" pos:end="73:78"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:23">double</name><operator pos:start="73:24" pos:end="73:24">)</operator><name pos:start="73:25" pos:end="73:34"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:34">la_time</name></name> <operator pos:start="73:36" pos:end="73:36">/</operator> <operator pos:start="73:38" pos:end="73:38">(</operator><ternary pos:start="73:39" pos:end="73:69"><condition pos:start="73:39" pos:end="73:52"><expr pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:39">s</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:50">code_time</name></name></expr> ?</condition><then pos:start="73:54" pos:end="73:65"> <expr pos:start="73:54" pos:end="73:65"><name pos:start="73:54" pos:end="73:65"><name pos:start="73:54" pos:end="73:54">s</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:65">code_time</name></name></expr> </then><else pos:start="73:67" pos:end="73:69">: <expr pos:start="73:69" pos:end="73:69"><literal type="number" pos:start="73:69" pos:end="73:69">1</literal></expr></else></ternary><operator pos:start="73:70" pos:end="73:70">)</operator> <operator pos:start="73:72" pos:end="73:72">*</operator> <literal type="number" pos:start="73:74" pos:end="73:78">100.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:34"><expr pos:start="75:5" pos:end="77:33"><call pos:start="75:5" pos:end="77:33"><name pos:start="75:5" pos:end="75:15">cpu_fprintf</name><argument_list pos:start="75:16" pos:end="77:33">(<argument pos:start="75:17" pos:end="75:17"><expr pos:start="75:17" pos:end="75:17"><name pos:start="75:17" pos:end="75:17">f</name></expr></argument>, <argument pos:start="75:20" pos:end="75:54"><expr pos:start="75:20" pos:end="75:54"><literal type="string" pos:start="75:20" pos:end="75:42">"cpu_restore count   %"</literal> <name pos:start="75:44" pos:end="75:49">PRId64</name> <literal type="string" pos:start="75:51" pos:end="75:54">"\n"</literal></expr></argument>,

                <argument pos:start="77:17" pos:end="77:32"><expr pos:start="77:17" pos:end="77:32"><name pos:start="77:17" pos:end="77:32"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:32">restore_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:83"><expr pos:start="79:5" pos:end="81:82"><call pos:start="79:5" pos:end="81:82"><name pos:start="79:5" pos:end="79:15">cpu_fprintf</name><argument_list pos:start="79:16" pos:end="81:82">(<argument pos:start="79:17" pos:end="79:17"><expr pos:start="79:17" pos:end="79:17"><name pos:start="79:17" pos:end="79:17">f</name></expr></argument>, <argument pos:start="79:20" pos:end="79:48"><expr pos:start="79:20" pos:end="79:48"><literal type="string" pos:start="79:20" pos:end="79:48">"  avg cycles        %0.1f\n"</literal></expr></argument>,

                <argument pos:start="81:17" pos:end="81:81"><expr pos:start="81:17" pos:end="81:81"><ternary pos:start="81:17" pos:end="81:81"><condition pos:start="81:17" pos:end="81:34"><expr pos:start="81:17" pos:end="81:32"><name pos:start="81:17" pos:end="81:32"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:32">restore_count</name></name></expr> ?</condition><then pos:start="81:36" pos:end="81:77"> <expr pos:start="81:36" pos:end="81:77"><operator pos:start="81:36" pos:end="81:36">(</operator><name pos:start="81:37" pos:end="81:42">double</name><operator pos:start="81:43" pos:end="81:43">)</operator><name pos:start="81:44" pos:end="81:58"><name pos:start="81:44" pos:end="81:44">s</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:58">restore_time</name></name> <operator pos:start="81:60" pos:end="81:60">/</operator> <name pos:start="81:62" pos:end="81:77"><name pos:start="81:62" pos:end="81:62">s</name><operator pos:start="81:63" pos:end="81:64">-&gt;</operator><name pos:start="81:65" pos:end="81:77">restore_count</name></name></expr> </then><else pos:start="81:79" pos:end="81:81">: <expr pos:start="81:81" pos:end="81:81"><literal type="number" pos:start="81:81" pos:end="81:81">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:20"><expr pos:start="85:5" pos:end="85:19"><call pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:17">dump_op_count</name><argument_list pos:start="85:18" pos:end="85:19">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
