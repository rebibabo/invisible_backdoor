<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10241.c" pos:tabs="8"><macro pos:start="1:1" pos:end="6:0"><name pos:start="1:1" pos:end="1:9">_syscall3</name><argument_list pos:start="1:10" pos:end="6:0">(<argument pos:start="1:11" pos:end="1:13">int</argument>,<argument pos:start="1:15" pos:end="1:27">sys_faccessat</argument>,<argument pos:start="1:29" pos:end="1:31">int</argument>,<argument pos:start="1:33" pos:end="1:37">dirfd</argument>,<argument pos:start="1:39" pos:end="1:50">const char *</argument>,<argument pos:start="1:52" pos:end="1:59">pathname</argument>,<argument pos:start="1:61" pos:end="1:63">int</argument>,<argument pos:start="1:65" pos:end="1:68">mode</argument>)</argument_list></macro>

<cpp:endif pos:start="3:1" pos:end="3:6">#<cpp:directive pos:start="3:2" pos:end="3:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="5:1" pos:end="5:57">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:57"><call pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:31">(<argument pos:start="5:13" pos:end="5:30"><expr pos:start="5:13" pos:end="5:30"><name pos:start="5:13" pos:end="5:30">TARGET_NR_fchmodat</name></expr></argument>)</argument_list></call> <operator pos:start="5:33" pos:end="5:34">&amp;&amp;</operator> <call pos:start="5:36" pos:end="5:57"><name pos:start="5:36" pos:end="5:42">defined</name><argument_list pos:start="5:43" pos:end="5:57">(<argument pos:start="5:44" pos:end="5:56"><expr pos:start="5:44" pos:end="5:56"><name pos:start="5:44" pos:end="5:56">__NR_fchmodat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="7:1" pos:end="12:0"><name pos:start="7:1" pos:end="7:9">_syscall3</name><argument_list pos:start="7:10" pos:end="12:0">(<argument pos:start="7:11" pos:end="7:13">int</argument>,<argument pos:start="7:15" pos:end="7:26">sys_fchmodat</argument>,<argument pos:start="7:28" pos:end="7:30">int</argument>,<argument pos:start="7:32" pos:end="7:36">dirfd</argument>,<argument pos:start="7:38" pos:end="7:49">const char *</argument>,<argument pos:start="7:51" pos:end="7:58">pathname</argument>, <argument pos:start="7:61" pos:end="7:66">mode_t</argument>,<argument pos:start="7:68" pos:end="7:71">mode</argument>)</argument_list></macro>

<cpp:endif pos:start="9:1" pos:end="9:6">#<cpp:directive pos:start="9:2" pos:end="9:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="11:1" pos:end="11:79">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:79"><call pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:11">defined</name><argument_list pos:start="11:12" pos:end="11:31">(<argument pos:start="11:13" pos:end="11:30"><expr pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:30">TARGET_NR_fchownat</name></expr></argument>)</argument_list></call> <operator pos:start="11:33" pos:end="11:34">&amp;&amp;</operator> <call pos:start="11:36" pos:end="11:57"><name pos:start="11:36" pos:end="11:42">defined</name><argument_list pos:start="11:43" pos:end="11:57">(<argument pos:start="11:44" pos:end="11:56"><expr pos:start="11:44" pos:end="11:56"><name pos:start="11:44" pos:end="11:56">__NR_fchownat</name></expr></argument>)</argument_list></call> <operator pos:start="11:59" pos:end="11:60">&amp;&amp;</operator> <call pos:start="11:62" pos:end="11:79"><name pos:start="11:62" pos:end="11:68">defined</name><argument_list pos:start="11:69" pos:end="11:79">(<argument pos:start="11:70" pos:end="11:78"><expr pos:start="11:70" pos:end="11:78"><name pos:start="11:70" pos:end="11:78">USE_UID16</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="13:1" pos:end="22:0"><name pos:start="13:1" pos:end="13:9">_syscall5</name><argument_list pos:start="13:10" pos:end="22:0">(<argument pos:start="13:11" pos:end="13:13">int</argument>,<argument pos:start="13:15" pos:end="13:26">sys_fchownat</argument>,<argument pos:start="13:28" pos:end="13:30">int</argument>,<argument pos:start="13:32" pos:end="13:36">dirfd</argument>,<argument pos:start="13:38" pos:end="13:49">const char *</argument>,<argument pos:start="13:51" pos:end="13:58">pathname</argument>,

          <argument pos:start="15:11" pos:end="15:15">uid_t</argument>,<argument pos:start="15:17" pos:end="15:21">owner</argument>,<argument pos:start="15:23" pos:end="15:27">gid_t</argument>,<argument pos:start="15:29" pos:end="15:33">group</argument>,<argument pos:start="15:35" pos:end="15:37">int</argument>,<argument pos:start="15:39" pos:end="15:43">flags</argument>)</argument_list></macro>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="19:1" pos:end="21:31">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="21:31"><operator pos:start="19:5" pos:end="19:5">(</operator><call pos:start="19:6" pos:end="19:33"><name pos:start="19:6" pos:end="19:12">defined</name><argument_list pos:start="19:13" pos:end="19:33">(<argument pos:start="19:14" pos:end="19:32"><expr pos:start="19:14" pos:end="19:32"><name pos:start="19:14" pos:end="19:32">TARGET_NR_fstatat64</name></expr></argument>)</argument_list></call> <operator pos:start="19:35" pos:end="19:36">||</operator> <call pos:start="19:38" pos:end="19:66"><name pos:start="19:38" pos:end="19:44">defined</name><argument_list pos:start="19:45" pos:end="19:66">(<argument pos:start="19:46" pos:end="19:65"><expr pos:start="19:46" pos:end="19:65"><name pos:start="19:46" pos:end="19:65">TARGET_NR_newfstatat</name></expr></argument>)</argument_list></call><operator pos:start="19:67" pos:end="19:67">)</operator> <operator pos:start="19:69" pos:end="19:70">&amp;&amp;</operator> \

        <call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:15">defined</name><argument_list pos:start="21:16" pos:end="21:31">(<argument pos:start="21:17" pos:end="21:30"><expr pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:30">__NR_fstatat64</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="23:1" pos:end="30:0"><name pos:start="23:1" pos:end="23:9">_syscall4</name><argument_list pos:start="23:10" pos:end="30:0">(<argument pos:start="23:11" pos:end="23:13">int</argument>,<argument pos:start="23:15" pos:end="23:27">sys_fstatat64</argument>,<argument pos:start="23:29" pos:end="23:31">int</argument>,<argument pos:start="23:33" pos:end="23:37">dirfd</argument>,<argument pos:start="23:39" pos:end="23:50">const char *</argument>,<argument pos:start="23:52" pos:end="23:59">pathname</argument>,

          <argument pos:start="25:11" pos:end="25:23">struct stat *</argument>,<argument pos:start="25:25" pos:end="25:27">buf</argument>,<argument pos:start="25:29" pos:end="25:31">int</argument>,<argument pos:start="25:33" pos:end="25:37">flags</argument>)</argument_list></macro>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="29:1" pos:end="29:59">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:11">defined</name><argument_list pos:start="29:12" pos:end="29:32">(<argument pos:start="29:13" pos:end="29:31"><expr pos:start="29:13" pos:end="29:31"><name pos:start="29:13" pos:end="29:31">TARGET_NR_futimesat</name></expr></argument>)</argument_list></call> <operator pos:start="29:34" pos:end="29:35">&amp;&amp;</operator> <call pos:start="29:37" pos:end="29:59"><name pos:start="29:37" pos:end="29:43">defined</name><argument_list pos:start="29:44" pos:end="29:59">(<argument pos:start="29:45" pos:end="29:58"><expr pos:start="29:45" pos:end="29:58"><name pos:start="29:45" pos:end="29:58">__NR_futimesat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="31:1" pos:end="40:0"><name pos:start="31:1" pos:end="31:9">_syscall3</name><argument_list pos:start="31:10" pos:end="40:0">(<argument pos:start="31:11" pos:end="31:13">int</argument>,<argument pos:start="31:15" pos:end="31:27">sys_futimesat</argument>,<argument pos:start="31:29" pos:end="31:31">int</argument>,<argument pos:start="31:33" pos:end="31:37">dirfd</argument>,<argument pos:start="31:39" pos:end="31:50">const char *</argument>,<argument pos:start="31:52" pos:end="31:59">pathname</argument>,

         <argument pos:start="33:10" pos:end="33:31">const struct timeval *</argument>,<argument pos:start="33:33" pos:end="33:37">times</argument>)</argument_list></macro>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="37:1" pos:end="39:32">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="39:32"><operator pos:start="37:5" pos:end="37:5">(</operator><call pos:start="37:6" pos:end="37:34"><name pos:start="37:6" pos:end="37:12">defined</name><argument_list pos:start="37:13" pos:end="37:34">(<argument pos:start="37:14" pos:end="37:33"><expr pos:start="37:14" pos:end="37:33"><name pos:start="37:14" pos:end="37:33">TARGET_NR_newfstatat</name></expr></argument>)</argument_list></call> <operator pos:start="37:36" pos:end="37:37">||</operator> <call pos:start="37:39" pos:end="37:66"><name pos:start="37:39" pos:end="37:45">defined</name><argument_list pos:start="37:46" pos:end="37:66">(<argument pos:start="37:47" pos:end="37:65"><expr pos:start="37:47" pos:end="37:65"><name pos:start="37:47" pos:end="37:65">TARGET_NR_fstatat64</name></expr></argument>)</argument_list></call> <operator pos:start="37:68" pos:end="37:68">)</operator> <operator pos:start="37:70" pos:end="37:71">&amp;&amp;</operator> \

        <call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:15">defined</name><argument_list pos:start="39:16" pos:end="39:32">(<argument pos:start="39:17" pos:end="39:31"><expr pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:31">__NR_newfstatat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="41:1" pos:end="48:0"><name pos:start="41:1" pos:end="41:9">_syscall4</name><argument_list pos:start="41:10" pos:end="48:0">(<argument pos:start="41:11" pos:end="41:13">int</argument>,<argument pos:start="41:15" pos:end="41:28">sys_newfstatat</argument>,<argument pos:start="41:30" pos:end="41:32">int</argument>,<argument pos:start="41:34" pos:end="41:38">dirfd</argument>,<argument pos:start="41:40" pos:end="41:51">const char *</argument>,<argument pos:start="41:53" pos:end="41:60">pathname</argument>,

          <argument pos:start="43:11" pos:end="43:23">struct stat *</argument>,<argument pos:start="43:25" pos:end="43:27">buf</argument>,<argument pos:start="43:29" pos:end="43:31">int</argument>,<argument pos:start="43:33" pos:end="43:37">flags</argument>)</argument_list></macro>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="47:1" pos:end="47:53">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:53"><call pos:start="47:5" pos:end="47:29"><name pos:start="47:5" pos:end="47:11">defined</name><argument_list pos:start="47:12" pos:end="47:29">(<argument pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:28"><name pos:start="47:13" pos:end="47:28">TARGET_NR_linkat</name></expr></argument>)</argument_list></call> <operator pos:start="47:31" pos:end="47:32">&amp;&amp;</operator> <call pos:start="47:34" pos:end="47:53"><name pos:start="47:34" pos:end="47:40">defined</name><argument_list pos:start="47:41" pos:end="47:53">(<argument pos:start="47:42" pos:end="47:52"><expr pos:start="47:42" pos:end="47:52"><name pos:start="47:42" pos:end="47:52">__NR_linkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="49:1" pos:end="56:0"><name pos:start="49:1" pos:end="49:9">_syscall5</name><argument_list pos:start="49:10" pos:end="56:0">(<argument pos:start="49:11" pos:end="49:13">int</argument>,<argument pos:start="49:15" pos:end="49:24">sys_linkat</argument>,<argument pos:start="49:26" pos:end="49:28">int</argument>,<argument pos:start="49:30" pos:end="49:37">olddirfd</argument>,<argument pos:start="49:39" pos:end="49:50">const char *</argument>,<argument pos:start="49:52" pos:end="49:58">oldpath</argument>,

      <argument pos:start="51:7" pos:end="51:9">int</argument>,<argument pos:start="51:11" pos:end="51:18">newdirfd</argument>,<argument pos:start="51:20" pos:end="51:31">const char *</argument>,<argument pos:start="51:33" pos:end="51:39">newpath</argument>,<argument pos:start="51:41" pos:end="51:43">int</argument>,<argument pos:start="51:45" pos:end="51:49">flags</argument>)</argument_list></macro>

<cpp:endif pos:start="53:1" pos:end="53:6">#<cpp:directive pos:start="53:2" pos:end="53:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="55:1" pos:end="55:55">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:55"><call pos:start="55:5" pos:end="55:30"><name pos:start="55:5" pos:end="55:11">defined</name><argument_list pos:start="55:12" pos:end="55:30">(<argument pos:start="55:13" pos:end="55:29"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:29">TARGET_NR_mkdirat</name></expr></argument>)</argument_list></call> <operator pos:start="55:32" pos:end="55:33">&amp;&amp;</operator> <call pos:start="55:35" pos:end="55:55"><name pos:start="55:35" pos:end="55:41">defined</name><argument_list pos:start="55:42" pos:end="55:55">(<argument pos:start="55:43" pos:end="55:54"><expr pos:start="55:43" pos:end="55:54"><name pos:start="55:43" pos:end="55:54">__NR_mkdirat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="57:1" pos:end="62:0"><name pos:start="57:1" pos:end="57:9">_syscall3</name><argument_list pos:start="57:10" pos:end="62:0">(<argument pos:start="57:11" pos:end="57:13">int</argument>,<argument pos:start="57:15" pos:end="57:25">sys_mkdirat</argument>,<argument pos:start="57:27" pos:end="57:29">int</argument>,<argument pos:start="57:31" pos:end="57:35">dirfd</argument>,<argument pos:start="57:37" pos:end="57:48">const char *</argument>,<argument pos:start="57:50" pos:end="57:57">pathname</argument>,<argument pos:start="57:59" pos:end="57:64">mode_t</argument>,<argument pos:start="57:66" pos:end="57:69">mode</argument>)</argument_list></macro>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="61:1" pos:end="61:55">#<cpp:directive pos:start="61:2" pos:end="61:3">if</cpp:directive> <expr pos:start="61:5" pos:end="61:55"><call pos:start="61:5" pos:end="61:30"><name pos:start="61:5" pos:end="61:11">defined</name><argument_list pos:start="61:12" pos:end="61:30">(<argument pos:start="61:13" pos:end="61:29"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:29">TARGET_NR_mknodat</name></expr></argument>)</argument_list></call> <operator pos:start="61:32" pos:end="61:33">&amp;&amp;</operator> <call pos:start="61:35" pos:end="61:55"><name pos:start="61:35" pos:end="61:41">defined</name><argument_list pos:start="61:42" pos:end="61:55">(<argument pos:start="61:43" pos:end="61:54"><expr pos:start="61:43" pos:end="61:54"><name pos:start="61:43" pos:end="61:54">__NR_mknodat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="63:1" pos:end="70:0"><name pos:start="63:1" pos:end="63:9">_syscall4</name><argument_list pos:start="63:10" pos:end="70:0">(<argument pos:start="63:11" pos:end="63:13">int</argument>,<argument pos:start="63:15" pos:end="63:25">sys_mknodat</argument>,<argument pos:start="63:27" pos:end="63:29">int</argument>,<argument pos:start="63:31" pos:end="63:35">dirfd</argument>,<argument pos:start="63:37" pos:end="63:48">const char *</argument>,<argument pos:start="63:50" pos:end="63:57">pathname</argument>,

          <argument pos:start="65:11" pos:end="65:16">mode_t</argument>,<argument pos:start="65:18" pos:end="65:21">mode</argument>,<argument pos:start="65:23" pos:end="65:27">dev_t</argument>,<argument pos:start="65:29" pos:end="65:31">dev</argument>)</argument_list></macro>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="69:1" pos:end="69:53">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:53"><call pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:11">defined</name><argument_list pos:start="69:12" pos:end="69:29">(<argument pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:28">TARGET_NR_openat</name></expr></argument>)</argument_list></call> <operator pos:start="69:31" pos:end="69:32">&amp;&amp;</operator> <call pos:start="69:34" pos:end="69:53"><name pos:start="69:34" pos:end="69:40">defined</name><argument_list pos:start="69:41" pos:end="69:53">(<argument pos:start="69:42" pos:end="69:52"><expr pos:start="69:42" pos:end="69:52"><name pos:start="69:42" pos:end="69:52">__NR_openat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="71:1" pos:end="76:0"><name pos:start="71:1" pos:end="71:9">_syscall4</name><argument_list pos:start="71:10" pos:end="76:0">(<argument pos:start="71:11" pos:end="71:13">int</argument>,<argument pos:start="71:15" pos:end="71:24">sys_openat</argument>,<argument pos:start="71:26" pos:end="71:28">int</argument>,<argument pos:start="71:30" pos:end="71:34">dirfd</argument>,<argument pos:start="71:36" pos:end="71:47">const char *</argument>,<argument pos:start="71:49" pos:end="71:56">pathname</argument>,<argument pos:start="71:58" pos:end="71:60">int</argument>,<argument pos:start="71:62" pos:end="71:66">flags</argument>,<argument pos:start="71:68" pos:end="71:73">mode_t</argument>,<argument pos:start="71:75" pos:end="71:78">mode</argument>)</argument_list></macro>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="75:1" pos:end="75:61">#<cpp:directive pos:start="75:2" pos:end="75:3">if</cpp:directive> <expr pos:start="75:5" pos:end="75:61"><call pos:start="75:5" pos:end="75:33"><name pos:start="75:5" pos:end="75:11">defined</name><argument_list pos:start="75:12" pos:end="75:33">(<argument pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:32">TARGET_NR_readlinkat</name></expr></argument>)</argument_list></call> <operator pos:start="75:35" pos:end="75:36">&amp;&amp;</operator> <call pos:start="75:38" pos:end="75:61"><name pos:start="75:38" pos:end="75:44">defined</name><argument_list pos:start="75:45" pos:end="75:61">(<argument pos:start="75:46" pos:end="75:60"><expr pos:start="75:46" pos:end="75:60"><name pos:start="75:46" pos:end="75:60">__NR_readlinkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="77:1" pos:end="84:0"><name pos:start="77:1" pos:end="77:9">_syscall4</name><argument_list pos:start="77:10" pos:end="84:0">(<argument pos:start="77:11" pos:end="77:13">int</argument>,<argument pos:start="77:15" pos:end="77:28">sys_readlinkat</argument>,<argument pos:start="77:30" pos:end="77:32">int</argument>,<argument pos:start="77:34" pos:end="77:38">dirfd</argument>,<argument pos:start="77:40" pos:end="77:51">const char *</argument>,<argument pos:start="77:53" pos:end="77:60">pathname</argument>,

          <argument pos:start="79:11" pos:end="79:16">char *</argument>,<argument pos:start="79:18" pos:end="79:20">buf</argument>,<argument pos:start="79:22" pos:end="79:27">size_t</argument>,<argument pos:start="79:29" pos:end="79:35">bufsize</argument>)</argument_list></macro>

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="83:1" pos:end="83:57">#<cpp:directive pos:start="83:2" pos:end="83:3">if</cpp:directive> <expr pos:start="83:5" pos:end="83:57"><call pos:start="83:5" pos:end="83:31"><name pos:start="83:5" pos:end="83:11">defined</name><argument_list pos:start="83:12" pos:end="83:31">(<argument pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:30">TARGET_NR_renameat</name></expr></argument>)</argument_list></call> <operator pos:start="83:33" pos:end="83:34">&amp;&amp;</operator> <call pos:start="83:36" pos:end="83:57"><name pos:start="83:36" pos:end="83:42">defined</name><argument_list pos:start="83:43" pos:end="83:57">(<argument pos:start="83:44" pos:end="83:56"><expr pos:start="83:44" pos:end="83:56"><name pos:start="83:44" pos:end="83:56">__NR_renameat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="85:1" pos:end="92:0"><name pos:start="85:1" pos:end="85:9">_syscall4</name><argument_list pos:start="85:10" pos:end="92:0">(<argument pos:start="85:11" pos:end="85:13">int</argument>,<argument pos:start="85:15" pos:end="85:26">sys_renameat</argument>,<argument pos:start="85:28" pos:end="85:30">int</argument>,<argument pos:start="85:32" pos:end="85:39">olddirfd</argument>,<argument pos:start="85:41" pos:end="85:52">const char *</argument>,<argument pos:start="85:54" pos:end="85:60">oldpath</argument>,

          <argument pos:start="87:11" pos:end="87:13">int</argument>,<argument pos:start="87:15" pos:end="87:22">newdirfd</argument>,<argument pos:start="87:24" pos:end="87:35">const char *</argument>,<argument pos:start="87:37" pos:end="87:43">newpath</argument>)</argument_list></macro>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="91:1" pos:end="91:59">#<cpp:directive pos:start="91:2" pos:end="91:3">if</cpp:directive> <expr pos:start="91:5" pos:end="91:59"><call pos:start="91:5" pos:end="91:32"><name pos:start="91:5" pos:end="91:11">defined</name><argument_list pos:start="91:12" pos:end="91:32">(<argument pos:start="91:13" pos:end="91:31"><expr pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:31">TARGET_NR_symlinkat</name></expr></argument>)</argument_list></call> <operator pos:start="91:34" pos:end="91:35">&amp;&amp;</operator> <call pos:start="91:37" pos:end="91:59"><name pos:start="91:37" pos:end="91:43">defined</name><argument_list pos:start="91:44" pos:end="91:59">(<argument pos:start="91:45" pos:end="91:58"><expr pos:start="91:45" pos:end="91:58"><name pos:start="91:45" pos:end="91:58">__NR_symlinkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="93:1" pos:end="100:0"><name pos:start="93:1" pos:end="93:9">_syscall3</name><argument_list pos:start="93:10" pos:end="100:0">(<argument pos:start="93:11" pos:end="93:13">int</argument>,<argument pos:start="93:15" pos:end="93:27">sys_symlinkat</argument>,<argument pos:start="93:29" pos:end="93:40">const char *</argument>,<argument pos:start="93:42" pos:end="93:48">oldpath</argument>,

          <argument pos:start="95:11" pos:end="95:13">int</argument>,<argument pos:start="95:15" pos:end="95:22">newdirfd</argument>,<argument pos:start="95:24" pos:end="95:35">const char *</argument>,<argument pos:start="95:37" pos:end="95:43">newpath</argument>)</argument_list></macro>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="99:1" pos:end="99:57">#<cpp:directive pos:start="99:2" pos:end="99:3">if</cpp:directive> <expr pos:start="99:5" pos:end="99:57"><call pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:11">defined</name><argument_list pos:start="99:12" pos:end="99:31">(<argument pos:start="99:13" pos:end="99:30"><expr pos:start="99:13" pos:end="99:30"><name pos:start="99:13" pos:end="99:30">TARGET_NR_unlinkat</name></expr></argument>)</argument_list></call> <operator pos:start="99:33" pos:end="99:34">&amp;&amp;</operator> <call pos:start="99:36" pos:end="99:57"><name pos:start="99:36" pos:end="99:42">defined</name><argument_list pos:start="99:43" pos:end="99:57">(<argument pos:start="99:44" pos:end="99:56"><expr pos:start="99:44" pos:end="99:56"><name pos:start="99:44" pos:end="99:56">__NR_unlinkat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="101:1" pos:end="106:0"><name pos:start="101:1" pos:end="101:9">_syscall3</name><argument_list pos:start="101:10" pos:end="106:0">(<argument pos:start="101:11" pos:end="101:13">int</argument>,<argument pos:start="101:15" pos:end="101:26">sys_unlinkat</argument>,<argument pos:start="101:28" pos:end="101:30">int</argument>,<argument pos:start="101:32" pos:end="101:36">dirfd</argument>,<argument pos:start="101:38" pos:end="101:49">const char *</argument>,<argument pos:start="101:51" pos:end="101:58">pathname</argument>,<argument pos:start="101:60" pos:end="101:62">int</argument>,<argument pos:start="101:64" pos:end="101:68">flags</argument>)</argument_list></macro>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="105:1" pos:end="105:59">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:59"><call pos:start="105:5" pos:end="105:32"><name pos:start="105:5" pos:end="105:11">defined</name><argument_list pos:start="105:12" pos:end="105:32">(<argument pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:31">TARGET_NR_utimensat</name></expr></argument>)</argument_list></call> <operator pos:start="105:34" pos:end="105:35">&amp;&amp;</operator> <call pos:start="105:37" pos:end="105:59"><name pos:start="105:37" pos:end="105:43">defined</name><argument_list pos:start="105:44" pos:end="105:59">(<argument pos:start="105:45" pos:end="105:58"><expr pos:start="105:45" pos:end="105:58"><name pos:start="105:45" pos:end="105:58">__NR_utimensat</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro pos:start="107:1" pos:end="126:0"><name pos:start="107:1" pos:end="107:9">_syscall4</name><argument_list pos:start="107:10" pos:end="126:0">(<argument pos:start="107:11" pos:end="107:13">int</argument>,<argument pos:start="107:15" pos:end="107:27">sys_utimensat</argument>,<argument pos:start="107:29" pos:end="107:31">int</argument>,<argument pos:start="107:33" pos:end="107:37">dirfd</argument>,<argument pos:start="107:39" pos:end="107:50">const char *</argument>,<argument pos:start="107:52" pos:end="107:59">pathname</argument>,

          <argument pos:start="109:11" pos:end="109:33">const struct timespec *</argument>,<argument pos:start="109:35" pos:end="109:37">tsp</argument>,<argument pos:start="109:39" pos:end="109:41">int</argument>,<argument pos:start="109:43" pos:end="109:47">flags</argument>)</argument_list></macro>

<cpp:endif pos:start="111:1" pos:end="111:6">#<cpp:directive pos:start="111:2" pos:end="111:6">endif</cpp:directive></cpp:endif>



<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="115:8" pos:end="115:26">/* CONFIG_ATFILE */</comment>



<cpp:ifdef pos:start="119:1" pos:end="119:21">#<cpp:directive pos:start="119:2" pos:end="119:6">ifdef</cpp:directive> <name pos:start="119:8" pos:end="119:21">CONFIG_INOTIFY</name></cpp:ifdef>

<cpp:include pos:start="121:1" pos:end="121:24">#<cpp:directive pos:start="121:2" pos:end="121:8">include</cpp:directive> <cpp:file pos:start="121:10" pos:end="121:24">&lt;sys/inotify.h&gt;</cpp:file></cpp:include>



<cpp:if pos:start="125:1" pos:end="125:65">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:65"><call pos:start="125:5" pos:end="125:35"><name pos:start="125:5" pos:end="125:11">defined</name><argument_list pos:start="125:12" pos:end="125:35">(<argument pos:start="125:13" pos:end="125:34"><expr pos:start="125:13" pos:end="125:34"><name pos:start="125:13" pos:end="125:34">TARGET_NR_inotify_init</name></expr></argument>)</argument_list></call> <operator pos:start="125:37" pos:end="125:38">&amp;&amp;</operator> <call pos:start="125:40" pos:end="125:65"><name pos:start="125:40" pos:end="125:46">defined</name><argument_list pos:start="125:47" pos:end="125:65">(<argument pos:start="125:48" pos:end="125:64"><expr pos:start="125:48" pos:end="125:64"><name pos:start="125:48" pos:end="125:64">__NR_inotify_init</name></expr></argument>)</argument_list></call></expr></cpp:if>

<function pos:start="127:1" pos:end="133:1"><type pos:start="127:1" pos:end="127:10"><specifier pos:start="127:1" pos:end="127:6">static</specifier> <name pos:start="127:8" pos:end="127:10">int</name></type> <name pos:start="127:12" pos:end="127:27">sys_inotify_init</name><parameter_list pos:start="127:28" pos:end="127:33">(<parameter pos:start="127:29" pos:end="127:32"><decl pos:start="127:29" pos:end="127:32"><type pos:start="127:29" pos:end="127:32"><name pos:start="127:29" pos:end="127:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="129:1" pos:end="133:1">{<block_content pos:start="131:3" pos:end="131:26">

  <return pos:start="131:3" pos:end="131:26">return <expr pos:start="131:10" pos:end="131:25"><operator pos:start="131:10" pos:end="131:10">(</operator><call pos:start="131:11" pos:end="131:24"><name pos:start="131:11" pos:end="131:22">inotify_init</name><argument_list pos:start="131:23" pos:end="131:24">()</argument_list></call><operator pos:start="131:25" pos:end="131:25">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
