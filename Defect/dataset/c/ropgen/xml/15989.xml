<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15989.c" pos:tabs="8"><function pos:start="1:1" pos:end="34:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">do_vm_stop</name><parameter_list pos:start="1:22" pos:end="1:37">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:30"><name pos:start="1:23" pos:end="1:30">RunState</name></type> <name pos:start="1:32" pos:end="1:36">state</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="34:1">{<block_content pos:start="5:5" pos:end="32:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="21:5"><if pos:start="9:5" pos:end="21:5">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><call pos:start="9:9" pos:end="9:29"><name pos:start="9:9" pos:end="9:27">runstate_is_running</name><argument_list pos:start="9:28" pos:end="9:29">()</argument_list></call></expr>)</condition> <block pos:start="9:32" pos:end="21:5">{<block_content pos:start="11:9" pos:end="19:43">

        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:25">cpu_disable_ticks</name><argument_list pos:start="11:26" pos:end="11:27">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:26"><expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:23">pause_all_vcpus</name><argument_list pos:start="13:24" pos:end="13:25">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><call pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:20">runstate_set</name><argument_list pos:start="15:21" pos:end="15:27">(<argument pos:start="15:22" pos:end="15:26"><expr pos:start="15:22" pos:end="15:26"><name pos:start="15:22" pos:end="15:26">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:34"><expr pos:start="17:9" pos:end="17:33"><call pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:23">vm_state_notify</name><argument_list pos:start="17:24" pos:end="17:33">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">0</literal></expr></argument>, <argument pos:start="17:28" pos:end="17:32"><expr pos:start="17:28" pos:end="17:32"><name pos:start="17:28" pos:end="17:32">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:28">qapi_event_send_stop</name><argument_list pos:start="19:29" pos:end="19:42">(<argument pos:start="19:30" pos:end="19:41"><expr pos:start="19:30" pos:end="19:41"><operator pos:start="19:30" pos:end="19:30">&amp;</operator><name pos:start="19:31" pos:end="19:41">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><call pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:18">bdrv_drain_all</name><argument_list pos:start="25:19" pos:end="25:20">()</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="28:5" pos:end="28:26"><expr pos:start="28:5" pos:end="28:25"><name pos:start="28:5" pos:end="28:7">ret</name> <operator pos:start="28:9" pos:end="28:9">=</operator> <call pos:start="28:11" pos:end="28:25"><name pos:start="28:11" pos:end="28:23">blk_flush_all</name><argument_list pos:start="28:24" pos:end="28:25">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="32:5" pos:end="32:15">return <expr pos:start="32:12" pos:end="32:14"><name pos:start="32:12" pos:end="32:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
