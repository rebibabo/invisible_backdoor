<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18920.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">vtd_irte_get</name><parameter_list pos:start="1:24" pos:end="3:40">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:39">IntelIOMMUState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">iommu</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:56">uint16_t</name></type> <name pos:start="1:58" pos:end="1:62">index</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:39"><decl pos:start="3:25" pos:end="3:39"><type pos:start="3:25" pos:end="3:39"><name pos:start="3:25" pos:end="3:32">VTD_IRTE</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:39">entry</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="73:1">{<block_content pos:start="7:5" pos:end="71:13">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">dma_addr_t</name></type> <name pos:start="7:16" pos:end="7:19">addr</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><literal type="number" pos:start="7:23" pos:end="7:26">0x00</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:53"><expr pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:8">addr</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <name pos:start="11:12" pos:end="11:27"><name pos:start="11:12" pos:end="11:16">iommu</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:27">intr_root</name></name> <operator pos:start="11:29" pos:end="11:29">+</operator> <name pos:start="11:31" pos:end="11:35">index</name> <operator pos:start="11:37" pos:end="11:37">*</operator> <sizeof pos:start="11:39" pos:end="11:52">sizeof<argument_list pos:start="11:45" pos:end="11:52">(<argument pos:start="11:46" pos:end="11:51"><expr pos:start="11:46" pos:end="11:51"><operator pos:start="11:46" pos:end="11:46">*</operator><name pos:start="11:47" pos:end="11:51">entry</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="15:40">(<expr pos:start="13:9" pos:end="15:39"><call pos:start="13:9" pos:end="15:39"><name pos:start="13:9" pos:end="13:23">dma_memory_read</name><argument_list pos:start="13:24" pos:end="15:39">(<argument pos:start="13:25" pos:end="13:45"><expr pos:start="13:25" pos:end="13:45"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:45">address_space_memory</name></expr></argument>, <argument pos:start="13:48" pos:end="13:51"><expr pos:start="13:48" pos:end="13:51"><name pos:start="13:48" pos:end="13:51">addr</name></expr></argument>, <argument pos:start="13:54" pos:end="13:58"><expr pos:start="13:54" pos:end="13:58"><name pos:start="13:54" pos:end="13:58">entry</name></expr></argument>,

                        <argument pos:start="15:25" pos:end="15:38"><expr pos:start="15:25" pos:end="15:38"><sizeof pos:start="15:25" pos:end="15:38">sizeof<argument_list pos:start="15:31" pos:end="15:38">(<argument pos:start="15:32" pos:end="15:37"><expr pos:start="15:32" pos:end="15:37"><operator pos:start="15:32" pos:end="15:32">*</operator><name pos:start="15:33" pos:end="15:37">entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:42" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:37">

        <expr_stmt pos:start="17:9" pos:end="19:59"><expr pos:start="17:9" pos:end="19:58"><call pos:start="17:9" pos:end="19:58"><name pos:start="17:9" pos:end="17:19">VTD_DPRINTF</name><argument_list pos:start="17:20" pos:end="19:58">(<argument pos:start="17:21" pos:end="17:27"><expr pos:start="17:21" pos:end="17:27"><name pos:start="17:21" pos:end="17:27">GENERAL</name></expr></argument>, <argument pos:start="17:30" pos:end="19:32"><expr pos:start="17:30" pos:end="19:32"><literal type="string" pos:start="17:30" pos:end="17:67">"error: fail to access IR root at 0x%"</literal><name pos:start="17:68" pos:end="17:73">PRIx64</name>

                    <literal type="string" pos:start="19:21" pos:end="19:26">" + %"</literal><name pos:start="19:27" pos:end="19:32">PRIu16</name></expr></argument>, <argument pos:start="19:35" pos:end="19:50"><expr pos:start="19:35" pos:end="19:50"><name pos:start="19:35" pos:end="19:50"><name pos:start="19:35" pos:end="19:39">iommu</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:50">intr_root</name></name></expr></argument>, <argument pos:start="19:53" pos:end="19:57"><expr pos:start="19:53" pos:end="19:57"><name pos:start="19:53" pos:end="19:57">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:37">return <expr pos:start="21:16" pos:end="21:36"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:36">VTD_FR_IR_ROOT_INVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="27:24">(<expr pos:start="27:9" pos:end="27:23"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:23"><name pos:start="27:10" pos:end="27:14">entry</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">present</name></name></expr>)</condition> <block pos:start="27:26" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:34">

        <expr_stmt pos:start="29:9" pos:end="35:49"><expr pos:start="29:9" pos:end="35:48"><call pos:start="29:9" pos:end="35:48"><name pos:start="29:9" pos:end="29:19">VTD_DPRINTF</name><argument_list pos:start="29:20" pos:end="35:48">(<argument pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:27"><name pos:start="29:21" pos:end="29:27">GENERAL</name></expr></argument>, <argument pos:start="29:30" pos:end="31:66"><expr pos:start="29:30" pos:end="31:66"><literal type="string" pos:start="29:30" pos:end="29:66">"error: present flag not set in IRTE"</literal>

                    <literal type="string" pos:start="31:21" pos:end="31:47">" entry index %u value 0x%"</literal><name pos:start="31:48" pos:end="31:53">PRIx64</name> <literal type="string" pos:start="31:55" pos:end="31:60">" 0x%"</literal><name pos:start="31:61" pos:end="31:66">PRIx64</name></expr></argument>,

                    <argument pos:start="33:21" pos:end="33:25"><expr pos:start="33:21" pos:end="33:25"><name pos:start="33:21" pos:end="33:25">index</name></expr></argument>, <argument pos:start="33:28" pos:end="33:54"><expr pos:start="33:28" pos:end="33:54"><call pos:start="33:28" pos:end="33:54"><name pos:start="33:28" pos:end="33:38">le64_to_cpu</name><argument_list pos:start="33:39" pos:end="33:54">(<argument pos:start="33:40" pos:end="33:53"><expr pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:44">entry</name><operator pos:start="33:45" pos:end="33:46">-&gt;</operator><name pos:start="33:47" pos:end="33:50">data</name><index pos:start="33:51" pos:end="33:53">[<expr pos:start="33:52" pos:end="33:52"><literal type="number" pos:start="33:52" pos:end="33:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="35:21" pos:end="35:47"><expr pos:start="35:21" pos:end="35:47"><call pos:start="35:21" pos:end="35:47"><name pos:start="35:21" pos:end="35:31">le64_to_cpu</name><argument_list pos:start="35:32" pos:end="35:47">(<argument pos:start="35:33" pos:end="35:46"><expr pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:37">entry</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:43">data</name><index pos:start="35:44" pos:end="35:46">[<expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:34">return <expr pos:start="37:16" pos:end="37:33"><operator pos:start="37:16" pos:end="37:16">-</operator><name pos:start="37:17" pos:end="37:33">VTD_FR_IR_ENTRY_P</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="57:5"><if pos:start="43:5" pos:end="57:5">if <condition pos:start="43:8" pos:end="45:28">(<expr pos:start="43:9" pos:end="45:27"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:13">entry</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:27">__reserved_0</name></name> <operator pos:start="43:29" pos:end="43:30">||</operator> <name pos:start="43:32" pos:end="43:50"><name pos:start="43:32" pos:end="43:36">entry</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:50">__reserved_1</name></name> <operator pos:start="43:52" pos:end="43:53">||</operator> \

        <name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:13">entry</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:27">__reserved_2</name></name></expr>)</condition> <block pos:start="45:30" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:36">

        <expr_stmt pos:start="47:9" pos:end="53:49"><expr pos:start="47:9" pos:end="53:48"><call pos:start="47:9" pos:end="53:48"><name pos:start="47:9" pos:end="47:19">VTD_DPRINTF</name><argument_list pos:start="47:20" pos:end="53:48">(<argument pos:start="47:21" pos:end="47:27"><expr pos:start="47:21" pos:end="47:27"><name pos:start="47:21" pos:end="47:27">GENERAL</name></expr></argument>, <argument pos:start="47:30" pos:end="49:71"><expr pos:start="47:30" pos:end="49:71"><literal type="string" pos:start="47:30" pos:end="47:56">"error: IRTE entry index %"</literal><name pos:start="47:57" pos:end="47:62">PRIu16</name>

                    <literal type="string" pos:start="49:21" pos:end="49:52">" reserved fields non-zero: 0x%"</literal><name pos:start="49:53" pos:end="49:58">PRIx64</name> <literal type="string" pos:start="49:60" pos:end="49:65">" 0x%"</literal><name pos:start="49:66" pos:end="49:71">PRIx64</name></expr></argument>,

                    <argument pos:start="51:21" pos:end="51:25"><expr pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:25">index</name></expr></argument>, <argument pos:start="51:28" pos:end="51:54"><expr pos:start="51:28" pos:end="51:54"><call pos:start="51:28" pos:end="51:54"><name pos:start="51:28" pos:end="51:38">le64_to_cpu</name><argument_list pos:start="51:39" pos:end="51:54">(<argument pos:start="51:40" pos:end="51:53"><expr pos:start="51:40" pos:end="51:53"><name pos:start="51:40" pos:end="51:53"><name pos:start="51:40" pos:end="51:44">entry</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:50">data</name><index pos:start="51:51" pos:end="51:53">[<expr pos:start="51:52" pos:end="51:52"><literal type="number" pos:start="51:52" pos:end="51:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:47"><expr pos:start="53:21" pos:end="53:47"><call pos:start="53:21" pos:end="53:47"><name pos:start="53:21" pos:end="53:31">le64_to_cpu</name><argument_list pos:start="53:32" pos:end="53:47">(<argument pos:start="53:33" pos:end="53:46"><expr pos:start="53:33" pos:end="53:46"><name pos:start="53:33" pos:end="53:46"><name pos:start="53:33" pos:end="53:37">entry</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:43">data</name><index pos:start="53:44" pos:end="53:46">[<expr pos:start="53:45" pos:end="53:45"><literal type="number" pos:start="53:45" pos:end="53:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:36">return <expr pos:start="55:16" pos:end="55:35"><operator pos:start="55:16" pos:end="55:16">-</operator><name pos:start="55:17" pos:end="55:35">VTD_FR_IR_IRTE_RSVD</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="67:7">/*

     * TODO: Check Source-ID corresponds to SVT (Source Validation

     * Type) bits

     */</comment>



    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
