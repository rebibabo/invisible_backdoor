<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2998.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">asink_query_formats</name><parameter_list pos:start="1:31" pos:end="1:52">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFilterContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFilterFormats</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:28">formats</name> <init pos:start="7:30" pos:end="7:35">= <expr pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:26">AVFilterChannelLayouts</name> <modifier pos:start="9:28" pos:end="9:28">*</modifier></type><name pos:start="9:29" pos:end="9:35">layouts</name> <init pos:start="9:37" pos:end="9:42">= <expr pos:start="9:39" pos:end="9:42"><name pos:start="9:39" pos:end="9:42">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="49:5"><if pos:start="17:5" pos:end="49:5">if <condition pos:start="17:8" pos:end="23:65">(<expr pos:start="17:9" pos:end="23:64"><name pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:11">buf</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:29">sample_fmts_size</name></name>     <operator pos:start="17:35" pos:end="17:35">%</operator> <sizeof pos:start="17:37" pos:end="17:61">sizeof<argument_list pos:start="17:43" pos:end="17:61">(<argument pos:start="17:44" pos:end="17:60"><expr pos:start="17:44" pos:end="17:60"><operator pos:start="17:44" pos:end="17:44">*</operator><name pos:start="17:45" pos:end="17:60"><name pos:start="17:45" pos:end="17:47">buf</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:60">sample_fmts</name></name></expr></argument>)</argument_list></sizeof>     <operator pos:start="17:67" pos:end="17:68">||</operator>

        <name pos:start="19:9" pos:end="19:30"><name pos:start="19:9" pos:end="19:11">buf</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:30">sample_rates_size</name></name>    <operator pos:start="19:35" pos:end="19:35">%</operator> <sizeof pos:start="19:37" pos:end="19:62">sizeof<argument_list pos:start="19:43" pos:end="19:62">(<argument pos:start="19:44" pos:end="19:61"><expr pos:start="19:44" pos:end="19:61"><operator pos:start="19:44" pos:end="19:44">*</operator><name pos:start="19:45" pos:end="19:61"><name pos:start="19:45" pos:end="19:47">buf</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:61">sample_rates</name></name></expr></argument>)</argument_list></sizeof>    <operator pos:start="19:67" pos:end="19:68">||</operator>

        <name pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:11">buf</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:33">channel_layouts_size</name></name> <operator pos:start="21:35" pos:end="21:35">%</operator> <sizeof pos:start="21:37" pos:end="21:65">sizeof<argument_list pos:start="21:43" pos:end="21:65">(<argument pos:start="21:44" pos:end="21:64"><expr pos:start="21:44" pos:end="21:64"><operator pos:start="21:44" pos:end="21:44">*</operator><name pos:start="21:45" pos:end="21:64"><name pos:start="21:45" pos:end="21:47">buf</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:64">channel_layouts</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="21:67" pos:end="21:68">||</operator>

        <name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:11">buf</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:32">channel_counts_size</name></name>  <operator pos:start="23:35" pos:end="23:35">%</operator> <sizeof pos:start="23:37" pos:end="23:64">sizeof<argument_list pos:start="23:43" pos:end="23:64">(<argument pos:start="23:44" pos:end="23:63"><expr pos:start="23:44" pos:end="23:63"><operator pos:start="23:44" pos:end="23:44">*</operator><name pos:start="23:45" pos:end="23:63"><name pos:start="23:45" pos:end="23:47">buf</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:63">channel_counts</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="23:67" pos:end="49:5">{<block_content pos:start="25:9" pos:end="47:31">

        <expr_stmt pos:start="25:9" pos:end="36:0"><expr pos:start="25:9" pos:end="25:68"><call pos:start="25:9" pos:end="25:68"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:68">(<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ctx</name></expr></argument>, <argument pos:start="25:21" pos:end="25:32"><expr pos:start="25:21" pos:end="25:32"><name pos:start="25:21" pos:end="25:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:35" pos:end="25:67"><expr pos:start="25:35" pos:end="25:67"><literal type="string" pos:start="25:35" pos:end="25:67">"Invalid size for format lists\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:define pos:start="27:1" pos:end="35:66">#<cpp:directive pos:start="27:2" pos:end="27:7">define</cpp:directive> <cpp:macro pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:17">LOG_ERROR</name><parameter_list pos:start="27:18" pos:end="27:24">(<parameter pos:start="27:19" pos:end="27:23"><type pos:start="27:19" pos:end="27:23"><name pos:start="27:19" pos:end="27:23">field</name></type></parameter>)</parameter_list></cpp:macro> \

        <cpp:value pos:start="29:9" pos:end="35:66">if (buf-&gt;field ## _size % sizeof(*buf-&gt;field)) \

            av_log(ctx, AV_LOG_ERROR, "  " #field " is %d, should be " \

                   "multiple of %d\n", \

                   buf-&gt;field ## _size, (int)sizeof(*buf-&gt;field));</cpp:value></cpp:define>

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><call pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:17">LOG_ERROR</name><argument_list pos:start="37:18" pos:end="37:30">(<argument pos:start="37:19" pos:end="37:29"><expr pos:start="37:19" pos:end="37:29"><name pos:start="37:19" pos:end="37:29">sample_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><call pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:17">LOG_ERROR</name><argument_list pos:start="39:18" pos:end="39:31">(<argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">sample_rates</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><call pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:17">LOG_ERROR</name><argument_list pos:start="41:18" pos:end="41:34">(<argument pos:start="41:19" pos:end="41:33"><expr pos:start="41:19" pos:end="41:33"><name pos:start="41:19" pos:end="41:33">channel_layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="46:0"><expr pos:start="43:9" pos:end="43:33"><call pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:17">LOG_ERROR</name><argument_list pos:start="43:18" pos:end="43:33">(<argument pos:start="43:19" pos:end="43:32"><expr pos:start="43:19" pos:end="43:32"><name pos:start="43:19" pos:end="43:32">channel_counts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="45:1" pos:end="45:16">#<cpp:directive pos:start="45:2" pos:end="45:6">undef</cpp:directive> <name pos:start="45:8" pos:end="45:16">LOG_ERROR</name></cpp:undef>

        <return pos:start="47:9" pos:end="47:31">return <expr pos:start="47:16" pos:end="47:30"><call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:22">AVERROR</name><argument_list pos:start="47:23" pos:end="47:30">(<argument pos:start="47:24" pos:end="47:29"><expr pos:start="47:24" pos:end="47:29"><name pos:start="47:24" pos:end="47:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:30">(<expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:11">buf</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:29">sample_fmts_size</name></name></expr>)</condition> <block pos:start="53:32" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:44">

        <for pos:start="55:9" pos:end="59:27">for <control pos:start="55:13" pos:end="55:56">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:51"><expr pos:start="55:21" pos:end="55:50"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <call pos:start="55:25" pos:end="55:50"><name pos:start="55:25" pos:end="55:32">NB_ITEMS</name><argument_list pos:start="55:33" pos:end="55:50">(<argument pos:start="55:34" pos:end="55:49"><expr pos:start="55:34" pos:end="55:49"><name pos:start="55:34" pos:end="55:49"><name pos:start="55:34" pos:end="55:36">buf</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:49">sample_fmts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="55:53" pos:end="55:55"><expr pos:start="55:53" pos:end="55:55"><name pos:start="55:53" pos:end="55:53">i</name><operator pos:start="55:54" pos:end="55:55">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="59:27"><block_content pos:start="57:13" pos:end="59:27">

            <if_stmt pos:start="57:13" pos:end="59:27"><if pos:start="57:13" pos:end="59:27">if <condition pos:start="57:16" pos:end="57:73">(<expr pos:start="57:17" pos:end="57:72"><operator pos:start="57:17" pos:end="57:17">(</operator><name pos:start="57:18" pos:end="57:20">ret</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <call pos:start="57:24" pos:end="57:67"><name pos:start="57:24" pos:end="57:36">ff_add_format</name><argument_list pos:start="57:37" pos:end="57:67">(<argument pos:start="57:38" pos:end="57:45"><expr pos:start="57:38" pos:end="57:45"><operator pos:start="57:38" pos:end="57:38">&amp;</operator><name pos:start="57:39" pos:end="57:45">formats</name></expr></argument>, <argument pos:start="57:48" pos:end="57:66"><expr pos:start="57:48" pos:end="57:66"><name pos:start="57:48" pos:end="57:66"><name pos:start="57:48" pos:end="57:50">buf</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:63">sample_fmts</name><index pos:start="57:64" pos:end="57:66">[<expr pos:start="57:65" pos:end="57:65"><name pos:start="57:65" pos:end="57:65">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="57:68" pos:end="57:68">)</operator> <operator pos:start="57:70" pos:end="57:70">&lt;</operator> <literal type="number" pos:start="57:72" pos:end="57:72">0</literal></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:27"><block_content pos:start="59:17" pos:end="59:27">

                <return pos:start="59:17" pos:end="59:27">return <expr pos:start="59:24" pos:end="59:26"><name pos:start="59:24" pos:end="59:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><call pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:29">ff_set_common_formats</name><argument_list pos:start="61:30" pos:end="61:43">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">ctx</name></expr></argument>, <argument pos:start="61:36" pos:end="61:42"><expr pos:start="61:36" pos:end="61:42"><name pos:start="61:36" pos:end="61:42">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="99:5"><if pos:start="67:5" pos:end="99:5">if <condition pos:start="67:8" pos:end="69:32">(<expr pos:start="67:9" pos:end="69:31"><name pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:11">buf</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:33">channel_layouts_size</name></name> <operator pos:start="67:35" pos:end="67:36">||</operator> <name pos:start="67:38" pos:end="67:61"><name pos:start="67:38" pos:end="67:40">buf</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:61">channel_counts_size</name></name> <operator pos:start="67:63" pos:end="67:64">||</operator>

        <name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:11">buf</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:31">all_channel_counts</name></name></expr>)</condition> <block pos:start="69:34" pos:end="99:5">{<block_content pos:start="71:9" pos:end="97:52">

        <for pos:start="71:9" pos:end="75:27">for <control pos:start="71:13" pos:end="71:60">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:55"><expr pos:start="71:21" pos:end="71:54"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <call pos:start="71:25" pos:end="71:54"><name pos:start="71:25" pos:end="71:32">NB_ITEMS</name><argument_list pos:start="71:33" pos:end="71:54">(<argument pos:start="71:34" pos:end="71:53"><expr pos:start="71:34" pos:end="71:53"><name pos:start="71:34" pos:end="71:53"><name pos:start="71:34" pos:end="71:36">buf</name><operator pos:start="71:37" pos:end="71:38">-&gt;</operator><name pos:start="71:39" pos:end="71:53">channel_layouts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="71:57" pos:end="71:59"><expr pos:start="71:57" pos:end="71:59"><name pos:start="71:57" pos:end="71:57">i</name><operator pos:start="71:58" pos:end="71:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:13" pos:end="75:27"><block_content pos:start="73:13" pos:end="75:27">

            <if_stmt pos:start="73:13" pos:end="75:27"><if pos:start="73:13" pos:end="75:27">if <condition pos:start="73:16" pos:end="73:85">(<expr pos:start="73:17" pos:end="73:84"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:20">ret</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:79"><name pos:start="73:24" pos:end="73:44">ff_add_channel_layout</name><argument_list pos:start="73:45" pos:end="73:79">(<argument pos:start="73:46" pos:end="73:53"><expr pos:start="73:46" pos:end="73:53"><operator pos:start="73:46" pos:end="73:46">&amp;</operator><name pos:start="73:47" pos:end="73:53">layouts</name></expr></argument>, <argument pos:start="73:56" pos:end="73:78"><expr pos:start="73:56" pos:end="73:78"><name pos:start="73:56" pos:end="73:78"><name pos:start="73:56" pos:end="73:58">buf</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:75">channel_layouts</name><index pos:start="73:76" pos:end="73:78">[<expr pos:start="73:77" pos:end="73:77"><name pos:start="73:77" pos:end="73:77">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="73:80" pos:end="73:80">)</operator> <operator pos:start="73:82" pos:end="73:82">&lt;</operator> <literal type="number" pos:start="73:84" pos:end="73:84">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:27"><block_content pos:start="75:17" pos:end="75:27">

                <return pos:start="75:17" pos:end="75:27">return <expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <for pos:start="77:9" pos:end="81:27">for <control pos:start="77:13" pos:end="77:59">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:54"><expr pos:start="77:21" pos:end="77:53"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <call pos:start="77:25" pos:end="77:53"><name pos:start="77:25" pos:end="77:32">NB_ITEMS</name><argument_list pos:start="77:33" pos:end="77:53">(<argument pos:start="77:34" pos:end="77:52"><expr pos:start="77:34" pos:end="77:52"><name pos:start="77:34" pos:end="77:52"><name pos:start="77:34" pos:end="77:36">buf</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:52">channel_counts</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="77:56" pos:end="77:58"><expr pos:start="77:56" pos:end="77:58"><name pos:start="77:56" pos:end="77:56">i</name><operator pos:start="77:57" pos:end="77:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:13" pos:end="81:27"><block_content pos:start="79:13" pos:end="81:27">

            <if_stmt pos:start="79:13" pos:end="81:27"><if pos:start="79:13" pos:end="81:27">if <condition pos:start="79:16" pos:end="79:101">(<expr pos:start="79:17" pos:end="79:100"><operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:20">ret</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:95"><name pos:start="79:24" pos:end="79:44">ff_add_channel_layout</name><argument_list pos:start="79:45" pos:end="79:95">(<argument pos:start="79:46" pos:end="79:53"><expr pos:start="79:46" pos:end="79:53"><operator pos:start="79:46" pos:end="79:46">&amp;</operator><name pos:start="79:47" pos:end="79:53">layouts</name></expr></argument>, <argument pos:start="79:56" pos:end="79:94"><expr pos:start="79:56" pos:end="79:94"><call pos:start="79:56" pos:end="79:94"><name pos:start="79:56" pos:end="79:70">FF_COUNT2LAYOUT</name><argument_list pos:start="79:71" pos:end="79:94">(<argument pos:start="79:72" pos:end="79:93"><expr pos:start="79:72" pos:end="79:93"><name pos:start="79:72" pos:end="79:93"><name pos:start="79:72" pos:end="79:74">buf</name><operator pos:start="79:75" pos:end="79:76">-&gt;</operator><name pos:start="79:77" pos:end="79:90">channel_counts</name><index pos:start="79:91" pos:end="79:93">[<expr pos:start="79:92" pos:end="79:92"><name pos:start="79:92" pos:end="79:92">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="79:96" pos:end="79:96">)</operator> <operator pos:start="79:98" pos:end="79:98">&lt;</operator> <literal type="number" pos:start="79:100" pos:end="79:100">0</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:27"><block_content pos:start="81:17" pos:end="81:27">

                <return pos:start="81:17" pos:end="81:27">return <expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="83:9" pos:end="95:9"><if pos:start="83:9" pos:end="95:9">if <condition pos:start="83:12" pos:end="83:36">(<expr pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:15">buf</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:35">all_channel_counts</name></name></expr>)</condition> <block pos:start="83:38" pos:end="95:9">{<block_content pos:start="85:13" pos:end="93:39">

            <if_stmt pos:start="85:13" pos:end="93:39"><if pos:start="85:13" pos:end="89:79">if <condition pos:start="85:16" pos:end="85:24">(<expr pos:start="85:17" pos:end="85:23"><name pos:start="85:17" pos:end="85:23">layouts</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="89:79"><block_content pos:start="87:17" pos:end="89:79">

                <expr_stmt pos:start="87:17" pos:end="89:79"><expr pos:start="87:17" pos:end="89:78"><call pos:start="87:17" pos:end="89:78"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="89:78">(<argument pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:26">ctx</name></expr></argument>, <argument pos:start="87:29" pos:end="87:42"><expr pos:start="87:29" pos:end="87:42"><name pos:start="87:29" pos:end="87:42">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="89:24" pos:end="89:77"><expr pos:start="89:24" pos:end="89:77"><literal type="string" pos:start="89:24" pos:end="89:77">"Conflicting all_channel_counts and list in options\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="91:13" pos:end="93:39">else if <condition pos:start="91:21" pos:end="91:58">(<expr pos:start="91:22" pos:end="91:57"><operator pos:start="91:22" pos:end="91:22">!</operator><operator pos:start="91:23" pos:end="91:23">(</operator><name pos:start="91:24" pos:end="91:30">layouts</name> <operator pos:start="91:32" pos:end="91:32">=</operator> <call pos:start="91:34" pos:end="91:56"><name pos:start="91:34" pos:end="91:54">ff_all_channel_counts</name><argument_list pos:start="91:55" pos:end="91:56">()</argument_list></call><operator pos:start="91:57" pos:end="91:57">)</operator></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:39"><block_content pos:start="93:17" pos:end="93:39">

                <return pos:start="93:17" pos:end="93:39">return <expr pos:start="93:24" pos:end="93:38"><call pos:start="93:24" pos:end="93:38"><name pos:start="93:24" pos:end="93:30">AVERROR</name><argument_list pos:start="93:31" pos:end="93:38">(<argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:52"><expr pos:start="97:9" pos:end="97:51"><call pos:start="97:9" pos:end="97:51"><name pos:start="97:9" pos:end="97:37">ff_set_common_channel_layouts</name><argument_list pos:start="97:38" pos:end="97:51">(<argument pos:start="97:39" pos:end="97:41"><expr pos:start="97:39" pos:end="97:41"><name pos:start="97:39" pos:end="97:41">ctx</name></expr></argument>, <argument pos:start="97:44" pos:end="97:50"><expr pos:start="97:44" pos:end="97:50"><name pos:start="97:44" pos:end="97:50">layouts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="115:5"><if pos:start="103:5" pos:end="115:5">if <condition pos:start="103:8" pos:end="103:31">(<expr pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:11">buf</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:30">sample_rates_size</name></name></expr>)</condition> <block pos:start="103:33" pos:end="115:5">{<block_content pos:start="105:9" pos:end="113:48">

        <expr_stmt pos:start="105:9" pos:end="105:23"><expr pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:15">formats</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <name pos:start="105:19" pos:end="105:22">NULL</name></expr>;</expr_stmt>

        <for pos:start="107:9" pos:end="111:27">for <control pos:start="107:13" pos:end="107:57">(<init pos:start="107:14" pos:end="107:19"><expr pos:start="107:14" pos:end="107:18"><name pos:start="107:14" pos:end="107:14">i</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <literal type="number" pos:start="107:18" pos:end="107:18">0</literal></expr>;</init> <condition pos:start="107:21" pos:end="107:52"><expr pos:start="107:21" pos:end="107:51"><name pos:start="107:21" pos:end="107:21">i</name> <operator pos:start="107:23" pos:end="107:23">&lt;</operator> <call pos:start="107:25" pos:end="107:51"><name pos:start="107:25" pos:end="107:32">NB_ITEMS</name><argument_list pos:start="107:33" pos:end="107:51">(<argument pos:start="107:34" pos:end="107:50"><expr pos:start="107:34" pos:end="107:50"><name pos:start="107:34" pos:end="107:50"><name pos:start="107:34" pos:end="107:36">buf</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:50">sample_rates</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="107:54" pos:end="107:56"><expr pos:start="107:54" pos:end="107:56"><name pos:start="107:54" pos:end="107:54">i</name><operator pos:start="107:55" pos:end="107:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:13" pos:end="111:27"><block_content pos:start="109:13" pos:end="111:27">

            <if_stmt pos:start="109:13" pos:end="111:27"><if pos:start="109:13" pos:end="111:27">if <condition pos:start="109:16" pos:end="109:74">(<expr pos:start="109:17" pos:end="109:73"><operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:20">ret</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <call pos:start="109:24" pos:end="109:68"><name pos:start="109:24" pos:end="109:36">ff_add_format</name><argument_list pos:start="109:37" pos:end="109:68">(<argument pos:start="109:38" pos:end="109:45"><expr pos:start="109:38" pos:end="109:45"><operator pos:start="109:38" pos:end="109:38">&amp;</operator><name pos:start="109:39" pos:end="109:45">formats</name></expr></argument>, <argument pos:start="109:48" pos:end="109:67"><expr pos:start="109:48" pos:end="109:67"><name pos:start="109:48" pos:end="109:67"><name pos:start="109:48" pos:end="109:50">buf</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:64">sample_rates</name><index pos:start="109:65" pos:end="109:67">[<expr pos:start="109:66" pos:end="109:66"><name pos:start="109:66" pos:end="109:66">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="109:69" pos:end="109:69">)</operator> <operator pos:start="109:71" pos:end="109:71">&lt;</operator> <literal type="number" pos:start="109:73" pos:end="109:73">0</literal></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:27"><block_content pos:start="111:17" pos:end="111:27">

                <return pos:start="111:17" pos:end="111:27">return <expr pos:start="111:24" pos:end="111:26"><name pos:start="111:24" pos:end="111:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

        <expr_stmt pos:start="113:9" pos:end="113:48"><expr pos:start="113:9" pos:end="113:47"><call pos:start="113:9" pos:end="113:47"><name pos:start="113:9" pos:end="113:33">ff_set_common_samplerates</name><argument_list pos:start="113:34" pos:end="113:47">(<argument pos:start="113:35" pos:end="113:37"><expr pos:start="113:35" pos:end="113:37"><name pos:start="113:35" pos:end="113:37">ctx</name></expr></argument>, <argument pos:start="113:40" pos:end="113:46"><expr pos:start="113:40" pos:end="113:46"><name pos:start="113:40" pos:end="113:46">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="119:5" pos:end="119:13">return <expr pos:start="119:12" pos:end="119:12"><literal type="number" pos:start="119:12" pos:end="119:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
