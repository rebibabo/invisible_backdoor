<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17139.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">gic_dist_writel</name><parameter_list pos:start="1:28" pos:end="3:43">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:67"><decl pos:start="1:43" pos:end="1:67"><type pos:start="1:43" pos:end="1:67"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:67">offset</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:36">uint32_t</name></type> <name pos:start="3:38" pos:end="3:42">value</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:53">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">GICState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:36">= <expr pos:start="7:19" pos:end="7:36"><operator pos:start="7:19" pos:end="7:19">(</operator><name pos:start="7:20" pos:end="7:27">GICState</name> <operator pos:start="7:29" pos:end="7:29">*</operator><operator pos:start="7:30" pos:end="7:30">)</operator><name pos:start="7:31" pos:end="7:36">opaque</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="59:5"><if pos:start="9:5" pos:end="59:5">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:14">offset</name> <operator pos:start="9:16" pos:end="9:17">==</operator> <literal type="number" pos:start="9:19" pos:end="9:23">0xf00</literal></expr>)</condition> <block pos:start="9:26" pos:end="59:5">{<block_content pos:start="11:9" pos:end="57:15">

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">cpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:16"><decl pos:start="13:9" pos:end="13:15"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:15">irq</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:17"><decl pos:start="15:9" pos:end="15:16"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:16">mask</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:11">cpu</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:36"><name pos:start="19:15" pos:end="19:33">gic_get_current_cpu</name><argument_list pos:start="19:34" pos:end="19:36">(<argument pos:start="19:35" pos:end="19:35"><expr pos:start="19:35" pos:end="19:35"><name pos:start="19:35" pos:end="19:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:11">irq</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:19">value</name> <operator pos:start="21:21" pos:end="21:21">&amp;</operator> <literal type="number" pos:start="21:23" pos:end="21:27">0x3ff</literal></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="51:9">switch <condition pos:start="23:16" pos:end="23:34">(<expr pos:start="23:17" pos:end="23:33"><operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:22">value</name> <operator pos:start="23:24" pos:end="23:25">&gt;&gt;</operator> <literal type="number" pos:start="23:27" pos:end="23:28">24</literal><operator pos:start="23:29" pos:end="23:29">)</operator> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <literal type="number" pos:start="23:33" pos:end="23:33">3</literal></expr>)</condition> <block pos:start="23:36" pos:end="51:9">{<block_content pos:start="25:9" pos:end="49:18">

        <case pos:start="25:9" pos:end="25:15">case <expr pos:start="25:14" pos:end="25:14"><literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:16">mask</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <operator pos:start="27:20" pos:end="27:20">(</operator><name pos:start="27:21" pos:end="27:25">value</name> <operator pos:start="27:27" pos:end="27:28">&gt;&gt;</operator> <literal type="number" pos:start="27:30" pos:end="27:31">16</literal><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">&amp;</operator> <name pos:start="27:36" pos:end="27:47">ALL_CPU_MASK</name></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:15">case <expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">1</literal></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:45"><expr pos:start="33:13" pos:end="33:44"><name pos:start="33:13" pos:end="33:16">mask</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:31">ALL_CPU_MASK</name> <operator pos:start="33:33" pos:end="33:33">^</operator> <operator pos:start="33:35" pos:end="33:35">(</operator><literal type="number" pos:start="33:36" pos:end="33:36">1</literal> <operator pos:start="33:38" pos:end="33:39">&lt;&lt;</operator> <name pos:start="33:41" pos:end="33:43">cpu</name><operator pos:start="33:44" pos:end="33:44">)</operator></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        <case pos:start="37:9" pos:end="37:15">case <expr pos:start="37:14" pos:end="37:14"><literal type="number" pos:start="37:14" pos:end="37:14">2</literal></expr>:</case>

            <expr_stmt pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:16">mask</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">1</literal> <operator pos:start="39:22" pos:end="39:23">&lt;&lt;</operator> <name pos:start="39:25" pos:end="39:27">cpu</name></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        <default pos:start="43:9" pos:end="43:16">default:</default>

            <expr_stmt pos:start="45:13" pos:end="45:52"><expr pos:start="45:13" pos:end="45:51"><call pos:start="45:13" pos:end="45:51"><name pos:start="45:13" pos:end="45:19">DPRINTF</name><argument_list pos:start="45:20" pos:end="45:51">(<argument pos:start="45:21" pos:end="45:50"><expr pos:start="45:21" pos:end="45:50"><literal type="string" pos:start="45:21" pos:end="45:50">"Bad Soft Int target filter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:32"><expr pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:16">mask</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:31">ALL_CPU_MASK</name></expr>;</expr_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><call pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:23">GIC_SET_PENDING</name><argument_list pos:start="53:24" pos:end="53:34">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">irq</name></expr></argument>, <argument pos:start="53:30" pos:end="53:33"><expr pos:start="53:30" pos:end="53:33"><name pos:start="53:30" pos:end="53:33">mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:18">gic_update</name><argument_list pos:start="55:19" pos:end="55:21">(<argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:52"><expr pos:start="61:5" pos:end="61:51"><call pos:start="61:5" pos:end="61:51"><name pos:start="61:5" pos:end="61:19">gic_dist_writew</name><argument_list pos:start="61:20" pos:end="61:51">(<argument pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">opaque</name></expr></argument>, <argument pos:start="61:29" pos:end="61:34"><expr pos:start="61:29" pos:end="61:34"><name pos:start="61:29" pos:end="61:34">offset</name></expr></argument>, <argument pos:start="61:37" pos:end="61:50"><expr pos:start="61:37" pos:end="61:50"><name pos:start="61:37" pos:end="61:41">value</name> <operator pos:start="61:43" pos:end="61:43">&amp;</operator> <literal type="number" pos:start="61:45" pos:end="61:50">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:53"><expr pos:start="63:5" pos:end="63:52"><call pos:start="63:5" pos:end="63:52"><name pos:start="63:5" pos:end="63:19">gic_dist_writew</name><argument_list pos:start="63:20" pos:end="63:52">(<argument pos:start="63:21" pos:end="63:26"><expr pos:start="63:21" pos:end="63:26"><name pos:start="63:21" pos:end="63:26">opaque</name></expr></argument>, <argument pos:start="63:29" pos:end="63:38"><expr pos:start="63:29" pos:end="63:38"><name pos:start="63:29" pos:end="63:34">offset</name> <operator pos:start="63:36" pos:end="63:36">+</operator> <literal type="number" pos:start="63:38" pos:end="63:38">2</literal></expr></argument>, <argument pos:start="63:41" pos:end="63:51"><expr pos:start="63:41" pos:end="63:51"><name pos:start="63:41" pos:end="63:45">value</name> <operator pos:start="63:47" pos:end="63:48">&gt;&gt;</operator> <literal type="number" pos:start="63:50" pos:end="63:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
