<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15847.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_dct_common_init</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">MpegEncContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <expr_stmt pos:start="5:5" pos:end="5:39"><expr pos:start="5:5" pos:end="5:38"><call pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:19">ff_dsputil_init</name><argument_list pos:start="5:20" pos:end="5:38">(<argument pos:start="5:21" pos:end="5:27"><expr pos:start="5:21" pos:end="5:27"><operator pos:start="5:21" pos:end="5:21">&amp;</operator><name pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:27">dsp</name></name></expr></argument>, <argument pos:start="5:30" pos:end="5:37"><expr pos:start="5:30" pos:end="5:37"><name pos:start="5:30" pos:end="5:37"><name pos:start="5:30" pos:end="5:30">s</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:37">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:34"><expr pos:start="7:5" pos:end="7:33"><call pos:start="7:5" pos:end="7:33"><name pos:start="7:5" pos:end="7:20">ff_videodsp_init</name><argument_list pos:start="7:21" pos:end="7:33">(<argument pos:start="7:22" pos:end="7:29"><expr pos:start="7:22" pos:end="7:29"><operator pos:start="7:22" pos:end="7:22">&amp;</operator><name pos:start="7:23" pos:end="7:29"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:29">vdsp</name></name></expr></argument>, <argument pos:start="7:32" pos:end="7:32"><expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:63"><expr pos:start="11:5" pos:end="11:62"><name pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:32">dct_unquantize_h263_intra</name></name> <operator pos:start="11:34" pos:end="11:34">=</operator> <name pos:start="11:36" pos:end="11:62">dct_unquantize_h263_intra_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:63"><expr pos:start="13:5" pos:end="13:62"><name pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:32">dct_unquantize_h263_inter</name></name> <operator pos:start="13:34" pos:end="13:34">=</operator> <name pos:start="13:36" pos:end="13:62">dct_unquantize_h263_inter_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:33"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:33">dct_unquantize_mpeg1_intra</name></name> <operator pos:start="15:35" pos:end="15:35">=</operator> <name pos:start="15:37" pos:end="15:64">dct_unquantize_mpeg1_intra_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:65"><expr pos:start="17:5" pos:end="17:64"><name pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:33">dct_unquantize_mpeg1_inter</name></name> <operator pos:start="17:35" pos:end="17:35">=</operator> <name pos:start="17:37" pos:end="17:64">dct_unquantize_mpeg1_inter_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:65"><expr pos:start="19:5" pos:end="19:64"><name pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:33">dct_unquantize_mpeg2_intra</name></name> <operator pos:start="19:35" pos:end="19:35">=</operator> <name pos:start="19:37" pos:end="19:64">dct_unquantize_mpeg2_intra_c</name></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:76"><if pos:start="21:5" pos:end="23:76">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">flags</name></name> <operator pos:start="21:18" pos:end="21:18">&amp;</operator> <name pos:start="21:20" pos:end="21:38">CODEC_FLAG_BITEXACT</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:76"><block_content pos:start="23:9" pos:end="23:76">

        <expr_stmt pos:start="23:9" pos:end="23:76"><expr pos:start="23:9" pos:end="23:75"><name pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:37">dct_unquantize_mpeg2_intra</name></name> <operator pos:start="23:39" pos:end="23:39">=</operator> <name pos:start="23:41" pos:end="23:75">dct_unquantize_mpeg2_intra_bitexact</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="30:0"><expr pos:start="25:5" pos:end="25:64"><name pos:start="25:5" pos:end="25:33"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:33">dct_unquantize_mpeg2_inter</name></name> <operator pos:start="25:35" pos:end="25:35">=</operator> <name pos:start="25:37" pos:end="25:64">dct_unquantize_mpeg2_inter_c</name></expr>;</expr_stmt>



<cpp:if pos:start="29:1" pos:end="29:12">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">ARCH_X86</name></expr></cpp:if>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:26">ff_MPV_common_init_x86</name><argument_list pos:start="31:27" pos:end="31:29">(<argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="33:1" pos:end="33:16">#<cpp:directive pos:start="33:2" pos:end="33:5">elif</cpp:directive> <expr pos:start="33:7" pos:end="33:16"><name pos:start="33:7" pos:end="33:16">ARCH_ALPHA</name></expr></cpp:elif>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:26">ff_MPV_common_init_axp</name><argument_list pos:start="35:27" pos:end="35:29">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="37:1" pos:end="37:14">#<cpp:directive pos:start="37:2" pos:end="37:5">elif</cpp:directive> <expr pos:start="37:7" pos:end="37:14"><name pos:start="37:7" pos:end="37:14">ARCH_ARM</name></expr></cpp:elif>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:26">ff_MPV_common_init_arm</name><argument_list pos:start="39:27" pos:end="39:29">(<argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="41:1" pos:end="41:18">#<cpp:directive pos:start="41:2" pos:end="41:5">elif</cpp:directive> <expr pos:start="41:7" pos:end="41:18"><name pos:start="41:7" pos:end="41:18">HAVE_ALTIVEC</name></expr></cpp:elif>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:33"><call pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:30">ff_MPV_common_init_altivec</name><argument_list pos:start="43:31" pos:end="43:33">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="45:1" pos:end="45:15">#<cpp:directive pos:start="45:2" pos:end="45:5">elif</cpp:directive> <expr pos:start="45:7" pos:end="45:15"><name pos:start="45:7" pos:end="45:15">ARCH_BFIN</name></expr></cpp:elif>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:30"><call pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:27">ff_MPV_common_init_bfin</name><argument_list pos:start="47:28" pos:end="47:30">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="53:5" pos:end="57:7">/* load &amp; permutate scantables

     * note: only wmv uses different ones

     */</comment>

    <if_stmt pos:start="59:5" pos:end="71:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:26">(<expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:25">alternate_scan</name></name></expr>)</condition> <block pos:start="59:28" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:102">

        <expr_stmt pos:start="61:9" pos:end="61:102"><expr pos:start="61:9" pos:end="61:101"><call pos:start="61:9" pos:end="61:101"><name pos:start="61:9" pos:end="61:25">ff_init_scantable</name><argument_list pos:start="61:26" pos:end="61:101">(<argument pos:start="61:27" pos:end="61:49"><expr pos:start="61:27" pos:end="61:49"><name pos:start="61:27" pos:end="61:49"><name pos:start="61:27" pos:end="61:27">s</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:32">dsp</name><operator pos:start="61:33" pos:end="61:33">.</operator><name pos:start="61:34" pos:end="61:49">idct_permutation</name></name></expr></argument>, <argument pos:start="61:52" pos:end="61:70"><expr pos:start="61:52" pos:end="61:70"><operator pos:start="61:52" pos:end="61:52">&amp;</operator><name pos:start="61:53" pos:end="61:70"><name pos:start="61:53" pos:end="61:53">s</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:70">inter_scantable</name></name></expr></argument>  , <argument pos:start="61:75" pos:end="61:100"><expr pos:start="61:75" pos:end="61:100"><name pos:start="61:75" pos:end="61:100">ff_alternate_vertical_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:102"><expr pos:start="63:9" pos:end="63:101"><call pos:start="63:9" pos:end="63:101"><name pos:start="63:9" pos:end="63:25">ff_init_scantable</name><argument_list pos:start="63:26" pos:end="63:101">(<argument pos:start="63:27" pos:end="63:49"><expr pos:start="63:27" pos:end="63:49"><name pos:start="63:27" pos:end="63:49"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:32">dsp</name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:49">idct_permutation</name></name></expr></argument>, <argument pos:start="63:52" pos:end="63:70"><expr pos:start="63:52" pos:end="63:70"><operator pos:start="63:52" pos:end="63:52">&amp;</operator><name pos:start="63:53" pos:end="63:70"><name pos:start="63:53" pos:end="63:53">s</name><operator pos:start="63:54" pos:end="63:55">-&gt;</operator><name pos:start="63:56" pos:end="63:70">intra_scantable</name></name></expr></argument>  , <argument pos:start="63:75" pos:end="63:100"><expr pos:start="63:75" pos:end="63:100"><name pos:start="63:75" pos:end="63:100">ff_alternate_vertical_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="71:5">else <block pos:start="65:12" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:92">

        <expr_stmt pos:start="67:9" pos:end="67:92"><expr pos:start="67:9" pos:end="67:91"><call pos:start="67:9" pos:end="67:91"><name pos:start="67:9" pos:end="67:25">ff_init_scantable</name><argument_list pos:start="67:26" pos:end="67:91">(<argument pos:start="67:27" pos:end="67:49"><expr pos:start="67:27" pos:end="67:49"><name pos:start="67:27" pos:end="67:49"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:32">dsp</name><operator pos:start="67:33" pos:end="67:33">.</operator><name pos:start="67:34" pos:end="67:49">idct_permutation</name></name></expr></argument>, <argument pos:start="67:52" pos:end="67:70"><expr pos:start="67:52" pos:end="67:70"><operator pos:start="67:52" pos:end="67:52">&amp;</operator><name pos:start="67:53" pos:end="67:70"><name pos:start="67:53" pos:end="67:53">s</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:70">inter_scantable</name></name></expr></argument>  , <argument pos:start="67:75" pos:end="67:90"><expr pos:start="67:75" pos:end="67:90"><name pos:start="67:75" pos:end="67:90">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:92"><expr pos:start="69:9" pos:end="69:91"><call pos:start="69:9" pos:end="69:91"><name pos:start="69:9" pos:end="69:25">ff_init_scantable</name><argument_list pos:start="69:26" pos:end="69:91">(<argument pos:start="69:27" pos:end="69:49"><expr pos:start="69:27" pos:end="69:49"><name pos:start="69:27" pos:end="69:49"><name pos:start="69:27" pos:end="69:27">s</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:32">dsp</name><operator pos:start="69:33" pos:end="69:33">.</operator><name pos:start="69:34" pos:end="69:49">idct_permutation</name></name></expr></argument>, <argument pos:start="69:52" pos:end="69:70"><expr pos:start="69:52" pos:end="69:70"><operator pos:start="69:52" pos:end="69:52">&amp;</operator><name pos:start="69:53" pos:end="69:70"><name pos:start="69:53" pos:end="69:53">s</name><operator pos:start="69:54" pos:end="69:55">-&gt;</operator><name pos:start="69:56" pos:end="69:70">intra_scantable</name></name></expr></argument>  , <argument pos:start="69:75" pos:end="69:90"><expr pos:start="69:75" pos:end="69:90"><name pos:start="69:75" pos:end="69:90">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:100"><expr pos:start="73:5" pos:end="73:99"><call pos:start="73:5" pos:end="73:99"><name pos:start="73:5" pos:end="73:21">ff_init_scantable</name><argument_list pos:start="73:22" pos:end="73:99">(<argument pos:start="73:23" pos:end="73:45"><expr pos:start="73:23" pos:end="73:45"><name pos:start="73:23" pos:end="73:45"><name pos:start="73:23" pos:end="73:23">s</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">dsp</name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:45">idct_permutation</name></name></expr></argument>, <argument pos:start="73:48" pos:end="73:68"><expr pos:start="73:48" pos:end="73:68"><operator pos:start="73:48" pos:end="73:48">&amp;</operator><name pos:start="73:49" pos:end="73:68"><name pos:start="73:49" pos:end="73:49">s</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:68">intra_h_scantable</name></name></expr></argument>, <argument pos:start="73:71" pos:end="73:98"><expr pos:start="73:71" pos:end="73:98"><name pos:start="73:71" pos:end="73:98">ff_alternate_horizontal_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:98"><expr pos:start="75:5" pos:end="75:97"><call pos:start="75:5" pos:end="75:97"><name pos:start="75:5" pos:end="75:21">ff_init_scantable</name><argument_list pos:start="75:22" pos:end="75:97">(<argument pos:start="75:23" pos:end="75:45"><expr pos:start="75:23" pos:end="75:45"><name pos:start="75:23" pos:end="75:45"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">dsp</name><operator pos:start="75:29" pos:end="75:29">.</operator><name pos:start="75:30" pos:end="75:45">idct_permutation</name></name></expr></argument>, <argument pos:start="75:48" pos:end="75:68"><expr pos:start="75:48" pos:end="75:68"><operator pos:start="75:48" pos:end="75:48">&amp;</operator><name pos:start="75:49" pos:end="75:68"><name pos:start="75:49" pos:end="75:49">s</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:68">intra_v_scantable</name></name></expr></argument>, <argument pos:start="75:71" pos:end="75:96"><expr pos:start="75:71" pos:end="75:96"><name pos:start="75:71" pos:end="75:96">ff_alternate_vertical_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
