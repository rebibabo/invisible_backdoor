<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11040.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ac3_parse_bsi</name><parameter_list pos:start="1:25" pos:end="1:47">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:41">AC3DecodeContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="155:1">{<block_content pos:start="5:5" pos:end="153:13">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">ac3_bsi</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">bsi</name> <init pos:start="5:18" pos:end="5:28">= <expr pos:start="5:20" pos:end="5:28"><operator pos:start="5:20" pos:end="5:20">&amp;</operator><name pos:start="5:21" pos:end="5:28"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:28">bsi</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">uint32_t</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">flags</name> <init pos:start="7:21" pos:end="7:33">= <expr pos:start="7:23" pos:end="7:33"><operator pos:start="7:23" pos:end="7:23">&amp;</operator><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:26">bsi</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:33">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:32"><name pos:start="9:26" pos:end="9:28">ctx</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:32">gb</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:10">flags</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:7">bsi</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:16">cmixlev</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">bsi</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:18">surmixlev</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:7">bsi</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:16">dsurmod</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:7">bsi</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">bsid</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:31"><name pos:start="23:17" pos:end="23:24">get_bits</name><argument_list pos:start="23:25" pos:end="23:31">(<argument pos:start="23:26" pos:end="23:27"><expr pos:start="23:26" pos:end="23:27"><name pos:start="23:26" pos:end="23:27">gb</name></expr></argument>, <argument pos:start="23:30" pos:end="23:30"><expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">bsi</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:17">bsid</name></name> <operator pos:start="25:19" pos:end="25:19">&gt;</operator> <literal type="number" pos:start="25:21" pos:end="25:24">0x08</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:7">bsi</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">bsmod</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:32"><name pos:start="29:18" pos:end="29:25">get_bits</name><argument_list pos:start="29:26" pos:end="29:32">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">gb</name></expr></argument>, <argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:7">bsi</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:14">acmod</name></name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:32"><name pos:start="31:18" pos:end="31:25">get_bits</name><argument_list pos:start="31:26" pos:end="31:32">(<argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><name pos:start="31:27" pos:end="31:28">gb</name></expr></argument>, <argument pos:start="31:31" pos:end="31:31"><expr pos:start="31:31" pos:end="31:31"><literal type="number" pos:start="31:31" pos:end="31:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:39"><if pos:start="33:5" pos:end="35:39">if <condition pos:start="33:8" pos:end="33:48">(<expr pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">bsi</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">acmod</name></name> <operator pos:start="33:20" pos:end="33:20">&amp;</operator> <literal type="number" pos:start="33:22" pos:end="33:25">0x01</literal> <operator pos:start="33:27" pos:end="33:28">&amp;&amp;</operator> <name pos:start="33:30" pos:end="33:39"><name pos:start="33:30" pos:end="33:32">bsi</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:39">acmod</name></name> <operator pos:start="33:41" pos:end="33:42">!=</operator> <literal type="number" pos:start="33:44" pos:end="33:47">0x01</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:39"><block_content pos:start="35:9" pos:end="35:39">

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:11">bsi</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:20">cmixlev</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:38"><name pos:start="35:24" pos:end="35:31">get_bits</name><argument_list pos:start="35:32" pos:end="35:38">(<argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><name pos:start="35:33" pos:end="35:34">gb</name></expr></argument>, <argument pos:start="35:37" pos:end="35:37"><expr pos:start="35:37" pos:end="35:37"><literal type="number" pos:start="35:37" pos:end="35:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:41"><if pos:start="37:5" pos:end="39:41">if <condition pos:start="37:8" pos:end="37:26">(<expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:11">bsi</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:18">acmod</name></name> <operator pos:start="37:20" pos:end="37:20">&amp;</operator> <literal type="number" pos:start="37:22" pos:end="37:25">0x04</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:41"><block_content pos:start="39:9" pos:end="39:41">

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:11">bsi</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:22">surmixlev</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <call pos:start="39:26" pos:end="39:40"><name pos:start="39:26" pos:end="39:33">get_bits</name><argument_list pos:start="39:34" pos:end="39:40">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">gb</name></expr></argument>, <argument pos:start="39:39" pos:end="39:39"><expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:39"><if pos:start="41:5" pos:end="43:39">if <condition pos:start="41:8" pos:end="41:27">(<expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">bsi</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:18">acmod</name></name> <operator pos:start="41:20" pos:end="41:21">==</operator> <literal type="number" pos:start="41:23" pos:end="41:26">0x02</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:39"><block_content pos:start="43:9" pos:end="43:39">

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:11">bsi</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:20">dsurmod</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:31">get_bits</name><argument_list pos:start="43:32" pos:end="43:38">(<argument pos:start="43:33" pos:end="43:34"><expr pos:start="43:33" pos:end="43:34"><name pos:start="43:33" pos:end="43:34">gb</name></expr></argument>, <argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:32"><if pos:start="45:5" pos:end="47:32">if <condition pos:start="45:8" pos:end="45:24">(<expr pos:start="45:9" pos:end="45:23"><call pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:16">get_bits</name><argument_list pos:start="45:17" pos:end="45:23">(<argument pos:start="45:18" pos:end="45:19"><expr pos:start="45:18" pos:end="45:19"><name pos:start="45:18" pos:end="45:19">gb</name></expr></argument>, <argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><literal type="number" pos:start="45:22" pos:end="45:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:32"><block_content pos:start="47:9" pos:end="47:32">

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:14">flags</name> <operator pos:start="47:16" pos:end="47:17">|=</operator> <name pos:start="47:19" pos:end="47:31">AC3_BSI_LFEON</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:7">bsi</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:17">dialnorm</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:35"><name pos:start="49:21" pos:end="49:28">get_bits</name><argument_list pos:start="49:29" pos:end="49:35">(<argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><name pos:start="49:30" pos:end="49:31">gb</name></expr></argument>, <argument pos:start="49:34" pos:end="49:34"><expr pos:start="49:34" pos:end="49:34"><literal type="number" pos:start="49:34" pos:end="49:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:24">(<expr pos:start="51:9" pos:end="51:23"><call pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:16">get_bits</name><argument_list pos:start="51:17" pos:end="51:23">(<argument pos:start="51:18" pos:end="51:19"><expr pos:start="51:18" pos:end="51:19"><name pos:start="51:18" pos:end="51:19">gb</name></expr></argument>, <argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><literal type="number" pos:start="51:22" pos:end="51:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:26" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:37">

        <expr_stmt pos:start="53:9" pos:end="53:33"><expr pos:start="53:9" pos:end="53:32"><operator pos:start="53:9" pos:end="53:9">*</operator><name pos:start="53:10" pos:end="53:14">flags</name> <operator pos:start="53:16" pos:end="53:17">|=</operator> <name pos:start="53:19" pos:end="53:32">AC3_BSI_COMPRE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:11">bsi</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:18">compr</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:36"><name pos:start="55:22" pos:end="55:29">get_bits</name><argument_list pos:start="55:30" pos:end="55:36">(<argument pos:start="55:31" pos:end="55:32"><expr pos:start="55:31" pos:end="55:32"><name pos:start="55:31" pos:end="55:32">gb</name></expr></argument>, <argument pos:start="55:35" pos:end="55:35"><expr pos:start="55:35" pos:end="55:35"><literal type="number" pos:start="55:35" pos:end="55:35">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:24">(<expr pos:start="59:9" pos:end="59:23"><call pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:16">get_bits</name><argument_list pos:start="59:17" pos:end="59:23">(<argument pos:start="59:18" pos:end="59:19"><expr pos:start="59:18" pos:end="59:19"><name pos:start="59:18" pos:end="59:19">gb</name></expr></argument>, <argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:26" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:39">

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:14">flags</name> <operator pos:start="61:16" pos:end="61:17">|=</operator> <name pos:start="61:19" pos:end="61:34">AC3_BSI_LANGCODE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">bsi</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:20">langcod</name></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <call pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:31">get_bits</name><argument_list pos:start="63:32" pos:end="63:38">(<argument pos:start="63:33" pos:end="63:34"><expr pos:start="63:33" pos:end="63:34"><name pos:start="63:33" pos:end="63:34">gb</name></expr></argument>, <argument pos:start="63:37" pos:end="63:37"><expr pos:start="63:37" pos:end="63:37"><literal type="number" pos:start="63:37" pos:end="63:37">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="75:5">if <condition pos:start="67:8" pos:end="67:24">(<expr pos:start="67:9" pos:end="67:23"><call pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:16">get_bits</name><argument_list pos:start="67:17" pos:end="67:23">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">gb</name></expr></argument>, <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:26" pos:end="75:5">{<block_content pos:start="69:9" pos:end="73:39">

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:14">flags</name> <operator pos:start="69:16" pos:end="69:17">|=</operator> <name pos:start="69:19" pos:end="69:35">AC3_BSI_AUDPRODIE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:40"><expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">bsi</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:21">mixlevel</name></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:39"><name pos:start="71:25" pos:end="71:32">get_bits</name><argument_list pos:start="71:33" pos:end="71:39">(<argument pos:start="71:34" pos:end="71:35"><expr pos:start="71:34" pos:end="71:35"><name pos:start="71:34" pos:end="71:35">gb</name></expr></argument>, <argument pos:start="71:38" pos:end="71:38"><expr pos:start="71:38" pos:end="71:38"><literal type="number" pos:start="71:38" pos:end="71:38">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:39"><expr pos:start="73:9" pos:end="73:38"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:11">bsi</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:20">roomtyp</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:38"><name pos:start="73:24" pos:end="73:31">get_bits</name><argument_list pos:start="73:32" pos:end="73:38">(<argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><name pos:start="73:33" pos:end="73:34">gb</name></expr></argument>, <argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><literal type="number" pos:start="73:37" pos:end="73:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="107:5"><if pos:start="77:5" pos:end="107:5">if <condition pos:start="77:8" pos:end="77:27">(<expr pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:11">bsi</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:18">acmod</name></name> <operator pos:start="77:20" pos:end="77:21">==</operator> <literal type="number" pos:start="77:23" pos:end="77:26">0x00</literal></expr>)</condition> <block pos:start="77:29" pos:end="107:5">{<block_content pos:start="79:9" pos:end="105:9">

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:11">bsi</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:22">dialnorm2</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <call pos:start="79:26" pos:end="79:40"><name pos:start="79:26" pos:end="79:33">get_bits</name><argument_list pos:start="79:34" pos:end="79:40">(<argument pos:start="79:35" pos:end="79:36"><expr pos:start="79:35" pos:end="79:36"><name pos:start="79:35" pos:end="79:36">gb</name></expr></argument>, <argument pos:start="79:39" pos:end="79:39"><expr pos:start="79:39" pos:end="79:39"><literal type="number" pos:start="79:39" pos:end="79:39">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:28">(<expr pos:start="81:13" pos:end="81:27"><call pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:20">get_bits</name><argument_list pos:start="81:21" pos:end="81:27">(<argument pos:start="81:22" pos:end="81:23"><expr pos:start="81:22" pos:end="81:23"><name pos:start="81:22" pos:end="81:23">gb</name></expr></argument>, <argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:30" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:42">

            <expr_stmt pos:start="83:13" pos:end="83:38"><expr pos:start="83:13" pos:end="83:37"><operator pos:start="83:13" pos:end="83:13">*</operator><name pos:start="83:14" pos:end="83:18">flags</name> <operator pos:start="83:20" pos:end="83:21">|=</operator> <name pos:start="83:23" pos:end="83:37">AC3_BSI_COMPR2E</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:42"><expr pos:start="85:13" pos:end="85:41"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:15">bsi</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:23">compr2</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:41"><name pos:start="85:27" pos:end="85:34">get_bits</name><argument_list pos:start="85:35" pos:end="85:41">(<argument pos:start="85:36" pos:end="85:37"><expr pos:start="85:36" pos:end="85:37"><name pos:start="85:36" pos:end="85:37">gb</name></expr></argument>, <argument pos:start="85:40" pos:end="85:40"><expr pos:start="85:40" pos:end="85:40"><literal type="number" pos:start="85:40" pos:end="85:40">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:28">(<expr pos:start="89:13" pos:end="89:27"><call pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:20">get_bits</name><argument_list pos:start="89:21" pos:end="89:27">(<argument pos:start="89:22" pos:end="89:23"><expr pos:start="89:22" pos:end="89:23"><name pos:start="89:22" pos:end="89:23">gb</name></expr></argument>, <argument pos:start="89:26" pos:end="89:26"><expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:30" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:44">

            <expr_stmt pos:start="91:13" pos:end="91:40"><expr pos:start="91:13" pos:end="91:39"><operator pos:start="91:13" pos:end="91:13">*</operator><name pos:start="91:14" pos:end="91:18">flags</name> <operator pos:start="91:20" pos:end="91:21">|=</operator> <name pos:start="91:23" pos:end="91:39">AC3_BSI_LANGCOD2E</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:44"><expr pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:15">bsi</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:25">langcod2</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <call pos:start="93:29" pos:end="93:43"><name pos:start="93:29" pos:end="93:36">get_bits</name><argument_list pos:start="93:37" pos:end="93:43">(<argument pos:start="93:38" pos:end="93:39"><expr pos:start="93:38" pos:end="93:39"><name pos:start="93:38" pos:end="93:39">gb</name></expr></argument>, <argument pos:start="93:42" pos:end="93:42"><expr pos:start="93:42" pos:end="93:42"><literal type="number" pos:start="93:42" pos:end="93:42">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="97:9" pos:end="105:9"><if pos:start="97:9" pos:end="105:9">if <condition pos:start="97:12" pos:end="97:28">(<expr pos:start="97:13" pos:end="97:27"><call pos:start="97:13" pos:end="97:27"><name pos:start="97:13" pos:end="97:20">get_bits</name><argument_list pos:start="97:21" pos:end="97:27">(<argument pos:start="97:22" pos:end="97:23"><expr pos:start="97:22" pos:end="97:23"><name pos:start="97:22" pos:end="97:23">gb</name></expr></argument>, <argument pos:start="97:26" pos:end="97:26"><expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:30" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:44">

            <expr_stmt pos:start="99:13" pos:end="99:40"><expr pos:start="99:13" pos:end="99:39"><operator pos:start="99:13" pos:end="99:13">*</operator><name pos:start="99:14" pos:end="99:18">flags</name> <operator pos:start="99:20" pos:end="99:21">|=</operator> <name pos:start="99:23" pos:end="99:39">AC3_BSI_AUDPRODIE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:45"><expr pos:start="101:13" pos:end="101:44"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:15">bsi</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:26">mixlevel2</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <call pos:start="101:30" pos:end="101:44"><name pos:start="101:30" pos:end="101:37">get_bits</name><argument_list pos:start="101:38" pos:end="101:44">(<argument pos:start="101:39" pos:end="101:40"><expr pos:start="101:39" pos:end="101:40"><name pos:start="101:39" pos:end="101:40">gb</name></expr></argument>, <argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:44"><expr pos:start="103:13" pos:end="103:43"><name pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:15">bsi</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:25">roomtyp2</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <call pos:start="103:29" pos:end="103:43"><name pos:start="103:29" pos:end="103:36">get_bits</name><argument_list pos:start="103:37" pos:end="103:43">(<argument pos:start="103:38" pos:end="103:39"><expr pos:start="103:38" pos:end="103:39"><name pos:start="103:38" pos:end="103:39">gb</name></expr></argument>, <argument pos:start="103:42" pos:end="103:42"><expr pos:start="103:42" pos:end="103:42"><literal type="number" pos:start="103:42" pos:end="103:42">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="109:5" pos:end="111:37"><if pos:start="109:5" pos:end="111:37">if <condition pos:start="109:8" pos:end="109:24">(<expr pos:start="109:9" pos:end="109:23"><call pos:start="109:9" pos:end="109:23"><name pos:start="109:9" pos:end="109:16">get_bits</name><argument_list pos:start="109:17" pos:end="109:23">(<argument pos:start="109:18" pos:end="109:19"><expr pos:start="109:18" pos:end="109:19"><name pos:start="109:18" pos:end="109:19">gb</name></expr></argument>, <argument pos:start="109:22" pos:end="109:22"><expr pos:start="109:22" pos:end="109:22"><literal type="number" pos:start="109:22" pos:end="109:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:37"><block_content pos:start="111:9" pos:end="111:37">

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><operator pos:start="111:9" pos:end="111:9">*</operator><name pos:start="111:10" pos:end="111:14">flags</name> <operator pos:start="111:16" pos:end="111:17">|=</operator> <name pos:start="111:19" pos:end="111:36">AC3_BSI_COPYRIGHTB</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="115:33"><if pos:start="113:5" pos:end="115:33">if <condition pos:start="113:8" pos:end="113:24">(<expr pos:start="113:9" pos:end="113:23"><call pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:16">get_bits</name><argument_list pos:start="113:17" pos:end="113:23">(<argument pos:start="113:18" pos:end="113:19"><expr pos:start="113:18" pos:end="113:19"><name pos:start="113:18" pos:end="113:19">gb</name></expr></argument>, <argument pos:start="113:22" pos:end="113:22"><expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:33"><block_content pos:start="115:9" pos:end="115:33">

        <expr_stmt pos:start="115:9" pos:end="115:33"><expr pos:start="115:9" pos:end="115:32"><operator pos:start="115:9" pos:end="115:9">*</operator><name pos:start="115:10" pos:end="115:14">flags</name> <operator pos:start="115:16" pos:end="115:17">|=</operator> <name pos:start="115:19" pos:end="115:32">AC3_BSI_ORIGBS</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:24">(<expr pos:start="117:9" pos:end="117:23"><call pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:16">get_bits</name><argument_list pos:start="117:17" pos:end="117:23">(<argument pos:start="117:18" pos:end="117:19"><expr pos:start="117:18" pos:end="117:19"><name pos:start="117:18" pos:end="117:19">gb</name></expr></argument>, <argument pos:start="117:22" pos:end="117:22"><expr pos:start="117:22" pos:end="117:22"><literal type="number" pos:start="117:22" pos:end="117:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:26" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:41">

        <expr_stmt pos:start="119:9" pos:end="119:36"><expr pos:start="119:9" pos:end="119:35"><operator pos:start="119:9" pos:end="119:9">*</operator><name pos:start="119:10" pos:end="119:14">flags</name> <operator pos:start="119:16" pos:end="119:17">|=</operator> <name pos:start="119:19" pos:end="119:35">AC3_BSI_TIMECOD1E</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:41"><expr pos:start="121:9" pos:end="121:40"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:11">bsi</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:21">timecod1</name></name> <operator pos:start="121:23" pos:end="121:23">=</operator> <call pos:start="121:25" pos:end="121:40"><name pos:start="121:25" pos:end="121:32">get_bits</name><argument_list pos:start="121:33" pos:end="121:40">(<argument pos:start="121:34" pos:end="121:35"><expr pos:start="121:34" pos:end="121:35"><name pos:start="121:34" pos:end="121:35">gb</name></expr></argument>, <argument pos:start="121:38" pos:end="121:39"><expr pos:start="121:38" pos:end="121:39"><literal type="number" pos:start="121:38" pos:end="121:39">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="131:5"><if pos:start="125:5" pos:end="131:5">if <condition pos:start="125:8" pos:end="125:24">(<expr pos:start="125:9" pos:end="125:23"><call pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:16">get_bits</name><argument_list pos:start="125:17" pos:end="125:23">(<argument pos:start="125:18" pos:end="125:19"><expr pos:start="125:18" pos:end="125:19"><name pos:start="125:18" pos:end="125:19">gb</name></expr></argument>, <argument pos:start="125:22" pos:end="125:22"><expr pos:start="125:22" pos:end="125:22"><literal type="number" pos:start="125:22" pos:end="125:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:26" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:41">

        <expr_stmt pos:start="127:9" pos:end="127:36"><expr pos:start="127:9" pos:end="127:35"><operator pos:start="127:9" pos:end="127:9">*</operator><name pos:start="127:10" pos:end="127:14">flags</name> <operator pos:start="127:16" pos:end="127:17">|=</operator> <name pos:start="127:19" pos:end="127:35">AC3_BSI_TIMECOD2E</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:41"><expr pos:start="129:9" pos:end="129:40"><name pos:start="129:9" pos:end="129:21"><name pos:start="129:9" pos:end="129:11">bsi</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:21">timecod2</name></name> <operator pos:start="129:23" pos:end="129:23">=</operator> <call pos:start="129:25" pos:end="129:40"><name pos:start="129:25" pos:end="129:32">get_bits</name><argument_list pos:start="129:33" pos:end="129:40">(<argument pos:start="129:34" pos:end="129:35"><expr pos:start="129:34" pos:end="129:35"><name pos:start="129:34" pos:end="129:35">gb</name></expr></argument>, <argument pos:start="129:38" pos:end="129:39"><expr pos:start="129:38" pos:end="129:39"><literal type="number" pos:start="129:38" pos:end="129:39">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="145:5"><if pos:start="133:5" pos:end="145:5">if <condition pos:start="133:8" pos:end="133:24">(<expr pos:start="133:9" pos:end="133:23"><call pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:16">get_bits</name><argument_list pos:start="133:17" pos:end="133:23">(<argument pos:start="133:18" pos:end="133:19"><expr pos:start="133:18" pos:end="133:19"><name pos:start="133:18" pos:end="133:19">gb</name></expr></argument>, <argument pos:start="133:22" pos:end="133:22"><expr pos:start="133:22" pos:end="133:22"><literal type="number" pos:start="133:22" pos:end="133:22">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="133:26" pos:end="145:5">{<block_content pos:start="135:9" pos:end="143:33">

        <expr_stmt pos:start="135:9" pos:end="135:34"><expr pos:start="135:9" pos:end="135:33"><operator pos:start="135:9" pos:end="135:9">*</operator><name pos:start="135:10" pos:end="135:14">flags</name> <operator pos:start="135:16" pos:end="135:17">|=</operator> <name pos:start="135:19" pos:end="135:33">AC3_BSI_ADDBSIE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:39"><expr pos:start="137:9" pos:end="137:38"><name pos:start="137:9" pos:end="137:20"><name pos:start="137:9" pos:end="137:11">bsi</name><operator pos:start="137:12" pos:end="137:13">-&gt;</operator><name pos:start="137:14" pos:end="137:20">addbsil</name></name> <operator pos:start="137:22" pos:end="137:22">=</operator> <call pos:start="137:24" pos:end="137:38"><name pos:start="137:24" pos:end="137:31">get_bits</name><argument_list pos:start="137:32" pos:end="137:38">(<argument pos:start="137:33" pos:end="137:34"><expr pos:start="137:33" pos:end="137:34"><name pos:start="137:33" pos:end="137:34">gb</name></expr></argument>, <argument pos:start="137:37" pos:end="137:37"><expr pos:start="137:37" pos:end="137:37"><literal type="number" pos:start="137:37" pos:end="137:37">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <do pos:start="139:9" pos:end="143:33">do <block pos:start="139:12" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:28">

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><call pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:20">get_bits</name><argument_list pos:start="141:21" pos:end="141:27">(<argument pos:start="141:22" pos:end="141:23"><expr pos:start="141:22" pos:end="141:23"><name pos:start="141:22" pos:end="141:23">gb</name></expr></argument>, <argument pos:start="141:26" pos:end="141:26"><expr pos:start="141:26" pos:end="141:26"><literal type="number" pos:start="141:26" pos:end="141:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block> while <condition pos:start="143:17" pos:end="143:32">(<expr pos:start="143:18" pos:end="143:31"><name pos:start="143:18" pos:end="143:29"><name pos:start="143:18" pos:end="143:20">bsi</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:29">addbsil</name></name><operator pos:start="143:30" pos:end="143:31">--</operator></expr>)</condition>;</do>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:43"><expr pos:start="149:5" pos:end="149:42"><name pos:start="149:5" pos:end="149:16"><name pos:start="149:5" pos:end="149:7">bsi</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:16">nfchans</name></name> <operator pos:start="149:18" pos:end="149:18">=</operator> <name pos:start="149:20" pos:end="149:42"><name pos:start="149:20" pos:end="149:30">nfchans_tbl</name><index pos:start="149:31" pos:end="149:42">[<expr pos:start="149:32" pos:end="149:41"><name pos:start="149:32" pos:end="149:41"><name pos:start="149:32" pos:end="149:34">bsi</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:41">acmod</name></name></expr>]</index></name></expr>;</expr_stmt>



    <return pos:start="153:5" pos:end="153:13">return <expr pos:start="153:12" pos:end="153:12"><literal type="number" pos:start="153:12" pos:end="153:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
