<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22438.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">virtio_scsi_dataplane_stop</name><parameter_list pos:start="1:32" pos:end="1:46">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:42">VirtIOSCSI</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:33">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">BusState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">qbus</name> <init pos:start="5:20" pos:end="5:56">= <expr pos:start="5:22" pos:end="5:56"><call pos:start="5:22" pos:end="5:56"><name pos:start="5:22" pos:end="5:24">BUS</name><argument_list pos:start="5:25" pos:end="5:56">(<argument pos:start="5:26" pos:end="5:55"><expr pos:start="5:26" pos:end="5:55"><call pos:start="5:26" pos:end="5:55"><name pos:start="5:26" pos:end="5:44">qdev_get_parent_bus</name><argument_list pos:start="5:45" pos:end="5:55">(<argument pos:start="5:46" pos:end="5:54"><expr pos:start="5:46" pos:end="5:54"><call pos:start="5:46" pos:end="5:54"><name pos:start="5:46" pos:end="5:51">DEVICE</name><argument_list pos:start="5:52" pos:end="5:54">(<argument pos:start="5:53" pos:end="5:53"><expr pos:start="5:53" pos:end="5:53"><name pos:start="5:53" pos:end="5:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtioBusClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">k</name> <init pos:start="7:23" pos:end="7:50">= <expr pos:start="7:25" pos:end="7:50"><call pos:start="7:25" pos:end="7:50"><name pos:start="7:25" pos:end="7:44">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="7:45" pos:end="7:50">(<argument pos:start="7:46" pos:end="7:49"><expr pos:start="7:46" pos:end="7:49"><name pos:start="7:46" pos:end="7:49">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><call pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:38">VIRTIO_DEVICE</name><argument_list pos:start="9:39" pos:end="9:41">(<argument pos:start="9:40" pos:end="9:40"><expr pos:start="9:40" pos:end="9:40"><name pos:start="9:40" pos:end="9:40">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">VirtIOSCSICommon</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">vs</name> <init pos:start="11:26" pos:end="11:48">= <expr pos:start="11:28" pos:end="11:48"><call pos:start="11:28" pos:end="11:48"><name pos:start="11:28" pos:end="11:45">VIRTIO_SCSI_COMMON</name><argument_list pos:start="11:46" pos:end="11:48">(<argument pos:start="11:47" pos:end="11:47"><expr pos:start="11:47" pos:end="11:47"><name pos:start="11:47" pos:end="11:47">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:55">(<expr pos:start="17:9" pos:end="17:54"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:10">s</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:29">dataplane_started</name></name> <operator pos:start="17:31" pos:end="17:32">||</operator> <name pos:start="17:34" pos:end="17:54"><name pos:start="17:34" pos:end="17:34">s</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:54">dataplane_stopping</name></name></expr>)</condition> <block pos:start="17:57" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:14">error_free</name><argument_list pos:start="23:15" pos:end="23:26">(<argument pos:start="23:16" pos:end="23:25"><expr pos:start="23:16" pos:end="23:25"><name pos:start="23:16" pos:end="23:25"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:25">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">blocker</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:25">dataplane_stopping</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:32">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:66"><expr pos:start="29:5" pos:end="29:65"><call pos:start="29:5" pos:end="29:65"><name pos:start="29:5" pos:end="29:10">assert</name><argument_list pos:start="29:11" pos:end="29:65">(<argument pos:start="29:12" pos:end="29:64"><expr pos:start="29:12" pos:end="29:64"><name pos:start="29:12" pos:end="29:17"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:17">ctx</name></name> <operator pos:start="29:19" pos:end="29:20">==</operator> <call pos:start="29:22" pos:end="29:64"><name pos:start="29:22" pos:end="29:45">iothread_get_aio_context</name><argument_list pos:start="29:46" pos:end="29:64">(<argument pos:start="29:47" pos:end="29:63"><expr pos:start="29:47" pos:end="29:63"><name pos:start="29:47" pos:end="29:63"><name pos:start="29:47" pos:end="29:48">vs</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:54">conf</name><operator pos:start="29:55" pos:end="29:55">.</operator><name pos:start="29:56" pos:end="29:63">iothread</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><call pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:23">aio_context_acquire</name><argument_list pos:start="33:24" pos:end="33:31">(<argument pos:start="33:25" pos:end="33:30"><expr pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:30"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:72"><expr pos:start="37:5" pos:end="37:71"><call pos:start="37:5" pos:end="37:71"><name pos:start="37:5" pos:end="37:26">aio_set_event_notifier</name><argument_list pos:start="37:27" pos:end="37:71">(<argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:33"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:33">ctx</name></name></expr></argument>, <argument pos:start="37:36" pos:end="37:64"><expr pos:start="37:36" pos:end="37:64"><operator pos:start="37:36" pos:end="37:36">&amp;</operator><name pos:start="37:37" pos:end="37:64"><name pos:start="37:37" pos:end="37:37">s</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:49">ctrl_vring</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:64">host_notifier</name></name></expr></argument>, <argument pos:start="37:67" pos:end="37:70"><expr pos:start="37:67" pos:end="37:70"><name pos:start="37:67" pos:end="37:70">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:73"><expr pos:start="39:5" pos:end="39:72"><call pos:start="39:5" pos:end="39:72"><name pos:start="39:5" pos:end="39:26">aio_set_event_notifier</name><argument_list pos:start="39:27" pos:end="39:72">(<argument pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:33">ctx</name></name></expr></argument>, <argument pos:start="39:36" pos:end="39:65"><expr pos:start="39:36" pos:end="39:65"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:65"><name pos:start="39:37" pos:end="39:37">s</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:50">event_vring</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:65">host_notifier</name></name></expr></argument>, <argument pos:start="39:68" pos:end="39:71"><expr pos:start="39:68" pos:end="39:71"><name pos:start="39:68" pos:end="39:71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="45:5">for <control pos:start="41:9" pos:end="41:45">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:40"><expr pos:start="41:17" pos:end="41:39"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:39"><name pos:start="41:21" pos:end="41:22">vs</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:28">conf</name><operator pos:start="41:29" pos:end="41:29">.</operator><name pos:start="41:30" pos:end="41:39">num_queues</name></name></expr>;</condition> <incr pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><name pos:start="41:42" pos:end="41:42">i</name><operator pos:start="41:43" pos:end="41:44">++</operator></expr></incr>)</control> <block pos:start="41:47" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:79">

        <expr_stmt pos:start="43:9" pos:end="43:79"><expr pos:start="43:9" pos:end="43:78"><call pos:start="43:9" pos:end="43:78"><name pos:start="43:9" pos:end="43:30">aio_set_event_notifier</name><argument_list pos:start="43:31" pos:end="43:78">(<argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:37">ctx</name></name></expr></argument>, <argument pos:start="43:40" pos:end="43:71"><expr pos:start="43:40" pos:end="43:71"><operator pos:start="43:40" pos:end="43:40">&amp;</operator><name pos:start="43:41" pos:end="43:56"><name pos:start="43:41" pos:end="43:41">s</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:53">cmd_vrings</name><index pos:start="43:54" pos:end="43:56">[<expr pos:start="43:55" pos:end="43:55"><name pos:start="43:55" pos:end="43:55">i</name></expr>]</index></name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:71">host_notifier</name></expr></argument>, <argument pos:start="43:74" pos:end="43:77"><expr pos:start="43:74" pos:end="43:77"><name pos:start="43:74" pos:end="43:77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="49:5" pos:end="49:20"><expr pos:start="49:5" pos:end="49:19"><call pos:start="49:5" pos:end="49:19"><name pos:start="49:5" pos:end="49:17">blk_drain_all</name><argument_list pos:start="49:18" pos:end="49:19">()</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:22" pos:end="49:65">/* ensure there are no in-flight requests */</comment>



    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><call pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:23">aio_context_release</name><argument_list pos:start="53:24" pos:end="53:31">(<argument pos:start="53:25" pos:end="53:30"><expr pos:start="53:25" pos:end="53:30"><name pos:start="53:25" pos:end="53:30"><name pos:start="53:25" pos:end="53:25">s</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:30">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="61:7">/* Sync vring state back to virtqueue so that non-dataplane request

     * processing can continue when we disable the host notifier below.

     */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><call pos:start="63:5" pos:end="63:50"><name pos:start="63:5" pos:end="63:18">vring_teardown</name><argument_list pos:start="63:19" pos:end="63:50">(<argument pos:start="63:20" pos:end="63:40"><expr pos:start="63:20" pos:end="63:40"><operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:40"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:33">ctrl_vring</name><operator pos:start="63:34" pos:end="63:35">-&gt;</operator><name pos:start="63:36" pos:end="63:40">vring</name></name></expr></argument>, <argument pos:start="63:43" pos:end="63:46"><expr pos:start="63:43" pos:end="63:46"><name pos:start="63:43" pos:end="63:46">vdev</name></expr></argument>, <argument pos:start="63:49" pos:end="63:49"><expr pos:start="63:49" pos:end="63:49"><literal type="number" pos:start="63:49" pos:end="63:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:52"><expr pos:start="65:5" pos:end="65:51"><call pos:start="65:5" pos:end="65:51"><name pos:start="65:5" pos:end="65:18">vring_teardown</name><argument_list pos:start="65:19" pos:end="65:51">(<argument pos:start="65:20" pos:end="65:41"><expr pos:start="65:20" pos:end="65:41"><operator pos:start="65:20" pos:end="65:20">&amp;</operator><name pos:start="65:21" pos:end="65:41"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:34">event_vring</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:41">vring</name></name></expr></argument>, <argument pos:start="65:44" pos:end="65:47"><expr pos:start="65:44" pos:end="65:47"><name pos:start="65:44" pos:end="65:47">vdev</name></expr></argument>, <argument pos:start="65:50" pos:end="65:50"><expr pos:start="65:50" pos:end="65:50"><literal type="number" pos:start="65:50" pos:end="65:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="71:5">for <control pos:start="67:9" pos:end="67:45">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:40"><expr pos:start="67:17" pos:end="67:39"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:39"><name pos:start="67:21" pos:end="67:22">vs</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:28">conf</name><operator pos:start="67:29" pos:end="67:29">.</operator><name pos:start="67:30" pos:end="67:39">num_queues</name></name></expr>;</condition> <incr pos:start="67:42" pos:end="67:44"><expr pos:start="67:42" pos:end="67:44"><name pos:start="67:42" pos:end="67:42">i</name><operator pos:start="67:43" pos:end="67:44">++</operator></expr></incr>)</control> <block pos:start="67:47" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:62">

        <expr_stmt pos:start="69:9" pos:end="69:62"><expr pos:start="69:9" pos:end="69:61"><call pos:start="69:9" pos:end="69:61"><name pos:start="69:9" pos:end="69:22">vring_teardown</name><argument_list pos:start="69:23" pos:end="69:61">(<argument pos:start="69:24" pos:end="69:47"><expr pos:start="69:24" pos:end="69:47"><operator pos:start="69:24" pos:end="69:24">&amp;</operator><name pos:start="69:25" pos:end="69:40"><name pos:start="69:25" pos:end="69:25">s</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:37">cmd_vrings</name><index pos:start="69:38" pos:end="69:40">[<expr pos:start="69:39" pos:end="69:39"><name pos:start="69:39" pos:end="69:39">i</name></expr>]</index></name><operator pos:start="69:41" pos:end="69:42">-&gt;</operator><name pos:start="69:43" pos:end="69:47">vring</name></expr></argument>, <argument pos:start="69:50" pos:end="69:53"><expr pos:start="69:50" pos:end="69:53"><name pos:start="69:50" pos:end="69:53">vdev</name></expr></argument>, <argument pos:start="69:56" pos:end="69:60"><expr pos:start="69:56" pos:end="69:60"><literal type="number" pos:start="69:56" pos:end="69:58">2</literal> <operator pos:start="69:58" pos:end="69:58">+</operator> <name pos:start="69:60" pos:end="69:60">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="75:5" pos:end="79:5">for <control pos:start="75:9" pos:end="75:49">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:44"><expr pos:start="75:17" pos:end="75:43"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <name pos:start="75:21" pos:end="75:39"><name pos:start="75:21" pos:end="75:22">vs</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:28">conf</name><operator pos:start="75:29" pos:end="75:29">.</operator><name pos:start="75:30" pos:end="75:39">num_queues</name></name> <operator pos:start="75:41" pos:end="75:41">+</operator> <literal type="number" pos:start="75:43" pos:end="75:43">2</literal></expr>;</condition> <incr pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:46">i</name><operator pos:start="75:47" pos:end="75:48">++</operator></expr></incr>)</control> <block pos:start="75:51" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:53">

        <expr_stmt pos:start="77:9" pos:end="77:53"><expr pos:start="77:9" pos:end="77:52"><call pos:start="77:9" pos:end="77:52"><name pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:9">k</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:28">set_host_notifier</name></name><argument_list pos:start="77:29" pos:end="77:52">(<argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:33">qbus</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:41">parent</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><name pos:start="77:44" pos:end="77:44">i</name></expr></argument>, <argument pos:start="77:47" pos:end="77:51"><expr pos:start="77:47" pos:end="77:51"><name pos:start="77:47" pos:end="77:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="83:5" pos:end="83:39">/* Clean up guest notifier (irq) */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:73"><expr pos:start="85:5" pos:end="85:72"><call pos:start="85:5" pos:end="85:72"><name pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:5">k</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:26">set_guest_notifiers</name></name><argument_list pos:start="85:27" pos:end="85:72">(<argument pos:start="85:28" pos:end="85:39"><expr pos:start="85:28" pos:end="85:39"><name pos:start="85:28" pos:end="85:39"><name pos:start="85:28" pos:end="85:31">qbus</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:39">parent</name></name></expr></argument>, <argument pos:start="85:42" pos:end="85:64"><expr pos:start="85:42" pos:end="85:64"><name pos:start="85:42" pos:end="85:60"><name pos:start="85:42" pos:end="85:43">vs</name><operator pos:start="85:44" pos:end="85:45">-&gt;</operator><name pos:start="85:46" pos:end="85:49">conf</name><operator pos:start="85:50" pos:end="85:50">.</operator><name pos:start="85:51" pos:end="85:60">num_queues</name></name> <operator pos:start="85:62" pos:end="85:62">+</operator> <literal type="number" pos:start="85:64" pos:end="85:64">2</literal></expr></argument>, <argument pos:start="85:67" pos:end="85:71"><expr pos:start="85:67" pos:end="85:71"><name pos:start="85:67" pos:end="85:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:34"><expr pos:start="87:5" pos:end="87:33"><name pos:start="87:5" pos:end="87:25"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:25">dataplane_stopping</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:33">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:24"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:24">dataplane_started</name></name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:32">false</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
