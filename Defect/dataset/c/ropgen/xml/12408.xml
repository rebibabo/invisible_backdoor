<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12408.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">TRBCCode</name></type> <name pos:start="1:17" pos:end="1:33">xhci_address_slot</name><parameter_list pos:start="1:34" pos:end="2:59">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:49"><name pos:start="1:35" pos:end="1:43">XHCIState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">xhci</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:70"><decl pos:start="1:52" pos:end="1:70"><type pos:start="1:52" pos:end="1:70"><name pos:start="1:52" pos:end="1:59">unsigned</name> <name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:70">slotid</name></decl></parameter>,
                                  <parameter pos:start="2:35" pos:end="2:48"><decl pos:start="2:35" pos:end="2:48"><type pos:start="2:35" pos:end="2:48"><name pos:start="2:35" pos:end="2:42">uint64_t</name></type> <name pos:start="2:44" pos:end="2:48">pictx</name></decl></parameter>, <parameter pos:start="2:51" pos:end="2:58"><decl pos:start="2:51" pos:end="2:58"><type pos:start="2:51" pos:end="2:58"><name pos:start="2:51" pos:end="2:54">bool</name></type> <name pos:start="2:56" pos:end="2:58">bsr</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="4:5" pos:end="78:15">
    <decl_stmt pos:start="4:5" pos:end="4:19"><decl pos:start="4:5" pos:end="4:18"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">XHCISlot</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:18">slot</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">USBPort</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">uport</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:19"><decl pos:start="6:5" pos:end="6:18"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:13">USBDevice</name> <modifier pos:start="6:15" pos:end="6:15">*</modifier></type><name pos:start="6:16" pos:end="6:18">dev</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">dma_addr_t</name></type> <name pos:start="7:16" pos:end="7:19">ictx</name></decl>, <decl pos:start="7:22" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:22" pos:end="7:25">octx</name></decl>, <decl pos:start="7:28" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:14"/><name pos:start="7:28" pos:end="7:33">dcbaap</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:18"><type pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:12">uint64_t</name></type> <name pos:start="8:14" pos:end="8:18">poctx</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:24"><name pos:start="9:14" pos:end="9:21">ictl_ctx</name><index pos:start="9:22" pos:end="9:24">[<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">2</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:25"><decl pos:start="10:5" pos:end="10:24"><type pos:start="10:5" pos:end="10:12"><name pos:start="10:5" pos:end="10:12">uint32_t</name></type> <name pos:start="10:14" pos:end="10:24"><name pos:start="10:14" pos:end="10:21">slot_ctx</name><index pos:start="10:22" pos:end="10:24">[<expr pos:start="10:23" pos:end="10:23"><literal type="number" pos:start="10:23" pos:end="10:23">4</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:23"><name pos:start="11:14" pos:end="11:20">ep0_ctx</name><index pos:start="11:21" pos:end="11:23">[<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">5</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:10"><decl pos:start="12:5" pos:end="12:9"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type> <name pos:start="12:9" pos:end="12:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">TRBCCode</name></type> <name pos:start="13:14" pos:end="13:16">res</name></decl>;</decl_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:40"><expr pos:start="14:5" pos:end="14:39"><call pos:start="14:5" pos:end="14:39"><name pos:start="14:5" pos:end="14:31">trace_usb_xhci_slot_address</name><argument_list pos:start="14:32" pos:end="14:39">(<argument pos:start="14:33" pos:end="14:38"><expr pos:start="14:33" pos:end="14:38"><name pos:start="14:33" pos:end="14:38">slotid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:52"><expr pos:start="15:5" pos:end="15:51"><call pos:start="15:5" pos:end="15:51"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:51">(<argument pos:start="15:12" pos:end="15:50"><expr pos:start="15:12" pos:end="15:50"><name pos:start="15:12" pos:end="15:17">slotid</name> <operator pos:start="15:19" pos:end="15:20">&gt;=</operator> <literal type="number" pos:start="15:22" pos:end="15:22">1</literal> <operator pos:start="15:24" pos:end="15:25">&amp;&amp;</operator> <name pos:start="15:27" pos:end="15:32">slotid</name> <operator pos:start="15:34" pos:end="15:35">&lt;=</operator> <name pos:start="15:37" pos:end="15:50"><name pos:start="15:37" pos:end="15:40">xhci</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:50">numslots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:62"><expr pos:start="16:5" pos:end="16:61"><name pos:start="16:5" pos:end="16:10">dcbaap</name> <operator pos:start="16:12" pos:end="16:12">=</operator> <call pos:start="16:14" pos:end="16:61"><name pos:start="16:14" pos:end="16:24">xhci_addr64</name><argument_list pos:start="16:25" pos:end="16:61">(<argument pos:start="16:26" pos:end="16:41"><expr pos:start="16:26" pos:end="16:41"><name pos:start="16:26" pos:end="16:41"><name pos:start="16:26" pos:end="16:29">xhci</name><operator pos:start="16:30" pos:end="16:31">-&gt;</operator><name pos:start="16:32" pos:end="16:41">dcbaap_low</name></name></expr></argument>, <argument pos:start="16:44" pos:end="16:60"><expr pos:start="16:44" pos:end="16:60"><name pos:start="16:44" pos:end="16:60"><name pos:start="16:44" pos:end="16:47">xhci</name><operator pos:start="16:48" pos:end="16:49">-&gt;</operator><name pos:start="16:50" pos:end="16:60">dcbaap_high</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:9">poctx</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:61"><name pos:start="17:13" pos:end="17:26">ldq_le_pci_dma</name><argument_list pos:start="17:27" pos:end="17:61">(<argument pos:start="17:28" pos:end="17:41"><expr pos:start="17:28" pos:end="17:41"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:41"><name pos:start="17:29" pos:end="17:32">xhci</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:41">pci_dev</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:60"><expr pos:start="17:44" pos:end="17:60"><name pos:start="17:44" pos:end="17:49">dcbaap</name> <operator pos:start="17:51" pos:end="17:51">+</operator> <literal type="number" pos:start="17:53" pos:end="17:53">8</literal><operator pos:start="17:54" pos:end="17:54">*</operator><name pos:start="17:55" pos:end="17:60">slotid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:30"><expr pos:start="18:5" pos:end="18:29"><name pos:start="18:5" pos:end="18:8">ictx</name> <operator pos:start="18:10" pos:end="18:10">=</operator> <call pos:start="18:12" pos:end="18:29"><name pos:start="18:12" pos:end="18:22">xhci_mask64</name><argument_list pos:start="18:23" pos:end="18:29">(<argument pos:start="18:24" pos:end="18:28"><expr pos:start="18:24" pos:end="18:28"><name pos:start="18:24" pos:end="18:28">pictx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:8">octx</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:29"><name pos:start="19:12" pos:end="19:22">xhci_mask64</name><argument_list pos:start="19:23" pos:end="19:29">(<argument pos:start="19:24" pos:end="19:28"><expr pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:28">poctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:61"><expr pos:start="20:5" pos:end="20:60"><call pos:start="20:5" pos:end="20:60"><name pos:start="20:5" pos:end="20:11">DPRINTF</name><argument_list pos:start="20:12" pos:end="20:60">(<argument pos:start="20:13" pos:end="20:53"><expr pos:start="20:13" pos:end="20:53"><literal type="string" pos:start="20:13" pos:end="20:37">"xhci: input context at "</literal><name pos:start="20:38" pos:end="20:49">DMA_ADDR_FMT</name><literal type="string" pos:start="20:50" pos:end="20:53">"\n"</literal></expr></argument>, <argument pos:start="20:56" pos:end="20:59"><expr pos:start="20:56" pos:end="20:59"><name pos:start="20:56" pos:end="20:59">ictx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:62"><expr pos:start="21:5" pos:end="21:61"><call pos:start="21:5" pos:end="21:61"><name pos:start="21:5" pos:end="21:11">DPRINTF</name><argument_list pos:start="21:12" pos:end="21:61">(<argument pos:start="21:13" pos:end="21:54"><expr pos:start="21:13" pos:end="21:54"><literal type="string" pos:start="21:13" pos:end="21:38">"xhci: output context at "</literal><name pos:start="21:39" pos:end="21:50">DMA_ADDR_FMT</name><literal type="string" pos:start="21:51" pos:end="21:54">"\n"</literal></expr></argument>, <argument pos:start="21:57" pos:end="21:60"><expr pos:start="21:57" pos:end="21:60"><name pos:start="21:57" pos:end="21:60">octx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:63"><expr pos:start="22:5" pos:end="22:62"><call pos:start="22:5" pos:end="22:62"><name pos:start="22:5" pos:end="22:22">xhci_dma_read_u32s</name><argument_list pos:start="22:23" pos:end="22:62">(<argument pos:start="22:24" pos:end="22:27"><expr pos:start="22:24" pos:end="22:27"><name pos:start="22:24" pos:end="22:27">xhci</name></expr></argument>, <argument pos:start="22:30" pos:end="22:33"><expr pos:start="22:30" pos:end="22:33"><name pos:start="22:30" pos:end="22:33">ictx</name></expr></argument>, <argument pos:start="22:36" pos:end="22:43"><expr pos:start="22:36" pos:end="22:43"><name pos:start="22:36" pos:end="22:43">ictl_ctx</name></expr></argument>, <argument pos:start="22:46" pos:end="22:61"><expr pos:start="22:46" pos:end="22:61"><sizeof pos:start="22:46" pos:end="22:61">sizeof<argument_list pos:start="22:52" pos:end="22:61">(<argument pos:start="22:53" pos:end="22:60"><expr pos:start="22:53" pos:end="22:60"><name pos:start="22:53" pos:end="22:60">ictl_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:49">(<expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:16">ictl_ctx</name><index pos:start="23:17" pos:end="23:19">[<expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>]</index></name> <operator pos:start="23:21" pos:end="23:22">!=</operator> <literal type="number" pos:start="23:24" pos:end="23:26">0x0</literal> <operator pos:start="23:28" pos:end="23:29">||</operator> <name pos:start="23:31" pos:end="23:41"><name pos:start="23:31" pos:end="23:38">ictl_ctx</name><index pos:start="23:39" pos:end="23:41">[<expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr>]</index></name> <operator pos:start="23:43" pos:end="23:44">!=</operator> <literal type="number" pos:start="23:46" pos:end="23:48">0x3</literal></expr>)</condition> <block pos:start="23:51" pos:end="27:5">{<block_content pos:start="24:9" pos:end="26:28">
        <expr_stmt pos:start="24:9" pos:end="25:42"><expr pos:start="24:9" pos:end="25:41"><call pos:start="24:9" pos:end="25:41"><name pos:start="24:9" pos:end="24:15">fprintf</name><argument_list pos:start="24:16" pos:end="25:41">(<argument pos:start="24:17" pos:end="24:22"><expr pos:start="24:17" pos:end="24:22"><name pos:start="24:17" pos:end="24:22">stderr</name></expr></argument>, <argument pos:start="24:25" pos:end="24:73"><expr pos:start="24:25" pos:end="24:73"><literal type="string" pos:start="24:25" pos:end="24:73">"xhci: invalid input context control %08x %08x\n"</literal></expr></argument>,
                <argument pos:start="25:17" pos:end="25:27"><expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:24">ictl_ctx</name><index pos:start="25:25" pos:end="25:27">[<expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:30" pos:end="25:40"><expr pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:40"><name pos:start="25:30" pos:end="25:37">ictl_ctx</name><index pos:start="25:38" pos:end="25:40">[<expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="26:9" pos:end="26:28">return <expr pos:start="26:16" pos:end="26:27"><name pos:start="26:16" pos:end="26:27">CC_TRB_ERROR</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:66"><expr pos:start="28:5" pos:end="28:65"><call pos:start="28:5" pos:end="28:65"><name pos:start="28:5" pos:end="28:22">xhci_dma_read_u32s</name><argument_list pos:start="28:23" pos:end="28:65">(<argument pos:start="28:24" pos:end="28:27"><expr pos:start="28:24" pos:end="28:27"><name pos:start="28:24" pos:end="28:27">xhci</name></expr></argument>, <argument pos:start="28:30" pos:end="28:36"><expr pos:start="28:30" pos:end="28:36"><name pos:start="28:30" pos:end="28:33">ictx</name><operator pos:start="28:34" pos:end="28:34">+</operator><literal type="number" pos:start="28:35" pos:end="28:36">32</literal></expr></argument>, <argument pos:start="28:39" pos:end="28:46"><expr pos:start="28:39" pos:end="28:46"><name pos:start="28:39" pos:end="28:46">slot_ctx</name></expr></argument>, <argument pos:start="28:49" pos:end="28:64"><expr pos:start="28:49" pos:end="28:64"><sizeof pos:start="28:49" pos:end="28:64">sizeof<argument_list pos:start="28:55" pos:end="28:64">(<argument pos:start="28:56" pos:end="28:63"><expr pos:start="28:56" pos:end="28:63"><name pos:start="28:56" pos:end="28:63">slot_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:64"><expr pos:start="29:5" pos:end="29:63"><call pos:start="29:5" pos:end="29:63"><name pos:start="29:5" pos:end="29:22">xhci_dma_read_u32s</name><argument_list pos:start="29:23" pos:end="29:63">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">xhci</name></expr></argument>, <argument pos:start="29:30" pos:end="29:36"><expr pos:start="29:30" pos:end="29:36"><name pos:start="29:30" pos:end="29:33">ictx</name><operator pos:start="29:34" pos:end="29:34">+</operator><literal type="number" pos:start="29:35" pos:end="29:36">64</literal></expr></argument>, <argument pos:start="29:39" pos:end="29:45"><expr pos:start="29:39" pos:end="29:45"><name pos:start="29:39" pos:end="29:45">ep0_ctx</name></expr></argument>, <argument pos:start="29:48" pos:end="29:62"><expr pos:start="29:48" pos:end="29:62"><sizeof pos:start="29:48" pos:end="29:62">sizeof<argument_list pos:start="29:54" pos:end="29:62">(<argument pos:start="29:55" pos:end="29:61"><expr pos:start="29:55" pos:end="29:61"><name pos:start="29:55" pos:end="29:61">ep0_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="31:64"><expr pos:start="30:5" pos:end="31:63"><call pos:start="30:5" pos:end="31:63"><name pos:start="30:5" pos:end="30:11">DPRINTF</name><argument_list pos:start="30:12" pos:end="31:63">(<argument pos:start="30:13" pos:end="30:61"><expr pos:start="30:13" pos:end="30:61"><literal type="string" pos:start="30:13" pos:end="30:61">"xhci: input slot context: %08x %08x %08x %08x\n"</literal></expr></argument>,
            <argument pos:start="31:13" pos:end="31:23"><expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:20">slot_ctx</name><index pos:start="31:21" pos:end="31:23">[<expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:26" pos:end="31:36"><expr pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:36"><name pos:start="31:26" pos:end="31:33">slot_ctx</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:39" pos:end="31:49"><expr pos:start="31:39" pos:end="31:49"><name pos:start="31:39" pos:end="31:49"><name pos:start="31:39" pos:end="31:46">slot_ctx</name><index pos:start="31:47" pos:end="31:49">[<expr pos:start="31:48" pos:end="31:48"><literal type="number" pos:start="31:48" pos:end="31:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:52" pos:end="31:62"><expr pos:start="31:52" pos:end="31:62"><name pos:start="31:52" pos:end="31:62"><name pos:start="31:52" pos:end="31:59">slot_ctx</name><index pos:start="31:60" pos:end="31:62">[<expr pos:start="31:61" pos:end="31:61"><literal type="number" pos:start="31:61" pos:end="31:61">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="33:72"><expr pos:start="32:5" pos:end="33:71"><call pos:start="32:5" pos:end="33:71"><name pos:start="32:5" pos:end="32:11">DPRINTF</name><argument_list pos:start="32:12" pos:end="33:71">(<argument pos:start="32:13" pos:end="32:65"><expr pos:start="32:13" pos:end="32:65"><literal type="string" pos:start="32:13" pos:end="32:65">"xhci: input ep0 context: %08x %08x %08x %08x %08x\n"</literal></expr></argument>,
            <argument pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:19">ep0_ctx</name><index pos:start="33:20" pos:end="33:22">[<expr pos:start="33:21" pos:end="33:21"><literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:25" pos:end="33:34"><expr pos:start="33:25" pos:end="33:34"><name pos:start="33:25" pos:end="33:34"><name pos:start="33:25" pos:end="33:31">ep0_ctx</name><index pos:start="33:32" pos:end="33:34">[<expr pos:start="33:33" pos:end="33:33"><literal type="number" pos:start="33:33" pos:end="33:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:37" pos:end="33:46"><expr pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:46"><name pos:start="33:37" pos:end="33:43">ep0_ctx</name><index pos:start="33:44" pos:end="33:46">[<expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:49" pos:end="33:58"><expr pos:start="33:49" pos:end="33:58"><name pos:start="33:49" pos:end="33:58"><name pos:start="33:49" pos:end="33:55">ep0_ctx</name><index pos:start="33:56" pos:end="33:58">[<expr pos:start="33:57" pos:end="33:57"><literal type="number" pos:start="33:57" pos:end="33:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="33:61" pos:end="33:70"><expr pos:start="33:61" pos:end="33:70"><name pos:start="33:61" pos:end="33:70"><name pos:start="33:61" pos:end="33:67">ep0_ctx</name><index pos:start="33:68" pos:end="33:70">[<expr pos:start="33:69" pos:end="33:69"><literal type="number" pos:start="33:69" pos:end="33:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:46"><expr pos:start="34:5" pos:end="34:45"><name pos:start="34:5" pos:end="34:9">uport</name> <operator pos:start="34:11" pos:end="34:11">=</operator> <call pos:start="34:13" pos:end="34:45"><name pos:start="34:13" pos:end="34:29">xhci_lookup_uport</name><argument_list pos:start="34:30" pos:end="34:45">(<argument pos:start="34:31" pos:end="34:34"><expr pos:start="34:31" pos:end="34:34"><name pos:start="34:31" pos:end="34:34">xhci</name></expr></argument>, <argument pos:start="34:37" pos:end="34:44"><expr pos:start="34:37" pos:end="34:44"><name pos:start="34:37" pos:end="34:44">slot_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="35:5" pos:end="38:5"><if pos:start="35:5" pos:end="38:5">if <condition pos:start="35:8" pos:end="35:22">(<expr pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:13">uport</name> <operator pos:start="35:15" pos:end="35:16">==</operator> <name pos:start="35:18" pos:end="35:21">NULL</name></expr>)</condition> <block pos:start="35:24" pos:end="38:5">{<block_content pos:start="36:9" pos:end="37:28">
        <expr_stmt pos:start="36:9" pos:end="36:50"><expr pos:start="36:9" pos:end="36:49"><call pos:start="36:9" pos:end="36:49"><name pos:start="36:9" pos:end="36:15">fprintf</name><argument_list pos:start="36:16" pos:end="36:49">(<argument pos:start="36:17" pos:end="36:22"><expr pos:start="36:17" pos:end="36:22"><name pos:start="36:17" pos:end="36:22">stderr</name></expr></argument>, <argument pos:start="36:25" pos:end="36:48"><expr pos:start="36:25" pos:end="36:48"><literal type="string" pos:start="36:25" pos:end="36:48">"xhci: port not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="37:9" pos:end="37:28">return <expr pos:start="37:16" pos:end="37:27"><name pos:start="37:16" pos:end="37:27">CC_TRB_ERROR</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:7">dev</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:20"><name pos:start="39:11" pos:end="39:15">uport</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:20">dev</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="43:5"><if pos:start="40:5" pos:end="43:5">if <condition pos:start="40:8" pos:end="40:13">(<expr pos:start="40:9" pos:end="40:12"><operator pos:start="40:9" pos:end="40:9">!</operator><name pos:start="40:10" pos:end="40:12">dev</name></expr>)</condition> <block pos:start="40:15" pos:end="43:5">{<block_content pos:start="41:9" pos:end="42:40">
        <expr_stmt pos:start="41:9" pos:end="41:70"><expr pos:start="41:9" pos:end="41:69"><call pos:start="41:9" pos:end="41:69"><name pos:start="41:9" pos:end="41:15">fprintf</name><argument_list pos:start="41:16" pos:end="41:69">(<argument pos:start="41:17" pos:end="41:22"><expr pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:22">stderr</name></expr></argument>, <argument pos:start="41:25" pos:end="41:55"><expr pos:start="41:25" pos:end="41:55"><literal type="string" pos:start="41:25" pos:end="41:55">"xhci: port %s not connected\n"</literal></expr></argument>, <argument pos:start="41:58" pos:end="41:68"><expr pos:start="41:58" pos:end="41:68"><name pos:start="41:58" pos:end="41:68"><name pos:start="41:58" pos:end="41:62">uport</name><operator pos:start="41:63" pos:end="41:64">-&gt;</operator><name pos:start="41:65" pos:end="41:68">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="42:9" pos:end="42:40">return <expr pos:start="42:16" pos:end="42:39"><name pos:start="42:16" pos:end="42:39">CC_USB_TRANSACTION_ERROR</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <for pos:start="44:5" pos:end="53:5">for <control pos:start="44:9" pos:end="44:40">(<init pos:start="44:10" pos:end="44:15"><expr pos:start="44:10" pos:end="44:14"><name pos:start="44:10" pos:end="44:10">i</name> <operator pos:start="44:12" pos:end="44:12">=</operator> <literal type="number" pos:start="44:14" pos:end="44:14">0</literal></expr>;</init> <condition pos:start="44:17" pos:end="44:35"><expr pos:start="44:17" pos:end="44:34"><name pos:start="44:17" pos:end="44:17">i</name> <operator pos:start="44:19" pos:end="44:19">&lt;</operator> <name pos:start="44:21" pos:end="44:34"><name pos:start="44:21" pos:end="44:24">xhci</name><operator pos:start="44:25" pos:end="44:26">-&gt;</operator><name pos:start="44:27" pos:end="44:34">numslots</name></name></expr>;</condition> <incr pos:start="44:37" pos:end="44:39"><expr pos:start="44:37" pos:end="44:39"><name pos:start="44:37" pos:end="44:37">i</name><operator pos:start="44:38" pos:end="44:39">++</operator></expr></incr>)</control> <block pos:start="44:42" pos:end="53:5">{<block_content pos:start="45:9" pos:end="52:9">
        <if_stmt pos:start="45:9" pos:end="47:9"><if pos:start="45:9" pos:end="47:9">if <condition pos:start="45:12" pos:end="45:26">(<expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:13">i</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <name pos:start="45:18" pos:end="45:23">slotid</name><operator pos:start="45:24" pos:end="45:24">-</operator><literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>)</condition> <block pos:start="45:28" pos:end="47:9">{<block_content pos:start="46:13" pos:end="46:21">
            <continue pos:start="46:13" pos:end="46:21">continue;</continue>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="48:9" pos:end="52:9"><if pos:start="48:9" pos:end="52:9">if <condition pos:start="48:12" pos:end="48:42">(<expr pos:start="48:13" pos:end="48:41"><name pos:start="48:13" pos:end="48:26"><name pos:start="48:13" pos:end="48:16">xhci</name><operator pos:start="48:17" pos:end="48:18">-&gt;</operator><name pos:start="48:19" pos:end="48:23">slots</name><index pos:start="48:24" pos:end="48:26">[<expr pos:start="48:25" pos:end="48:25"><name pos:start="48:25" pos:end="48:25">i</name></expr>]</index></name><operator pos:start="48:27" pos:end="48:27">.</operator><name pos:start="48:28" pos:end="48:32">uport</name> <operator pos:start="48:34" pos:end="48:35">==</operator> <name pos:start="48:37" pos:end="48:41">uport</name></expr>)</condition> <block pos:start="48:44" pos:end="52:9">{<block_content pos:start="49:13" pos:end="51:32">
            <expr_stmt pos:start="49:13" pos:end="50:38"><expr pos:start="49:13" pos:end="50:37"><call pos:start="49:13" pos:end="50:37"><name pos:start="49:13" pos:end="49:19">fprintf</name><argument_list pos:start="49:20" pos:end="50:37">(<argument pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:26">stderr</name></expr></argument>, <argument pos:start="49:29" pos:end="49:73"><expr pos:start="49:29" pos:end="49:73"><literal type="string" pos:start="49:29" pos:end="49:73">"xhci: port %s already assigned to slot %d\n"</literal></expr></argument>,
                    <argument pos:start="50:21" pos:end="50:31"><expr pos:start="50:21" pos:end="50:31"><name pos:start="50:21" pos:end="50:31"><name pos:start="50:21" pos:end="50:25">uport</name><operator pos:start="50:26" pos:end="50:27">-&gt;</operator><name pos:start="50:28" pos:end="50:31">path</name></name></expr></argument>, <argument pos:start="50:34" pos:end="50:36"><expr pos:start="50:34" pos:end="50:36"><name pos:start="50:34" pos:end="50:34">i</name><operator pos:start="50:35" pos:end="50:35">+</operator><literal type="number" pos:start="50:36" pos:end="50:36">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="51:13" pos:end="51:32">return <expr pos:start="51:20" pos:end="51:31"><name pos:start="51:20" pos:end="51:31">CC_TRB_ERROR</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="54:5" pos:end="54:34"><expr pos:start="54:5" pos:end="54:33"><name pos:start="54:5" pos:end="54:8">slot</name> <operator pos:start="54:10" pos:end="54:10">=</operator> <operator pos:start="54:12" pos:end="54:12">&amp;</operator><name pos:start="54:13" pos:end="54:33"><name pos:start="54:13" pos:end="54:16">xhci</name><operator pos:start="54:17" pos:end="54:18">-&gt;</operator><name pos:start="54:19" pos:end="54:23">slots</name><index pos:start="54:24" pos:end="54:33">[<expr pos:start="54:25" pos:end="54:32"><name pos:start="54:25" pos:end="54:30">slotid</name><operator pos:start="54:31" pos:end="54:31">-</operator><literal type="number" pos:start="54:32" pos:end="54:32">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:8">slot</name><operator pos:start="55:9" pos:end="55:10">-&gt;</operator><name pos:start="55:11" pos:end="55:15">uport</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:23">uport</name></expr>;</expr_stmt>
    <expr_stmt pos:start="56:5" pos:end="56:21"><expr pos:start="56:5" pos:end="56:20"><name pos:start="56:5" pos:end="56:13"><name pos:start="56:5" pos:end="56:8">slot</name><operator pos:start="56:9" pos:end="56:10">-&gt;</operator><name pos:start="56:11" pos:end="56:13">ctx</name></name> <operator pos:start="56:15" pos:end="56:15">=</operator> <name pos:start="56:17" pos:end="56:20">octx</name></expr>;</expr_stmt>
    <if_stmt pos:start="57:5" pos:end="70:5"><if pos:start="57:5" pos:end="59:5">if <condition pos:start="57:8" pos:end="57:12">(<expr pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">bsr</name></expr>)</condition> <block pos:start="57:14" pos:end="59:5">{<block_content pos:start="58:9" pos:end="58:55">
        <expr_stmt pos:start="58:9" pos:end="58:55"><expr pos:start="58:9" pos:end="58:54"><name pos:start="58:9" pos:end="58:19"><name pos:start="58:9" pos:end="58:16">slot_ctx</name><index pos:start="58:17" pos:end="58:19">[<expr pos:start="58:18" pos:end="58:18"><literal type="number" pos:start="58:18" pos:end="58:18">3</literal></expr>]</index></name> <operator pos:start="58:21" pos:end="58:21">=</operator> <name pos:start="58:23" pos:end="58:34">SLOT_DEFAULT</name> <operator pos:start="58:36" pos:end="58:37">&lt;&lt;</operator> <name pos:start="58:39" pos:end="58:54">SLOT_STATE_SHIFT</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="59:7" pos:end="70:5">else <block pos:start="59:12" pos:end="70:5">{<block_content pos:start="60:9" pos:end="69:42">
        <decl_stmt pos:start="60:9" pos:end="60:20"><decl pos:start="60:9" pos:end="60:19"><type pos:start="60:9" pos:end="60:17"><name pos:start="60:9" pos:end="60:17">USBPacket</name></type> <name pos:start="60:19" pos:end="60:19">p</name></decl>;</decl_stmt>
        <expr_stmt pos:start="61:9" pos:end="61:68"><expr pos:start="61:9" pos:end="61:67"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:16">slot_ctx</name><index pos:start="61:17" pos:end="61:19">[<expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">3</literal></expr>]</index></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:37">SLOT_ADDRESSED</name> <operator pos:start="61:39" pos:end="61:40">&lt;&lt;</operator> <name pos:start="61:42" pos:end="61:57">SLOT_STATE_SHIFT</name><operator pos:start="61:58" pos:end="61:58">)</operator> <operator pos:start="61:60" pos:end="61:60">|</operator> <name pos:start="61:62" pos:end="61:67">slotid</name></expr>;</expr_stmt>
        <expr_stmt pos:start="62:9" pos:end="62:30"><expr pos:start="62:9" pos:end="62:29"><call pos:start="62:9" pos:end="62:29"><name pos:start="62:9" pos:end="62:24">usb_device_reset</name><argument_list pos:start="62:25" pos:end="62:29">(<argument pos:start="62:26" pos:end="62:28"><expr pos:start="62:26" pos:end="62:28"><name pos:start="62:26" pos:end="62:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="63:9" pos:end="65:42"><expr pos:start="63:9" pos:end="65:41"><call pos:start="63:9" pos:end="65:41"><name pos:start="63:9" pos:end="63:24">usb_packet_setup</name><argument_list pos:start="63:25" pos:end="65:41">(<argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:27">p</name></expr></argument>, <argument pos:start="63:30" pos:end="63:42"><expr pos:start="63:30" pos:end="63:42"><name pos:start="63:30" pos:end="63:42">USB_TOKEN_OUT</name></expr></argument>,
                         <argument pos:start="64:26" pos:end="64:58"><expr pos:start="64:26" pos:end="64:58"><call pos:start="64:26" pos:end="64:58"><name pos:start="64:26" pos:end="64:35">usb_ep_get</name><argument_list pos:start="64:36" pos:end="64:58">(<argument pos:start="64:37" pos:end="64:39"><expr pos:start="64:37" pos:end="64:39"><name pos:start="64:37" pos:end="64:39">dev</name></expr></argument>, <argument pos:start="64:42" pos:end="64:54"><expr pos:start="64:42" pos:end="64:54"><name pos:start="64:42" pos:end="64:54">USB_TOKEN_OUT</name></expr></argument>, <argument pos:start="64:57" pos:end="64:57"><expr pos:start="64:57" pos:end="64:57"><literal type="number" pos:start="64:57" pos:end="64:57">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="64:61" pos:end="64:61"><expr pos:start="64:61" pos:end="64:61"><literal type="number" pos:start="64:61" pos:end="64:61">0</literal></expr></argument>,
                         <argument pos:start="65:26" pos:end="65:26"><expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr></argument>, <argument pos:start="65:29" pos:end="65:33"><expr pos:start="65:29" pos:end="65:33"><name pos:start="65:29" pos:end="65:33">false</name></expr></argument>, <argument pos:start="65:36" pos:end="65:40"><expr pos:start="65:36" pos:end="65:40"><name pos:start="65:36" pos:end="65:40">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="68:54"><expr pos:start="66:9" pos:end="68:53"><call pos:start="66:9" pos:end="68:53"><name pos:start="66:9" pos:end="66:33">usb_device_handle_control</name><argument_list pos:start="66:34" pos:end="68:53">(<argument pos:start="66:35" pos:end="66:37"><expr pos:start="66:35" pos:end="66:37"><name pos:start="66:35" pos:end="66:37">dev</name></expr></argument>, <argument pos:start="66:40" pos:end="66:41"><expr pos:start="66:40" pos:end="66:41"><operator pos:start="66:40" pos:end="66:40">&amp;</operator><name pos:start="66:41" pos:end="66:41">p</name></expr></argument>,
                                  <argument pos:start="67:35" pos:end="67:72"><expr pos:start="67:35" pos:end="67:72"><name pos:start="67:35" pos:end="67:50">DeviceOutRequest</name> <operator pos:start="67:52" pos:end="67:52">|</operator> <name pos:start="67:54" pos:end="67:72">USB_REQ_SET_ADDRESS</name></expr></argument>,
                                  <argument pos:start="68:35" pos:end="68:40"><expr pos:start="68:35" pos:end="68:40"><name pos:start="68:35" pos:end="68:40">slotid</name></expr></argument>, <argument pos:start="68:43" pos:end="68:43"><expr pos:start="68:43" pos:end="68:43"><literal type="number" pos:start="68:43" pos:end="68:43">0</literal></expr></argument>, <argument pos:start="68:46" pos:end="68:46"><expr pos:start="68:46" pos:end="68:46"><literal type="number" pos:start="68:46" pos:end="68:46">0</literal></expr></argument>, <argument pos:start="68:49" pos:end="68:52"><expr pos:start="68:49" pos:end="68:52"><name pos:start="68:49" pos:end="68:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:14">assert</name><argument_list pos:start="69:15" pos:end="69:41">(<argument pos:start="69:16" pos:end="69:40"><expr pos:start="69:16" pos:end="69:40"><name pos:start="69:16" pos:end="69:23"><name pos:start="69:16" pos:end="69:16">p</name><operator pos:start="69:17" pos:end="69:17">.</operator><name pos:start="69:18" pos:end="69:23">status</name></name> <operator pos:start="69:25" pos:end="69:26">!=</operator> <name pos:start="69:28" pos:end="69:40">USB_RET_ASYNC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="71:5" pos:end="71:60"><expr pos:start="71:5" pos:end="71:59"><name pos:start="71:5" pos:end="71:7">res</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:59"><name pos:start="71:11" pos:end="71:24">xhci_enable_ep</name><argument_list pos:start="71:25" pos:end="71:59">(<argument pos:start="71:26" pos:end="71:29"><expr pos:start="71:26" pos:end="71:29"><name pos:start="71:26" pos:end="71:29">xhci</name></expr></argument>, <argument pos:start="71:32" pos:end="71:37"><expr pos:start="71:32" pos:end="71:37"><name pos:start="71:32" pos:end="71:37">slotid</name></expr></argument>, <argument pos:start="71:40" pos:end="71:40"><expr pos:start="71:40" pos:end="71:40"><literal type="number" pos:start="71:40" pos:end="71:40">1</literal></expr></argument>, <argument pos:start="71:43" pos:end="71:49"><expr pos:start="71:43" pos:end="71:49"><name pos:start="71:43" pos:end="71:46">octx</name><operator pos:start="71:47" pos:end="71:47">+</operator><literal type="number" pos:start="71:48" pos:end="71:49">32</literal></expr></argument>, <argument pos:start="71:52" pos:end="71:58"><expr pos:start="71:52" pos:end="71:58"><name pos:start="71:52" pos:end="71:58">ep0_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="72:5" pos:end="73:64"><expr pos:start="72:5" pos:end="73:63"><call pos:start="72:5" pos:end="73:63"><name pos:start="72:5" pos:end="72:11">DPRINTF</name><argument_list pos:start="72:12" pos:end="73:63">(<argument pos:start="72:13" pos:end="72:62"><expr pos:start="72:13" pos:end="72:62"><literal type="string" pos:start="72:13" pos:end="72:62">"xhci: output slot context: %08x %08x %08x %08x\n"</literal></expr></argument>,
            <argument pos:start="73:13" pos:end="73:23"><expr pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:20">slot_ctx</name><index pos:start="73:21" pos:end="73:23">[<expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:26" pos:end="73:36"><expr pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:33">slot_ctx</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:39" pos:end="73:49"><expr pos:start="73:39" pos:end="73:49"><name pos:start="73:39" pos:end="73:49"><name pos:start="73:39" pos:end="73:46">slot_ctx</name><index pos:start="73:47" pos:end="73:49">[<expr pos:start="73:48" pos:end="73:48"><literal type="number" pos:start="73:48" pos:end="73:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:52" pos:end="73:62"><expr pos:start="73:52" pos:end="73:62"><name pos:start="73:52" pos:end="73:62"><name pos:start="73:52" pos:end="73:59">slot_ctx</name><index pos:start="73:60" pos:end="73:62">[<expr pos:start="73:61" pos:end="73:61"><literal type="number" pos:start="73:61" pos:end="73:61">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="74:5" pos:end="75:72"><expr pos:start="74:5" pos:end="75:71"><call pos:start="74:5" pos:end="75:71"><name pos:start="74:5" pos:end="74:11">DPRINTF</name><argument_list pos:start="74:12" pos:end="75:71">(<argument pos:start="74:13" pos:end="74:66"><expr pos:start="74:13" pos:end="74:66"><literal type="string" pos:start="74:13" pos:end="74:66">"xhci: output ep0 context: %08x %08x %08x %08x %08x\n"</literal></expr></argument>,
            <argument pos:start="75:13" pos:end="75:22"><expr pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:22"><name pos:start="75:13" pos:end="75:19">ep0_ctx</name><index pos:start="75:20" pos:end="75:22">[<expr pos:start="75:21" pos:end="75:21"><literal type="number" pos:start="75:21" pos:end="75:21">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:25" pos:end="75:34"><expr pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:31">ep0_ctx</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><literal type="number" pos:start="75:33" pos:end="75:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:37" pos:end="75:46"><expr pos:start="75:37" pos:end="75:46"><name pos:start="75:37" pos:end="75:46"><name pos:start="75:37" pos:end="75:43">ep0_ctx</name><index pos:start="75:44" pos:end="75:46">[<expr pos:start="75:45" pos:end="75:45"><literal type="number" pos:start="75:45" pos:end="75:45">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:49" pos:end="75:58"><expr pos:start="75:49" pos:end="75:58"><name pos:start="75:49" pos:end="75:58"><name pos:start="75:49" pos:end="75:55">ep0_ctx</name><index pos:start="75:56" pos:end="75:58">[<expr pos:start="75:57" pos:end="75:57"><literal type="number" pos:start="75:57" pos:end="75:57">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:61" pos:end="75:70"><expr pos:start="75:61" pos:end="75:70"><name pos:start="75:61" pos:end="75:70"><name pos:start="75:61" pos:end="75:67">ep0_ctx</name><index pos:start="75:68" pos:end="75:70">[<expr pos:start="75:69" pos:end="75:69"><literal type="number" pos:start="75:69" pos:end="75:69">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="76:5" pos:end="76:64"><expr pos:start="76:5" pos:end="76:63"><call pos:start="76:5" pos:end="76:63"><name pos:start="76:5" pos:end="76:23">xhci_dma_write_u32s</name><argument_list pos:start="76:24" pos:end="76:63">(<argument pos:start="76:25" pos:end="76:28"><expr pos:start="76:25" pos:end="76:28"><name pos:start="76:25" pos:end="76:28">xhci</name></expr></argument>, <argument pos:start="76:31" pos:end="76:34"><expr pos:start="76:31" pos:end="76:34"><name pos:start="76:31" pos:end="76:34">octx</name></expr></argument>, <argument pos:start="76:37" pos:end="76:44"><expr pos:start="76:37" pos:end="76:44"><name pos:start="76:37" pos:end="76:44">slot_ctx</name></expr></argument>, <argument pos:start="76:47" pos:end="76:62"><expr pos:start="76:47" pos:end="76:62"><sizeof pos:start="76:47" pos:end="76:62">sizeof<argument_list pos:start="76:53" pos:end="76:62">(<argument pos:start="76:54" pos:end="76:61"><expr pos:start="76:54" pos:end="76:61"><name pos:start="76:54" pos:end="76:61">slot_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="77:5" pos:end="77:65"><expr pos:start="77:5" pos:end="77:64"><call pos:start="77:5" pos:end="77:64"><name pos:start="77:5" pos:end="77:23">xhci_dma_write_u32s</name><argument_list pos:start="77:24" pos:end="77:64">(<argument pos:start="77:25" pos:end="77:28"><expr pos:start="77:25" pos:end="77:28"><name pos:start="77:25" pos:end="77:28">xhci</name></expr></argument>, <argument pos:start="77:31" pos:end="77:37"><expr pos:start="77:31" pos:end="77:37"><name pos:start="77:31" pos:end="77:34">octx</name><operator pos:start="77:35" pos:end="77:35">+</operator><literal type="number" pos:start="77:36" pos:end="77:37">32</literal></expr></argument>, <argument pos:start="77:40" pos:end="77:46"><expr pos:start="77:40" pos:end="77:46"><name pos:start="77:40" pos:end="77:46">ep0_ctx</name></expr></argument>, <argument pos:start="77:49" pos:end="77:63"><expr pos:start="77:49" pos:end="77:63"><sizeof pos:start="77:49" pos:end="77:63">sizeof<argument_list pos:start="77:55" pos:end="77:63">(<argument pos:start="77:56" pos:end="77:62"><expr pos:start="77:56" pos:end="77:62"><name pos:start="77:56" pos:end="77:62">ep0_ctx</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="78:5" pos:end="78:15">return <expr pos:start="78:12" pos:end="78:14"><name pos:start="78:12" pos:end="78:14">res</name></expr>;</return>
</block_content>}</block></function></unit>
