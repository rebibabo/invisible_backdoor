<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22845.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ppc_find_by_name</name> <parameter_list pos:start="1:22" pos:end="1:65">(<parameter pos:start="1:23" pos:end="1:47"><decl pos:start="1:23" pos:end="1:47"><type pos:start="1:23" pos:end="1:47"><specifier pos:start="1:23" pos:end="1:27">const</specifier> <name pos:start="1:29" pos:end="1:36">unsigned</name> <name pos:start="1:38" pos:end="1:41">char</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">name</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:58">ppc_def_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">def</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:15">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:13"><expr pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <operator pos:start="9:11" pos:end="9:11">-</operator><literal type="number" pos:start="9:12" pos:end="9:12">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:16"><expr pos:start="11:5" pos:end="11:15"><operator pos:start="11:5" pos:end="11:5">*</operator><name pos:start="11:6" pos:end="11:8">def</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <name pos:start="11:12" pos:end="11:15">NULL</name></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="25:5">for <control pos:start="13:9" pos:end="13:62">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:57"><expr pos:start="13:17" pos:end="13:56"><call pos:start="13:17" pos:end="13:51"><name pos:start="13:17" pos:end="13:22">strcmp</name><argument_list pos:start="13:23" pos:end="13:51">(<argument pos:start="13:24" pos:end="13:39"><expr pos:start="13:24" pos:end="13:39"><name pos:start="13:24" pos:end="13:34"><name pos:start="13:24" pos:end="13:31">ppc_defs</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">i</name></expr>]</index></name><operator pos:start="13:35" pos:end="13:35">.</operator><name pos:start="13:36" pos:end="13:39">name</name></expr></argument>, <argument pos:start="13:42" pos:end="13:50"><expr pos:start="13:42" pos:end="13:50"><literal type="string" pos:start="13:42" pos:end="13:50">"default"</literal></expr></argument>)</argument_list></call> <operator pos:start="13:53" pos:end="13:54">!=</operator> <literal type="number" pos:start="13:56" pos:end="13:56">0</literal></expr>;</condition> <incr pos:start="13:59" pos:end="13:61"><expr pos:start="13:59" pos:end="13:61"><name pos:start="13:59" pos:end="13:59">i</name><operator pos:start="13:60" pos:end="13:61">++</operator></expr></incr>)</control> <block pos:start="13:64" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:9">

        <if_stmt pos:start="15:9" pos:end="23:9"><if pos:start="15:9" pos:end="23:9">if <condition pos:start="15:12" pos:end="15:52">(<expr pos:start="15:13" pos:end="15:51"><call pos:start="15:13" pos:end="15:46"><name pos:start="15:13" pos:end="15:22">strcasecmp</name><argument_list pos:start="15:23" pos:end="15:46">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">name</name></expr></argument>, <argument pos:start="15:30" pos:end="15:45"><expr pos:start="15:30" pos:end="15:45"><name pos:start="15:30" pos:end="15:40"><name pos:start="15:30" pos:end="15:37">ppc_defs</name><index pos:start="15:38" pos:end="15:40">[<expr pos:start="15:39" pos:end="15:39"><name pos:start="15:39" pos:end="15:39">i</name></expr>]</index></name><operator pos:start="15:41" pos:end="15:41">.</operator><name pos:start="15:42" pos:end="15:45">name</name></expr></argument>)</argument_list></call> <operator pos:start="15:48" pos:end="15:49">==</operator> <literal type="number" pos:start="15:51" pos:end="15:51">0</literal></expr>)</condition> <block pos:start="15:54" pos:end="23:9">{<block_content pos:start="17:13" pos:end="21:18">

            <expr_stmt pos:start="17:13" pos:end="17:32"><expr pos:start="17:13" pos:end="17:31"><operator pos:start="17:13" pos:end="17:13">*</operator><name pos:start="17:14" pos:end="17:16">def</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <operator pos:start="17:20" pos:end="17:20">&amp;</operator><name pos:start="17:21" pos:end="17:31"><name pos:start="17:21" pos:end="17:28">ppc_defs</name><index pos:start="17:29" pos:end="17:31">[<expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:20"><expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">ret</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</expr_stmt>

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
