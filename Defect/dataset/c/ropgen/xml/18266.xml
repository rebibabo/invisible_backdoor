<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18266.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:27">lowprot_enabled</name><parameter_list pos:start="1:28" pos:end="1:53">(<parameter pos:start="1:29" pos:end="1:52"><decl pos:start="1:29" pos:end="1:52"><type pos:start="1:29" pos:end="1:49"><specifier pos:start="1:29" pos:end="1:33">const</specifier> <name pos:start="1:35" pos:end="1:47">CPUS390XState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:39">(<expr pos:start="5:9" pos:end="5:38"><operator pos:start="5:9" pos:end="5:9">!</operator><operator pos:start="5:10" pos:end="5:10">(</operator><name pos:start="5:11" pos:end="5:23"><name pos:start="5:11" pos:end="5:13">env</name><operator pos:start="5:14" pos:end="5:15">-&gt;</operator><name pos:start="5:16" pos:end="5:20">cregs</name><index pos:start="5:21" pos:end="5:23">[<expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr>]</index></name> <operator pos:start="5:25" pos:end="5:25">&amp;</operator> <name pos:start="5:27" pos:end="5:37">CR0_LOWPROT</name><operator pos:start="5:38" pos:end="5:38">)</operator></expr>)</condition> <block pos:start="5:41" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:21">

        <return pos:start="7:9" pos:end="7:21">return <expr pos:start="7:16" pos:end="7:20"><name pos:start="7:16" pos:end="7:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:40">(<expr pos:start="11:9" pos:end="11:39"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">(</operator><name pos:start="11:11" pos:end="11:23"><name pos:start="11:11" pos:end="11:13">env</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:18">psw</name><operator pos:start="11:19" pos:end="11:19">.</operator><name pos:start="11:20" pos:end="11:23">mask</name></name> <operator pos:start="11:25" pos:end="11:25">&amp;</operator> <name pos:start="11:27" pos:end="11:38">PSW_MASK_DAT</name><operator pos:start="11:39" pos:end="11:39">)</operator></expr>)</condition> <block pos:start="11:42" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:20">

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">true</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:45">/* Check the private-space control bit */</comment>

    <switch pos:start="21:5" pos:end="43:5">switch <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:15">env</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:20">psw</name><operator pos:start="21:21" pos:end="21:21">.</operator><name pos:start="21:22" pos:end="21:25">mask</name></name> <operator pos:start="21:27" pos:end="21:27">&amp;</operator> <name pos:start="21:29" pos:end="21:40">PSW_MASK_ASC</name></expr>)</condition> <block pos:start="21:43" pos:end="43:5">{<block_content pos:start="23:5" pos:end="41:16">

    <case pos:start="23:5" pos:end="23:25">case <expr pos:start="23:10" pos:end="23:24"><name pos:start="23:10" pos:end="23:24">PSW_ASC_PRIMARY</name></expr>:</case>

        <return pos:start="25:9" pos:end="25:54">return <expr pos:start="25:16" pos:end="25:53"><operator pos:start="25:16" pos:end="25:16">!</operator><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:20">env</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">cregs</name><index pos:start="25:28" pos:end="25:30">[<expr pos:start="25:29" pos:end="25:29"><literal type="number" pos:start="25:29" pos:end="25:29">1</literal></expr>]</index></name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <name pos:start="25:34" pos:end="25:52">_ASCE_PRIVATE_SPACE</name><operator pos:start="25:53" pos:end="25:53">)</operator></expr>;</return>

    <case pos:start="27:5" pos:end="27:27">case <expr pos:start="27:10" pos:end="27:26"><name pos:start="27:10" pos:end="27:26">PSW_ASC_SECONDARY</name></expr>:</case>

        <return pos:start="29:9" pos:end="29:54">return <expr pos:start="29:16" pos:end="29:53"><operator pos:start="29:16" pos:end="29:16">!</operator><operator pos:start="29:17" pos:end="29:17">(</operator><name pos:start="29:18" pos:end="29:30"><name pos:start="29:18" pos:end="29:20">env</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">cregs</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">7</literal></expr>]</index></name> <operator pos:start="29:32" pos:end="29:32">&amp;</operator> <name pos:start="29:34" pos:end="29:52">_ASCE_PRIVATE_SPACE</name><operator pos:start="29:53" pos:end="29:53">)</operator></expr>;</return>

    <case pos:start="31:5" pos:end="31:22">case <expr pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:21">PSW_ASC_HOME</name></expr>:</case>

        <return pos:start="33:9" pos:end="33:55">return <expr pos:start="33:16" pos:end="33:54"><operator pos:start="33:16" pos:end="33:16">!</operator><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:31"><name pos:start="33:18" pos:end="33:20">env</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:27">cregs</name><index pos:start="33:28" pos:end="33:31">[<expr pos:start="33:29" pos:end="33:30"><literal type="number" pos:start="33:29" pos:end="33:30">13</literal></expr>]</index></name> <operator pos:start="33:33" pos:end="33:33">&amp;</operator> <name pos:start="33:35" pos:end="33:53">_ASCE_PRIVATE_SPACE</name><operator pos:start="33:54" pos:end="33:54">)</operator></expr>;</return>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <comment type="block" pos:start="37:9" pos:end="37:51">/* We don't support access register mode */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><call pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="39:51">(<argument pos:start="39:22" pos:end="39:50"><expr pos:start="39:22" pos:end="39:50"><literal type="string" pos:start="39:22" pos:end="39:50">"unsupported addressing mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:16"><expr pos:start="41:9" pos:end="41:15"><call pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:12">exit</name><argument_list pos:start="41:13" pos:end="41:15">(<argument pos:start="41:14" pos:end="41:14"><expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
