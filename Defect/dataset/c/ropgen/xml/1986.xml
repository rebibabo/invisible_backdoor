<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1986.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:29">run_poll_handlers</name><parameter_list pos:start="1:30" pos:end="1:62">(<parameter pos:start="1:31" pos:end="1:45"><decl pos:start="1:31" pos:end="1:45"><type pos:start="1:31" pos:end="1:45"><name pos:start="1:31" pos:end="1:40">AioContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:54">int64_t</name></type> <name pos:start="1:56" pos:end="1:61">max_ns</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:20">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">bool</name></type> <name pos:start="5:10" pos:end="5:17">progress</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:20">end_time</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:26">(<argument pos:start="11:12" pos:end="11:25"><expr pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:25"><name pos:start="11:12" pos:end="11:14">ctx</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:25">notify_me</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><call pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:51">(<argument pos:start="13:12" pos:end="13:50"><expr pos:start="13:12" pos:end="13:50"><call pos:start="13:12" pos:end="13:46"><name pos:start="13:12" pos:end="13:29">qemu_lockcnt_count</name><argument_list pos:start="13:30" pos:end="13:46">(<argument pos:start="13:31" pos:end="13:45"><expr pos:start="13:31" pos:end="13:45"><operator pos:start="13:31" pos:end="13:31">&amp;</operator><name pos:start="13:32" pos:end="13:45"><name pos:start="13:32" pos:end="13:34">ctx</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:45">list_lock</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:48" pos:end="13:48">&gt;</operator> <literal type="number" pos:start="13:50" pos:end="13:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:38">(<argument pos:start="15:12" pos:end="15:37"><expr pos:start="15:12" pos:end="15:37"><name pos:start="15:12" pos:end="15:32"><name pos:start="15:12" pos:end="15:14">ctx</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:32">poll_disable_cnt</name></name> <operator pos:start="15:34" pos:end="15:35">==</operator> <literal type="number" pos:start="15:37" pos:end="15:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:47"><expr pos:start="19:5" pos:end="19:46"><call pos:start="19:5" pos:end="19:46"><name pos:start="19:5" pos:end="19:33">trace_run_poll_handlers_begin</name><argument_list pos:start="19:34" pos:end="19:46">(<argument pos:start="19:35" pos:end="19:37"><expr pos:start="19:35" pos:end="19:37"><name pos:start="19:35" pos:end="19:37">ctx</name></expr></argument>, <argument pos:start="19:40" pos:end="19:45"><expr pos:start="19:40" pos:end="19:45"><name pos:start="19:40" pos:end="19:45">max_ns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:12">end_time</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:53"><name pos:start="23:16" pos:end="23:32">qemu_clock_get_ns</name><argument_list pos:start="23:33" pos:end="23:53">(<argument pos:start="23:34" pos:end="23:52"><expr pos:start="23:34" pos:end="23:52"><name pos:start="23:34" pos:end="23:52">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call> <operator pos:start="23:55" pos:end="23:55">+</operator> <name pos:start="23:57" pos:end="23:62">max_ns</name></expr>;</expr_stmt>



    <do pos:start="27:5" pos:end="31:77">do <block pos:start="27:8" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:47">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:16">progress</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:46"><name pos:start="29:20" pos:end="29:41">run_poll_handlers_once</name><argument_list pos:start="29:42" pos:end="29:46">(<argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="31:13" pos:end="31:76">(<expr pos:start="31:14" pos:end="31:75"><operator pos:start="31:14" pos:end="31:14">!</operator><name pos:start="31:15" pos:end="31:22">progress</name> <operator pos:start="31:24" pos:end="31:25">&amp;&amp;</operator> <call pos:start="31:27" pos:end="31:64"><name pos:start="31:27" pos:end="31:43">qemu_clock_get_ns</name><argument_list pos:start="31:44" pos:end="31:64">(<argument pos:start="31:45" pos:end="31:63"><expr pos:start="31:45" pos:end="31:63"><name pos:start="31:45" pos:end="31:63">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call> <operator pos:start="31:66" pos:end="31:66">&lt;</operator> <name pos:start="31:68" pos:end="31:75">end_time</name></expr>)</condition>;</do>



    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><call pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:31">trace_run_poll_handlers_end</name><argument_list pos:start="35:32" pos:end="35:46">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">ctx</name></expr></argument>, <argument pos:start="35:38" pos:end="35:45"><expr pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:45">progress</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:20">return <expr pos:start="39:12" pos:end="39:19"><name pos:start="39:12" pos:end="39:19">progress</name></expr>;</return>

</block_content>}</block></function>
</unit>
