<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24401.c" pos:tabs="8"><function pos:start="1:1" pos:end="183:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">rtp_new_av_stream</name><parameter_list pos:start="1:29" pos:end="5:49">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:40">HTTPContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">c</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:45"><decl pos:start="3:30" pos:end="3:45"><type pos:start="3:30" pos:end="3:45"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:45">stream_index</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:76"><decl pos:start="3:48" pos:end="3:76"><type pos:start="3:48" pos:end="3:76"><name pos:start="3:48" pos:end="3:65"><name pos:start="3:48" pos:end="3:53">struct</name> <name pos:start="3:55" pos:end="3:65">sockaddr_in</name></name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:76">dest_addr</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:40">HTTPContext</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:48">rtsp_c</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="183:1">{<block_content pos:start="9:5" pos:end="181:13">

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">ipaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">URLContext</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:17">h</name> <init pos:start="15:19" pos:end="15:24">= <expr pos:start="15:21" pos:end="15:24"><name pos:start="15:21" pos:end="15:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:22">dummy_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:23">max_packet_size</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:52">/* now we can open the relevant output stream */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:7">ctx</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:34"><name pos:start="25:11" pos:end="25:32">avformat_alloc_context</name><argument_list pos:start="25:33" pos:end="25:34">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:18"><if pos:start="27:5" pos:end="29:18">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">ctx</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:18"><block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">ctx</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:16">oformat</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:53"><name pos:start="31:20" pos:end="31:34">av_guess_format</name><argument_list pos:start="31:35" pos:end="31:53">(<argument pos:start="31:36" pos:end="31:40"><expr pos:start="31:36" pos:end="31:40"><literal type="string" pos:start="31:36" pos:end="31:40">"rtp"</literal></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">NULL</name></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><name pos:start="31:49" pos:end="31:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:6">st</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:37"><name pos:start="35:10" pos:end="35:19">av_mallocz</name><argument_list pos:start="35:20" pos:end="35:37">(<argument pos:start="35:21" pos:end="35:36"><expr pos:start="35:21" pos:end="35:36"><sizeof pos:start="35:21" pos:end="35:36">sizeof<argument_list pos:start="35:27" pos:end="35:36">(<argument pos:start="35:28" pos:end="35:35"><expr pos:start="35:28" pos:end="35:35"><name pos:start="35:28" pos:end="35:35">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:11">st</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:6">st</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:13">codec</name></name><operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:38"><name pos:start="41:16" pos:end="41:36">avcodec_alloc_context</name><argument_list pos:start="41:37" pos:end="41:38">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:7">ctx</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:19">nb_streams</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:7">ctx</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:16">streams</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>]</index></name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:24">st</name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="61:33"><if pos:start="49:5" pos:end="53:71">if <condition pos:start="49:8" pos:end="51:37">(<expr pos:start="49:9" pos:end="51:36"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:24"><name pos:start="49:10" pos:end="49:10">c</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:18">stream</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:24">feed</name></name> <operator pos:start="49:26" pos:end="49:27">||</operator>

        <name pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:9">c</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">stream</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:23">feed</name></name> <operator pos:start="51:25" pos:end="51:26">==</operator> <name pos:start="51:28" pos:end="51:36"><name pos:start="51:28" pos:end="51:28">c</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:36">stream</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:71"><block_content pos:start="53:9" pos:end="53:71">

        <expr_stmt pos:start="53:9" pos:end="53:71"><expr pos:start="53:9" pos:end="53:70"><call pos:start="53:9" pos:end="53:70"><name pos:start="53:9" pos:end="53:14">memcpy</name><argument_list pos:start="53:15" pos:end="53:70">(<argument pos:start="53:16" pos:end="53:17"><expr pos:start="53:16" pos:end="53:17"><name pos:start="53:16" pos:end="53:17">st</name></expr></argument>, <argument pos:start="53:20" pos:end="53:51"><expr pos:start="53:20" pos:end="53:51"><name pos:start="53:20" pos:end="53:51"><name pos:start="53:20" pos:end="53:20">c</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:28">stream</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:37">streams</name><index pos:start="53:38" pos:end="53:51">[<expr pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:50">stream_index</name></expr>]</index></name></expr></argument>, <argument pos:start="53:54" pos:end="53:69"><expr pos:start="53:54" pos:end="53:69"><sizeof pos:start="53:54" pos:end="53:69">sizeof<argument_list pos:start="53:60" pos:end="53:69">(<argument pos:start="53:61" pos:end="53:68"><expr pos:start="53:61" pos:end="53:68"><name pos:start="53:61" pos:end="53:68">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="61:33">else<block type="pseudo" pos:start="57:9" pos:end="61:33"><block_content pos:start="57:9" pos:end="61:33">

        <expr_stmt pos:start="57:9" pos:end="61:33"><expr pos:start="57:9" pos:end="61:32"><call pos:start="57:9" pos:end="61:32"><name pos:start="57:9" pos:end="57:14">memcpy</name><argument_list pos:start="57:15" pos:end="61:32">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">st</name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:78"><expr pos:start="59:16" pos:end="59:78"><name pos:start="59:16" pos:end="59:78"><name pos:start="59:16" pos:end="59:16">c</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:24">stream</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:30">feed</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:39">streams</name><index pos:start="59:40" pos:end="59:78">[<expr pos:start="59:41" pos:end="59:77"><name pos:start="59:41" pos:end="59:77"><name pos:start="59:41" pos:end="59:41">c</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:49">stream</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:63">feed_streams</name><index pos:start="59:64" pos:end="59:77">[<expr pos:start="59:65" pos:end="59:76"><name pos:start="59:65" pos:end="59:76">stream_index</name></expr>]</index></name></expr>]</index></name></expr></argument>,

               <argument pos:start="61:16" pos:end="61:31"><expr pos:start="61:16" pos:end="61:31"><sizeof pos:start="61:16" pos:end="61:31">sizeof<argument_list pos:start="61:22" pos:end="61:31">(<argument pos:start="61:23" pos:end="61:30"><expr pos:start="61:23" pos:end="61:30"><name pos:start="61:23" pos:end="61:30">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:25"><expr pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:6">st</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:17">priv_data</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:24">NULL</name></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:39">/* build destination RTP address */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:44"><expr pos:start="69:5" pos:end="69:43"><name pos:start="69:5" pos:end="69:10">ipaddr</name> <operator pos:start="69:12" pos:end="69:12">=</operator> <call pos:start="69:14" pos:end="69:43"><name pos:start="69:14" pos:end="69:22">inet_ntoa</name><argument_list pos:start="69:23" pos:end="69:43">(<argument pos:start="69:24" pos:end="69:42"><expr pos:start="69:24" pos:end="69:42"><name pos:start="69:24" pos:end="69:42"><name pos:start="69:24" pos:end="69:32">dest_addr</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:42">sin_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="73:5" pos:end="135:5">switch<condition pos:start="73:11" pos:end="73:27">(<expr pos:start="73:12" pos:end="73:26"><name pos:start="73:12" pos:end="73:26"><name pos:start="73:12" pos:end="73:12">c</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:26">rtp_protocol</name></name></expr>)</condition> <block pos:start="73:29" pos:end="135:5">{<block_content pos:start="75:5" pos:end="133:18">

    <case pos:start="75:5" pos:end="75:34">case <expr pos:start="75:10" pos:end="75:33"><name pos:start="75:10" pos:end="75:33">RTSP_LOWER_TRANSPORT_UDP</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:44">case <expr pos:start="77:10" pos:end="77:43"><name pos:start="77:10" pos:end="77:43">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>:</case>

        <comment type="block" pos:start="79:9" pos:end="79:26">/* RTP/UDP case */</comment>



        <comment type="block" pos:start="83:9" pos:end="83:55">/* XXX: also pass as parameter to function ? */</comment>

        <if_stmt pos:start="85:9" pos:end="107:9"><if pos:start="85:9" pos:end="101:9">if <condition pos:start="85:12" pos:end="85:36">(<expr pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:13">c</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:21">stream</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:35">is_multicast</name></name></expr>)</condition> <block pos:start="85:38" pos:end="101:9">{<block_content pos:start="87:13" pos:end="99:62">

            <decl_stmt pos:start="87:13" pos:end="87:20"><decl pos:start="87:13" pos:end="87:19"><type pos:start="87:13" pos:end="87:15"><name pos:start="87:13" pos:end="87:15">int</name></type> <name pos:start="87:17" pos:end="87:19">ttl</name></decl>;</decl_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:43"><expr pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:15">ttl</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <name pos:start="89:19" pos:end="89:42"><name pos:start="89:19" pos:end="89:19">c</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:27">stream</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:42">multicast_ttl</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="93:25"><if pos:start="91:13" pos:end="93:25">if <condition pos:start="91:16" pos:end="91:21">(<expr pos:start="91:17" pos:end="91:20"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:20">ttl</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:25"><block_content pos:start="93:17" pos:end="93:25">

                <expr_stmt pos:start="93:17" pos:end="93:25"><expr pos:start="93:17" pos:end="93:24"><name pos:start="93:17" pos:end="93:19">ttl</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <literal type="number" pos:start="93:23" pos:end="93:24">16</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="99:62"><expr pos:start="95:13" pos:end="99:61"><call pos:start="95:13" pos:end="99:61"><name pos:start="95:13" pos:end="95:20">snprintf</name><argument_list pos:start="95:21" pos:end="99:61">(<argument pos:start="95:22" pos:end="95:34"><expr pos:start="95:22" pos:end="95:34"><name pos:start="95:22" pos:end="95:34"><name pos:start="95:22" pos:end="95:24">ctx</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:34">filename</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:57"><expr pos:start="95:37" pos:end="95:57"><sizeof pos:start="95:37" pos:end="95:57">sizeof<argument_list pos:start="95:43" pos:end="95:57">(<argument pos:start="95:44" pos:end="95:56"><expr pos:start="95:44" pos:end="95:56"><name pos:start="95:44" pos:end="95:56"><name pos:start="95:44" pos:end="95:46">ctx</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:56">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="97:22" pos:end="97:53"><expr pos:start="97:22" pos:end="97:53"><literal type="string" pos:start="97:22" pos:end="97:53">"rtp://%s:%d?multicast=1&amp;ttl=%d"</literal></expr></argument>,

                     <argument pos:start="99:22" pos:end="99:27"><expr pos:start="99:22" pos:end="99:27"><name pos:start="99:22" pos:end="99:27">ipaddr</name></expr></argument>, <argument pos:start="99:30" pos:end="99:55"><expr pos:start="99:30" pos:end="99:55"><call pos:start="99:30" pos:end="99:55"><name pos:start="99:30" pos:end="99:34">ntohs</name><argument_list pos:start="99:35" pos:end="99:55">(<argument pos:start="99:36" pos:end="99:54"><expr pos:start="99:36" pos:end="99:54"><name pos:start="99:36" pos:end="99:54"><name pos:start="99:36" pos:end="99:44">dest_addr</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:54">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:58" pos:end="99:60"><expr pos:start="99:58" pos:end="99:60"><name pos:start="99:58" pos:end="99:60">ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="107:9">else <block pos:start="101:16" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:72">

            <expr_stmt pos:start="103:13" pos:end="105:72"><expr pos:start="103:13" pos:end="105:71"><call pos:start="103:13" pos:end="105:71"><name pos:start="103:13" pos:end="103:20">snprintf</name><argument_list pos:start="103:21" pos:end="105:71">(<argument pos:start="103:22" pos:end="103:34"><expr pos:start="103:22" pos:end="103:34"><name pos:start="103:22" pos:end="103:34"><name pos:start="103:22" pos:end="103:24">ctx</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:34">filename</name></name></expr></argument>, <argument pos:start="103:37" pos:end="103:57"><expr pos:start="103:37" pos:end="103:57"><sizeof pos:start="103:37" pos:end="103:57">sizeof<argument_list pos:start="103:43" pos:end="103:57">(<argument pos:start="103:44" pos:end="103:56"><expr pos:start="103:44" pos:end="103:56"><name pos:start="103:44" pos:end="103:56"><name pos:start="103:44" pos:end="103:46">ctx</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:56">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="105:22" pos:end="105:34"><expr pos:start="105:22" pos:end="105:34"><literal type="string" pos:start="105:22" pos:end="105:34">"rtp://%s:%d"</literal></expr></argument>, <argument pos:start="105:37" pos:end="105:42"><expr pos:start="105:37" pos:end="105:42"><name pos:start="105:37" pos:end="105:42">ipaddr</name></expr></argument>, <argument pos:start="105:45" pos:end="105:70"><expr pos:start="105:45" pos:end="105:70"><call pos:start="105:45" pos:end="105:70"><name pos:start="105:45" pos:end="105:49">ntohs</name><argument_list pos:start="105:50" pos:end="105:70">(<argument pos:start="105:51" pos:end="105:69"><expr pos:start="105:51" pos:end="105:69"><name pos:start="105:51" pos:end="105:69"><name pos:start="105:51" pos:end="105:59">dest_addr</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:69">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="111:9" pos:end="113:22"><if pos:start="111:9" pos:end="113:22">if <condition pos:start="111:12" pos:end="111:56">(<expr pos:start="111:13" pos:end="111:55"><call pos:start="111:13" pos:end="111:51"><name pos:start="111:13" pos:end="111:20">url_open</name><argument_list pos:start="111:21" pos:end="111:51">(<argument pos:start="111:22" pos:end="111:23"><expr pos:start="111:22" pos:end="111:23"><operator pos:start="111:22" pos:end="111:22">&amp;</operator><name pos:start="111:23" pos:end="111:23">h</name></expr></argument>, <argument pos:start="111:26" pos:end="111:38"><expr pos:start="111:26" pos:end="111:38"><name pos:start="111:26" pos:end="111:38"><name pos:start="111:26" pos:end="111:28">ctx</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:38">filename</name></name></expr></argument>, <argument pos:start="111:41" pos:end="111:50"><expr pos:start="111:41" pos:end="111:50"><name pos:start="111:41" pos:end="111:50">URL_WRONLY</name></expr></argument>)</argument_list></call> <operator pos:start="111:53" pos:end="111:53">&lt;</operator> <literal type="number" pos:start="111:55" pos:end="111:55">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:22"><block_content pos:start="113:13" pos:end="113:22">

            <goto pos:start="113:13" pos:end="113:22">goto <name pos:start="113:18" pos:end="113:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:41"><expr pos:start="115:9" pos:end="115:40"><name pos:start="115:9" pos:end="115:36"><name pos:start="115:9" pos:end="115:9">c</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:22">rtp_handles</name><index pos:start="115:23" pos:end="115:36">[<expr pos:start="115:24" pos:end="115:35"><name pos:start="115:24" pos:end="115:35">stream_index</name></expr>]</index></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <name pos:start="115:40" pos:end="115:40">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:53"><expr pos:start="117:9" pos:end="117:52"><name pos:start="117:9" pos:end="117:23">max_packet_size</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <call pos:start="117:27" pos:end="117:52"><name pos:start="117:27" pos:end="117:49">url_get_max_packet_size</name><argument_list pos:start="117:50" pos:end="117:52">(<argument pos:start="117:51" pos:end="117:51"><expr pos:start="117:51" pos:end="117:51"><name pos:start="117:51" pos:end="117:51">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:34">case <expr pos:start="121:10" pos:end="121:33"><name pos:start="121:10" pos:end="121:33">RTSP_LOWER_TRANSPORT_TCP</name></expr>:</case>

        <comment type="block" pos:start="123:9" pos:end="123:26">/* RTP/TCP case */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:27"><expr pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:9">c</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:17">rtsp_c</name></name> <operator pos:start="125:19" pos:end="125:19">=</operator> <name pos:start="125:21" pos:end="125:26">rtsp_c</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:51"><expr pos:start="127:9" pos:end="127:50"><name pos:start="127:9" pos:end="127:23">max_packet_size</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:50">RTSP_TCP_MAX_PACKET_SIZE</name></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <default pos:start="131:5" pos:end="131:12">default:</default>

        <goto pos:start="133:9" pos:end="133:18">goto <name pos:start="133:14" pos:end="133:17">fail</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="139:5" pos:end="143:61"><expr pos:start="139:5" pos:end="143:60"><call pos:start="139:5" pos:end="143:60"><name pos:start="139:5" pos:end="139:12">http_log</name><argument_list pos:start="139:13" pos:end="143:60">(<argument pos:start="139:14" pos:end="139:53"><expr pos:start="139:14" pos:end="139:53"><literal type="string" pos:start="139:14" pos:end="139:53">"%s:%d - - \"PLAY %s/streamid=%d %s\"\n"</literal></expr></argument>,

             <argument pos:start="141:14" pos:end="141:19"><expr pos:start="141:14" pos:end="141:19"><name pos:start="141:14" pos:end="141:19">ipaddr</name></expr></argument>, <argument pos:start="141:22" pos:end="141:47"><expr pos:start="141:22" pos:end="141:47"><call pos:start="141:22" pos:end="141:47"><name pos:start="141:22" pos:end="141:26">ntohs</name><argument_list pos:start="141:27" pos:end="141:47">(<argument pos:start="141:28" pos:end="141:46"><expr pos:start="141:28" pos:end="141:46"><name pos:start="141:28" pos:end="141:46"><name pos:start="141:28" pos:end="141:36">dest_addr</name><operator pos:start="141:37" pos:end="141:38">-&gt;</operator><name pos:start="141:39" pos:end="141:46">sin_port</name></name></expr></argument>)</argument_list></call></expr></argument>,

             <argument pos:start="143:14" pos:end="143:32"><expr pos:start="143:14" pos:end="143:32"><name pos:start="143:14" pos:end="143:32"><name pos:start="143:14" pos:end="143:14">c</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:22">stream</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:32">filename</name></name></expr></argument>, <argument pos:start="143:35" pos:end="143:46"><expr pos:start="143:35" pos:end="143:46"><name pos:start="143:35" pos:end="143:46">stream_index</name></expr></argument>, <argument pos:start="143:49" pos:end="143:59"><expr pos:start="143:49" pos:end="143:59"><name pos:start="143:49" pos:end="143:59"><name pos:start="143:49" pos:end="143:49">c</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:59">protocol</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="147:5" pos:end="147:88">/* normally, no packets should be output here, but the packet size may be checked */</comment>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:63">(<expr pos:start="149:9" pos:end="149:62"><call pos:start="149:9" pos:end="149:58"><name pos:start="149:9" pos:end="149:31">url_open_dyn_packet_buf</name><argument_list pos:start="149:32" pos:end="149:58">(<argument pos:start="149:33" pos:end="149:40"><expr pos:start="149:33" pos:end="149:40"><operator pos:start="149:33" pos:end="149:33">&amp;</operator><name pos:start="149:34" pos:end="149:40"><name pos:start="149:34" pos:end="149:36">ctx</name><operator pos:start="149:37" pos:end="149:38">-&gt;</operator><name pos:start="149:39" pos:end="149:40">pb</name></name></expr></argument>, <argument pos:start="149:43" pos:end="149:57"><expr pos:start="149:43" pos:end="149:57"><name pos:start="149:43" pos:end="149:57">max_packet_size</name></expr></argument>)</argument_list></call> <operator pos:start="149:60" pos:end="149:60">&lt;</operator> <literal type="number" pos:start="149:62" pos:end="149:62">0</literal></expr>)</condition> <block pos:start="149:65" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:18">

        <comment type="block" pos:start="151:9" pos:end="151:31">/* XXX: close stream */</comment>

        <goto pos:start="153:9" pos:end="153:18">goto <name pos:start="153:14" pos:end="153:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:33"><expr pos:start="157:5" pos:end="157:32"><call pos:start="157:5" pos:end="157:32"><name pos:start="157:5" pos:end="157:21">av_set_parameters</name><argument_list pos:start="157:22" pos:end="157:32">(<argument pos:start="157:23" pos:end="157:25"><expr pos:start="157:23" pos:end="157:25"><name pos:start="157:23" pos:end="157:25">ctx</name></expr></argument>, <argument pos:start="157:28" pos:end="157:31"><expr pos:start="157:28" pos:end="157:31"><name pos:start="157:28" pos:end="157:31">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="159:5" pos:end="171:5"><if pos:start="159:5" pos:end="171:5">if <condition pos:start="159:8" pos:end="159:33">(<expr pos:start="159:9" pos:end="159:32"><call pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:23">av_write_header</name><argument_list pos:start="159:24" pos:end="159:28">(<argument pos:start="159:25" pos:end="159:27"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">ctx</name></expr></argument>)</argument_list></call> <operator pos:start="159:30" pos:end="159:30">&lt;</operator> <literal type="number" pos:start="159:32" pos:end="159:32">0</literal></expr>)</condition> <block pos:start="159:35" pos:end="171:5">{<block_content pos:start="161:5" pos:end="169:18">

    <label pos:start="161:5" pos:end="161:9"><name pos:start="161:5" pos:end="161:8">fail</name>:</label>

        <if_stmt pos:start="163:9" pos:end="165:25"><if pos:start="163:9" pos:end="165:25">if <condition pos:start="163:12" pos:end="163:14">(<expr pos:start="163:13" pos:end="163:13"><name pos:start="163:13" pos:end="163:13">h</name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:25"><block_content pos:start="165:13" pos:end="165:25">

            <expr_stmt pos:start="165:13" pos:end="165:25"><expr pos:start="165:13" pos:end="165:24"><call pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:21">url_close</name><argument_list pos:start="165:22" pos:end="165:24">(<argument pos:start="165:23" pos:end="165:23"><expr pos:start="165:23" pos:end="165:23"><name pos:start="165:23" pos:end="165:23">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:21"><expr pos:start="167:9" pos:end="167:20"><call pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:15">av_free</name><argument_list pos:start="167:16" pos:end="167:20">(<argument pos:start="167:17" pos:end="167:19"><expr pos:start="167:17" pos:end="167:19"><name pos:start="167:17" pos:end="167:19">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="169:9" pos:end="169:18">return <expr pos:start="169:16" pos:end="169:17"><operator pos:start="169:16" pos:end="169:16">-</operator><literal type="number" pos:start="169:17" pos:end="169:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:43"><expr pos:start="173:5" pos:end="173:42"><call pos:start="173:5" pos:end="173:42"><name pos:start="173:5" pos:end="173:21">url_close_dyn_buf</name><argument_list pos:start="173:22" pos:end="173:42">(<argument pos:start="173:23" pos:end="173:29"><expr pos:start="173:23" pos:end="173:29"><name pos:start="173:23" pos:end="173:29"><name pos:start="173:23" pos:end="173:25">ctx</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:29">pb</name></name></expr></argument>, <argument pos:start="173:32" pos:end="173:41"><expr pos:start="173:32" pos:end="173:41"><operator pos:start="173:32" pos:end="173:32">&amp;</operator><name pos:start="173:33" pos:end="173:41">dummy_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:23"><expr pos:start="175:5" pos:end="175:22"><call pos:start="175:5" pos:end="175:22"><name pos:start="175:5" pos:end="175:11">av_free</name><argument_list pos:start="175:12" pos:end="175:22">(<argument pos:start="175:13" pos:end="175:21"><expr pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:21">dummy_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="179:5" pos:end="179:35"><expr pos:start="179:5" pos:end="179:34"><name pos:start="179:5" pos:end="179:28"><name pos:start="179:5" pos:end="179:5">c</name><operator pos:start="179:6" pos:end="179:7">-&gt;</operator><name pos:start="179:8" pos:end="179:14">rtp_ctx</name><index pos:start="179:15" pos:end="179:28">[<expr pos:start="179:16" pos:end="179:27"><name pos:start="179:16" pos:end="179:27">stream_index</name></expr>]</index></name> <operator pos:start="179:30" pos:end="179:30">=</operator> <name pos:start="179:32" pos:end="179:34">ctx</name></expr>;</expr_stmt>

    <return pos:start="181:5" pos:end="181:13">return <expr pos:start="181:12" pos:end="181:12"><literal type="number" pos:start="181:12" pos:end="181:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
