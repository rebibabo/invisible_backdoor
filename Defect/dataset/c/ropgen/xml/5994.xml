<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5994.c" pos:tabs="8"><function pos:start="1:1" pos:end="249:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">gen_ld</name> <parameter_list pos:start="1:20" pos:end="3:53">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:28">CPUState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:47">DisasContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:66">opc</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:26"><decl pos:start="3:21" pos:end="3:26"><type pos:start="3:21" pos:end="3:26"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:26">rt</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:36"><decl pos:start="3:29" pos:end="3:36"><type pos:start="3:29" pos:end="3:36"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:36">base</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:52"><decl pos:start="3:39" pos:end="3:52"><type pos:start="3:39" pos:end="3:52"><name pos:start="3:39" pos:end="3:45">int16_t</name></type> <name pos:start="3:47" pos:end="3:52">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="249:1">{<block_content pos:start="7:5" pos:end="247:22">

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">opn</name> <init pos:start="7:21" pos:end="7:26">= <expr pos:start="7:23" pos:end="7:26"><literal type="string" pos:start="7:23" pos:end="7:26">"ld"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:11">t0</name></decl>, <decl pos:start="9:14" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:14" pos:end="9:15">t1</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:73">(<expr pos:start="13:9" pos:end="13:72"><name pos:start="13:9" pos:end="13:10">rt</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal> <operator pos:start="13:17" pos:end="13:18">&amp;&amp;</operator> <name pos:start="13:20" pos:end="13:34"><name pos:start="13:20" pos:end="13:22">env</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:34">insn_flags</name></name> <operator pos:start="13:36" pos:end="13:36">&amp;</operator> <operator pos:start="13:38" pos:end="13:38">(</operator><name pos:start="13:39" pos:end="13:53">INSN_LOONGSON2E</name> <operator pos:start="13:55" pos:end="13:55">|</operator> <name pos:start="13:57" pos:end="13:71">INSN_LOONGSON2F</name><operator pos:start="13:72" pos:end="13:72">)</operator></expr>)</condition> <block pos:start="13:75" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <comment type="block" pos:start="15:9" pos:end="19:35">/* Loongson CPU uses a load to zero register for prefetch.

           We emulate it as a NOP. On other CPU we must perform the

           actual memory access. */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:18">MIPS_DEBUG</name><argument_list pos:start="21:19" pos:end="21:25">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><literal type="string" pos:start="21:20" pos:end="21:24">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">t0</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:21">tcg_temp_new</name><argument_list pos:start="29:22" pos:end="29:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:6">t1</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:23"><name pos:start="31:10" pos:end="31:21">tcg_temp_new</name><argument_list pos:start="31:22" pos:end="31:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:48"><expr pos:start="33:5" pos:end="33:47"><call pos:start="33:5" pos:end="33:47"><name pos:start="33:5" pos:end="33:24">gen_base_offset_addr</name><argument_list pos:start="33:25" pos:end="33:47">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">ctx</name></expr></argument>, <argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><name pos:start="33:31" pos:end="33:32">t0</name></expr></argument>, <argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:38">base</name></expr></argument>, <argument pos:start="33:41" pos:end="33:46"><expr pos:start="33:41" pos:end="33:46"><name pos:start="33:41" pos:end="33:46">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="37:5" pos:end="239:5">switch <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">opc</name></expr>)</condition> <block pos:start="37:18" pos:end="239:5">{<block_content pos:start="41:5" pos:end="237:14">

<cpp:if pos:start="39:1" pos:end="39:26">#<cpp:directive pos:start="39:2" pos:end="39:3">if</cpp:directive> <expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:11">defined</name><argument_list pos:start="39:12" pos:end="39:26">(<argument pos:start="39:13" pos:end="39:25"><expr pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="41:5" pos:end="41:17">case <expr pos:start="41:10" pos:end="41:16"><name pos:start="41:10" pos:end="41:16">OPC_LWU</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:31"><expr pos:start="43:9" pos:end="43:30"><call pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:22">save_cpu_state</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">ctx</name></expr></argument>, <argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:31"><expr pos:start="45:9" pos:end="45:30"><call pos:start="45:9" pos:end="45:30"><name pos:start="45:9" pos:end="45:17">op_ld_lwu</name><argument_list pos:start="45:18" pos:end="45:30">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">t0</name></expr></argument>, <argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">t0</name></expr></argument>, <argument pos:start="45:27" pos:end="45:29"><expr pos:start="45:27" pos:end="45:29"><name pos:start="45:27" pos:end="45:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><call pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:21">gen_store_gpr</name><argument_list pos:start="47:22" pos:end="47:29">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">t0</name></expr></argument>, <argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:20"><expr pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:11">opn</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="string" pos:start="49:15" pos:end="49:19">"lwu"</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:16">case <expr pos:start="53:10" pos:end="53:15"><name pos:start="53:10" pos:end="53:15">OPC_LD</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:31"><expr pos:start="55:9" pos:end="55:30"><call pos:start="55:9" pos:end="55:30"><name pos:start="55:9" pos:end="55:22">save_cpu_state</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">ctx</name></expr></argument>, <argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><literal type="number" pos:start="55:29" pos:end="55:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:16">op_ld_ld</name><argument_list pos:start="57:17" pos:end="57:29">(<argument pos:start="57:18" pos:end="57:19"><expr pos:start="57:18" pos:end="57:19"><name pos:start="57:18" pos:end="57:19">t0</name></expr></argument>, <argument pos:start="57:22" pos:end="57:23"><expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">t0</name></expr></argument>, <argument pos:start="57:26" pos:end="57:28"><expr pos:start="57:26" pos:end="57:28"><name pos:start="57:26" pos:end="57:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><call pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:21">gen_store_gpr</name><argument_list pos:start="59:22" pos:end="59:29">(<argument pos:start="59:23" pos:end="59:24"><expr pos:start="59:23" pos:end="59:24"><name pos:start="59:23" pos:end="59:24">t0</name></expr></argument>, <argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:11">opn</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <literal type="string" pos:start="61:15" pos:end="61:18">"ld"</literal></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:17">case <expr pos:start="65:10" pos:end="65:16"><name pos:start="65:10" pos:end="65:16">OPC_LLD</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:31"><expr pos:start="67:9" pos:end="67:30"><call pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:22">save_cpu_state</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">ctx</name></expr></argument>, <argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><call pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:17">op_ld_lld</name><argument_list pos:start="69:18" pos:end="69:30">(<argument pos:start="69:19" pos:end="69:20"><expr pos:start="69:19" pos:end="69:20"><name pos:start="69:19" pos:end="69:20">t0</name></expr></argument>, <argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">t0</name></expr></argument>, <argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><call pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:21">gen_store_gpr</name><argument_list pos:start="71:22" pos:end="71:29">(<argument pos:start="71:23" pos:end="71:24"><expr pos:start="71:23" pos:end="71:24"><name pos:start="71:23" pos:end="71:24">t0</name></expr></argument>, <argument pos:start="71:27" pos:end="71:28"><expr pos:start="71:27" pos:end="71:28"><name pos:start="71:27" pos:end="71:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:20"><expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:11">opn</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <literal type="string" pos:start="73:15" pos:end="73:19">"lld"</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:17">case <expr pos:start="77:10" pos:end="77:16"><name pos:start="77:10" pos:end="77:16">OPC_LDL</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:31"><expr pos:start="79:9" pos:end="79:30"><call pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:22">save_cpu_state</name><argument_list pos:start="79:23" pos:end="79:30">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">ctx</name></expr></argument>, <argument pos:start="79:29" pos:end="79:29"><expr pos:start="79:29" pos:end="79:29"><literal type="number" pos:start="79:29" pos:end="79:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:29"><expr pos:start="81:9" pos:end="81:28"><call pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:20">gen_load_gpr</name><argument_list pos:start="81:21" pos:end="81:28">(<argument pos:start="81:22" pos:end="81:23"><expr pos:start="81:22" pos:end="81:23"><name pos:start="81:22" pos:end="81:23">t1</name></expr></argument>, <argument pos:start="81:26" pos:end="81:27"><expr pos:start="81:26" pos:end="81:27"><name pos:start="81:26" pos:end="81:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:53"><expr pos:start="83:9" pos:end="83:52"><call pos:start="83:9" pos:end="83:52"><name pos:start="83:9" pos:end="83:21">gen_helper_3i</name><argument_list pos:start="83:22" pos:end="83:52">(<argument pos:start="83:23" pos:end="83:25"><expr pos:start="83:23" pos:end="83:25"><name pos:start="83:23" pos:end="83:25">ldl</name></expr></argument>, <argument pos:start="83:28" pos:end="83:29"><expr pos:start="83:28" pos:end="83:29"><name pos:start="83:28" pos:end="83:29">t1</name></expr></argument>, <argument pos:start="83:32" pos:end="83:33"><expr pos:start="83:32" pos:end="83:33"><name pos:start="83:32" pos:end="83:33">t1</name></expr></argument>, <argument pos:start="83:36" pos:end="83:37"><expr pos:start="83:36" pos:end="83:37"><name pos:start="83:36" pos:end="83:37">t0</name></expr></argument>, <argument pos:start="83:40" pos:end="83:51"><expr pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:51"><name pos:start="83:40" pos:end="83:42">ctx</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:51">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><call pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:21">gen_store_gpr</name><argument_list pos:start="85:22" pos:end="85:29">(<argument pos:start="85:23" pos:end="85:24"><expr pos:start="85:23" pos:end="85:24"><name pos:start="85:23" pos:end="85:24">t1</name></expr></argument>, <argument pos:start="85:27" pos:end="85:28"><expr pos:start="85:27" pos:end="85:28"><name pos:start="85:27" pos:end="85:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:20"><expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:11">opn</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <literal type="string" pos:start="87:15" pos:end="87:19">"ldl"</literal></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:17">case <expr pos:start="91:10" pos:end="91:16"><name pos:start="91:10" pos:end="91:16">OPC_LDR</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><call pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:22">save_cpu_state</name><argument_list pos:start="93:23" pos:end="93:30">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">ctx</name></expr></argument>, <argument pos:start="93:29" pos:end="93:29"><expr pos:start="93:29" pos:end="93:29"><literal type="number" pos:start="93:29" pos:end="93:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:20">gen_load_gpr</name><argument_list pos:start="95:21" pos:end="95:28">(<argument pos:start="95:22" pos:end="95:23"><expr pos:start="95:22" pos:end="95:23"><name pos:start="95:22" pos:end="95:23">t1</name></expr></argument>, <argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:53"><expr pos:start="97:9" pos:end="97:52"><call pos:start="97:9" pos:end="97:52"><name pos:start="97:9" pos:end="97:21">gen_helper_3i</name><argument_list pos:start="97:22" pos:end="97:52">(<argument pos:start="97:23" pos:end="97:25"><expr pos:start="97:23" pos:end="97:25"><name pos:start="97:23" pos:end="97:25">ldr</name></expr></argument>, <argument pos:start="97:28" pos:end="97:29"><expr pos:start="97:28" pos:end="97:29"><name pos:start="97:28" pos:end="97:29">t1</name></expr></argument>, <argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">t1</name></expr></argument>, <argument pos:start="97:36" pos:end="97:37"><expr pos:start="97:36" pos:end="97:37"><name pos:start="97:36" pos:end="97:37">t0</name></expr></argument>, <argument pos:start="97:40" pos:end="97:51"><expr pos:start="97:40" pos:end="97:51"><name pos:start="97:40" pos:end="97:51"><name pos:start="97:40" pos:end="97:42">ctx</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:51">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><call pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:21">gen_store_gpr</name><argument_list pos:start="99:22" pos:end="99:29">(<argument pos:start="99:23" pos:end="99:24"><expr pos:start="99:23" pos:end="99:24"><name pos:start="99:23" pos:end="99:24">t1</name></expr></argument>, <argument pos:start="99:27" pos:end="99:28"><expr pos:start="99:27" pos:end="99:28"><name pos:start="99:27" pos:end="99:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:20"><expr pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">opn</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <literal type="string" pos:start="101:15" pos:end="101:19">"ldr"</literal></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:18">case <expr pos:start="105:10" pos:end="105:17"><name pos:start="105:10" pos:end="105:17">OPC_LDPC</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><call pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:22">save_cpu_state</name><argument_list pos:start="107:23" pos:end="107:30">(<argument pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:26">ctx</name></expr></argument>, <argument pos:start="107:29" pos:end="107:29"><expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:49"><expr pos:start="109:9" pos:end="109:48"><call pos:start="109:9" pos:end="109:48"><name pos:start="109:9" pos:end="109:23">tcg_gen_movi_tl</name><argument_list pos:start="109:24" pos:end="109:48">(<argument pos:start="109:25" pos:end="109:26"><expr pos:start="109:25" pos:end="109:26"><name pos:start="109:25" pos:end="109:26">t1</name></expr></argument>, <argument pos:start="109:29" pos:end="109:47"><expr pos:start="109:29" pos:end="109:47"><call pos:start="109:29" pos:end="109:47"><name pos:start="109:29" pos:end="109:42">pc_relative_pc</name><argument_list pos:start="109:43" pos:end="109:47">(<argument pos:start="109:44" pos:end="109:46"><expr pos:start="109:44" pos:end="109:46"><name pos:start="109:44" pos:end="109:46">ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:41"><expr pos:start="111:9" pos:end="111:40"><call pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:23">gen_op_addr_add</name><argument_list pos:start="111:24" pos:end="111:40">(<argument pos:start="111:25" pos:end="111:27"><expr pos:start="111:25" pos:end="111:27"><name pos:start="111:25" pos:end="111:27">ctx</name></expr></argument>, <argument pos:start="111:30" pos:end="111:31"><expr pos:start="111:30" pos:end="111:31"><name pos:start="111:30" pos:end="111:31">t0</name></expr></argument>, <argument pos:start="111:34" pos:end="111:35"><expr pos:start="111:34" pos:end="111:35"><name pos:start="111:34" pos:end="111:35">t0</name></expr></argument>, <argument pos:start="111:38" pos:end="111:39"><expr pos:start="111:38" pos:end="111:39"><name pos:start="111:38" pos:end="111:39">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:30"><expr pos:start="113:9" pos:end="113:29"><call pos:start="113:9" pos:end="113:29"><name pos:start="113:9" pos:end="113:16">op_ld_ld</name><argument_list pos:start="113:17" pos:end="113:29">(<argument pos:start="113:18" pos:end="113:19"><expr pos:start="113:18" pos:end="113:19"><name pos:start="113:18" pos:end="113:19">t0</name></expr></argument>, <argument pos:start="113:22" pos:end="113:23"><expr pos:start="113:22" pos:end="113:23"><name pos:start="113:22" pos:end="113:23">t0</name></expr></argument>, <argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:30"><expr pos:start="115:9" pos:end="115:29"><call pos:start="115:9" pos:end="115:29"><name pos:start="115:9" pos:end="115:21">gen_store_gpr</name><argument_list pos:start="115:22" pos:end="115:29">(<argument pos:start="115:23" pos:end="115:24"><expr pos:start="115:23" pos:end="115:24"><name pos:start="115:23" pos:end="115:24">t0</name></expr></argument>, <argument pos:start="115:27" pos:end="115:28"><expr pos:start="115:27" pos:end="115:28"><name pos:start="115:27" pos:end="115:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:21"><expr pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:11">opn</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <literal type="string" pos:start="117:15" pos:end="117:20">"ldpc"</literal></expr>;</expr_stmt>

        <break pos:start="119:9" pos:end="122:0">break;</break>

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

    <case pos:start="123:5" pos:end="123:18">case <expr pos:start="123:10" pos:end="123:17"><name pos:start="123:10" pos:end="123:17">OPC_LWPC</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:31"><expr pos:start="125:9" pos:end="125:30"><call pos:start="125:9" pos:end="125:30"><name pos:start="125:9" pos:end="125:22">save_cpu_state</name><argument_list pos:start="125:23" pos:end="125:30">(<argument pos:start="125:24" pos:end="125:26"><expr pos:start="125:24" pos:end="125:26"><name pos:start="125:24" pos:end="125:26">ctx</name></expr></argument>, <argument pos:start="125:29" pos:end="125:29"><expr pos:start="125:29" pos:end="125:29"><literal type="number" pos:start="125:29" pos:end="125:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:49"><expr pos:start="127:9" pos:end="127:48"><call pos:start="127:9" pos:end="127:48"><name pos:start="127:9" pos:end="127:23">tcg_gen_movi_tl</name><argument_list pos:start="127:24" pos:end="127:48">(<argument pos:start="127:25" pos:end="127:26"><expr pos:start="127:25" pos:end="127:26"><name pos:start="127:25" pos:end="127:26">t1</name></expr></argument>, <argument pos:start="127:29" pos:end="127:47"><expr pos:start="127:29" pos:end="127:47"><call pos:start="127:29" pos:end="127:47"><name pos:start="127:29" pos:end="127:42">pc_relative_pc</name><argument_list pos:start="127:43" pos:end="127:47">(<argument pos:start="127:44" pos:end="127:46"><expr pos:start="127:44" pos:end="127:46"><name pos:start="127:44" pos:end="127:46">ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:41"><expr pos:start="129:9" pos:end="129:40"><call pos:start="129:9" pos:end="129:40"><name pos:start="129:9" pos:end="129:23">gen_op_addr_add</name><argument_list pos:start="129:24" pos:end="129:40">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">ctx</name></expr></argument>, <argument pos:start="129:30" pos:end="129:31"><expr pos:start="129:30" pos:end="129:31"><name pos:start="129:30" pos:end="129:31">t0</name></expr></argument>, <argument pos:start="129:34" pos:end="129:35"><expr pos:start="129:34" pos:end="129:35"><name pos:start="129:34" pos:end="129:35">t0</name></expr></argument>, <argument pos:start="129:38" pos:end="129:39"><expr pos:start="129:38" pos:end="129:39"><name pos:start="129:38" pos:end="129:39">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:30"><expr pos:start="131:9" pos:end="131:29"><call pos:start="131:9" pos:end="131:29"><name pos:start="131:9" pos:end="131:16">op_ld_lw</name><argument_list pos:start="131:17" pos:end="131:29">(<argument pos:start="131:18" pos:end="131:19"><expr pos:start="131:18" pos:end="131:19"><name pos:start="131:18" pos:end="131:19">t0</name></expr></argument>, <argument pos:start="131:22" pos:end="131:23"><expr pos:start="131:22" pos:end="131:23"><name pos:start="131:22" pos:end="131:23">t0</name></expr></argument>, <argument pos:start="131:26" pos:end="131:28"><expr pos:start="131:26" pos:end="131:28"><name pos:start="131:26" pos:end="131:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><call pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:21">gen_store_gpr</name><argument_list pos:start="133:22" pos:end="133:29">(<argument pos:start="133:23" pos:end="133:24"><expr pos:start="133:23" pos:end="133:24"><name pos:start="133:23" pos:end="133:24">t0</name></expr></argument>, <argument pos:start="133:27" pos:end="133:28"><expr pos:start="133:27" pos:end="133:28"><name pos:start="133:27" pos:end="133:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:21"><expr pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:11">opn</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <literal type="string" pos:start="135:15" pos:end="135:20">"lwpc"</literal></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:16">case <expr pos:start="139:10" pos:end="139:15"><name pos:start="139:10" pos:end="139:15">OPC_LW</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:31"><expr pos:start="141:9" pos:end="141:30"><call pos:start="141:9" pos:end="141:30"><name pos:start="141:9" pos:end="141:22">save_cpu_state</name><argument_list pos:start="141:23" pos:end="141:30">(<argument pos:start="141:24" pos:end="141:26"><expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">ctx</name></expr></argument>, <argument pos:start="141:29" pos:end="141:29"><expr pos:start="141:29" pos:end="141:29"><literal type="number" pos:start="141:29" pos:end="141:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:30"><expr pos:start="143:9" pos:end="143:29"><call pos:start="143:9" pos:end="143:29"><name pos:start="143:9" pos:end="143:16">op_ld_lw</name><argument_list pos:start="143:17" pos:end="143:29">(<argument pos:start="143:18" pos:end="143:19"><expr pos:start="143:18" pos:end="143:19"><name pos:start="143:18" pos:end="143:19">t0</name></expr></argument>, <argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><name pos:start="143:22" pos:end="143:23">t0</name></expr></argument>, <argument pos:start="143:26" pos:end="143:28"><expr pos:start="143:26" pos:end="143:28"><name pos:start="143:26" pos:end="143:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:30"><expr pos:start="145:9" pos:end="145:29"><call pos:start="145:9" pos:end="145:29"><name pos:start="145:9" pos:end="145:21">gen_store_gpr</name><argument_list pos:start="145:22" pos:end="145:29">(<argument pos:start="145:23" pos:end="145:24"><expr pos:start="145:23" pos:end="145:24"><name pos:start="145:23" pos:end="145:24">t0</name></expr></argument>, <argument pos:start="145:27" pos:end="145:28"><expr pos:start="145:27" pos:end="145:28"><name pos:start="145:27" pos:end="145:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:19"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:11">opn</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <literal type="string" pos:start="147:15" pos:end="147:18">"lw"</literal></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:16">case <expr pos:start="151:10" pos:end="151:15"><name pos:start="151:10" pos:end="151:15">OPC_LH</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:31"><expr pos:start="153:9" pos:end="153:30"><call pos:start="153:9" pos:end="153:30"><name pos:start="153:9" pos:end="153:22">save_cpu_state</name><argument_list pos:start="153:23" pos:end="153:30">(<argument pos:start="153:24" pos:end="153:26"><expr pos:start="153:24" pos:end="153:26"><name pos:start="153:24" pos:end="153:26">ctx</name></expr></argument>, <argument pos:start="153:29" pos:end="153:29"><expr pos:start="153:29" pos:end="153:29"><literal type="number" pos:start="153:29" pos:end="153:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:30"><expr pos:start="155:9" pos:end="155:29"><call pos:start="155:9" pos:end="155:29"><name pos:start="155:9" pos:end="155:16">op_ld_lh</name><argument_list pos:start="155:17" pos:end="155:29">(<argument pos:start="155:18" pos:end="155:19"><expr pos:start="155:18" pos:end="155:19"><name pos:start="155:18" pos:end="155:19">t0</name></expr></argument>, <argument pos:start="155:22" pos:end="155:23"><expr pos:start="155:22" pos:end="155:23"><name pos:start="155:22" pos:end="155:23">t0</name></expr></argument>, <argument pos:start="155:26" pos:end="155:28"><expr pos:start="155:26" pos:end="155:28"><name pos:start="155:26" pos:end="155:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><call pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:21">gen_store_gpr</name><argument_list pos:start="157:22" pos:end="157:29">(<argument pos:start="157:23" pos:end="157:24"><expr pos:start="157:23" pos:end="157:24"><name pos:start="157:23" pos:end="157:24">t0</name></expr></argument>, <argument pos:start="157:27" pos:end="157:28"><expr pos:start="157:27" pos:end="157:28"><name pos:start="157:27" pos:end="157:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:19"><expr pos:start="159:9" pos:end="159:18"><name pos:start="159:9" pos:end="159:11">opn</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <literal type="string" pos:start="159:15" pos:end="159:18">"lh"</literal></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:17">case <expr pos:start="163:10" pos:end="163:16"><name pos:start="163:10" pos:end="163:16">OPC_LHU</name></expr>:</case>

        <expr_stmt pos:start="165:9" pos:end="165:31"><expr pos:start="165:9" pos:end="165:30"><call pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:22">save_cpu_state</name><argument_list pos:start="165:23" pos:end="165:30">(<argument pos:start="165:24" pos:end="165:26"><expr pos:start="165:24" pos:end="165:26"><name pos:start="165:24" pos:end="165:26">ctx</name></expr></argument>, <argument pos:start="165:29" pos:end="165:29"><expr pos:start="165:29" pos:end="165:29"><literal type="number" pos:start="165:29" pos:end="165:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:31"><expr pos:start="167:9" pos:end="167:30"><call pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:17">op_ld_lhu</name><argument_list pos:start="167:18" pos:end="167:30">(<argument pos:start="167:19" pos:end="167:20"><expr pos:start="167:19" pos:end="167:20"><name pos:start="167:19" pos:end="167:20">t0</name></expr></argument>, <argument pos:start="167:23" pos:end="167:24"><expr pos:start="167:23" pos:end="167:24"><name pos:start="167:23" pos:end="167:24">t0</name></expr></argument>, <argument pos:start="167:27" pos:end="167:29"><expr pos:start="167:27" pos:end="167:29"><name pos:start="167:27" pos:end="167:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><call pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:21">gen_store_gpr</name><argument_list pos:start="169:22" pos:end="169:29">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">t0</name></expr></argument>, <argument pos:start="169:27" pos:end="169:28"><expr pos:start="169:27" pos:end="169:28"><name pos:start="169:27" pos:end="169:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:20"><expr pos:start="171:9" pos:end="171:19"><name pos:start="171:9" pos:end="171:11">opn</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <literal type="string" pos:start="171:15" pos:end="171:19">"lhu"</literal></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    <case pos:start="175:5" pos:end="175:16">case <expr pos:start="175:10" pos:end="175:15"><name pos:start="175:10" pos:end="175:15">OPC_LB</name></expr>:</case>

        <expr_stmt pos:start="177:9" pos:end="177:31"><expr pos:start="177:9" pos:end="177:30"><call pos:start="177:9" pos:end="177:30"><name pos:start="177:9" pos:end="177:22">save_cpu_state</name><argument_list pos:start="177:23" pos:end="177:30">(<argument pos:start="177:24" pos:end="177:26"><expr pos:start="177:24" pos:end="177:26"><name pos:start="177:24" pos:end="177:26">ctx</name></expr></argument>, <argument pos:start="177:29" pos:end="177:29"><expr pos:start="177:29" pos:end="177:29"><literal type="number" pos:start="177:29" pos:end="177:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:30"><expr pos:start="179:9" pos:end="179:29"><call pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:16">op_ld_lb</name><argument_list pos:start="179:17" pos:end="179:29">(<argument pos:start="179:18" pos:end="179:19"><expr pos:start="179:18" pos:end="179:19"><name pos:start="179:18" pos:end="179:19">t0</name></expr></argument>, <argument pos:start="179:22" pos:end="179:23"><expr pos:start="179:22" pos:end="179:23"><name pos:start="179:22" pos:end="179:23">t0</name></expr></argument>, <argument pos:start="179:26" pos:end="179:28"><expr pos:start="179:26" pos:end="179:28"><name pos:start="179:26" pos:end="179:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:30"><expr pos:start="181:9" pos:end="181:29"><call pos:start="181:9" pos:end="181:29"><name pos:start="181:9" pos:end="181:21">gen_store_gpr</name><argument_list pos:start="181:22" pos:end="181:29">(<argument pos:start="181:23" pos:end="181:24"><expr pos:start="181:23" pos:end="181:24"><name pos:start="181:23" pos:end="181:24">t0</name></expr></argument>, <argument pos:start="181:27" pos:end="181:28"><expr pos:start="181:27" pos:end="181:28"><name pos:start="181:27" pos:end="181:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:19"><expr pos:start="183:9" pos:end="183:18"><name pos:start="183:9" pos:end="183:11">opn</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <literal type="string" pos:start="183:15" pos:end="183:18">"lb"</literal></expr>;</expr_stmt>

        <break pos:start="185:9" pos:end="185:14">break;</break>

    <case pos:start="187:5" pos:end="187:17">case <expr pos:start="187:10" pos:end="187:16"><name pos:start="187:10" pos:end="187:16">OPC_LBU</name></expr>:</case>

        <expr_stmt pos:start="189:9" pos:end="189:31"><expr pos:start="189:9" pos:end="189:30"><call pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:22">save_cpu_state</name><argument_list pos:start="189:23" pos:end="189:30">(<argument pos:start="189:24" pos:end="189:26"><expr pos:start="189:24" pos:end="189:26"><name pos:start="189:24" pos:end="189:26">ctx</name></expr></argument>, <argument pos:start="189:29" pos:end="189:29"><expr pos:start="189:29" pos:end="189:29"><literal type="number" pos:start="189:29" pos:end="189:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:31"><expr pos:start="191:9" pos:end="191:30"><call pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:17">op_ld_lbu</name><argument_list pos:start="191:18" pos:end="191:30">(<argument pos:start="191:19" pos:end="191:20"><expr pos:start="191:19" pos:end="191:20"><name pos:start="191:19" pos:end="191:20">t0</name></expr></argument>, <argument pos:start="191:23" pos:end="191:24"><expr pos:start="191:23" pos:end="191:24"><name pos:start="191:23" pos:end="191:24">t0</name></expr></argument>, <argument pos:start="191:27" pos:end="191:29"><expr pos:start="191:27" pos:end="191:29"><name pos:start="191:27" pos:end="191:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:30"><expr pos:start="193:9" pos:end="193:29"><call pos:start="193:9" pos:end="193:29"><name pos:start="193:9" pos:end="193:21">gen_store_gpr</name><argument_list pos:start="193:22" pos:end="193:29">(<argument pos:start="193:23" pos:end="193:24"><expr pos:start="193:23" pos:end="193:24"><name pos:start="193:23" pos:end="193:24">t0</name></expr></argument>, <argument pos:start="193:27" pos:end="193:28"><expr pos:start="193:27" pos:end="193:28"><name pos:start="193:27" pos:end="193:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:20"><expr pos:start="195:9" pos:end="195:19"><name pos:start="195:9" pos:end="195:11">opn</name> <operator pos:start="195:13" pos:end="195:13">=</operator> <literal type="string" pos:start="195:15" pos:end="195:19">"lbu"</literal></expr>;</expr_stmt>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    <case pos:start="199:5" pos:end="199:17">case <expr pos:start="199:10" pos:end="199:16"><name pos:start="199:10" pos:end="199:16">OPC_LWL</name></expr>:</case>

        <expr_stmt pos:start="201:9" pos:end="201:31"><expr pos:start="201:9" pos:end="201:30"><call pos:start="201:9" pos:end="201:30"><name pos:start="201:9" pos:end="201:22">save_cpu_state</name><argument_list pos:start="201:23" pos:end="201:30">(<argument pos:start="201:24" pos:end="201:26"><expr pos:start="201:24" pos:end="201:26"><name pos:start="201:24" pos:end="201:26">ctx</name></expr></argument>, <argument pos:start="201:29" pos:end="201:29"><expr pos:start="201:29" pos:end="201:29"><literal type="number" pos:start="201:29" pos:end="201:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:29"><expr pos:start="203:9" pos:end="203:28"><call pos:start="203:9" pos:end="203:28"><name pos:start="203:9" pos:end="203:20">gen_load_gpr</name><argument_list pos:start="203:21" pos:end="203:28">(<argument pos:start="203:22" pos:end="203:23"><expr pos:start="203:22" pos:end="203:23"><name pos:start="203:22" pos:end="203:23">t1</name></expr></argument>, <argument pos:start="203:26" pos:end="203:27"><expr pos:start="203:26" pos:end="203:27"><name pos:start="203:26" pos:end="203:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:53"><expr pos:start="205:9" pos:end="205:52"><call pos:start="205:9" pos:end="205:52"><name pos:start="205:9" pos:end="205:21">gen_helper_3i</name><argument_list pos:start="205:22" pos:end="205:52">(<argument pos:start="205:23" pos:end="205:25"><expr pos:start="205:23" pos:end="205:25"><name pos:start="205:23" pos:end="205:25">lwl</name></expr></argument>, <argument pos:start="205:28" pos:end="205:29"><expr pos:start="205:28" pos:end="205:29"><name pos:start="205:28" pos:end="205:29">t1</name></expr></argument>, <argument pos:start="205:32" pos:end="205:33"><expr pos:start="205:32" pos:end="205:33"><name pos:start="205:32" pos:end="205:33">t1</name></expr></argument>, <argument pos:start="205:36" pos:end="205:37"><expr pos:start="205:36" pos:end="205:37"><name pos:start="205:36" pos:end="205:37">t0</name></expr></argument>, <argument pos:start="205:40" pos:end="205:51"><expr pos:start="205:40" pos:end="205:51"><name pos:start="205:40" pos:end="205:51"><name pos:start="205:40" pos:end="205:42">ctx</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:51">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:30"><expr pos:start="207:9" pos:end="207:29"><call pos:start="207:9" pos:end="207:29"><name pos:start="207:9" pos:end="207:21">gen_store_gpr</name><argument_list pos:start="207:22" pos:end="207:29">(<argument pos:start="207:23" pos:end="207:24"><expr pos:start="207:23" pos:end="207:24"><name pos:start="207:23" pos:end="207:24">t1</name></expr></argument>, <argument pos:start="207:27" pos:end="207:28"><expr pos:start="207:27" pos:end="207:28"><name pos:start="207:27" pos:end="207:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:20"><expr pos:start="209:9" pos:end="209:19"><name pos:start="209:9" pos:end="209:11">opn</name> <operator pos:start="209:13" pos:end="209:13">=</operator> <literal type="string" pos:start="209:15" pos:end="209:19">"lwl"</literal></expr>;</expr_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    <case pos:start="213:5" pos:end="213:17">case <expr pos:start="213:10" pos:end="213:16"><name pos:start="213:10" pos:end="213:16">OPC_LWR</name></expr>:</case>

        <expr_stmt pos:start="215:9" pos:end="215:31"><expr pos:start="215:9" pos:end="215:30"><call pos:start="215:9" pos:end="215:30"><name pos:start="215:9" pos:end="215:22">save_cpu_state</name><argument_list pos:start="215:23" pos:end="215:30">(<argument pos:start="215:24" pos:end="215:26"><expr pos:start="215:24" pos:end="215:26"><name pos:start="215:24" pos:end="215:26">ctx</name></expr></argument>, <argument pos:start="215:29" pos:end="215:29"><expr pos:start="215:29" pos:end="215:29"><literal type="number" pos:start="215:29" pos:end="215:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:29"><expr pos:start="217:9" pos:end="217:28"><call pos:start="217:9" pos:end="217:28"><name pos:start="217:9" pos:end="217:20">gen_load_gpr</name><argument_list pos:start="217:21" pos:end="217:28">(<argument pos:start="217:22" pos:end="217:23"><expr pos:start="217:22" pos:end="217:23"><name pos:start="217:22" pos:end="217:23">t1</name></expr></argument>, <argument pos:start="217:26" pos:end="217:27"><expr pos:start="217:26" pos:end="217:27"><name pos:start="217:26" pos:end="217:27">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:53"><expr pos:start="219:9" pos:end="219:52"><call pos:start="219:9" pos:end="219:52"><name pos:start="219:9" pos:end="219:21">gen_helper_3i</name><argument_list pos:start="219:22" pos:end="219:52">(<argument pos:start="219:23" pos:end="219:25"><expr pos:start="219:23" pos:end="219:25"><name pos:start="219:23" pos:end="219:25">lwr</name></expr></argument>, <argument pos:start="219:28" pos:end="219:29"><expr pos:start="219:28" pos:end="219:29"><name pos:start="219:28" pos:end="219:29">t1</name></expr></argument>, <argument pos:start="219:32" pos:end="219:33"><expr pos:start="219:32" pos:end="219:33"><name pos:start="219:32" pos:end="219:33">t1</name></expr></argument>, <argument pos:start="219:36" pos:end="219:37"><expr pos:start="219:36" pos:end="219:37"><name pos:start="219:36" pos:end="219:37">t0</name></expr></argument>, <argument pos:start="219:40" pos:end="219:51"><expr pos:start="219:40" pos:end="219:51"><name pos:start="219:40" pos:end="219:51"><name pos:start="219:40" pos:end="219:42">ctx</name><operator pos:start="219:43" pos:end="219:44">-&gt;</operator><name pos:start="219:45" pos:end="219:51">mem_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:30"><expr pos:start="221:9" pos:end="221:29"><call pos:start="221:9" pos:end="221:29"><name pos:start="221:9" pos:end="221:21">gen_store_gpr</name><argument_list pos:start="221:22" pos:end="221:29">(<argument pos:start="221:23" pos:end="221:24"><expr pos:start="221:23" pos:end="221:24"><name pos:start="221:23" pos:end="221:24">t1</name></expr></argument>, <argument pos:start="221:27" pos:end="221:28"><expr pos:start="221:27" pos:end="221:28"><name pos:start="221:27" pos:end="221:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:20"><expr pos:start="223:9" pos:end="223:19"><name pos:start="223:9" pos:end="223:11">opn</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <literal type="string" pos:start="223:15" pos:end="223:19">"lwr"</literal></expr>;</expr_stmt>

        <break pos:start="225:9" pos:end="225:14">break;</break>

    <case pos:start="227:5" pos:end="227:16">case <expr pos:start="227:10" pos:end="227:15"><name pos:start="227:10" pos:end="227:15">OPC_LL</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:31"><expr pos:start="229:9" pos:end="229:30"><call pos:start="229:9" pos:end="229:30"><name pos:start="229:9" pos:end="229:22">save_cpu_state</name><argument_list pos:start="229:23" pos:end="229:30">(<argument pos:start="229:24" pos:end="229:26"><expr pos:start="229:24" pos:end="229:26"><name pos:start="229:24" pos:end="229:26">ctx</name></expr></argument>, <argument pos:start="229:29" pos:end="229:29"><expr pos:start="229:29" pos:end="229:29"><literal type="number" pos:start="229:29" pos:end="229:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:30"><expr pos:start="231:9" pos:end="231:29"><call pos:start="231:9" pos:end="231:29"><name pos:start="231:9" pos:end="231:16">op_ld_ll</name><argument_list pos:start="231:17" pos:end="231:29">(<argument pos:start="231:18" pos:end="231:19"><expr pos:start="231:18" pos:end="231:19"><name pos:start="231:18" pos:end="231:19">t0</name></expr></argument>, <argument pos:start="231:22" pos:end="231:23"><expr pos:start="231:22" pos:end="231:23"><name pos:start="231:22" pos:end="231:23">t0</name></expr></argument>, <argument pos:start="231:26" pos:end="231:28"><expr pos:start="231:26" pos:end="231:28"><name pos:start="231:26" pos:end="231:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:30"><expr pos:start="233:9" pos:end="233:29"><call pos:start="233:9" pos:end="233:29"><name pos:start="233:9" pos:end="233:21">gen_store_gpr</name><argument_list pos:start="233:22" pos:end="233:29">(<argument pos:start="233:23" pos:end="233:24"><expr pos:start="233:23" pos:end="233:24"><name pos:start="233:23" pos:end="233:24">t0</name></expr></argument>, <argument pos:start="233:27" pos:end="233:28"><expr pos:start="233:27" pos:end="233:28"><name pos:start="233:27" pos:end="233:28">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:19"><expr pos:start="235:9" pos:end="235:18"><name pos:start="235:9" pos:end="235:11">opn</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <literal type="string" pos:start="235:15" pos:end="235:18">"ll"</literal></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="241:5" pos:end="241:14"><expr pos:start="241:5" pos:end="241:13"><operator pos:start="241:5" pos:end="241:5">(</operator><name pos:start="241:6" pos:end="241:9">void</name><operator pos:start="241:10" pos:end="241:10">)</operator><name pos:start="241:11" pos:end="241:13">opn</name></expr>;</expr_stmt> <comment type="block" pos:start="241:16" pos:end="241:45">/* avoid a compiler warning */</comment>

    <expr_stmt pos:start="243:5" pos:end="243:75"><expr pos:start="243:5" pos:end="243:74"><call pos:start="243:5" pos:end="243:74"><name pos:start="243:5" pos:end="243:14">MIPS_DEBUG</name><argument_list pos:start="243:15" pos:end="243:74">(<argument pos:start="243:16" pos:end="243:30"><expr pos:start="243:16" pos:end="243:30"><literal type="string" pos:start="243:16" pos:end="243:30">"%s %s, %d(%s)"</literal></expr></argument>, <argument pos:start="243:33" pos:end="243:35"><expr pos:start="243:33" pos:end="243:35"><name pos:start="243:33" pos:end="243:35">opn</name></expr></argument>, <argument pos:start="243:38" pos:end="243:49"><expr pos:start="243:38" pos:end="243:49"><name pos:start="243:38" pos:end="243:49"><name pos:start="243:38" pos:end="243:45">regnames</name><index pos:start="243:46" pos:end="243:49">[<expr pos:start="243:47" pos:end="243:48"><name pos:start="243:47" pos:end="243:48">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="243:52" pos:end="243:57"><expr pos:start="243:52" pos:end="243:57"><name pos:start="243:52" pos:end="243:57">offset</name></expr></argument>, <argument pos:start="243:60" pos:end="243:73"><expr pos:start="243:60" pos:end="243:73"><name pos:start="243:60" pos:end="243:73"><name pos:start="243:60" pos:end="243:67">regnames</name><index pos:start="243:68" pos:end="243:73">[<expr pos:start="243:69" pos:end="243:72"><name pos:start="243:69" pos:end="243:72">base</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:22"><expr pos:start="245:5" pos:end="245:21"><call pos:start="245:5" pos:end="245:21"><name pos:start="245:5" pos:end="245:17">tcg_temp_free</name><argument_list pos:start="245:18" pos:end="245:21">(<argument pos:start="245:19" pos:end="245:20"><expr pos:start="245:19" pos:end="245:20"><name pos:start="245:19" pos:end="245:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:22"><expr pos:start="247:5" pos:end="247:21"><call pos:start="247:5" pos:end="247:21"><name pos:start="247:5" pos:end="247:17">tcg_temp_free</name><argument_list pos:start="247:18" pos:end="247:21">(<argument pos:start="247:19" pos:end="247:20"><expr pos:start="247:19" pos:end="247:20"><name pos:start="247:19" pos:end="247:20">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
