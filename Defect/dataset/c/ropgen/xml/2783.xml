<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2783.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">AVStream</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type> <name pos:start="1:19" pos:end="1:34">parse_media_type</name><parameter_list pos:start="1:35" pos:end="5:68">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:63">AVStream</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">st</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:76"><decl pos:start="1:70" pos:end="1:76"><type pos:start="1:70" pos:end="1:76"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:76">sid</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:46">ff_asf_guid</name></type> <name pos:start="3:48" pos:end="3:56">mediatype</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:77"><decl pos:start="3:59" pos:end="3:77"><type pos:start="3:59" pos:end="3:77"><name pos:start="3:59" pos:end="3:69">ff_asf_guid</name></type> <name pos:start="3:71" pos:end="3:77">subtype</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:57"><decl pos:start="5:36" pos:end="5:57"><type pos:start="5:36" pos:end="5:57"><name pos:start="5:36" pos:end="5:46">ff_asf_guid</name></type> <name pos:start="5:48" pos:end="5:57">formattype</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:67"><decl pos:start="5:60" pos:end="5:67"><type pos:start="5:60" pos:end="5:67"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:67">size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="215:1">{<block_content pos:start="9:5" pos:end="213:16">

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">WtvContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">wtv</name> <init pos:start="9:21" pos:end="9:34">= <expr pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:34"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:29">= <expr pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:29"><name pos:start="11:23" pos:end="11:25">wtv</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="201:5"><if pos:start="13:5" pos:end="51:5">if <condition pos:start="13:8" pos:end="15:60">(<expr pos:start="13:9" pos:end="15:59"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:62"><name pos:start="13:10" pos:end="13:19">ff_guidcmp</name><argument_list pos:start="13:20" pos:end="13:62">(<argument pos:start="13:21" pos:end="13:27"><expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:27">subtype</name></expr></argument>, <argument pos:start="13:30" pos:end="13:61"><expr pos:start="13:30" pos:end="13:61"><name pos:start="13:30" pos:end="13:61">mediasubtype_cpfilters_processed</name></expr></argument>)</argument_list></call> <operator pos:start="13:64" pos:end="13:65">&amp;&amp;</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:59"><name pos:start="15:10" pos:end="15:19">ff_guidcmp</name><argument_list pos:start="15:20" pos:end="15:59">(<argument pos:start="15:21" pos:end="15:30"><expr pos:start="15:21" pos:end="15:30"><name pos:start="15:21" pos:end="15:30">formattype</name></expr></argument>, <argument pos:start="15:33" pos:end="15:58"><expr pos:start="15:33" pos:end="15:58"><name pos:start="15:33" pos:end="15:58">format_cpfilters_processed</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:62" pos:end="51:5">{<block_content pos:start="17:9" pos:end="49:18">

        <decl_stmt pos:start="17:9" pos:end="17:35"><decl pos:start="17:9" pos:end="17:34"><type pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:19">ff_asf_guid</name></type> <name pos:start="17:21" pos:end="17:34">actual_subtype</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:38"><decl pos:start="19:9" pos:end="19:37"><type pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:19">ff_asf_guid</name></type> <name pos:start="19:21" pos:end="19:37">actual_formattype</name></decl>;</decl_stmt>



        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">&lt;</operator> <literal type="number" pos:start="23:20" pos:end="23:21">32</literal></expr>)</condition> <block pos:start="23:24" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:24">

            <expr_stmt pos:start="25:13" pos:end="25:72"><expr pos:start="25:13" pos:end="25:71"><call pos:start="25:13" pos:end="25:71"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:71">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="25:39" pos:end="25:70"><expr pos:start="25:39" pos:end="25:70"><literal type="string" pos:start="25:39" pos:end="25:70">"format buffer size underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:32"><expr pos:start="27:13" pos:end="27:31"><call pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:21">avio_skip</name><argument_list pos:start="27:22" pos:end="27:31">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">pb</name></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:24">return <expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:33"><expr pos:start="35:9" pos:end="35:32"><call pos:start="35:9" pos:end="35:32"><name pos:start="35:9" pos:end="35:17">avio_skip</name><argument_list pos:start="35:18" pos:end="35:32">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:31"><expr pos:start="35:23" pos:end="35:31"><name pos:start="35:23" pos:end="35:26">size</name> <operator pos:start="35:28" pos:end="35:28">-</operator> <literal type="number" pos:start="35:30" pos:end="35:31">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:19">ff_get_guid</name><argument_list pos:start="37:20" pos:end="37:40">(<argument pos:start="37:21" pos:end="37:22"><expr pos:start="37:21" pos:end="37:22"><name pos:start="37:21" pos:end="37:22">pb</name></expr></argument>, <argument pos:start="37:25" pos:end="37:39"><expr pos:start="37:25" pos:end="37:39"><operator pos:start="37:25" pos:end="37:25">&amp;</operator><name pos:start="37:26" pos:end="37:39">actual_subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:19">ff_get_guid</name><argument_list pos:start="39:20" pos:end="39:43">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">pb</name></expr></argument>, <argument pos:start="39:25" pos:end="39:42"><expr pos:start="39:25" pos:end="39:42"><operator pos:start="39:25" pos:end="39:25">&amp;</operator><name pos:start="39:26" pos:end="39:42">actual_formattype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><call pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:17">avio_seek</name><argument_list pos:start="41:18" pos:end="41:38">(<argument pos:start="41:19" pos:end="41:20"><expr pos:start="41:19" pos:end="41:20"><name pos:start="41:19" pos:end="41:20">pb</name></expr></argument>, <argument pos:start="41:23" pos:end="41:27"><expr pos:start="41:23" pos:end="41:27"><operator pos:start="41:23" pos:end="41:23">-</operator><name pos:start="41:24" pos:end="41:27">size</name></expr></argument>, <argument pos:start="41:30" pos:end="41:37"><expr pos:start="41:30" pos:end="41:37"><name pos:start="41:30" pos:end="41:37">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:99"><expr pos:start="45:9" pos:end="45:98"><name pos:start="45:9" pos:end="45:10">st</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:98"><name pos:start="45:14" pos:end="45:29">parse_media_type</name><argument_list pos:start="45:30" pos:end="45:98">(<argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><name pos:start="45:31" pos:end="45:31">s</name></expr></argument>, <argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">st</name></expr></argument>, <argument pos:start="45:38" pos:end="45:40"><expr pos:start="45:38" pos:end="45:40"><name pos:start="45:38" pos:end="45:40">sid</name></expr></argument>, <argument pos:start="45:43" pos:end="45:51"><expr pos:start="45:43" pos:end="45:51"><name pos:start="45:43" pos:end="45:51">mediatype</name></expr></argument>, <argument pos:start="45:54" pos:end="45:67"><expr pos:start="45:54" pos:end="45:67"><name pos:start="45:54" pos:end="45:67">actual_subtype</name></expr></argument>, <argument pos:start="45:70" pos:end="45:86"><expr pos:start="45:70" pos:end="45:86"><name pos:start="45:70" pos:end="45:86">actual_formattype</name></expr></argument>, <argument pos:start="45:89" pos:end="45:97"><expr pos:start="45:89" pos:end="45:97"><name pos:start="45:89" pos:end="45:92">size</name> <operator pos:start="45:94" pos:end="45:94">-</operator> <literal type="number" pos:start="45:96" pos:end="45:97">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><call pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:17">avio_skip</name><argument_list pos:start="47:18" pos:end="47:25">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">pb</name></expr></argument>, <argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><literal type="number" pos:start="47:23" pos:end="47:24">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><name pos:start="49:16" pos:end="49:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="101:5">else if <condition pos:start="51:15" pos:end="51:55">(<expr pos:start="51:16" pos:end="51:54"><operator pos:start="51:16" pos:end="51:16">!</operator><call pos:start="51:17" pos:end="51:54"><name pos:start="51:17" pos:end="51:26">ff_guidcmp</name><argument_list pos:start="51:27" pos:end="51:54">(<argument pos:start="51:28" pos:end="51:36"><expr pos:start="51:28" pos:end="51:36"><name pos:start="51:28" pos:end="51:36">mediatype</name></expr></argument>, <argument pos:start="51:39" pos:end="51:53"><expr pos:start="51:39" pos:end="51:53"><name pos:start="51:39" pos:end="51:53">mediatype_audio</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:57" pos:end="101:5">{<block_content pos:start="53:9" pos:end="99:18">

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:10">st</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:55"><name pos:start="53:14" pos:end="53:23">new_stream</name><argument_list pos:start="53:24" pos:end="53:55">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">s</name></expr></argument>, <argument pos:start="53:28" pos:end="53:29"><expr pos:start="53:28" pos:end="53:29"><name pos:start="53:28" pos:end="53:29">st</name></expr></argument>, <argument pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:34">sid</name></expr></argument>, <argument pos:start="53:37" pos:end="53:54"><expr pos:start="53:37" pos:end="53:54"><name pos:start="53:37" pos:end="53:54">AVMEDIA_TYPE_AUDIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="57:24"><if pos:start="55:9" pos:end="57:24">if <condition pos:start="55:12" pos:end="55:16">(<expr pos:start="55:13" pos:end="55:15"><operator pos:start="55:13" pos:end="55:13">!</operator><name pos:start="55:14" pos:end="55:15">st</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:24"><block_content pos:start="57:13" pos:end="57:24">

            <return pos:start="57:13" pos:end="57:24">return <expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="71:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:57">(<expr pos:start="59:13" pos:end="59:56"><operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:56"><name pos:start="59:14" pos:end="59:23">ff_guidcmp</name><argument_list pos:start="59:24" pos:end="59:56">(<argument pos:start="59:25" pos:end="59:34"><expr pos:start="59:25" pos:end="59:34"><name pos:start="59:25" pos:end="59:34">formattype</name></expr></argument>, <argument pos:start="59:37" pos:end="59:55"><expr pos:start="59:37" pos:end="59:55"><name pos:start="59:37" pos:end="59:55">format_waveformatex</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:59" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:51">

            <expr_stmt pos:start="61:13" pos:end="61:51"><expr pos:start="61:13" pos:end="61:50"><call pos:start="61:13" pos:end="61:50"><name pos:start="61:13" pos:end="61:29">ff_get_wav_header</name><argument_list pos:start="61:30" pos:end="61:50">(<argument pos:start="61:31" pos:end="61:32"><expr pos:start="61:31" pos:end="61:32"><name pos:start="61:31" pos:end="61:32">pb</name></expr></argument>, <argument pos:start="61:35" pos:end="61:43"><expr pos:start="61:35" pos:end="61:43"><name pos:start="61:35" pos:end="61:43"><name pos:start="61:35" pos:end="61:36">st</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:43">codec</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:49"><expr pos:start="61:46" pos:end="61:49"><name pos:start="61:46" pos:end="61:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="71:9">else <block pos:start="63:16" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:32">

            <if_stmt pos:start="65:13" pos:end="67:99"><if pos:start="65:13" pos:end="67:99">if <condition pos:start="65:16" pos:end="65:52">(<expr pos:start="65:17" pos:end="65:51"><call pos:start="65:17" pos:end="65:51"><name pos:start="65:17" pos:end="65:26">ff_guidcmp</name><argument_list pos:start="65:27" pos:end="65:51">(<argument pos:start="65:28" pos:end="65:37"><expr pos:start="65:28" pos:end="65:37"><name pos:start="65:28" pos:end="65:37">formattype</name></expr></argument>, <argument pos:start="65:40" pos:end="65:50"><expr pos:start="65:40" pos:end="65:50"><name pos:start="65:40" pos:end="65:50">format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:99"><block_content pos:start="67:17" pos:end="67:99">

                <expr_stmt pos:start="67:17" pos:end="67:99"><expr pos:start="67:17" pos:end="67:98"><call pos:start="67:17" pos:end="67:98"><name pos:start="67:17" pos:end="67:22">av_log</name><argument_list pos:start="67:23" pos:end="67:98">(<argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">s</name></expr></argument>, <argument pos:start="67:27" pos:end="67:40"><expr pos:start="67:27" pos:end="67:40"><name pos:start="67:27" pos:end="67:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="67:43" pos:end="67:75"><expr pos:start="67:43" pos:end="67:75"><literal type="string" pos:start="67:43" pos:end="67:63">"unknown formattype:"</literal><name pos:start="67:64" pos:end="67:71">PRI_GUID</name><literal type="string" pos:start="67:72" pos:end="67:75">"\n"</literal></expr></argument>, <argument pos:start="67:78" pos:end="67:97"><expr pos:start="67:78" pos:end="67:97"><call pos:start="67:78" pos:end="67:97"><name pos:start="67:78" pos:end="67:85">ARG_GUID</name><argument_list pos:start="67:86" pos:end="67:97">(<argument pos:start="67:87" pos:end="67:96"><expr pos:start="67:87" pos:end="67:96"><name pos:start="67:87" pos:end="67:96">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><call pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:21">avio_skip</name><argument_list pos:start="69:22" pos:end="69:31">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">pb</name></expr></argument>, <argument pos:start="69:27" pos:end="69:30"><expr pos:start="69:27" pos:end="69:30"><name pos:start="69:27" pos:end="69:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="75:9" pos:end="97:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:80">(<expr pos:start="75:13" pos:end="75:79"><operator pos:start="75:13" pos:end="75:13">!</operator><macro pos:start="75:14" pos:end="75:79"><name pos:start="75:14" pos:end="75:19">memcmp</name><argument_list pos:start="75:20" pos:end="75:79">(<argument pos:start="75:21" pos:end="75:31">subtype + <literal type="number" pos:start="75:31" pos:end="75:31">4</literal></argument>, <argument pos:start="75:34" pos:end="75:74">(const uint8_t[]){MEDIASUBTYPE_BASE_GUID}</argument>, <argument pos:start="75:77" pos:end="75:78"><literal type="number" pos:start="75:77" pos:end="75:78">12</literal></argument>)</argument_list></macro></expr>)</condition> <block pos:start="75:82" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:106">

            <expr_stmt pos:start="77:13" pos:end="77:106"><expr pos:start="77:13" pos:end="77:105"><name pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:14">st</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:21">codec</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:31">codec_id</name></name> <operator pos:start="77:33" pos:end="77:33">=</operator> <call pos:start="77:35" pos:end="77:105"><name pos:start="77:35" pos:end="77:53">ff_wav_codec_get_id</name><argument_list pos:start="77:54" pos:end="77:105">(<argument pos:start="77:55" pos:end="77:70"><expr pos:start="77:55" pos:end="77:70"><call pos:start="77:55" pos:end="77:70"><name pos:start="77:55" pos:end="77:61">AV_RL32</name><argument_list pos:start="77:62" pos:end="77:70">(<argument pos:start="77:63" pos:end="77:69"><expr pos:start="77:63" pos:end="77:69"><name pos:start="77:63" pos:end="77:69">subtype</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:73" pos:end="77:104"><expr pos:start="77:73" pos:end="77:104"><name pos:start="77:73" pos:end="77:104"><name pos:start="77:73" pos:end="77:74">st</name><operator pos:start="77:75" pos:end="77:76">-&gt;</operator><name pos:start="77:77" pos:end="77:81">codec</name><operator pos:start="77:82" pos:end="77:83">-&gt;</operator><name pos:start="77:84" pos:end="77:104">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="79:11" pos:end="89:9">else if <condition pos:start="79:19" pos:end="79:67">(<expr pos:start="79:20" pos:end="79:66"><operator pos:start="79:20" pos:end="79:20">!</operator><call pos:start="79:21" pos:end="79:66"><name pos:start="79:21" pos:end="79:30">ff_guidcmp</name><argument_list pos:start="79:31" pos:end="79:66">(<argument pos:start="79:32" pos:end="79:38"><expr pos:start="79:32" pos:end="79:38"><name pos:start="79:32" pos:end="79:38">subtype</name></expr></argument>, <argument pos:start="79:41" pos:end="79:65"><expr pos:start="79:41" pos:end="79:65"><name pos:start="79:41" pos:end="79:65">mediasubtype_mpeg1payload</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:69" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:75">

            <if_stmt pos:start="81:13" pos:end="87:75"><if pos:start="81:13" pos:end="83:44">if <condition pos:start="81:16" pos:end="81:72">(<expr pos:start="81:17" pos:end="81:71"><name pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">codec</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:36">extradata</name></name> <operator pos:start="81:38" pos:end="81:39">&amp;&amp;</operator> <name pos:start="81:41" pos:end="81:65"><name pos:start="81:41" pos:end="81:42">st</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">codec</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:65">extradata_size</name></name> <operator pos:start="81:67" pos:end="81:68">&gt;=</operator> <literal type="number" pos:start="81:70" pos:end="81:71">22</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:44"><block_content pos:start="83:17" pos:end="83:44">

                <expr_stmt pos:start="83:17" pos:end="83:44"><expr pos:start="83:17" pos:end="83:43"><call pos:start="83:17" pos:end="83:43"><name pos:start="83:17" pos:end="83:39">parse_mpeg1waveformatex</name><argument_list pos:start="83:40" pos:end="83:43">(<argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="85:13" pos:end="87:75">else<block type="pseudo" pos:start="87:17" pos:end="87:75"><block_content pos:start="87:17" pos:end="87:75">

                <expr_stmt pos:start="87:17" pos:end="87:75"><expr pos:start="87:17" pos:end="87:74"><call pos:start="87:17" pos:end="87:74"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="87:74">(<argument pos:start="87:24" pos:end="87:24"><expr pos:start="87:24" pos:end="87:24"><name pos:start="87:24" pos:end="87:24">s</name></expr></argument>, <argument pos:start="87:27" pos:end="87:40"><expr pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="87:43" pos:end="87:73"><expr pos:start="87:43" pos:end="87:73"><literal type="string" pos:start="87:43" pos:end="87:73">"MPEG1WAVEFORMATEX underflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="97:9">else <block pos:start="89:16" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:93">

            <expr_stmt pos:start="91:13" pos:end="91:77"><expr pos:start="91:13" pos:end="91:76"><name pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:14">st</name><operator pos:start="91:15" pos:end="91:16">-&gt;</operator><name pos:start="91:17" pos:end="91:21">codec</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:31">codec_id</name></name> <operator pos:start="91:33" pos:end="91:33">=</operator> <call pos:start="91:35" pos:end="91:76"><name pos:start="91:35" pos:end="91:54">ff_codec_guid_get_id</name><argument_list pos:start="91:55" pos:end="91:76">(<argument pos:start="91:56" pos:end="91:66"><expr pos:start="91:56" pos:end="91:66"><name pos:start="91:56" pos:end="91:66">audio_guids</name></expr></argument>, <argument pos:start="91:69" pos:end="91:75"><expr pos:start="91:69" pos:end="91:75"><name pos:start="91:69" pos:end="91:75">subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="95:93"><if pos:start="93:13" pos:end="95:93">if <condition pos:start="93:16" pos:end="93:53">(<expr pos:start="93:17" pos:end="93:52"><name pos:start="93:17" pos:end="93:35"><name pos:start="93:17" pos:end="93:18">st</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:25">codec</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:35">codec_id</name></name> <operator pos:start="93:37" pos:end="93:38">==</operator> <name pos:start="93:40" pos:end="93:52">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:93"><block_content pos:start="95:17" pos:end="95:93">

                <expr_stmt pos:start="95:17" pos:end="95:93"><expr pos:start="95:17" pos:end="95:92"><call pos:start="95:17" pos:end="95:92"><name pos:start="95:17" pos:end="95:22">av_log</name><argument_list pos:start="95:23" pos:end="95:92">(<argument pos:start="95:24" pos:end="95:24"><expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">s</name></expr></argument>, <argument pos:start="95:27" pos:end="95:40"><expr pos:start="95:27" pos:end="95:40"><name pos:start="95:27" pos:end="95:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="95:43" pos:end="95:72"><expr pos:start="95:43" pos:end="95:72"><literal type="string" pos:start="95:43" pos:end="95:60">"unknown subtype:"</literal><name pos:start="95:61" pos:end="95:68">PRI_GUID</name><literal type="string" pos:start="95:69" pos:end="95:72">"\n"</literal></expr></argument>, <argument pos:start="95:75" pos:end="95:91"><expr pos:start="95:75" pos:end="95:91"><call pos:start="95:75" pos:end="95:91"><name pos:start="95:75" pos:end="95:82">ARG_GUID</name><argument_list pos:start="95:83" pos:end="95:91">(<argument pos:start="95:84" pos:end="95:90"><expr pos:start="95:84" pos:end="95:90"><name pos:start="95:84" pos:end="95:90">subtype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="99:9" pos:end="99:18">return <expr pos:start="99:16" pos:end="99:17"><name pos:start="99:16" pos:end="99:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="101:7" pos:end="149:5">else if <condition pos:start="101:15" pos:end="101:55">(<expr pos:start="101:16" pos:end="101:54"><operator pos:start="101:16" pos:end="101:16">!</operator><call pos:start="101:17" pos:end="101:54"><name pos:start="101:17" pos:end="101:26">ff_guidcmp</name><argument_list pos:start="101:27" pos:end="101:54">(<argument pos:start="101:28" pos:end="101:36"><expr pos:start="101:28" pos:end="101:36"><name pos:start="101:28" pos:end="101:36">mediatype</name></expr></argument>, <argument pos:start="101:39" pos:end="101:53"><expr pos:start="101:39" pos:end="101:53"><name pos:start="101:39" pos:end="101:53">mediatype_video</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:57" pos:end="149:5">{<block_content pos:start="103:9" pos:end="147:18">

        <expr_stmt pos:start="103:9" pos:end="103:56"><expr pos:start="103:9" pos:end="103:55"><name pos:start="103:9" pos:end="103:10">st</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <call pos:start="103:14" pos:end="103:55"><name pos:start="103:14" pos:end="103:23">new_stream</name><argument_list pos:start="103:24" pos:end="103:55">(<argument pos:start="103:25" pos:end="103:25"><expr pos:start="103:25" pos:end="103:25"><name pos:start="103:25" pos:end="103:25">s</name></expr></argument>, <argument pos:start="103:28" pos:end="103:29"><expr pos:start="103:28" pos:end="103:29"><name pos:start="103:28" pos:end="103:29">st</name></expr></argument>, <argument pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:34">sid</name></expr></argument>, <argument pos:start="103:37" pos:end="103:54"><expr pos:start="103:37" pos:end="103:54"><name pos:start="103:37" pos:end="103:54">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="107:24"><if pos:start="105:9" pos:end="107:24">if <condition pos:start="105:12" pos:end="105:16">(<expr pos:start="105:13" pos:end="105:15"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:15">st</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:24"><block_content pos:start="107:13" pos:end="107:24">

            <return pos:start="107:13" pos:end="107:24">return <expr pos:start="107:20" pos:end="107:23"><name pos:start="107:20" pos:end="107:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="129:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:55">(<expr pos:start="109:13" pos:end="109:54"><operator pos:start="109:13" pos:end="109:13">!</operator><call pos:start="109:14" pos:end="109:54"><name pos:start="109:14" pos:end="109:23">ff_guidcmp</name><argument_list pos:start="109:24" pos:end="109:54">(<argument pos:start="109:25" pos:end="109:34"><expr pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:34">formattype</name></expr></argument>, <argument pos:start="109:37" pos:end="109:53"><expr pos:start="109:37" pos:end="109:53"><name pos:start="109:37" pos:end="109:53">format_videoinfo2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:57" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:53">

            <decl_stmt pos:start="111:13" pos:end="111:57"><decl pos:start="111:13" pos:end="111:56"><type pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">int</name></type> <name pos:start="111:17" pos:end="111:24">consumed</name> <init pos:start="111:26" pos:end="111:56">= <expr pos:start="111:28" pos:end="111:56"><call pos:start="111:28" pos:end="111:56"><name pos:start="111:28" pos:end="111:49">parse_videoinfoheader2</name><argument_list pos:start="111:50" pos:end="111:56">(<argument pos:start="111:51" pos:end="111:51"><expr pos:start="111:51" pos:end="111:51"><name pos:start="111:51" pos:end="111:51">s</name></expr></argument>, <argument pos:start="111:54" pos:end="111:55"><expr pos:start="111:54" pos:end="111:55"><name pos:start="111:54" pos:end="111:55">st</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:53"><expr pos:start="113:13" pos:end="113:52"><call pos:start="113:13" pos:end="113:52"><name pos:start="113:13" pos:end="113:21">avio_skip</name><argument_list pos:start="113:22" pos:end="113:52">(<argument pos:start="113:23" pos:end="113:24"><expr pos:start="113:23" pos:end="113:24"><name pos:start="113:23" pos:end="113:24">pb</name></expr></argument>, <argument pos:start="113:27" pos:end="113:51"><expr pos:start="113:27" pos:end="113:51"><call pos:start="113:27" pos:end="113:51"><name pos:start="113:27" pos:end="113:31">FFMAX</name><argument_list pos:start="113:32" pos:end="113:51">(<argument pos:start="113:33" pos:end="113:47"><expr pos:start="113:33" pos:end="113:47"><name pos:start="113:33" pos:end="113:36">size</name> <operator pos:start="113:38" pos:end="113:38">-</operator> <name pos:start="113:40" pos:end="113:47">consumed</name></expr></argument>, <argument pos:start="113:50" pos:end="113:50"><expr pos:start="113:50" pos:end="113:50"><literal type="number" pos:start="113:50" pos:end="113:50">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="115:11" pos:end="121:9">else if <condition pos:start="115:19" pos:end="115:63">(<expr pos:start="115:20" pos:end="115:62"><operator pos:start="115:20" pos:end="115:20">!</operator><call pos:start="115:21" pos:end="115:62"><name pos:start="115:21" pos:end="115:30">ff_guidcmp</name><argument_list pos:start="115:31" pos:end="115:62">(<argument pos:start="115:32" pos:end="115:41"><expr pos:start="115:32" pos:end="115:41"><name pos:start="115:32" pos:end="115:41">formattype</name></expr></argument>, <argument pos:start="115:44" pos:end="115:61"><expr pos:start="115:44" pos:end="115:61"><name pos:start="115:44" pos:end="115:61">format_mpeg2_video</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:65" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:53">

            <decl_stmt pos:start="117:13" pos:end="117:57"><decl pos:start="117:13" pos:end="117:56"><type pos:start="117:13" pos:end="117:15"><name pos:start="117:13" pos:end="117:15">int</name></type> <name pos:start="117:17" pos:end="117:24">consumed</name> <init pos:start="117:26" pos:end="117:56">= <expr pos:start="117:28" pos:end="117:56"><call pos:start="117:28" pos:end="117:56"><name pos:start="117:28" pos:end="117:49">parse_videoinfoheader2</name><argument_list pos:start="117:50" pos:end="117:56">(<argument pos:start="117:51" pos:end="117:51"><expr pos:start="117:51" pos:end="117:51"><name pos:start="117:51" pos:end="117:51">s</name></expr></argument>, <argument pos:start="117:54" pos:end="117:55"><expr pos:start="117:54" pos:end="117:55"><name pos:start="117:54" pos:end="117:55">st</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:53"><expr pos:start="119:13" pos:end="119:52"><call pos:start="119:13" pos:end="119:52"><name pos:start="119:13" pos:end="119:21">avio_skip</name><argument_list pos:start="119:22" pos:end="119:52">(<argument pos:start="119:23" pos:end="119:24"><expr pos:start="119:23" pos:end="119:24"><name pos:start="119:23" pos:end="119:24">pb</name></expr></argument>, <argument pos:start="119:27" pos:end="119:51"><expr pos:start="119:27" pos:end="119:51"><call pos:start="119:27" pos:end="119:51"><name pos:start="119:27" pos:end="119:31">FFMAX</name><argument_list pos:start="119:32" pos:end="119:51">(<argument pos:start="119:33" pos:end="119:47"><expr pos:start="119:33" pos:end="119:47"><name pos:start="119:33" pos:end="119:36">size</name> <operator pos:start="119:38" pos:end="119:38">-</operator> <name pos:start="119:40" pos:end="119:47">consumed</name></expr></argument>, <argument pos:start="119:50" pos:end="119:50"><expr pos:start="119:50" pos:end="119:50"><literal type="number" pos:start="119:50" pos:end="119:50">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="121:11" pos:end="129:9">else <block pos:start="121:16" pos:end="129:9">{<block_content pos:start="123:13" pos:end="127:32">

            <if_stmt pos:start="123:13" pos:end="125:99"><if pos:start="123:13" pos:end="125:99">if <condition pos:start="123:16" pos:end="123:52">(<expr pos:start="123:17" pos:end="123:51"><call pos:start="123:17" pos:end="123:51"><name pos:start="123:17" pos:end="123:26">ff_guidcmp</name><argument_list pos:start="123:27" pos:end="123:51">(<argument pos:start="123:28" pos:end="123:37"><expr pos:start="123:28" pos:end="123:37"><name pos:start="123:28" pos:end="123:37">formattype</name></expr></argument>, <argument pos:start="123:40" pos:end="123:50"><expr pos:start="123:40" pos:end="123:50"><name pos:start="123:40" pos:end="123:50">format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:99"><block_content pos:start="125:17" pos:end="125:99">

                <expr_stmt pos:start="125:17" pos:end="125:99"><expr pos:start="125:17" pos:end="125:98"><call pos:start="125:17" pos:end="125:98"><name pos:start="125:17" pos:end="125:22">av_log</name><argument_list pos:start="125:23" pos:end="125:98">(<argument pos:start="125:24" pos:end="125:24"><expr pos:start="125:24" pos:end="125:24"><name pos:start="125:24" pos:end="125:24">s</name></expr></argument>, <argument pos:start="125:27" pos:end="125:40"><expr pos:start="125:27" pos:end="125:40"><name pos:start="125:27" pos:end="125:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="125:43" pos:end="125:75"><expr pos:start="125:43" pos:end="125:75"><literal type="string" pos:start="125:43" pos:end="125:63">"unknown formattype:"</literal><name pos:start="125:64" pos:end="125:71">PRI_GUID</name><literal type="string" pos:start="125:72" pos:end="125:75">"\n"</literal></expr></argument>, <argument pos:start="125:78" pos:end="125:97"><expr pos:start="125:78" pos:end="125:97"><call pos:start="125:78" pos:end="125:97"><name pos:start="125:78" pos:end="125:85">ARG_GUID</name><argument_list pos:start="125:86" pos:end="125:97">(<argument pos:start="125:87" pos:end="125:96"><expr pos:start="125:87" pos:end="125:96"><name pos:start="125:87" pos:end="125:96">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:32"><expr pos:start="127:13" pos:end="127:31"><call pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:21">avio_skip</name><argument_list pos:start="127:22" pos:end="127:31">(<argument pos:start="127:23" pos:end="127:24"><expr pos:start="127:23" pos:end="127:24"><name pos:start="127:23" pos:end="127:24">pb</name></expr></argument>, <argument pos:start="127:27" pos:end="127:30"><expr pos:start="127:27" pos:end="127:30"><name pos:start="127:27" pos:end="127:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="133:9" pos:end="141:9"><if pos:start="133:9" pos:end="137:9">if <condition pos:start="133:12" pos:end="133:80">(<expr pos:start="133:13" pos:end="133:79"><operator pos:start="133:13" pos:end="133:13">!</operator><macro pos:start="133:14" pos:end="133:79"><name pos:start="133:14" pos:end="133:19">memcmp</name><argument_list pos:start="133:20" pos:end="133:79">(<argument pos:start="133:21" pos:end="133:31">subtype + <literal type="number" pos:start="133:31" pos:end="133:31">4</literal></argument>, <argument pos:start="133:34" pos:end="133:74">(const uint8_t[]){MEDIASUBTYPE_BASE_GUID}</argument>, <argument pos:start="133:77" pos:end="133:78"><literal type="number" pos:start="133:77" pos:end="133:78">12</literal></argument>)</argument_list></macro></expr>)</condition> <block pos:start="133:82" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:87">

            <expr_stmt pos:start="135:13" pos:end="135:87"><expr pos:start="135:13" pos:end="135:86"><name pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:14">st</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:21">codec</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:31">codec_id</name></name> <operator pos:start="135:33" pos:end="135:33">=</operator> <call pos:start="135:35" pos:end="135:86"><name pos:start="135:35" pos:end="135:49">ff_codec_get_id</name><argument_list pos:start="135:50" pos:end="135:86">(<argument pos:start="135:51" pos:end="135:67"><expr pos:start="135:51" pos:end="135:67"><name pos:start="135:51" pos:end="135:67">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="135:70" pos:end="135:85"><expr pos:start="135:70" pos:end="135:85"><call pos:start="135:70" pos:end="135:85"><name pos:start="135:70" pos:end="135:76">AV_RL32</name><argument_list pos:start="135:77" pos:end="135:85">(<argument pos:start="135:78" pos:end="135:84"><expr pos:start="135:78" pos:end="135:84"><name pos:start="135:78" pos:end="135:84">subtype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="137:11" pos:end="141:9">else <block pos:start="137:16" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:77">

            <expr_stmt pos:start="139:13" pos:end="139:77"><expr pos:start="139:13" pos:end="139:76"><name pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:14">st</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:21">codec</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:31">codec_id</name></name> <operator pos:start="139:33" pos:end="139:33">=</operator> <call pos:start="139:35" pos:end="139:76"><name pos:start="139:35" pos:end="139:54">ff_codec_guid_get_id</name><argument_list pos:start="139:55" pos:end="139:76">(<argument pos:start="139:56" pos:end="139:66"><expr pos:start="139:56" pos:end="139:66"><name pos:start="139:56" pos:end="139:66">video_guids</name></expr></argument>, <argument pos:start="139:69" pos:end="139:75"><expr pos:start="139:69" pos:end="139:75"><name pos:start="139:69" pos:end="139:75">subtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="143:9" pos:end="145:89"><if pos:start="143:9" pos:end="145:89">if <condition pos:start="143:12" pos:end="143:49">(<expr pos:start="143:13" pos:end="143:48"><name pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:14">st</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">codec</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:31">codec_id</name></name> <operator pos:start="143:33" pos:end="143:34">==</operator> <name pos:start="143:36" pos:end="143:48">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:89"><block_content pos:start="145:13" pos:end="145:89">

            <expr_stmt pos:start="145:13" pos:end="145:89"><expr pos:start="145:13" pos:end="145:88"><call pos:start="145:13" pos:end="145:88"><name pos:start="145:13" pos:end="145:18">av_log</name><argument_list pos:start="145:19" pos:end="145:88">(<argument pos:start="145:20" pos:end="145:20"><expr pos:start="145:20" pos:end="145:20"><name pos:start="145:20" pos:end="145:20">s</name></expr></argument>, <argument pos:start="145:23" pos:end="145:36"><expr pos:start="145:23" pos:end="145:36"><name pos:start="145:23" pos:end="145:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="145:39" pos:end="145:68"><expr pos:start="145:39" pos:end="145:68"><literal type="string" pos:start="145:39" pos:end="145:56">"unknown subtype:"</literal><name pos:start="145:57" pos:end="145:64">PRI_GUID</name><literal type="string" pos:start="145:65" pos:end="145:68">"\n"</literal></expr></argument>, <argument pos:start="145:71" pos:end="145:87"><expr pos:start="145:71" pos:end="145:87"><call pos:start="145:71" pos:end="145:87"><name pos:start="145:71" pos:end="145:78">ARG_GUID</name><argument_list pos:start="145:79" pos:end="145:87">(<argument pos:start="145:80" pos:end="145:86"><expr pos:start="145:80" pos:end="145:86"><name pos:start="145:80" pos:end="145:86">subtype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><name pos:start="147:16" pos:end="147:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="169:5">else if <condition pos:start="149:15" pos:end="151:63">(<expr pos:start="149:16" pos:end="151:62"><operator pos:start="149:16" pos:end="149:16">!</operator><call pos:start="149:17" pos:end="149:58"><name pos:start="149:17" pos:end="149:26">ff_guidcmp</name><argument_list pos:start="149:27" pos:end="149:58">(<argument pos:start="149:28" pos:end="149:36"><expr pos:start="149:28" pos:end="149:36"><name pos:start="149:28" pos:end="149:36">mediatype</name></expr></argument>, <argument pos:start="149:39" pos:end="149:57"><expr pos:start="149:39" pos:end="149:57"><name pos:start="149:39" pos:end="149:57">mediatype_mpeg2_pes</name></expr></argument>)</argument_list></call> <operator pos:start="149:60" pos:end="149:61">&amp;&amp;</operator>

               <operator pos:start="151:16" pos:end="151:16">!</operator><call pos:start="151:17" pos:end="151:62"><name pos:start="151:17" pos:end="151:26">ff_guidcmp</name><argument_list pos:start="151:27" pos:end="151:62">(<argument pos:start="151:28" pos:end="151:34"><expr pos:start="151:28" pos:end="151:34"><name pos:start="151:28" pos:end="151:34">subtype</name></expr></argument>, <argument pos:start="151:37" pos:end="151:61"><expr pos:start="151:37" pos:end="151:61"><name pos:start="151:37" pos:end="151:61">mediasubtype_dvb_subtitle</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:65" pos:end="169:5">{<block_content pos:start="153:9" pos:end="167:18">

        <expr_stmt pos:start="153:9" pos:end="153:59"><expr pos:start="153:9" pos:end="153:58"><name pos:start="153:9" pos:end="153:10">st</name> <operator pos:start="153:12" pos:end="153:12">=</operator> <call pos:start="153:14" pos:end="153:58"><name pos:start="153:14" pos:end="153:23">new_stream</name><argument_list pos:start="153:24" pos:end="153:58">(<argument pos:start="153:25" pos:end="153:25"><expr pos:start="153:25" pos:end="153:25"><name pos:start="153:25" pos:end="153:25">s</name></expr></argument>, <argument pos:start="153:28" pos:end="153:29"><expr pos:start="153:28" pos:end="153:29"><name pos:start="153:28" pos:end="153:29">st</name></expr></argument>, <argument pos:start="153:32" pos:end="153:34"><expr pos:start="153:32" pos:end="153:34"><name pos:start="153:32" pos:end="153:34">sid</name></expr></argument>, <argument pos:start="153:37" pos:end="153:57"><expr pos:start="153:37" pos:end="153:57"><name pos:start="153:37" pos:end="153:57">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:24"><if pos:start="155:9" pos:end="157:24">if <condition pos:start="155:12" pos:end="155:16">(<expr pos:start="155:13" pos:end="155:15"><operator pos:start="155:13" pos:end="155:13">!</operator><name pos:start="155:14" pos:end="155:15">st</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:24"><block_content pos:start="157:13" pos:end="157:24">

            <return pos:start="157:13" pos:end="157:24">return <expr pos:start="157:20" pos:end="157:23"><name pos:start="157:20" pos:end="157:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="161:95"><if pos:start="159:9" pos:end="161:95">if <condition pos:start="159:12" pos:end="159:48">(<expr pos:start="159:13" pos:end="159:47"><call pos:start="159:13" pos:end="159:47"><name pos:start="159:13" pos:end="159:22">ff_guidcmp</name><argument_list pos:start="159:23" pos:end="159:47">(<argument pos:start="159:24" pos:end="159:33"><expr pos:start="159:24" pos:end="159:33"><name pos:start="159:24" pos:end="159:33">formattype</name></expr></argument>, <argument pos:start="159:36" pos:end="159:46"><expr pos:start="159:36" pos:end="159:46"><name pos:start="159:36" pos:end="159:46">format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:95"><block_content pos:start="161:13" pos:end="161:95">

            <expr_stmt pos:start="161:13" pos:end="161:95"><expr pos:start="161:13" pos:end="161:94"><call pos:start="161:13" pos:end="161:94"><name pos:start="161:13" pos:end="161:18">av_log</name><argument_list pos:start="161:19" pos:end="161:94">(<argument pos:start="161:20" pos:end="161:20"><expr pos:start="161:20" pos:end="161:20"><name pos:start="161:20" pos:end="161:20">s</name></expr></argument>, <argument pos:start="161:23" pos:end="161:36"><expr pos:start="161:23" pos:end="161:36"><name pos:start="161:23" pos:end="161:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="161:39" pos:end="161:71"><expr pos:start="161:39" pos:end="161:71"><literal type="string" pos:start="161:39" pos:end="161:59">"unknown formattype:"</literal><name pos:start="161:60" pos:end="161:67">PRI_GUID</name><literal type="string" pos:start="161:68" pos:end="161:71">"\n"</literal></expr></argument>, <argument pos:start="161:74" pos:end="161:93"><expr pos:start="161:74" pos:end="161:93"><call pos:start="161:74" pos:end="161:93"><name pos:start="161:74" pos:end="161:81">ARG_GUID</name><argument_list pos:start="161:82" pos:end="161:93">(<argument pos:start="161:83" pos:end="161:92"><expr pos:start="161:83" pos:end="161:92"><name pos:start="161:83" pos:end="161:92">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:28"><expr pos:start="163:9" pos:end="163:27"><call pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:17">avio_skip</name><argument_list pos:start="163:18" pos:end="163:27">(<argument pos:start="163:19" pos:end="163:20"><expr pos:start="163:19" pos:end="163:20"><name pos:start="163:19" pos:end="163:20">pb</name></expr></argument>, <argument pos:start="163:23" pos:end="163:26"><expr pos:start="163:23" pos:end="163:26"><name pos:start="163:23" pos:end="163:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:52"><expr pos:start="165:9" pos:end="165:51"><name pos:start="165:9" pos:end="165:27"><name pos:start="165:9" pos:end="165:10">st</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:17">codec</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:27">codec_id</name></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <name pos:start="165:31" pos:end="165:51">CODEC_ID_DVB_SUBTITLE</name></expr>;</expr_stmt>

        <return pos:start="167:9" pos:end="167:18">return <expr pos:start="167:16" pos:end="167:17"><name pos:start="167:16" pos:end="167:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="169:7" pos:end="189:5">else if <condition pos:start="169:15" pos:end="171:109">(<expr pos:start="169:16" pos:end="171:108"><operator pos:start="169:16" pos:end="169:16">!</operator><call pos:start="169:17" pos:end="169:60"><name pos:start="169:17" pos:end="169:26">ff_guidcmp</name><argument_list pos:start="169:27" pos:end="169:60">(<argument pos:start="169:28" pos:end="169:36"><expr pos:start="169:28" pos:end="169:36"><name pos:start="169:28" pos:end="169:36">mediatype</name></expr></argument>, <argument pos:start="169:39" pos:end="169:59"><expr pos:start="169:39" pos:end="169:59"><name pos:start="169:39" pos:end="169:59">mediatype_mstvcaption</name></expr></argument>)</argument_list></call> <operator pos:start="169:62" pos:end="169:63">&amp;&amp;</operator>

               <operator pos:start="171:16" pos:end="171:16">(</operator><operator pos:start="171:17" pos:end="171:17">!</operator><call pos:start="171:18" pos:end="171:59"><name pos:start="171:18" pos:end="171:27">ff_guidcmp</name><argument_list pos:start="171:28" pos:end="171:59">(<argument pos:start="171:29" pos:end="171:35"><expr pos:start="171:29" pos:end="171:35"><name pos:start="171:29" pos:end="171:35">subtype</name></expr></argument>, <argument pos:start="171:38" pos:end="171:58"><expr pos:start="171:38" pos:end="171:58"><name pos:start="171:38" pos:end="171:58">mediasubtype_teletext</name></expr></argument>)</argument_list></call> <operator pos:start="171:61" pos:end="171:62">||</operator> <operator pos:start="171:64" pos:end="171:64">!</operator><call pos:start="171:65" pos:end="171:107"><name pos:start="171:65" pos:end="171:74">ff_guidcmp</name><argument_list pos:start="171:75" pos:end="171:107">(<argument pos:start="171:76" pos:end="171:82"><expr pos:start="171:76" pos:end="171:82"><name pos:start="171:76" pos:end="171:82">subtype</name></expr></argument>, <argument pos:start="171:85" pos:end="171:106"><expr pos:start="171:85" pos:end="171:106"><name pos:start="171:85" pos:end="171:106">mediasubtype_dtvccdata</name></expr></argument>)</argument_list></call><operator pos:start="171:108" pos:end="171:108">)</operator></expr>)</condition> <block pos:start="171:111" pos:end="189:5">{<block_content pos:start="173:9" pos:end="187:18">

        <expr_stmt pos:start="173:9" pos:end="173:59"><expr pos:start="173:9" pos:end="173:58"><name pos:start="173:9" pos:end="173:10">st</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <call pos:start="173:14" pos:end="173:58"><name pos:start="173:14" pos:end="173:23">new_stream</name><argument_list pos:start="173:24" pos:end="173:58">(<argument pos:start="173:25" pos:end="173:25"><expr pos:start="173:25" pos:end="173:25"><name pos:start="173:25" pos:end="173:25">s</name></expr></argument>, <argument pos:start="173:28" pos:end="173:29"><expr pos:start="173:28" pos:end="173:29"><name pos:start="173:28" pos:end="173:29">st</name></expr></argument>, <argument pos:start="173:32" pos:end="173:34"><expr pos:start="173:32" pos:end="173:34"><name pos:start="173:32" pos:end="173:34">sid</name></expr></argument>, <argument pos:start="173:37" pos:end="173:57"><expr pos:start="173:37" pos:end="173:57"><name pos:start="173:37" pos:end="173:57">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="177:24"><if pos:start="175:9" pos:end="177:24">if <condition pos:start="175:12" pos:end="175:16">(<expr pos:start="175:13" pos:end="175:15"><operator pos:start="175:13" pos:end="175:13">!</operator><name pos:start="175:14" pos:end="175:15">st</name></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:24"><block_content pos:start="177:13" pos:end="177:24">

            <return pos:start="177:13" pos:end="177:24">return <expr pos:start="177:20" pos:end="177:23"><name pos:start="177:20" pos:end="177:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="181:95"><if pos:start="179:9" pos:end="181:95">if <condition pos:start="179:12" pos:end="179:48">(<expr pos:start="179:13" pos:end="179:47"><call pos:start="179:13" pos:end="179:47"><name pos:start="179:13" pos:end="179:22">ff_guidcmp</name><argument_list pos:start="179:23" pos:end="179:47">(<argument pos:start="179:24" pos:end="179:33"><expr pos:start="179:24" pos:end="179:33"><name pos:start="179:24" pos:end="179:33">formattype</name></expr></argument>, <argument pos:start="179:36" pos:end="179:46"><expr pos:start="179:36" pos:end="179:46"><name pos:start="179:36" pos:end="179:46">format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:95"><block_content pos:start="181:13" pos:end="181:95">

            <expr_stmt pos:start="181:13" pos:end="181:95"><expr pos:start="181:13" pos:end="181:94"><call pos:start="181:13" pos:end="181:94"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="181:94">(<argument pos:start="181:20" pos:end="181:20"><expr pos:start="181:20" pos:end="181:20"><name pos:start="181:20" pos:end="181:20">s</name></expr></argument>, <argument pos:start="181:23" pos:end="181:36"><expr pos:start="181:23" pos:end="181:36"><name pos:start="181:23" pos:end="181:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="181:39" pos:end="181:71"><expr pos:start="181:39" pos:end="181:71"><literal type="string" pos:start="181:39" pos:end="181:59">"unknown formattype:"</literal><name pos:start="181:60" pos:end="181:67">PRI_GUID</name><literal type="string" pos:start="181:68" pos:end="181:71">"\n"</literal></expr></argument>, <argument pos:start="181:74" pos:end="181:93"><expr pos:start="181:74" pos:end="181:93"><call pos:start="181:74" pos:end="181:93"><name pos:start="181:74" pos:end="181:81">ARG_GUID</name><argument_list pos:start="181:82" pos:end="181:93">(<argument pos:start="181:83" pos:end="181:92"><expr pos:start="181:83" pos:end="181:92"><name pos:start="181:83" pos:end="181:92">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:28"><expr pos:start="183:9" pos:end="183:27"><call pos:start="183:9" pos:end="183:27"><name pos:start="183:9" pos:end="183:17">avio_skip</name><argument_list pos:start="183:18" pos:end="183:27">(<argument pos:start="183:19" pos:end="183:20"><expr pos:start="183:19" pos:end="183:20"><name pos:start="183:19" pos:end="183:20">pb</name></expr></argument>, <argument pos:start="183:23" pos:end="183:26"><expr pos:start="183:23" pos:end="183:26"><name pos:start="183:23" pos:end="183:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:54"><expr pos:start="185:9" pos:end="185:53"><name pos:start="185:9" pos:end="185:27"><name pos:start="185:9" pos:end="185:10">st</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:17">codec</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:27">codec_id</name></name>   <operator pos:start="185:31" pos:end="185:31">=</operator> <name pos:start="185:33" pos:end="185:53">CODEC_ID_DVB_TELETEXT</name></expr>;</expr_stmt>

        <return pos:start="187:9" pos:end="187:18">return <expr pos:start="187:16" pos:end="187:17"><name pos:start="187:16" pos:end="187:17">st</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="189:7" pos:end="201:5">else if <condition pos:start="189:15" pos:end="191:65">(<expr pos:start="189:16" pos:end="191:64"><operator pos:start="189:16" pos:end="189:16">!</operator><call pos:start="189:17" pos:end="189:63"><name pos:start="189:17" pos:end="189:26">ff_guidcmp</name><argument_list pos:start="189:27" pos:end="189:63">(<argument pos:start="189:28" pos:end="189:36"><expr pos:start="189:28" pos:end="189:36"><name pos:start="189:28" pos:end="189:36">mediatype</name></expr></argument>, <argument pos:start="189:39" pos:end="189:62"><expr pos:start="189:39" pos:end="189:62"><name pos:start="189:39" pos:end="189:62">mediatype_mpeg2_sections</name></expr></argument>)</argument_list></call> <operator pos:start="189:65" pos:end="189:66">&amp;&amp;</operator>

               <operator pos:start="191:16" pos:end="191:16">!</operator><call pos:start="191:17" pos:end="191:64"><name pos:start="191:17" pos:end="191:26">ff_guidcmp</name><argument_list pos:start="191:27" pos:end="191:64">(<argument pos:start="191:28" pos:end="191:34"><expr pos:start="191:28" pos:end="191:34"><name pos:start="191:28" pos:end="191:34">subtype</name></expr></argument>, <argument pos:start="191:37" pos:end="191:63"><expr pos:start="191:37" pos:end="191:63"><name pos:start="191:37" pos:end="191:63">mediasubtype_mpeg2_sections</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:67" pos:end="201:5">{<block_content pos:start="193:9" pos:end="199:20">

        <if_stmt pos:start="193:9" pos:end="195:95"><if pos:start="193:9" pos:end="195:95">if <condition pos:start="193:12" pos:end="193:48">(<expr pos:start="193:13" pos:end="193:47"><call pos:start="193:13" pos:end="193:47"><name pos:start="193:13" pos:end="193:22">ff_guidcmp</name><argument_list pos:start="193:23" pos:end="193:47">(<argument pos:start="193:24" pos:end="193:33"><expr pos:start="193:24" pos:end="193:33"><name pos:start="193:24" pos:end="193:33">formattype</name></expr></argument>, <argument pos:start="193:36" pos:end="193:46"><expr pos:start="193:36" pos:end="193:46"><name pos:start="193:36" pos:end="193:46">format_none</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:95"><block_content pos:start="195:13" pos:end="195:95">

            <expr_stmt pos:start="195:13" pos:end="195:95"><expr pos:start="195:13" pos:end="195:94"><call pos:start="195:13" pos:end="195:94"><name pos:start="195:13" pos:end="195:18">av_log</name><argument_list pos:start="195:19" pos:end="195:94">(<argument pos:start="195:20" pos:end="195:20"><expr pos:start="195:20" pos:end="195:20"><name pos:start="195:20" pos:end="195:20">s</name></expr></argument>, <argument pos:start="195:23" pos:end="195:36"><expr pos:start="195:23" pos:end="195:36"><name pos:start="195:23" pos:end="195:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="195:39" pos:end="195:71"><expr pos:start="195:39" pos:end="195:71"><literal type="string" pos:start="195:39" pos:end="195:59">"unknown formattype:"</literal><name pos:start="195:60" pos:end="195:67">PRI_GUID</name><literal type="string" pos:start="195:68" pos:end="195:71">"\n"</literal></expr></argument>, <argument pos:start="195:74" pos:end="195:93"><expr pos:start="195:74" pos:end="195:93"><call pos:start="195:74" pos:end="195:93"><name pos:start="195:74" pos:end="195:81">ARG_GUID</name><argument_list pos:start="195:82" pos:end="195:93">(<argument pos:start="195:83" pos:end="195:92"><expr pos:start="195:83" pos:end="195:92"><name pos:start="195:83" pos:end="195:92">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:28"><expr pos:start="197:9" pos:end="197:27"><call pos:start="197:9" pos:end="197:27"><name pos:start="197:9" pos:end="197:17">avio_skip</name><argument_list pos:start="197:18" pos:end="197:27">(<argument pos:start="197:19" pos:end="197:20"><expr pos:start="197:19" pos:end="197:20"><name pos:start="197:19" pos:end="197:20">pb</name></expr></argument>, <argument pos:start="197:23" pos:end="197:26"><expr pos:start="197:23" pos:end="197:26"><name pos:start="197:23" pos:end="197:26">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="199:9" pos:end="199:20">return <expr pos:start="199:16" pos:end="199:19"><name pos:start="199:16" pos:end="199:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="209:92"><expr pos:start="205:5" pos:end="209:91"><call pos:start="205:5" pos:end="209:91"><name pos:start="205:5" pos:end="205:10">av_log</name><argument_list pos:start="205:11" pos:end="209:91">(<argument pos:start="205:12" pos:end="205:12"><expr pos:start="205:12" pos:end="205:12"><name pos:start="205:12" pos:end="205:12">s</name></expr></argument>, <argument pos:start="205:15" pos:end="205:28"><expr pos:start="205:15" pos:end="205:28"><name pos:start="205:15" pos:end="205:28">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="205:31" pos:end="207:77"><expr pos:start="205:31" pos:end="207:77"><literal type="string" pos:start="205:31" pos:end="205:62">"unknown media type, mediatype:"</literal><name pos:start="205:63" pos:end="205:70">PRI_GUID</name>

                              <literal type="string" pos:start="207:31" pos:end="207:42">", subtype:"</literal><name pos:start="207:43" pos:end="207:50">PRI_GUID</name><literal type="string" pos:start="207:51" pos:end="207:65">", formattype:"</literal><name pos:start="207:66" pos:end="207:73">PRI_GUID</name><literal type="string" pos:start="207:74" pos:end="207:77">"\n"</literal></expr></argument>,

                              <argument pos:start="209:31" pos:end="209:49"><expr pos:start="209:31" pos:end="209:49"><call pos:start="209:31" pos:end="209:49"><name pos:start="209:31" pos:end="209:38">ARG_GUID</name><argument_list pos:start="209:39" pos:end="209:49">(<argument pos:start="209:40" pos:end="209:48"><expr pos:start="209:40" pos:end="209:48"><name pos:start="209:40" pos:end="209:48">mediatype</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="209:52" pos:end="209:68"><expr pos:start="209:52" pos:end="209:68"><call pos:start="209:52" pos:end="209:68"><name pos:start="209:52" pos:end="209:59">ARG_GUID</name><argument_list pos:start="209:60" pos:end="209:68">(<argument pos:start="209:61" pos:end="209:67"><expr pos:start="209:61" pos:end="209:67"><name pos:start="209:61" pos:end="209:67">subtype</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="209:71" pos:end="209:90"><expr pos:start="209:71" pos:end="209:90"><call pos:start="209:71" pos:end="209:90"><name pos:start="209:71" pos:end="209:78">ARG_GUID</name><argument_list pos:start="209:79" pos:end="209:90">(<argument pos:start="209:80" pos:end="209:89"><expr pos:start="209:80" pos:end="209:89"><name pos:start="209:80" pos:end="209:89">formattype</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:24"><expr pos:start="211:5" pos:end="211:23"><call pos:start="211:5" pos:end="211:23"><name pos:start="211:5" pos:end="211:13">avio_skip</name><argument_list pos:start="211:14" pos:end="211:23">(<argument pos:start="211:15" pos:end="211:16"><expr pos:start="211:15" pos:end="211:16"><name pos:start="211:15" pos:end="211:16">pb</name></expr></argument>, <argument pos:start="211:19" pos:end="211:22"><expr pos:start="211:19" pos:end="211:22"><name pos:start="211:19" pos:end="211:22">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="213:5" pos:end="213:16">return <expr pos:start="213:12" pos:end="213:15"><name pos:start="213:12" pos:end="213:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
