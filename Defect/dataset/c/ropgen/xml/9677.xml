<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9677.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">pcnet_aprom_writeb</name><parameter_list pos:start="1:31" pos:end="1:73">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:68">uint32_t</name></type> <name pos:start="1:70" pos:end="1:72">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:33">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PCNetState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="7:1" pos:end="7:18">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:18">PCNET_DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="9:5" pos:end="12:0"><expr pos:start="9:5" pos:end="9:68"><call pos:start="9:5" pos:end="9:68"><name pos:start="9:5" pos:end="9:10">printf</name><argument_list pos:start="9:11" pos:end="9:68">(<argument pos:start="9:12" pos:end="9:56"><expr pos:start="9:12" pos:end="9:56"><literal type="string" pos:start="9:12" pos:end="9:56">"pcnet_aprom_writeb addr=0x%08x val=0x%02x\n"</literal></expr></argument>, <argument pos:start="9:59" pos:end="9:62"><expr pos:start="9:59" pos:end="9:62"><name pos:start="9:59" pos:end="9:62">addr</name></expr></argument>, <argument pos:start="9:65" pos:end="9:67"><expr pos:start="9:65" pos:end="9:67"><name pos:start="9:65" pos:end="9:67">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="11:1" pos:end="11:6">#<cpp:directive pos:start="11:2" pos:end="11:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="13:5" pos:end="13:50">/* Check APROMWE bit to enable write access */</comment>

    <if_stmt pos:start="15:5" pos:end="17:33"><if pos:start="15:5" pos:end="17:33">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:23">pcnet_bcr_readw</name><argument_list pos:start="15:24" pos:end="15:28">(<argument pos:start="15:25" pos:end="15:25"><expr pos:start="15:25" pos:end="15:25"><name pos:start="15:25" pos:end="15:25">s</name></expr></argument>,<argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">2</literal></expr></argument>)</argument_list></call> <operator pos:start="15:30" pos:end="15:30">&amp;</operator> <literal type="number" pos:start="15:32" pos:end="15:36">0x100</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:33"><block_content pos:start="17:9" pos:end="17:33">

        <expr_stmt pos:start="17:9" pos:end="17:33"><expr pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:15">prom</name><index pos:start="17:16" pos:end="17:26">[<expr pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:20">addr</name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <literal type="number" pos:start="17:24" pos:end="17:25">15</literal></expr>]</index></name> <operator pos:start="17:28" pos:end="17:28">=</operator> <name pos:start="17:30" pos:end="17:32">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
