<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5232.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:51">raw_co_get_block_status</name><parameter_list pos:start="1:52" pos:end="5:78">(<parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:68">BlockDriverState</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">bs</name></decl></parameter>,

                                                    <parameter pos:start="3:53" pos:end="3:70"><decl pos:start="3:53" pos:end="3:70"><type pos:start="3:53" pos:end="3:70"><name pos:start="3:53" pos:end="3:59">int64_t</name></type> <name pos:start="3:61" pos:end="3:70">sector_num</name></decl></parameter>,

                                                    <parameter pos:start="5:53" pos:end="5:66"><decl pos:start="5:53" pos:end="5:66"><type pos:start="5:53" pos:end="5:66"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:66">nb_sectors</name></decl></parameter>, <parameter pos:start="5:69" pos:end="5:77"><decl pos:start="5:69" pos:end="5:77"><type pos:start="5:69" pos:end="5:77"><name pos:start="5:69" pos:end="5:71">int</name> <modifier pos:start="5:73" pos:end="5:73">*</modifier></type><name pos:start="5:74" pos:end="5:77">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="91:1">{<block_content pos:start="9:5" pos:end="89:49">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">off_t</name></type> <name pos:start="9:11" pos:end="9:15">start</name></decl>, <decl pos:start="9:18" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:18" pos:end="9:21">data</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>, <decl pos:start="9:28" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:9"/><name pos:start="9:28" pos:end="9:31">hole</name> <init pos:start="9:33" pos:end="9:35">= <expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">total_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:21"><name pos:start="17:11" pos:end="17:17">fd_open</name><argument_list pos:start="17:18" pos:end="17:21">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:19">

        <return pos:start="21:9" pos:end="21:19">return <expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:9">start</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <name pos:start="27:13" pos:end="27:22">sector_num</name> <operator pos:start="27:24" pos:end="27:24">*</operator> <name pos:start="27:26" pos:end="27:41">BDRV_SECTOR_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:36"><expr pos:start="29:5" pos:end="29:35"><name pos:start="29:5" pos:end="29:14">total_size</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:35"><name pos:start="29:18" pos:end="29:31">bdrv_getlength</name><argument_list pos:start="29:32" pos:end="29:35">(<argument pos:start="29:33" pos:end="29:34"><expr pos:start="29:33" pos:end="29:34"><name pos:start="29:33" pos:end="29:34">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:18">total_size</name> <operator pos:start="31:20" pos:end="31:20">&lt;</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr>)</condition> <block pos:start="31:25" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:26">

        <return pos:start="33:9" pos:end="33:26">return <expr pos:start="33:16" pos:end="33:25"><name pos:start="33:16" pos:end="33:25">total_size</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="41:5">else if <condition pos:start="35:15" pos:end="35:35">(<expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:20">start</name> <operator pos:start="35:22" pos:end="35:23">&gt;=</operator> <name pos:start="35:25" pos:end="35:34">total_size</name></expr>)</condition> <block pos:start="35:37" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:17">

        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:13">pnum</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="41:7" pos:end="45:5">else if <condition pos:start="41:15" pos:end="41:66">(<expr pos:start="41:16" pos:end="41:65"><name pos:start="41:16" pos:end="41:20">start</name> <operator pos:start="41:22" pos:end="41:22">+</operator> <name pos:start="41:24" pos:end="41:33">nb_sectors</name> <operator pos:start="41:35" pos:end="41:35">*</operator> <name pos:start="41:37" pos:end="41:52">BDRV_SECTOR_SIZE</name> <operator pos:start="41:54" pos:end="41:54">&gt;</operator> <name pos:start="41:56" pos:end="41:65">total_size</name></expr>)</condition> <block pos:start="41:68" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:72">

        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:18">nb_sectors</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:71"><name pos:start="43:22" pos:end="43:33">DIV_ROUND_UP</name><argument_list pos:start="43:34" pos:end="43:71">(<argument pos:start="43:35" pos:end="43:52"><expr pos:start="43:35" pos:end="43:52"><name pos:start="43:35" pos:end="43:44">total_size</name> <operator pos:start="43:46" pos:end="43:46">-</operator> <name pos:start="43:48" pos:end="43:52">start</name></expr></argument>, <argument pos:start="43:55" pos:end="43:70"><expr pos:start="43:55" pos:end="43:70"><name pos:start="43:55" pos:end="43:70">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:7">ret</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:50"><name pos:start="49:11" pos:end="49:25">find_allocation</name><argument_list pos:start="49:26" pos:end="49:50">(<argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><name pos:start="49:27" pos:end="49:28">bs</name></expr></argument>, <argument pos:start="49:31" pos:end="49:35"><expr pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35">start</name></expr></argument>, <argument pos:start="49:38" pos:end="49:42"><expr pos:start="49:38" pos:end="49:42"><operator pos:start="49:38" pos:end="49:38">&amp;</operator><name pos:start="49:39" pos:end="49:42">data</name></expr></argument>, <argument pos:start="49:45" pos:end="49:49"><expr pos:start="49:45" pos:end="49:49"><operator pos:start="49:45" pos:end="49:45">&amp;</operator><name pos:start="49:46" pos:end="49:49">hole</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="87:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:22">(<expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:14">==</operator> <operator pos:start="51:16" pos:end="51:16">-</operator><name pos:start="51:17" pos:end="51:21">ENXIO</name></expr>)</condition> <block pos:start="51:24" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:30">

        <comment type="block" pos:start="53:9" pos:end="53:27">/* Trailing hole */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:27"><expr pos:start="55:9" pos:end="55:26"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:13">pnum</name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:26">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:29">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="59:7" pos:end="67:5">else if <condition pos:start="59:15" pos:end="59:23">(<expr pos:start="59:16" pos:end="59:22"><name pos:start="59:16" pos:end="59:18">ret</name> <operator pos:start="59:20" pos:end="59:20">&lt;</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>)</condition> <block pos:start="59:25" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:30">

        <comment type="block" pos:start="61:9" pos:end="61:62">/* No info available, so pretend there are no holes */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:13">pnum</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:26">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:29">BDRV_BLOCK_DATA</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="77:5">else if <condition pos:start="67:15" pos:end="67:29">(<expr pos:start="67:16" pos:end="67:28"><name pos:start="67:16" pos:end="67:19">data</name> <operator pos:start="67:21" pos:end="67:22">==</operator> <name pos:start="67:24" pos:end="67:28">start</name></expr>)</condition> <block pos:start="67:31" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:30">

        <comment type="block" pos:start="69:9" pos:end="71:57">/* On a data extent, compute sectors to the end of the extent,

         * possibly including a partial sector at EOF. */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:78"><expr pos:start="73:9" pos:end="73:77"><operator pos:start="73:9" pos:end="73:9">*</operator><name pos:start="73:10" pos:end="73:13">pnum</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <call pos:start="73:17" pos:end="73:77"><name pos:start="73:17" pos:end="73:19">MIN</name><argument_list pos:start="73:20" pos:end="73:77">(<argument pos:start="73:21" pos:end="73:30"><expr pos:start="73:21" pos:end="73:30"><name pos:start="73:21" pos:end="73:30">nb_sectors</name></expr></argument>, <argument pos:start="73:33" pos:end="73:76"><expr pos:start="73:33" pos:end="73:76"><call pos:start="73:33" pos:end="73:76"><name pos:start="73:33" pos:end="73:44">DIV_ROUND_UP</name><argument_list pos:start="73:45" pos:end="73:76">(<argument pos:start="73:46" pos:end="73:57"><expr pos:start="73:46" pos:end="73:57"><name pos:start="73:46" pos:end="73:49">hole</name> <operator pos:start="73:51" pos:end="73:51">-</operator> <name pos:start="73:53" pos:end="73:57">start</name></expr></argument>, <argument pos:start="73:60" pos:end="73:75"><expr pos:start="73:60" pos:end="73:75"><name pos:start="73:60" pos:end="73:75">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:29">BDRV_BLOCK_DATA</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="87:5">else <block pos:start="77:12" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:30">

        <comment type="block" pos:start="79:9" pos:end="79:78">/* On a hole, compute sectors to the beginning of the next extent.  */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><call pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:14">assert</name><argument_list pos:start="81:15" pos:end="81:29">(<argument pos:start="81:16" pos:end="81:28"><expr pos:start="81:16" pos:end="81:28"><name pos:start="81:16" pos:end="81:19">hole</name> <operator pos:start="81:21" pos:end="81:22">==</operator> <name pos:start="81:24" pos:end="81:28">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:67"><expr pos:start="83:9" pos:end="83:66"><operator pos:start="83:9" pos:end="83:9">*</operator><name pos:start="83:10" pos:end="83:13">pnum</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <call pos:start="83:17" pos:end="83:66"><name pos:start="83:17" pos:end="83:19">MIN</name><argument_list pos:start="83:20" pos:end="83:66">(<argument pos:start="83:21" pos:end="83:30"><expr pos:start="83:21" pos:end="83:30"><name pos:start="83:21" pos:end="83:30">nb_sectors</name></expr></argument>, <argument pos:start="83:33" pos:end="83:65"><expr pos:start="83:33" pos:end="83:65"><operator pos:start="83:33" pos:end="83:33">(</operator><name pos:start="83:34" pos:end="83:37">data</name> <operator pos:start="83:39" pos:end="83:39">-</operator> <name pos:start="83:41" pos:end="83:45">start</name><operator pos:start="83:46" pos:end="83:46">)</operator> <operator pos:start="83:48" pos:end="83:48">/</operator> <name pos:start="83:50" pos:end="83:65">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <name pos:start="85:15" pos:end="85:29">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="89:5" pos:end="89:49">return <expr pos:start="89:12" pos:end="89:48"><name pos:start="89:12" pos:end="89:14">ret</name> <operator pos:start="89:16" pos:end="89:16">|</operator> <name pos:start="89:18" pos:end="89:40">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="89:42" pos:end="89:42">|</operator> <name pos:start="89:44" pos:end="89:48">start</name></expr>;</return>

</block_content>}</block></function>
</unit>
