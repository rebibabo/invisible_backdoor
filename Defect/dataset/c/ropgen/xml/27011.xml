<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27011.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">select_vgahw</name> <parameter_list pos:start="1:26" pos:end="1:40">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:38"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">opts</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><call pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:42">(<argument pos:start="9:12" pos:end="9:41"><expr pos:start="9:12" pos:end="9:41"><name pos:start="9:12" pos:end="9:29">vga_interface_type</name> <operator pos:start="9:31" pos:end="9:32">==</operator> <name pos:start="9:34" pos:end="9:41">VGA_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="121:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:34">(<expr pos:start="11:9" pos:end="11:33"><call pos:start="11:9" pos:end="11:33"><name pos:start="11:9" pos:end="11:16">strstart</name><argument_list pos:start="11:17" pos:end="11:33">(<argument pos:start="11:18" pos:end="11:18"><expr pos:start="11:18" pos:end="11:18"><name pos:start="11:18" pos:end="11:18">p</name></expr></argument>, <argument pos:start="11:21" pos:end="11:25"><expr pos:start="11:21" pos:end="11:25"><literal type="string" pos:start="11:21" pos:end="11:25">"std"</literal></expr></argument>, <argument pos:start="11:28" pos:end="11:32"><expr pos:start="11:28" pos:end="11:32"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:32">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:36" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:9">

        <if_stmt pos:start="13:9" pos:end="23:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:28">(<expr pos:start="13:13" pos:end="13:27"><call pos:start="13:13" pos:end="13:27"><name pos:start="13:13" pos:end="13:25">vga_available</name><argument_list pos:start="13:26" pos:end="13:27">()</argument_list></call></expr>)</condition> <block pos:start="13:30" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:41">

            <expr_stmt pos:start="15:13" pos:end="15:41"><expr pos:start="15:13" pos:end="15:40"><name pos:start="15:13" pos:end="15:30">vga_interface_type</name> <operator pos:start="15:32" pos:end="15:32">=</operator> <name pos:start="15:34" pos:end="15:40">VGA_STD</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="17:11" pos:end="23:9">else <block pos:start="17:16" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:20">

            <expr_stmt pos:start="19:13" pos:end="19:55"><expr pos:start="19:13" pos:end="19:54"><call pos:start="19:13" pos:end="19:54"><name pos:start="19:13" pos:end="19:24">error_report</name><argument_list pos:start="19:25" pos:end="19:54">(<argument pos:start="19:26" pos:end="19:53"><expr pos:start="19:26" pos:end="19:53"><literal type="string" pos:start="19:26" pos:end="19:53">"standard VGA not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:19"><call pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">exit</name><argument_list pos:start="21:17" pos:end="21:19">(<argument pos:start="21:18" pos:end="21:18"><expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="39:5">else if <condition pos:start="25:15" pos:end="25:44">(<expr pos:start="25:16" pos:end="25:43"><call pos:start="25:16" pos:end="25:43"><name pos:start="25:16" pos:end="25:23">strstart</name><argument_list pos:start="25:24" pos:end="25:43">(<argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">p</name></expr></argument>, <argument pos:start="25:28" pos:end="25:35"><expr pos:start="25:28" pos:end="25:35"><literal type="string" pos:start="25:28" pos:end="25:35">"cirrus"</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:42">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:46" pos:end="39:5">{<block_content pos:start="27:9" pos:end="37:9">

        <if_stmt pos:start="27:9" pos:end="37:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:35">(<expr pos:start="27:13" pos:end="27:34"><call pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:32">cirrus_vga_available</name><argument_list pos:start="27:33" pos:end="27:34">()</argument_list></call></expr>)</condition> <block pos:start="27:37" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:44">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:30">vga_interface_type</name> <operator pos:start="29:32" pos:end="29:32">=</operator> <name pos:start="29:34" pos:end="29:43">VGA_CIRRUS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="37:9">else <block pos:start="31:16" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:20">

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><call pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:24">error_report</name><argument_list pos:start="33:25" pos:end="33:52">(<argument pos:start="33:26" pos:end="33:51"><expr pos:start="33:26" pos:end="33:51"><literal type="string" pos:start="33:26" pos:end="33:51">"Cirrus VGA not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:20"><expr pos:start="35:13" pos:end="35:19"><call pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:16">exit</name><argument_list pos:start="35:17" pos:end="35:19">(<argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="53:5">else if <condition pos:start="39:15" pos:end="39:44">(<expr pos:start="39:16" pos:end="39:43"><call pos:start="39:16" pos:end="39:43"><name pos:start="39:16" pos:end="39:23">strstart</name><argument_list pos:start="39:24" pos:end="39:43">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">p</name></expr></argument>, <argument pos:start="39:28" pos:end="39:35"><expr pos:start="39:28" pos:end="39:35"><literal type="string" pos:start="39:28" pos:end="39:35">"vmware"</literal></expr></argument>, <argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:42">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:46" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:35">(<expr pos:start="41:13" pos:end="41:34"><call pos:start="41:13" pos:end="41:34"><name pos:start="41:13" pos:end="41:32">vmware_vga_available</name><argument_list pos:start="41:33" pos:end="41:34">()</argument_list></call></expr>)</condition> <block pos:start="41:37" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:44">

            <expr_stmt pos:start="43:13" pos:end="43:44"><expr pos:start="43:13" pos:end="43:43"><name pos:start="43:13" pos:end="43:30">vga_interface_type</name> <operator pos:start="43:32" pos:end="43:32">=</operator> <name pos:start="43:34" pos:end="43:43">VGA_VMWARE</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="51:9">else <block pos:start="45:16" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:20">

            <expr_stmt pos:start="47:13" pos:end="47:54"><expr pos:start="47:13" pos:end="47:53"><call pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:24">error_report</name><argument_list pos:start="47:25" pos:end="47:53">(<argument pos:start="47:26" pos:end="47:52"><expr pos:start="47:26" pos:end="47:52"><literal type="string" pos:start="47:26" pos:end="47:52">"VMWare SVGA not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><call pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">exit</name><argument_list pos:start="49:17" pos:end="49:19">(<argument pos:start="49:18" pos:end="49:18"><expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="67:5">else if <condition pos:start="53:15" pos:end="53:44">(<expr pos:start="53:16" pos:end="53:43"><call pos:start="53:16" pos:end="53:43"><name pos:start="53:16" pos:end="53:23">strstart</name><argument_list pos:start="53:24" pos:end="53:43">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">p</name></expr></argument>, <argument pos:start="53:28" pos:end="53:35"><expr pos:start="53:28" pos:end="53:35"><literal type="string" pos:start="53:28" pos:end="53:35">"virtio"</literal></expr></argument>, <argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><operator pos:start="53:38" pos:end="53:38">&amp;</operator><name pos:start="53:39" pos:end="53:42">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:46" pos:end="67:5">{<block_content pos:start="55:9" pos:end="65:9">

        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:35">(<expr pos:start="55:13" pos:end="55:34"><call pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:32">virtio_vga_available</name><argument_list pos:start="55:33" pos:end="55:34">()</argument_list></call></expr>)</condition> <block pos:start="55:37" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:44">

            <expr_stmt pos:start="57:13" pos:end="57:44"><expr pos:start="57:13" pos:end="57:43"><name pos:start="57:13" pos:end="57:30">vga_interface_type</name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:43">VGA_VIRTIO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="65:9">else <block pos:start="59:16" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:20">

            <expr_stmt pos:start="61:13" pos:end="61:53"><expr pos:start="61:13" pos:end="61:52"><call pos:start="61:13" pos:end="61:52"><name pos:start="61:13" pos:end="61:24">error_report</name><argument_list pos:start="61:25" pos:end="61:52">(<argument pos:start="61:26" pos:end="61:51"><expr pos:start="61:26" pos:end="61:51"><literal type="string" pos:start="61:26" pos:end="61:51">"Virtio VGA not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><call pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:16">exit</name><argument_list pos:start="63:17" pos:end="63:19">(<argument pos:start="63:18" pos:end="63:18"><expr pos:start="63:18" pos:end="63:18"><literal type="number" pos:start="63:18" pos:end="63:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="71:5">else if <condition pos:start="67:15" pos:end="67:43">(<expr pos:start="67:16" pos:end="67:42"><call pos:start="67:16" pos:end="67:42"><name pos:start="67:16" pos:end="67:23">strstart</name><argument_list pos:start="67:24" pos:end="67:42">(<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><name pos:start="67:25" pos:end="67:25">p</name></expr></argument>, <argument pos:start="67:28" pos:end="67:34"><expr pos:start="67:28" pos:end="67:34"><literal type="string" pos:start="67:28" pos:end="67:34">"xenfb"</literal></expr></argument>, <argument pos:start="67:37" pos:end="67:41"><expr pos:start="67:37" pos:end="67:41"><operator pos:start="67:37" pos:end="67:37">&amp;</operator><name pos:start="67:38" pos:end="67:41">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:45" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:39">

        <expr_stmt pos:start="69:9" pos:end="69:39"><expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:26">vga_interface_type</name> <operator pos:start="69:28" pos:end="69:28">=</operator> <name pos:start="69:30" pos:end="69:38">VGA_XENFB</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="71:7" pos:end="85:5">else if <condition pos:start="71:15" pos:end="71:41">(<expr pos:start="71:16" pos:end="71:40"><call pos:start="71:16" pos:end="71:40"><name pos:start="71:16" pos:end="71:23">strstart</name><argument_list pos:start="71:24" pos:end="71:40">(<argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><name pos:start="71:25" pos:end="71:25">p</name></expr></argument>, <argument pos:start="71:28" pos:end="71:32"><expr pos:start="71:28" pos:end="71:32"><literal type="string" pos:start="71:28" pos:end="71:32">"qxl"</literal></expr></argument>, <argument pos:start="71:35" pos:end="71:39"><expr pos:start="71:35" pos:end="71:39"><operator pos:start="71:35" pos:end="71:35">&amp;</operator><name pos:start="71:36" pos:end="71:39">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:43" pos:end="85:5">{<block_content pos:start="73:9" pos:end="83:9">

        <if_stmt pos:start="73:9" pos:end="83:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:32">(<expr pos:start="73:13" pos:end="73:31"><call pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:29">qxl_vga_available</name><argument_list pos:start="73:30" pos:end="73:31">()</argument_list></call></expr>)</condition> <block pos:start="73:34" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:41">

            <expr_stmt pos:start="75:13" pos:end="75:41"><expr pos:start="75:13" pos:end="75:40"><name pos:start="75:13" pos:end="75:30">vga_interface_type</name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:40">VGA_QXL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="83:9">else <block pos:start="77:16" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:20">

            <expr_stmt pos:start="79:13" pos:end="79:50"><expr pos:start="79:13" pos:end="79:49"><call pos:start="79:13" pos:end="79:49"><name pos:start="79:13" pos:end="79:24">error_report</name><argument_list pos:start="79:25" pos:end="79:49">(<argument pos:start="79:26" pos:end="79:48"><expr pos:start="79:26" pos:end="79:48"><literal type="string" pos:start="79:26" pos:end="79:48">"QXL VGA not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:20"><expr pos:start="81:13" pos:end="81:19"><call pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:16">exit</name><argument_list pos:start="81:17" pos:end="81:19">(<argument pos:start="81:18" pos:end="81:18"><expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="85:7" pos:end="99:5">else if <condition pos:start="85:15" pos:end="85:41">(<expr pos:start="85:16" pos:end="85:40"><call pos:start="85:16" pos:end="85:40"><name pos:start="85:16" pos:end="85:23">strstart</name><argument_list pos:start="85:24" pos:end="85:40">(<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">p</name></expr></argument>, <argument pos:start="85:28" pos:end="85:32"><expr pos:start="85:28" pos:end="85:32"><literal type="string" pos:start="85:28" pos:end="85:32">"tcx"</literal></expr></argument>, <argument pos:start="85:35" pos:end="85:39"><expr pos:start="85:35" pos:end="85:39"><operator pos:start="85:35" pos:end="85:35">&amp;</operator><name pos:start="85:36" pos:end="85:39">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="85:43" pos:end="99:5">{<block_content pos:start="87:9" pos:end="97:9">

        <if_stmt pos:start="87:9" pos:end="97:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:32">(<expr pos:start="87:13" pos:end="87:31"><call pos:start="87:13" pos:end="87:31"><name pos:start="87:13" pos:end="87:29">tcx_vga_available</name><argument_list pos:start="87:30" pos:end="87:31">()</argument_list></call></expr>)</condition> <block pos:start="87:34" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:41">

            <expr_stmt pos:start="89:13" pos:end="89:41"><expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:30">vga_interface_type</name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:40">VGA_TCX</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="97:9">else <block pos:start="91:16" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:20">

            <expr_stmt pos:start="93:13" pos:end="93:58"><expr pos:start="93:13" pos:end="93:57"><call pos:start="93:13" pos:end="93:57"><name pos:start="93:13" pos:end="93:24">error_report</name><argument_list pos:start="93:25" pos:end="93:57">(<argument pos:start="93:26" pos:end="93:56"><expr pos:start="93:26" pos:end="93:56"><literal type="string" pos:start="93:26" pos:end="93:56">"TCX framebuffer not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:20"><expr pos:start="95:13" pos:end="95:19"><call pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:16">exit</name><argument_list pos:start="95:17" pos:end="95:19">(<argument pos:start="95:18" pos:end="95:18"><expr pos:start="95:18" pos:end="95:18"><literal type="number" pos:start="95:18" pos:end="95:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="99:7" pos:end="113:5">else if <condition pos:start="99:15" pos:end="99:41">(<expr pos:start="99:16" pos:end="99:40"><call pos:start="99:16" pos:end="99:40"><name pos:start="99:16" pos:end="99:23">strstart</name><argument_list pos:start="99:24" pos:end="99:40">(<argument pos:start="99:25" pos:end="99:25"><expr pos:start="99:25" pos:end="99:25"><name pos:start="99:25" pos:end="99:25">p</name></expr></argument>, <argument pos:start="99:28" pos:end="99:32"><expr pos:start="99:28" pos:end="99:32"><literal type="string" pos:start="99:28" pos:end="99:32">"cg3"</literal></expr></argument>, <argument pos:start="99:35" pos:end="99:39"><expr pos:start="99:35" pos:end="99:39"><operator pos:start="99:35" pos:end="99:35">&amp;</operator><name pos:start="99:36" pos:end="99:39">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:43" pos:end="113:5">{<block_content pos:start="101:9" pos:end="111:9">

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:32">(<expr pos:start="101:13" pos:end="101:31"><call pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:29">cg3_vga_available</name><argument_list pos:start="101:30" pos:end="101:31">()</argument_list></call></expr>)</condition> <block pos:start="101:34" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:41">

            <expr_stmt pos:start="103:13" pos:end="103:41"><expr pos:start="103:13" pos:end="103:40"><name pos:start="103:13" pos:end="103:30">vga_interface_type</name> <operator pos:start="103:32" pos:end="103:32">=</operator> <name pos:start="103:34" pos:end="103:40">VGA_CG3</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="111:9">else <block pos:start="105:16" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:20">

            <expr_stmt pos:start="107:13" pos:end="107:58"><expr pos:start="107:13" pos:end="107:57"><call pos:start="107:13" pos:end="107:57"><name pos:start="107:13" pos:end="107:24">error_report</name><argument_list pos:start="107:25" pos:end="107:57">(<argument pos:start="107:26" pos:end="107:56"><expr pos:start="107:26" pos:end="107:56"><literal type="string" pos:start="107:26" pos:end="107:56">"CG3 framebuffer not available"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:20"><expr pos:start="109:13" pos:end="109:19"><call pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:16">exit</name><argument_list pos:start="109:17" pos:end="109:19">(<argument pos:start="109:18" pos:end="109:18"><expr pos:start="109:18" pos:end="109:18"><literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="113:7" pos:end="121:5">else if <condition pos:start="113:15" pos:end="113:43">(<expr pos:start="113:16" pos:end="113:42"><operator pos:start="113:16" pos:end="113:16">!</operator><call pos:start="113:17" pos:end="113:42"><name pos:start="113:17" pos:end="113:24">strstart</name><argument_list pos:start="113:25" pos:end="113:42">(<argument pos:start="113:26" pos:end="113:26"><expr pos:start="113:26" pos:end="113:26"><name pos:start="113:26" pos:end="113:26">p</name></expr></argument>, <argument pos:start="113:29" pos:end="113:34"><expr pos:start="113:29" pos:end="113:34"><literal type="string" pos:start="113:29" pos:end="113:34">"none"</literal></expr></argument>, <argument pos:start="113:37" pos:end="113:41"><expr pos:start="113:37" pos:end="113:41"><operator pos:start="113:37" pos:end="113:37">&amp;</operator><name pos:start="113:38" pos:end="113:41">opts</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:45" pos:end="121:5">{<block_content pos:start="115:5" pos:end="119:16">

    <label pos:start="115:5" pos:end="115:16"><name pos:start="115:5" pos:end="115:15">invalid_vga</name>:</label>

        <expr_stmt pos:start="117:9" pos:end="117:48"><expr pos:start="117:9" pos:end="117:47"><call pos:start="117:9" pos:end="117:47"><name pos:start="117:9" pos:end="117:20">error_report</name><argument_list pos:start="117:21" pos:end="117:47">(<argument pos:start="117:22" pos:end="117:43"><expr pos:start="117:22" pos:end="117:43"><literal type="string" pos:start="117:22" pos:end="117:43">"unknown vga type: %s"</literal></expr></argument>, <argument pos:start="117:46" pos:end="117:46"><expr pos:start="117:46" pos:end="117:46"><name pos:start="117:46" pos:end="117:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:16"><expr pos:start="119:9" pos:end="119:15"><call pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:12">exit</name><argument_list pos:start="119:13" pos:end="119:15">(<argument pos:start="119:14" pos:end="119:14"><expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="123:5" pos:end="147:5">while <condition pos:start="123:11" pos:end="123:17">(<expr pos:start="123:12" pos:end="123:16"><operator pos:start="123:12" pos:end="123:12">*</operator><name pos:start="123:13" pos:end="123:16">opts</name></expr>)</condition> <block pos:start="123:19" pos:end="147:5">{<block_content pos:start="125:9" pos:end="145:23">

        <decl_stmt pos:start="125:9" pos:end="125:28"><decl pos:start="125:9" pos:end="125:27"><type pos:start="125:9" pos:end="125:20"><specifier pos:start="125:9" pos:end="125:13">const</specifier> <name pos:start="125:15" pos:end="125:18">char</name> <modifier pos:start="125:20" pos:end="125:20">*</modifier></type><name pos:start="125:21" pos:end="125:27">nextopt</name></decl>;</decl_stmt>



        <if_stmt pos:start="129:9" pos:end="143:32"><if pos:start="129:9" pos:end="143:9">if <condition pos:start="129:12" pos:end="129:50">(<expr pos:start="129:13" pos:end="129:49"><call pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:20">strstart</name><argument_list pos:start="129:21" pos:end="129:49">(<argument pos:start="129:22" pos:end="129:25"><expr pos:start="129:22" pos:end="129:25"><name pos:start="129:22" pos:end="129:25">opts</name></expr></argument>, <argument pos:start="129:28" pos:end="129:38"><expr pos:start="129:28" pos:end="129:38"><literal type="string" pos:start="129:28" pos:end="129:38">",retrace="</literal></expr></argument>, <argument pos:start="129:41" pos:end="129:48"><expr pos:start="129:41" pos:end="129:48"><operator pos:start="129:41" pos:end="129:41">&amp;</operator><name pos:start="129:42" pos:end="129:48">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:52" pos:end="143:9">{<block_content pos:start="131:13" pos:end="141:34">

            <expr_stmt pos:start="131:13" pos:end="131:27"><expr pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:16">opts</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <name pos:start="131:20" pos:end="131:26">nextopt</name></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="141:34"><if pos:start="133:13" pos:end="135:54">if <condition pos:start="133:16" pos:end="133:49">(<expr pos:start="133:17" pos:end="133:48"><call pos:start="133:17" pos:end="133:48"><name pos:start="133:17" pos:end="133:24">strstart</name><argument_list pos:start="133:25" pos:end="133:48">(<argument pos:start="133:26" pos:end="133:29"><expr pos:start="133:26" pos:end="133:29"><name pos:start="133:26" pos:end="133:29">opts</name></expr></argument>, <argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><literal type="string" pos:start="133:32" pos:end="133:37">"dumb"</literal></expr></argument>, <argument pos:start="133:40" pos:end="133:47"><expr pos:start="133:40" pos:end="133:47"><operator pos:start="133:40" pos:end="133:40">&amp;</operator><name pos:start="133:41" pos:end="133:47">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:54"><block_content pos:start="135:17" pos:end="135:54">

                <expr_stmt pos:start="135:17" pos:end="135:54"><expr pos:start="135:17" pos:end="135:53"><name pos:start="135:17" pos:end="135:34">vga_retrace_method</name> <operator pos:start="135:36" pos:end="135:36">=</operator> <name pos:start="135:38" pos:end="135:53">VGA_RETRACE_DUMB</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="137:13" pos:end="139:57">else if <condition pos:start="137:21" pos:end="137:57">(<expr pos:start="137:22" pos:end="137:56"><call pos:start="137:22" pos:end="137:56"><name pos:start="137:22" pos:end="137:29">strstart</name><argument_list pos:start="137:30" pos:end="137:56">(<argument pos:start="137:31" pos:end="137:34"><expr pos:start="137:31" pos:end="137:34"><name pos:start="137:31" pos:end="137:34">opts</name></expr></argument>, <argument pos:start="137:37" pos:end="137:45"><expr pos:start="137:37" pos:end="137:45"><literal type="string" pos:start="137:37" pos:end="137:45">"precise"</literal></expr></argument>, <argument pos:start="137:48" pos:end="137:55"><expr pos:start="137:48" pos:end="137:55"><operator pos:start="137:48" pos:end="137:48">&amp;</operator><name pos:start="137:49" pos:end="137:55">nextopt</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:57"><block_content pos:start="139:17" pos:end="139:57">

                <expr_stmt pos:start="139:17" pos:end="139:57"><expr pos:start="139:17" pos:end="139:56"><name pos:start="139:17" pos:end="139:34">vga_retrace_method</name> <operator pos:start="139:36" pos:end="139:36">=</operator> <name pos:start="139:38" pos:end="139:56">VGA_RETRACE_PRECISE</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="141:13" pos:end="141:34">else<block type="pseudo" pos:start="141:18" pos:end="141:34"><block_content pos:start="141:18" pos:end="141:34"> <goto pos:start="141:18" pos:end="141:34">goto <name pos:start="141:23" pos:end="141:33">invalid_vga</name>;</goto></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="143:11" pos:end="143:32">else<block type="pseudo" pos:start="143:16" pos:end="143:32"><block_content pos:start="143:16" pos:end="143:32"> <goto pos:start="143:16" pos:end="143:32">goto <name pos:start="143:21" pos:end="143:31">invalid_vga</name>;</goto></block_content></block></else></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:23"><expr pos:start="145:9" pos:end="145:22"><name pos:start="145:9" pos:end="145:12">opts</name> <operator pos:start="145:14" pos:end="145:14">=</operator> <name pos:start="145:16" pos:end="145:22">nextopt</name></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
