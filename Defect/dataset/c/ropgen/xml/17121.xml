<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17121.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:12">target_ulong</name></type> <name pos:start="1:14" pos:end="1:23">helper_lwr</name><parameter_list pos:start="1:24" pos:end="3:55">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:36">CPUMIPSState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:55">target_ulong</name></type> <name pos:start="1:57" pos:end="1:60">arg1</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:41"><decl pos:start="3:25" pos:end="3:41"><type pos:start="3:25" pos:end="3:41"><name pos:start="3:25" pos:end="3:36">target_ulong</name></type> <name pos:start="3:38" pos:end="3:41">arg2</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:54"><decl pos:start="3:44" pos:end="3:54"><type pos:start="3:44" pos:end="3:54"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:54">mem_idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:25">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:20">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:7">tmp</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:36"><name pos:start="11:11" pos:end="11:16">do_lbu</name><argument_list pos:start="11:17" pos:end="11:36">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">env</name></expr></argument>, <argument pos:start="11:23" pos:end="11:26"><expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">arg2</name></expr></argument>, <argument pos:start="11:29" pos:end="11:35"><expr pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:35">mem_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:8">arg1</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <operator pos:start="13:12" pos:end="13:12">(</operator><name pos:start="13:13" pos:end="13:16">arg1</name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <literal type="number" pos:start="13:20" pos:end="13:29">0xFFFFFF00</literal><operator pos:start="13:30" pos:end="13:30">)</operator> <operator pos:start="13:32" pos:end="13:32">|</operator> <name pos:start="13:34" pos:end="13:36">tmp</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><call pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:17">GET_LMASK</name><argument_list pos:start="17:18" pos:end="17:23">(<argument pos:start="17:19" pos:end="17:22"><expr pos:start="17:19" pos:end="17:22"><name pos:start="17:19" pos:end="17:22">arg2</name></expr></argument>)</argument_list></call> <operator pos:start="17:25" pos:end="17:26">&gt;=</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr>)</condition> <block pos:start="17:31" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:48">

        <expr_stmt pos:start="19:9" pos:end="19:57"><expr pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:11">tmp</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:56"><name pos:start="19:15" pos:end="19:20">do_lbu</name><argument_list pos:start="19:21" pos:end="19:56">(<argument pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:24"><name pos:start="19:22" pos:end="19:24">env</name></expr></argument>, <argument pos:start="19:27" pos:end="19:46"><expr pos:start="19:27" pos:end="19:46"><call pos:start="19:27" pos:end="19:46"><name pos:start="19:27" pos:end="19:36">GET_OFFSET</name><argument_list pos:start="19:37" pos:end="19:46">(<argument pos:start="19:38" pos:end="19:41"><expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">arg2</name></expr></argument>, <argument pos:start="19:44" pos:end="19:45"><expr pos:start="19:44" pos:end="19:45"><operator pos:start="19:44" pos:end="19:44">-</operator><literal type="number" pos:start="19:45" pos:end="19:45">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:49" pos:end="19:55"><expr pos:start="19:49" pos:end="19:55"><name pos:start="19:49" pos:end="19:55">mem_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><name pos:start="21:9" pos:end="21:12">arg1</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:20">arg1</name> <operator pos:start="21:22" pos:end="21:22">&amp;</operator> <literal type="number" pos:start="21:24" pos:end="21:33">0xFFFF00FF</literal><operator pos:start="21:34" pos:end="21:34">)</operator> <operator pos:start="21:36" pos:end="21:36">|</operator> <operator pos:start="21:38" pos:end="21:38">(</operator><name pos:start="21:39" pos:end="21:41">tmp</name> <operator pos:start="21:43" pos:end="21:44">&lt;&lt;</operator> <literal type="number" pos:start="21:46" pos:end="21:46">8</literal><operator pos:start="21:47" pos:end="21:47">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:29">(<expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:17">GET_LMASK</name><argument_list pos:start="27:18" pos:end="27:23">(<argument pos:start="27:19" pos:end="27:22"><expr pos:start="27:19" pos:end="27:22"><name pos:start="27:19" pos:end="27:22">arg2</name></expr></argument>)</argument_list></call> <operator pos:start="27:25" pos:end="27:26">&gt;=</operator> <literal type="number" pos:start="27:28" pos:end="27:28">2</literal></expr>)</condition> <block pos:start="27:31" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:49">

        <expr_stmt pos:start="29:9" pos:end="29:57"><expr pos:start="29:9" pos:end="29:56"><name pos:start="29:9" pos:end="29:11">tmp</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:56"><name pos:start="29:15" pos:end="29:20">do_lbu</name><argument_list pos:start="29:21" pos:end="29:56">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">env</name></expr></argument>, <argument pos:start="29:27" pos:end="29:46"><expr pos:start="29:27" pos:end="29:46"><call pos:start="29:27" pos:end="29:46"><name pos:start="29:27" pos:end="29:36">GET_OFFSET</name><argument_list pos:start="29:37" pos:end="29:46">(<argument pos:start="29:38" pos:end="29:41"><expr pos:start="29:38" pos:end="29:41"><name pos:start="29:38" pos:end="29:41">arg2</name></expr></argument>, <argument pos:start="29:44" pos:end="29:45"><expr pos:start="29:44" pos:end="29:45"><operator pos:start="29:44" pos:end="29:44">-</operator><literal type="number" pos:start="29:45" pos:end="29:45">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:49" pos:end="29:55"><expr pos:start="29:49" pos:end="29:55"><name pos:start="29:49" pos:end="29:55">mem_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:49"><expr pos:start="31:9" pos:end="31:48"><name pos:start="31:9" pos:end="31:12">arg1</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><name pos:start="31:17" pos:end="31:20">arg1</name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <literal type="number" pos:start="31:24" pos:end="31:33">0xFF00FFFF</literal><operator pos:start="31:34" pos:end="31:34">)</operator> <operator pos:start="31:36" pos:end="31:36">|</operator> <operator pos:start="31:38" pos:end="31:38">(</operator><name pos:start="31:39" pos:end="31:41">tmp</name> <operator pos:start="31:43" pos:end="31:44">&lt;&lt;</operator> <literal type="number" pos:start="31:46" pos:end="31:47">16</literal><operator pos:start="31:48" pos:end="31:48">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:17">GET_LMASK</name><argument_list pos:start="37:18" pos:end="37:23">(<argument pos:start="37:19" pos:end="37:22"><expr pos:start="37:19" pos:end="37:22"><name pos:start="37:19" pos:end="37:22">arg2</name></expr></argument>)</argument_list></call> <operator pos:start="37:25" pos:end="37:26">==</operator> <literal type="number" pos:start="37:28" pos:end="37:28">3</literal></expr>)</condition> <block pos:start="37:31" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:49">

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:11">tmp</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:56"><name pos:start="39:15" pos:end="39:20">do_lbu</name><argument_list pos:start="39:21" pos:end="39:56">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">env</name></expr></argument>, <argument pos:start="39:27" pos:end="39:46"><expr pos:start="39:27" pos:end="39:46"><call pos:start="39:27" pos:end="39:46"><name pos:start="39:27" pos:end="39:36">GET_OFFSET</name><argument_list pos:start="39:37" pos:end="39:46">(<argument pos:start="39:38" pos:end="39:41"><expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">arg2</name></expr></argument>, <argument pos:start="39:44" pos:end="39:45"><expr pos:start="39:44" pos:end="39:45"><operator pos:start="39:44" pos:end="39:44">-</operator><literal type="number" pos:start="39:45" pos:end="39:45">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:49" pos:end="39:55"><expr pos:start="39:49" pos:end="39:55"><name pos:start="39:49" pos:end="39:55">mem_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:12">arg1</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:20">arg1</name> <operator pos:start="41:22" pos:end="41:22">&amp;</operator> <literal type="number" pos:start="41:24" pos:end="41:33">0x00FFFFFF</literal><operator pos:start="41:34" pos:end="41:34">)</operator> <operator pos:start="41:36" pos:end="41:36">|</operator> <operator pos:start="41:38" pos:end="41:38">(</operator><name pos:start="41:39" pos:end="41:41">tmp</name> <operator pos:start="41:43" pos:end="41:44">&lt;&lt;</operator> <literal type="number" pos:start="41:46" pos:end="41:47">24</literal><operator pos:start="41:48" pos:end="41:48">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="45:5" pos:end="45:25">return <expr pos:start="45:12" pos:end="45:24"><operator pos:start="45:12" pos:end="45:12">(</operator><name pos:start="45:13" pos:end="45:19">int32_t</name><operator pos:start="45:20" pos:end="45:20">)</operator><name pos:start="45:21" pos:end="45:24">arg1</name></expr>;</return>

</block_content>}</block></function>
</unit>
