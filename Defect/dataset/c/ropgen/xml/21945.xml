<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21945.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">try_decode_frame</name><parameter_list pos:start="1:28" pos:end="1:82">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">AVStream</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">st</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avpkt</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:81"><decl pos:start="1:60" pos:end="1:81"><type pos:start="1:60" pos:end="1:81"><name pos:start="1:60" pos:end="1:71">AVDictionary</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:81">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVCodec</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">got_picture</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">1</literal></expr></init></decl>, <decl pos:start="7:26" pos:end="7:32"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:28">ret</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">AVFrame</name></type> <name pos:start="9:13" pos:end="9:19">picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">AVPacket</name></type> <name pos:start="11:14" pos:end="11:16">pkt</name> <init pos:start="11:18" pos:end="11:25">= <expr pos:start="11:20" pos:end="11:25"><operator pos:start="11:20" pos:end="11:20">*</operator><name pos:start="11:21" pos:end="11:25">avpkt</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="45:5"><if pos:start="15:5" pos:end="45:5">if<condition pos:start="15:7" pos:end="15:25">(<expr pos:start="15:8" pos:end="15:24"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:10">st</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:17">codec</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:24">codec</name></name></expr>)</condition><block pos:start="15:26" pos:end="45:5">{<block_content pos:start="17:9" pos:end="43:23">

        <decl_stmt pos:start="17:9" pos:end="17:40"><decl pos:start="17:9" pos:end="17:39"><type pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">AVDictionary</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:32">thread_opt</name> <init pos:start="17:34" pos:end="17:39">= <expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:58"><expr pos:start="21:9" pos:end="21:57"><name pos:start="21:9" pos:end="21:13">codec</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="21:57"><name pos:start="21:17" pos:end="21:36">avcodec_find_decoder</name><argument_list pos:start="21:37" pos:end="21:57">(<argument pos:start="21:38" pos:end="21:56"><expr pos:start="21:38" pos:end="21:56"><name pos:start="21:38" pos:end="21:56"><name pos:start="21:38" pos:end="21:39">st</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:46">codec</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:56">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:22"><if pos:start="23:9" pos:end="25:22">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:18">codec</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:22"><block_content pos:start="25:13" pos:end="25:22">

            <return pos:start="25:13" pos:end="25:22">return <expr pos:start="25:20" pos:end="25:21"><operator pos:start="25:20" pos:end="25:20">-</operator><literal type="number" pos:start="25:21" pos:end="25:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="29:9" pos:end="31:66">/* force thread count to 1 since the h264 decoder will not extract SPS

         *  and PPS to extradata during multi-threaded decoding */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:72"><expr pos:start="33:9" pos:end="33:71"><call pos:start="33:9" pos:end="33:71"><name pos:start="33:9" pos:end="33:19">av_dict_set</name><argument_list pos:start="33:20" pos:end="33:71">(<argument pos:start="33:21" pos:end="33:51"><expr pos:start="33:21" pos:end="33:51"><ternary pos:start="33:21" pos:end="33:51"><condition pos:start="33:21" pos:end="33:29"><expr pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:27">options</name></expr> ?</condition><then pos:start="33:31" pos:end="33:37"> <expr pos:start="33:31" pos:end="33:37"><name pos:start="33:31" pos:end="33:37">options</name></expr> </then><else pos:start="33:39" pos:end="33:51">: <expr pos:start="33:41" pos:end="33:51"><operator pos:start="33:41" pos:end="33:41">&amp;</operator><name pos:start="33:42" pos:end="33:51">thread_opt</name></expr></else></ternary></expr></argument>, <argument pos:start="33:54" pos:end="33:62"><expr pos:start="33:54" pos:end="33:62"><literal type="string" pos:start="33:54" pos:end="33:62">"threads"</literal></expr></argument>, <argument pos:start="33:65" pos:end="33:67"><expr pos:start="33:65" pos:end="33:67"><literal type="string" pos:start="33:65" pos:end="33:67">"1"</literal></expr></argument>, <argument pos:start="33:70" pos:end="33:70"><expr pos:start="33:70" pos:end="33:70"><literal type="number" pos:start="33:70" pos:end="33:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:79"><expr pos:start="35:9" pos:end="35:78"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:78"><name pos:start="35:15" pos:end="35:27">avcodec_open2</name><argument_list pos:start="35:28" pos:end="35:78">(<argument pos:start="35:29" pos:end="35:37"><expr pos:start="35:29" pos:end="35:37"><name pos:start="35:29" pos:end="35:37"><name pos:start="35:29" pos:end="35:30">st</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:37">codec</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><name pos:start="35:40" pos:end="35:44">codec</name></expr></argument>, <argument pos:start="35:47" pos:end="35:77"><expr pos:start="35:47" pos:end="35:77"><ternary pos:start="35:47" pos:end="35:77"><condition pos:start="35:47" pos:end="35:55"><expr pos:start="35:47" pos:end="35:53"><name pos:start="35:47" pos:end="35:53">options</name></expr> ?</condition><then pos:start="35:57" pos:end="35:63"> <expr pos:start="35:57" pos:end="35:63"><name pos:start="35:57" pos:end="35:63">options</name></expr> </then><else pos:start="35:65" pos:end="35:77">: <expr pos:start="35:67" pos:end="35:77"><operator pos:start="35:67" pos:end="35:67">&amp;</operator><name pos:start="35:68" pos:end="35:77">thread_opt</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:38"><if pos:start="37:9" pos:end="39:38">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:20">options</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:38"><block_content pos:start="39:13" pos:end="39:38">

            <expr_stmt pos:start="39:13" pos:end="39:38"><expr pos:start="39:13" pos:end="39:37"><call pos:start="39:13" pos:end="39:37"><name pos:start="39:13" pos:end="39:24">av_dict_free</name><argument_list pos:start="39:25" pos:end="39:37">(<argument pos:start="39:26" pos:end="39:36"><expr pos:start="39:26" pos:end="39:36"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:36">thread_opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="43:23"><if pos:start="41:9" pos:end="43:23">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:23"><block_content pos:start="43:13" pos:end="43:23">

            <return pos:start="43:13" pos:end="43:23">return <expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="49:5" pos:end="99:5">while <condition pos:start="49:11" pos:end="57:99">(<expr pos:start="49:12" pos:end="57:98"><operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">pkt</name><operator pos:start="49:16" pos:end="49:16">.</operator><name pos:start="49:17" pos:end="49:20">size</name></name> <operator pos:start="49:22" pos:end="49:22">&gt;</operator> <literal type="number" pos:start="49:24" pos:end="49:24">0</literal> <operator pos:start="49:26" pos:end="49:27">||</operator> <operator pos:start="49:29" pos:end="49:29">(</operator><operator pos:start="49:30" pos:end="49:30">!</operator><name pos:start="49:31" pos:end="49:38"><name pos:start="49:31" pos:end="49:33">pkt</name><operator pos:start="49:34" pos:end="49:34">.</operator><name pos:start="49:35" pos:end="49:38">data</name></name> <operator pos:start="49:40" pos:end="49:41">&amp;&amp;</operator> <name pos:start="49:43" pos:end="49:53">got_picture</name><operator pos:start="49:54" pos:end="49:54">)</operator><operator pos:start="49:55" pos:end="49:55">)</operator> <operator pos:start="49:57" pos:end="49:58">&amp;&amp;</operator>

           <name pos:start="51:12" pos:end="51:14">ret</name> <operator pos:start="51:16" pos:end="51:17">&gt;=</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal> <operator pos:start="51:21" pos:end="51:22">&amp;&amp;</operator>

           <operator pos:start="53:12" pos:end="53:12">(</operator><operator pos:start="53:13" pos:end="53:13">!</operator><call pos:start="53:14" pos:end="53:44"><name pos:start="53:14" pos:end="53:33">has_codec_parameters</name><argument_list pos:start="53:34" pos:end="53:44">(<argument pos:start="53:35" pos:end="53:43"><expr pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:36">st</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:43">codec</name></name></expr></argument>)</argument_list></call>  <operator pos:start="53:47" pos:end="53:48">||</operator>

           <operator pos:start="55:12" pos:end="55:12">!</operator><call pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:41">has_decode_delay_been_guessed</name><argument_list pos:start="55:42" pos:end="55:45">(<argument pos:start="55:43" pos:end="55:44"><expr pos:start="55:43" pos:end="55:44"><name pos:start="55:43" pos:end="55:44">st</name></expr></argument>)</argument_list></call> <operator pos:start="55:47" pos:end="55:48">||</operator>

           <operator pos:start="57:12" pos:end="57:12">(</operator><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:37"><name pos:start="57:14" pos:end="57:15">st</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:37">codec_info_nb_frames</name></name> <operator pos:start="57:39" pos:end="57:40">&amp;&amp;</operator> <name pos:start="57:42" pos:end="57:71"><name pos:start="57:42" pos:end="57:43">st</name><operator pos:start="57:44" pos:end="57:45">-&gt;</operator><name pos:start="57:46" pos:end="57:50">codec</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:57">codec</name><operator pos:start="57:58" pos:end="57:59">-&gt;</operator><name pos:start="57:60" pos:end="57:71">capabilities</name></name> <operator pos:start="57:73" pos:end="57:73">&amp;</operator> <name pos:start="57:75" pos:end="57:96">CODEC_CAP_CHANNEL_CONF</name><operator pos:start="57:97" pos:end="57:97">)</operator><operator pos:start="57:98" pos:end="57:98">)</operator></expr>)</condition> <block pos:start="57:101" pos:end="99:5">{<block_content pos:start="59:9" pos:end="97:9">

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:19">got_picture</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><call pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:34">avcodec_get_frame_defaults</name><argument_list pos:start="61:35" pos:end="61:44">(<argument pos:start="61:36" pos:end="61:43"><expr pos:start="61:36" pos:end="61:43"><operator pos:start="61:36" pos:end="61:36">&amp;</operator><name pos:start="61:37" pos:end="61:43">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="63:9" pos:end="83:9">switch<condition pos:start="63:15" pos:end="63:37">(<expr pos:start="63:16" pos:end="63:36"><name pos:start="63:16" pos:end="63:36"><name pos:start="63:16" pos:end="63:17">st</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">codec</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:36">codec_type</name></name></expr>)</condition> <block pos:start="63:39" pos:end="83:9">{<block_content pos:start="65:9" pos:end="81:18">

        <case pos:start="65:9" pos:end="65:32">case <expr pos:start="65:14" pos:end="65:31"><name pos:start="65:14" pos:end="65:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="69:60"><expr pos:start="67:13" pos:end="69:59"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="69:59"><name pos:start="67:19" pos:end="67:39">avcodec_decode_video2</name><argument_list pos:start="67:40" pos:end="69:59">(<argument pos:start="67:41" pos:end="67:49"><expr pos:start="67:41" pos:end="67:49"><name pos:start="67:41" pos:end="67:49"><name pos:start="67:41" pos:end="67:42">st</name><operator pos:start="67:43" pos:end="67:44">-&gt;</operator><name pos:start="67:45" pos:end="67:49">codec</name></name></expr></argument>, <argument pos:start="67:52" pos:end="67:59"><expr pos:start="67:52" pos:end="67:59"><operator pos:start="67:52" pos:end="67:52">&amp;</operator><name pos:start="67:53" pos:end="67:59">picture</name></expr></argument>,

                                        <argument pos:start="69:41" pos:end="69:52"><expr pos:start="69:41" pos:end="69:52"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:52">got_picture</name></expr></argument>, <argument pos:start="69:55" pos:end="69:58"><expr pos:start="69:55" pos:end="69:58"><operator pos:start="69:55" pos:end="69:55">&amp;</operator><name pos:start="69:56" pos:end="69:58">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:32">case <expr pos:start="73:14" pos:end="73:31"><name pos:start="73:14" pos:end="73:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:81"><expr pos:start="75:13" pos:end="75:80"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">=</operator> <call pos:start="75:19" pos:end="75:80"><name pos:start="75:19" pos:end="75:39">avcodec_decode_audio4</name><argument_list pos:start="75:40" pos:end="75:80">(<argument pos:start="75:41" pos:end="75:49"><expr pos:start="75:41" pos:end="75:49"><name pos:start="75:41" pos:end="75:49"><name pos:start="75:41" pos:end="75:42">st</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:49">codec</name></name></expr></argument>, <argument pos:start="75:52" pos:end="75:59"><expr pos:start="75:52" pos:end="75:59"><operator pos:start="75:52" pos:end="75:52">&amp;</operator><name pos:start="75:53" pos:end="75:59">picture</name></expr></argument>, <argument pos:start="75:62" pos:end="75:73"><expr pos:start="75:62" pos:end="75:73"><operator pos:start="75:62" pos:end="75:62">&amp;</operator><name pos:start="75:63" pos:end="75:73">got_picture</name></expr></argument>, <argument pos:start="75:76" pos:end="75:79"><expr pos:start="75:76" pos:end="75:79"><operator pos:start="75:76" pos:end="75:76">&amp;</operator><name pos:start="75:77" pos:end="75:79">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <default pos:start="79:9" pos:end="79:16">default:</default>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="85:9" pos:end="97:9"><if pos:start="85:9" pos:end="97:9">if <condition pos:start="85:12" pos:end="85:21">(<expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:18">&gt;=</operator> <literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>)</condition> <block pos:start="85:23" pos:end="97:9">{<block_content pos:start="87:13" pos:end="95:36">

            <if_stmt pos:start="87:13" pos:end="89:46"><if pos:start="87:13" pos:end="89:46">if <condition pos:start="87:16" pos:end="87:28">(<expr pos:start="87:17" pos:end="87:27"><name pos:start="87:17" pos:end="87:27">got_picture</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:46"><block_content pos:start="89:17" pos:end="89:46">

                <expr_stmt pos:start="89:17" pos:end="89:46"><expr pos:start="89:17" pos:end="89:45"><name pos:start="89:17" pos:end="89:43"><name pos:start="89:17" pos:end="89:18">st</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:24">info</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:43">nb_decoded_frames</name></name><operator pos:start="89:44" pos:end="89:45">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:28"><expr pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:20"><name pos:start="91:13" pos:end="91:15">pkt</name><operator pos:start="91:16" pos:end="91:16">.</operator><name pos:start="91:17" pos:end="91:20">data</name></name> <operator pos:start="91:22" pos:end="91:23">+=</operator> <name pos:start="91:25" pos:end="91:27">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:28"><expr pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:15">pkt</name><operator pos:start="93:16" pos:end="93:16">.</operator><name pos:start="93:17" pos:end="93:20">size</name></name> <operator pos:start="93:22" pos:end="93:23">-=</operator> <name pos:start="93:25" pos:end="93:27">ret</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:36"><expr pos:start="95:13" pos:end="95:35"><name pos:start="95:13" pos:end="95:15">ret</name>       <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:35">got_picture</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="101:5" pos:end="101:15">return <expr pos:start="101:12" pos:end="101:14"><name pos:start="101:12" pos:end="101:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
