<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9463.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_parse_block</name><parameter_list pos:start="1:32" pos:end="9:52">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:52">MatroskaDemuxContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">matroska</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:40"><decl pos:start="3:33" pos:end="3:40"><type pos:start="3:33" pos:end="3:40"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:40">size</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:53"><decl pos:start="3:43" pos:end="3:53"><type pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:49">int64_t</name></type> <name pos:start="3:51" pos:end="3:53">pos</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:76"><decl pos:start="3:56" pos:end="3:76"><type pos:start="3:56" pos:end="3:76"><name pos:start="3:56" pos:end="3:63">uint64_t</name></type> <name pos:start="3:65" pos:end="3:76">cluster_time</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:55"><decl pos:start="5:33" pos:end="5:55"><type pos:start="5:33" pos:end="5:55"><name pos:start="5:33" pos:end="5:40">uint64_t</name></type> <name pos:start="5:42" pos:end="5:55">block_duration</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:72"><decl pos:start="5:58" pos:end="5:72"><type pos:start="5:58" pos:end="5:72"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:72">is_keyframe</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:51"><decl pos:start="7:33" pos:end="7:51"><type pos:start="7:33" pos:end="7:51"><name pos:start="7:33" pos:end="7:39">uint8_t</name> <modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:51">additional</name></decl></parameter>, <parameter pos:start="7:54" pos:end="7:75"><decl pos:start="7:54" pos:end="7:75"><type pos:start="7:54" pos:end="7:75"><name pos:start="7:54" pos:end="7:61">uint64_t</name></type> <name pos:start="7:63" pos:end="7:75">additional_id</name></decl></parameter>, <parameter pos:start="7:78" pos:end="7:96"><decl pos:start="7:78" pos:end="7:96"><type pos:start="7:78" pos:end="7:96"><name pos:start="7:78" pos:end="7:80">int</name></type> <name pos:start="7:82" pos:end="7:96">additional_size</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:51"><decl pos:start="9:33" pos:end="9:51"><type pos:start="9:33" pos:end="9:51"><name pos:start="9:33" pos:end="9:39">int64_t</name></type> <name pos:start="9:41" pos:end="9:51">cluster_pos</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="225:1">{<block_content pos:start="13:5" pos:end="223:15">

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:21">timecode</name> <init pos:start="13:23" pos:end="13:38">= <expr pos:start="13:25" pos:end="13:38"><name pos:start="13:25" pos:end="13:38">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">MatroskaTrack</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">res</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">AVStream</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int16_t</name></type> <name pos:start="21:13" pos:end="21:22">block_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:30"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">uint32_t</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:23">lace_size</name> <init pos:start="23:25" pos:end="23:30">= <expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">n</name></decl>, <decl pos:start="25:12" pos:end="25:16"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:12" pos:end="25:16">flags</name></decl>, <decl pos:start="25:19" pos:end="25:27"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:19" pos:end="25:23">laces</name> <init pos:start="25:25" pos:end="25:27">= <expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint64_t</name></type> <name pos:start="27:14" pos:end="27:16">num</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:68">(<expr pos:start="31:9" pos:end="31:67"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:10">n</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:62"><name pos:start="31:14" pos:end="31:34">matroska_ebmlnum_uint</name><argument_list pos:start="31:35" pos:end="31:62">(<argument pos:start="31:36" pos:end="31:43"><expr pos:start="31:36" pos:end="31:43"><name pos:start="31:36" pos:end="31:43">matroska</name></expr></argument>, <argument pos:start="31:46" pos:end="31:49"><expr pos:start="31:46" pos:end="31:49"><name pos:start="31:46" pos:end="31:49">data</name></expr></argument>, <argument pos:start="31:52" pos:end="31:55"><expr pos:start="31:52" pos:end="31:55"><name pos:start="31:52" pos:end="31:55">size</name></expr></argument>, <argument pos:start="31:58" pos:end="31:61"><expr pos:start="31:58" pos:end="31:61"><operator pos:start="31:58" pos:end="31:58">&amp;</operator><name pos:start="31:59" pos:end="31:61">num</name></expr></argument>)</argument_list></call><operator pos:start="31:63" pos:end="31:63">)</operator> <operator pos:start="31:65" pos:end="31:65">&lt;</operator> <literal type="number" pos:start="31:67" pos:end="31:67">0</literal></expr>)</condition> <block pos:start="31:70" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><call pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:70">(<argument pos:start="33:16" pos:end="33:28"><expr pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:28"><name pos:start="33:16" pos:end="33:23">matroska</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:28">ctx</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:42"><expr pos:start="33:31" pos:end="33:42"><name pos:start="33:31" pos:end="33:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:45" pos:end="33:69"><expr pos:start="33:45" pos:end="33:69"><literal type="string" pos:start="33:45" pos:end="33:69">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">n</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">data</name> <operator pos:start="39:10" pos:end="39:11">+=</operator> <name pos:start="39:13" pos:end="39:13">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:14"><expr pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:8">size</name> <operator pos:start="41:10" pos:end="41:11">-=</operator> <name pos:start="41:13" pos:end="41:13">n</name></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:9">track</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:53"><name pos:start="45:13" pos:end="45:38">matroska_find_track_by_num</name><argument_list pos:start="45:39" pos:end="45:53">(<argument pos:start="45:40" pos:end="45:47"><expr pos:start="45:40" pos:end="45:47"><name pos:start="45:40" pos:end="45:47">matroska</name></expr></argument>, <argument pos:start="45:50" pos:end="45:52"><expr pos:start="45:50" pos:end="45:52"><name pos:start="45:50" pos:end="45:52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="57:17"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:33">(<expr pos:start="47:9" pos:end="47:32"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:14">track</name> <operator pos:start="47:16" pos:end="47:17">||</operator> <operator pos:start="47:19" pos:end="47:19">!</operator><name pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:24">track</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:32">stream</name></name></expr>)</condition> <block pos:start="47:35" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:35">

        <expr_stmt pos:start="49:9" pos:end="51:67"><expr pos:start="49:9" pos:end="51:66"><call pos:start="49:9" pos:end="51:66"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:66">(<argument pos:start="49:16" pos:end="49:28"><expr pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:28"><name pos:start="49:16" pos:end="49:23">matroska</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">ctx</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:41"><expr pos:start="49:31" pos:end="49:41"><name pos:start="49:31" pos:end="49:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="51:16" pos:end="51:54"><expr pos:start="51:16" pos:end="51:54"><literal type="string" pos:start="51:16" pos:end="51:33">"Invalid stream %"</literal><name pos:start="51:34" pos:end="51:39">PRIu64</name><literal type="string" pos:start="51:40" pos:end="51:54">" or size %u\n"</literal></expr></argument>, <argument pos:start="51:57" pos:end="51:59"><expr pos:start="51:57" pos:end="51:59"><name pos:start="51:57" pos:end="51:59">num</name></expr></argument>, <argument pos:start="51:62" pos:end="51:65"><expr pos:start="51:62" pos:end="51:65"><name pos:start="51:62" pos:end="51:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:35">return <expr pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="57:17">else if <condition pos:start="55:15" pos:end="55:25">(<expr pos:start="55:16" pos:end="55:24"><name pos:start="55:16" pos:end="55:19">size</name> <operator pos:start="55:21" pos:end="55:22">&lt;=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">3</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:23"><expr pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:6">st</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <name pos:start="59:10" pos:end="59:22"><name pos:start="59:10" pos:end="59:14">track</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">stream</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:19"><if pos:start="61:5" pos:end="63:19">if <condition pos:start="61:8" pos:end="61:37">(<expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:19">discard</name></name> <operator pos:start="61:21" pos:end="61:22">&gt;=</operator> <name pos:start="61:24" pos:end="61:36">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:49"><expr pos:start="65:5" pos:end="65:48"><call pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:14">av_assert1</name><argument_list pos:start="65:15" pos:end="65:48">(<argument pos:start="65:16" pos:end="65:47"><expr pos:start="65:16" pos:end="65:47"><name pos:start="65:16" pos:end="65:29">block_duration</name> <operator pos:start="65:31" pos:end="65:32">!=</operator> <name pos:start="65:34" pos:end="65:47">AV_NOPTS_VALUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:14">block_time</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <call pos:start="69:18" pos:end="69:30"><name pos:start="69:18" pos:end="69:24">AV_RB16</name><argument_list pos:start="69:25" pos:end="69:30">(<argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><name pos:start="69:26" pos:end="69:29">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:14"><expr pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:8">data</name> <operator pos:start="71:10" pos:end="71:11">+=</operator> <literal type="number" pos:start="71:13" pos:end="71:13">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:9">flags</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <operator pos:start="73:13" pos:end="73:13">*</operator><name pos:start="73:14" pos:end="73:17">data</name><operator pos:start="73:18" pos:end="73:19">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:14"><expr pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:8">size</name> <operator pos:start="75:10" pos:end="75:11">-=</operator> <literal type="number" pos:start="75:13" pos:end="75:13">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:57"><if pos:start="77:5" pos:end="79:57">if <condition pos:start="77:8" pos:end="77:26">(<expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:19">is_keyframe</name> <operator pos:start="77:21" pos:end="77:22">==</operator> <operator pos:start="77:24" pos:end="77:24">-</operator><literal type="number" pos:start="77:25" pos:end="77:25">1</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:57"><block_content pos:start="79:9" pos:end="79:57">

        <expr_stmt pos:start="79:9" pos:end="79:57"><expr pos:start="79:9" pos:end="79:56"><name pos:start="79:9" pos:end="79:19">is_keyframe</name> <operator pos:start="79:21" pos:end="79:21">=</operator> <ternary pos:start="79:23" pos:end="79:56"><condition pos:start="79:23" pos:end="79:36"><expr pos:start="79:23" pos:end="79:34"><name pos:start="79:23" pos:end="79:27">flags</name> <operator pos:start="79:29" pos:end="79:29">&amp;</operator> <literal type="number" pos:start="79:31" pos:end="79:34">0x80</literal></expr> ?</condition><then pos:start="79:38" pos:end="79:52"> <expr pos:start="79:38" pos:end="79:52"><name pos:start="79:38" pos:end="79:52">AV_PKT_FLAG_KEY</name></expr> </then><else pos:start="79:54" pos:end="79:56">: <expr pos:start="79:56" pos:end="79:56"><literal type="number" pos:start="79:56" pos:end="79:56">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="99:5"><if pos:start="83:5" pos:end="99:5">if <condition pos:start="83:8" pos:end="85:60">(<expr pos:start="83:9" pos:end="85:59"><name pos:start="83:9" pos:end="83:20">cluster_time</name> <operator pos:start="83:22" pos:end="83:23">!=</operator> <operator pos:start="83:25" pos:end="83:25">(</operator><name pos:start="83:26" pos:end="83:33">uint64_t</name><operator pos:start="83:34" pos:end="83:34">)</operator><operator pos:start="83:35" pos:end="83:35">-</operator><literal type="number" pos:start="83:36" pos:end="83:36">1</literal>

        <operator pos:start="85:9" pos:end="85:10">&amp;&amp;</operator> <operator pos:start="85:12" pos:end="85:12">(</operator><name pos:start="85:13" pos:end="85:22">block_time</name> <operator pos:start="85:24" pos:end="85:25">&gt;=</operator> <literal type="number" pos:start="85:27" pos:end="85:27">0</literal> <operator pos:start="85:29" pos:end="85:30">||</operator> <name pos:start="85:32" pos:end="85:43">cluster_time</name> <operator pos:start="85:45" pos:end="85:46">&gt;=</operator> <operator pos:start="85:48" pos:end="85:48">-</operator><name pos:start="85:49" pos:end="85:58">block_time</name><operator pos:start="85:59" pos:end="85:59">)</operator></expr>)</condition> <block pos:start="85:62" pos:end="99:5">{<block_content pos:start="87:9" pos:end="97:80">

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:16">timecode</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:31">cluster_time</name> <operator pos:start="87:33" pos:end="87:33">+</operator> <name pos:start="87:35" pos:end="87:44">block_time</name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="93:28"><if pos:start="89:9" pos:end="93:28">if <condition pos:start="89:12" pos:end="91:46">(<expr pos:start="89:13" pos:end="91:45"><name pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:17">track</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:23">type</name></name> <operator pos:start="89:25" pos:end="89:26">==</operator> <name pos:start="89:28" pos:end="89:55">MATROSKA_TRACK_TYPE_SUBTITLE</name>

            <operator pos:start="91:13" pos:end="91:14">&amp;&amp;</operator> <name pos:start="91:16" pos:end="91:23">timecode</name> <operator pos:start="91:25" pos:end="91:25">&lt;</operator> <name pos:start="91:27" pos:end="91:45"><name pos:start="91:27" pos:end="91:31">track</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:45">end_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:28"><block_content pos:start="93:13" pos:end="93:28">

            <expr_stmt pos:start="93:13" pos:end="93:28"><expr pos:start="93:13" pos:end="93:27"><name pos:start="93:13" pos:end="93:23">is_keyframe</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <literal type="number" pos:start="93:27" pos:end="93:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="93:31" pos:end="93:75">/* overlapping subtitles are not key frame */</comment>

        <if_stmt pos:start="95:9" pos:end="97:80"><if pos:start="95:9" pos:end="97:80">if <condition pos:start="95:12" pos:end="95:24">(<expr pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:23">is_keyframe</name></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:80"><block_content pos:start="97:13" pos:end="97:80">

            <expr_stmt pos:start="97:13" pos:end="97:80"><expr pos:start="97:13" pos:end="97:79"><call pos:start="97:13" pos:end="97:79"><name pos:start="97:13" pos:end="97:30">av_add_index_entry</name><argument_list pos:start="97:31" pos:end="97:79">(<argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><name pos:start="97:32" pos:end="97:33">st</name></expr></argument>, <argument pos:start="97:36" pos:end="97:46"><expr pos:start="97:36" pos:end="97:46"><name pos:start="97:36" pos:end="97:46">cluster_pos</name></expr></argument>, <argument pos:start="97:49" pos:end="97:56"><expr pos:start="97:49" pos:end="97:56"><name pos:start="97:49" pos:end="97:56">timecode</name></expr></argument>, <argument pos:start="97:59" pos:end="97:59"><expr pos:start="97:59" pos:end="97:59"><literal type="number" pos:start="97:59" pos:end="97:59">0</literal></expr></argument>,<argument pos:start="97:61" pos:end="97:61"><expr pos:start="97:61" pos:end="97:61"><literal type="number" pos:start="97:61" pos:end="97:61">0</literal></expr></argument>,<argument pos:start="97:63" pos:end="97:78"><expr pos:start="97:63" pos:end="97:78"><name pos:start="97:63" pos:end="97:78">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="121:5"><if pos:start="103:5" pos:end="121:5">if <condition pos:start="103:8" pos:end="103:82">(<expr pos:start="103:9" pos:end="103:81"><name pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:16">matroska</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:34">skip_to_keyframe</name></name> <operator pos:start="103:36" pos:end="103:37">&amp;&amp;</operator> <name pos:start="103:39" pos:end="103:49"><name pos:start="103:39" pos:end="103:43">track</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:49">type</name></name> <operator pos:start="103:51" pos:end="103:52">!=</operator> <name pos:start="103:54" pos:end="103:81">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="103:84" pos:end="121:5">{<block_content pos:start="105:9" pos:end="119:43">

        <if_stmt pos:start="105:9" pos:end="107:23"><if pos:start="105:9" pos:end="107:23">if <condition pos:start="105:12" pos:end="105:50">(<expr pos:start="105:13" pos:end="105:49"><name pos:start="105:13" pos:end="105:20">timecode</name> <operator pos:start="105:22" pos:end="105:22">&lt;</operator> <name pos:start="105:24" pos:end="105:49"><name pos:start="105:24" pos:end="105:31">matroska</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:49">skip_to_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:23"><block_content pos:start="107:13" pos:end="107:23">

            <return pos:start="107:13" pos:end="107:23">return <expr pos:start="107:20" pos:end="107:22"><name pos:start="107:20" pos:end="107:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:34">(<expr pos:start="109:13" pos:end="109:33"><operator pos:start="109:13" pos:end="109:13">!</operator><name pos:start="109:14" pos:end="109:33"><name pos:start="109:14" pos:end="109:15">st</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:33">skip_to_keyframe</name></name></expr>)</condition> <block pos:start="109:36" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:43">

            <expr_stmt pos:start="111:13" pos:end="111:101"><expr pos:start="111:13" pos:end="111:100"><call pos:start="111:13" pos:end="111:100"><name pos:start="111:13" pos:end="111:18">av_log</name><argument_list pos:start="111:19" pos:end="111:100">(<argument pos:start="111:20" pos:end="111:32"><expr pos:start="111:20" pos:end="111:32"><name pos:start="111:20" pos:end="111:32"><name pos:start="111:20" pos:end="111:27">matroska</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:32">ctx</name></name></expr></argument>, <argument pos:start="111:35" pos:end="111:46"><expr pos:start="111:35" pos:end="111:46"><name pos:start="111:35" pos:end="111:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:49" pos:end="111:99"><expr pos:start="111:49" pos:end="111:99"><literal type="string" pos:start="111:49" pos:end="111:99">"File is broken, keyframes not correctly marked!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:43"><expr pos:start="113:13" pos:end="113:42"><name pos:start="113:13" pos:end="113:38"><name pos:start="113:13" pos:end="113:20">matroska</name><operator pos:start="113:21" pos:end="113:22">-&gt;</operator><name pos:start="113:23" pos:end="113:38">skip_to_keyframe</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <literal type="number" pos:start="113:42" pos:end="113:42">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="117:9" pos:end="119:43"><if pos:start="117:9" pos:end="119:43">if <condition pos:start="117:12" pos:end="117:24">(<expr pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:23">is_keyframe</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:43"><block_content pos:start="119:13" pos:end="119:43">

            <expr_stmt pos:start="119:13" pos:end="119:43"><expr pos:start="119:13" pos:end="119:42"><name pos:start="119:13" pos:end="119:38"><name pos:start="119:13" pos:end="119:20">matroska</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:38">skip_to_keyframe</name></name> <operator pos:start="119:40" pos:end="119:40">=</operator> <literal type="number" pos:start="119:42" pos:end="119:42">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="127:51"><expr pos:start="125:5" pos:end="127:50"><name pos:start="125:5" pos:end="125:7">res</name> <operator pos:start="125:9" pos:end="125:9">=</operator> <call pos:start="125:11" pos:end="127:50"><name pos:start="125:11" pos:end="125:30">matroska_parse_laces</name><argument_list pos:start="125:31" pos:end="127:50">(<argument pos:start="125:32" pos:end="125:39"><expr pos:start="125:32" pos:end="125:39"><name pos:start="125:32" pos:end="125:39">matroska</name></expr></argument>, <argument pos:start="125:42" pos:end="125:46"><expr pos:start="125:42" pos:end="125:46"><operator pos:start="125:42" pos:end="125:42">&amp;</operator><name pos:start="125:43" pos:end="125:46">data</name></expr></argument>, <argument pos:start="125:49" pos:end="125:52"><expr pos:start="125:49" pos:end="125:52"><name pos:start="125:49" pos:end="125:52">size</name></expr></argument>, <argument pos:start="125:55" pos:end="125:73"><expr pos:start="125:55" pos:end="125:73"><operator pos:start="125:55" pos:end="125:55">(</operator><name pos:start="125:56" pos:end="125:60">flags</name> <operator pos:start="125:62" pos:end="125:62">&amp;</operator> <literal type="number" pos:start="125:64" pos:end="125:67">0x06</literal><operator pos:start="125:68" pos:end="125:68">)</operator> <operator pos:start="125:70" pos:end="125:71">&gt;&gt;</operator> <literal type="number" pos:start="125:73" pos:end="125:73">1</literal></expr></argument>,

                               <argument pos:start="127:32" pos:end="127:41"><expr pos:start="127:32" pos:end="127:41"><operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:41">lace_size</name></expr></argument>, <argument pos:start="127:44" pos:end="127:49"><expr pos:start="127:44" pos:end="127:49"><operator pos:start="127:44" pos:end="127:44">&amp;</operator><name pos:start="127:45" pos:end="127:49">laces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="133:17"><if pos:start="131:5" pos:end="133:17">if <condition pos:start="131:8" pos:end="131:12">(<expr pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">res</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:17"><block_content pos:start="133:9" pos:end="133:17">

        <goto pos:start="133:9" pos:end="133:17">goto <name pos:start="133:14" pos:end="133:16">end</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="139:80"><if pos:start="137:5" pos:end="139:80">if <condition pos:start="137:8" pos:end="137:24">(<expr pos:start="137:9" pos:end="137:23"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:23">block_duration</name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:80"><block_content pos:start="139:9" pos:end="139:80">

        <expr_stmt pos:start="139:9" pos:end="139:80"><expr pos:start="139:9" pos:end="139:79"><name pos:start="139:9" pos:end="139:22">block_duration</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <name pos:start="139:26" pos:end="139:48"><name pos:start="139:26" pos:end="139:30">track</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:48">default_duration</name></name> <operator pos:start="139:50" pos:end="139:50">*</operator> <name pos:start="139:52" pos:end="139:56">laces</name> <operator pos:start="139:58" pos:end="139:58">/</operator> <name pos:start="139:60" pos:end="139:79"><name pos:start="139:60" pos:end="139:67">matroska</name><operator pos:start="139:68" pos:end="139:69">-&gt;</operator><name pos:start="139:70" pos:end="139:79">time_scale</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="147:66"><if pos:start="143:5" pos:end="147:66">if <condition pos:start="143:8" pos:end="143:89">(<expr pos:start="143:9" pos:end="143:88"><name pos:start="143:9" pos:end="143:20">cluster_time</name> <operator pos:start="143:22" pos:end="143:23">!=</operator> <operator pos:start="143:25" pos:end="143:25">(</operator><name pos:start="143:26" pos:end="143:33">uint64_t</name><operator pos:start="143:34" pos:end="143:34">)</operator><operator pos:start="143:35" pos:end="143:35">-</operator><literal type="number" pos:start="143:36" pos:end="143:36">1</literal> <operator pos:start="143:38" pos:end="143:39">&amp;&amp;</operator> <operator pos:start="143:41" pos:end="143:41">(</operator><name pos:start="143:42" pos:end="143:51">block_time</name> <operator pos:start="143:53" pos:end="143:54">&gt;=</operator> <literal type="number" pos:start="143:56" pos:end="143:56">0</literal> <operator pos:start="143:58" pos:end="143:59">||</operator> <name pos:start="143:61" pos:end="143:72">cluster_time</name> <operator pos:start="143:74" pos:end="143:75">&gt;=</operator> <operator pos:start="143:77" pos:end="143:77">-</operator><name pos:start="143:78" pos:end="143:87">block_time</name><operator pos:start="143:88" pos:end="143:88">)</operator></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="147:66"><block_content pos:start="145:9" pos:end="147:66">

        <expr_stmt pos:start="145:9" pos:end="147:66"><expr pos:start="145:9" pos:end="147:65"><name pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:13">track</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:27">end_timecode</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator>

            <call pos:start="147:13" pos:end="147:65"><name pos:start="147:13" pos:end="147:17">FFMAX</name><argument_list pos:start="147:18" pos:end="147:65">(<argument pos:start="147:19" pos:end="147:37"><expr pos:start="147:19" pos:end="147:37"><name pos:start="147:19" pos:end="147:37"><name pos:start="147:19" pos:end="147:23">track</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:37">end_timecode</name></name></expr></argument>, <argument pos:start="147:40" pos:end="147:64"><expr pos:start="147:40" pos:end="147:64"><name pos:start="147:40" pos:end="147:47">timecode</name> <operator pos:start="147:49" pos:end="147:49">+</operator> <name pos:start="147:51" pos:end="147:64">block_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="151:5" pos:end="215:5">for <control pos:start="151:9" pos:end="151:31">(<init pos:start="151:10" pos:end="151:15"><expr pos:start="151:10" pos:end="151:14"><name pos:start="151:10" pos:end="151:10">n</name> <operator pos:start="151:12" pos:end="151:12">=</operator> <literal type="number" pos:start="151:14" pos:end="151:14">0</literal></expr>;</init> <condition pos:start="151:17" pos:end="151:26"><expr pos:start="151:17" pos:end="151:25"><name pos:start="151:17" pos:end="151:17">n</name> <operator pos:start="151:19" pos:end="151:19">&lt;</operator> <name pos:start="151:21" pos:end="151:25">laces</name></expr>;</condition> <incr pos:start="151:28" pos:end="151:30"><expr pos:start="151:28" pos:end="151:30"><name pos:start="151:28" pos:end="151:28">n</name><operator pos:start="151:29" pos:end="151:30">++</operator></expr></incr>)</control> <block pos:start="151:33" pos:end="215:5">{<block_content pos:start="153:9" pos:end="213:29">

        <decl_stmt pos:start="153:9" pos:end="153:88"><decl pos:start="153:9" pos:end="153:87"><type pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:15">int64_t</name></type> <name pos:start="153:17" pos:end="153:29">lace_duration</name> <init pos:start="153:31" pos:end="153:87">= <expr pos:start="153:33" pos:end="153:87"><name pos:start="153:33" pos:end="153:46">block_duration</name><operator pos:start="153:47" pos:end="153:47">*</operator><operator pos:start="153:48" pos:end="153:48">(</operator><name pos:start="153:49" pos:end="153:49">n</name><operator pos:start="153:50" pos:end="153:50">+</operator><literal type="number" pos:start="153:51" pos:end="153:51">1</literal><operator pos:start="153:52" pos:end="153:52">)</operator> <operator pos:start="153:54" pos:end="153:54">/</operator> <name pos:start="153:56" pos:end="153:60">laces</name> <operator pos:start="153:62" pos:end="153:62">-</operator> <name pos:start="153:64" pos:end="153:77">block_duration</name><operator pos:start="153:78" pos:end="153:78">*</operator><name pos:start="153:79" pos:end="153:79">n</name> <operator pos:start="153:81" pos:end="153:81">/</operator> <name pos:start="153:83" pos:end="153:87">laces</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:32">(<expr pos:start="157:13" pos:end="157:31"><name pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:21">lace_size</name><index pos:start="157:22" pos:end="157:24">[<expr pos:start="157:23" pos:end="157:23"><name pos:start="157:23" pos:end="157:23">n</name></expr>]</index></name> <operator pos:start="157:26" pos:end="157:26">&gt;</operator> <name pos:start="157:28" pos:end="157:31">size</name></expr>)</condition> <block pos:start="157:34" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:18">

            <expr_stmt pos:start="159:13" pos:end="159:73"><expr pos:start="159:13" pos:end="159:72"><call pos:start="159:13" pos:end="159:72"><name pos:start="159:13" pos:end="159:18">av_log</name><argument_list pos:start="159:19" pos:end="159:72">(<argument pos:start="159:20" pos:end="159:32"><expr pos:start="159:20" pos:end="159:32"><name pos:start="159:20" pos:end="159:32"><name pos:start="159:20" pos:end="159:27">matroska</name><operator pos:start="159:28" pos:end="159:29">-&gt;</operator><name pos:start="159:30" pos:end="159:32">ctx</name></name></expr></argument>, <argument pos:start="159:35" pos:end="159:46"><expr pos:start="159:35" pos:end="159:46"><name pos:start="159:35" pos:end="159:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:49" pos:end="159:71"><expr pos:start="159:49" pos:end="159:71"><literal type="string" pos:start="159:49" pos:end="159:71">"Invalid packet size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="167:9" pos:end="203:9"><if pos:start="167:9" pos:end="189:9">if <condition pos:start="167:12" pos:end="175:68">(<expr pos:start="167:13" pos:end="175:67"><operator pos:start="167:13" pos:end="167:13">(</operator><name pos:start="167:14" pos:end="167:32"><name pos:start="167:14" pos:end="167:15">st</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:22">codec</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:32">codec_id</name></name> <operator pos:start="167:34" pos:end="167:35">==</operator> <name pos:start="167:37" pos:end="167:54">AV_CODEC_ID_RA_288</name> <operator pos:start="167:56" pos:end="167:57">||</operator>

             <name pos:start="169:14" pos:end="169:32"><name pos:start="169:14" pos:end="169:15">st</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:22">codec</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:32">codec_id</name></name> <operator pos:start="169:34" pos:end="169:35">==</operator> <name pos:start="169:37" pos:end="169:52">AV_CODEC_ID_COOK</name> <operator pos:start="169:54" pos:end="169:55">||</operator>

             <name pos:start="171:14" pos:end="171:32"><name pos:start="171:14" pos:end="171:15">st</name><operator pos:start="171:16" pos:end="171:17">-&gt;</operator><name pos:start="171:18" pos:end="171:22">codec</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:32">codec_id</name></name> <operator pos:start="171:34" pos:end="171:35">==</operator> <name pos:start="171:37" pos:end="171:52">AV_CODEC_ID_SIPR</name> <operator pos:start="171:54" pos:end="171:55">||</operator>

             <name pos:start="173:14" pos:end="173:32"><name pos:start="173:14" pos:end="173:15">st</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:22">codec</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:32">codec_id</name></name> <operator pos:start="173:34" pos:end="173:35">==</operator> <name pos:start="173:37" pos:end="173:54">AV_CODEC_ID_ATRAC3</name><operator pos:start="173:55" pos:end="173:55">)</operator> <operator pos:start="173:57" pos:end="173:58">&amp;&amp;</operator>

             <name pos:start="175:14" pos:end="175:35"><name pos:start="175:14" pos:end="175:15">st</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:22">codec</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:35">block_align</name></name> <operator pos:start="175:37" pos:end="175:38">&amp;&amp;</operator> <name pos:start="175:40" pos:end="175:67"><name pos:start="175:40" pos:end="175:44">track</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:51">audio</name><operator pos:start="175:52" pos:end="175:52">.</operator><name pos:start="175:53" pos:end="175:67">sub_packet_size</name></name></expr>)</condition> <block pos:start="175:70" pos:end="189:9">{<block_content pos:start="179:13" pos:end="185:25">



            <expr_stmt pos:start="179:13" pos:end="181:57"><expr pos:start="179:13" pos:end="181:56"><name pos:start="179:13" pos:end="179:15">res</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <call pos:start="179:19" pos:end="181:56"><name pos:start="179:19" pos:end="179:41">matroska_parse_rm_audio</name><argument_list pos:start="179:42" pos:end="181:56">(<argument pos:start="179:43" pos:end="179:50"><expr pos:start="179:43" pos:end="179:50"><name pos:start="179:43" pos:end="179:50">matroska</name></expr></argument>, <argument pos:start="179:53" pos:end="179:57"><expr pos:start="179:53" pos:end="179:57"><name pos:start="179:53" pos:end="179:57">track</name></expr></argument>, <argument pos:start="179:60" pos:end="179:61"><expr pos:start="179:60" pos:end="179:61"><name pos:start="179:60" pos:end="179:61">st</name></expr></argument>, <argument pos:start="179:64" pos:end="179:67"><expr pos:start="179:64" pos:end="179:67"><name pos:start="179:64" pos:end="179:67">data</name></expr></argument>, <argument pos:start="179:70" pos:end="179:73"><expr pos:start="179:70" pos:end="179:73"><name pos:start="179:70" pos:end="179:73">size</name></expr></argument>,

                                          <argument pos:start="181:43" pos:end="181:50"><expr pos:start="181:43" pos:end="181:50"><name pos:start="181:43" pos:end="181:50">timecode</name></expr></argument>, <argument pos:start="181:53" pos:end="181:55"><expr pos:start="181:53" pos:end="181:55"><name pos:start="181:53" pos:end="181:55">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="183:13" pos:end="185:25"><if pos:start="183:13" pos:end="185:25">if <condition pos:start="183:16" pos:end="183:20">(<expr pos:start="183:17" pos:end="183:19"><name pos:start="183:17" pos:end="183:19">res</name></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:25"><block_content pos:start="185:17" pos:end="185:25">

                <goto pos:start="185:17" pos:end="185:25">goto <name pos:start="185:22" pos:end="185:24">end</name>;</goto></block_content></block></if></if_stmt>



        </block_content>}</block></if> <else pos:start="189:11" pos:end="203:9">else <block pos:start="189:16" pos:end="203:9">{<block_content pos:start="191:13" pos:end="201:25">

            <expr_stmt pos:start="191:13" pos:end="197:82"><expr pos:start="191:13" pos:end="197:81"><name pos:start="191:13" pos:end="191:15">res</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="197:81"><name pos:start="191:19" pos:end="191:38">matroska_parse_frame</name><argument_list pos:start="191:39" pos:end="197:81">(<argument pos:start="191:40" pos:end="191:47"><expr pos:start="191:40" pos:end="191:47"><name pos:start="191:40" pos:end="191:47">matroska</name></expr></argument>, <argument pos:start="191:50" pos:end="191:54"><expr pos:start="191:50" pos:end="191:54"><name pos:start="191:50" pos:end="191:54">track</name></expr></argument>, <argument pos:start="191:57" pos:end="191:58"><expr pos:start="191:57" pos:end="191:58"><name pos:start="191:57" pos:end="191:58">st</name></expr></argument>, <argument pos:start="191:61" pos:end="191:64"><expr pos:start="191:61" pos:end="191:64"><name pos:start="191:61" pos:end="191:64">data</name></expr></argument>, <argument pos:start="191:67" pos:end="191:78"><expr pos:start="191:67" pos:end="191:78"><name pos:start="191:67" pos:end="191:78"><name pos:start="191:67" pos:end="191:75">lace_size</name><index pos:start="191:76" pos:end="191:78">[<expr pos:start="191:77" pos:end="191:77"><name pos:start="191:77" pos:end="191:77">n</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="193:39" pos:end="193:46"><expr pos:start="193:39" pos:end="193:46"><name pos:start="193:39" pos:end="193:46">timecode</name></expr></argument>, <argument pos:start="193:49" pos:end="193:61"><expr pos:start="193:49" pos:end="193:61"><name pos:start="193:49" pos:end="193:61">lace_duration</name></expr></argument>,

                                      <argument pos:start="195:39" pos:end="195:41"><expr pos:start="195:39" pos:end="195:41"><name pos:start="195:39" pos:end="195:41">pos</name></expr></argument>, <argument pos:start="195:44" pos:end="195:62"><expr pos:start="195:44" pos:end="195:62"><ternary pos:start="195:44" pos:end="195:62"><condition pos:start="195:44" pos:end="195:46"><expr pos:start="195:44" pos:end="195:45"><operator pos:start="195:44" pos:end="195:44">!</operator><name pos:start="195:45" pos:end="195:45">n</name></expr>?</condition><then pos:start="195:48" pos:end="195:58"> <expr pos:start="195:48" pos:end="195:58"><name pos:start="195:48" pos:end="195:58">is_keyframe</name></expr> </then><else pos:start="195:60" pos:end="195:62">: <expr pos:start="195:62" pos:end="195:62"><literal type="number" pos:start="195:62" pos:end="195:62">0</literal></expr></else></ternary></expr></argument>,

                                      <argument pos:start="197:39" pos:end="197:48"><expr pos:start="197:39" pos:end="197:48"><name pos:start="197:39" pos:end="197:48">additional</name></expr></argument>, <argument pos:start="197:51" pos:end="197:63"><expr pos:start="197:51" pos:end="197:63"><name pos:start="197:51" pos:end="197:63">additional_id</name></expr></argument>, <argument pos:start="197:66" pos:end="197:80"><expr pos:start="197:66" pos:end="197:80"><name pos:start="197:66" pos:end="197:80">additional_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="201:25"><if pos:start="199:13" pos:end="201:25">if <condition pos:start="199:16" pos:end="199:20">(<expr pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:19">res</name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:25"><block_content pos:start="201:17" pos:end="201:25">

                <goto pos:start="201:17" pos:end="201:25">goto <name pos:start="201:22" pos:end="201:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="207:9" pos:end="209:81"><if pos:start="207:9" pos:end="209:81">if <condition pos:start="207:12" pos:end="207:39">(<expr pos:start="207:13" pos:end="207:38"><name pos:start="207:13" pos:end="207:20">timecode</name> <operator pos:start="207:22" pos:end="207:23">!=</operator> <name pos:start="207:25" pos:end="207:38">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:81"><block_content pos:start="209:13" pos:end="209:81">

            <expr_stmt pos:start="209:13" pos:end="209:81"><expr pos:start="209:13" pos:end="209:80"><name pos:start="209:13" pos:end="209:20">timecode</name> <operator pos:start="209:22" pos:end="209:22">=</operator> <ternary pos:start="209:24" pos:end="209:80"><condition pos:start="209:24" pos:end="209:38"><expr pos:start="209:24" pos:end="209:36"><name pos:start="209:24" pos:end="209:36">lace_duration</name></expr> ?</condition><then pos:start="209:40" pos:end="209:63"> <expr pos:start="209:40" pos:end="209:63"><name pos:start="209:40" pos:end="209:47">timecode</name> <operator pos:start="209:49" pos:end="209:49">+</operator> <name pos:start="209:51" pos:end="209:63">lace_duration</name></expr> </then><else pos:start="209:65" pos:end="209:80">: <expr pos:start="209:67" pos:end="209:80"><name pos:start="209:67" pos:end="209:80">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:29"><expr pos:start="211:9" pos:end="211:28"><name pos:start="211:9" pos:end="211:12">data</name> <operator pos:start="211:14" pos:end="211:15">+=</operator> <name pos:start="211:17" pos:end="211:28"><name pos:start="211:17" pos:end="211:25">lace_size</name><index pos:start="211:26" pos:end="211:28">[<expr pos:start="211:27" pos:end="211:27"><name pos:start="211:27" pos:end="211:27">n</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:29"><expr pos:start="213:9" pos:end="213:28"><name pos:start="213:9" pos:end="213:12">size</name> <operator pos:start="213:14" pos:end="213:15">-=</operator> <name pos:start="213:17" pos:end="213:28"><name pos:start="213:17" pos:end="213:25">lace_size</name><index pos:start="213:26" pos:end="213:28">[<expr pos:start="213:27" pos:end="213:27"><name pos:start="213:27" pos:end="213:27">n</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



<label pos:start="219:1" pos:end="219:4"><name pos:start="219:1" pos:end="219:3">end</name>:</label>

    <expr_stmt pos:start="221:5" pos:end="221:23"><expr pos:start="221:5" pos:end="221:22"><call pos:start="221:5" pos:end="221:22"><name pos:start="221:5" pos:end="221:11">av_free</name><argument_list pos:start="221:12" pos:end="221:22">(<argument pos:start="221:13" pos:end="221:21"><expr pos:start="221:13" pos:end="221:21"><name pos:start="221:13" pos:end="221:21">lace_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="223:5" pos:end="223:15">return <expr pos:start="223:12" pos:end="223:14"><name pos:start="223:12" pos:end="223:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
