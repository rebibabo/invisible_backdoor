<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9472.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">powerpc_set_compat</name><parameter_list pos:start="1:31" pos:end="3:58">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:37">Object</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">obj</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:51">Visitor</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">v</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:72"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">name</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:35">void</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:43">opaque</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:57"><decl pos:start="3:46" pos:end="3:57"><type pos:start="3:46" pos:end="3:57"><name pos:start="3:46" pos:end="3:50">Error</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:18">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:16">error</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:15">value</name> <init pos:start="9:17" pos:end="9:22">= <expr pos:start="9:19" pos:end="9:22"><name pos:start="9:19" pos:end="9:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">Property</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">prop</name> <init pos:start="11:20" pos:end="11:27">= <expr pos:start="11:22" pos:end="11:27"><name pos:start="11:22" pos:end="11:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:64"><decl pos:start="13:5" pos:end="13:63"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint32_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:24">max_compat</name> <init pos:start="13:26" pos:end="13:63">= <expr pos:start="13:28" pos:end="13:63"><call pos:start="13:28" pos:end="13:63"><name pos:start="13:28" pos:end="13:44">qdev_get_prop_ptr</name><argument_list pos:start="13:45" pos:end="13:63">(<argument pos:start="13:46" pos:end="13:56"><expr pos:start="13:46" pos:end="13:56"><call pos:start="13:46" pos:end="13:56"><name pos:start="13:46" pos:end="13:51">DEVICE</name><argument_list pos:start="13:52" pos:end="13:56">(<argument pos:start="13:53" pos:end="13:55"><expr pos:start="13:53" pos:end="13:55"><name pos:start="13:53" pos:end="13:55">obj</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:59" pos:end="13:62"><expr pos:start="13:59" pos:end="13:62"><name pos:start="13:59" pos:end="13:62">prop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:44"><expr pos:start="17:5" pos:end="17:43"><call pos:start="17:5" pos:end="17:43"><name pos:start="17:5" pos:end="17:18">visit_type_str</name><argument_list pos:start="17:19" pos:end="17:43">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">v</name></expr></argument>, <argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">name</name></expr></argument>, <argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><operator pos:start="17:29" pos:end="17:29">&amp;</operator><name pos:start="17:30" pos:end="17:34">value</name></expr></argument>, <argument pos:start="17:37" pos:end="17:42"><expr pos:start="17:37" pos:end="17:42"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:42">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:14">(<expr pos:start="19:9" pos:end="19:13"><name pos:start="19:9" pos:end="19:13">error</name></expr>)</condition> <block pos:start="19:16" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><call pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:23">error_propagate</name><argument_list pos:start="21:24" pos:end="21:36">(<argument pos:start="21:25" pos:end="21:28"><expr pos:start="21:25" pos:end="21:28"><name pos:start="21:25" pos:end="21:28">errp</name></expr></argument>, <argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:37">(<expr pos:start="29:9" pos:end="29:36"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:14">strcmp</name><argument_list pos:start="29:15" pos:end="29:31">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">value</name></expr></argument>, <argument pos:start="29:23" pos:end="29:30"><expr pos:start="29:23" pos:end="29:30"><literal type="string" pos:start="29:23" pos:end="29:30">"power6"</literal></expr></argument>)</argument_list></call> <operator pos:start="29:33" pos:end="29:34">==</operator> <literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>)</condition> <block pos:start="29:39" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:47">

        <expr_stmt pos:start="31:9" pos:end="31:47"><expr pos:start="31:9" pos:end="31:46"><operator pos:start="31:9" pos:end="31:9">*</operator><name pos:start="31:10" pos:end="31:19">max_compat</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:46">CPU_POWERPC_LOGICAL_2_05</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="37:5">else if <condition pos:start="33:15" pos:end="33:44">(<expr pos:start="33:16" pos:end="33:43"><call pos:start="33:16" pos:end="33:38"><name pos:start="33:16" pos:end="33:21">strcmp</name><argument_list pos:start="33:22" pos:end="33:38">(<argument pos:start="33:23" pos:end="33:27"><expr pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:27">value</name></expr></argument>, <argument pos:start="33:30" pos:end="33:37"><expr pos:start="33:30" pos:end="33:37"><literal type="string" pos:start="33:30" pos:end="33:37">"power7"</literal></expr></argument>)</argument_list></call> <operator pos:start="33:40" pos:end="33:41">==</operator> <literal type="number" pos:start="33:43" pos:end="33:43">0</literal></expr>)</condition> <block pos:start="33:46" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:47">

        <expr_stmt pos:start="35:9" pos:end="35:47"><expr pos:start="35:9" pos:end="35:46"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:19">max_compat</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:46">CPU_POWERPC_LOGICAL_2_06</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="41:5">else if <condition pos:start="37:15" pos:end="37:44">(<expr pos:start="37:16" pos:end="37:43"><call pos:start="37:16" pos:end="37:38"><name pos:start="37:16" pos:end="37:21">strcmp</name><argument_list pos:start="37:22" pos:end="37:38">(<argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27">value</name></expr></argument>, <argument pos:start="37:30" pos:end="37:37"><expr pos:start="37:30" pos:end="37:37"><literal type="string" pos:start="37:30" pos:end="37:37">"power8"</literal></expr></argument>)</argument_list></call> <operator pos:start="37:40" pos:end="37:41">==</operator> <literal type="number" pos:start="37:43" pos:end="37:43">0</literal></expr>)</condition> <block pos:start="37:46" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:47">

        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:19">max_compat</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:46">CPU_POWERPC_LOGICAL_2_07</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="45:5">else <block pos:start="41:12" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:69">

        <expr_stmt pos:start="43:9" pos:end="43:69"><expr pos:start="43:9" pos:end="43:68"><call pos:start="43:9" pos:end="43:68"><name pos:start="43:9" pos:end="43:18">error_setg</name><argument_list pos:start="43:19" pos:end="43:68">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">errp</name></expr></argument>, <argument pos:start="43:26" pos:end="43:60"><expr pos:start="43:26" pos:end="43:60"><literal type="string" pos:start="43:26" pos:end="43:60">"Invalid compatibility mode \"%s\""</literal></expr></argument>, <argument pos:start="43:63" pos:end="43:67"><expr pos:start="43:63" pos:end="43:67"><name pos:start="43:63" pos:end="43:67">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:18"><expr pos:start="49:5" pos:end="49:17"><call pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:10">g_free</name><argument_list pos:start="49:11" pos:end="49:17">(<argument pos:start="49:12" pos:end="49:16"><expr pos:start="49:12" pos:end="49:16"><name pos:start="49:12" pos:end="49:16">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
