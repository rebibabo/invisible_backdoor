<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1652.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vqf_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:18">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VqfContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:61"><decl pos:start="9:5" pos:end="9:60"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name> <init pos:start="9:14" pos:end="9:60">= <expr pos:start="9:16" pos:end="9:60"><operator pos:start="9:16" pos:end="9:16">(</operator><name pos:start="9:17" pos:end="9:32"><name pos:start="9:17" pos:end="9:17">c</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:32">frame_bit_len</name></name> <operator pos:start="9:34" pos:end="9:34">-</operator> <name pos:start="9:36" pos:end="9:52"><name pos:start="9:36" pos:end="9:36">c</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:52">remaining_bits</name></name> <operator pos:start="9:54" pos:end="9:54">+</operator> <literal type="number" pos:start="9:56" pos:end="9:56">7</literal><operator pos:start="9:57" pos:end="9:57">)</operator><operator pos:start="9:58" pos:end="9:59">&gt;&gt;</operator><literal type="number" pos:start="9:60" pos:end="9:60">3</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:28"><if pos:start="13:5" pos:end="15:28">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><call pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:21">av_new_packet</name><argument_list pos:start="13:22" pos:end="13:34">(<argument pos:start="13:23" pos:end="13:25"><expr pos:start="13:23" pos:end="13:25"><name pos:start="13:23" pos:end="13:25">pkt</name></expr></argument>, <argument pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:31">size</name><operator pos:start="13:32" pos:end="13:32">+</operator><literal type="number" pos:start="13:33" pos:end="13:33">2</literal></expr></argument>)</argument_list></call> <operator pos:start="13:36" pos:end="13:36">&lt;</operator> <literal type="number" pos:start="13:38" pos:end="13:38">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:28"><block_content pos:start="15:9" pos:end="15:28">

        <return pos:start="15:9" pos:end="15:28">return <expr pos:start="15:16" pos:end="15:27"><call pos:start="15:16" pos:end="15:27"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:27">(<argument pos:start="15:24" pos:end="15:26"><expr pos:start="15:24" pos:end="15:26"><name pos:start="15:24" pos:end="15:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:7">pkt</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:12">pos</name></name>          <operator pos:start="19:23" pos:end="19:23">=</operator> <call pos:start="19:25" pos:end="19:40"><name pos:start="19:25" pos:end="19:33">avio_tell</name><argument_list pos:start="19:34" pos:end="19:40">(<argument pos:start="19:35" pos:end="19:39"><expr pos:start="19:35" pos:end="19:39"><name pos:start="19:35" pos:end="19:39"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:7">pkt</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:21">stream_index</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">pkt</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:17">duration</name></name>     <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:7">pkt</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">data</name><index pos:start="27:14" pos:end="27:16">[<expr pos:start="27:15" pos:end="27:15"><literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>]</index></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <literal type="number" pos:start="27:20" pos:end="27:22">8</literal> <operator pos:start="27:22" pos:end="27:22">-</operator> <name pos:start="27:24" pos:end="27:40"><name pos:start="27:24" pos:end="27:24">c</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:40">remaining_bits</name></name></expr>;</expr_stmt> <comment type="line" pos:start="27:43" pos:end="27:67">// Number of bits to skip</comment>

    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:7">pkt</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:13">data</name><index pos:start="29:14" pos:end="29:16">[<expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">1</literal></expr>]</index></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:37"><name pos:start="29:20" pos:end="29:20">c</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:37">last_frame_bits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:45"><name pos:start="31:11" pos:end="31:19">avio_read</name><argument_list pos:start="31:20" pos:end="31:45">(<argument pos:start="31:21" pos:end="31:25"><expr pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:25"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:25">pb</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:38"><expr pos:start="31:28" pos:end="31:38"><name pos:start="31:28" pos:end="31:36"><name pos:start="31:28" pos:end="31:30">pkt</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:36">data</name></name><operator pos:start="31:37" pos:end="31:37">+</operator><literal type="number" pos:start="31:38" pos:end="31:38">2</literal></expr></argument>, <argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:15">(<expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:11">ret</name><operator pos:start="35:12" pos:end="35:13">&lt;=</operator><literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>)</condition> <block pos:start="35:17" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:28">

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><call pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:22">av_free_packet</name><argument_list pos:start="37:23" pos:end="37:27">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:28">return <expr pos:start="39:16" pos:end="39:27"><call pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:27">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:22">last_frame_bits</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:42"><name pos:start="45:26" pos:end="45:28">pkt</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:34">data</name><index pos:start="45:35" pos:end="45:42">[<expr pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:39">size</name><operator pos:start="45:40" pos:end="45:40">+</operator><literal type="number" pos:start="45:41" pos:end="45:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:76"><expr pos:start="47:5" pos:end="47:75"><name pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:5">c</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:21">remaining_bits</name></name>  <operator pos:start="47:24" pos:end="47:24">=</operator> <operator pos:start="47:26" pos:end="47:26">(</operator><name pos:start="47:27" pos:end="47:30">size</name> <operator pos:start="47:32" pos:end="47:33">&lt;&lt;</operator> <literal type="number" pos:start="47:35" pos:end="47:35">3</literal><operator pos:start="47:36" pos:end="47:36">)</operator> <operator pos:start="47:38" pos:end="47:38">-</operator> <name pos:start="47:40" pos:end="47:55"><name pos:start="47:40" pos:end="47:40">c</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:55">frame_bit_len</name></name> <operator pos:start="47:57" pos:end="47:57">+</operator> <name pos:start="47:59" pos:end="47:75"><name pos:start="47:59" pos:end="47:59">c</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:75">remaining_bits</name></name></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:18">return <expr pos:start="51:12" pos:end="51:17"><name pos:start="51:12" pos:end="51:15">size</name><operator pos:start="51:16" pos:end="51:16">+</operator><literal type="number" pos:start="51:17" pos:end="51:17">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
