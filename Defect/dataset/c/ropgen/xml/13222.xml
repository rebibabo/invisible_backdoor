<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13222.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">tcx_init</name><parameter_list pos:start="1:21" pos:end="3:43">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:39">target_phys_addr_t</name></type> <name pos:start="1:41" pos:end="1:44">addr</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:59">vram_size</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:70"><decl pos:start="1:62" pos:end="1:70"><type pos:start="1:62" pos:end="1:70"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:70">width</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:31"><decl pos:start="3:22" pos:end="3:31"><type pos:start="3:22" pos:end="3:31"><name pos:start="3:22" pos:end="3:24">int</name></type> <name pos:start="3:26" pos:end="3:31">height</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:42"><decl pos:start="3:34" pos:end="3:42"><type pos:start="3:34" pos:end="3:42"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:42">depth</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:5">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:40"><expr pos:start="13:5" pos:end="13:39"><name pos:start="13:5" pos:end="13:7">dev</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:39"><name pos:start="13:11" pos:end="13:21">qdev_create</name><argument_list pos:start="13:22" pos:end="13:39">(<argument pos:start="13:23" pos:end="13:26"><expr pos:start="13:23" pos:end="13:26"><name pos:start="13:23" pos:end="13:26">NULL</name></expr></argument>, <argument pos:start="13:29" pos:end="13:38"><expr pos:start="13:29" pos:end="13:38"><literal type="string" pos:start="13:29" pos:end="13:38">"SUNW,tcx"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:23">qdev_prop_set_taddr</name><argument_list pos:start="15:24" pos:end="15:42">(<argument pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:27">dev</name></expr></argument>, <argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><literal type="string" pos:start="15:30" pos:end="15:35">"addr"</literal></expr></argument>, <argument pos:start="15:38" pos:end="15:41"><expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:24">qdev_prop_set_uint32</name><argument_list pos:start="17:25" pos:end="17:53">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">dev</name></expr></argument>, <argument pos:start="17:31" pos:end="17:41"><expr pos:start="17:31" pos:end="17:41"><literal type="string" pos:start="17:31" pos:end="17:41">"vram_size"</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:52"><expr pos:start="17:44" pos:end="17:52"><name pos:start="17:44" pos:end="17:52">vram_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><call pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:24">qdev_prop_set_uint16</name><argument_list pos:start="19:25" pos:end="19:45">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">dev</name></expr></argument>, <argument pos:start="19:31" pos:end="19:37"><expr pos:start="19:31" pos:end="19:37"><literal type="string" pos:start="19:31" pos:end="19:37">"width"</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:44">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><call pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:24">qdev_prop_set_uint16</name><argument_list pos:start="21:25" pos:end="21:47">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>, <argument pos:start="21:31" pos:end="21:38"><expr pos:start="21:31" pos:end="21:38"><literal type="string" pos:start="21:31" pos:end="21:38">"height"</literal></expr></argument>, <argument pos:start="21:41" pos:end="21:46"><expr pos:start="21:41" pos:end="21:46"><name pos:start="21:41" pos:end="21:46">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><call pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:24">qdev_prop_set_uint16</name><argument_list pos:start="23:25" pos:end="23:45">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">dev</name></expr></argument>, <argument pos:start="23:31" pos:end="23:37"><expr pos:start="23:31" pos:end="23:37"><literal type="string" pos:start="23:31" pos:end="23:37">"depth"</literal></expr></argument>, <argument pos:start="23:40" pos:end="23:44"><expr pos:start="23:40" pos:end="23:44"><name pos:start="23:40" pos:end="23:44">depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:13">qdev_init</name><argument_list pos:start="25:14" pos:end="25:18">(<argument pos:start="25:15" pos:end="25:17"><expr pos:start="25:15" pos:end="25:17"><name pos:start="25:15" pos:end="25:17">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:24">sysbus_from_qdev</name><argument_list pos:start="27:25" pos:end="27:29">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:21">/* 8-bit plane */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><call pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:19">sysbus_mmio_map</name><argument_list pos:start="31:20" pos:end="31:47">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">s</name></expr></argument>, <argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr></argument>, <argument pos:start="31:27" pos:end="31:46"><expr pos:start="31:27" pos:end="31:46"><name pos:start="31:27" pos:end="31:30">addr</name> <operator pos:start="31:32" pos:end="31:32">+</operator> <literal type="number" pos:start="31:34" pos:end="31:46">0x00800000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:13">/* DAC */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:48"><expr pos:start="35:5" pos:end="35:47"><call pos:start="35:5" pos:end="35:47"><name pos:start="35:5" pos:end="35:19">sysbus_mmio_map</name><argument_list pos:start="35:20" pos:end="35:47">(<argument pos:start="35:21" pos:end="35:21"><expr pos:start="35:21" pos:end="35:21"><name pos:start="35:21" pos:end="35:21">s</name></expr></argument>, <argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">1</literal></expr></argument>, <argument pos:start="35:27" pos:end="35:46"><expr pos:start="35:27" pos:end="35:46"><name pos:start="35:27" pos:end="35:30">addr</name> <operator pos:start="35:32" pos:end="35:32">+</operator> <literal type="number" pos:start="35:34" pos:end="35:46">0x00200000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="37:5" pos:end="37:21">/* TEC (dummy) */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:48"><expr pos:start="39:5" pos:end="39:47"><call pos:start="39:5" pos:end="39:47"><name pos:start="39:5" pos:end="39:19">sysbus_mmio_map</name><argument_list pos:start="39:20" pos:end="39:47">(<argument pos:start="39:21" pos:end="39:21"><expr pos:start="39:21" pos:end="39:21"><name pos:start="39:21" pos:end="39:21">s</name></expr></argument>, <argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><literal type="number" pos:start="39:24" pos:end="39:24">2</literal></expr></argument>, <argument pos:start="39:27" pos:end="39:46"><expr pos:start="39:27" pos:end="39:46"><name pos:start="39:27" pos:end="39:30">addr</name> <operator pos:start="39:32" pos:end="39:32">+</operator> <literal type="number" pos:start="39:34" pos:end="39:46">0x00700000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="41:5" pos:end="41:71">/* THC 24 bit: NetBSD writes here even with 8-bit display: dummy */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:48"><expr pos:start="43:5" pos:end="43:47"><call pos:start="43:5" pos:end="43:47"><name pos:start="43:5" pos:end="43:19">sysbus_mmio_map</name><argument_list pos:start="43:20" pos:end="43:47">(<argument pos:start="43:21" pos:end="43:21"><expr pos:start="43:21" pos:end="43:21"><name pos:start="43:21" pos:end="43:21">s</name></expr></argument>, <argument pos:start="43:24" pos:end="43:24"><expr pos:start="43:24" pos:end="43:24"><literal type="number" pos:start="43:24" pos:end="43:24">3</literal></expr></argument>, <argument pos:start="43:27" pos:end="43:46"><expr pos:start="43:27" pos:end="43:46"><name pos:start="43:27" pos:end="43:30">addr</name> <operator pos:start="43:32" pos:end="43:32">+</operator> <literal type="number" pos:start="43:34" pos:end="43:46">0x00301000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="61:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:13">depth</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <literal type="number" pos:start="45:18" pos:end="45:19">24</literal></expr>)</condition> <block pos:start="45:22" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:52">

        <comment type="block" pos:start="47:9" pos:end="47:26">/* 24-bit plane */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:52"><expr pos:start="49:9" pos:end="49:51"><call pos:start="49:9" pos:end="49:51"><name pos:start="49:9" pos:end="49:23">sysbus_mmio_map</name><argument_list pos:start="49:24" pos:end="49:51">(<argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><name pos:start="49:25" pos:end="49:25">s</name></expr></argument>, <argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><literal type="number" pos:start="49:28" pos:end="49:28">4</literal></expr></argument>, <argument pos:start="49:31" pos:end="49:50"><expr pos:start="49:31" pos:end="49:50"><name pos:start="49:31" pos:end="49:34">addr</name> <operator pos:start="49:36" pos:end="49:36">+</operator> <literal type="number" pos:start="49:38" pos:end="49:50">0x02000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="51:27">/* Control plane */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:52"><expr pos:start="53:9" pos:end="53:51"><call pos:start="53:9" pos:end="53:51"><name pos:start="53:9" pos:end="53:23">sysbus_mmio_map</name><argument_list pos:start="53:24" pos:end="53:51">(<argument pos:start="53:25" pos:end="53:25"><expr pos:start="53:25" pos:end="53:25"><name pos:start="53:25" pos:end="53:25">s</name></expr></argument>, <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">5</literal></expr></argument>, <argument pos:start="53:31" pos:end="53:50"><expr pos:start="53:31" pos:end="53:50"><name pos:start="53:31" pos:end="53:34">addr</name> <operator pos:start="53:36" pos:end="53:36">+</operator> <literal type="number" pos:start="53:38" pos:end="53:50">0x0a000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="61:5">else <block pos:start="55:12" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:52">

        <comment type="block" pos:start="57:9" pos:end="57:31">/* THC 8 bit (dummy) */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:52"><expr pos:start="59:9" pos:end="59:51"><call pos:start="59:9" pos:end="59:51"><name pos:start="59:9" pos:end="59:23">sysbus_mmio_map</name><argument_list pos:start="59:24" pos:end="59:51">(<argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><name pos:start="59:25" pos:end="59:25">s</name></expr></argument>, <argument pos:start="59:28" pos:end="59:28"><expr pos:start="59:28" pos:end="59:28"><literal type="number" pos:start="59:28" pos:end="59:28">4</literal></expr></argument>, <argument pos:start="59:31" pos:end="59:50"><expr pos:start="59:31" pos:end="59:50"><name pos:start="59:31" pos:end="59:34">addr</name> <operator pos:start="59:36" pos:end="59:36">+</operator> <literal type="number" pos:start="59:38" pos:end="59:50">0x00300000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
