<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22162.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:23"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">virtqueue_map_desc</name><parameter_list pos:start="1:31" pos:end="3:52">(<parameter pos:start="1:32" pos:end="1:53"><decl pos:start="1:32" pos:end="1:53"><type pos:start="1:32" pos:end="1:53"><name pos:start="1:32" pos:end="1:39">unsigned</name> <name pos:start="1:41" pos:end="1:43">int</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:53">p_num_sg</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:61">hwaddr</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">addr</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:86"><decl pos:start="1:70" pos:end="1:86"><type pos:start="1:70" pos:end="1:86"><name pos:start="1:70" pos:end="1:81"><name pos:start="1:70" pos:end="1:75">struct</name> <name pos:start="1:77" pos:end="1:81">iovec</name></name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">iov</name></decl></parameter>,
                               <parameter pos:start="2:32" pos:end="2:54"><decl pos:start="2:32" pos:end="2:54"><type pos:start="2:32" pos:end="2:54"><name pos:start="2:32" pos:end="2:39">unsigned</name> <name pos:start="2:41" pos:end="2:43">int</name></type> <name pos:start="2:45" pos:end="2:54">max_num_sg</name></decl></parameter>, <parameter pos:start="2:57" pos:end="2:69"><decl pos:start="2:57" pos:end="2:69"><type pos:start="2:57" pos:end="2:69"><name pos:start="2:57" pos:end="2:60">bool</name></type> <name pos:start="2:62" pos:end="2:69">is_write</name></decl></parameter>,
                               <parameter pos:start="3:32" pos:end="3:40"><decl pos:start="3:32" pos:end="3:40"><type pos:start="3:32" pos:end="3:40"><name pos:start="3:32" pos:end="3:37">hwaddr</name></type> <name pos:start="3:39" pos:end="3:40">pa</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:51"><decl pos:start="3:43" pos:end="3:51"><type pos:start="3:43" pos:end="3:51"><name pos:start="3:43" pos:end="3:48">size_t</name></type> <name pos:start="3:50" pos:end="3:51">sz</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="19:23">{<block_content pos:start="5:5" pos:end="19:23">
    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:19">num_sg</name> <init pos:start="5:21" pos:end="5:31">= <expr pos:start="5:23" pos:end="5:31"><operator pos:start="5:23" pos:end="5:23">*</operator><name pos:start="5:24" pos:end="5:31">p_num_sg</name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:33"><expr pos:start="6:5" pos:end="6:32"><call pos:start="6:5" pos:end="6:32"><name pos:start="6:5" pos:end="6:10">assert</name><argument_list pos:start="6:11" pos:end="6:32">(<argument pos:start="6:12" pos:end="6:31"><expr pos:start="6:12" pos:end="6:31"><name pos:start="6:12" pos:end="6:17">num_sg</name> <operator pos:start="6:19" pos:end="6:20">&lt;=</operator> <name pos:start="6:22" pos:end="6:31">max_num_sg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="19:23"><if pos:start="7:5" pos:end="19:23">if <condition pos:start="7:8" pos:end="7:12">(<expr pos:start="7:9" pos:end="7:11"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:11">sz</name></expr>)</condition> <block pos:start="7:14" pos:end="19:23">{<block_content pos:start="8:9" pos:end="19:23">
        <expr_stmt pos:start="8:9" pos:end="8:67"><expr pos:start="8:9" pos:end="8:66"><call pos:start="8:9" pos:end="8:66"><name pos:start="8:9" pos:end="8:20">error_report</name><argument_list pos:start="8:21" pos:end="8:66">(<argument pos:start="8:22" pos:end="8:65"><expr pos:start="8:22" pos:end="8:65"><literal type="string" pos:start="8:22" pos:end="8:65">"virtio: zero sized buffers are not allowed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <while pos:start="9:5" pos:end="19:23">while <condition pos:start="9:11" pos:end="9:14">(<expr pos:start="9:12" pos:end="9:13"><name pos:start="9:12" pos:end="9:13">sz</name></expr>)</condition> <block pos:start="9:16" pos:end="19:23">{<block_content pos:start="10:9" pos:end="19:23">
        <decl_stmt pos:start="10:9" pos:end="10:24"><decl pos:start="10:9" pos:end="10:23"><type pos:start="10:9" pos:end="10:14"><name pos:start="10:9" pos:end="10:14">hwaddr</name></type> <name pos:start="10:16" pos:end="10:18">len</name> <init pos:start="10:20" pos:end="10:23">= <expr pos:start="10:22" pos:end="10:23"><name pos:start="10:22" pos:end="10:23">sz</name></expr></init></decl>;</decl_stmt>
        <if_stmt pos:start="11:9" pos:end="19:23"><if pos:start="11:9" pos:end="19:23">if <condition pos:start="11:12" pos:end="11:33">(<expr pos:start="11:13" pos:end="11:32"><name pos:start="11:13" pos:end="11:18">num_sg</name> <operator pos:start="11:20" pos:end="11:21">==</operator> <name pos:start="11:23" pos:end="11:32">max_num_sg</name></expr>)</condition> <block pos:start="11:35" pos:end="19:23">{<block_content pos:start="12:13" pos:end="19:23">
            <expr_stmt pos:start="12:13" pos:end="12:81"><expr pos:start="12:13" pos:end="12:80"><call pos:start="12:13" pos:end="12:80"><name pos:start="12:13" pos:end="12:24">error_report</name><argument_list pos:start="12:25" pos:end="12:80">(<argument pos:start="12:26" pos:end="12:79"><expr pos:start="12:26" pos:end="12:79"><literal type="string" pos:start="12:26" pos:end="12:79">"virtio: too many write descriptors in indirect table"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:75"><expr pos:start="13:9" pos:end="13:74"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">iov</name><index pos:start="13:12" pos:end="13:19">[<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">num_sg</name></expr>]</index></name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:28">iov_base</name> <operator pos:start="13:30" pos:end="13:30">=</operator> <call pos:start="13:32" pos:end="13:74"><name pos:start="13:32" pos:end="13:54">cpu_physical_memory_map</name><argument_list pos:start="13:55" pos:end="13:74">(<argument pos:start="13:56" pos:end="13:57"><expr pos:start="13:56" pos:end="13:57"><name pos:start="13:56" pos:end="13:57">pa</name></expr></argument>, <argument pos:start="13:60" pos:end="13:63"><expr pos:start="13:60" pos:end="13:63"><operator pos:start="13:60" pos:end="13:60">&amp;</operator><name pos:start="13:61" pos:end="13:63">len</name></expr></argument>, <argument pos:start="13:66" pos:end="13:73"><expr pos:start="13:66" pos:end="13:73"><name pos:start="13:66" pos:end="13:73">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:34"><expr pos:start="14:9" pos:end="14:33"><name pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:11">iov</name><index pos:start="14:12" pos:end="14:19">[<expr pos:start="14:13" pos:end="14:18"><name pos:start="14:13" pos:end="14:18">num_sg</name></expr>]</index></name><operator pos:start="14:20" pos:end="14:20">.</operator><name pos:start="14:21" pos:end="14:27">iov_len</name> <operator pos:start="14:29" pos:end="14:29">=</operator> <name pos:start="14:31" pos:end="14:33">len</name></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:12">addr</name><index pos:start="15:13" pos:end="15:20">[<expr pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:19">num_sg</name></expr>]</index></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:25">pa</name></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:18"><expr pos:start="16:9" pos:end="16:17"><name pos:start="16:9" pos:end="16:10">sz</name> <operator pos:start="16:12" pos:end="16:13">-=</operator> <name pos:start="16:15" pos:end="16:17">len</name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:18"><expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:10">pa</name> <operator pos:start="17:12" pos:end="17:13">+=</operator> <name pos:start="17:15" pos:end="17:17">len</name></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:17"><expr pos:start="18:9" pos:end="18:16"><name pos:start="18:9" pos:end="18:14">num_sg</name><operator pos:start="18:15" pos:end="18:16">++</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:13">p_num_sg</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:22">num_sg</name></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></function></unit>
