<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7036.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">qmp_migrate_set_parameters</name><parameter_list pos:start="1:32" pos:end="1:74">(<parameter pos:start="1:33" pos:end="1:59"><decl pos:start="1:33" pos:end="1:59"><type pos:start="1:33" pos:end="1:59"><name pos:start="1:33" pos:end="1:51">MigrationParameters</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">params</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:66">Error</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><call pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:43">migrate_get_current</name><argument_list pos:start="5:44" pos:end="5:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="19:5"><if pos:start="9:5" pos:end="19:5">if <condition pos:start="9:8" pos:end="11:67">(<expr pos:start="9:9" pos:end="11:66"><name pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:14">params</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:34">has_compress_level</name></name> <operator pos:start="9:36" pos:end="9:37">&amp;&amp;</operator>

        <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:31"><name pos:start="11:10" pos:end="11:15">params</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:31">compress_level</name></name> <operator pos:start="11:33" pos:end="11:33">&lt;</operator> <literal type="number" pos:start="11:35" pos:end="11:35">0</literal> <operator pos:start="11:37" pos:end="11:38">||</operator> <name pos:start="11:40" pos:end="11:61"><name pos:start="11:40" pos:end="11:45">params</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:61">compress_level</name></name> <operator pos:start="11:63" pos:end="11:63">&gt;</operator> <literal type="number" pos:start="11:65" pos:end="11:65">9</literal><operator pos:start="11:66" pos:end="11:66">)</operator></expr>)</condition> <block pos:start="11:69" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:15">

        <expr_stmt pos:start="13:9" pos:end="15:70"><expr pos:start="13:9" pos:end="15:69"><call pos:start="13:9" pos:end="15:69"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="15:69">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:53"><expr pos:start="13:26" pos:end="13:53"><name pos:start="13:26" pos:end="13:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="13:56" pos:end="13:71"><expr pos:start="13:56" pos:end="13:71"><literal type="string" pos:start="13:56" pos:end="13:71">"compress_level"</literal></expr></argument>,

                   <argument pos:start="15:20" pos:end="15:68"><expr pos:start="15:20" pos:end="15:68"><literal type="string" pos:start="15:20" pos:end="15:68">"is invalid, it should be in the range of 0 to 9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="23:73">(<expr pos:start="21:9" pos:end="23:72"><name pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:14">params</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:36">has_compress_threads</name></name> <operator pos:start="21:38" pos:end="21:39">&amp;&amp;</operator>

        <operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:33"><name pos:start="23:10" pos:end="23:15">params</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:33">compress_threads</name></name> <operator pos:start="23:35" pos:end="23:35">&lt;</operator> <literal type="number" pos:start="23:37" pos:end="23:37">1</literal> <operator pos:start="23:39" pos:end="23:40">||</operator> <name pos:start="23:42" pos:end="23:65"><name pos:start="23:42" pos:end="23:47">params</name><operator pos:start="23:48" pos:end="23:49">-&gt;</operator><name pos:start="23:50" pos:end="23:65">compress_threads</name></name> <operator pos:start="23:67" pos:end="23:67">&gt;</operator> <literal type="number" pos:start="23:69" pos:end="23:71">255</literal><operator pos:start="23:72" pos:end="23:72">)</operator></expr>)</condition> <block pos:start="23:75" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:15">

        <expr_stmt pos:start="25:9" pos:end="29:72"><expr pos:start="25:9" pos:end="29:71"><call pos:start="25:9" pos:end="29:71"><name pos:start="25:9" pos:end="25:18">error_setg</name><argument_list pos:start="25:19" pos:end="29:71">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">errp</name></expr></argument>, <argument pos:start="25:26" pos:end="25:53"><expr pos:start="25:26" pos:end="25:53"><name pos:start="25:26" pos:end="25:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:37"><expr pos:start="27:20" pos:end="27:37"><literal type="string" pos:start="27:20" pos:end="27:37">"compress_threads"</literal></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:70"><expr pos:start="29:20" pos:end="29:70"><literal type="string" pos:start="29:20" pos:end="29:70">"is invalid, it should be in the range of 1 to 255"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="47:5">if <condition pos:start="35:8" pos:end="37:77">(<expr pos:start="35:9" pos:end="37:76"><name pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:14">params</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:38">has_decompress_threads</name></name> <operator pos:start="35:40" pos:end="35:41">&amp;&amp;</operator>

        <operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:35"><name pos:start="37:10" pos:end="37:15">params</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:35">decompress_threads</name></name> <operator pos:start="37:37" pos:end="37:37">&lt;</operator> <literal type="number" pos:start="37:39" pos:end="37:39">1</literal> <operator pos:start="37:41" pos:end="37:42">||</operator> <name pos:start="37:44" pos:end="37:69"><name pos:start="37:44" pos:end="37:49">params</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:69">decompress_threads</name></name> <operator pos:start="37:71" pos:end="37:71">&gt;</operator> <literal type="number" pos:start="37:73" pos:end="37:75">255</literal><operator pos:start="37:76" pos:end="37:76">)</operator></expr>)</condition> <block pos:start="37:79" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:15">

        <expr_stmt pos:start="39:9" pos:end="43:72"><expr pos:start="39:9" pos:end="43:71"><call pos:start="39:9" pos:end="43:71"><name pos:start="39:9" pos:end="39:18">error_setg</name><argument_list pos:start="39:19" pos:end="43:71">(<argument pos:start="39:20" pos:end="39:23"><expr pos:start="39:20" pos:end="39:23"><name pos:start="39:20" pos:end="39:23">errp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:53"><expr pos:start="39:26" pos:end="39:53"><name pos:start="39:26" pos:end="39:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:39"><expr pos:start="41:20" pos:end="41:39"><literal type="string" pos:start="41:20" pos:end="41:39">"decompress_threads"</literal></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:70"><expr pos:start="43:20" pos:end="43:70"><literal type="string" pos:start="43:20" pos:end="43:70">"is invalid, it should be in the range of 1 to 255"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="53:44">(<expr pos:start="49:9" pos:end="53:43"><name pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:14">params</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:40">has_cpu_throttle_initial</name></name> <operator pos:start="49:42" pos:end="49:43">&amp;&amp;</operator>

        <operator pos:start="51:9" pos:end="51:9">(</operator><name pos:start="51:10" pos:end="51:37"><name pos:start="51:10" pos:end="51:15">params</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:37">cpu_throttle_initial</name></name> <operator pos:start="51:39" pos:end="51:39">&lt;</operator> <literal type="number" pos:start="51:41" pos:end="51:41">1</literal> <operator pos:start="51:43" pos:end="51:44">||</operator>

         <name pos:start="53:10" pos:end="53:37"><name pos:start="53:10" pos:end="53:15">params</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:37">cpu_throttle_initial</name></name> <operator pos:start="53:39" pos:end="53:39">&gt;</operator> <literal type="number" pos:start="53:41" pos:end="53:42">99</literal><operator pos:start="53:43" pos:end="53:43">)</operator></expr>)</condition> <block pos:start="53:46" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:15">

        <expr_stmt pos:start="55:9" pos:end="59:57"><expr pos:start="55:9" pos:end="59:56"><call pos:start="55:9" pos:end="59:56"><name pos:start="55:9" pos:end="55:18">error_setg</name><argument_list pos:start="55:19" pos:end="59:56">(<argument pos:start="55:20" pos:end="55:23"><expr pos:start="55:20" pos:end="55:23"><name pos:start="55:20" pos:end="55:23">errp</name></expr></argument>, <argument pos:start="55:26" pos:end="55:53"><expr pos:start="55:26" pos:end="55:53"><name pos:start="55:26" pos:end="55:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="57:20" pos:end="57:41"><expr pos:start="57:20" pos:end="57:41"><literal type="string" pos:start="57:20" pos:end="57:41">"cpu_throttle_initial"</literal></expr></argument>,

                   <argument pos:start="59:20" pos:end="59:55"><expr pos:start="59:20" pos:end="59:55"><literal type="string" pos:start="59:20" pos:end="59:55">"an integer in the range of 1 to 99"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="69:46">(<expr pos:start="65:9" pos:end="69:45"><name pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:14">params</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:42">has_cpu_throttle_increment</name></name> <operator pos:start="65:44" pos:end="65:45">&amp;&amp;</operator>

        <operator pos:start="67:9" pos:end="67:9">(</operator><name pos:start="67:10" pos:end="67:39"><name pos:start="67:10" pos:end="67:15">params</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:39">cpu_throttle_increment</name></name> <operator pos:start="67:41" pos:end="67:41">&lt;</operator> <literal type="number" pos:start="67:43" pos:end="67:43">1</literal> <operator pos:start="67:45" pos:end="67:46">||</operator>

         <name pos:start="69:10" pos:end="69:39"><name pos:start="69:10" pos:end="69:15">params</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:39">cpu_throttle_increment</name></name> <operator pos:start="69:41" pos:end="69:41">&gt;</operator> <literal type="number" pos:start="69:43" pos:end="69:44">99</literal><operator pos:start="69:45" pos:end="69:45">)</operator></expr>)</condition> <block pos:start="69:48" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:15">

        <expr_stmt pos:start="71:9" pos:end="75:57"><expr pos:start="71:9" pos:end="75:56"><call pos:start="71:9" pos:end="75:56"><name pos:start="71:9" pos:end="71:18">error_setg</name><argument_list pos:start="71:19" pos:end="75:56">(<argument pos:start="71:20" pos:end="71:23"><expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">errp</name></expr></argument>, <argument pos:start="71:26" pos:end="71:53"><expr pos:start="71:26" pos:end="71:53"><name pos:start="71:26" pos:end="71:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="73:20" pos:end="73:43"><expr pos:start="73:20" pos:end="73:43"><literal type="string" pos:start="73:20" pos:end="73:43">"cpu_throttle_increment"</literal></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:55"><expr pos:start="75:20" pos:end="75:55"><literal type="string" pos:start="75:20" pos:end="75:55">"an integer in the range of 1 to 99"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="83:72">(<expr pos:start="81:9" pos:end="83:71"><name pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:14">params</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:33">has_max_bandwidth</name></name> <operator pos:start="81:35" pos:end="81:36">&amp;&amp;</operator>

        <operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:30"><name pos:start="83:10" pos:end="83:15">params</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:30">max_bandwidth</name></name> <operator pos:start="83:32" pos:end="83:32">&lt;</operator> <literal type="number" pos:start="83:34" pos:end="83:34">0</literal> <operator pos:start="83:36" pos:end="83:37">||</operator> <name pos:start="83:39" pos:end="83:59"><name pos:start="83:39" pos:end="83:44">params</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:59">max_bandwidth</name></name> <operator pos:start="83:61" pos:end="83:61">&gt;</operator> <name pos:start="83:63" pos:end="83:70">SIZE_MAX</name><operator pos:start="83:71" pos:end="83:71">)</operator></expr>)</condition> <block pos:start="83:74" pos:end="91:5">{<block_content pos:start="85:9" pos:end="89:15">

        <expr_stmt pos:start="85:9" pos:end="87:70"><expr pos:start="85:9" pos:end="87:69"><call pos:start="85:9" pos:end="87:69"><name pos:start="85:9" pos:end="85:18">error_setg</name><argument_list pos:start="85:19" pos:end="87:69">(<argument pos:start="85:20" pos:end="85:23"><expr pos:start="85:20" pos:end="85:23"><name pos:start="85:20" pos:end="85:23">errp</name></expr></argument>, <argument pos:start="85:26" pos:end="87:58"><expr pos:start="85:26" pos:end="87:58"><literal type="string" pos:start="85:26" pos:end="85:78">"Parameter 'max_bandwidth' expects an integer in the"</literal>

                         <literal type="string" pos:start="87:26" pos:end="87:58">" range of 0 to %zu bytes/second"</literal></expr></argument>, <argument pos:start="87:61" pos:end="87:68"><expr pos:start="87:61" pos:end="87:68"><name pos:start="87:61" pos:end="87:68">SIZE_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="105:5"><if pos:start="93:5" pos:end="105:5">if <condition pos:start="93:8" pos:end="95:73">(<expr pos:start="93:9" pos:end="95:72"><name pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:14">params</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:34">has_downtime_limit</name></name> <operator pos:start="93:36" pos:end="93:37">&amp;&amp;</operator>

        <operator pos:start="95:9" pos:end="95:9">(</operator><name pos:start="95:10" pos:end="95:31"><name pos:start="95:10" pos:end="95:15">params</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:31">downtime_limit</name></name> <operator pos:start="95:33" pos:end="95:33">&lt;</operator> <literal type="number" pos:start="95:35" pos:end="95:35">0</literal> <operator pos:start="95:37" pos:end="95:38">||</operator> <name pos:start="95:40" pos:end="95:61"><name pos:start="95:40" pos:end="95:45">params</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:61">downtime_limit</name></name> <operator pos:start="95:63" pos:end="95:63">&gt;</operator> <literal type="number" pos:start="95:65" pos:end="95:71">2000000</literal><operator pos:start="95:72" pos:end="95:72">)</operator></expr>)</condition> <block pos:start="95:75" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:15">

        <expr_stmt pos:start="97:9" pos:end="101:75"><expr pos:start="97:9" pos:end="101:74"><call pos:start="97:9" pos:end="101:74"><name pos:start="97:9" pos:end="97:18">error_setg</name><argument_list pos:start="97:19" pos:end="101:74">(<argument pos:start="97:20" pos:end="97:23"><expr pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">errp</name></expr></argument>, <argument pos:start="97:26" pos:end="97:53"><expr pos:start="97:26" pos:end="97:53"><name pos:start="97:26" pos:end="97:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="99:20" pos:end="99:35"><expr pos:start="99:20" pos:end="99:35"><literal type="string" pos:start="99:20" pos:end="99:35">"downtime_limit"</literal></expr></argument>,

                   <argument pos:start="101:20" pos:end="101:73"><expr pos:start="101:20" pos:end="101:73"><literal type="string" pos:start="101:20" pos:end="101:73">"an integer in the range of 0 to 2000000 milliseconds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="107:5" pos:end="115:5"><if pos:start="107:5" pos:end="115:5">if <condition pos:start="107:8" pos:end="107:75">(<expr pos:start="107:9" pos:end="107:74"><name pos:start="107:9" pos:end="107:38"><name pos:start="107:9" pos:end="107:14">params</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:38">has_x_checkpoint_delay</name></name> <operator pos:start="107:40" pos:end="107:41">&amp;&amp;</operator> <operator pos:start="107:43" pos:end="107:43">(</operator><name pos:start="107:44" pos:end="107:69"><name pos:start="107:44" pos:end="107:49">params</name><operator pos:start="107:50" pos:end="107:51">-&gt;</operator><name pos:start="107:52" pos:end="107:69">x_checkpoint_delay</name></name> <operator pos:start="107:71" pos:end="107:71">&lt;</operator> <literal type="number" pos:start="107:73" pos:end="107:73">0</literal><operator pos:start="107:74" pos:end="107:74">)</operator></expr>)</condition> <block pos:start="107:77" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:57">

        <expr_stmt pos:start="109:9" pos:end="113:57"><expr pos:start="109:9" pos:end="113:56"><call pos:start="109:9" pos:end="113:56"><name pos:start="109:9" pos:end="109:18">error_setg</name><argument_list pos:start="109:19" pos:end="113:56">(<argument pos:start="109:20" pos:end="109:23"><expr pos:start="109:20" pos:end="109:23"><name pos:start="109:20" pos:end="109:23">errp</name></expr></argument>, <argument pos:start="109:26" pos:end="109:53"><expr pos:start="109:26" pos:end="109:53"><name pos:start="109:26" pos:end="109:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                    <argument pos:start="111:21" pos:end="111:40"><expr pos:start="111:21" pos:end="111:40"><literal type="string" pos:start="111:21" pos:end="111:40">"x_checkpoint_delay"</literal></expr></argument>,

                    <argument pos:start="113:21" pos:end="113:55"><expr pos:start="113:21" pos:end="113:55"><literal type="string" pos:start="113:21" pos:end="113:55">"is invalid, it should be positive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:35">(<expr pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:34"><name pos:start="119:9" pos:end="119:14">params</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:34">has_compress_level</name></name></expr>)</condition> <block pos:start="119:37" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:62">

        <expr_stmt pos:start="121:9" pos:end="121:62"><expr pos:start="121:9" pos:end="121:61"><name pos:start="121:9" pos:end="121:36"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:21">parameters</name><operator pos:start="121:22" pos:end="121:22">.</operator><name pos:start="121:23" pos:end="121:36">compress_level</name></name> <operator pos:start="121:38" pos:end="121:38">=</operator> <name pos:start="121:40" pos:end="121:61"><name pos:start="121:40" pos:end="121:45">params</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:61">compress_level</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:37">(<expr pos:start="125:9" pos:end="125:36"><name pos:start="125:9" pos:end="125:36"><name pos:start="125:9" pos:end="125:14">params</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:36">has_compress_threads</name></name></expr>)</condition> <block pos:start="125:39" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:66">

        <expr_stmt pos:start="127:9" pos:end="127:66"><expr pos:start="127:9" pos:end="127:65"><name pos:start="127:9" pos:end="127:38"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:21">parameters</name><operator pos:start="127:22" pos:end="127:22">.</operator><name pos:start="127:23" pos:end="127:38">compress_threads</name></name> <operator pos:start="127:40" pos:end="127:40">=</operator> <name pos:start="127:42" pos:end="127:65"><name pos:start="127:42" pos:end="127:47">params</name><operator pos:start="127:48" pos:end="127:49">-&gt;</operator><name pos:start="127:50" pos:end="127:65">compress_threads</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="131:5" pos:end="135:5"><if pos:start="131:5" pos:end="135:5">if <condition pos:start="131:8" pos:end="131:39">(<expr pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:14">params</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:38">has_decompress_threads</name></name></expr>)</condition> <block pos:start="131:41" pos:end="135:5">{<block_content pos:start="133:9" pos:end="133:70">

        <expr_stmt pos:start="133:9" pos:end="133:70"><expr pos:start="133:9" pos:end="133:69"><name pos:start="133:9" pos:end="133:40"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:21">parameters</name><operator pos:start="133:22" pos:end="133:22">.</operator><name pos:start="133:23" pos:end="133:40">decompress_threads</name></name> <operator pos:start="133:42" pos:end="133:42">=</operator> <name pos:start="133:44" pos:end="133:69"><name pos:start="133:44" pos:end="133:49">params</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:69">decompress_threads</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="137:5" pos:end="141:5"><if pos:start="137:5" pos:end="141:5">if <condition pos:start="137:8" pos:end="137:41">(<expr pos:start="137:9" pos:end="137:40"><name pos:start="137:9" pos:end="137:40"><name pos:start="137:9" pos:end="137:14">params</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:40">has_cpu_throttle_initial</name></name></expr>)</condition> <block pos:start="137:43" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:74">

        <expr_stmt pos:start="139:9" pos:end="139:74"><expr pos:start="139:9" pos:end="139:73"><name pos:start="139:9" pos:end="139:42"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:21">parameters</name><operator pos:start="139:22" pos:end="139:22">.</operator><name pos:start="139:23" pos:end="139:42">cpu_throttle_initial</name></name> <operator pos:start="139:44" pos:end="139:44">=</operator> <name pos:start="139:46" pos:end="139:73"><name pos:start="139:46" pos:end="139:51">params</name><operator pos:start="139:52" pos:end="139:53">-&gt;</operator><name pos:start="139:54" pos:end="139:73">cpu_throttle_initial</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:43">(<expr pos:start="143:9" pos:end="143:42"><name pos:start="143:9" pos:end="143:42"><name pos:start="143:9" pos:end="143:14">params</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:42">has_cpu_throttle_increment</name></name></expr>)</condition> <block pos:start="143:45" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:78">

        <expr_stmt pos:start="145:9" pos:end="145:78"><expr pos:start="145:9" pos:end="145:77"><name pos:start="145:9" pos:end="145:44"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:21">parameters</name><operator pos:start="145:22" pos:end="145:22">.</operator><name pos:start="145:23" pos:end="145:44">cpu_throttle_increment</name></name> <operator pos:start="145:46" pos:end="145:46">=</operator> <name pos:start="145:48" pos:end="145:77"><name pos:start="145:48" pos:end="145:53">params</name><operator pos:start="145:54" pos:end="145:55">-&gt;</operator><name pos:start="145:56" pos:end="145:77">cpu_throttle_increment</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="155:5"><if pos:start="149:5" pos:end="155:5">if <condition pos:start="149:8" pos:end="149:30">(<expr pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:29"><name pos:start="149:9" pos:end="149:14">params</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:29">has_tls_creds</name></name></expr>)</condition> <block pos:start="149:32" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:62">

        <expr_stmt pos:start="151:9" pos:end="151:40"><expr pos:start="151:9" pos:end="151:39"><call pos:start="151:9" pos:end="151:39"><name pos:start="151:9" pos:end="151:14">g_free</name><argument_list pos:start="151:15" pos:end="151:39">(<argument pos:start="151:16" pos:end="151:38"><expr pos:start="151:16" pos:end="151:38"><name pos:start="151:16" pos:end="151:38"><name pos:start="151:16" pos:end="151:16">s</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:28">parameters</name><operator pos:start="151:29" pos:end="151:29">.</operator><name pos:start="151:30" pos:end="151:38">tls_creds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:62"><expr pos:start="153:9" pos:end="153:61"><name pos:start="153:9" pos:end="153:31"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:21">parameters</name><operator pos:start="153:22" pos:end="153:22">.</operator><name pos:start="153:23" pos:end="153:31">tls_creds</name></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <call pos:start="153:35" pos:end="153:61"><name pos:start="153:35" pos:end="153:42">g_strdup</name><argument_list pos:start="153:43" pos:end="153:61">(<argument pos:start="153:44" pos:end="153:60"><expr pos:start="153:44" pos:end="153:60"><name pos:start="153:44" pos:end="153:60"><name pos:start="153:44" pos:end="153:49">params</name><operator pos:start="153:50" pos:end="153:51">-&gt;</operator><name pos:start="153:52" pos:end="153:60">tls_creds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if <condition pos:start="157:8" pos:end="157:33">(<expr pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:14">params</name><operator pos:start="157:15" pos:end="157:16">-&gt;</operator><name pos:start="157:17" pos:end="157:32">has_tls_hostname</name></name></expr>)</condition> <block pos:start="157:35" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:68">

        <expr_stmt pos:start="159:9" pos:end="159:43"><expr pos:start="159:9" pos:end="159:42"><call pos:start="159:9" pos:end="159:42"><name pos:start="159:9" pos:end="159:14">g_free</name><argument_list pos:start="159:15" pos:end="159:42">(<argument pos:start="159:16" pos:end="159:41"><expr pos:start="159:16" pos:end="159:41"><name pos:start="159:16" pos:end="159:41"><name pos:start="159:16" pos:end="159:16">s</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:28">parameters</name><operator pos:start="159:29" pos:end="159:29">.</operator><name pos:start="159:30" pos:end="159:41">tls_hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:68"><expr pos:start="161:9" pos:end="161:67"><name pos:start="161:9" pos:end="161:34"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:21">parameters</name><operator pos:start="161:22" pos:end="161:22">.</operator><name pos:start="161:23" pos:end="161:34">tls_hostname</name></name> <operator pos:start="161:36" pos:end="161:36">=</operator> <call pos:start="161:38" pos:end="161:67"><name pos:start="161:38" pos:end="161:45">g_strdup</name><argument_list pos:start="161:46" pos:end="161:67">(<argument pos:start="161:47" pos:end="161:66"><expr pos:start="161:47" pos:end="161:66"><name pos:start="161:47" pos:end="161:66"><name pos:start="161:47" pos:end="161:52">params</name><operator pos:start="161:53" pos:end="161:54">-&gt;</operator><name pos:start="161:55" pos:end="161:66">tls_hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="177:5"><if pos:start="165:5" pos:end="177:5">if <condition pos:start="165:8" pos:end="165:34">(<expr pos:start="165:9" pos:end="165:33"><name pos:start="165:9" pos:end="165:33"><name pos:start="165:9" pos:end="165:14">params</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:33">has_max_bandwidth</name></name></expr>)</condition> <block pos:start="165:36" pos:end="177:5">{<block_content pos:start="167:9" pos:end="175:9">

        <expr_stmt pos:start="167:9" pos:end="167:60"><expr pos:start="167:9" pos:end="167:59"><name pos:start="167:9" pos:end="167:35"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:21">parameters</name><operator pos:start="167:22" pos:end="167:22">.</operator><name pos:start="167:23" pos:end="167:35">max_bandwidth</name></name> <operator pos:start="167:37" pos:end="167:37">=</operator> <name pos:start="167:39" pos:end="167:59"><name pos:start="167:39" pos:end="167:44">params</name><operator pos:start="167:45" pos:end="167:46">-&gt;</operator><name pos:start="167:47" pos:end="167:59">max_bandwidth</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:27">(<expr pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:26"><name pos:start="169:13" pos:end="169:13">s</name><operator pos:start="169:14" pos:end="169:15">-&gt;</operator><name pos:start="169:16" pos:end="169:26">to_dst_file</name></name></expr>)</condition> <block pos:start="169:29" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:80">

            <expr_stmt pos:start="171:13" pos:end="173:80"><expr pos:start="171:13" pos:end="173:79"><call pos:start="171:13" pos:end="173:79"><name pos:start="171:13" pos:end="171:36">qemu_file_set_rate_limit</name><argument_list pos:start="171:37" pos:end="173:79">(<argument pos:start="171:38" pos:end="171:51"><expr pos:start="171:38" pos:end="171:51"><name pos:start="171:38" pos:end="171:51"><name pos:start="171:38" pos:end="171:38">s</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:51">to_dst_file</name></name></expr></argument>,

                                <argument pos:start="173:33" pos:end="173:78"><expr pos:start="173:33" pos:end="173:78"><name pos:start="173:33" pos:end="173:59"><name pos:start="173:33" pos:end="173:33">s</name><operator pos:start="173:34" pos:end="173:35">-&gt;</operator><name pos:start="173:36" pos:end="173:45">parameters</name><operator pos:start="173:46" pos:end="173:46">.</operator><name pos:start="173:47" pos:end="173:59">max_bandwidth</name></name> <operator pos:start="173:61" pos:end="173:61">/</operator> <name pos:start="173:63" pos:end="173:78">XFER_LIMIT_RATIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="179:5" pos:end="183:5"><if pos:start="179:5" pos:end="183:5">if <condition pos:start="179:8" pos:end="179:35">(<expr pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:14">params</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:34">has_downtime_limit</name></name></expr>)</condition> <block pos:start="179:37" pos:end="183:5">{<block_content pos:start="181:9" pos:end="181:62">

        <expr_stmt pos:start="181:9" pos:end="181:62"><expr pos:start="181:9" pos:end="181:61"><name pos:start="181:9" pos:end="181:36"><name pos:start="181:9" pos:end="181:9">s</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:21">parameters</name><operator pos:start="181:22" pos:end="181:22">.</operator><name pos:start="181:23" pos:end="181:36">downtime_limit</name></name> <operator pos:start="181:38" pos:end="181:38">=</operator> <name pos:start="181:40" pos:end="181:61"><name pos:start="181:40" pos:end="181:45">params</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:61">downtime_limit</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="187:5" pos:end="197:5"><if pos:start="187:5" pos:end="197:5">if <condition pos:start="187:8" pos:end="187:39">(<expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:14">params</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:38">has_x_checkpoint_delay</name></name></expr>)</condition> <block pos:start="187:41" pos:end="197:5">{<block_content pos:start="189:9" pos:end="195:9">

        <expr_stmt pos:start="189:9" pos:end="189:70"><expr pos:start="189:9" pos:end="189:69"><name pos:start="189:9" pos:end="189:40"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:21">parameters</name><operator pos:start="189:22" pos:end="189:22">.</operator><name pos:start="189:23" pos:end="189:40">x_checkpoint_delay</name></name> <operator pos:start="189:42" pos:end="189:42">=</operator> <name pos:start="189:44" pos:end="189:69"><name pos:start="189:44" pos:end="189:49">params</name><operator pos:start="189:50" pos:end="189:51">-&gt;</operator><name pos:start="189:52" pos:end="189:69">x_checkpoint_delay</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="195:9"><if pos:start="191:9" pos:end="195:9">if <condition pos:start="191:12" pos:end="191:38">(<expr pos:start="191:13" pos:end="191:37"><call pos:start="191:13" pos:end="191:37"><name pos:start="191:13" pos:end="191:35">migration_in_colo_state</name><argument_list pos:start="191:36" pos:end="191:37">()</argument_list></call></expr>)</condition> <block pos:start="191:40" pos:end="195:9">{<block_content pos:start="193:13" pos:end="193:38">

            <expr_stmt pos:start="193:13" pos:end="193:38"><expr pos:start="193:13" pos:end="193:37"><call pos:start="193:13" pos:end="193:37"><name pos:start="193:13" pos:end="193:34">colo_checkpoint_notify</name><argument_list pos:start="193:35" pos:end="193:37">(<argument pos:start="193:36" pos:end="193:36"><expr pos:start="193:36" pos:end="193:36"><name pos:start="193:36" pos:end="193:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
