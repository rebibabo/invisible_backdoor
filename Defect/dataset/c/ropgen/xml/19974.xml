<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19974.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">configure_input_video_filter</name><parameter_list pos:start="1:40" pos:end="3:58">(<parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">FilterGraph</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">fg</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:77"><decl pos:start="1:58" pos:end="1:77"><type pos:start="1:58" pos:end="1:77"><name pos:start="1:58" pos:end="1:68">InputFilter</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:77">ifilter</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:57"><decl pos:start="3:41" pos:end="3:57"><type pos:start="3:41" pos:end="3:57"><name pos:start="3:41" pos:end="3:53">AVFilterInOut</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:57">in</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="273:1">{<block_content pos:start="7:5" pos:end="271:13">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFilterContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:32">last_filter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:65"><decl pos:start="9:5" pos:end="9:64"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">AVFilter</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:31">buffer_filt</name> <init pos:start="9:33" pos:end="9:64">= <expr pos:start="9:35" pos:end="9:64"><call pos:start="9:35" pos:end="9:64"><name pos:start="9:35" pos:end="9:54">avfilter_get_by_name</name><argument_list pos:start="9:55" pos:end="9:64">(<argument pos:start="9:56" pos:end="9:63"><expr pos:start="9:56" pos:end="9:63"><literal type="string" pos:start="9:56" pos:end="9:63">"buffer"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">InputStream</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">ist</name> <init pos:start="11:22" pos:end="11:35">= <expr pos:start="11:24" pos:end="11:35"><name pos:start="11:24" pos:end="11:35"><name pos:start="11:24" pos:end="11:30">ifilter</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:35">ist</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:51"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:13">InputFile</name>     <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">f</name> <init pos:start="13:22" pos:end="13:51">= <expr pos:start="13:24" pos:end="13:51"><name pos:start="13:24" pos:end="13:51"><name pos:start="13:24" pos:end="13:34">input_files</name><index pos:start="13:35" pos:end="13:51">[<expr pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:50"><name pos:start="13:36" pos:end="13:38">ist</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:50">file_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:60"><decl pos:start="15:5" pos:end="17:59"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">AVRational</name></type> <name pos:start="15:16" pos:end="15:17">tb</name> <init pos:start="15:19" pos:end="17:59">= <expr pos:start="15:21" pos:end="17:59"><ternary pos:start="15:21" pos:end="17:59"><condition pos:start="15:21" pos:end="15:40"><expr pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:38"><name pos:start="15:21" pos:end="15:23">ist</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:34">framerate</name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:38">num</name></name></expr> ?</condition><then pos:start="15:42" pos:end="15:65"> <expr pos:start="15:42" pos:end="15:65"><call pos:start="15:42" pos:end="15:65"><name pos:start="15:42" pos:end="15:49">av_inv_q</name><argument_list pos:start="15:50" pos:end="15:65">(<argument pos:start="15:51" pos:end="15:64"><expr pos:start="15:51" pos:end="15:64"><name pos:start="15:51" pos:end="15:64"><name pos:start="15:51" pos:end="15:53">ist</name><operator pos:start="15:54" pos:end="15:55">-&gt;</operator><name pos:start="15:56" pos:end="15:64">framerate</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="15:67" pos:end="17:59">:

                                         <expr pos:start="17:42" pos:end="17:59"><name pos:start="17:42" pos:end="17:59"><name pos:start="17:42" pos:end="17:44">ist</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:48">st</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:59">time_base</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:35"><decl pos:start="19:5" pos:end="19:34"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:14">AVRational</name></type> <name pos:start="19:16" pos:end="19:17">fr</name> <init pos:start="19:19" pos:end="19:34">= <expr pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:23">ist</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:34">framerate</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:14">AVRational</name></type> <name pos:start="21:16" pos:end="21:18">sar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">AVBPrint</name></type> <name pos:start="23:14" pos:end="23:17">args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:19"><decl pos:start="25:5" pos:end="25:18"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">char</name></type> <name pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:13">name</name><index pos:start="25:14" pos:end="25:18">[<expr pos:start="25:15" pos:end="25:17"><literal type="number" pos:start="25:15" pos:end="25:17">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>, <decl pos:start="27:14" pos:end="27:24"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:14" pos:end="27:20">pad_idx</name> <init pos:start="27:22" pos:end="27:24">= <expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:25"><decl pos:start="29:5" pos:end="29:24"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:20">tsoffset</name> <init pos:start="29:22" pos:end="29:24">= <expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:65"><decl pos:start="31:5" pos:end="31:64"><type pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:25">AVBufferSrcParameters</name> <modifier pos:start="31:27" pos:end="31:27">*</modifier></type><name pos:start="31:28" pos:end="31:30">par</name> <init pos:start="31:32" pos:end="31:64">= <expr pos:start="31:34" pos:end="31:64"><call pos:start="31:34" pos:end="31:64"><name pos:start="31:34" pos:end="31:62">av_buffersrc_parameters_alloc</name><argument_list pos:start="31:63" pos:end="31:64">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="37:31"><if pos:start="35:5" pos:end="37:31">if <condition pos:start="35:8" pos:end="35:13">(<expr pos:start="35:9" pos:end="35:12"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:12">par</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:31"><block_content pos:start="37:9" pos:end="37:31">

        <return pos:start="37:9" pos:end="37:31">return <expr pos:start="37:16" pos:end="37:30"><call pos:start="37:16" pos:end="37:30"><name pos:start="37:16" pos:end="37:22">AVERROR</name><argument_list pos:start="37:23" pos:end="37:30">(<argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><call pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:10">memset</name><argument_list pos:start="39:11" pos:end="39:32">(<argument pos:start="39:12" pos:end="39:14"><expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">par</name></expr></argument>, <argument pos:start="39:17" pos:end="39:17"><expr pos:start="39:17" pos:end="39:17"><literal type="number" pos:start="39:17" pos:end="39:17">0</literal></expr></argument>, <argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><sizeof pos:start="39:20" pos:end="39:31">sizeof<argument_list pos:start="39:26" pos:end="39:31">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><operator pos:start="39:27" pos:end="39:27">*</operator><name pos:start="39:28" pos:end="39:30">par</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:7">par</name><operator pos:start="41:8" pos:end="41:9">-&gt;</operator><name pos:start="41:10" pos:end="41:15">format</name></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:33">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:55">(<expr pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:11">ist</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:20">dec_ctx</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:32">codec_type</name></name> <operator pos:start="45:34" pos:end="45:35">==</operator> <name pos:start="45:37" pos:end="45:54">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="45:57" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:31">

        <expr_stmt pos:start="47:9" pos:end="47:83"><expr pos:start="47:9" pos:end="47:82"><call pos:start="47:9" pos:end="47:82"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:82">(<argument pos:start="47:16" pos:end="47:19"><expr pos:start="47:16" pos:end="47:19"><name pos:start="47:16" pos:end="47:19">NULL</name></expr></argument>, <argument pos:start="47:22" pos:end="47:33"><expr pos:start="47:22" pos:end="47:33"><name pos:start="47:22" pos:end="47:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:36" pos:end="47:81"><expr pos:start="47:36" pos:end="47:81"><literal type="string" pos:start="47:36" pos:end="47:81">"Cannot connect video filter to audio input\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:83"><if pos:start="55:5" pos:end="57:83">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:15"><name pos:start="55:10" pos:end="55:11">fr</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:15">num</name></name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:83"><block_content pos:start="57:9" pos:end="57:83">

        <expr_stmt pos:start="57:9" pos:end="57:83"><expr pos:start="57:9" pos:end="57:82"><name pos:start="57:9" pos:end="57:10">fr</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:82"><name pos:start="57:14" pos:end="57:32">av_guess_frame_rate</name><argument_list pos:start="57:33" pos:end="57:82">(<argument pos:start="57:34" pos:end="57:66"><expr pos:start="57:34" pos:end="57:66"><name pos:start="57:34" pos:end="57:61"><name pos:start="57:34" pos:end="57:44">input_files</name><index pos:start="57:45" pos:end="57:61">[<expr pos:start="57:46" pos:end="57:60"><name pos:start="57:46" pos:end="57:60"><name pos:start="57:46" pos:end="57:48">ist</name><operator pos:start="57:49" pos:end="57:50">-&gt;</operator><name pos:start="57:51" pos:end="57:60">file_index</name></name></expr>]</index></name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:66">ctx</name></expr></argument>, <argument pos:start="57:69" pos:end="57:75"><expr pos:start="57:69" pos:end="57:75"><name pos:start="57:69" pos:end="57:75"><name pos:start="57:69" pos:end="57:71">ist</name><operator pos:start="57:72" pos:end="57:73">-&gt;</operator><name pos:start="57:74" pos:end="57:75">st</name></name></expr></argument>, <argument pos:start="57:78" pos:end="57:81"><expr pos:start="57:78" pos:end="57:81"><name pos:start="57:78" pos:end="57:81">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="69:5"><if pos:start="61:5" pos:end="69:5">if <condition pos:start="61:8" pos:end="61:58">(<expr pos:start="61:9" pos:end="61:57"><name pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:11">ist</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:20">dec_ctx</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:32">codec_type</name></name> <operator pos:start="61:34" pos:end="61:35">==</operator> <name pos:start="61:37" pos:end="61:57">AVMEDIA_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="61:60" pos:end="69:5">{<block_content pos:start="63:9" pos:end="67:23">

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:36"><name pos:start="63:15" pos:end="63:31">sub2video_prepare</name><argument_list pos:start="63:32" pos:end="63:36">(<argument pos:start="63:33" pos:end="63:35"><expr pos:start="63:33" pos:end="63:35"><name pos:start="63:33" pos:end="63:35">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:23"><if pos:start="65:9" pos:end="67:23">if <condition pos:start="65:12" pos:end="65:20">(<expr pos:start="65:13" pos:end="65:19"><name pos:start="65:13" pos:end="65:15">ret</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <return pos:start="67:13" pos:end="67:23">return <expr pos:start="67:20" pos:end="67:22"><name pos:start="67:20" pos:end="67:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="77:44"><expr pos:start="73:5" pos:end="77:43"><name pos:start="73:5" pos:end="73:7">sar</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <ternary pos:start="73:11" pos:end="77:43"><condition pos:start="73:11" pos:end="73:44"><expr pos:start="73:11" pos:end="73:42"><name pos:start="73:11" pos:end="73:42"><name pos:start="73:11" pos:end="73:13">ist</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:17">st</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:38">sample_aspect_ratio</name><operator pos:start="73:39" pos:end="73:39">.</operator><name pos:start="73:40" pos:end="73:42">num</name></name></expr> ?</condition><then pos:start="75:11" pos:end="75:38">

          <expr pos:start="75:11" pos:end="75:38"><name pos:start="75:11" pos:end="75:38"><name pos:start="75:11" pos:end="75:13">ist</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:17">st</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:38">sample_aspect_ratio</name></name></expr> </then><else pos:start="75:40" pos:end="77:43">:

          <expr pos:start="77:11" pos:end="77:43"><name pos:start="77:11" pos:end="77:43"><name pos:start="77:11" pos:end="77:13">ist</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:22">dec_ctx</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:43">sample_aspect_ratio</name></name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="81:32"><if pos:start="79:5" pos:end="81:32">if<condition pos:start="79:7" pos:end="79:16">(<expr pos:start="79:8" pos:end="79:15"><operator pos:start="79:8" pos:end="79:8">!</operator><name pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:11">sar</name><operator pos:start="79:12" pos:end="79:12">.</operator><name pos:start="79:13" pos:end="79:15">den</name></name></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:32"><block_content pos:start="81:9" pos:end="81:32">

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:11">sar</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <operator pos:start="81:15" pos:end="81:15">(</operator><name pos:start="81:16" pos:end="81:25">AVRational</name><operator pos:start="81:26" pos:end="81:26">)</operator><block pos:start="81:27" pos:end="81:31">{<expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>,<expr pos:start="81:30" pos:end="81:30"><literal type="number" pos:start="81:30" pos:end="81:30">1</literal></expr>}</block></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:32"><expr pos:start="83:5" pos:end="83:31"><call pos:start="83:5" pos:end="83:31"><name pos:start="83:5" pos:end="83:18">av_bprint_init</name><argument_list pos:start="83:19" pos:end="83:31">(<argument pos:start="83:20" pos:end="83:24"><expr pos:start="83:20" pos:end="83:24"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:24">args</name></expr></argument>, <argument pos:start="83:27" pos:end="83:27"><expr pos:start="83:27" pos:end="83:27"><literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr></argument>, <argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><literal type="number" pos:start="83:30" pos:end="83:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="97:93"><expr pos:start="85:5" pos:end="97:92"><call pos:start="85:5" pos:end="97:92"><name pos:start="85:5" pos:end="85:14">av_bprintf</name><argument_list pos:start="85:15" pos:end="97:92">(<argument pos:start="85:16" pos:end="85:20"><expr pos:start="85:16" pos:end="85:20"><operator pos:start="85:16" pos:end="85:16">&amp;</operator><name pos:start="85:17" pos:end="85:20">args</name></expr></argument>,

             <argument pos:start="87:14" pos:end="89:52"><expr pos:start="87:14" pos:end="89:52"><literal type="string" pos:start="87:14" pos:end="87:59">"video_size=%dx%d:pix_fmt=%d:time_base=%d/%d:"</literal>

             <literal type="string" pos:start="89:14" pos:end="89:52">"pixel_aspect=%d/%d:sws_param=flags=%d"</literal></expr></argument>, <argument pos:start="89:55" pos:end="89:73"><expr pos:start="89:55" pos:end="89:73"><name pos:start="89:55" pos:end="89:73"><name pos:start="89:55" pos:end="89:57">ist</name><operator pos:start="89:58" pos:end="89:59">-&gt;</operator><name pos:start="89:60" pos:end="89:73">resample_width</name></name></expr></argument>,

             <argument pos:start="91:14" pos:end="91:33"><expr pos:start="91:14" pos:end="91:33"><name pos:start="91:14" pos:end="91:33"><name pos:start="91:14" pos:end="91:16">ist</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:33">resample_height</name></name></expr></argument>,

             <argument pos:start="93:14" pos:end="93:96"><expr pos:start="93:14" pos:end="93:96"><ternary pos:start="93:14" pos:end="93:96"><condition pos:start="93:14" pos:end="93:41"><expr pos:start="93:14" pos:end="93:39"><name pos:start="93:14" pos:end="93:39"><name pos:start="93:14" pos:end="93:16">ist</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:39">hwaccel_retrieve_data</name></name></expr> ?</condition><then pos:start="93:43" pos:end="93:72"> <expr pos:start="93:43" pos:end="93:72"><name pos:start="93:43" pos:end="93:72"><name pos:start="93:43" pos:end="93:45">ist</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:72">hwaccel_retrieved_pix_fmt</name></name></expr> </then><else pos:start="93:74" pos:end="93:96">: <expr pos:start="93:76" pos:end="93:96"><name pos:start="93:76" pos:end="93:96"><name pos:start="93:76" pos:end="93:78">ist</name><operator pos:start="93:79" pos:end="93:80">-&gt;</operator><name pos:start="93:81" pos:end="93:96">resample_pix_fmt</name></name></expr></else></ternary></expr></argument>,

             <argument pos:start="95:14" pos:end="95:19"><expr pos:start="95:14" pos:end="95:19"><name pos:start="95:14" pos:end="95:19"><name pos:start="95:14" pos:end="95:15">tb</name><operator pos:start="95:16" pos:end="95:16">.</operator><name pos:start="95:17" pos:end="95:19">num</name></name></expr></argument>, <argument pos:start="95:22" pos:end="95:27"><expr pos:start="95:22" pos:end="95:27"><name pos:start="95:22" pos:end="95:27"><name pos:start="95:22" pos:end="95:23">tb</name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:27">den</name></name></expr></argument>, <argument pos:start="95:30" pos:end="95:36"><expr pos:start="95:30" pos:end="95:36"><name pos:start="95:30" pos:end="95:36"><name pos:start="95:30" pos:end="95:32">sar</name><operator pos:start="95:33" pos:end="95:33">.</operator><name pos:start="95:34" pos:end="95:36">num</name></name></expr></argument>, <argument pos:start="95:39" pos:end="95:45"><expr pos:start="95:39" pos:end="95:45"><name pos:start="95:39" pos:end="95:45"><name pos:start="95:39" pos:end="95:41">sar</name><operator pos:start="95:42" pos:end="95:42">.</operator><name pos:start="95:43" pos:end="95:45">den</name></name></expr></argument>,

             <argument pos:start="97:14" pos:end="97:91"><expr pos:start="97:14" pos:end="97:91"><name pos:start="97:14" pos:end="97:25">SWS_BILINEAR</name> <operator pos:start="97:27" pos:end="97:27">+</operator> <operator pos:start="97:29" pos:end="97:29">(</operator><ternary pos:start="97:30" pos:end="97:90"><condition pos:start="97:30" pos:end="97:75"><expr pos:start="97:30" pos:end="97:73"><operator pos:start="97:30" pos:end="97:30">(</operator><name pos:start="97:31" pos:end="97:49"><name pos:start="97:31" pos:end="97:33">ist</name><operator pos:start="97:34" pos:end="97:35">-&gt;</operator><name pos:start="97:36" pos:end="97:42">dec_ctx</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:49">flags</name></name><operator pos:start="97:50" pos:end="97:50">&amp;</operator><name pos:start="97:51" pos:end="97:72">AV_CODEC_FLAG_BITEXACT</name><operator pos:start="97:73" pos:end="97:73">)</operator></expr> ?</condition><then pos:start="97:77" pos:end="97:88"> <expr pos:start="97:77" pos:end="97:88"><name pos:start="97:77" pos:end="97:88">SWS_BITEXACT</name></expr></then><else pos:start="97:89" pos:end="97:90">:<expr pos:start="97:90" pos:end="97:90"><literal type="number" pos:start="97:90" pos:end="97:90">0</literal></expr></else></ternary><operator pos:start="97:91" pos:end="97:91">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:63"><if pos:start="99:5" pos:end="101:63">if <condition pos:start="99:8" pos:end="99:25">(<expr pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:10">fr</name><operator pos:start="99:11" pos:end="99:11">.</operator><name pos:start="99:12" pos:end="99:14">num</name></name> <operator pos:start="99:16" pos:end="99:17">&amp;&amp;</operator> <name pos:start="99:19" pos:end="99:24"><name pos:start="99:19" pos:end="99:20">fr</name><operator pos:start="99:21" pos:end="99:21">.</operator><name pos:start="99:22" pos:end="99:24">den</name></name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:63"><block_content pos:start="101:9" pos:end="101:63">

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><call pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:18">av_bprintf</name><argument_list pos:start="101:19" pos:end="101:62">(<argument pos:start="101:20" pos:end="101:24"><expr pos:start="101:20" pos:end="101:24"><operator pos:start="101:20" pos:end="101:20">&amp;</operator><name pos:start="101:21" pos:end="101:24">args</name></expr></argument>, <argument pos:start="101:27" pos:end="101:45"><expr pos:start="101:27" pos:end="101:45"><literal type="string" pos:start="101:27" pos:end="101:45">":frame_rate=%d/%d"</literal></expr></argument>, <argument pos:start="101:48" pos:end="101:53"><expr pos:start="101:48" pos:end="101:53"><name pos:start="101:48" pos:end="101:53"><name pos:start="101:48" pos:end="101:49">fr</name><operator pos:start="101:50" pos:end="101:50">.</operator><name pos:start="101:51" pos:end="101:53">num</name></name></expr></argument>, <argument pos:start="101:56" pos:end="101:61"><expr pos:start="101:56" pos:end="101:61"><name pos:start="101:56" pos:end="101:61"><name pos:start="101:56" pos:end="101:57">fr</name><operator pos:start="101:58" pos:end="101:58">.</operator><name pos:start="101:59" pos:end="101:61">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="105:46"><expr pos:start="103:5" pos:end="105:45"><call pos:start="103:5" pos:end="105:45"><name pos:start="103:5" pos:end="103:12">snprintf</name><argument_list pos:start="103:13" pos:end="105:45">(<argument pos:start="103:14" pos:end="103:17"><expr pos:start="103:14" pos:end="103:17"><name pos:start="103:14" pos:end="103:17">name</name></expr></argument>, <argument pos:start="103:20" pos:end="103:31"><expr pos:start="103:20" pos:end="103:31"><sizeof pos:start="103:20" pos:end="103:31">sizeof<argument_list pos:start="103:26" pos:end="103:31">(<argument pos:start="103:27" pos:end="103:30"><expr pos:start="103:27" pos:end="103:30"><name pos:start="103:27" pos:end="103:30">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="103:34" pos:end="103:67"><expr pos:start="103:34" pos:end="103:67"><literal type="string" pos:start="103:34" pos:end="103:67">"graph %d input from stream %d:%d"</literal></expr></argument>, <argument pos:start="103:70" pos:end="103:78"><expr pos:start="103:70" pos:end="103:78"><name pos:start="103:70" pos:end="103:78"><name pos:start="103:70" pos:end="103:71">fg</name><operator pos:start="103:72" pos:end="103:73">-&gt;</operator><name pos:start="103:74" pos:end="103:78">index</name></name></expr></argument>,

             <argument pos:start="105:14" pos:end="105:28"><expr pos:start="105:14" pos:end="105:28"><name pos:start="105:14" pos:end="105:28"><name pos:start="105:14" pos:end="105:16">ist</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:28">file_index</name></name></expr></argument>, <argument pos:start="105:31" pos:end="105:44"><expr pos:start="105:31" pos:end="105:44"><name pos:start="105:31" pos:end="105:44"><name pos:start="105:31" pos:end="105:33">ist</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:37">st</name><operator pos:start="105:38" pos:end="105:39">-&gt;</operator><name pos:start="105:40" pos:end="105:44">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <if_stmt pos:start="111:5" pos:end="115:19"><if pos:start="111:5" pos:end="115:19">if <condition pos:start="111:8" pos:end="113:76">(<expr pos:start="111:9" pos:end="113:75"><operator pos:start="111:9" pos:end="111:9">(</operator><name pos:start="111:10" pos:end="111:12">ret</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <call pos:start="111:16" pos:end="113:70"><name pos:start="111:16" pos:end="111:43">avfilter_graph_create_filter</name><argument_list pos:start="111:44" pos:end="113:70">(<argument pos:start="111:45" pos:end="111:60"><expr pos:start="111:45" pos:end="111:60"><operator pos:start="111:45" pos:end="111:45">&amp;</operator><name pos:start="111:46" pos:end="111:60"><name pos:start="111:46" pos:end="111:52">ifilter</name><operator pos:start="111:53" pos:end="111:54">-&gt;</operator><name pos:start="111:55" pos:end="111:60">filter</name></name></expr></argument>, <argument pos:start="111:63" pos:end="111:73"><expr pos:start="111:63" pos:end="111:73"><name pos:start="111:63" pos:end="111:73">buffer_filt</name></expr></argument>, <argument pos:start="111:76" pos:end="111:79"><expr pos:start="111:76" pos:end="111:79"><name pos:start="111:76" pos:end="111:79">name</name></expr></argument>,

                                            <argument pos:start="113:45" pos:end="113:52"><expr pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:48">args</name><operator pos:start="113:49" pos:end="113:49">.</operator><name pos:start="113:50" pos:end="113:52">str</name></name></expr></argument>, <argument pos:start="113:55" pos:end="113:58"><expr pos:start="113:55" pos:end="113:58"><name pos:start="113:55" pos:end="113:58">NULL</name></expr></argument>, <argument pos:start="113:61" pos:end="113:69"><expr pos:start="113:61" pos:end="113:69"><name pos:start="113:61" pos:end="113:69"><name pos:start="113:61" pos:end="113:62">fg</name><operator pos:start="113:63" pos:end="113:64">-&gt;</operator><name pos:start="113:65" pos:end="113:69">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="113:71" pos:end="113:71">)</operator> <operator pos:start="113:73" pos:end="113:73">&lt;</operator> <literal type="number" pos:start="113:75" pos:end="113:75">0</literal></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:19"><block_content pos:start="115:9" pos:end="115:19">

        <return pos:start="115:9" pos:end="115:19">return <expr pos:start="115:16" pos:end="115:18"><name pos:start="115:16" pos:end="115:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:44"><expr pos:start="117:5" pos:end="117:43"><name pos:start="117:5" pos:end="117:22"><name pos:start="117:5" pos:end="117:7">par</name><operator pos:start="117:8" pos:end="117:9">-&gt;</operator><name pos:start="117:10" pos:end="117:22">hw_frames_ctx</name></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <name pos:start="117:26" pos:end="117:43"><name pos:start="117:26" pos:end="117:28">ist</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:43">hw_frames_ctx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:60"><expr pos:start="119:5" pos:end="119:59"><name pos:start="119:5" pos:end="119:7">ret</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <call pos:start="119:11" pos:end="119:59"><name pos:start="119:11" pos:end="119:37">av_buffersrc_parameters_set</name><argument_list pos:start="119:38" pos:end="119:59">(<argument pos:start="119:39" pos:end="119:53"><expr pos:start="119:39" pos:end="119:53"><name pos:start="119:39" pos:end="119:53"><name pos:start="119:39" pos:end="119:45">ifilter</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:53">filter</name></name></expr></argument>, <argument pos:start="119:56" pos:end="119:58"><expr pos:start="119:56" pos:end="119:58"><name pos:start="119:56" pos:end="119:58">par</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="123:19"><if pos:start="121:5" pos:end="123:19">if <condition pos:start="121:8" pos:end="121:16">(<expr pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">&lt;</operator> <literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:19"><block_content pos:start="123:9" pos:end="123:19">

        <return pos:start="123:9" pos:end="123:19">return <expr pos:start="123:16" pos:end="123:18"><name pos:start="123:16" pos:end="123:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:19"><expr pos:start="125:5" pos:end="125:18"><call pos:start="125:5" pos:end="125:18"><name pos:start="125:5" pos:end="125:12">av_freep</name><argument_list pos:start="125:13" pos:end="125:18">(<argument pos:start="125:14" pos:end="125:17"><expr pos:start="125:14" pos:end="125:17"><operator pos:start="125:14" pos:end="125:14">&amp;</operator><name pos:start="125:15" pos:end="125:17">par</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:34"><expr pos:start="127:5" pos:end="127:33"><name pos:start="127:5" pos:end="127:15">last_filter</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:33"><name pos:start="127:19" pos:end="127:25">ifilter</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:33">filter</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="131:5" pos:end="169:5"><if pos:start="131:5" pos:end="169:5">if <condition pos:start="131:8" pos:end="131:24">(<expr pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:11">ist</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:23">autorotate</name></name></expr>)</condition> <block pos:start="131:26" pos:end="169:5">{<block_content pos:start="133:9" pos:end="167:23">

        <decl_stmt pos:start="133:9" pos:end="133:45"><decl pos:start="133:9" pos:end="133:44"><type pos:start="133:9" pos:end="133:14"><name pos:start="133:9" pos:end="133:14">double</name></type> <name pos:start="133:16" pos:end="133:20">theta</name> <init pos:start="133:22" pos:end="133:44">= <expr pos:start="133:24" pos:end="133:44"><call pos:start="133:24" pos:end="133:44"><name pos:start="133:24" pos:end="133:35">get_rotation</name><argument_list pos:start="133:36" pos:end="133:44">(<argument pos:start="133:37" pos:end="133:43"><expr pos:start="133:37" pos:end="133:43"><name pos:start="133:37" pos:end="133:43"><name pos:start="133:37" pos:end="133:39">ist</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:43">st</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="137:9" pos:end="163:9"><if pos:start="137:9" pos:end="141:9">if <condition pos:start="137:12" pos:end="137:35">(<expr pos:start="137:13" pos:end="137:34"><call pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:16">fabs</name><argument_list pos:start="137:17" pos:end="137:28">(<argument pos:start="137:18" pos:end="137:27"><expr pos:start="137:18" pos:end="137:27"><name pos:start="137:18" pos:end="137:22">theta</name> <operator pos:start="137:24" pos:end="137:24">-</operator> <literal type="number" pos:start="137:26" pos:end="137:27">90</literal></expr></argument>)</argument_list></call> <operator pos:start="137:30" pos:end="137:30">&lt;</operator> <literal type="number" pos:start="137:32" pos:end="137:34">1.0</literal></expr>)</condition> <block pos:start="137:37" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:78">

            <expr_stmt pos:start="139:13" pos:end="139:78"><expr pos:start="139:13" pos:end="139:77"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="139:77"><name pos:start="139:19" pos:end="139:31">insert_filter</name><argument_list pos:start="139:32" pos:end="139:77">(<argument pos:start="139:33" pos:end="139:44"><expr pos:start="139:33" pos:end="139:44"><operator pos:start="139:33" pos:end="139:33">&amp;</operator><name pos:start="139:34" pos:end="139:44">last_filter</name></expr></argument>, <argument pos:start="139:47" pos:end="139:54"><expr pos:start="139:47" pos:end="139:54"><operator pos:start="139:47" pos:end="139:47">&amp;</operator><name pos:start="139:48" pos:end="139:54">pad_idx</name></expr></argument>, <argument pos:start="139:57" pos:end="139:67"><expr pos:start="139:57" pos:end="139:67"><literal type="string" pos:start="139:57" pos:end="139:67">"transpose"</literal></expr></argument>, <argument pos:start="139:70" pos:end="139:76"><expr pos:start="139:70" pos:end="139:76"><literal type="string" pos:start="139:70" pos:end="139:76">"clock"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="141:11" pos:end="151:9">else if <condition pos:start="141:19" pos:end="141:43">(<expr pos:start="141:20" pos:end="141:42"><call pos:start="141:20" pos:end="141:36"><name pos:start="141:20" pos:end="141:23">fabs</name><argument_list pos:start="141:24" pos:end="141:36">(<argument pos:start="141:25" pos:end="141:35"><expr pos:start="141:25" pos:end="141:35"><name pos:start="141:25" pos:end="141:29">theta</name> <operator pos:start="141:31" pos:end="141:31">-</operator> <literal type="number" pos:start="141:33" pos:end="141:35">180</literal></expr></argument>)</argument_list></call> <operator pos:start="141:38" pos:end="141:38">&lt;</operator> <literal type="number" pos:start="141:40" pos:end="141:42">1.0</literal></expr>)</condition> <block pos:start="141:45" pos:end="151:9">{<block_content pos:start="143:13" pos:end="149:71">

            <expr_stmt pos:start="143:13" pos:end="143:71"><expr pos:start="143:13" pos:end="143:70"><name pos:start="143:13" pos:end="143:15">ret</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:70"><name pos:start="143:19" pos:end="143:31">insert_filter</name><argument_list pos:start="143:32" pos:end="143:70">(<argument pos:start="143:33" pos:end="143:44"><expr pos:start="143:33" pos:end="143:44"><operator pos:start="143:33" pos:end="143:33">&amp;</operator><name pos:start="143:34" pos:end="143:44">last_filter</name></expr></argument>, <argument pos:start="143:47" pos:end="143:54"><expr pos:start="143:47" pos:end="143:54"><operator pos:start="143:47" pos:end="143:47">&amp;</operator><name pos:start="143:48" pos:end="143:54">pad_idx</name></expr></argument>, <argument pos:start="143:57" pos:end="143:63"><expr pos:start="143:57" pos:end="143:63"><literal type="string" pos:start="143:57" pos:end="143:63">"hflip"</literal></expr></argument>, <argument pos:start="143:66" pos:end="143:69"><expr pos:start="143:66" pos:end="143:69"><name pos:start="143:66" pos:end="143:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="147:27"><if pos:start="145:13" pos:end="147:27">if <condition pos:start="145:16" pos:end="145:24">(<expr pos:start="145:17" pos:end="145:23"><name pos:start="145:17" pos:end="145:19">ret</name> <operator pos:start="145:21" pos:end="145:21">&lt;</operator> <literal type="number" pos:start="145:23" pos:end="145:23">0</literal></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:27"><block_content pos:start="147:17" pos:end="147:27">

                <return pos:start="147:17" pos:end="147:27">return <expr pos:start="147:24" pos:end="147:26"><name pos:start="147:24" pos:end="147:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:71"><expr pos:start="149:13" pos:end="149:70"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="149:70"><name pos:start="149:19" pos:end="149:31">insert_filter</name><argument_list pos:start="149:32" pos:end="149:70">(<argument pos:start="149:33" pos:end="149:44"><expr pos:start="149:33" pos:end="149:44"><operator pos:start="149:33" pos:end="149:33">&amp;</operator><name pos:start="149:34" pos:end="149:44">last_filter</name></expr></argument>, <argument pos:start="149:47" pos:end="149:54"><expr pos:start="149:47" pos:end="149:54"><operator pos:start="149:47" pos:end="149:47">&amp;</operator><name pos:start="149:48" pos:end="149:54">pad_idx</name></expr></argument>, <argument pos:start="149:57" pos:end="149:63"><expr pos:start="149:57" pos:end="149:63"><literal type="string" pos:start="149:57" pos:end="149:63">"vflip"</literal></expr></argument>, <argument pos:start="149:66" pos:end="149:69"><expr pos:start="149:66" pos:end="149:69"><name pos:start="149:66" pos:end="149:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="151:11" pos:end="155:9">else if <condition pos:start="151:19" pos:end="151:43">(<expr pos:start="151:20" pos:end="151:42"><call pos:start="151:20" pos:end="151:36"><name pos:start="151:20" pos:end="151:23">fabs</name><argument_list pos:start="151:24" pos:end="151:36">(<argument pos:start="151:25" pos:end="151:35"><expr pos:start="151:25" pos:end="151:35"><name pos:start="151:25" pos:end="151:29">theta</name> <operator pos:start="151:31" pos:end="151:31">-</operator> <literal type="number" pos:start="151:33" pos:end="151:35">270</literal></expr></argument>)</argument_list></call> <operator pos:start="151:38" pos:end="151:38">&lt;</operator> <literal type="number" pos:start="151:40" pos:end="151:42">1.0</literal></expr>)</condition> <block pos:start="151:45" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:79">

            <expr_stmt pos:start="153:13" pos:end="153:79"><expr pos:start="153:13" pos:end="153:78"><name pos:start="153:13" pos:end="153:15">ret</name> <operator pos:start="153:17" pos:end="153:17">=</operator> <call pos:start="153:19" pos:end="153:78"><name pos:start="153:19" pos:end="153:31">insert_filter</name><argument_list pos:start="153:32" pos:end="153:78">(<argument pos:start="153:33" pos:end="153:44"><expr pos:start="153:33" pos:end="153:44"><operator pos:start="153:33" pos:end="153:33">&amp;</operator><name pos:start="153:34" pos:end="153:44">last_filter</name></expr></argument>, <argument pos:start="153:47" pos:end="153:54"><expr pos:start="153:47" pos:end="153:54"><operator pos:start="153:47" pos:end="153:47">&amp;</operator><name pos:start="153:48" pos:end="153:54">pad_idx</name></expr></argument>, <argument pos:start="153:57" pos:end="153:67"><expr pos:start="153:57" pos:end="153:67"><literal type="string" pos:start="153:57" pos:end="153:67">"transpose"</literal></expr></argument>, <argument pos:start="153:70" pos:end="153:77"><expr pos:start="153:70" pos:end="153:77"><literal type="string" pos:start="153:70" pos:end="153:77">"cclock"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="155:11" pos:end="163:9">else if <condition pos:start="155:19" pos:end="155:37">(<expr pos:start="155:20" pos:end="155:36"><call pos:start="155:20" pos:end="155:30"><name pos:start="155:20" pos:end="155:23">fabs</name><argument_list pos:start="155:24" pos:end="155:30">(<argument pos:start="155:25" pos:end="155:29"><expr pos:start="155:25" pos:end="155:29"><name pos:start="155:25" pos:end="155:29">theta</name></expr></argument>)</argument_list></call> <operator pos:start="155:32" pos:end="155:32">&gt;</operator> <literal type="number" pos:start="155:34" pos:end="155:36">1.0</literal></expr>)</condition> <block pos:start="155:39" pos:end="163:9">{<block_content pos:start="157:13" pos:end="161:78">

            <decl_stmt pos:start="157:13" pos:end="157:32"><decl pos:start="157:13" pos:end="157:31"><type pos:start="157:13" pos:end="157:16"><name pos:start="157:13" pos:end="157:16">char</name></type> <name pos:start="157:18" pos:end="157:31"><name pos:start="157:18" pos:end="157:27">rotate_buf</name><index pos:start="157:28" pos:end="157:31">[<expr pos:start="157:29" pos:end="157:30"><literal type="number" pos:start="157:29" pos:end="157:30">64</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:73"><expr pos:start="159:13" pos:end="159:72"><call pos:start="159:13" pos:end="159:72"><name pos:start="159:13" pos:end="159:20">snprintf</name><argument_list pos:start="159:21" pos:end="159:72">(<argument pos:start="159:22" pos:end="159:31"><expr pos:start="159:22" pos:end="159:31"><name pos:start="159:22" pos:end="159:31">rotate_buf</name></expr></argument>, <argument pos:start="159:34" pos:end="159:51"><expr pos:start="159:34" pos:end="159:51"><sizeof pos:start="159:34" pos:end="159:51">sizeof<argument_list pos:start="159:40" pos:end="159:51">(<argument pos:start="159:41" pos:end="159:50"><expr pos:start="159:41" pos:end="159:50"><name pos:start="159:41" pos:end="159:50">rotate_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="159:54" pos:end="159:64"><expr pos:start="159:54" pos:end="159:64"><literal type="string" pos:start="159:54" pos:end="159:64">"%f*PI/180"</literal></expr></argument>, <argument pos:start="159:67" pos:end="159:71"><expr pos:start="159:67" pos:end="159:71"><name pos:start="159:67" pos:end="159:71">theta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:78"><expr pos:start="161:13" pos:end="161:77"><name pos:start="161:13" pos:end="161:15">ret</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <call pos:start="161:19" pos:end="161:77"><name pos:start="161:19" pos:end="161:31">insert_filter</name><argument_list pos:start="161:32" pos:end="161:77">(<argument pos:start="161:33" pos:end="161:44"><expr pos:start="161:33" pos:end="161:44"><operator pos:start="161:33" pos:end="161:33">&amp;</operator><name pos:start="161:34" pos:end="161:44">last_filter</name></expr></argument>, <argument pos:start="161:47" pos:end="161:54"><expr pos:start="161:47" pos:end="161:54"><operator pos:start="161:47" pos:end="161:47">&amp;</operator><name pos:start="161:48" pos:end="161:54">pad_idx</name></expr></argument>, <argument pos:start="161:57" pos:end="161:64"><expr pos:start="161:57" pos:end="161:64"><literal type="string" pos:start="161:57" pos:end="161:64">"rotate"</literal></expr></argument>, <argument pos:start="161:67" pos:end="161:76"><expr pos:start="161:67" pos:end="161:76"><name pos:start="161:67" pos:end="161:76">rotate_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="165:9" pos:end="167:23"><if pos:start="165:9" pos:end="167:23">if <condition pos:start="165:12" pos:end="165:20">(<expr pos:start="165:13" pos:end="165:19"><name pos:start="165:13" pos:end="165:15">ret</name> <operator pos:start="165:17" pos:end="165:17">&lt;</operator> <literal type="number" pos:start="165:19" pos:end="165:19">0</literal></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:23"><block_content pos:start="167:13" pos:end="167:23">

            <return pos:start="167:13" pos:end="167:23">return <expr pos:start="167:20" pos:end="167:22"><name pos:start="167:20" pos:end="167:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="203:5"><if pos:start="173:5" pos:end="203:5">if <condition pos:start="173:8" pos:end="173:27">(<expr pos:start="173:9" pos:end="173:26"><name pos:start="173:9" pos:end="173:26"><name pos:start="173:9" pos:end="173:11">ist</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:22">framerate</name><operator pos:start="173:23" pos:end="173:23">.</operator><name pos:start="173:24" pos:end="173:26">num</name></name></expr>)</condition> <block pos:start="173:29" pos:end="203:5">{<block_content pos:start="175:9" pos:end="201:29">

        <decl_stmt pos:start="175:9" pos:end="175:32"><decl pos:start="175:9" pos:end="175:31"><type pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:23">AVFilterContext</name> <modifier pos:start="175:25" pos:end="175:25">*</modifier></type><name pos:start="175:26" pos:end="175:31">setpts</name></decl>;</decl_stmt>



        <expr_stmt pos:start="179:9" pos:end="181:50"><expr pos:start="179:9" pos:end="181:49"><call pos:start="179:9" pos:end="181:49"><name pos:start="179:9" pos:end="179:16">snprintf</name><argument_list pos:start="179:17" pos:end="181:49">(<argument pos:start="179:18" pos:end="179:21"><expr pos:start="179:18" pos:end="179:21"><name pos:start="179:18" pos:end="179:21">name</name></expr></argument>, <argument pos:start="179:24" pos:end="179:35"><expr pos:start="179:24" pos:end="179:35"><sizeof pos:start="179:24" pos:end="179:35">sizeof<argument_list pos:start="179:30" pos:end="179:35">(<argument pos:start="179:31" pos:end="179:34"><expr pos:start="179:31" pos:end="179:34"><name pos:start="179:31" pos:end="179:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="179:38" pos:end="179:76"><expr pos:start="179:38" pos:end="179:76"><literal type="string" pos:start="179:38" pos:end="179:76">"force CFR for input from stream %d:%d"</literal></expr></argument>,

                 <argument pos:start="181:18" pos:end="181:32"><expr pos:start="181:18" pos:end="181:32"><name pos:start="181:18" pos:end="181:32"><name pos:start="181:18" pos:end="181:20">ist</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:32">file_index</name></name></expr></argument>, <argument pos:start="181:35" pos:end="181:48"><expr pos:start="181:35" pos:end="181:48"><name pos:start="181:35" pos:end="181:48"><name pos:start="181:35" pos:end="181:37">ist</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:41">st</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="191:23"><if pos:start="183:9" pos:end="191:23">if <condition pos:start="183:12" pos:end="189:64">(<expr pos:start="183:13" pos:end="189:63"><operator pos:start="183:13" pos:end="183:13">(</operator><name pos:start="183:14" pos:end="183:16">ret</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <call pos:start="183:20" pos:end="189:58"><name pos:start="183:20" pos:end="183:47">avfilter_graph_create_filter</name><argument_list pos:start="183:48" pos:end="189:58">(<argument pos:start="183:49" pos:end="183:55"><expr pos:start="183:49" pos:end="183:55"><operator pos:start="183:49" pos:end="183:49">&amp;</operator><name pos:start="183:50" pos:end="183:55">setpts</name></expr></argument>,

                                                <argument pos:start="185:49" pos:end="185:78"><expr pos:start="185:49" pos:end="185:78"><call pos:start="185:49" pos:end="185:78"><name pos:start="185:49" pos:end="185:68">avfilter_get_by_name</name><argument_list pos:start="185:69" pos:end="185:78">(<argument pos:start="185:70" pos:end="185:77"><expr pos:start="185:70" pos:end="185:77"><literal type="string" pos:start="185:70" pos:end="185:77">"setpts"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="187:49" pos:end="187:52"><expr pos:start="187:49" pos:end="187:52"><name pos:start="187:49" pos:end="187:52">name</name></expr></argument>, <argument pos:start="187:55" pos:end="187:57"><expr pos:start="187:55" pos:end="187:57"><literal type="string" pos:start="187:55" pos:end="187:57">"N"</literal></expr></argument>, <argument pos:start="187:60" pos:end="187:63"><expr pos:start="187:60" pos:end="187:63"><name pos:start="187:60" pos:end="187:63">NULL</name></expr></argument>,

                                                <argument pos:start="189:49" pos:end="189:57"><expr pos:start="189:49" pos:end="189:57"><name pos:start="189:49" pos:end="189:57"><name pos:start="189:49" pos:end="189:50">fg</name><operator pos:start="189:51" pos:end="189:52">-&gt;</operator><name pos:start="189:53" pos:end="189:57">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="189:59" pos:end="189:59">)</operator> <operator pos:start="189:61" pos:end="189:61">&lt;</operator> <literal type="number" pos:start="189:63" pos:end="189:63">0</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:23"><block_content pos:start="191:13" pos:end="191:23">

            <return pos:start="191:13" pos:end="191:23">return <expr pos:start="191:20" pos:end="191:22"><name pos:start="191:20" pos:end="191:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="195:9" pos:end="197:23"><if pos:start="195:9" pos:end="197:23">if <condition pos:start="195:12" pos:end="195:65">(<expr pos:start="195:13" pos:end="195:64"><operator pos:start="195:13" pos:end="195:13">(</operator><name pos:start="195:14" pos:end="195:16">ret</name> <operator pos:start="195:18" pos:end="195:18">=</operator> <call pos:start="195:20" pos:end="195:59"><name pos:start="195:20" pos:end="195:32">avfilter_link</name><argument_list pos:start="195:33" pos:end="195:59">(<argument pos:start="195:34" pos:end="195:44"><expr pos:start="195:34" pos:end="195:44"><name pos:start="195:34" pos:end="195:44">last_filter</name></expr></argument>, <argument pos:start="195:47" pos:end="195:47"><expr pos:start="195:47" pos:end="195:47"><literal type="number" pos:start="195:47" pos:end="195:47">0</literal></expr></argument>, <argument pos:start="195:50" pos:end="195:55"><expr pos:start="195:50" pos:end="195:55"><name pos:start="195:50" pos:end="195:55">setpts</name></expr></argument>, <argument pos:start="195:58" pos:end="195:58"><expr pos:start="195:58" pos:end="195:58"><literal type="number" pos:start="195:58" pos:end="195:58">0</literal></expr></argument>)</argument_list></call><operator pos:start="195:60" pos:end="195:60">)</operator> <operator pos:start="195:62" pos:end="195:62">&lt;</operator> <literal type="number" pos:start="195:64" pos:end="195:64">0</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:23"><block_content pos:start="197:13" pos:end="197:23">

            <return pos:start="197:13" pos:end="197:23">return <expr pos:start="197:20" pos:end="197:22"><name pos:start="197:20" pos:end="197:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:29"><expr pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:19">last_filter</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <name pos:start="201:23" pos:end="201:28">setpts</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="237:5"><if pos:start="207:5" pos:end="237:5">if <condition pos:start="207:8" pos:end="207:23">(<expr pos:start="207:9" pos:end="207:22"><name pos:start="207:9" pos:end="207:22">do_deinterlace</name></expr>)</condition> <block pos:start="207:25" pos:end="237:5">{<block_content pos:start="209:9" pos:end="235:28">

        <decl_stmt pos:start="209:9" pos:end="209:31"><decl pos:start="209:9" pos:end="209:30"><type pos:start="209:9" pos:end="209:25"><name pos:start="209:9" pos:end="209:23">AVFilterContext</name> <modifier pos:start="209:25" pos:end="209:25">*</modifier></type><name pos:start="209:26" pos:end="209:30">yadif</name></decl>;</decl_stmt>



        <expr_stmt pos:start="213:9" pos:end="215:50"><expr pos:start="213:9" pos:end="215:49"><call pos:start="213:9" pos:end="215:49"><name pos:start="213:9" pos:end="213:16">snprintf</name><argument_list pos:start="213:17" pos:end="215:49">(<argument pos:start="213:18" pos:end="213:21"><expr pos:start="213:18" pos:end="213:21"><name pos:start="213:18" pos:end="213:21">name</name></expr></argument>, <argument pos:start="213:24" pos:end="213:35"><expr pos:start="213:24" pos:end="213:35"><sizeof pos:start="213:24" pos:end="213:35">sizeof<argument_list pos:start="213:30" pos:end="213:35">(<argument pos:start="213:31" pos:end="213:34"><expr pos:start="213:31" pos:end="213:34"><name pos:start="213:31" pos:end="213:34">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="213:38" pos:end="213:74"><expr pos:start="213:38" pos:end="213:74"><literal type="string" pos:start="213:38" pos:end="213:74">"deinterlace input from stream %d:%d"</literal></expr></argument>,

                 <argument pos:start="215:18" pos:end="215:32"><expr pos:start="215:18" pos:end="215:32"><name pos:start="215:18" pos:end="215:32"><name pos:start="215:18" pos:end="215:20">ist</name><operator pos:start="215:21" pos:end="215:22">-&gt;</operator><name pos:start="215:23" pos:end="215:32">file_index</name></name></expr></argument>, <argument pos:start="215:35" pos:end="215:48"><expr pos:start="215:35" pos:end="215:48"><name pos:start="215:35" pos:end="215:48"><name pos:start="215:35" pos:end="215:37">ist</name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:41">st</name><operator pos:start="215:42" pos:end="215:43">-&gt;</operator><name pos:start="215:44" pos:end="215:48">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="217:9" pos:end="225:23"><if pos:start="217:9" pos:end="225:23">if <condition pos:start="217:12" pos:end="223:64">(<expr pos:start="217:13" pos:end="223:63"><operator pos:start="217:13" pos:end="217:13">(</operator><name pos:start="217:14" pos:end="217:16">ret</name> <operator pos:start="217:18" pos:end="217:18">=</operator> <call pos:start="217:20" pos:end="223:58"><name pos:start="217:20" pos:end="217:47">avfilter_graph_create_filter</name><argument_list pos:start="217:48" pos:end="223:58">(<argument pos:start="217:49" pos:end="217:54"><expr pos:start="217:49" pos:end="217:54"><operator pos:start="217:49" pos:end="217:49">&amp;</operator><name pos:start="217:50" pos:end="217:54">yadif</name></expr></argument>,

                                                <argument pos:start="219:49" pos:end="219:77"><expr pos:start="219:49" pos:end="219:77"><call pos:start="219:49" pos:end="219:77"><name pos:start="219:49" pos:end="219:68">avfilter_get_by_name</name><argument_list pos:start="219:69" pos:end="219:77">(<argument pos:start="219:70" pos:end="219:76"><expr pos:start="219:70" pos:end="219:76"><literal type="string" pos:start="219:70" pos:end="219:76">"yadif"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                                <argument pos:start="221:49" pos:end="221:52"><expr pos:start="221:49" pos:end="221:52"><name pos:start="221:49" pos:end="221:52">name</name></expr></argument>, <argument pos:start="221:55" pos:end="221:56"><expr pos:start="221:55" pos:end="221:56"><literal type="string" pos:start="221:55" pos:end="221:56">""</literal></expr></argument>, <argument pos:start="221:59" pos:end="221:62"><expr pos:start="221:59" pos:end="221:62"><name pos:start="221:59" pos:end="221:62">NULL</name></expr></argument>,

                                                <argument pos:start="223:49" pos:end="223:57"><expr pos:start="223:49" pos:end="223:57"><name pos:start="223:49" pos:end="223:57"><name pos:start="223:49" pos:end="223:50">fg</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:57">graph</name></name></expr></argument>)</argument_list></call><operator pos:start="223:59" pos:end="223:59">)</operator> <operator pos:start="223:61" pos:end="223:61">&lt;</operator> <literal type="number" pos:start="223:63" pos:end="223:63">0</literal></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:23"><block_content pos:start="225:13" pos:end="225:23">

            <return pos:start="225:13" pos:end="225:23">return <expr pos:start="225:20" pos:end="225:22"><name pos:start="225:20" pos:end="225:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="229:9" pos:end="231:23"><if pos:start="229:9" pos:end="231:23">if <condition pos:start="229:12" pos:end="229:64">(<expr pos:start="229:13" pos:end="229:63"><operator pos:start="229:13" pos:end="229:13">(</operator><name pos:start="229:14" pos:end="229:16">ret</name> <operator pos:start="229:18" pos:end="229:18">=</operator> <call pos:start="229:20" pos:end="229:58"><name pos:start="229:20" pos:end="229:32">avfilter_link</name><argument_list pos:start="229:33" pos:end="229:58">(<argument pos:start="229:34" pos:end="229:44"><expr pos:start="229:34" pos:end="229:44"><name pos:start="229:34" pos:end="229:44">last_filter</name></expr></argument>, <argument pos:start="229:47" pos:end="229:47"><expr pos:start="229:47" pos:end="229:47"><literal type="number" pos:start="229:47" pos:end="229:47">0</literal></expr></argument>, <argument pos:start="229:50" pos:end="229:54"><expr pos:start="229:50" pos:end="229:54"><name pos:start="229:50" pos:end="229:54">yadif</name></expr></argument>, <argument pos:start="229:57" pos:end="229:57"><expr pos:start="229:57" pos:end="229:57"><literal type="number" pos:start="229:57" pos:end="229:57">0</literal></expr></argument>)</argument_list></call><operator pos:start="229:59" pos:end="229:59">)</operator> <operator pos:start="229:61" pos:end="229:61">&lt;</operator> <literal type="number" pos:start="229:63" pos:end="229:63">0</literal></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:23"><block_content pos:start="231:13" pos:end="231:23">

            <return pos:start="231:13" pos:end="231:23">return <expr pos:start="231:20" pos:end="231:22"><name pos:start="231:20" pos:end="231:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:28"><expr pos:start="235:9" pos:end="235:27"><name pos:start="235:9" pos:end="235:19">last_filter</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <name pos:start="235:23" pos:end="235:27">yadif</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="241:5" pos:end="243:46"><expr pos:start="241:5" pos:end="243:45"><call pos:start="241:5" pos:end="243:45"><name pos:start="241:5" pos:end="241:12">snprintf</name><argument_list pos:start="241:13" pos:end="243:45">(<argument pos:start="241:14" pos:end="241:17"><expr pos:start="241:14" pos:end="241:17"><name pos:start="241:14" pos:end="241:17">name</name></expr></argument>, <argument pos:start="241:20" pos:end="241:31"><expr pos:start="241:20" pos:end="241:31"><sizeof pos:start="241:20" pos:end="241:31">sizeof<argument_list pos:start="241:26" pos:end="241:31">(<argument pos:start="241:27" pos:end="241:30"><expr pos:start="241:27" pos:end="241:30"><name pos:start="241:27" pos:end="241:30">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="241:34" pos:end="241:62"><expr pos:start="241:34" pos:end="241:62"><literal type="string" pos:start="241:34" pos:end="241:62">"trim for input stream %d:%d"</literal></expr></argument>,

             <argument pos:start="243:14" pos:end="243:28"><expr pos:start="243:14" pos:end="243:28"><name pos:start="243:14" pos:end="243:28"><name pos:start="243:14" pos:end="243:16">ist</name><operator pos:start="243:17" pos:end="243:18">-&gt;</operator><name pos:start="243:19" pos:end="243:28">file_index</name></name></expr></argument>, <argument pos:start="243:31" pos:end="243:44"><expr pos:start="243:31" pos:end="243:44"><name pos:start="243:31" pos:end="243:44"><name pos:start="243:31" pos:end="243:33">ist</name><operator pos:start="243:34" pos:end="243:35">-&gt;</operator><name pos:start="243:36" pos:end="243:37">st</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:44">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="245:5" pos:end="253:5"><if pos:start="245:5" pos:end="253:5">if <condition pos:start="245:8" pos:end="245:16">(<expr pos:start="245:9" pos:end="245:15"><name pos:start="245:9" pos:end="245:15">copy_ts</name></expr>)</condition> <block pos:start="245:18" pos:end="253:5">{<block_content pos:start="247:9" pos:end="251:43">

        <expr_stmt pos:start="247:9" pos:end="247:71"><expr pos:start="247:9" pos:end="247:70"><name pos:start="247:9" pos:end="247:16">tsoffset</name> <operator pos:start="247:18" pos:end="247:18">=</operator> <ternary pos:start="247:20" pos:end="247:70"><condition pos:start="247:20" pos:end="247:52"><expr pos:start="247:20" pos:end="247:50"><name pos:start="247:20" pos:end="247:32"><name pos:start="247:20" pos:end="247:20">f</name><operator pos:start="247:21" pos:end="247:22">-&gt;</operator><name pos:start="247:23" pos:end="247:32">start_time</name></name> <operator pos:start="247:34" pos:end="247:35">==</operator> <name pos:start="247:37" pos:end="247:50">AV_NOPTS_VALUE</name></expr> ?</condition><then pos:start="247:54" pos:end="247:54"> <expr pos:start="247:54" pos:end="247:54"><literal type="number" pos:start="247:54" pos:end="247:54">0</literal></expr> </then><else pos:start="247:56" pos:end="247:70">: <expr pos:start="247:58" pos:end="247:70"><name pos:start="247:58" pos:end="247:70"><name pos:start="247:58" pos:end="247:58">f</name><operator pos:start="247:59" pos:end="247:60">-&gt;</operator><name pos:start="247:61" pos:end="247:70">start_time</name></name></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="251:43"><if pos:start="249:9" pos:end="251:43">if <condition pos:start="249:12" pos:end="249:67">(<expr pos:start="249:13" pos:end="249:66"><operator pos:start="249:13" pos:end="249:13">!</operator><name pos:start="249:14" pos:end="249:26">start_at_zero</name> <operator pos:start="249:28" pos:end="249:29">&amp;&amp;</operator> <name pos:start="249:31" pos:end="249:48"><name pos:start="249:31" pos:end="249:31">f</name><operator pos:start="249:32" pos:end="249:33">-&gt;</operator><name pos:start="249:34" pos:end="249:36">ctx</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:48">start_time</name></name> <operator pos:start="249:50" pos:end="249:51">!=</operator> <name pos:start="249:53" pos:end="249:66">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="251:13" pos:end="251:43"><block_content pos:start="251:13" pos:end="251:43">

            <expr_stmt pos:start="251:13" pos:end="251:43"><expr pos:start="251:13" pos:end="251:42"><name pos:start="251:13" pos:end="251:20">tsoffset</name> <operator pos:start="251:22" pos:end="251:23">+=</operator> <name pos:start="251:25" pos:end="251:42"><name pos:start="251:25" pos:end="251:25">f</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:30">ctx</name><operator pos:start="251:31" pos:end="251:32">-&gt;</operator><name pos:start="251:33" pos:end="251:42">start_time</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="255:5" pos:end="259:52"><expr pos:start="255:5" pos:end="259:51"><name pos:start="255:5" pos:end="255:7">ret</name> <operator pos:start="255:9" pos:end="255:9">=</operator> <call pos:start="255:11" pos:end="259:51"><name pos:start="255:11" pos:end="255:21">insert_trim</name><argument_list pos:start="255:22" pos:end="259:51">(<argument pos:start="255:23" pos:end="257:47"><expr pos:start="255:23" pos:end="257:47"><ternary pos:start="255:23" pos:end="257:47"><condition pos:start="255:23" pos:end="255:80"><expr pos:start="255:23" pos:end="255:78"><operator pos:start="255:23" pos:end="255:23">(</operator><operator pos:start="255:24" pos:end="255:24">(</operator><name pos:start="255:25" pos:end="255:37"><name pos:start="255:25" pos:end="255:25">f</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:37">start_time</name></name> <operator pos:start="255:39" pos:end="255:40">==</operator> <name pos:start="255:42" pos:end="255:55">AV_NOPTS_VALUE</name><operator pos:start="255:56" pos:end="255:56">)</operator> <operator pos:start="255:58" pos:end="255:59">||</operator> <operator pos:start="255:61" pos:end="255:61">!</operator><name pos:start="255:62" pos:end="255:77"><name pos:start="255:62" pos:end="255:62">f</name><operator pos:start="255:63" pos:end="255:64">-&gt;</operator><name pos:start="255:65" pos:end="255:77">accurate_seek</name></name><operator pos:start="255:78" pos:end="255:78">)</operator></expr> ?</condition><then pos:start="257:23" pos:end="257:36">

                      <expr pos:start="257:23" pos:end="257:36"><name pos:start="257:23" pos:end="257:36">AV_NOPTS_VALUE</name></expr> </then><else pos:start="257:38" pos:end="257:47">: <expr pos:start="257:40" pos:end="257:47"><name pos:start="257:40" pos:end="257:47">tsoffset</name></expr></else></ternary></expr></argument>, <argument pos:start="257:50" pos:end="257:66"><expr pos:start="257:50" pos:end="257:66"><name pos:start="257:50" pos:end="257:66"><name pos:start="257:50" pos:end="257:50">f</name><operator pos:start="257:51" pos:end="257:52">-&gt;</operator><name pos:start="257:53" pos:end="257:66">recording_time</name></name></expr></argument>,

                      <argument pos:start="259:23" pos:end="259:34"><expr pos:start="259:23" pos:end="259:34"><operator pos:start="259:23" pos:end="259:23">&amp;</operator><name pos:start="259:24" pos:end="259:34">last_filter</name></expr></argument>, <argument pos:start="259:37" pos:end="259:44"><expr pos:start="259:37" pos:end="259:44"><operator pos:start="259:37" pos:end="259:37">&amp;</operator><name pos:start="259:38" pos:end="259:44">pad_idx</name></expr></argument>, <argument pos:start="259:47" pos:end="259:50"><expr pos:start="259:47" pos:end="259:50"><name pos:start="259:47" pos:end="259:50">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="263:19"><if pos:start="261:5" pos:end="263:19">if <condition pos:start="261:8" pos:end="261:16">(<expr pos:start="261:9" pos:end="261:15"><name pos:start="261:9" pos:end="261:11">ret</name> <operator pos:start="261:13" pos:end="261:13">&lt;</operator> <literal type="number" pos:start="261:15" pos:end="261:15">0</literal></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="263:19"><block_content pos:start="263:9" pos:end="263:19">

        <return pos:start="263:9" pos:end="263:19">return <expr pos:start="263:16" pos:end="263:18"><name pos:start="263:16" pos:end="263:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="267:5" pos:end="269:19"><if pos:start="267:5" pos:end="269:19">if <condition pos:start="267:8" pos:end="267:79">(<expr pos:start="267:9" pos:end="267:78"><operator pos:start="267:9" pos:end="267:9">(</operator><name pos:start="267:10" pos:end="267:12">ret</name> <operator pos:start="267:14" pos:end="267:14">=</operator> <call pos:start="267:16" pos:end="267:73"><name pos:start="267:16" pos:end="267:28">avfilter_link</name><argument_list pos:start="267:29" pos:end="267:73">(<argument pos:start="267:30" pos:end="267:40"><expr pos:start="267:30" pos:end="267:40"><name pos:start="267:30" pos:end="267:40">last_filter</name></expr></argument>, <argument pos:start="267:43" pos:end="267:43"><expr pos:start="267:43" pos:end="267:43"><literal type="number" pos:start="267:43" pos:end="267:43">0</literal></expr></argument>, <argument pos:start="267:46" pos:end="267:59"><expr pos:start="267:46" pos:end="267:59"><name pos:start="267:46" pos:end="267:59"><name pos:start="267:46" pos:end="267:47">in</name><operator pos:start="267:48" pos:end="267:49">-&gt;</operator><name pos:start="267:50" pos:end="267:59">filter_ctx</name></name></expr></argument>, <argument pos:start="267:62" pos:end="267:72"><expr pos:start="267:62" pos:end="267:72"><name pos:start="267:62" pos:end="267:72"><name pos:start="267:62" pos:end="267:63">in</name><operator pos:start="267:64" pos:end="267:65">-&gt;</operator><name pos:start="267:66" pos:end="267:72">pad_idx</name></name></expr></argument>)</argument_list></call><operator pos:start="267:74" pos:end="267:74">)</operator> <operator pos:start="267:76" pos:end="267:76">&lt;</operator> <literal type="number" pos:start="267:78" pos:end="267:78">0</literal></expr>)</condition><block type="pseudo" pos:start="269:9" pos:end="269:19"><block_content pos:start="269:9" pos:end="269:19">

        <return pos:start="269:9" pos:end="269:19">return <expr pos:start="269:16" pos:end="269:18"><name pos:start="269:16" pos:end="269:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="271:5" pos:end="271:13">return <expr pos:start="271:12" pos:end="271:12"><literal type="number" pos:start="271:12" pos:end="271:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
