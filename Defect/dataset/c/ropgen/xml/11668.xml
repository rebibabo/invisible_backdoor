<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11668.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qemu_rbd_create</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">filename</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:57">QemuOpts</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">opts</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:17">bytes</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">objsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">obj_order</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">pool</name></decl>, <decl pos:start="13:23" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:27">name</name></decl>, <decl pos:start="13:30" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:34">conf</name></decl>, <decl pos:start="13:37" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:47">clientname</name></decl>, <decl pos:start="13:50" pos:end="13:58"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:50" pos:end="13:50">*</modifier></type><name pos:start="13:51" pos:end="13:58">keypairs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:24">secretid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">rados_t</name></type> <name pos:start="17:13" pos:end="17:19">cluster</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">rados_ioctx_t</name></type> <name pos:start="19:19" pos:end="19:24">io_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">QDict</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:18">options</name> <init pos:start="21:20" pos:end="21:25">= <expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">QemuOpts</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:22">rbd_opts</name> <init pos:start="23:24" pos:end="23:29">= <expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name> <init pos:start="25:13" pos:end="25:15">= <expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:53"><expr pos:start="29:5" pos:end="29:52"><name pos:start="29:5" pos:end="29:12">secretid</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:52"><name pos:start="29:16" pos:end="29:27">qemu_opt_get</name><argument_list pos:start="29:28" pos:end="29:52">(<argument pos:start="29:29" pos:end="29:32"><expr pos:start="29:29" pos:end="29:32"><name pos:start="29:29" pos:end="29:32">opts</name></expr></argument>, <argument pos:start="29:35" pos:end="29:51"><expr pos:start="29:35" pos:end="29:51"><literal type="string" pos:start="29:35" pos:end="29:51">"password-secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:26">/* Read out options */</comment>

    <expr_stmt pos:start="35:5" pos:end="37:39"><expr pos:start="35:5" pos:end="37:38"><name pos:start="35:5" pos:end="35:9">bytes</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="37:38"><name pos:start="35:13" pos:end="35:20">ROUND_UP</name><argument_list pos:start="35:21" pos:end="37:38">(<argument pos:start="35:22" pos:end="35:67"><expr pos:start="35:22" pos:end="35:67"><call pos:start="35:22" pos:end="35:67"><name pos:start="35:22" pos:end="35:42">qemu_opt_get_size_del</name><argument_list pos:start="35:43" pos:end="35:67">(<argument pos:start="35:44" pos:end="35:47"><expr pos:start="35:44" pos:end="35:47"><name pos:start="35:44" pos:end="35:47">opts</name></expr></argument>, <argument pos:start="35:50" pos:end="35:63"><expr pos:start="35:50" pos:end="35:63"><name pos:start="35:50" pos:end="35:63">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="35:66" pos:end="35:66"><expr pos:start="35:66" pos:end="35:66"><literal type="number" pos:start="35:66" pos:end="35:66">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="37:22" pos:end="37:37"><expr pos:start="37:22" pos:end="37:37"><name pos:start="37:22" pos:end="37:37">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:69"><expr pos:start="39:5" pos:end="39:68"><name pos:start="39:5" pos:end="39:11">objsize</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:68"><name pos:start="39:15" pos:end="39:35">qemu_opt_get_size_del</name><argument_list pos:start="39:36" pos:end="39:68">(<argument pos:start="39:37" pos:end="39:40"><expr pos:start="39:37" pos:end="39:40"><name pos:start="39:37" pos:end="39:40">opts</name></expr></argument>, <argument pos:start="39:43" pos:end="39:64"><expr pos:start="39:43" pos:end="39:64"><name pos:start="39:43" pos:end="39:64">BLOCK_OPT_CLUSTER_SIZE</name></expr></argument>, <argument pos:start="39:67" pos:end="39:67"><expr pos:start="39:67" pos:end="39:67"><literal type="number" pos:start="39:67" pos:end="39:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="65:5"><if pos:start="41:5" pos:end="65:5">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">objsize</name></expr>)</condition> <block pos:start="41:18" pos:end="65:5">{<block_content pos:start="43:9" pos:end="63:35">

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:36">(<expr pos:start="43:13" pos:end="43:35"><operator pos:start="43:13" pos:end="43:13">(</operator><name pos:start="43:14" pos:end="43:20">objsize</name> <operator pos:start="43:22" pos:end="43:22">-</operator> <literal type="number" pos:start="43:24" pos:end="43:24">1</literal><operator pos:start="43:25" pos:end="43:25">)</operator> <operator pos:start="43:27" pos:end="43:27">&amp;</operator> <name pos:start="43:29" pos:end="43:35">objsize</name></expr>)</condition> <block pos:start="43:38" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:22">    <comment type="block" pos:start="43:43" pos:end="43:65">/* not a power of 2? */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:64"><expr pos:start="45:13" pos:end="45:63"><call pos:start="45:13" pos:end="45:63"><name pos:start="45:13" pos:end="45:22">error_setg</name><argument_list pos:start="45:23" pos:end="45:63">(<argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><name pos:start="45:24" pos:end="45:27">errp</name></expr></argument>, <argument pos:start="45:30" pos:end="45:62"><expr pos:start="45:30" pos:end="45:62"><literal type="string" pos:start="45:30" pos:end="45:62">"obj size needs to be power of 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">-</operator><name pos:start="47:20" pos:end="47:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:22">goto <name pos:start="49:18" pos:end="49:21">exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:27">(<expr pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:19">objsize</name> <operator pos:start="53:21" pos:end="53:21">&lt;</operator> <literal type="number" pos:start="53:23" pos:end="53:26">4096</literal></expr>)</condition> <block pos:start="53:29" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:22">

            <expr_stmt pos:start="55:13" pos:end="55:51"><expr pos:start="55:13" pos:end="55:50"><call pos:start="55:13" pos:end="55:50"><name pos:start="55:13" pos:end="55:22">error_setg</name><argument_list pos:start="55:23" pos:end="55:50">(<argument pos:start="55:24" pos:end="55:27"><expr pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:27">errp</name></expr></argument>, <argument pos:start="55:30" pos:end="55:49"><expr pos:start="55:30" pos:end="55:49"><literal type="string" pos:start="55:30" pos:end="55:49">"obj size too small"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <operator pos:start="57:19" pos:end="57:19">-</operator><name pos:start="57:20" pos:end="57:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="59:13" pos:end="59:22">goto <name pos:start="59:18" pos:end="59:21">exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:17">obj_order</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:25">ctz32</name><argument_list pos:start="63:26" pos:end="63:34">(<argument pos:start="63:27" pos:end="63:33"><expr pos:start="63:27" pos:end="63:33"><name pos:start="63:27" pos:end="63:33">objsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:11">options</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:25"><name pos:start="69:15" pos:end="69:23">qdict_new</name><argument_list pos:start="69:24" pos:end="69:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:59"><expr pos:start="71:5" pos:end="71:58"><call pos:start="71:5" pos:end="71:58"><name pos:start="71:5" pos:end="71:27">qemu_rbd_parse_filename</name><argument_list pos:start="71:28" pos:end="71:58">(<argument pos:start="71:29" pos:end="71:36"><expr pos:start="71:29" pos:end="71:36"><name pos:start="71:29" pos:end="71:36">filename</name></expr></argument>, <argument pos:start="71:39" pos:end="71:45"><expr pos:start="71:39" pos:end="71:45"><name pos:start="71:39" pos:end="71:45">options</name></expr></argument>, <argument pos:start="71:48" pos:end="71:57"><expr pos:start="71:48" pos:end="71:57"><operator pos:start="71:48" pos:end="71:48">&amp;</operator><name pos:start="71:49" pos:end="71:57">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="81:5"><if pos:start="73:5" pos:end="81:5">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:17">local_err</name></expr>)</condition> <block pos:start="73:20" pos:end="81:5">{<block_content pos:start="75:9" pos:end="79:18">

        <expr_stmt pos:start="75:9" pos:end="75:22"><expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">-</operator><name pos:start="75:16" pos:end="75:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:41"><expr pos:start="77:9" pos:end="77:40"><call pos:start="77:9" pos:end="77:40"><name pos:start="77:9" pos:end="77:23">error_propagate</name><argument_list pos:start="77:24" pos:end="77:40">(<argument pos:start="77:25" pos:end="77:28"><expr pos:start="77:25" pos:end="77:28"><name pos:start="77:25" pos:end="77:28">errp</name></expr></argument>, <argument pos:start="77:31" pos:end="77:39"><expr pos:start="77:31" pos:end="77:39"><name pos:start="77:31" pos:end="77:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:18">goto <name pos:start="79:14" pos:end="79:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:70"><expr pos:start="85:5" pos:end="85:69"><name pos:start="85:5" pos:end="85:12">rbd_opts</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:69"><name pos:start="85:16" pos:end="85:31">qemu_opts_create</name><argument_list pos:start="85:32" pos:end="85:69">(<argument pos:start="85:33" pos:end="85:45"><expr pos:start="85:33" pos:end="85:45"><operator pos:start="85:33" pos:end="85:33">&amp;</operator><name pos:start="85:34" pos:end="85:45">runtime_opts</name></expr></argument>, <argument pos:start="85:48" pos:end="85:51"><expr pos:start="85:48" pos:end="85:51"><name pos:start="85:48" pos:end="85:51">NULL</name></expr></argument>, <argument pos:start="85:54" pos:end="85:54"><expr pos:start="85:54" pos:end="85:54"><literal type="number" pos:start="85:54" pos:end="85:54">0</literal></expr></argument>, <argument pos:start="85:57" pos:end="85:68"><expr pos:start="85:57" pos:end="85:68"><operator pos:start="85:57" pos:end="85:57">&amp;</operator><name pos:start="85:58" pos:end="85:68">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:58"><expr pos:start="87:5" pos:end="87:57"><call pos:start="87:5" pos:end="87:57"><name pos:start="87:5" pos:end="87:26">qemu_opts_absorb_qdict</name><argument_list pos:start="87:27" pos:end="87:57">(<argument pos:start="87:28" pos:end="87:35"><expr pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:35">rbd_opts</name></expr></argument>, <argument pos:start="87:38" pos:end="87:44"><expr pos:start="87:38" pos:end="87:44"><name pos:start="87:38" pos:end="87:44">options</name></expr></argument>, <argument pos:start="87:47" pos:end="87:56"><expr pos:start="87:47" pos:end="87:56"><operator pos:start="87:47" pos:end="87:47">&amp;</operator><name pos:start="87:48" pos:end="87:56">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:18">(<expr pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:17">local_err</name></expr>)</condition> <block pos:start="89:20" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:18">

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><call pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:23">error_propagate</name><argument_list pos:start="91:24" pos:end="91:40">(<argument pos:start="91:25" pos:end="91:28"><expr pos:start="91:25" pos:end="91:28"><name pos:start="91:25" pos:end="91:28">errp</name></expr></argument>, <argument pos:start="91:31" pos:end="91:39"><expr pos:start="91:31" pos:end="91:39"><name pos:start="91:31" pos:end="91:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">-</operator><name pos:start="93:16" pos:end="93:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:48"><expr pos:start="101:5" pos:end="101:47"><name pos:start="101:5" pos:end="101:8">pool</name>       <operator pos:start="101:16" pos:end="101:16">=</operator> <call pos:start="101:18" pos:end="101:47"><name pos:start="101:18" pos:end="101:29">qemu_opt_get</name><argument_list pos:start="101:30" pos:end="101:47">(<argument pos:start="101:31" pos:end="101:38"><expr pos:start="101:31" pos:end="101:38"><name pos:start="101:31" pos:end="101:38">rbd_opts</name></expr></argument>, <argument pos:start="101:41" pos:end="101:46"><expr pos:start="101:41" pos:end="101:46"><literal type="string" pos:start="101:41" pos:end="101:46">"pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:48"><expr pos:start="103:5" pos:end="103:47"><name pos:start="103:5" pos:end="103:8">conf</name>       <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:47"><name pos:start="103:18" pos:end="103:29">qemu_opt_get</name><argument_list pos:start="103:30" pos:end="103:47">(<argument pos:start="103:31" pos:end="103:38"><expr pos:start="103:31" pos:end="103:38"><name pos:start="103:31" pos:end="103:38">rbd_opts</name></expr></argument>, <argument pos:start="103:41" pos:end="103:46"><expr pos:start="103:41" pos:end="103:46"><literal type="string" pos:start="103:41" pos:end="103:46">"conf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:48"><expr pos:start="105:5" pos:end="105:47"><name pos:start="105:5" pos:end="105:14">clientname</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:47"><name pos:start="105:18" pos:end="105:29">qemu_opt_get</name><argument_list pos:start="105:30" pos:end="105:47">(<argument pos:start="105:31" pos:end="105:38"><expr pos:start="105:31" pos:end="105:38"><name pos:start="105:31" pos:end="105:38">rbd_opts</name></expr></argument>, <argument pos:start="105:41" pos:end="105:46"><expr pos:start="105:41" pos:end="105:46"><literal type="string" pos:start="105:41" pos:end="105:46">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:49"><expr pos:start="107:5" pos:end="107:48"><name pos:start="107:5" pos:end="107:8">name</name>       <operator pos:start="107:16" pos:end="107:16">=</operator> <call pos:start="107:18" pos:end="107:48"><name pos:start="107:18" pos:end="107:29">qemu_opt_get</name><argument_list pos:start="107:30" pos:end="107:48">(<argument pos:start="107:31" pos:end="107:38"><expr pos:start="107:31" pos:end="107:38"><name pos:start="107:31" pos:end="107:38">rbd_opts</name></expr></argument>, <argument pos:start="107:41" pos:end="107:47"><expr pos:start="107:41" pos:end="107:47"><literal type="string" pos:start="107:41" pos:end="107:47">"image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:58"><expr pos:start="109:5" pos:end="109:57"><name pos:start="109:5" pos:end="109:12">keypairs</name>   <operator pos:start="109:16" pos:end="109:16">=</operator> <call pos:start="109:18" pos:end="109:57"><name pos:start="109:18" pos:end="109:29">qemu_opt_get</name><argument_list pos:start="109:30" pos:end="109:57">(<argument pos:start="109:31" pos:end="109:38"><expr pos:start="109:31" pos:end="109:38"><name pos:start="109:31" pos:end="109:38">rbd_opts</name></expr></argument>, <argument pos:start="109:41" pos:end="109:56"><expr pos:start="109:41" pos:end="109:56"><literal type="string" pos:start="109:41" pos:end="109:56">"keyvalue-pairs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:45"><expr pos:start="113:5" pos:end="113:44"><name pos:start="113:5" pos:end="113:7">ret</name> <operator pos:start="113:9" pos:end="113:9">=</operator> <call pos:start="113:11" pos:end="113:44"><name pos:start="113:11" pos:end="113:22">rados_create</name><argument_list pos:start="113:23" pos:end="113:44">(<argument pos:start="113:24" pos:end="113:31"><expr pos:start="113:24" pos:end="113:31"><operator pos:start="113:24" pos:end="113:24">&amp;</operator><name pos:start="113:25" pos:end="113:31">cluster</name></expr></argument>, <argument pos:start="113:34" pos:end="113:43"><expr pos:start="113:34" pos:end="113:43"><name pos:start="113:34" pos:end="113:43">clientname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:16">(<expr pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">&lt;</operator> <literal type="number" pos:start="115:15" pos:end="115:15">0</literal></expr>)</condition> <block pos:start="115:18" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:18">

        <expr_stmt pos:start="117:9" pos:end="117:59"><expr pos:start="117:9" pos:end="117:58"><call pos:start="117:9" pos:end="117:58"><name pos:start="117:9" pos:end="117:24">error_setg_errno</name><argument_list pos:start="117:25" pos:end="117:58">(<argument pos:start="117:26" pos:end="117:29"><expr pos:start="117:26" pos:end="117:29"><name pos:start="117:26" pos:end="117:29">errp</name></expr></argument>, <argument pos:start="117:32" pos:end="117:35"><expr pos:start="117:32" pos:end="117:35"><operator pos:start="117:32" pos:end="117:32">-</operator><name pos:start="117:33" pos:end="117:35">ret</name></expr></argument>, <argument pos:start="117:38" pos:end="117:57"><expr pos:start="117:38" pos:end="117:57"><literal type="string" pos:start="117:38" pos:end="117:57">"error initializing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:18">goto <name pos:start="119:14" pos:end="119:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:65">/* try default location when conf=NULL, but ignore failure */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:46"><expr pos:start="127:5" pos:end="127:45"><name pos:start="127:5" pos:end="127:7">ret</name> <operator pos:start="127:9" pos:end="127:9">=</operator> <call pos:start="127:11" pos:end="127:45"><name pos:start="127:11" pos:end="127:30">rados_conf_read_file</name><argument_list pos:start="127:31" pos:end="127:45">(<argument pos:start="127:32" pos:end="127:38"><expr pos:start="127:32" pos:end="127:38"><name pos:start="127:32" pos:end="127:38">cluster</name></expr></argument>, <argument pos:start="127:41" pos:end="127:44"><expr pos:start="127:41" pos:end="127:44"><name pos:start="127:41" pos:end="127:44">conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="137:5"><if pos:start="129:5" pos:end="137:5">if <condition pos:start="129:8" pos:end="129:24">(<expr pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:12">conf</name> <operator pos:start="129:14" pos:end="129:15">&amp;&amp;</operator> <name pos:start="129:17" pos:end="129:19">ret</name> <operator pos:start="129:21" pos:end="129:21">&lt;</operator> <literal type="number" pos:start="129:23" pos:end="129:23">0</literal></expr>)</condition> <block pos:start="129:26" pos:end="137:5">{<block_content pos:start="131:9" pos:end="135:22">

        <expr_stmt pos:start="131:9" pos:end="131:73"><expr pos:start="131:9" pos:end="131:72"><call pos:start="131:9" pos:end="131:72"><name pos:start="131:9" pos:end="131:24">error_setg_errno</name><argument_list pos:start="131:25" pos:end="131:72">(<argument pos:start="131:26" pos:end="131:29"><expr pos:start="131:26" pos:end="131:29"><name pos:start="131:26" pos:end="131:29">errp</name></expr></argument>, <argument pos:start="131:32" pos:end="131:35"><expr pos:start="131:32" pos:end="131:35"><operator pos:start="131:32" pos:end="131:32">-</operator><name pos:start="131:33" pos:end="131:35">ret</name></expr></argument>, <argument pos:start="131:38" pos:end="131:65"><expr pos:start="131:38" pos:end="131:65"><literal type="string" pos:start="131:38" pos:end="131:65">"error reading conf file %s"</literal></expr></argument>, <argument pos:start="131:68" pos:end="131:71"><expr pos:start="131:68" pos:end="131:71"><name pos:start="131:68" pos:end="131:71">conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:19"><expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:11">ret</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <operator pos:start="133:15" pos:end="133:15">-</operator><name pos:start="133:16" pos:end="133:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:22">goto <name pos:start="135:14" pos:end="135:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:57"><expr pos:start="141:5" pos:end="141:56"><name pos:start="141:5" pos:end="141:7">ret</name> <operator pos:start="141:9" pos:end="141:9">=</operator> <call pos:start="141:11" pos:end="141:56"><name pos:start="141:11" pos:end="141:31">qemu_rbd_set_keypairs</name><argument_list pos:start="141:32" pos:end="141:56">(<argument pos:start="141:33" pos:end="141:39"><expr pos:start="141:33" pos:end="141:39"><name pos:start="141:33" pos:end="141:39">cluster</name></expr></argument>, <argument pos:start="141:42" pos:end="141:49"><expr pos:start="141:42" pos:end="141:49"><name pos:start="141:42" pos:end="141:49">keypairs</name></expr></argument>, <argument pos:start="141:52" pos:end="141:55"><expr pos:start="141:52" pos:end="141:55"><name pos:start="141:52" pos:end="141:55">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="149:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:16">(<expr pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:11">ret</name> <operator pos:start="143:13" pos:end="143:13">&lt;</operator> <literal type="number" pos:start="143:15" pos:end="143:15">0</literal></expr>)</condition> <block pos:start="143:18" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:22">

        <expr_stmt pos:start="145:9" pos:end="145:19"><expr pos:start="145:9" pos:end="145:18"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <operator pos:start="145:15" pos:end="145:15">-</operator><name pos:start="145:16" pos:end="145:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="147:9" pos:end="147:22">goto <name pos:start="147:14" pos:end="147:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:55">(<expr pos:start="153:9" pos:end="153:54"><call pos:start="153:9" pos:end="153:50"><name pos:start="153:9" pos:end="153:25">qemu_rbd_set_auth</name><argument_list pos:start="153:26" pos:end="153:50">(<argument pos:start="153:27" pos:end="153:33"><expr pos:start="153:27" pos:end="153:33"><name pos:start="153:27" pos:end="153:33">cluster</name></expr></argument>, <argument pos:start="153:36" pos:end="153:43"><expr pos:start="153:36" pos:end="153:43"><name pos:start="153:36" pos:end="153:43">secretid</name></expr></argument>, <argument pos:start="153:46" pos:end="153:49"><expr pos:start="153:46" pos:end="153:49"><name pos:start="153:46" pos:end="153:49">errp</name></expr></argument>)</argument_list></call> <operator pos:start="153:52" pos:end="153:52">&lt;</operator> <literal type="number" pos:start="153:54" pos:end="153:54">0</literal></expr>)</condition> <block pos:start="153:57" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:22">

        <expr_stmt pos:start="155:9" pos:end="155:19"><expr pos:start="155:9" pos:end="155:18"><name pos:start="155:9" pos:end="155:11">ret</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <operator pos:start="155:15" pos:end="155:15">-</operator><name pos:start="155:16" pos:end="155:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="157:9" pos:end="157:22">goto <name pos:start="157:14" pos:end="157:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:33"><expr pos:start="163:5" pos:end="163:32"><name pos:start="163:5" pos:end="163:7">ret</name> <operator pos:start="163:9" pos:end="163:9">=</operator> <call pos:start="163:11" pos:end="163:32"><name pos:start="163:11" pos:end="163:23">rados_connect</name><argument_list pos:start="163:24" pos:end="163:32">(<argument pos:start="163:25" pos:end="163:31"><expr pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:31">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">&lt;</operator> <literal type="number" pos:start="165:15" pos:end="165:15">0</literal></expr>)</condition> <block pos:start="165:18" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:22">

        <expr_stmt pos:start="167:9" pos:end="167:57"><expr pos:start="167:9" pos:end="167:56"><call pos:start="167:9" pos:end="167:56"><name pos:start="167:9" pos:end="167:24">error_setg_errno</name><argument_list pos:start="167:25" pos:end="167:56">(<argument pos:start="167:26" pos:end="167:29"><expr pos:start="167:26" pos:end="167:29"><name pos:start="167:26" pos:end="167:29">errp</name></expr></argument>, <argument pos:start="167:32" pos:end="167:35"><expr pos:start="167:32" pos:end="167:35"><operator pos:start="167:32" pos:end="167:32">-</operator><name pos:start="167:33" pos:end="167:35">ret</name></expr></argument>, <argument pos:start="167:38" pos:end="167:55"><expr pos:start="167:38" pos:end="167:55"><literal type="string" pos:start="167:38" pos:end="167:55">"error connecting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:22">goto <name pos:start="169:14" pos:end="169:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:53"><expr pos:start="175:5" pos:end="175:52"><name pos:start="175:5" pos:end="175:7">ret</name> <operator pos:start="175:9" pos:end="175:9">=</operator> <call pos:start="175:11" pos:end="175:52"><name pos:start="175:11" pos:end="175:28">rados_ioctx_create</name><argument_list pos:start="175:29" pos:end="175:52">(<argument pos:start="175:30" pos:end="175:36"><expr pos:start="175:30" pos:end="175:36"><name pos:start="175:30" pos:end="175:36">cluster</name></expr></argument>, <argument pos:start="175:39" pos:end="175:42"><expr pos:start="175:39" pos:end="175:42"><name pos:start="175:39" pos:end="175:42">pool</name></expr></argument>, <argument pos:start="175:45" pos:end="175:51"><expr pos:start="175:45" pos:end="175:51"><operator pos:start="175:45" pos:end="175:45">&amp;</operator><name pos:start="175:46" pos:end="175:51">io_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="183:5"><if pos:start="177:5" pos:end="183:5">if <condition pos:start="177:8" pos:end="177:16">(<expr pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">&lt;</operator> <literal type="number" pos:start="177:15" pos:end="177:15">0</literal></expr>)</condition> <block pos:start="177:18" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:22">

        <expr_stmt pos:start="179:9" pos:end="179:68"><expr pos:start="179:9" pos:end="179:67"><call pos:start="179:9" pos:end="179:67"><name pos:start="179:9" pos:end="179:24">error_setg_errno</name><argument_list pos:start="179:25" pos:end="179:67">(<argument pos:start="179:26" pos:end="179:29"><expr pos:start="179:26" pos:end="179:29"><name pos:start="179:26" pos:end="179:29">errp</name></expr></argument>, <argument pos:start="179:32" pos:end="179:35"><expr pos:start="179:32" pos:end="179:35"><operator pos:start="179:32" pos:end="179:32">-</operator><name pos:start="179:33" pos:end="179:35">ret</name></expr></argument>, <argument pos:start="179:38" pos:end="179:60"><expr pos:start="179:38" pos:end="179:60"><literal type="string" pos:start="179:38" pos:end="179:60">"error opening pool %s"</literal></expr></argument>, <argument pos:start="179:63" pos:end="179:66"><expr pos:start="179:63" pos:end="179:66"><name pos:start="179:63" pos:end="179:66">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="181:9" pos:end="181:22">goto <name pos:start="181:14" pos:end="181:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:54"><expr pos:start="187:5" pos:end="187:53"><name pos:start="187:5" pos:end="187:7">ret</name> <operator pos:start="187:9" pos:end="187:9">=</operator> <call pos:start="187:11" pos:end="187:53"><name pos:start="187:11" pos:end="187:20">rbd_create</name><argument_list pos:start="187:21" pos:end="187:53">(<argument pos:start="187:22" pos:end="187:27"><expr pos:start="187:22" pos:end="187:27"><name pos:start="187:22" pos:end="187:27">io_ctx</name></expr></argument>, <argument pos:start="187:30" pos:end="187:33"><expr pos:start="187:30" pos:end="187:33"><name pos:start="187:30" pos:end="187:33">name</name></expr></argument>, <argument pos:start="187:36" pos:end="187:40"><expr pos:start="187:36" pos:end="187:40"><name pos:start="187:36" pos:end="187:40">bytes</name></expr></argument>, <argument pos:start="187:43" pos:end="187:52"><expr pos:start="187:43" pos:end="187:52"><operator pos:start="187:43" pos:end="187:43">&amp;</operator><name pos:start="187:44" pos:end="187:52">obj_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="189:5" pos:end="193:5"><if pos:start="189:5" pos:end="193:5">if <condition pos:start="189:8" pos:end="189:16">(<expr pos:start="189:9" pos:end="189:15"><name pos:start="189:9" pos:end="189:11">ret</name> <operator pos:start="189:13" pos:end="189:13">&lt;</operator> <literal type="number" pos:start="189:15" pos:end="189:15">0</literal></expr>)</condition> <block pos:start="189:18" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:57">

        <expr_stmt pos:start="191:9" pos:end="191:57"><expr pos:start="191:9" pos:end="191:56"><call pos:start="191:9" pos:end="191:56"><name pos:start="191:9" pos:end="191:24">error_setg_errno</name><argument_list pos:start="191:25" pos:end="191:56">(<argument pos:start="191:26" pos:end="191:29"><expr pos:start="191:26" pos:end="191:29"><name pos:start="191:26" pos:end="191:29">errp</name></expr></argument>, <argument pos:start="191:32" pos:end="191:35"><expr pos:start="191:32" pos:end="191:35"><operator pos:start="191:32" pos:end="191:32">-</operator><name pos:start="191:33" pos:end="191:35">ret</name></expr></argument>, <argument pos:start="191:38" pos:end="191:55"><expr pos:start="191:38" pos:end="191:55"><literal type="string" pos:start="191:38" pos:end="191:55">"error rbd create"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:32"><expr pos:start="197:5" pos:end="197:31"><call pos:start="197:5" pos:end="197:31"><name pos:start="197:5" pos:end="197:23">rados_ioctx_destroy</name><argument_list pos:start="197:24" pos:end="197:31">(<argument pos:start="197:25" pos:end="197:30"><expr pos:start="197:25" pos:end="197:30"><name pos:start="197:25" pos:end="197:30">io_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="201:1" pos:end="201:9"><name pos:start="201:1" pos:end="201:8">shutdown</name>:</label>

    <expr_stmt pos:start="203:5" pos:end="203:28"><expr pos:start="203:5" pos:end="203:27"><call pos:start="203:5" pos:end="203:27"><name pos:start="203:5" pos:end="203:18">rados_shutdown</name><argument_list pos:start="203:19" pos:end="203:27">(<argument pos:start="203:20" pos:end="203:26"><expr pos:start="203:20" pos:end="203:26"><name pos:start="203:20" pos:end="203:26">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="207:1" pos:end="207:5"><name pos:start="207:1" pos:end="207:4">exit</name>:</label>

    <expr_stmt pos:start="209:5" pos:end="209:21"><expr pos:start="209:5" pos:end="209:20"><call pos:start="209:5" pos:end="209:20"><name pos:start="209:5" pos:end="209:11">QDECREF</name><argument_list pos:start="209:12" pos:end="209:20">(<argument pos:start="209:13" pos:end="209:19"><expr pos:start="209:13" pos:end="209:19"><name pos:start="209:13" pos:end="209:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:28"><expr pos:start="211:5" pos:end="211:27"><call pos:start="211:5" pos:end="211:27"><name pos:start="211:5" pos:end="211:17">qemu_opts_del</name><argument_list pos:start="211:18" pos:end="211:27">(<argument pos:start="211:19" pos:end="211:26"><expr pos:start="211:19" pos:end="211:26"><name pos:start="211:19" pos:end="211:26">rbd_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="213:5" pos:end="213:15">return <expr pos:start="213:12" pos:end="213:14"><name pos:start="213:12" pos:end="213:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
