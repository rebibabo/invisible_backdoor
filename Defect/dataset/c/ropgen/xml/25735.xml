<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25735.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:28">is_bit_set</name><parameter_list pos:start="1:29" pos:end="1:66">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:58">int64_t</name></type> <name pos:start="1:60" pos:end="1:65">bitnum</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:44">

    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:63"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:19">offset</name> <init pos:start="5:21" pos:end="5:63">= <expr pos:start="5:23" pos:end="5:63"><sizeof pos:start="5:23" pos:end="5:50">sizeof<argument_list pos:start="5:29" pos:end="5:50">(<argument pos:start="5:30" pos:end="5:49"><expr pos:start="5:30" pos:end="5:49">struct <name pos:start="5:37" pos:end="5:49">cow_header_v2</name></expr></argument>)</argument_list></sizeof> <operator pos:start="5:52" pos:end="5:52">+</operator> <name pos:start="5:54" pos:end="5:59">bitnum</name> <operator pos:start="5:61" pos:end="5:61">/</operator> <literal type="number" pos:start="5:63" pos:end="5:63">8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18">bitmap</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="13:27">(<expr pos:start="11:9" pos:end="13:26"><call pos:start="11:9" pos:end="11:61"><name pos:start="11:9" pos:end="11:18">bdrv_pread</name><argument_list pos:start="11:19" pos:end="11:61">(<argument pos:start="11:20" pos:end="11:27"><expr pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:27"><name pos:start="11:20" pos:end="11:21">bs</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:27">file</name></name></expr></argument>, <argument pos:start="11:30" pos:end="11:35"><expr pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:35">offset</name></expr></argument>, <argument pos:start="11:38" pos:end="11:44"><expr pos:start="11:38" pos:end="11:44"><operator pos:start="11:38" pos:end="11:38">&amp;</operator><name pos:start="11:39" pos:end="11:44">bitmap</name></expr></argument>, <argument pos:start="11:47" pos:end="11:60"><expr pos:start="11:47" pos:end="11:60"><sizeof pos:start="11:47" pos:end="11:60">sizeof<argument_list pos:start="11:53" pos:end="11:60">(<argument pos:start="11:54" pos:end="11:59"><expr pos:start="11:54" pos:end="11:59"><name pos:start="11:54" pos:end="11:59">bitmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="11:63" pos:end="11:64">!=</operator>

	    <sizeof pos:start="13:13" pos:end="13:26">sizeof<argument_list pos:start="13:19" pos:end="13:26">(<argument pos:start="13:20" pos:end="13:25"><expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:25">bitmap</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="13:29" pos:end="17:5">{<block_content pos:start="15:8" pos:end="15:21">

       <return pos:start="15:8" pos:end="15:21">return <expr pos:start="15:15" pos:end="15:20"><operator pos:start="15:15" pos:end="15:15">-</operator><name pos:start="15:16" pos:end="15:20">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="21:5" pos:end="21:44">return <expr pos:start="21:12" pos:end="21:43"><operator pos:start="21:12" pos:end="21:12">!</operator><operator pos:start="21:13" pos:end="21:13">!</operator><operator pos:start="21:14" pos:end="21:14">(</operator><name pos:start="21:15" pos:end="21:20">bitmap</name> <operator pos:start="21:22" pos:end="21:22">&amp;</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><literal type="number" pos:start="21:25" pos:end="21:25">1</literal> <operator pos:start="21:27" pos:end="21:28">&lt;&lt;</operator> <operator pos:start="21:30" pos:end="21:30">(</operator><name pos:start="21:31" pos:end="21:36">bitnum</name> <operator pos:start="21:38" pos:end="21:38">%</operator> <literal type="number" pos:start="21:40" pos:end="21:40">8</literal><operator pos:start="21:41" pos:end="21:41">)</operator><operator pos:start="21:42" pos:end="21:42">)</operator><operator pos:start="21:43" pos:end="21:43">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
