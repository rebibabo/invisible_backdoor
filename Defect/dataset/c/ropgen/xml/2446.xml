<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2446.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">dxa_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:23">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">DXAContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:31"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:31">[<expr pos:start="11:17" pos:end="11:30"><name pos:start="11:17" pos:end="11:30">DXA_EXTRA_SIZE</name></expr>]</index></name></decl>, <decl pos:start="11:34" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:34" pos:end="11:43"><name pos:start="11:34" pos:end="11:36">pal</name><index pos:start="11:37" pos:end="11:43">[<expr pos:start="11:38" pos:end="11:42"><literal type="number" pos:start="11:38" pos:end="11:41">768</literal><operator pos:start="11:41" pos:end="11:41">+</operator><literal type="number" pos:start="11:42" pos:end="11:42">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">pal_size</name> <init pos:start="13:18" pos:end="13:20">= <expr pos:start="13:20" pos:end="13:20"><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="39:5"><if pos:start="17:5" pos:end="39:5">if<condition pos:start="17:7" pos:end="17:52">(<expr pos:start="17:8" pos:end="17:51"><operator pos:start="17:8" pos:end="17:8">!</operator><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">readvid</name></name> <operator pos:start="17:20" pos:end="17:21">&amp;&amp;</operator> <name pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:23">c</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:34">has_sound</name></name> <operator pos:start="17:36" pos:end="17:37">&amp;&amp;</operator> <name pos:start="17:39" pos:end="17:51"><name pos:start="17:39" pos:end="17:39">c</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:51">bytes_left</name></name></expr>)</condition><block pos:start="17:53" pos:end="39:5">{<block_content pos:start="19:9" pos:end="37:17">

        <expr_stmt pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:18">readvid</name></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:46"><expr pos:start="21:9" pos:end="21:45"><call pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:17">avio_seek</name><argument_list pos:start="21:18" pos:end="21:45">(<argument pos:start="21:19" pos:end="21:23"><expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:19">s</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:23">pb</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:34"><expr pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:34"><name pos:start="21:26" pos:end="21:26">c</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:34">wavpos</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:44"><expr pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:12">size</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:43"><name pos:start="23:16" pos:end="23:20">FFMIN</name><argument_list pos:start="23:21" pos:end="23:43">(<argument pos:start="23:22" pos:end="23:34"><expr pos:start="23:22" pos:end="23:34"><name pos:start="23:22" pos:end="23:34"><name pos:start="23:22" pos:end="23:22">c</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:34">bytes_left</name></name></expr></argument>, <argument pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:37">c</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:42">bpc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:45"><name pos:start="25:15" pos:end="25:27">av_get_packet</name><argument_list pos:start="25:28" pos:end="25:45">(<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:29">s</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:33">pb</name></name></expr></argument>, <argument pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:38">pkt</name></expr></argument>, <argument pos:start="25:41" pos:end="25:44"><expr pos:start="25:41" pos:end="25:44"><name pos:start="25:41" pos:end="25:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:11">pkt</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:25">stream_index</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:32"><if pos:start="29:9" pos:end="31:32">if<condition pos:start="29:11" pos:end="29:23">(<expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:14">ret</name> <operator pos:start="29:16" pos:end="29:17">!=</operator> <name pos:start="29:19" pos:end="29:22">size</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:32"><block_content pos:start="31:13" pos:end="31:32">

            <return pos:start="31:13" pos:end="31:32">return <expr pos:start="31:20" pos:end="31:31"><call pos:start="31:20" pos:end="31:31"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:31">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">c</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">bytes_left</name></name> <operator pos:start="33:23" pos:end="33:24">-=</operator> <name pos:start="33:26" pos:end="33:29">size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:17">wavpos</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:29">avio_tell</name><argument_list pos:start="35:30" pos:end="35:36">(<argument pos:start="35:31" pos:end="35:35"><expr pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:13">avio_seek</name><argument_list pos:start="41:14" pos:end="41:41">(<argument pos:start="41:15" pos:end="41:19"><expr pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">pb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:30"><expr pos:start="41:22" pos:end="41:30"><name pos:start="41:22" pos:end="41:30"><name pos:start="41:22" pos:end="41:22">c</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:30">vidpos</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:40">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="43:5" pos:end="129:5">while<condition pos:start="43:10" pos:end="43:40">(<expr pos:start="43:11" pos:end="43:39"><operator pos:start="43:11" pos:end="43:11">!</operator><call pos:start="43:12" pos:end="43:26"><name pos:start="43:12" pos:end="43:19">url_feof</name><argument_list pos:start="43:20" pos:end="43:26">(<argument pos:start="43:21" pos:end="43:25"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:21">s</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:25">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="43:28" pos:end="43:29">&amp;&amp;</operator> <name pos:start="43:31" pos:end="43:39"><name pos:start="43:31" pos:end="43:31">c</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:39">frames</name></name></expr>)</condition><block pos:start="43:41" pos:end="129:5">{<block_content pos:start="45:9" pos:end="127:9">

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:17">avio_read</name><argument_list pos:start="45:18" pos:end="45:32">(<argument pos:start="45:19" pos:end="45:23"><expr pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:19">s</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:23">pb</name></name></expr></argument>, <argument pos:start="45:26" pos:end="45:28"><expr pos:start="45:26" pos:end="45:28"><name pos:start="45:26" pos:end="45:28">buf</name></expr></argument>, <argument pos:start="45:31" pos:end="45:31"><expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="47:9" pos:end="127:9">switch<condition pos:start="47:15" pos:end="47:28">(<expr pos:start="47:16" pos:end="47:27"><call pos:start="47:16" pos:end="47:27"><name pos:start="47:16" pos:end="47:22">AV_RL32</name><argument_list pos:start="47:23" pos:end="47:27">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">buf</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="47:29" pos:end="127:9">{<block_content pos:start="49:9" pos:end="125:39">

        <case pos:start="49:9" pos:end="49:39">case <expr pos:start="49:14" pos:end="49:38"><call pos:start="49:14" pos:end="49:38"><name pos:start="49:14" pos:end="49:18">MKTAG</name><argument_list pos:start="49:19" pos:end="49:38">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><literal type="char" pos:start="49:20" pos:end="49:22">'N'</literal></expr></argument>, <argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><literal type="char" pos:start="49:25" pos:end="49:27">'U'</literal></expr></argument>, <argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><literal type="char" pos:start="49:30" pos:end="49:32">'L'</literal></expr></argument>, <argument pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><literal type="char" pos:start="49:35" pos:end="49:37">'L'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="53:39"><if pos:start="51:13" pos:end="53:39">if<condition pos:start="51:15" pos:end="51:52">(<expr pos:start="51:16" pos:end="51:51"><call pos:start="51:16" pos:end="51:47"><name pos:start="51:16" pos:end="51:28">av_new_packet</name><argument_list pos:start="51:29" pos:end="51:47">(<argument pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:32">pkt</name></expr></argument>, <argument pos:start="51:35" pos:end="51:46"><expr pos:start="51:35" pos:end="51:46"><literal type="number" pos:start="51:35" pos:end="51:37">4</literal> <operator pos:start="51:37" pos:end="51:37">+</operator> <name pos:start="51:39" pos:end="51:46">pal_size</name></expr></argument>)</argument_list></call> <operator pos:start="51:49" pos:end="51:49">&lt;</operator> <literal type="number" pos:start="51:51" pos:end="51:51">0</literal></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:39"><block_content pos:start="53:17" pos:end="53:39">

                <return pos:start="53:17" pos:end="53:39">return <expr pos:start="53:24" pos:end="53:38"><call pos:start="53:24" pos:end="53:38"><name pos:start="53:24" pos:end="53:30">AVERROR</name><argument_list pos:start="53:31" pos:end="53:38">(<argument pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:37"><name pos:start="53:32" pos:end="53:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:34"><expr pos:start="55:13" pos:end="55:33"><name pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:15">pkt</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:29">stream_index</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="57:58"><if pos:start="57:13" pos:end="57:58">if<condition pos:start="57:15" pos:end="57:24">(<expr pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:23">pal_size</name></expr>)</condition><block type="pseudo" pos:start="57:26" pos:end="57:58"><block_content pos:start="57:26" pos:end="57:58"> <expr_stmt pos:start="57:26" pos:end="57:58"><expr pos:start="57:26" pos:end="57:57"><call pos:start="57:26" pos:end="57:57"><name pos:start="57:26" pos:end="57:31">memcpy</name><argument_list pos:start="57:32" pos:end="57:57">(<argument pos:start="57:33" pos:end="57:41"><expr pos:start="57:33" pos:end="57:41"><name pos:start="57:33" pos:end="57:41"><name pos:start="57:33" pos:end="57:35">pkt</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:41">data</name></name></expr></argument>, <argument pos:start="57:44" pos:end="57:46"><expr pos:start="57:44" pos:end="57:46"><name pos:start="57:44" pos:end="57:46">pal</name></expr></argument>, <argument pos:start="57:49" pos:end="57:56"><expr pos:start="57:49" pos:end="57:56"><name pos:start="57:49" pos:end="57:56">pal_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:49"><expr pos:start="59:13" pos:end="59:48"><call pos:start="59:13" pos:end="59:48"><name pos:start="59:13" pos:end="59:18">memcpy</name><argument_list pos:start="59:19" pos:end="59:48">(<argument pos:start="59:20" pos:end="59:39"><expr pos:start="59:20" pos:end="59:39"><name pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:22">pkt</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:28">data</name></name> <operator pos:start="59:30" pos:end="59:30">+</operator> <name pos:start="59:32" pos:end="59:39">pal_size</name></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">buf</name></expr></argument>, <argument pos:start="59:47" pos:end="59:47"><expr pos:start="59:47" pos:end="59:47"><literal type="number" pos:start="59:47" pos:end="59:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:24"><expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:13">c</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">frames</name></name><operator pos:start="61:22" pos:end="61:23">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:41"><expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:13">c</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">vidpos</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:33">avio_tell</name><argument_list pos:start="63:34" pos:end="63:40">(<argument pos:start="63:35" pos:end="63:39"><expr pos:start="63:35" pos:end="63:39"><name pos:start="63:35" pos:end="63:39"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:27"><expr pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:13">c</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:22">readvid</name></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:21">return <expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>;</return>

        <case pos:start="69:9" pos:end="69:39">case <expr pos:start="69:14" pos:end="69:38"><call pos:start="69:14" pos:end="69:38"><name pos:start="69:14" pos:end="69:18">MKTAG</name><argument_list pos:start="69:19" pos:end="69:38">(<argument pos:start="69:20" pos:end="69:22"><expr pos:start="69:20" pos:end="69:22"><literal type="char" pos:start="69:20" pos:end="69:22">'C'</literal></expr></argument>, <argument pos:start="69:25" pos:end="69:27"><expr pos:start="69:25" pos:end="69:27"><literal type="char" pos:start="69:25" pos:end="69:27">'M'</literal></expr></argument>, <argument pos:start="69:30" pos:end="69:32"><expr pos:start="69:30" pos:end="69:32"><literal type="char" pos:start="69:30" pos:end="69:32">'A'</literal></expr></argument>, <argument pos:start="69:35" pos:end="69:37"><expr pos:start="69:35" pos:end="69:37"><literal type="char" pos:start="69:35" pos:end="69:37">'P'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:29"><expr pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:20">pal_size</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:27">768</literal><operator pos:start="71:27" pos:end="71:27">+</operator><literal type="number" pos:start="71:28" pos:end="71:28">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><call pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:18">memcpy</name><argument_list pos:start="73:19" pos:end="73:31">(<argument pos:start="73:20" pos:end="73:22"><expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">pal</name></expr></argument>, <argument pos:start="73:25" pos:end="73:27"><expr pos:start="73:25" pos:end="73:27"><name pos:start="73:25" pos:end="73:27">buf</name></expr></argument>, <argument pos:start="73:30" pos:end="73:30"><expr pos:start="73:30" pos:end="73:30"><literal type="number" pos:start="73:30" pos:end="73:30">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:43"><expr pos:start="75:13" pos:end="75:42"><call pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:21">avio_read</name><argument_list pos:start="75:22" pos:end="75:42">(<argument pos:start="75:23" pos:end="75:27"><expr pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:27">pb</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:36"><expr pos:start="75:30" pos:end="75:36"><name pos:start="75:30" pos:end="75:32">pal</name> <operator pos:start="75:34" pos:end="75:34">+</operator> <literal type="number" pos:start="75:36" pos:end="75:36">4</literal></expr></argument>, <argument pos:start="75:39" pos:end="75:41"><expr pos:start="75:39" pos:end="75:41"><literal type="number" pos:start="75:39" pos:end="75:41">768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:39">case <expr pos:start="79:14" pos:end="79:38"><call pos:start="79:14" pos:end="79:38"><name pos:start="79:14" pos:end="79:18">MKTAG</name><argument_list pos:start="79:19" pos:end="79:38">(<argument pos:start="79:20" pos:end="79:22"><expr pos:start="79:20" pos:end="79:22"><literal type="char" pos:start="79:20" pos:end="79:22">'F'</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><literal type="char" pos:start="79:25" pos:end="79:27">'R'</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><literal type="char" pos:start="79:30" pos:end="79:32">'A'</literal></expr></argument>, <argument pos:start="79:35" pos:end="79:37"><expr pos:start="79:35" pos:end="79:37"><literal type="char" pos:start="79:35" pos:end="79:37">'M'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:58"><expr pos:start="81:13" pos:end="81:57"><call pos:start="81:13" pos:end="81:57"><name pos:start="81:13" pos:end="81:21">avio_read</name><argument_list pos:start="81:22" pos:end="81:57">(<argument pos:start="81:23" pos:end="81:27"><expr pos:start="81:23" pos:end="81:27"><name pos:start="81:23" pos:end="81:27"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:27">pb</name></name></expr></argument>, <argument pos:start="81:30" pos:end="81:36"><expr pos:start="81:30" pos:end="81:36"><name pos:start="81:30" pos:end="81:32">buf</name> <operator pos:start="81:34" pos:end="81:34">+</operator> <literal type="number" pos:start="81:36" pos:end="81:36">4</literal></expr></argument>, <argument pos:start="81:39" pos:end="81:56"><expr pos:start="81:39" pos:end="81:56"><name pos:start="81:39" pos:end="81:52">DXA_EXTRA_SIZE</name> <operator pos:start="81:54" pos:end="81:54">-</operator> <literal type="number" pos:start="81:56" pos:end="81:56">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:36"><expr pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:16">size</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <call pos:start="83:20" pos:end="83:35"><name pos:start="83:20" pos:end="83:26">AV_RB32</name><argument_list pos:start="83:27" pos:end="83:35">(<argument pos:start="83:28" pos:end="83:34"><expr pos:start="83:28" pos:end="83:34"><name pos:start="83:28" pos:end="83:30">buf</name> <operator pos:start="83:32" pos:end="83:32">+</operator> <literal type="number" pos:start="83:34" pos:end="83:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="91:13"><if pos:start="85:13" pos:end="91:13">if<condition pos:start="85:15" pos:end="85:31">(<expr pos:start="85:16" pos:end="85:30"><name pos:start="85:16" pos:end="85:19">size</name> <operator pos:start="85:21" pos:end="85:21">&gt;</operator> <literal type="number" pos:start="85:23" pos:end="85:30">0xFFFFFF</literal></expr>)</condition><block pos:start="85:32" pos:end="91:13">{<block_content pos:start="87:17" pos:end="89:43">

                <expr_stmt pos:start="87:17" pos:end="87:77"><expr pos:start="87:17" pos:end="87:76"><call pos:start="87:17" pos:end="87:76"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="87:76">(<argument pos:start="87:24" pos:end="87:24"><expr pos:start="87:24" pos:end="87:24"><name pos:start="87:24" pos:end="87:24">s</name></expr></argument>, <argument pos:start="87:27" pos:end="87:38"><expr pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:41" pos:end="87:69"><expr pos:start="87:41" pos:end="87:69"><literal type="string" pos:start="87:41" pos:end="87:69">"Frame size is too big: %d\n"</literal></expr></argument>, <argument pos:start="87:72" pos:end="87:75"><expr pos:start="87:72" pos:end="87:75"><name pos:start="87:72" pos:end="87:75">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="89:17" pos:end="89:43">return <expr pos:start="89:24" pos:end="89:42"><name pos:start="89:24" pos:end="89:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="93:13" pos:end="95:39"><if pos:start="93:13" pos:end="95:39">if<condition pos:start="93:15" pos:end="93:72">(<expr pos:start="93:16" pos:end="93:71"><call pos:start="93:16" pos:end="93:67"><name pos:start="93:16" pos:end="93:28">av_new_packet</name><argument_list pos:start="93:29" pos:end="93:67">(<argument pos:start="93:30" pos:end="93:32"><expr pos:start="93:30" pos:end="93:32"><name pos:start="93:30" pos:end="93:32">pkt</name></expr></argument>, <argument pos:start="93:35" pos:end="93:66"><expr pos:start="93:35" pos:end="93:66"><name pos:start="93:35" pos:end="93:38">size</name> <operator pos:start="93:40" pos:end="93:40">+</operator> <name pos:start="93:42" pos:end="93:55">DXA_EXTRA_SIZE</name> <operator pos:start="93:57" pos:end="93:57">+</operator> <name pos:start="93:59" pos:end="93:66">pal_size</name></expr></argument>)</argument_list></call> <operator pos:start="93:69" pos:end="93:69">&lt;</operator> <literal type="number" pos:start="93:71" pos:end="93:71">0</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:39"><block_content pos:start="95:17" pos:end="95:39">

                <return pos:start="95:17" pos:end="95:39">return <expr pos:start="95:24" pos:end="95:38"><call pos:start="95:24" pos:end="95:38"><name pos:start="95:24" pos:end="95:30">AVERROR</name><argument_list pos:start="95:31" pos:end="95:38">(<argument pos:start="95:32" pos:end="95:37"><expr pos:start="95:32" pos:end="95:37"><name pos:start="95:32" pos:end="95:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:62"><expr pos:start="97:13" pos:end="97:61"><call pos:start="97:13" pos:end="97:61"><name pos:start="97:13" pos:end="97:18">memcpy</name><argument_list pos:start="97:19" pos:end="97:61">(<argument pos:start="97:20" pos:end="97:39"><expr pos:start="97:20" pos:end="97:39"><name pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:22">pkt</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:28">data</name></name> <operator pos:start="97:30" pos:end="97:30">+</operator> <name pos:start="97:32" pos:end="97:39">pal_size</name></expr></argument>, <argument pos:start="97:42" pos:end="97:44"><expr pos:start="97:42" pos:end="97:44"><name pos:start="97:42" pos:end="97:44">buf</name></expr></argument>, <argument pos:start="97:47" pos:end="97:60"><expr pos:start="97:47" pos:end="97:60"><name pos:start="97:47" pos:end="97:60">DXA_EXTRA_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:80"><expr pos:start="99:13" pos:end="99:79"><name pos:start="99:13" pos:end="99:15">ret</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="99:79"><name pos:start="99:19" pos:end="99:27">avio_read</name><argument_list pos:start="99:28" pos:end="99:79">(<argument pos:start="99:29" pos:end="99:33"><expr pos:start="99:29" pos:end="99:33"><name pos:start="99:29" pos:end="99:33"><name pos:start="99:29" pos:end="99:29">s</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:33">pb</name></name></expr></argument>, <argument pos:start="99:36" pos:end="99:72"><expr pos:start="99:36" pos:end="99:72"><name pos:start="99:36" pos:end="99:44"><name pos:start="99:36" pos:end="99:38">pkt</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:44">data</name></name> <operator pos:start="99:46" pos:end="99:46">+</operator> <name pos:start="99:48" pos:end="99:61">DXA_EXTRA_SIZE</name> <operator pos:start="99:63" pos:end="99:63">+</operator> <name pos:start="99:65" pos:end="99:72">pal_size</name></expr></argument>, <argument pos:start="99:75" pos:end="99:78"><expr pos:start="99:75" pos:end="99:78"><name pos:start="99:75" pos:end="99:78">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if<condition pos:start="101:15" pos:end="101:27">(<expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:18">ret</name> <operator pos:start="101:20" pos:end="101:21">!=</operator> <name pos:start="101:23" pos:end="101:26">size</name></expr>)</condition><block pos:start="101:28" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:36">

                <expr_stmt pos:start="103:17" pos:end="103:36"><expr pos:start="103:17" pos:end="103:35"><call pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:30">av_free_packet</name><argument_list pos:start="103:31" pos:end="103:35">(<argument pos:start="103:32" pos:end="103:34"><expr pos:start="103:32" pos:end="103:34"><name pos:start="103:32" pos:end="103:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="105:17" pos:end="105:36">return <expr pos:start="105:24" pos:end="105:35"><call pos:start="105:24" pos:end="105:35"><name pos:start="105:24" pos:end="105:30">AVERROR</name><argument_list pos:start="105:31" pos:end="105:35">(<argument pos:start="105:32" pos:end="105:34"><expr pos:start="105:32" pos:end="105:34"><name pos:start="105:32" pos:end="105:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="109:13" pos:end="109:58"><if pos:start="109:13" pos:end="109:58">if<condition pos:start="109:15" pos:end="109:24">(<expr pos:start="109:16" pos:end="109:23"><name pos:start="109:16" pos:end="109:23">pal_size</name></expr>)</condition><block type="pseudo" pos:start="109:26" pos:end="109:58"><block_content pos:start="109:26" pos:end="109:58"> <expr_stmt pos:start="109:26" pos:end="109:58"><expr pos:start="109:26" pos:end="109:57"><call pos:start="109:26" pos:end="109:57"><name pos:start="109:26" pos:end="109:31">memcpy</name><argument_list pos:start="109:32" pos:end="109:57">(<argument pos:start="109:33" pos:end="109:41"><expr pos:start="109:33" pos:end="109:41"><name pos:start="109:33" pos:end="109:41"><name pos:start="109:33" pos:end="109:35">pkt</name><operator pos:start="109:36" pos:end="109:37">-&gt;</operator><name pos:start="109:38" pos:end="109:41">data</name></name></expr></argument>, <argument pos:start="109:44" pos:end="109:46"><expr pos:start="109:44" pos:end="109:46"><name pos:start="109:44" pos:end="109:46">pal</name></expr></argument>, <argument pos:start="109:49" pos:end="109:56"><expr pos:start="109:49" pos:end="109:56"><name pos:start="109:49" pos:end="109:56">pal_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:34"><expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:15">pkt</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:29">stream_index</name></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <literal type="number" pos:start="111:33" pos:end="111:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:24"><expr pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:13">c</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:21">frames</name></name><operator pos:start="113:22" pos:end="113:23">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:13">c</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:21">vidpos</name></name> <operator pos:start="115:23" pos:end="115:23">=</operator> <call pos:start="115:25" pos:end="115:40"><name pos:start="115:25" pos:end="115:33">avio_tell</name><argument_list pos:start="115:34" pos:end="115:40">(<argument pos:start="115:35" pos:end="115:39"><expr pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:35">s</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:39">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:27"><expr pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:13">c</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:22">readvid</name></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:26">0</literal></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:21">return <expr pos:start="119:20" pos:end="119:20"><literal type="number" pos:start="119:20" pos:end="119:20">0</literal></expr>;</return>

        <default pos:start="121:9" pos:end="121:16">default:</default>

            <expr_stmt pos:start="123:13" pos:end="123:94"><expr pos:start="123:13" pos:end="123:93"><call pos:start="123:13" pos:end="123:93"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="123:93">(<argument pos:start="123:20" pos:end="123:20"><expr pos:start="123:20" pos:end="123:20"><name pos:start="123:20" pos:end="123:20">s</name></expr></argument>, <argument pos:start="123:23" pos:end="123:34"><expr pos:start="123:23" pos:end="123:34"><name pos:start="123:23" pos:end="123:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:37" pos:end="123:60"><expr pos:start="123:37" pos:end="123:60"><literal type="string" pos:start="123:37" pos:end="123:60">"Unknown tag %c%c%c%c\n"</literal></expr></argument>, <argument pos:start="123:63" pos:end="123:68"><expr pos:start="123:63" pos:end="123:68"><name pos:start="123:63" pos:end="123:68"><name pos:start="123:63" pos:end="123:65">buf</name><index pos:start="123:66" pos:end="123:68">[<expr pos:start="123:67" pos:end="123:67"><literal type="number" pos:start="123:67" pos:end="123:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:71" pos:end="123:76"><expr pos:start="123:71" pos:end="123:76"><name pos:start="123:71" pos:end="123:76"><name pos:start="123:71" pos:end="123:73">buf</name><index pos:start="123:74" pos:end="123:76">[<expr pos:start="123:75" pos:end="123:75"><literal type="number" pos:start="123:75" pos:end="123:75">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:79" pos:end="123:84"><expr pos:start="123:79" pos:end="123:84"><name pos:start="123:79" pos:end="123:84"><name pos:start="123:79" pos:end="123:81">buf</name><index pos:start="123:82" pos:end="123:84">[<expr pos:start="123:83" pos:end="123:83"><literal type="number" pos:start="123:83" pos:end="123:83">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:87" pos:end="123:92"><expr pos:start="123:87" pos:end="123:92"><name pos:start="123:87" pos:end="123:92"><name pos:start="123:87" pos:end="123:89">buf</name><index pos:start="123:90" pos:end="123:92">[<expr pos:start="123:91" pos:end="123:91"><literal type="number" pos:start="123:91" pos:end="123:91">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="125:13" pos:end="125:39">return <expr pos:start="125:20" pos:end="125:38"><name pos:start="125:20" pos:end="125:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>

    <return pos:start="131:5" pos:end="131:23">return <expr pos:start="131:12" pos:end="131:22"><name pos:start="131:12" pos:end="131:22">AVERROR_EOF</name></expr>;</return>

</block_content>}</block></function>
</unit>
