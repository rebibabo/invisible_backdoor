<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7683.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">escaped_string</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <struct pos:start="7:5" pos:end="63:6">struct <block pos:start="7:12" pos:end="15:5">{

        <decl_stmt pos:start="9:9" pos:end="9:28"><decl pos:start="9:9" pos:end="9:27"><type pos:start="9:9" pos:end="9:20"><specifier pos:start="9:9" pos:end="9:13">const</specifier> <name pos:start="9:15" pos:end="9:18">char</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">encoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:28"><decl pos:start="11:9" pos:end="11:27"><type pos:start="11:9" pos:end="11:20"><specifier pos:start="11:9" pos:end="11:13">const</specifier> <name pos:start="11:15" pos:end="11:18">char</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:27">decoded</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:17"><decl pos:start="13:9" pos:end="13:16"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:16">skip</name></decl>;</decl_stmt>

    }</block> <decl pos:start="15:7" pos:end="63:5"><name pos:start="15:7" pos:end="15:18"><name pos:start="15:7" pos:end="15:16">test_cases</name><index pos:start="15:17" pos:end="15:18">[]</index></name> <init pos:start="15:20" pos:end="63:5">= <expr pos:start="15:22" pos:end="63:5"><block pos:start="15:22" pos:end="63:5">{

        <expr pos:start="17:9" pos:end="17:27"><block pos:start="17:9" pos:end="17:27">{ <expr pos:start="17:11" pos:end="17:19"><literal type="string" pos:start="17:11" pos:end="17:19">"\"\\b\""</literal></expr>, <expr pos:start="17:22" pos:end="17:25"><literal type="string" pos:start="17:22" pos:end="17:25">"\b"</literal></expr> }</block></expr>,

        <expr pos:start="19:9" pos:end="19:27"><block pos:start="19:9" pos:end="19:27">{ <expr pos:start="19:11" pos:end="19:19"><literal type="string" pos:start="19:11" pos:end="19:19">"\"\\f\""</literal></expr>, <expr pos:start="19:22" pos:end="19:25"><literal type="string" pos:start="19:22" pos:end="19:25">"\f"</literal></expr> }</block></expr>,

        <expr pos:start="21:9" pos:end="21:27"><block pos:start="21:9" pos:end="21:27">{ <expr pos:start="21:11" pos:end="21:19"><literal type="string" pos:start="21:11" pos:end="21:19">"\"\\n\""</literal></expr>, <expr pos:start="21:22" pos:end="21:25"><literal type="string" pos:start="21:22" pos:end="21:25">"\n"</literal></expr> }</block></expr>,

        <expr pos:start="23:9" pos:end="23:27"><block pos:start="23:9" pos:end="23:27">{ <expr pos:start="23:11" pos:end="23:19"><literal type="string" pos:start="23:11" pos:end="23:19">"\"\\r\""</literal></expr>, <expr pos:start="23:22" pos:end="23:25"><literal type="string" pos:start="23:22" pos:end="23:25">"\r"</literal></expr> }</block></expr>,

        <expr pos:start="25:9" pos:end="25:27"><block pos:start="25:9" pos:end="25:27">{ <expr pos:start="25:11" pos:end="25:19"><literal type="string" pos:start="25:11" pos:end="25:19">"\"\\t\""</literal></expr>, <expr pos:start="25:22" pos:end="25:25"><literal type="string" pos:start="25:22" pos:end="25:25">"\t"</literal></expr> }</block></expr>,

        <expr pos:start="27:9" pos:end="27:24"><block pos:start="27:9" pos:end="27:24">{ <expr pos:start="27:11" pos:end="27:17"><literal type="string" pos:start="27:11" pos:end="27:17">"\"/\""</literal></expr>, <expr pos:start="27:20" pos:end="27:22"><literal type="string" pos:start="27:20" pos:end="27:22">"/"</literal></expr> }</block></expr>,

        <expr pos:start="29:9" pos:end="29:37"><block pos:start="29:9" pos:end="29:37">{ <expr pos:start="29:11" pos:end="29:19"><literal type="string" pos:start="29:11" pos:end="29:19">"\"\\/\""</literal></expr>, <expr pos:start="29:22" pos:end="29:24"><literal type="string" pos:start="29:22" pos:end="29:24">"/"</literal></expr>, <expr pos:start="29:27" pos:end="29:35"><operator pos:start="29:27" pos:end="29:27">.</operator><name pos:start="29:28" pos:end="29:31">skip</name> <operator pos:start="29:33" pos:end="29:33">=</operator> <literal type="number" pos:start="29:35" pos:end="29:35">1</literal></expr> }</block></expr>,

        <expr pos:start="31:9" pos:end="31:28"><block pos:start="31:9" pos:end="31:28">{ <expr pos:start="31:11" pos:end="31:20"><literal type="string" pos:start="31:11" pos:end="31:20">"\"\\\\\""</literal></expr>, <expr pos:start="31:23" pos:end="31:26"><literal type="string" pos:start="31:23" pos:end="31:26">"\\"</literal></expr> }</block></expr>,

        <expr pos:start="33:9" pos:end="33:28"><block pos:start="33:9" pos:end="33:28">{ <expr pos:start="33:11" pos:end="33:20"><literal type="string" pos:start="33:11" pos:end="33:20">"\"\\\"\""</literal></expr>, <expr pos:start="33:23" pos:end="33:26"><literal type="string" pos:start="33:23" pos:end="33:26">"\""</literal></expr> }</block></expr>,

        <expr pos:start="35:9" pos:end="37:45"><block pos:start="35:9" pos:end="37:45">{ <expr pos:start="35:11" pos:end="35:51"><literal type="string" pos:start="35:11" pos:end="35:51">"\"hello world \\\"embedded string\\\"\""</literal></expr>,

          <expr pos:start="37:11" pos:end="37:43"><literal type="string" pos:start="37:11" pos:end="37:43">"hello world \"embedded string\""</literal></expr> }</block></expr>,

        <expr pos:start="39:9" pos:end="39:75"><block pos:start="39:9" pos:end="39:75">{ <expr pos:start="39:11" pos:end="39:43"><literal type="string" pos:start="39:11" pos:end="39:43">"\"hello world\\nwith new line\""</literal></expr>, <expr pos:start="39:46" pos:end="39:73"><literal type="string" pos:start="39:46" pos:end="39:73">"hello world\nwith new line"</literal></expr> }</block></expr>,

        <expr pos:start="41:9" pos:end="41:77"><block pos:start="41:9" pos:end="41:77">{ <expr pos:start="41:11" pos:end="41:41"><literal type="string" pos:start="41:11" pos:end="41:41">"\"single byte utf-8 \\u0020\""</literal></expr>, <expr pos:start="41:44" pos:end="41:64"><literal type="string" pos:start="41:44" pos:end="41:64">"single byte utf-8  "</literal></expr>, <expr pos:start="41:67" pos:end="41:75"><operator pos:start="41:67" pos:end="41:67">.</operator><name pos:start="41:68" pos:end="41:71">skip</name> <operator pos:start="41:73" pos:end="41:73">=</operator> <literal type="number" pos:start="41:75" pos:end="41:75">1</literal></expr> }</block></expr>,

        <expr pos:start="43:9" pos:end="43:73"><block pos:start="43:9" pos:end="43:73">{ <expr pos:start="43:11" pos:end="43:41"><literal type="string" pos:start="43:11" pos:end="43:41">"\"double byte utf-8 \\u00A2\""</literal></expr>, <expr pos:start="43:44" pos:end="43:71"><literal type="string" pos:start="43:44" pos:end="43:71">"double byte utf-8 \xc2\xa2"</literal></expr> }</block></expr>,

        <expr pos:start="45:9" pos:end="45:77"><block pos:start="45:9" pos:end="45:77">{ <expr pos:start="45:11" pos:end="45:41"><literal type="string" pos:start="45:11" pos:end="45:41">"\"triple byte utf-8 \\u20AC\""</literal></expr>, <expr pos:start="45:44" pos:end="45:75"><literal type="string" pos:start="45:44" pos:end="45:75">"triple byte utf-8 \xe2\x82\xac"</literal></expr> }</block></expr>,

        <expr pos:start="47:9" pos:end="47:36"><block pos:start="47:9" pos:end="47:36">{ <expr pos:start="47:11" pos:end="47:17"><literal type="string" pos:start="47:11" pos:end="47:17">"'\\b'"</literal></expr>, <expr pos:start="47:20" pos:end="47:23"><literal type="string" pos:start="47:20" pos:end="47:23">"\b"</literal></expr>, <expr pos:start="47:26" pos:end="47:34"><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:30">skip</name> <operator pos:start="47:32" pos:end="47:32">=</operator> <literal type="number" pos:start="47:34" pos:end="47:34">1</literal></expr> }</block></expr>,

        <expr pos:start="49:9" pos:end="49:36"><block pos:start="49:9" pos:end="49:36">{ <expr pos:start="49:11" pos:end="49:17"><literal type="string" pos:start="49:11" pos:end="49:17">"'\\f'"</literal></expr>, <expr pos:start="49:20" pos:end="49:23"><literal type="string" pos:start="49:20" pos:end="49:23">"\f"</literal></expr>, <expr pos:start="49:26" pos:end="49:34"><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:30">skip</name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">1</literal></expr> }</block></expr>,

        <expr pos:start="51:9" pos:end="51:36"><block pos:start="51:9" pos:end="51:36">{ <expr pos:start="51:11" pos:end="51:17"><literal type="string" pos:start="51:11" pos:end="51:17">"'\\n'"</literal></expr>, <expr pos:start="51:20" pos:end="51:23"><literal type="string" pos:start="51:20" pos:end="51:23">"\n"</literal></expr>, <expr pos:start="51:26" pos:end="51:34"><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:30">skip</name> <operator pos:start="51:32" pos:end="51:32">=</operator> <literal type="number" pos:start="51:34" pos:end="51:34">1</literal></expr> }</block></expr>,

        <expr pos:start="53:9" pos:end="53:36"><block pos:start="53:9" pos:end="53:36">{ <expr pos:start="53:11" pos:end="53:17"><literal type="string" pos:start="53:11" pos:end="53:17">"'\\r'"</literal></expr>, <expr pos:start="53:20" pos:end="53:23"><literal type="string" pos:start="53:20" pos:end="53:23">"\r"</literal></expr>, <expr pos:start="53:26" pos:end="53:34"><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:30">skip</name> <operator pos:start="53:32" pos:end="53:32">=</operator> <literal type="number" pos:start="53:34" pos:end="53:34">1</literal></expr> }</block></expr>,

        <expr pos:start="55:9" pos:end="55:36"><block pos:start="55:9" pos:end="55:36">{ <expr pos:start="55:11" pos:end="55:17"><literal type="string" pos:start="55:11" pos:end="55:17">"'\\t'"</literal></expr>, <expr pos:start="55:20" pos:end="55:23"><literal type="string" pos:start="55:20" pos:end="55:23">"\t"</literal></expr>, <expr pos:start="55:26" pos:end="55:34"><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:30">skip</name> <operator pos:start="55:32" pos:end="55:32">=</operator> <literal type="number" pos:start="55:34" pos:end="55:34">1</literal></expr> }</block></expr>,

        <expr pos:start="57:9" pos:end="57:35"><block pos:start="57:9" pos:end="57:35">{ <expr pos:start="57:11" pos:end="57:17"><literal type="string" pos:start="57:11" pos:end="57:17">"'\\/'"</literal></expr>, <expr pos:start="57:20" pos:end="57:22"><literal type="string" pos:start="57:20" pos:end="57:22">"/"</literal></expr>, <expr pos:start="57:25" pos:end="57:33"><operator pos:start="57:25" pos:end="57:25">.</operator><name pos:start="57:26" pos:end="57:29">skip</name> <operator pos:start="57:31" pos:end="57:31">=</operator> <literal type="number" pos:start="57:33" pos:end="57:33">1</literal></expr> }</block></expr>,

        <expr pos:start="59:9" pos:end="59:37"><block pos:start="59:9" pos:end="59:37">{ <expr pos:start="59:11" pos:end="59:18"><literal type="string" pos:start="59:11" pos:end="59:18">"'\\\\'"</literal></expr>, <expr pos:start="59:21" pos:end="59:24"><literal type="string" pos:start="59:21" pos:end="59:24">"\\"</literal></expr>, <expr pos:start="59:27" pos:end="59:35"><operator pos:start="59:27" pos:end="59:27">.</operator><name pos:start="59:28" pos:end="59:31">skip</name> <operator pos:start="59:33" pos:end="59:33">=</operator> <literal type="number" pos:start="59:35" pos:end="59:35">1</literal></expr> }</block></expr>,

        <expr pos:start="61:9" pos:end="61:10"><block pos:start="61:9" pos:end="61:10">{}</block></expr>

    }</block></expr></init></decl>;</struct>



    <for pos:start="67:5" pos:end="99:5">for <control pos:start="67:9" pos:end="67:43">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:38"><expr pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:26">test_cases</name><index pos:start="67:27" pos:end="67:29">[<expr pos:start="67:28" pos:end="67:28"><name pos:start="67:28" pos:end="67:28">i</name></expr>]</index></name><operator pos:start="67:30" pos:end="67:30">.</operator><name pos:start="67:31" pos:end="67:37">encoded</name></expr>;</condition> <incr pos:start="67:40" pos:end="67:42"><expr pos:start="67:40" pos:end="67:42"><name pos:start="67:40" pos:end="67:40">i</name><operator pos:start="67:41" pos:end="67:42">++</operator></expr></incr>)</control> <block pos:start="67:45" pos:end="99:5">{<block_content pos:start="69:9" pos:end="97:21">

        <decl_stmt pos:start="69:9" pos:end="69:21"><decl pos:start="69:9" pos:end="69:20"><type pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:15">QObject</name> <modifier pos:start="69:17" pos:end="69:17">*</modifier></type><name pos:start="69:18" pos:end="69:20">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:21"><decl pos:start="71:9" pos:end="71:20"><type pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:15">QString</name> <modifier pos:start="71:17" pos:end="71:17">*</modifier></type><name pos:start="71:18" pos:end="71:20">str</name></decl>;</decl_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:61"><expr pos:start="75:9" pos:end="75:60"><name pos:start="75:9" pos:end="75:11">obj</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:60"><name pos:start="75:15" pos:end="75:31">qobject_from_json</name><argument_list pos:start="75:32" pos:end="75:60">(<argument pos:start="75:33" pos:end="75:53"><expr pos:start="75:33" pos:end="75:53"><name pos:start="75:33" pos:end="75:45"><name pos:start="75:33" pos:end="75:42">test_cases</name><index pos:start="75:43" pos:end="75:45">[<expr pos:start="75:44" pos:end="75:44"><name pos:start="75:44" pos:end="75:44">i</name></expr>]</index></name><operator pos:start="75:46" pos:end="75:46">.</operator><name pos:start="75:47" pos:end="75:53">encoded</name></expr></argument>, <argument pos:start="75:56" pos:end="75:59"><expr pos:start="75:56" pos:end="75:59"><name pos:start="75:56" pos:end="75:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:38"><expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:11">str</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:37"><name pos:start="77:15" pos:end="77:32">qobject_to_qstring</name><argument_list pos:start="77:33" pos:end="77:37">(<argument pos:start="77:34" pos:end="77:36"><expr pos:start="77:34" pos:end="77:36"><name pos:start="77:34" pos:end="77:36">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:22"><expr pos:start="79:9" pos:end="79:21"><call pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:16">g_assert</name><argument_list pos:start="79:17" pos:end="79:21">(<argument pos:start="79:18" pos:end="79:20"><expr pos:start="79:18" pos:end="79:20"><name pos:start="79:18" pos:end="79:20">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:73"><expr pos:start="81:9" pos:end="81:72"><call pos:start="81:9" pos:end="81:72"><name pos:start="81:9" pos:end="81:23">g_assert_cmpstr</name><argument_list pos:start="81:24" pos:end="81:72">(<argument pos:start="81:25" pos:end="81:44"><expr pos:start="81:25" pos:end="81:44"><call pos:start="81:25" pos:end="81:44"><name pos:start="81:25" pos:end="81:39">qstring_get_str</name><argument_list pos:start="81:40" pos:end="81:44">(<argument pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><name pos:start="81:41" pos:end="81:43">str</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:47" pos:end="81:48"><expr pos:start="81:47" pos:end="81:48"><operator pos:start="81:47" pos:end="81:48">==</operator></expr></argument>, <argument pos:start="81:51" pos:end="81:71"><expr pos:start="81:51" pos:end="81:71"><name pos:start="81:51" pos:end="81:63"><name pos:start="81:51" pos:end="81:60">test_cases</name><index pos:start="81:61" pos:end="81:63">[<expr pos:start="81:62" pos:end="81:62"><name pos:start="81:62" pos:end="81:62">i</name></expr>]</index></name><operator pos:start="81:64" pos:end="81:64">.</operator><name pos:start="81:65" pos:end="81:71">decoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="85:9" pos:end="93:9"><if pos:start="85:9" pos:end="93:9">if <condition pos:start="85:12" pos:end="85:36">(<expr pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:22">test_cases</name><index pos:start="85:23" pos:end="85:25">[<expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">i</name></expr>]</index></name><operator pos:start="85:26" pos:end="85:26">.</operator><name pos:start="85:27" pos:end="85:30">skip</name> <operator pos:start="85:32" pos:end="85:33">==</operator> <literal type="number" pos:start="85:35" pos:end="85:35">0</literal></expr>)</condition> <block pos:start="85:38" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:32">

            <expr_stmt pos:start="87:13" pos:end="87:39"><expr pos:start="87:13" pos:end="87:38"><name pos:start="87:13" pos:end="87:15">str</name> <operator pos:start="87:17" pos:end="87:17">=</operator> <call pos:start="87:19" pos:end="87:38"><name pos:start="87:19" pos:end="87:33">qobject_to_json</name><argument_list pos:start="87:34" pos:end="87:38">(<argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><name pos:start="87:35" pos:end="87:37">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:77"><expr pos:start="89:13" pos:end="89:76"><call pos:start="89:13" pos:end="89:76"><name pos:start="89:13" pos:end="89:27">g_assert_cmpstr</name><argument_list pos:start="89:28" pos:end="89:76">(<argument pos:start="89:29" pos:end="89:48"><expr pos:start="89:29" pos:end="89:48"><call pos:start="89:29" pos:end="89:48"><name pos:start="89:29" pos:end="89:43">qstring_get_str</name><argument_list pos:start="89:44" pos:end="89:48">(<argument pos:start="89:45" pos:end="89:47"><expr pos:start="89:45" pos:end="89:47"><name pos:start="89:45" pos:end="89:47">str</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="89:51" pos:end="89:52"><expr pos:start="89:51" pos:end="89:52"><operator pos:start="89:51" pos:end="89:52">==</operator></expr></argument>, <argument pos:start="89:55" pos:end="89:75"><expr pos:start="89:55" pos:end="89:75"><name pos:start="89:55" pos:end="89:67"><name pos:start="89:55" pos:end="89:64">test_cases</name><index pos:start="89:65" pos:end="89:67">[<expr pos:start="89:66" pos:end="89:66"><name pos:start="89:66" pos:end="89:66">i</name></expr>]</index></name><operator pos:start="89:68" pos:end="89:68">.</operator><name pos:start="89:69" pos:end="89:75">encoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:32"><expr pos:start="91:13" pos:end="91:31"><call pos:start="91:13" pos:end="91:31"><name pos:start="91:13" pos:end="91:26">qobject_decref</name><argument_list pos:start="91:27" pos:end="91:31">(<argument pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:30">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:21"><expr pos:start="97:9" pos:end="97:20"><call pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:15">QDECREF</name><argument_list pos:start="97:16" pos:end="97:20">(<argument pos:start="97:17" pos:end="97:19"><expr pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:19">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
