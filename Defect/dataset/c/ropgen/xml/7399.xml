<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7399.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">load_glyph</name><parameter_list pos:start="1:22" pos:end="1:77">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:37">AVFilterContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:49">Glyph</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier><modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:61">glyph_ptr</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:71">uint32_t</name></type> <name pos:start="1:73" pos:end="1:76">code</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">DrawTextContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:28">ctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:34">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">FT_BitmapGlyph</name></type> <name pos:start="7:20" pos:end="7:30">bitmapglyph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Glyph</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">glyph</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:21">AVTreeNode</name></name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">node</name> <init pos:start="11:29" pos:end="11:34">= <expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:40">/* load glyph into s-&gt;face-&gt;glyph */</comment>

    <if_stmt pos:start="19:5" pos:end="21:31"><if pos:start="19:5" pos:end="21:31">if <condition pos:start="19:8" pos:end="19:54">(<expr pos:start="19:9" pos:end="19:53"><call pos:start="19:9" pos:end="19:53"><name pos:start="19:9" pos:end="19:20">FT_Load_Char</name><argument_list pos:start="19:21" pos:end="19:53">(<argument pos:start="19:22" pos:end="19:28"><expr pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:28"><name pos:start="19:22" pos:end="19:22">s</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:28">face</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:34"><expr pos:start="19:31" pos:end="19:34"><name pos:start="19:31" pos:end="19:34">code</name></expr></argument>, <argument pos:start="19:37" pos:end="19:52"><expr pos:start="19:37" pos:end="19:52"><name pos:start="19:37" pos:end="19:52"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:52">ft_load_flags</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:20">/* save glyph */</comment>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="29:60">(<expr pos:start="27:9" pos:end="29:59"><operator pos:start="27:9" pos:end="27:9">!</operator><operator pos:start="27:10" pos:end="27:10">(</operator><name pos:start="27:11" pos:end="27:15">glyph</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:44"><name pos:start="27:19" pos:end="27:28">av_mallocz</name><argument_list pos:start="27:29" pos:end="27:44">(<argument pos:start="27:30" pos:end="27:43"><expr pos:start="27:30" pos:end="27:43"><sizeof pos:start="27:30" pos:end="27:43">sizeof<argument_list pos:start="27:36" pos:end="27:43">(<argument pos:start="27:37" pos:end="27:42"><expr pos:start="27:37" pos:end="27:42"><operator pos:start="27:37" pos:end="27:37">*</operator><name pos:start="27:38" pos:end="27:42">glyph</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="27:45" pos:end="27:45">)</operator> <operator pos:start="27:47" pos:end="27:48">||</operator>

        <operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><name pos:start="29:11" pos:end="29:22"><name pos:start="29:11" pos:end="29:15">glyph</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:22">glyph</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <call pos:start="29:26" pos:end="29:58"><name pos:start="29:26" pos:end="29:35">av_mallocz</name><argument_list pos:start="29:36" pos:end="29:58">(<argument pos:start="29:37" pos:end="29:57"><expr pos:start="29:37" pos:end="29:57"><sizeof pos:start="29:37" pos:end="29:57">sizeof<argument_list pos:start="29:43" pos:end="29:57">(<argument pos:start="29:44" pos:end="29:56"><expr pos:start="29:44" pos:end="29:56"><operator pos:start="29:44" pos:end="29:44">*</operator><name pos:start="29:45" pos:end="29:56"><name pos:start="29:45" pos:end="29:49">glyph</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:56">glyph</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="29:59" pos:end="29:59">)</operator></expr>)</condition> <block pos:start="29:62" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:19">

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:29"><name pos:start="31:15" pos:end="31:21">AVERROR</name><argument_list pos:start="31:22" pos:end="31:29">(<argument pos:start="31:23" pos:end="31:28"><expr pos:start="31:23" pos:end="31:28"><name pos:start="31:23" pos:end="31:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:19">goto <name pos:start="33:14" pos:end="33:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:9">glyph</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">code</name></name>  <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:23">code</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:51">(<expr pos:start="41:9" pos:end="41:50"><call pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:20">FT_Get_Glyph</name><argument_list pos:start="41:21" pos:end="41:50">(<argument pos:start="41:22" pos:end="41:35"><expr pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:35"><name pos:start="41:22" pos:end="41:22">s</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:28">face</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:35">glyph</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:49"><expr pos:start="41:38" pos:end="41:49"><name pos:start="41:38" pos:end="41:49"><name pos:start="41:38" pos:end="41:42">glyph</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:49">glyph</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:53" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:19">

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:29"><name pos:start="43:15" pos:end="43:21">AVERROR</name><argument_list pos:start="43:22" pos:end="43:29">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><name pos:start="43:23" pos:end="43:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:19">goto <name pos:start="45:14" pos:end="45:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="67:5"><if pos:start="49:5" pos:end="67:5">if <condition pos:start="49:8" pos:end="49:19">(<expr pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:18">borderw</name></name></expr>)</condition> <block pos:start="49:21" pos:end="67:5">{<block_content pos:start="51:9" pos:end="65:51">

        <decl_stmt pos:start="51:9" pos:end="51:46"><decl pos:start="51:9" pos:end="51:45"><type pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:16">FT_Glyph</name></type> <name pos:start="51:18" pos:end="51:29">border_glyph</name> <init pos:start="51:31" pos:end="51:45">= <expr pos:start="51:33" pos:end="51:45"><operator pos:start="51:33" pos:end="51:33">*</operator><name pos:start="51:34" pos:end="51:45"><name pos:start="51:34" pos:end="51:38">glyph</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:45">glyph</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="55:75">(<expr pos:start="53:13" pos:end="55:74"><call pos:start="53:13" pos:end="53:66"><name pos:start="53:13" pos:end="53:33">FT_Glyph_StrokeBorder</name><argument_list pos:start="53:34" pos:end="53:66">(<argument pos:start="53:35" pos:end="53:47"><expr pos:start="53:35" pos:end="53:47"><operator pos:start="53:35" pos:end="53:35">&amp;</operator><name pos:start="53:36" pos:end="53:47">border_glyph</name></expr></argument>, <argument pos:start="53:50" pos:end="53:59"><expr pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:59"><name pos:start="53:50" pos:end="53:50">s</name><operator pos:start="53:51" pos:end="53:52">-&gt;</operator><name pos:start="53:53" pos:end="53:59">stroker</name></name></expr></argument>, <argument pos:start="53:62" pos:end="53:62"><expr pos:start="53:62" pos:end="53:62"><literal type="number" pos:start="53:62" pos:end="53:62">0</literal></expr></argument>, <argument pos:start="53:65" pos:end="53:65"><expr pos:start="53:65" pos:end="53:65"><literal type="number" pos:start="53:65" pos:end="53:65">0</literal></expr></argument>)</argument_list></call> <operator pos:start="53:68" pos:end="53:69">||</operator>

            <call pos:start="55:13" pos:end="55:74"><name pos:start="55:13" pos:end="55:30">FT_Glyph_To_Bitmap</name><argument_list pos:start="55:31" pos:end="55:74">(<argument pos:start="55:32" pos:end="55:44"><expr pos:start="55:32" pos:end="55:44"><operator pos:start="55:32" pos:end="55:32">&amp;</operator><name pos:start="55:33" pos:end="55:44">border_glyph</name></expr></argument>, <argument pos:start="55:47" pos:end="55:67"><expr pos:start="55:47" pos:end="55:67"><name pos:start="55:47" pos:end="55:67">FT_RENDER_MODE_NORMAL</name></expr></argument>, <argument pos:start="55:70" pos:end="55:70"><expr pos:start="55:70" pos:end="55:70"><literal type="number" pos:start="55:70" pos:end="55:70">0</literal></expr></argument>, <argument pos:start="55:73" pos:end="55:73"><expr pos:start="55:73" pos:end="55:73"><literal type="number" pos:start="55:73" pos:end="55:73">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:77" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:23">

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:34">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

            <goto pos:start="59:13" pos:end="59:23">goto <name pos:start="59:18" pos:end="59:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:52"><expr pos:start="63:9" pos:end="63:51"><name pos:start="63:9" pos:end="63:19">bitmapglyph</name> <operator pos:start="63:21" pos:end="63:21">=</operator> <operator pos:start="63:23" pos:end="63:23">(</operator><name pos:start="63:24" pos:end="63:37">FT_BitmapGlyph</name><operator pos:start="63:38" pos:end="63:38">)</operator> <name pos:start="63:40" pos:end="63:51">border_glyph</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:51"><expr pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:13">glyph</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:28">border_bitmap</name></name> <operator pos:start="65:30" pos:end="65:30">=</operator> <name pos:start="65:32" pos:end="65:50"><name pos:start="65:32" pos:end="65:42">bitmapglyph</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:50">bitmap</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:70">(<expr pos:start="69:9" pos:end="69:69"><call pos:start="69:9" pos:end="69:69"><name pos:start="69:9" pos:end="69:26">FT_Glyph_To_Bitmap</name><argument_list pos:start="69:27" pos:end="69:69">(<argument pos:start="69:28" pos:end="69:39"><expr pos:start="69:28" pos:end="69:39"><name pos:start="69:28" pos:end="69:39"><name pos:start="69:28" pos:end="69:32">glyph</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:39">glyph</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:62"><expr pos:start="69:42" pos:end="69:62"><name pos:start="69:42" pos:end="69:62">FT_RENDER_MODE_NORMAL</name></expr></argument>, <argument pos:start="69:65" pos:end="69:65"><expr pos:start="69:65" pos:end="69:65"><literal type="number" pos:start="69:65" pos:end="69:65">0</literal></expr></argument>, <argument pos:start="69:68" pos:end="69:68"><expr pos:start="69:68" pos:end="69:68"><literal type="number" pos:start="69:68" pos:end="69:68">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:72" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:19">

        <expr_stmt pos:start="71:9" pos:end="71:31"><expr pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:19">goto <name pos:start="73:14" pos:end="73:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:49"><expr pos:start="77:5" pos:end="77:48"><name pos:start="77:5" pos:end="77:15">bitmapglyph</name> <operator pos:start="77:17" pos:end="77:17">=</operator> <operator pos:start="77:19" pos:end="77:19">(</operator><name pos:start="77:20" pos:end="77:33">FT_BitmapGlyph</name><operator pos:start="77:34" pos:end="77:34">)</operator> <operator pos:start="77:36" pos:end="77:36">*</operator><name pos:start="77:37" pos:end="77:48"><name pos:start="77:37" pos:end="77:41">glyph</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:48">glyph</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:45"><expr pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:9">glyph</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:17">bitmap</name></name>      <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:44"><name pos:start="81:26" pos:end="81:36">bitmapglyph</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:44">bitmap</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:9">glyph</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:22">bitmap_left</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:42"><name pos:start="83:26" pos:end="83:36">bitmapglyph</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:42">left</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:42"><expr pos:start="85:5" pos:end="85:41"><name pos:start="85:5" pos:end="85:21"><name pos:start="85:5" pos:end="85:9">glyph</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:21">bitmap_top</name></name>  <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:41"><name pos:start="85:26" pos:end="85:36">bitmapglyph</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:41">top</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:56"><expr pos:start="87:5" pos:end="87:55"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:9">glyph</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:18">advance</name></name>     <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:50"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:32">face</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:39">glyph</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:48">advance</name><operator pos:start="87:49" pos:end="87:49">.</operator><name pos:start="87:50" pos:end="87:50">x</name></name> <operator pos:start="87:52" pos:end="87:53">&gt;&gt;</operator> <literal type="number" pos:start="87:55" pos:end="87:55">6</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="91:5" pos:end="91:83">/* measure text height to calculate text_height (or the maximum text height) */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:73"><expr pos:start="93:5" pos:end="93:72"><call pos:start="93:5" pos:end="93:72"><name pos:start="93:5" pos:end="93:21">FT_Glyph_Get_CBox</name><argument_list pos:start="93:22" pos:end="93:72">(<argument pos:start="93:23" pos:end="93:35"><expr pos:start="93:23" pos:end="93:35"><operator pos:start="93:23" pos:end="93:23">*</operator><name pos:start="93:24" pos:end="93:35"><name pos:start="93:24" pos:end="93:28">glyph</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:35">glyph</name></name></expr></argument>, <argument pos:start="93:38" pos:end="93:57"><expr pos:start="93:38" pos:end="93:57"><name pos:start="93:38" pos:end="93:57">ft_glyph_bbox_pixels</name></expr></argument>, <argument pos:start="93:60" pos:end="93:71"><expr pos:start="93:60" pos:end="93:71"><operator pos:start="93:60" pos:end="93:60">&amp;</operator><name pos:start="93:61" pos:end="93:71"><name pos:start="93:61" pos:end="93:65">glyph</name><operator pos:start="93:66" pos:end="93:67">-&gt;</operator><name pos:start="93:68" pos:end="93:71">bbox</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:39">/* cache the newly created glyph */</comment>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:39">(<expr pos:start="99:9" pos:end="99:38"><operator pos:start="99:9" pos:end="99:9">!</operator><operator pos:start="99:10" pos:end="99:10">(</operator><name pos:start="99:11" pos:end="99:14">node</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <call pos:start="99:18" pos:end="99:37"><name pos:start="99:18" pos:end="99:35">av_tree_node_alloc</name><argument_list pos:start="99:36" pos:end="99:37">()</argument_list></call><operator pos:start="99:38" pos:end="99:38">)</operator></expr>)</condition> <block pos:start="99:41" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:19">

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:29"><name pos:start="101:15" pos:end="101:21">AVERROR</name><argument_list pos:start="101:22" pos:end="101:29">(<argument pos:start="101:23" pos:end="101:28"><expr pos:start="101:23" pos:end="101:28"><name pos:start="101:23" pos:end="101:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:19">goto <name pos:start="103:14" pos:end="103:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:56"><expr pos:start="107:5" pos:end="107:55"><call pos:start="107:5" pos:end="107:55"><name pos:start="107:5" pos:end="107:18">av_tree_insert</name><argument_list pos:start="107:19" pos:end="107:55">(<argument pos:start="107:20" pos:end="107:29"><expr pos:start="107:20" pos:end="107:29"><operator pos:start="107:20" pos:end="107:20">&amp;</operator><name pos:start="107:21" pos:end="107:29"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:29">glyphs</name></name></expr></argument>, <argument pos:start="107:32" pos:end="107:36"><expr pos:start="107:32" pos:end="107:36"><name pos:start="107:32" pos:end="107:36">glyph</name></expr></argument>, <argument pos:start="107:39" pos:end="107:47"><expr pos:start="107:39" pos:end="107:47"><name pos:start="107:39" pos:end="107:47">glyph_cmp</name></expr></argument>, <argument pos:start="107:50" pos:end="107:54"><expr pos:start="107:50" pos:end="107:54"><operator pos:start="107:50" pos:end="107:50">&amp;</operator><name pos:start="107:51" pos:end="107:54">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="113:27"><if pos:start="111:5" pos:end="113:27">if <condition pos:start="111:8" pos:end="111:18">(<expr pos:start="111:9" pos:end="111:17"><name pos:start="111:9" pos:end="111:17">glyph_ptr</name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:27"><block_content pos:start="113:9" pos:end="113:27">

        <expr_stmt pos:start="113:9" pos:end="113:27"><expr pos:start="113:9" pos:end="113:26"><operator pos:start="113:9" pos:end="113:9">*</operator><name pos:start="113:10" pos:end="113:18">glyph_ptr</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:26">glyph</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="115:5" pos:end="115:13">return <expr pos:start="115:12" pos:end="115:12"><literal type="number" pos:start="115:12" pos:end="115:12">0</literal></expr>;</return>



<label pos:start="119:1" pos:end="119:6"><name pos:start="119:1" pos:end="119:5">error</name>:</label>

    <if_stmt pos:start="121:5" pos:end="123:32"><if pos:start="121:5" pos:end="123:32">if <condition pos:start="121:8" pos:end="121:14">(<expr pos:start="121:9" pos:end="121:13"><name pos:start="121:9" pos:end="121:13">glyph</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:32"><block_content pos:start="123:9" pos:end="123:32">

        <expr_stmt pos:start="123:9" pos:end="123:32"><expr pos:start="123:9" pos:end="123:31"><call pos:start="123:9" pos:end="123:31"><name pos:start="123:9" pos:end="123:16">av_freep</name><argument_list pos:start="123:17" pos:end="123:31">(<argument pos:start="123:18" pos:end="123:30"><expr pos:start="123:18" pos:end="123:30"><operator pos:start="123:18" pos:end="123:18">&amp;</operator><name pos:start="123:19" pos:end="123:30"><name pos:start="123:19" pos:end="123:23">glyph</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:30">glyph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:21"><expr pos:start="125:5" pos:end="125:20"><call pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:12">av_freep</name><argument_list pos:start="125:13" pos:end="125:20">(<argument pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:19"><operator pos:start="125:14" pos:end="125:14">&amp;</operator><name pos:start="125:15" pos:end="125:19">glyph</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:20"><expr pos:start="127:5" pos:end="127:19"><call pos:start="127:5" pos:end="127:19"><name pos:start="127:5" pos:end="127:12">av_freep</name><argument_list pos:start="127:13" pos:end="127:19">(<argument pos:start="127:14" pos:end="127:18"><expr pos:start="127:14" pos:end="127:18"><operator pos:start="127:14" pos:end="127:14">&amp;</operator><name pos:start="127:15" pos:end="127:18">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:15">return <expr pos:start="129:12" pos:end="129:14"><name pos:start="129:12" pos:end="129:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
