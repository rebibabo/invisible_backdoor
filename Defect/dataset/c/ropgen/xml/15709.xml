<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15709.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">gdb_set_cpu_pc</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:38"><name pos:start="1:28" pos:end="1:35">GDBState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:52">target_ulong</name></type> <name pos:start="1:54" pos:end="1:55">pc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="52:0">

<cpp:if pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:24"><call pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:24">(<argument pos:start="5:13" pos:end="5:23"><expr pos:start="5:13" pos:end="5:23"><name pos:start="5:13" pos:end="5:23">TARGET_I386</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><call pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:25">cpu_synchronize_state</name><argument_list pos:start="7:26" pos:end="7:35">(<argument pos:start="7:27" pos:end="7:34"><expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:34">c_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="12:0"><expr pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:12">c_cpu</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:17">eip</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <name pos:start="9:21" pos:end="9:22">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="11:1" pos:end="11:26">#<cpp:directive pos:start="11:2" pos:end="11:5">elif</cpp:directive> <expr pos:start="11:7" pos:end="11:26"><call pos:start="11:7" pos:end="11:26"><name pos:start="11:7" pos:end="11:13">defined</name> <argument_list pos:start="11:15" pos:end="11:26">(<argument pos:start="11:16" pos:end="11:25"><expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:25">TARGET_PPC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">c_cpu</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">nip</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:22">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="15:1" pos:end="15:28">#<cpp:directive pos:start="15:2" pos:end="15:5">elif</cpp:directive> <expr pos:start="15:7" pos:end="15:28"><call pos:start="15:7" pos:end="15:28"><name pos:start="15:7" pos:end="15:13">defined</name> <argument_list pos:start="15:15" pos:end="15:28">(<argument pos:start="15:16" pos:end="15:27"><expr pos:start="15:16" pos:end="15:27"><name pos:start="15:16" pos:end="15:27">TARGET_SPARC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:12">c_cpu</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:16">pc</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:21">pc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">c_cpu</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">npc</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:22">pc</name> <operator pos:start="19:24" pos:end="19:24">+</operator> <literal type="number" pos:start="19:26" pos:end="19:26">4</literal></expr>;</expr_stmt>

<cpp:elif pos:start="21:1" pos:end="21:26">#<cpp:directive pos:start="21:2" pos:end="21:5">elif</cpp:directive> <expr pos:start="21:7" pos:end="21:26"><call pos:start="21:7" pos:end="21:26"><name pos:start="21:7" pos:end="21:13">defined</name> <argument_list pos:start="21:15" pos:end="21:26">(<argument pos:start="21:16" pos:end="21:25"><expr pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:25">TARGET_ARM</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:12">c_cpu</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:18">regs</name><index pos:start="23:19" pos:end="23:22">[<expr pos:start="23:20" pos:end="23:21"><literal type="number" pos:start="23:20" pos:end="23:21">15</literal></expr>]</index></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:27">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="25:1" pos:end="25:26">#<cpp:directive pos:start="25:2" pos:end="25:5">elif</cpp:directive> <expr pos:start="25:7" pos:end="25:26"><call pos:start="25:7" pos:end="25:26"><name pos:start="25:7" pos:end="25:13">defined</name> <argument_list pos:start="25:15" pos:end="25:26">(<argument pos:start="25:16" pos:end="25:25"><expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:25">TARGET_SH4</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="27:5" pos:end="30:0"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">c_cpu</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:16">pc</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:21">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="29:1" pos:end="29:27">#<cpp:directive pos:start="29:2" pos:end="29:5">elif</cpp:directive> <expr pos:start="29:7" pos:end="29:27"><call pos:start="29:7" pos:end="29:27"><name pos:start="29:7" pos:end="29:13">defined</name> <argument_list pos:start="29:15" pos:end="29:27">(<argument pos:start="29:16" pos:end="29:26"><expr pos:start="29:16" pos:end="29:26"><name pos:start="29:16" pos:end="29:26">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="31:5" pos:end="34:0"><expr pos:start="31:5" pos:end="31:31"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:12">c_cpu</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">active_tc</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:26">PC</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:31">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="33:1" pos:end="33:33">#<cpp:directive pos:start="33:2" pos:end="33:5">elif</cpp:directive> <expr pos:start="33:7" pos:end="33:33"><call pos:start="33:7" pos:end="33:33"><name pos:start="33:7" pos:end="33:13">defined</name> <argument_list pos:start="33:15" pos:end="33:33">(<argument pos:start="33:16" pos:end="33:32"><expr pos:start="33:16" pos:end="33:32"><name pos:start="33:16" pos:end="33:32">TARGET_MICROBLAZE</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">c_cpu</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:19">sregs</name><index pos:start="35:20" pos:end="35:26">[<expr pos:start="35:21" pos:end="35:25"><name pos:start="35:21" pos:end="35:25">SR_PC</name></expr>]</index></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:31">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="37:1" pos:end="37:27">#<cpp:directive pos:start="37:2" pos:end="37:5">elif</cpp:directive> <expr pos:start="37:7" pos:end="37:27"><call pos:start="37:7" pos:end="37:27"><name pos:start="37:7" pos:end="37:13">defined</name> <argument_list pos:start="37:15" pos:end="37:27">(<argument pos:start="37:16" pos:end="37:26"><expr pos:start="37:16" pos:end="37:26"><name pos:start="37:16" pos:end="37:26">TARGET_CRIS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="39:5" pos:end="42:0"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:12">c_cpu</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:16">pc</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:21">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="41:1" pos:end="41:28">#<cpp:directive pos:start="41:2" pos:end="41:5">elif</cpp:directive> <expr pos:start="41:7" pos:end="41:28"><call pos:start="41:7" pos:end="41:28"><name pos:start="41:7" pos:end="41:13">defined</name> <argument_list pos:start="41:15" pos:end="41:28">(<argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:27">TARGET_ALPHA</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="43:5" pos:end="46:0"><expr pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:16"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">c_cpu</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:16">pc</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <name pos:start="43:20" pos:end="43:21">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="45:1" pos:end="45:28">#<cpp:directive pos:start="45:2" pos:end="45:5">elif</cpp:directive> <expr pos:start="45:7" pos:end="45:28"><call pos:start="45:7" pos:end="45:28"><name pos:start="45:7" pos:end="45:13">defined</name> <argument_list pos:start="45:15" pos:end="45:28">(<argument pos:start="45:16" pos:end="45:27"><expr pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:27">TARGET_S390X</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><call pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:25">cpu_synchronize_state</name><argument_list pos:start="47:26" pos:end="47:35">(<argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:34">c_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="52:0"><expr pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:22"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:12">c_cpu</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:17">psw</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:22">addr</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:27">pc</name></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
